{"version":3,"file":"ngl.umd.js","sources":["../../src/utils.ts","../../src/utils/registry.ts","../../src/math/math-utils.ts","../../src/color/colormaker.ts","../../src/selection/selection-constants.ts","../../src/selection/selection-parser.ts","../../src/selection/selection-test.ts","../../src/selection/selection.ts","../../src/color/selection-colormaker.ts","../../src/color/colormaker-registry.ts","../../src/parser/parser-registry.ts","../../src/worker/worker-utils.ts","../../src/worker/worker-registry.ts","../../src/globals.ts","../../src/streamer/streamer.ts","../../src/streamer/file-streamer.ts","../../src/streamer/network-streamer.ts","../../src/loader/loader.ts","../../src/loader/parser-loader.ts","../../src/script.ts","../../src/loader/script-loader.ts","../../src/loader/loader-utils.ts","../../src/writer/writer.ts","../../src/writer/pdb-writer.ts","../../src/writer/sdf-writer.ts","../../src/utils/io-buffer.ts","../../src/writer/stl-writer.ts","../../src/utils/counter.ts","../../src/viewer/stats.ts","../../src/shader/shader-utils.ts","../../src/viewer/viewer-constants.ts","../../src/viewer/tiled-renderer.ts","../../src/math/math-constants.ts","../../src/math/array-utils.ts","../../src/viewer/viewer-utils.ts","../../src/viewer/gl-utils.ts","../../src/viewer/viewer.ts","../../src/constants.ts","../../src/stage/mouse-observer.ts","../../src/controls/trackball-controls.ts","../../src/controls/picking-proxy.ts","../../src/controls/picking-controls.ts","../../src/controls/viewer-controls.ts","../../src/animation/animation.ts","../../src/controls/animation-controls.ts","../../src/utils/queue.ts","../../src/representation/representation.ts","../../src/worker/worker.ts","../../src/worker/worker-pool.ts","../../src/math/vector-utils.ts","../../src/geometry/dash.ts","../../src/geometry/primitive.ts","../../src/geometry/spatial-hash.ts","../../src/store/store.ts","../../src/store/contact-store.ts","../../src/utils/bitarray.ts","../../src/utils/adjacency-list.ts","../../src/chemistry/interactions/features.ts","../../src/structure/structure-constants.ts","../../src/chemistry/geometry.ts","../../src/chemistry/valence-model.ts","../../src/structure/data.ts","../../src/chemistry/functional-groups.ts","../../src/chemistry/interactions/charged.ts","../../src/chemistry/interactions/hydrogen-bonds.ts","../../src/chemistry/interactions/metal-binding.ts","../../src/chemistry/interactions/hydrophobic.ts","../../src/chemistry/interactions/halogen-bonds.ts","../../src/chemistry/interactions/refine-contacts.ts","../../src/chemistry/interactions/contact.ts","../../src/utils/picker.ts","../../src/surface/marching-cubes.ts","../../src/math/matrix-utils.ts","../../src/surface/surface-utils.ts","../../src/surface/surface.ts","../../src/surface/volume.ts","../../src/buffer/buffer.ts","../../src/buffer/mesh-buffer.ts","../../src/buffer/surface-buffer.ts","../../src/buffer/doublesided-buffer.ts","../../src/buffer/contour-buffer.ts","../../src/representation/surface-representation.ts","../../src/controls/mouse-actions.ts","../../src/controls/mouse-controls.ts","../../src/controls/key-actions.ts","../../src/controls/key-controls.ts","../../src/stage/picking-behavior.ts","../../src/stage/mouse-behavior.ts","../../src/stage/animation-behavior.ts","../../src/stage/key-behavior.ts","../../src/component/annotation.ts","../../src/controls/component-controls.ts","../../src/utils/radius-factory.ts","../../src/math/principal-axes.ts","../../src/surface/filtered-volume.ts","../../src/store/bond-hash.ts","../../src/store/bond-store.ts","../../src/store/atom-store.ts","../../src/store/residue-store.ts","../../src/store/chain-store.ts","../../src/store/model-store.ts","../../src/geometry/helixorient.ts","../../src/geometry/helixbundle.ts","../../src/utils/binary-heap.ts","../../src/utils/kdtree.ts","../../src/proxy/atom-proxy.ts","../../src/geometry/kdtree.ts","../../src/symmetry/symmetry-constants.ts","../../src/symmetry/symmetry-utils.ts","../../src/symmetry/assembly.ts","../../src/structure/structure-builder.ts","../../src/structure/structure-utils.ts","../../src/store/atom-type.ts","../../src/store/atom-map.ts","../../src/store/residue-type.ts","../../src/store/residue-map.ts","../../src/proxy/bond-proxy.ts","../../src/proxy/residue-proxy.ts","../../src/proxy/polymer.ts","../../src/proxy/chain-proxy.ts","../../src/proxy/model-proxy.ts","../../src/structure/structure.ts","../../src/geometry/shape.ts","../../src/representation/buffer-representation.ts","../../src/buffer/geometry-buffer.ts","../../src/buffer/spheregeometry-buffer.ts","../../src/buffer/mapped-buffer.ts","../../src/buffer/mappedquad-buffer.ts","../../src/buffer/sphereimpostor-buffer.ts","../../src/buffer/sphere-buffer.ts","../../src/buffer/point-buffer.ts","../../src/representation/dot-representation.ts","../../src/buffer/image-buffer.ts","../../src/surface/volume-slice.ts","../../src/representation/slice-representation.ts","../../src/representation/representation-utils.ts","../../src/component/element.ts","../../src/component/representation-element.ts","../../src/component/component.ts","../../src/component/collection.ts","../../src/component/representation-collection.ts","../../src/component/trajectory-element.ts","../../src/trajectory/frames.ts","../../src/align/superposition.ts","../../src/trajectory/trajectory-player.ts","../../src/trajectory/trajectory.ts","../../src/trajectory/frames-trajectory.ts","../../src/trajectory/structure-trajectory.ts","../../src/trajectory/remote-trajectory.ts","../../src/trajectory/callback-trajectory.ts","../../src/trajectory/trajectory-utils.ts","../../src/structure/structure-view.ts","../../src/align/alignment.ts","../../src/align/align-utils.ts","../../src/component/structure-component.ts","../../src/component/surface-component.ts","../../src/component/volume-component.ts","../../src/component/component-collection.ts","../../src/stage/stage.ts","../../src/component/shape-component.ts","../../node_modules/tslib/tslib.es6.js","../../src/color/atomindex-colormaker.ts","../../src/color/bfactor-colormaker.ts","../../src/color/chainid-colormaker.ts","../../src/color/chainindex-colormaker.ts","../../src/color/chainname-colormaker.ts","../../src/color/densityfit-colormaker.ts","../../src/color/electrostatic-colormaker.ts","../../src/color/element-colormaker.ts","../../src/color/entityindex-colormaker.ts","../../src/color/entitytype-colormaker.ts","../../src/color/geoquality-colormaker.ts","../../src/color/hydrophobicity-colormaker.ts","../../src/color/modelindex-colormaker.ts","../../src/color/moleculetype-colormaker.ts","../../src/color/occupancy-colormaker.ts","../../src/color/partialcharge-colormaker.ts","../../src/color/random-colormaker.ts","../../src/color/randomcoilindex-colormaker.ts","../../src/color/residueindex-colormaker.ts","../../src/color/resname-colormaker.ts","../../src/color/sstruc-colormaker.ts","../../src/color/structuredata-colormaker.ts","../../src/color/uniform-colormaker.ts","../../src/color/value-colormaker.ts","../../src/color/volume-colormaker.ts","../../src/representation/structure-representation.ts","../../src/representation/measurement-representation.ts","../../src/utils/edt.ts","../../src/buffer/text-buffer.ts","../../src/buffer/wideline-buffer.ts","../../src/representation/angle-representation.ts","../../src/buffer/cylindergeometry-buffer.ts","../../src/buffer/mappedalignedbox-buffer.ts","../../src/buffer/cylinderimpostor-buffer.ts","../../src/buffer/cylinder-buffer.ts","../../src/representation/axes-representation.ts","../../src/representation/ballandstick-representation.ts","../../src/representation/backbone-representation.ts","../../src/representation/base-representation.ts","../../src/geometry/spline.ts","../../src/buffer/tubemesh-buffer.ts","../../src/representation/cartoon-representation.ts","../../src/representation/contact-representation.ts","../../src/representation/dihedral-representation.ts","../../src/representation/dihedral-histogram-representation.ts","../../src/representation/distance-representation.ts","../../src/buffer/vector-buffer.ts","../../src/representation/helixorient-representation.ts","../../src/representation/licorice-representation.ts","../../src/buffer/mappedbox-buffer.ts","../../src/buffer/hyperballstickimpostor-buffer.ts","../../src/buffer/hyperballstick-buffer.ts","../../src/representation/hyperball-representation.ts","../../src/utils/label-factory.ts","../../src/representation/label-representation.ts","../../src/representation/line-representation.ts","../../src/geometry/grid.ts","../../src/surface/edt-surface.ts","../../src/surface/av-surface.ts","../../src/surface/molecular-surface.ts","../../src/representation/molecularsurface-representation.ts","../../src/representation/point-representation.ts","../../src/buffer/ribbon-buffer.ts","../../src/representation/ribbon-representation.ts","../../src/representation/rocket-representation.ts","../../src/representation/rope-representation.ts","../../src/representation/spacefill-representation.ts","../../src/buffer/trace-buffer.ts","../../src/representation/trace-representation.ts","../../src/representation/tube-representation.ts","../../src/representation/unitcell-representation.ts","../../src/representation/validation-representation.ts","../../src/buffer/cone-buffer.ts","../../src/viewer/geometry-group.ts","../../src/buffer/arrow-buffer.ts","../../src/buffer/box-buffer.ts","../../src/buffer/ellipsoid-buffer.ts","../../src/buffer/octahedron-buffer.ts","../../src/buffer/tetrahedron-buffer.ts","../../src/buffer/torus-buffer.ts","../../src/parser/parser.ts","../../src/parser/structure-parser.ts","../../src/structure/entity.ts","../../src/symmetry/unitcell.ts","../../src/parser/pdb-parser.ts","../../src/parser/cif-parser.ts","../../src/parser/gro-parser.ts","../../lib/mmtf.es6.js","../../src/parser/mmtf-parser.ts","../../src/parser/mol2-parser.ts","../../src/parser/pdbqt-parser.ts","../../src/parser/pqr-parser.ts","../../src/parser/sdf-parser.ts","../../src/parser/prmtop-parser.ts","../../src/parser/psf-parser.ts","../../src/parser/top-parser.ts","../../src/parser/trajectory-parser.ts","../../src/parser/dcd-parser.ts","../../src/utils/netcdf-reader.ts","../../src/parser/nctraj-parser.ts","../../src/parser/trr-parser.ts","../../src/parser/xtc-parser.ts","../../src/parser/volume-parser.ts","../../src/parser/cube-parser.ts","../../src/parser/dsn6-parser.ts","../../src/parser/dx-parser.ts","../../src/parser/dxbin-parser.ts","../../src/parser/mrc-parser.ts","../../src/parser/xplor-parser.ts","../../src/parser/kin-parser.ts","../../src/parser/surface-parser.ts","../../src/parser/obj-parser.ts","../../src/parser/ply-parser.ts","../../src/parser/csv-parser.ts","../../src/parser/json-parser.ts","../../src/parser/msgpack-parser.ts","../../src/parser/netcdf-parser.ts","../../src/parser/text-parser.ts","../../src/utils/parse-xml.ts","../../src/parser/xml-parser.ts","../../src/structure/validation.ts","../../src/parser/validation-parser.ts","../../lib/pako_inflate.es6.js","../../src/utils/gzip-decompressor.ts","../../src/datasource/datasource.ts","../../src/datasource/rcsb-datasource.ts","../../src/datasource/pubchem-datasource.ts","../../src/datasource/passthrough-datasource.ts","../../src/datasource/alphafold-datasource.ts","../../src/datasource/static-datasource.ts","../../src/datasource/mdsrv-datasource.ts","../../src/ui/parameters.ts","../../src/version.ts"],"sourcesContent":["/**\r\n * @file Utils\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector2, Vector3, Matrix4, Quaternion } from 'three'\r\n\r\nexport function getQuery (id: string) {\r\n  if (typeof window === 'undefined') return undefined\r\n\r\n  const a = new RegExp(`${id}=([^&#=]*)`)\r\n  const m = a.exec(window.location.search)\r\n\r\n  if (m) {\r\n    return decodeURIComponent(m[1])\r\n  } else {\r\n    return undefined\r\n  }\r\n}\r\n\r\nexport function boolean (value: any) {\r\n  if (!value) {\r\n    return false\r\n  }\r\n\r\n  if (typeof value === 'string') {\r\n    return /^1|true|t|yes|y$/i.test(value)\r\n  }\r\n\r\n  return true\r\n}\r\n\r\nexport function defaults (value: any, defaultValue: any) {\r\n  return value !== undefined ? value : defaultValue\r\n}\r\n\r\nexport function createParams<T> (params: {[k in keyof T]?: any}, defaultParams: T) {\r\n  const o: any = Object.assign({}, params)\r\n  for (const k in defaultParams) {\r\n    const value = params[k]\r\n    if (value === undefined) o[k] = defaultParams[k]\r\n  }\r\n  return o as T\r\n}\r\n\r\nexport function updateParams<T> (params: T, newParams: {[k in keyof T]?: any}) {\r\n  for (const k in newParams) {\r\n    const value = newParams[k]\r\n    if (value !== undefined) params[k] = value\r\n  }\r\n  return params as T\r\n}\r\n\r\nexport function pick (object: { [index: string]: any }) {\r\n  const properties = [].slice.call(arguments, 1)\r\n  return properties.reduce((a: { [index: string]: any }, e: any) => {\r\n    a[ e ] = object[ e ]\r\n    return a\r\n  }, {})\r\n}\r\n\r\nexport function flatten (array: any[], ret: any[]) {\r\n  ret = defaults(ret, [])\r\n  for (let i = 0; i < array.length; i++) {\r\n    if (Array.isArray(array[i])) {\r\n      flatten(array[i], ret)\r\n    } else {\r\n      ret.push(array[i])\r\n    }\r\n  }\r\n  return ret\r\n}\r\n\r\nexport function getProtocol () {\r\n  const protocol = window.location.protocol\r\n  return protocol.match(/http(s)?:/gi) === null ? 'http:' : protocol\r\n}\r\n\r\nexport function getBrowser () {\r\n  if (typeof window === 'undefined') return false\r\n\r\n  const ua = window.navigator.userAgent\r\n\r\n  if (/Opera|OPR/.test(ua)) {\r\n    return 'Opera'\r\n  } else if (/Chrome/i.test(ua)) {\r\n    return 'Chrome'\r\n  } else if (/Firefox/i.test(ua)) {\r\n    return 'Firefox'\r\n  } else if (/Mobile(\\/.*)? Safari/i.test(ua)) {\r\n    return 'Mobile Safari'\r\n  } else if (/MSIE/i.test(ua)) {\r\n    return 'Internet Explorer'\r\n  } else if (/Safari/i.test(ua)) {\r\n    return 'Safari'\r\n  }\r\n\r\n  return false\r\n}\r\n\r\nexport function getAbsolutePath (relativePath: string) {\r\n  const loc = window.location\r\n  const pn = loc.pathname\r\n  const basePath = pn.substring(0, pn.lastIndexOf('/') + 1)\r\n\r\n  return loc.origin + basePath + relativePath\r\n}\r\n\r\nexport function deepCopy (src: any) {\r\n  if (typeof src !== 'object') {\r\n    return src\r\n  }\r\n\r\n  const dst: { [index: string]: any } = Array.isArray(src) ? [] : {}\r\n\r\n  for (let key in src) {\r\n    dst[ key ] = deepCopy(src[ key ])\r\n  }\r\n\r\n  return dst\r\n}\r\n\r\nexport function deepEqual(a: any, b: any) {\r\n  // from https://github.com/epoberezkin/fast-deep-equal MIT\r\n  if (a === b) return true;\r\n\r\n  const arrA = Array.isArray(a)\r\n  const arrB = Array.isArray(b)\r\n\r\n  if (arrA && arrB) {\r\n    if (a.length !== b.length) return false\r\n    for (let i = 0; i < a.length; i++) {\r\n      if (!deepEqual(a[i], b[i])) return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  if (arrA !== arrB) return false\r\n\r\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\r\n    const keys = Object.keys(a)\r\n    if (keys.length !== Object.keys(b).length) return false;\r\n\r\n    const dateA = a instanceof Date\r\n    const dateB = b instanceof Date\r\n    if (dateA && dateB) return a.getTime() === b.getTime()\r\n    if (dateA !== dateB) return false\r\n\r\n    const regexpA = a instanceof RegExp\r\n    const regexpB = b instanceof RegExp\r\n    if (regexpA && regexpB) return a.toString() === b.toString()\r\n    if (regexpA !== regexpB) return false\r\n\r\n    for (let i = 0; i < keys.length; i++) {\r\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false\r\n    }\r\n\r\n    for (let i = 0; i < keys.length; i++) {\r\n      if(!deepEqual(a[keys[i]], b[keys[i]])) return false\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  return false\r\n}\r\n\r\nfunction openUrl (url: string) {\r\n  const opened = window.open(url, '_blank')\r\n  if (!opened) {\r\n    window.location.href = url\r\n  }\r\n}\r\n\r\nexport function download (data: Blob|string, downloadName = 'download') {\r\n  // using ideas from https://github.com/eligrey/FileSaver.js/blob/master/FileSaver.js\r\n\r\n  if (!data) return\r\n\r\n  const isSafari = getBrowser() === 'Safari'\r\n  const isChromeIos = /CriOS\\/[\\d]+/.test(window.navigator.userAgent)\r\n\r\n  const a = document.createElement('a')\r\n\r\n  function open (str: string) {\r\n    openUrl(isChromeIos ? str : str.replace(/^data:[^;]*;/, 'data:attachment/file;'))\r\n  }\r\n\r\n  if (typeof navigator !== 'undefined' && (navigator as any).msSaveOrOpenBlob) {\r\n    // native saveAs in IE 10+\r\n    (navigator as any).msSaveOrOpenBlob(data, downloadName)\r\n  } else if ((isSafari || isChromeIos) && FileReader) {\r\n    if (data instanceof Blob) {\r\n      // no downloading of blob urls in Safari\r\n      var reader = new FileReader()\r\n      reader.onloadend = function () {\r\n        open(reader.result as string)\r\n      }\r\n      reader.readAsDataURL(data)\r\n    } else {\r\n      open(data)\r\n    }\r\n  } else {\r\n    let objectUrlCreated = false\r\n    if (data instanceof Blob) {\r\n      data = URL.createObjectURL(data)\r\n      objectUrlCreated = true\r\n    }\r\n\r\n    if ('download' in a) {\r\n      // download link available\r\n      a.style.display = 'hidden'\r\n      document.body.appendChild(a)\r\n      a.href = data\r\n      a.download = downloadName\r\n      a.target = '_blank'\r\n      a.click()\r\n      document.body.removeChild(a)\r\n    } else {\r\n      openUrl(data)\r\n    }\r\n\r\n    if (objectUrlCreated) {\r\n      window.URL.revokeObjectURL(data)\r\n    }\r\n  }\r\n}\r\n\r\nexport function submit (url: string, data: FormData, callback: Function, onerror: Function) {\r\n  const xhr = new XMLHttpRequest()\r\n  xhr.open('POST', url)\r\n\r\n  xhr.addEventListener('load', function () {\r\n    if (xhr.status === 200 || xhr.status === 304) {\r\n      callback(xhr.response)\r\n    } else {\r\n      if (typeof onerror === 'function') {\r\n        onerror(xhr.status)\r\n      }\r\n    }\r\n  }, false)\r\n\r\n  xhr.send(data)\r\n}\r\n\r\ninterface HTMLInputEvent extends Event {\r\n  target: HTMLInputElement & EventTarget\r\n}\r\n\r\nexport function open (callback: Function, extensionList = ['*']) {\r\n  const fileInput = document.createElement('input')\r\n  fileInput.type = 'file'\r\n  fileInput.multiple = true\r\n  fileInput.style.display = 'hidden'\r\n  document.body.appendChild(fileInput)\r\n  fileInput.accept = '.' + extensionList.join(',.')\r\n  fileInput.addEventListener('change', function (e: HTMLInputEvent) {\r\n    callback(e.target.files)\r\n  }, false)\r\n\r\n  fileInput.click()\r\n}\r\n\r\nexport function throttle (func: Function, wait: number, options: { leading?: boolean, trailing?: boolean }) {\r\n  // from http://underscorejs.org/docs/underscore.html\r\n\r\n  let context: any\r\n  let args: any\r\n  let result: any\r\n  let timeout: any = null\r\n  let previous = 0\r\n\r\n  if (!options) options = {}\r\n\r\n  function later () {\r\n    previous = options.leading === false ? 0 : Date.now()\r\n    timeout = null\r\n    result = func.apply(context, args)\r\n    if (!timeout) context = args = null\r\n  }\r\n\r\n  return function throttle (this: any) {\r\n    var now = Date.now()\r\n    if (!previous && options.leading === false) previous = now\r\n    var remaining = wait - (now - previous)\r\n    context = this\r\n    args = arguments\r\n    if (remaining <= 0 || remaining > wait) {\r\n      if (timeout) {\r\n        clearTimeout(timeout)\r\n        timeout = null\r\n      }\r\n      previous = now\r\n      result = func.apply(context, args)\r\n      if (!timeout) context = args = null\r\n    } else if (!timeout && options.trailing !== false) {\r\n      timeout = setTimeout(later, remaining)\r\n    }\r\n\r\n    return result\r\n  }\r\n}\r\n\r\nexport function lexicographicCompare<T> (elm1: T, elm2: T) {\r\n  if (elm1 < elm2) return -1\r\n  if (elm1 > elm2) return 1\r\n  return 0\r\n}\r\n\r\n/**\r\n * Does a binary search to get the index of an element in the input array\r\n * @function\r\n * @example\r\n * var array = [ 1, 2, 3, 4, 5, 6 ];\r\n * var element = 4;\r\n * binarySearchIndexOf( array, element );  // returns 3\r\n *\r\n * @param {Array} array - sorted array\r\n * @param {Anything} element - element to search for in the array\r\n * @param {Function} [compareFunction] - compare function\r\n * @return {Number} the index of the element or -1 if not in the array\r\n */\r\nexport function binarySearchIndexOf<T> (array: T[], element: T, compareFunction = lexicographicCompare) {\r\n  let low = 0\r\n  let high = array.length - 1\r\n  while (low <= high) {\r\n    const mid = (low + high) >> 1\r\n    const cmp = compareFunction(element, array[ mid ])\r\n    if (cmp > 0) {\r\n      low = mid + 1\r\n    } else if (cmp < 0) {\r\n      high = mid - 1\r\n    } else {\r\n      return mid\r\n    }\r\n  }\r\n  return -low - 1\r\n}\r\n\r\nexport function binarySearchForLeftRange (array: number[], leftRange: number) {\r\n  let high = array.length - 1\r\n  if (array[ high ] < leftRange) return -1\r\n  let low = 0\r\n  while (low <= high) {\r\n    const mid = (low + high) >> 1\r\n    if (array[ mid ] >= leftRange) {\r\n      high = mid - 1\r\n    } else {\r\n      low = mid + 1\r\n    }\r\n  }\r\n  return high + 1\r\n}\r\n\r\nexport function binarySearchForRightRange (array: number[], rightRange: number) {\r\n  if (array[ 0 ] > rightRange) return -1\r\n  let low = 0\r\n  let high = array.length - 1\r\n  while (low <= high) {\r\n    const mid = (low + high) >> 1\r\n    if (array[ mid ] > rightRange) {\r\n      high = mid - 1\r\n    } else {\r\n      low = mid + 1\r\n    }\r\n  }\r\n  return low - 1\r\n}\r\n\r\nexport function rangeInSortedArray (array: number[], min: number, max: number) {\r\n  const indexLeft = binarySearchForLeftRange(array, min)\r\n  const indexRight = binarySearchForRightRange(array, max)\r\n  if (indexLeft === -1 || indexRight === -1 || indexLeft > indexRight) {\r\n    return 0\r\n  } else {\r\n    return indexRight - indexLeft + 1\r\n  }\r\n}\r\n\r\nexport function dataURItoImage (dataURI: string) {\r\n  const img = document.createElement('img')\r\n  img.src = dataURI\r\n  return img\r\n}\r\n\r\nexport function uniqueArray (array: any[]) {\r\n  return array.sort().filter(function (value, index, sorted) {\r\n    return (index === 0) || (value !== sorted[ index - 1 ])\r\n  })\r\n}\r\n\r\n// String/arraybuffer conversion\r\n\r\nexport function uint8ToString (u8a: Uint8Array) {\r\n  const chunkSize = 0x7000\r\n\r\n  if (u8a.length > chunkSize) {\r\n    const c = []\r\n\r\n    for (let i = 0; i < u8a.length; i += chunkSize) {\r\n      c.push(String.fromCharCode.apply(\r\n        null, u8a.subarray(i, i + chunkSize)\r\n      ))\r\n    }\r\n\r\n    return c.join('')\r\n  } else {\r\n    return String.fromCharCode.apply(null, u8a)\r\n  }\r\n}\r\n\r\nexport function uint8ToLines (u8a: Uint8Array, chunkSize = 1024 * 1024 * 10, newline = '\\n') {\r\n  let partialLine = ''\r\n  let lines: string[] = []\r\n\r\n  for (let i = 0; i < u8a.length; i += chunkSize) {\r\n    const str = uint8ToString(u8a.subarray(i, i + chunkSize))\r\n    const idx = str.lastIndexOf(newline)\r\n\r\n    if (idx === -1) {\r\n      partialLine += str\r\n    } else {\r\n      const str2 = partialLine + str.substr(0, idx)\r\n      lines = lines.concat(str2.split(newline))\r\n\r\n      if (idx === str.length - newline.length) {\r\n        partialLine = ''\r\n      } else {\r\n        partialLine = str.substr(idx + newline.length)\r\n      }\r\n    }\r\n  }\r\n\r\n  if (partialLine !== '') {\r\n    lines.push(partialLine)\r\n  }\r\n\r\n  return lines\r\n}\r\n\r\nexport type TypedArrayString = 'int8'|'int16'|'int32'|'uint8'|'uint16'|'uint32'|'float32'\r\nexport function getTypedArray (arrayType: TypedArrayString, arraySize: number) {\r\n  switch (arrayType) {\r\n    case 'int8':\r\n      return new Int8Array(arraySize)\r\n    case 'int16':\r\n      return new Int16Array(arraySize)\r\n    case 'int32':\r\n      return new Int32Array(arraySize)\r\n    case 'uint8':\r\n      return new Uint8Array(arraySize)\r\n    case 'uint16':\r\n      return new Uint16Array(arraySize)\r\n    case 'uint32':\r\n      return new Uint32Array(arraySize)\r\n    case 'float32':\r\n      return new Float32Array(arraySize)\r\n    default:\r\n      throw new Error('arrayType unknown: ' + arrayType)\r\n  }\r\n}\r\n\r\nexport function getUintArray (sizeOrArray: any, maxUint: number) {  // TODO\r\n  const TypedArray = maxUint > 65535 ? Uint32Array : Uint16Array\r\n  return new TypedArray(sizeOrArray)\r\n}\r\n\r\nexport function ensureArray (value: any) {\r\n  return Array.isArray(value) ? value : [value]\r\n}\r\n\r\nexport function ensureBuffer (a: any) {  // TODO\r\n  return (a.buffer && a.buffer instanceof ArrayBuffer) ? a.buffer : a\r\n}\r\n\r\nfunction _ensureClassFromArg (arg: any, constructor: { new (arg: any): any }) {\r\n  return arg instanceof constructor ? arg : new constructor(arg)\r\n}\r\n\r\nfunction _ensureClassFromArray (array: any, constructor: { new (): any }) {\r\n  if (array === undefined) {\r\n    array = new constructor()\r\n  } else if (Array.isArray(array)) {\r\n    array = new constructor().fromArray(array)\r\n  }\r\n  return array\r\n}\r\n\r\nexport function ensureVector2 (v?: number[]|Vector2) {\r\n  return _ensureClassFromArray(v, Vector2)\r\n}\r\n\r\nexport function ensureVector3 (v?: number[]|Vector3) {\r\n  return _ensureClassFromArray(v, Vector3)\r\n}\r\n\r\nexport function ensureMatrix4 (m?: number[]|Matrix4) {\r\n  return _ensureClassFromArray(m, Matrix4)\r\n}\r\n\r\nexport function ensureQuaternion (q?: number[]|Quaternion) {\r\n  return _ensureClassFromArray(q, Quaternion)\r\n}\r\n\r\nexport function ensureFloat32Array (a?: number[]|Float32Array) {\r\n  return _ensureClassFromArg(a, Float32Array)\r\n}\r\n\r\nexport interface RingBuffer<T> {\r\n  has: (value: T) => boolean\r\n  get: (value: number) => T\r\n  push: (value: T) => void\r\n  count: number\r\n  data: T[]\r\n  clear: () => void\r\n}\r\n\r\nexport function createRingBuffer<T> (length: number): RingBuffer<T> {\r\n  let pointer = 0\r\n  let count = 0\r\n  const buffer: T[] = []\r\n\r\n  return {\r\n    has: function (value: any) { return buffer.indexOf(value) !== -1 },\r\n    get: function (idx: number) { return buffer[idx] },\r\n    push: function (item: any) {\r\n      buffer[pointer] = item\r\n      pointer = (length + pointer + 1) % length\r\n      ++count\r\n    },\r\n    get count () { return count },\r\n    get data () { return buffer.slice(0, Math.min(count, length)) },\r\n    clear: function () {\r\n      count = 0\r\n      pointer = 0\r\n      buffer.length = 0\r\n    }\r\n  }\r\n}\r\n\r\nexport interface SimpleDict<K, V> {\r\n  has: (k: K) => boolean\r\n  add: (k: K, v: V) => void\r\n  del: (k: K) => void\r\n  values: V[]\r\n}\r\n\r\nexport function createSimpleDict<K, V> (): SimpleDict<K, V> {\r\n  const set: { [k: string]: V } = {}\r\n\r\n  return {\r\n    has: function (k: K) { return set[JSON.stringify(k)] !== undefined },\r\n    add: function (k: K, v: V) { set[JSON.stringify(k)] = v },\r\n    del: function (k: K) { delete set[JSON.stringify(k)] },\r\n    get values () { return Object.keys(set).map(k => set[k]) }\r\n  }\r\n}\r\n\r\nexport interface SimpleSet<T> {\r\n  has: (value: T) => boolean\r\n  add: (value: T) => void\r\n  del: (value: T) => void\r\n  list: T[]\r\n}\r\n\r\nexport function createSimpleSet<T> (): SimpleSet<T> {\r\n  const set: { [k: string]: T } = {}\r\n\r\n  return {\r\n    has: function (v: T) { return set[JSON.stringify(v)] !== undefined },\r\n    add: function (v: T) { set[JSON.stringify(v)] = v },\r\n    del: function (v: T) { delete set[JSON.stringify(v)] },\r\n    get list () { return Object.keys(set).map(k => set[k]) },\r\n  }\r\n}\r\n","/**\r\n * @file Registry\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { defaults } from '../utils'\r\n\r\nfunction toLowerCaseString (value: string) {\r\n  return defaults(value, '').toString().toLowerCase()\r\n}\r\n\r\nexport default class Registry {\r\n  name: string\r\n  private _dict: {[k: string]: any}\r\n\r\n  constructor (name: string) {\r\n    this.name = name\r\n    this._dict = {}\r\n  }\r\n\r\n  add (key: string, value: any) {\r\n    this._dict[ toLowerCaseString(key) ] = value\r\n  }\r\n\r\n  get (key: string) {\r\n    return this._dict[ toLowerCaseString(key) ]\r\n  }\r\n\r\n  get names () {\r\n    return Object.keys(this._dict)\r\n  }\r\n}","/**\r\n * @file Math Utils\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nexport function degToRad (deg: number) {\r\n  return deg * 0.01745  // deg * Math.PI / 180\r\n}\r\n\r\nexport function radToDeg (rad: number) {\r\n  return rad * 57.29578  // rad * 180 / Math.PI\r\n}\r\n\r\n// http://www.broofa.com/Tools/Math.uuid.htm\r\nconst chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('')\r\nconst uuid = new Array(36)\r\n\r\nexport function generateUUID () {\r\n  let rnd = 0\r\n  let r\r\n\r\n  for (let i = 0; i < 36; i++) {\r\n    if (i === 8 || i === 13 || i === 18 || i === 23) {\r\n      uuid[ i ] = '-'\r\n    } else if (i === 14) {\r\n      uuid[ i ] = '4'\r\n    } else {\r\n      if (rnd <= 0x02) rnd = 0x2000000 + (Math.random() * 0x1000000) | 0\r\n      r = rnd & 0xf\r\n      rnd = rnd >> 4\r\n      uuid[ i ] = chars[ (i === 19) ? (r & 0x3) | 0x8 : r ]\r\n    }\r\n  }\r\n\r\n  return uuid.join('')\r\n}\r\n\r\nexport function countSetBits (i: number) {\r\n  i = i - ((i >> 1) & 0x55555555)\r\n  i = (i & 0x33333333) + ((i >> 2) & 0x33333333)\r\n  return (((i + (i >> 4)) & 0x0F0F0F0F) * 0x01010101) >> 24\r\n}\r\n\r\nexport function normalize (value: number, min: number, max: number) {\r\n  return (value - min) / (max - min)\r\n}\r\n\r\nexport function clamp (value: number, min: number, max: number) {\r\n  return Math.max(min, Math.min(max, value))\r\n}\r\n\r\nexport function pclamp (value: number) {\r\n  return clamp(value, 0, 100)\r\n}\r\n\r\nexport function saturate (value: number) {\r\n  return clamp(value, 0, 1)\r\n}\r\n\r\nexport function lerp (start: number, stop: number, alpha: number) {\r\n  return start + (stop - start) * alpha\r\n}\r\n\r\nexport function spline (p0: number, p1: number, p2: number, p3: number, t: number, tension: number) {\r\n  const v0 = (p2 - p0) * tension\r\n  const v1 = (p3 - p1) * tension\r\n  const t2 = t * t\r\n  const t3 = t * t2\r\n  return (2 * p1 - 2 * p2 + v0 + v1) * t3 +\r\n         (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 +\r\n         v0 * t + p1\r\n}\r\n\r\nexport function smoothstep (min: number, max: number, x: number) {\r\n  x = saturate(normalize(x, min, max))\r\n  return x * x * (3 - 2 * x)\r\n}\r\n\r\nexport function smootherstep (min: number, max: number, x: number) {\r\n  x = saturate(normalize(x, min, max))\r\n  return x * x * x * (x * (x * 6 - 15) + 10)\r\n}\r\n\r\nexport function smootheststep (min: number, max: number, x: number) {\r\n  x = saturate(normalize(x, min, max))\r\n  return (\r\n    -20 * Math.pow(x, 7) +\r\n     70 * Math.pow(x, 6) -\r\n     84 * Math.pow(x, 5) +\r\n     35 * Math.pow(x, 4)\r\n  )\r\n}\r\n\r\nexport function almostIdentity (value: number, start: number, stop: number) {\r\n  if (value > start) return value\r\n  const a = 2 * stop - start\r\n  const b = 2 * start - 3 * stop\r\n  const t = value / start\r\n  return (a * t + b) * t * t + stop\r\n}","/**\r\n * @file Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3, Color } from 'three'\r\nimport * as chroma from 'chroma-js'\r\n\r\nimport { createParams } from '../utils'\r\nimport { NumberArray } from '../types'\r\nimport Structure from '../structure/structure'\r\nimport Surface from '../surface/surface'\r\nimport Volume from '../surface/volume'\r\nimport AtomProxy from '../proxy/atom-proxy'\r\nimport BondProxy from '../proxy/bond-proxy'\r\n\r\nexport type ColorMode = 'rgb'|'hsv'|'hsl'|'hsi'|'lab'|'hcl'\r\nexport type ColorSpace = 'sRGB' | 'linear'\r\n\r\n/**\r\n * Internal color space for all colors (global).\r\n * Colors are always specified as sRGB; if this is set to\r\n * 'linear' then colors get linearized when used internally\r\n * as vertex or texture colors.\r\n * @see setColorSpace/getColorSpace.\r\n */\r\nvar colorSpace: ColorSpace = 'sRGB' // default: don't linearize\r\n\r\n/** Set the global internal color space for colormakers */\r\nexport function setColorSpace(space: ColorSpace) {\r\n  colorSpace = space\r\n}\r\n\r\n/** Get the global internal color space for colormakers */\r\nexport function getColorSpace() {\r\n  return colorSpace\r\n}\r\n\r\nexport const ScaleDefaultParameters = {\r\n  scale: 'uniform' as string|string[],\r\n  mode: 'hcl' as ColorMode,\r\n  domain: [ 0, 1 ] as number[],\r\n  value: 0xFFFFFF,\r\n  reverse: false,\r\n}\r\nexport type ScaleParameters = typeof ScaleDefaultParameters\r\n\r\nexport interface ColorData {\r\n  atomData?: number[],\r\n  bondData?: number[]\r\n}\r\n\r\nexport interface ColormakerParameters extends ScaleParameters {\r\n  structure?: Structure\r\n  volume?: Volume\r\n  surface?: Surface\r\n  data?: ColorData\r\n}\r\n\r\nexport type StuctureColormakerParams = { structure: Structure } & Partial<ColormakerParameters>\r\nexport type VolumeColormakerParams = { volume: Volume } & Partial<ColormakerParameters>\r\nexport type ColormakerScale = (v: number) => number\r\nexport type ColormakerConstructor = new (...p: ConstructorParameters<typeof Colormaker>) => Colormaker\r\n\r\nconst tmpColor = new Color()\r\n\r\n/** Decorator for optionally linearizing a numeric color */\r\ntype colorFuncType = (value: any, fromTo?: boolean) => number // decorator applies to functions with this shape\r\nexport function manageColor<T extends {parameters: ColormakerParameters}>\r\n  (_target: Object,\r\n   _name: string | symbol,\r\n   descriptor: TypedPropertyDescriptor<colorFuncType>): PropertyDescriptor {\r\n    const originalMethod = descriptor.value\r\n    const linearize: colorFuncType = function (this: T, value: any, fromTo?: boolean) {\r\n      let result = originalMethod!.bind(this, value, fromTo)()\r\n      if (colorSpace == 'linear') {\r\n        tmpColor.set(result)\r\n        tmpColor.convertSRGBToLinear()\r\n        return tmpColor.getHex()\r\n      } else {\r\n        return result\r\n      }\r\n    }\r\n    descriptor.value = linearize\r\n    return descriptor\r\n  }\r\n\r\n/**\r\n * Class for making colors.\r\n * @interface\r\n */\r\nabstract class Colormaker {\r\n  parameters: ColormakerParameters\r\n  atomProxy?: AtomProxy\r\n\r\n  /**\r\n   * Create a colormaker instance\r\n   * @param  {ColormakerParameters} params - colormaker parameter\r\n   */\r\n  constructor (params: Partial<ColormakerParameters> = {}) {\r\n    this.parameters = createParams(params, ScaleDefaultParameters)\r\n\r\n    if (typeof this.parameters.value === 'string') {\r\n      this.parameters.value = tmpColor.set(this.parameters.value).getHex()\r\n    }\r\n\r\n    if (this.parameters.structure) {\r\n      this.atomProxy = this.parameters.structure.getAtomProxy()\r\n    }\r\n  }\r\n\r\n  getScale (params: Partial<ScaleParameters> = {}) {\r\n    const p = createParams(params, this.parameters)\r\n\r\n    if (p.scale === 'rainbow') {\r\n      p.scale = [ 'red', 'orange', 'yellow', 'green', 'blue' ]\r\n    } else if (p.scale === 'rwb') {\r\n      p.scale = [ 'red', 'white', 'blue' ]\r\n    }\r\n\r\n    if (p.reverse) {\r\n      p.domain = p.domain.slice().reverse()\r\n    }\r\n    return chroma\r\n      .scale(p.scale as any)  // TODO\r\n      .mode(p.mode)\r\n      .domain(p.domain)\r\n      .out('num' as any)  // returns RGB color as numeric (not string \"#ffffff\")\r\n  }\r\n\r\n  /**\r\n   * save a color to an array\r\n   * @param  {Integer} color - hex color value\r\n   * @param  {Array|TypedArray} array - destination\r\n   * @param  {Integer} offset - index into the array\r\n   * @return {Array} the destination array\r\n   */\r\n  colorToArray (color: number, array: NumberArray = [], offset = 0) {\r\n    array[ offset ] = (color >> 16 & 255) / 255\r\n    array[ offset + 1 ] = (color >> 8 & 255) / 255\r\n    array[ offset + 2 ] = (color & 255) / 255\r\n\r\n    return array\r\n  }\r\n\r\n  atomColor? (atom: AtomProxy): number\r\n\r\n  /**\r\n   * save an atom color to an array\r\n   * @param  {AtomProxy} atom - atom to get color for\r\n   * @param  {Array|TypedArray} array - destination\r\n   * @param  {Integer} offset - index into the array\r\n   * @return {Array} the destination array\r\n   */\r\n  atomColorToArray (atom: AtomProxy, array: NumberArray, offset: number) {\r\n    return this.colorToArray(\r\n      this.atomColor ? this.atomColor(atom) : 0x000000, array, offset\r\n    )\r\n  }\r\n\r\n  /**\r\n   * return the color for an bond\r\n   * @param  {BondProxy} bond - bond to get color for\r\n   * @param  {Boolean} fromTo - whether to use the first or second atom of the bond\r\n   * @return {Integer} hex bond color\r\n   */\r\n  bondColor (bond: BondProxy, fromTo: boolean) {\r\n    if (this.atomProxy && this.atomColor) {\r\n      this.atomProxy.index = fromTo ? bond.atomIndex1 : bond.atomIndex2\r\n      return this.atomColor(this.atomProxy)\r\n    } else {\r\n      return 0x000000\r\n    }\r\n  }\r\n\r\n  /**\r\n   * safe a bond color to an array\r\n   * @param  {BondProxy} bond - bond to get color for\r\n   * @param  {Boolean} fromTo - whether to use the first or second atom of the bond\r\n   * @param  {Array|TypedArray} array - destination\r\n   * @param  {Integer} offset - index into the array\r\n   * @return {Array} the destination array\r\n   */\r\n  bondColorToArray (bond: BondProxy, fromTo: boolean, array: NumberArray, offset: number) {\r\n    return this.colorToArray(\r\n      this.bondColor(bond, fromTo), array, offset\r\n    )\r\n  }\r\n\r\n  volumeColor? (index: number): number\r\n\r\n  /**\r\n   * safe a volume cell color to an array\r\n   * @param  {Integer} index - volume cell index\r\n   * @param  {Array|TypedArray} array - destination\r\n   * @param  {Integer} offset - index into the array\r\n   * @return {Array} the destination array\r\n   */\r\n  volumeColorToArray (index: number, array: NumberArray, offset: number) {\r\n    return this.colorToArray(\r\n      this.volumeColor ? this.volumeColor(index) : 0x000000, array, offset\r\n    )\r\n  }\r\n\r\n  positionColor? (position: Vector3): number\r\n\r\n  /**\r\n   * safe a color for coordinates in space to an array\r\n   * @param  {Vector3} coords - xyz coordinates\r\n   * @param  {Array|TypedArray} array - destination\r\n   * @param  {Integer} offset - index into the array\r\n   * @return {Array} the destination array\r\n   */\r\n  positionColorToArray (coords: Vector3, array: NumberArray, offset: number) {\r\n    return this.colorToArray(\r\n      this.positionColor ? this.positionColor(coords) : 0x000000, array, offset\r\n    )\r\n  }\r\n}\r\n\r\nexport default Colormaker\r\n","/**\r\n * @file Selection Constants\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nexport enum kwd {\r\n  PROTEIN = 1,\r\n  NUCLEIC = 2,\r\n  RNA = 3,\r\n  DNA = 4,\r\n  POLYMER = 5,\r\n  WATER = 6,\r\n  HELIX = 7,\r\n  SHEET = 8,\r\n  TURN = 9,\r\n  BACKBONE = 10,\r\n  SIDECHAIN = 11,\r\n  ALL = 12,\r\n  HETERO = 13,\r\n  ION = 14,\r\n  SACCHARIDE = 15,\r\n  SUGAR = 15,\r\n  BONDED = 16,\r\n  RING = 17,\r\n  AROMATICRING = 18,\r\n  METAL = 19,\r\n  POLARH = 20,\r\n  NONE = 21\r\n}\r\n\r\nexport const SelectAllKeyword = [ '*', '', 'ALL' ]\r\nexport const SelectNoneKeyword = [ 'NONE' ]\r\n\r\nexport const AtomOnlyKeywords = [\r\n  kwd.BACKBONE, kwd.SIDECHAIN, kwd.BONDED, kwd.RING, kwd.AROMATICRING, kwd.METAL, kwd.POLARH\r\n]\r\n\r\nexport const ChainKeywords = [\r\n  kwd.POLYMER, kwd.WATER\r\n]\r\n\r\nexport const SmallResname = [ 'ALA', 'GLY', 'SER' ]\r\nexport const NucleophilicResname = [ 'CYS', 'SER', 'THR' ]\r\nexport const HydrophobicResname = [ 'ALA', 'ILE', 'LEU', 'MET', 'PHE', 'PRO', 'TRP', 'VAL' ]\r\nexport const AromaticResname = [ 'PHE', 'TRP', 'TYR', 'HIS' ]\r\nexport const AmideResname = [ 'ASN', 'GLN' ]\r\nexport const AcidicResname = [ 'ASP', 'GLU' ]\r\nexport const BasicResname = [ 'ARG', 'HIS', 'LYS' ]\r\nexport const ChargedResname = [ 'ARG', 'ASP', 'GLU', 'HIS', 'LYS' ]\r\nexport const PolarResname = [ 'ASN', 'ARG', 'ASP', 'CYS', 'GLY', 'GLN', 'GLU', 'HIS', 'LYS', 'SER', 'THR', 'TYR' ]\r\nexport const NonpolarResname = [ 'ALA', 'ILE', 'LEU', 'MET', 'PHE', 'PRO', 'TRP', 'VAL' ]\r\nexport const CyclicResname = [ 'HIS', 'PHE', 'PRO', 'TRP', 'TYR' ]\r\nexport const AliphaticResname = [ 'ALA', 'GLY', 'ILE', 'LEU', 'VAL' ]\r\n","/**\r\n * @file Selection Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { SelectionRule, SelectionOperator } from './selection-test'\r\nimport {\r\n  kwd, SelectAllKeyword,\r\n  SmallResname, NucleophilicResname, HydrophobicResname, AromaticResname,\r\n  AmideResname, AcidicResname, BasicResname, ChargedResname,\r\n  PolarResname, NonpolarResname, CyclicResname, AliphaticResname\r\n} from './selection-constants'\r\n\r\nfunction parseSele (string: string) {\r\n  let retSelection: SelectionRule = {\r\n    operator: undefined,\r\n    rules: []\r\n  }\r\n\r\n  if (!string) {\r\n    return retSelection\r\n  }\r\n\r\n  let selection = retSelection\r\n  let newSelection: SelectionRule\r\n  let oldSelection: SelectionRule\r\n  const selectionStack: SelectionRule[] = []\r\n\r\n  string = string.replace(/\\(/g, ' ( ').replace(/\\)/g, ' ) ').trim()\r\n  if (string.charAt(0) === '(' && string.substr(-1) === ')') {\r\n    string = string.slice(1, -1).trim()\r\n  }\r\n  const chunks = string.split(/\\s+/)\r\n\r\n  // Log.log( string, chunks )\r\n\r\n  const createNewContext = (operator?: SelectionOperator) => {\r\n    newSelection = {\r\n      operator,\r\n      rules: []\r\n    }\r\n    if (selection === undefined) {\r\n      selection = newSelection\r\n      retSelection = newSelection\r\n    } else {\r\n      selection.rules!.push(newSelection)\r\n      selectionStack.push(selection)\r\n      selection = newSelection\r\n    }\r\n  }\r\n\r\n  const getPrevContext = function (operator?: SelectionOperator) {\r\n    oldSelection = selection\r\n    selection = selectionStack.pop()!\r\n    if (selection === undefined) {\r\n      createNewContext(operator)\r\n      pushRule(oldSelection)\r\n    }\r\n  }\r\n\r\n  const pushRule = function (rule: SelectionRule) {\r\n    selection.rules!.push(rule)\r\n  }\r\n\r\n  let not: false|0|1|2 = false\r\n\r\n  for (let i = 0; i < chunks.length; ++i) {\r\n    const c = chunks[ i ]\r\n    const cu = c.toUpperCase()\r\n\r\n    // handle parens\r\n\r\n    if (c === '(') {\r\n      // Log.log( \"(\" );\r\n      not = false\r\n      createNewContext()\r\n      continue\r\n    } else if (c === ')') {\r\n      // Log.log( \")\" );\r\n      getPrevContext()\r\n      if (selection.negate) {\r\n        getPrevContext()\r\n      }\r\n      continue\r\n    }\r\n\r\n    // leave 'not' context\r\n\r\n    if (not > 0) {\r\n      if (cu === 'NOT') {\r\n        not = 1\r\n      } else if (not === 1) {\r\n        not = 2\r\n      } else if (not === 2) {\r\n        not = false\r\n        getPrevContext()\r\n      } else {\r\n        throw new Error(\"something went wrong with 'not'\")\r\n      }\r\n    }\r\n\r\n    // handle logic operators\r\n\r\n    if (cu === 'AND') {\r\n      // Log.log( \"AND\" );\r\n      if (selection.operator === 'OR') {\r\n        const lastRule = selection.rules!.pop()!\r\n        createNewContext('AND')\r\n        pushRule(lastRule)\r\n      } else {\r\n        selection.operator = 'AND'\r\n      }\r\n      continue\r\n    } else if (cu === 'OR') {\r\n      // Log.log( \"OR\" );\r\n      if (selection.operator === 'AND') {\r\n        getPrevContext('OR')\r\n      } else {\r\n        selection.operator = 'OR'\r\n      }\r\n      continue\r\n    } else if (c.toUpperCase() === 'NOT') {\r\n      // Log.log( \"NOT\", j );\r\n      not = 1\r\n      createNewContext()\r\n      selection.negate = true\r\n      continue\r\n    } else {\r\n      // Log.log( \"chunk\", c, j, selection );\r\n    }\r\n\r\n    // handle keyword attributes\r\n\r\n    // ensure `cu` is not a number before testing if it is in the\r\n    // kwd enum dictionary which includes the enum numbers as well...\r\n    if (+cu !== +cu) {\r\n      const keyword = (kwd as any)[ cu ]\r\n      if (keyword !== undefined) {\r\n        pushRule({ keyword })\r\n        continue\r\n      }\r\n    }\r\n\r\n    if (cu === 'HYDROGEN') {\r\n      pushRule({\r\n        operator: 'OR',\r\n        rules: [\r\n          { element: 'H' },\r\n          { element: 'D' }\r\n        ]\r\n      })\r\n      continue\r\n    }\r\n\r\n    if (cu === 'SMALL') {\r\n      pushRule({ resname: SmallResname })\r\n      continue\r\n    }\r\n\r\n    if (cu === 'NUCLEOPHILIC') {\r\n      pushRule({ resname: NucleophilicResname })\r\n      continue\r\n    }\r\n\r\n    if (cu === 'HYDROPHOBIC') {\r\n      pushRule({ resname: HydrophobicResname })\r\n      continue\r\n    }\r\n\r\n    if (cu === 'AROMATIC') {\r\n      pushRule({ resname: AromaticResname })\r\n      continue\r\n    }\r\n\r\n    if (cu === 'AMIDE') {\r\n      pushRule({ resname: AmideResname })\r\n      continue\r\n    }\r\n\r\n    if (cu === 'ACIDIC') {\r\n      pushRule({ resname: AcidicResname })\r\n      continue\r\n    }\r\n\r\n    if (cu === 'BASIC') {\r\n      pushRule({ resname: BasicResname })\r\n      continue\r\n    }\r\n\r\n    if (cu === 'CHARGED') {\r\n      pushRule({ resname: ChargedResname })\r\n      continue\r\n    }\r\n\r\n    if (cu === 'POLAR') {\r\n      pushRule({ resname: PolarResname })\r\n      continue\r\n    }\r\n\r\n    if (cu === 'NONPOLAR') {\r\n      pushRule({ resname: NonpolarResname })\r\n      continue\r\n    }\r\n\r\n    if (cu === 'CYCLIC') {\r\n      pushRule({ resname: CyclicResname })\r\n      continue\r\n    }\r\n\r\n    if (cu === 'ALIPHATIC') {\r\n      pushRule({ resname: AliphaticResname })\r\n      continue\r\n    }\r\n\r\n    if (cu === 'SIDECHAINATTACHED') {\r\n      pushRule({\r\n        operator: 'OR',\r\n        rules: [\r\n          { keyword: kwd.SIDECHAIN },\r\n          {\r\n            operator: 'AND',\r\n            negate: false,\r\n            rules: [\r\n              { keyword: kwd.PROTEIN },\r\n              {\r\n                operator: 'OR',\r\n                negate: false,\r\n                rules: [\r\n                  { atomname: 'CA' },\r\n                  { atomname: 'BB' }\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            operator: 'AND',\r\n            negate: false,\r\n            rules: [\r\n              { resname: 'PRO' },\r\n              { atomname: 'N' }\r\n            ]\r\n          },\r\n          {\r\n            operator: 'AND',\r\n            negate: false,\r\n            rules: [\r\n              { keyword: kwd.NUCLEIC },\r\n              {\r\n                operator: 'OR',\r\n                negate: true,\r\n                rules: [\r\n                  { atomname: 'P' },\r\n                  { atomname: 'OP1' },\r\n                  { atomname: 'OP2' },\r\n                  { atomname: \"O3'\" },\r\n                  { atomname: 'O3*' },\r\n                  { atomname: \"HO3'\"},\r\n                  { atomname: \"O5'\" },\r\n                  { atomname: 'O5*' },\r\n                  { atomname: \"HO5'\"},\r\n                  { atomname: \"C5'\" },\r\n                  { atomname: 'C5*' },\r\n                  { atomname: \"H5'\" },\r\n                  { atomname: \"H5''\"}\r\n                ]\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      })\r\n      continue\r\n    }\r\n\r\n    if (cu === 'APOLARH') {\r\n      pushRule({\r\n        operator: 'AND',\r\n        negate: false,\r\n        rules: [\r\n          { element: 'H' },\r\n          {\r\n            negate: true,\r\n            operator: undefined,\r\n            rules: [\r\n              { keyword: kwd.POLARH }\r\n            ]\r\n          }\r\n        ]\r\n      })\r\n      continue\r\n    }\r\n\r\n    if (cu === 'LIGAND') {\r\n      pushRule({\r\n        operator: 'AND',\r\n        rules: [\r\n          {\r\n            operator: 'OR',\r\n            rules: [\r\n              {\r\n                operator: 'AND',\r\n                rules: [\r\n                  { keyword: kwd.HETERO },\r\n                  {\r\n                    negate: true,\r\n                    operator: undefined,\r\n                    rules: [\r\n                      { keyword: kwd.POLYMER }\r\n                    ]\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                negate: true,\r\n                operator: undefined,\r\n                rules: [\r\n                  { keyword: kwd.POLYMER }\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            negate: true,\r\n            operator: undefined,\r\n            rules: [\r\n              {\r\n                operator: 'OR',\r\n                rules: [\r\n                  { keyword: kwd.WATER },\r\n                  { keyword: kwd.ION }\r\n                ]\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      })\r\n      continue\r\n    }\r\n\r\n    if (SelectAllKeyword.indexOf(cu) !== -1) {\r\n      pushRule({ keyword: kwd.ALL })\r\n      continue\r\n    }\r\n\r\n    // handle atom expressions\r\n\r\n    if (c.charAt(0) === '@') {\r\n      const indexList = c.substr(1).split(',').map(x => parseInt(x))\r\n      indexList.sort(function (a, b) { return a - b })\r\n      pushRule({ atomindex: indexList })\r\n      continue\r\n    }\r\n\r\n    if (c.charAt(0) === '#') {\r\n      console.error('# for element selection deprecated, use _')\r\n      pushRule({ element: cu.substr(1) })\r\n      continue\r\n    }\r\n    if (c.charAt(0) === '_') {\r\n      pushRule({ element: cu.substr(1) })\r\n      continue\r\n    }\r\n\r\n    if (c[0] === '[' && c[c.length - 1] === ']') {\r\n      const resnameList = cu.substr(1, c.length - 2).split(',')\r\n      const resname = resnameList.length > 1 ? resnameList : resnameList[ 0 ]\r\n      pushRule({ resname: resname })\r\n      continue\r\n    } else if (\r\n      (c.length >= 1 && c.length <= 4) &&\r\n      c[0] !== '^' && c[0] !== ':' && c[0] !== '.' && c[0] !== '%' && c[0] !== '/' &&\r\n      isNaN(parseInt(c))\r\n    ) {\r\n      pushRule({ resname: cu })\r\n      continue\r\n    }\r\n\r\n    // there must be only one constraint per rule\r\n    // otherwise a test quickly becomes not applicable\r\n    // e.g. chainTest for chainname when resno is present too\r\n\r\n    const sele: SelectionRule = {\r\n      operator: 'AND',\r\n      rules: []\r\n    }\r\n\r\n    const model = c.split('/')\r\n    if (model.length > 1 && model[1]) {\r\n      if (isNaN(parseInt(model[1]))) {\r\n        throw new Error('model must be an integer')\r\n      }\r\n      sele.rules!.push({\r\n        model: parseInt(model[1])\r\n      })\r\n    }\r\n\r\n    const altloc = model[0].split('%')\r\n    if (altloc.length > 1) {\r\n      sele.rules!.push({\r\n        altloc: altloc[1]\r\n      })\r\n    }\r\n\r\n    const atomname = altloc[0].split('.')\r\n    if (atomname.length > 1 && atomname[1]) {\r\n      if (atomname[1].length > 4) {\r\n        throw new Error('atomname must be one to four characters')\r\n      }\r\n      sele.rules!.push({\r\n        atomname: atomname[1].substring(0, 4).toUpperCase()\r\n      })\r\n    }\r\n\r\n    const chain = atomname[0].split(':')\r\n    if (chain.length > 1 && chain[1]) {\r\n      sele.rules!.push({\r\n        chainname: chain[1]\r\n      })\r\n    }\r\n\r\n    const inscode = chain[0].split('^')\r\n    if (inscode.length > 1) {\r\n      sele.rules!.push({\r\n        inscode: inscode[1]\r\n      })\r\n    }\r\n\r\n    if (inscode[0]) {\r\n      let negate, negate2\r\n      if (inscode[0][0] === '-') {\r\n        inscode[0] = inscode[0].substr(1)\r\n        negate = true\r\n      }\r\n      if (inscode[0].includes('--')) {\r\n        inscode[0] = inscode[0].replace('--', '-')\r\n        negate2 = true\r\n      }\r\n      let resi = inscode[0].split('-')\r\n      if (resi.length === 1) {\r\n        let resiSingle = parseInt(resi[0])\r\n        if (isNaN(resiSingle)) {\r\n          throw new Error('resi must be an integer')\r\n        }\r\n        if (negate) resiSingle *= -1\r\n        sele.rules!.push({\r\n          resno: resiSingle\r\n        })\r\n      } else if (resi.length === 2) {\r\n        const resiRange = resi.map(x => parseInt(x))\r\n        if (negate) resiRange[0] *= -1\r\n        if (negate2) resiRange[1] *= -1\r\n        sele.rules!.push({\r\n          resno: [resiRange[0], resiRange[1]]\r\n        })\r\n      } else {\r\n        throw new Error(\"resi range must contain one '-'\")\r\n      }\r\n    }\r\n\r\n    // round up\r\n\r\n    if (sele.rules!.length === 1) {\r\n      pushRule(sele.rules![ 0 ])\r\n    } else if (sele.rules!.length > 1) {\r\n      pushRule(sele)\r\n    } else {\r\n      throw new Error('empty selection chunk')\r\n    }\r\n  }\r\n\r\n  // cleanup\r\n\r\n  if (\r\n    retSelection.operator === undefined &&\r\n    retSelection.rules!.length === 1 &&\r\n    retSelection.rules![ 0 ].hasOwnProperty('operator')\r\n  ) {\r\n    retSelection = retSelection.rules![ 0 ]\r\n  }\r\n\r\n  return retSelection\r\n}\r\n\r\nexport {\r\n  parseSele\r\n}\r\n","/**\r\n * @file Selection Test\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { binarySearchIndexOf, rangeInSortedArray } from '../utils'\r\nimport { kwd, AtomOnlyKeywords, ChainKeywords } from './selection-constants'\r\n\r\nimport AtomProxy from '../proxy/atom-proxy'\r\nimport ResidueProxy from '../proxy/residue-proxy'\r\nimport ChainProxy from '../proxy/chain-proxy'\r\nimport ModelProxy from '../proxy/model-proxy'\r\n\r\nexport type ProxyEntity = AtomProxy|ResidueProxy|ChainProxy|ModelProxy\r\ntype TestEntityFn = (e: ProxyEntity, s: SelectionRule) => boolean|-1\r\ntype FilterFn = (s: SelectionRule) => boolean\r\nexport type SelectionTest = false|((e: ProxyEntity) => boolean|-1)\r\n\r\nexport type SelectionOperator = 'AND'|'OR'\r\nexport interface SelectionRule {\r\n  keyword?: any\r\n  atomname?: string\r\n  element?: string\r\n  atomindex?: number[]\r\n  altloc?: string\r\n  inscode?: string\r\n  resname?: string|string[]\r\n  sstruc?: string\r\n  resno?: number|[number, number]\r\n  chainname?: string\r\n  model?: number\r\n\r\n  error?: string\r\n  rules?: SelectionRule[]\r\n  negate?: boolean\r\n  operator?: SelectionOperator\r\n}\r\n\r\nfunction atomTestFn (a: AtomProxy, s: SelectionRule) {\r\n  // returning -1 means the rule is not applicable\r\n  if (s.atomname === undefined && s.element === undefined &&\r\n    s.altloc === undefined && s.atomindex === undefined &&\r\n    s.keyword === undefined && s.inscode === undefined &&\r\n    s.resname === undefined && s.sstruc === undefined &&\r\n    s.resno === undefined && s.chainname === undefined &&\r\n    s.model === undefined\r\n  ) return -1\r\n\r\n  if (s.keyword !== undefined) {\r\n    if (s.keyword === kwd.BACKBONE && !a.isBackbone()) return false\r\n    if (s.keyword === kwd.SIDECHAIN && !a.isSidechain()) return false\r\n    if (s.keyword === kwd.BONDED && !a.isBonded()) return false\r\n    if (s.keyword === kwd.RING && !a.isRing()) return false\r\n    if (s.keyword === kwd.AROMATICRING && !a.isAromatic()) return false\r\n\r\n    if (s.keyword === kwd.HETERO && !a.isHetero()) return false\r\n    if (s.keyword === kwd.PROTEIN && !a.isProtein()) return false\r\n    if (s.keyword === kwd.NUCLEIC && !a.isNucleic()) return false\r\n    if (s.keyword === kwd.RNA && !a.isRna()) return false\r\n    if (s.keyword === kwd.DNA && !a.isDna()) return false\r\n    if (s.keyword === kwd.POLYMER && !a.isPolymer()) return false\r\n    if (s.keyword === kwd.WATER && !a.isWater()) return false\r\n    if (s.keyword === kwd.HELIX && !a.isHelix()) return false\r\n    if (s.keyword === kwd.SHEET && !a.isSheet()) return false\r\n    if (s.keyword === kwd.TURN && !a.isTurn()) return false\r\n    if (s.keyword === kwd.ION && !a.isIon()) return false\r\n    if (s.keyword === kwd.SACCHARIDE && !a.isSaccharide()) return false\r\n    if (s.keyword === kwd.METAL && !a.isMetal()) return false\r\n    if (s.keyword === kwd.POLARH && !a.isPolarHydrogen()) return false\r\n  }\r\n\r\n  if (s.atomname !== undefined && s.atomname !== a.atomname) return false\r\n  if (s.element !== undefined && s.element !== a.element) return false\r\n  if (s.altloc !== undefined && s.altloc !== a.altloc) return false\r\n\r\n  if (s.atomindex !== undefined &&\r\n      binarySearchIndexOf(s.atomindex, a.index) < 0\r\n  ) return false\r\n\r\n  if (s.resname !== undefined) {\r\n    if (Array.isArray(s.resname)) {\r\n      if (!s.resname.includes(a.resname)) return false\r\n    } else {\r\n      if (s.resname !== a.resname) return false\r\n    }\r\n  }\r\n  if (s.sstruc !== undefined && s.sstruc !== a.sstruc) return false\r\n  if (s.resno !== undefined) {\r\n    if (Array.isArray(s.resno) && s.resno.length === 2) {\r\n      if (s.resno[0] > a.resno || s.resno[1] < a.resno) return false\r\n    } else {\r\n      if (s.resno !== a.resno) return false\r\n    }\r\n  }\r\n  if (s.inscode !== undefined && s.inscode !== a.inscode) return false\r\n\r\n  if (s.chainname !== undefined && s.chainname !== a.chainname) return false\r\n  if (s.model !== undefined && s.model !== a.modelIndex) return false\r\n\r\n  return true\r\n}\r\n\r\nfunction residueTestFn (r: ResidueProxy, s: SelectionRule) {\r\n  // returning -1 means the rule is not applicable\r\n  if (s.resname === undefined && s.resno === undefined && s.inscode === undefined &&\r\n      s.sstruc === undefined && s.model === undefined && s.chainname === undefined &&\r\n      s.atomindex === undefined &&\r\n      (s.keyword === undefined || AtomOnlyKeywords.includes(s.keyword))\r\n  ) return -1\r\n\r\n  if (s.keyword !== undefined) {\r\n    if (s.keyword === kwd.HETERO && !r.isHetero()) return false\r\n    if (s.keyword === kwd.PROTEIN && !r.isProtein()) return false\r\n    if (s.keyword === kwd.NUCLEIC && !r.isNucleic()) return false\r\n    if (s.keyword === kwd.RNA && !r.isRna()) return false\r\n    if (s.keyword === kwd.DNA && !r.isDna()) return false\r\n    if (s.keyword === kwd.POLYMER && !r.isPolymer()) return false\r\n    if (s.keyword === kwd.WATER && !r.isWater()) return false\r\n    if (s.keyword === kwd.HELIX && !r.isHelix()) return false\r\n    if (s.keyword === kwd.SHEET && !r.isSheet()) return false\r\n    if (s.keyword === kwd.TURN && !r.isTurn()) return false\r\n    if (s.keyword === kwd.ION && !r.isIon()) return false\r\n    if (s.keyword === kwd.SACCHARIDE && !r.isSaccharide()) return false\r\n  }\r\n\r\n  if (s.atomindex !== undefined &&\r\n      rangeInSortedArray(s.atomindex, r.atomOffset, r.atomEnd) === 0\r\n  ) return false\r\n\r\n  if (s.resname !== undefined) {\r\n    if (Array.isArray(s.resname)) {\r\n      if (!s.resname.includes(r.resname)) return false\r\n    } else {\r\n      if (s.resname !== r.resname) return false\r\n    }\r\n  }\r\n  if (s.sstruc !== undefined && s.sstruc !== r.sstruc) return false\r\n  if (s.resno !== undefined) {\r\n    if (Array.isArray(s.resno) && s.resno.length === 2) {\r\n      if (s.resno[0] > r.resno || s.resno[1] < r.resno) return false\r\n    } else {\r\n      if (s.resno !== r.resno) return false\r\n    }\r\n  }\r\n  if (s.inscode !== undefined && s.inscode !== r.inscode) return false\r\n\r\n  if (s.chainname !== undefined && s.chainname !== r.chainname) return false\r\n  if (s.model !== undefined && s.model !== r.modelIndex) return false\r\n\r\n  return true\r\n}\r\n\r\nfunction chainTestFn (c: ChainProxy, s: SelectionRule) {\r\n  // returning -1 means the rule is not applicable\r\n  if (s.chainname === undefined && s.model === undefined && s.atomindex === undefined &&\r\n      (s.keyword === undefined || !ChainKeywords.includes(s.keyword) || !c.entity)\r\n  ) return -1\r\n\r\n  if (s.keyword !== undefined) {\r\n    if (s.keyword === kwd.POLYMER && !c.entity.isPolymer()) return false\r\n    if (s.keyword === kwd.WATER && !c.entity.isWater()) return false\r\n  }\r\n\r\n  if (s.atomindex !== undefined &&\r\n      rangeInSortedArray(s.atomindex, c.atomOffset, c.atomEnd) === 0\r\n  ) return false\r\n\r\n  if (s.chainname !== undefined && s.chainname !== c.chainname) return false\r\n\r\n  if (s.model !== undefined && s.model !== c.modelIndex) return false\r\n\r\n  return true\r\n}\r\n\r\nfunction modelTestFn (m: ModelProxy, s: SelectionRule) {\r\n  // returning -1 means the rule is not applicable\r\n  if (s.model === undefined && s.atomindex === undefined) return -1\r\n\r\n  if (s.atomindex !== undefined &&\r\n      rangeInSortedArray(s.atomindex, m.atomOffset, m.atomEnd) === 0\r\n  ) return false\r\n\r\n  if (s.model !== undefined && s.model !== m.index) return false\r\n\r\n  return true\r\n}\r\n\r\nfunction makeTest (selection: SelectionRule|null, fn: TestEntityFn) {\r\n  if (selection === null) return false\r\n  if (selection.error) return false\r\n  if (!selection.rules || selection.rules.length === 0) return false\r\n\r\n  const n = selection.rules.length\r\n\r\n  const t = !selection.negate\r\n  const f = !!selection.negate\r\n\r\n  const subTests: SelectionTest[] = []\r\n  for (let i = 0; i < n; ++i) {\r\n    const s = selection.rules[ i ]\r\n    if (s.hasOwnProperty('operator')) {\r\n      subTests[ i ] = makeTest(s, fn) as SelectionTest  // TODO\r\n    }\r\n  }\r\n\r\n  // ( x and y ) can short circuit on false\r\n  // ( x or y ) can short circuit on true\r\n  // not ( x and y )\r\n\r\n  return function test (entity: ProxyEntity) {\r\n    const and = selection.operator === 'AND'\r\n    let na = false\r\n\r\n    for (let i = 0; i < n; ++i) {\r\n      const s = selection.rules![ i ]  // TODO\r\n      let ret\r\n\r\n      if (s.hasOwnProperty('operator')) {\r\n        const test = subTests[ i ]\r\n        if (test !== false) {\r\n          ret = test(entity)\r\n        } else {\r\n          ret = -1\r\n        }\r\n\r\n        if (ret === -1) {\r\n          na = true\r\n          continue\r\n        } else if (ret === true) {\r\n          if (and) { continue } else { return t }\r\n        } else {\r\n          if (and) { return f } else { continue }\r\n        }\r\n      } else {\r\n        if (s.keyword === kwd.ALL) {\r\n          if (and) { continue } else { return t }\r\n        } else if (s.keyword === kwd.NONE) {\r\n          if (and) { continue } else { return f }\r\n        }\r\n\r\n        ret = fn(entity, s)\r\n\r\n        // console.log( entity.qualifiedName(), ret, s, selection.negate, \"t\", t, \"f\", f )\r\n\r\n        if (ret === -1) {\r\n          na = true\r\n          continue\r\n        } else if (ret === true) {\r\n          if (and) { continue } else { return t }\r\n        } else {\r\n          if (and) { return f } else { continue }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (na) {\r\n      return -1\r\n    } else {\r\n      if (and) { return t } else { return f }\r\n    }\r\n  } as SelectionTest\r\n}\r\n\r\nfunction filter (selection: SelectionRule, fn: FilterFn) {\r\n  if (selection.error) return selection\r\n    if (!selection.rules || selection.rules.length === 0) return selection\r\n\r\n  const n = selection.rules.length\r\n\r\n  const filtered: SelectionRule = {\r\n    operator: selection.operator,\r\n    rules: []\r\n  }\r\n  if (selection.hasOwnProperty('negate')) {\r\n    filtered.negate = selection.negate\r\n  }\r\n\r\n  for (let i = 0; i < n; ++i) {\r\n    const s = selection.rules[ i ]\r\n    if (s.hasOwnProperty('operator')) {\r\n      const fs = filter(s, fn)\r\n      if (fs !== null) filtered.rules!.push(fs)  // TODO\r\n    } else if (!fn(s)) {\r\n      filtered.rules!.push(s)  // TODO\r\n    }\r\n  }\r\n\r\n  if (filtered.rules!.length > 0) {  // TODO\r\n    // TODO maybe the filtered rules could be returned\r\n    // in some case, but the way how tests are applied\r\n    // e.g. when traversing a structure would also need\r\n    // to change\r\n    return selection\r\n    // return filtered;\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n\r\nfunction makeAtomTest (selection: SelectionRule, atomOnly = false) {\r\n  let filteredSelection: SelectionRule|null = selection\r\n  if (atomOnly) {\r\n    filteredSelection = filter(selection, function (s) {\r\n      if (s.keyword !== undefined && !AtomOnlyKeywords.includes(s.keyword)) return true\r\n      if (s.model !== undefined) return true\r\n      if (s.chainname !== undefined) return true\r\n      if (s.resname !== undefined) return true\r\n      if (s.resno !== undefined) return true\r\n      if (s.sstruc !== undefined) return true\r\n      return false\r\n    })\r\n  }\r\n  return makeTest(filteredSelection, atomTestFn)\r\n}\r\n\r\nfunction makeResidueTest (selection: SelectionRule, residueOnly = false) {\r\n  let filteredSelection: SelectionRule|null = selection\r\n  if (residueOnly) {\r\n    filteredSelection = filter(selection, function (s) {\r\n      if (s.keyword !== undefined && AtomOnlyKeywords.includes(s.keyword)) return true\r\n      if (s.model !== undefined) return true\r\n      if (s.chainname !== undefined) return true\r\n      if (s.atomname !== undefined) return true\r\n      if (s.element !== undefined) return true\r\n      if (s.altloc !== undefined) return true\r\n      return false\r\n    })\r\n  }\r\n  return makeTest(filteredSelection, residueTestFn)\r\n}\r\n\r\nfunction makeChainTest (selection: SelectionRule, chainOnly = false) {\r\n  let filteredSelection: SelectionRule|null = selection\r\n  if (chainOnly) {\r\n    filteredSelection = filter(selection, function (s) {\r\n      if (s.keyword !== undefined && !ChainKeywords.includes(s.keyword)) return true\r\n      // if( s.model!==undefined ) return true;\r\n      if (s.resname !== undefined) return true\r\n      if (s.resno !== undefined) return true\r\n      if (s.atomname !== undefined) return true\r\n      if (s.element !== undefined) return true\r\n      if (s.altloc !== undefined) return true\r\n      if (s.sstruc !== undefined) return true\r\n      if (s.inscode !== undefined) return true\r\n      return false\r\n    })\r\n  }\r\n  return makeTest(filteredSelection, chainTestFn)\r\n}\r\n\r\nfunction makeModelTest (selection: SelectionRule, modelOnly = false) {\r\n  let filteredSelection: SelectionRule|null = selection\r\n  if (modelOnly) {\r\n    filteredSelection = filter(selection, function (s) {\r\n      if (s.keyword !== undefined) return true\r\n      if (s.chainname !== undefined) return true\r\n      if (s.resname !== undefined) return true\r\n      if (s.resno !== undefined) return true\r\n      if (s.atomname !== undefined) return true\r\n      if (s.element !== undefined) return true\r\n      if (s.altloc !== undefined) return true\r\n      if (s.sstruc !== undefined) return true\r\n      if (s.inscode !== undefined) return true\r\n      return false\r\n    })\r\n  }\r\n  return makeTest(filteredSelection, modelTestFn)\r\n}\r\n\r\nexport {\r\n  makeAtomTest,\r\n  makeResidueTest,\r\n  makeChainTest,\r\n  makeModelTest\r\n}\r\n","/**\r\n * @file Selection\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Signal } from 'signals'\r\n\r\nimport { parseSele } from './selection-parser'\r\nimport {\r\n  SelectionTest, SelectionRule,\r\n  makeAtomTest, makeResidueTest, makeChainTest, makeModelTest\r\n} from './selection-test'\r\nimport { SelectAllKeyword, SelectNoneKeyword } from './selection-constants'\r\n\r\nexport type SelectionSignals = {\r\n  stringChanged: Signal\r\n}\r\n\r\n/**\r\n * Selection\r\n */\r\nclass Selection {\r\n  signals: SelectionSignals\r\n  string: string\r\n  selection: SelectionRule\r\n\r\n  test: SelectionTest\r\n  residueTest: SelectionTest\r\n  chainTest: SelectionTest\r\n  modelTest: SelectionTest\r\n\r\n  atomOnlyTest: SelectionTest\r\n  residueOnlyTest: SelectionTest\r\n  chainOnlyTest: SelectionTest\r\n  modelOnlyTest: SelectionTest\r\n\r\n  /**\r\n   * Create Selection\r\n   * @param {String} string - selection string, see {@tutorial selection-language}\r\n   */\r\n  constructor (string?: string) {\r\n    this.signals = {\r\n      stringChanged: new Signal()\r\n    }\r\n\r\n    this.setString(string)\r\n  }\r\n\r\n  get type () { return 'selection' }\r\n\r\n  setString (string?: string, silent?: boolean) {\r\n    if (string === undefined) string = this.string || ''\r\n    if (string === this.string) return\r\n\r\n    try {\r\n      this.selection = parseSele(string)\r\n    } catch (e) {\r\n      // Log.error( e.stack );\r\n      this.selection = { 'error': e.message }\r\n    }\r\n    const selection = this.selection\r\n\r\n    this.string = string\r\n\r\n    this.test = makeAtomTest(selection)\r\n    this.residueTest = makeResidueTest(selection)\r\n    this.chainTest = makeChainTest(selection)\r\n    this.modelTest = makeModelTest(selection)\r\n\r\n    this.atomOnlyTest = makeAtomTest(selection, true)\r\n    this.residueOnlyTest = makeResidueTest(selection, true)\r\n    this.chainOnlyTest = makeChainTest(selection, true)\r\n    this.modelOnlyTest = makeModelTest(selection, true)\r\n\r\n    if (!silent) {\r\n      this.signals.stringChanged.dispatch(this.string)\r\n    }\r\n  }\r\n\r\n  isAllSelection () {\r\n    return SelectAllKeyword.includes(this.string.toUpperCase())\r\n  }\r\n\r\n  isNoneSelection () {\r\n    return SelectNoneKeyword.includes(this.string.toUpperCase())\r\n  }\r\n}\r\n\r\nexport default Selection\r\n","/**\r\n * @file Selection Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Color } from 'three'\r\n\r\nimport { ColormakerRegistry } from '../globals'\r\nimport Selection from '../selection/selection'\r\nimport Colormaker, { ColormakerParameters } from './colormaker'\r\nimport AtomProxy from '../proxy/atom-proxy'\r\nimport Structure from '../structure/structure'\r\n\r\nexport type SelectionSchemeData = [ string, string, ColormakerParameters|undefined ]\r\n\r\n/**\r\n * Color based on {@link Selection}\r\n */\r\nclass SelectionColormaker extends Colormaker {\r\n  colormakerList: any[] = []  // TODO\r\n  selectionList: Selection[] = []\r\n\r\n  constructor (params: { structure: Structure, dataList: SelectionSchemeData[] } & Partial<ColormakerParameters>) {\r\n    super(params)\r\n\r\n    const dataList = params.dataList || []\r\n\r\n    dataList.forEach((data: SelectionSchemeData) => {\r\n      const [ scheme, sele, params = {} ] = data\r\n\r\n      if (ColormakerRegistry.hasScheme(scheme)) {\r\n        Object.assign(params, {\r\n          scheme: scheme,\r\n          structure: this.parameters.structure\r\n        })\r\n      } else {\r\n        Object.assign(params, {\r\n          scheme: 'uniform',\r\n          value: new Color(scheme).getHex()\r\n        })\r\n      }\r\n\r\n      this.colormakerList.push(ColormakerRegistry.getScheme(params as { scheme: string } & ColormakerParameters))\r\n      this.selectionList.push(new Selection(sele))\r\n    })\r\n  }\r\n\r\n  // NOT NEEDED @manageColor\r\n  atomColor (a: AtomProxy) {\r\n    for (let i = 0, n = this.selectionList.length; i < n; ++i) {\r\n      const test = this.selectionList[ i ].test\r\n      if (test && test(a)) {\r\n        return this.colormakerList[ i ].atomColor(a)\r\n      }\r\n    }\r\n\r\n    return 0xFFFFFF\r\n  }\r\n}\r\n\r\nexport default SelectionColormaker\r\n","/**\r\n * @file Colormaker Registry\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { generateUUID } from '../math/math-utils'\r\nimport Colormaker, { ColormakerConstructor, ColormakerParameters } from './colormaker'\r\nimport SelectionColormaker, { SelectionSchemeData } from './selection-colormaker'\r\nimport Structure from '../structure/structure'\r\n\r\ntype ColormakerDefinitionFunction = ((this: Colormaker, param?: ColormakerParameters) => void)\r\n\r\nconst ColormakerScales = {\r\n  '': '',\r\n\r\n    // Sequential\r\n  OrRd: '[S] Orange-Red',\r\n  PuBu: '[S] Purple-Blue',\r\n  BuPu: '[S] Blue-Purple',\r\n  Oranges: '[S] Oranges',\r\n  BuGn: '[S] Blue-Green',\r\n  YlOrBr: '[S] Yellow-Orange-Brown',\r\n  YlGn: '[S] Yellow-Green',\r\n  Reds: '[S] Reds',\r\n  RdPu: '[S] Red-Purple',\r\n  Greens: '[S] Greens',\r\n  YlGnBu: '[S] Yellow-Green-Blue',\r\n  Purples: '[S] Purples',\r\n  GnBu: '[S] Green-Blue',\r\n  Greys: '[S] Greys',\r\n  YlOrRd: '[S] Yellow-Orange-Red',\r\n  PuRd: '[S] Purple-Red',\r\n  Blues: '[S] Blues',\r\n  PuBuGn: '[S] Purple-Blue-Green',\r\n\r\n    // Diverging\r\n  Viridis: '[D] Viridis',\r\n  Spectral: '[D] Spectral',\r\n  RdYlGn: '[D] Red-Yellow-Green',\r\n  RdBu: '[D] Red-Blue',\r\n  PiYG: '[D] Pink-Yellowgreen',\r\n  PRGn: '[D] Purplered-Green',\r\n  RdYlBu: '[D] Red-Yellow-Blue',\r\n  BrBG: '[D] Brown-Bluegreen',\r\n  RdGy: '[D] Red-Grey',\r\n  PuOr: '[D] Purple-Orange',\r\n\r\n    // Qualitative\r\n  Set1: '[Q] Set1',\r\n  Set2: '[Q] Set2',\r\n  Set3: '[Q] Set3',\r\n  Dark2: '[Q] Dark2',\r\n  Paired: '[Q] Paired',\r\n  Pastel1: '[Q] Pastel1',\r\n  Pastel2: '[Q] Pastel2',\r\n  Accent: '[Q] Accent',\r\n\r\n    // Other\r\n  rainbow: '[?] Rainbow',\r\n  rwb: '[?] Red-White-Blue'\r\n}\r\n\r\nconst ColormakerModes = {\r\n  '': '',\r\n\r\n  rgb: 'Red Green Blue',\r\n  hsv: 'Hue Saturation Value',\r\n  hsl: 'Hue Saturation Lightness',\r\n  hsi: 'Hue Saturation Intensity',\r\n  lab: 'CIE L*a*b*',\r\n  hcl: 'Hue Chroma Lightness'\r\n}\r\n\r\n/**\r\n * Class for registering {@link Colormaker}s. Generally use the\r\n * global {@link src/globals.js~ColormakerRegistry} instance.\r\n */\r\nclass ColormakerRegistry {\r\n  schemes: { [k: string]: ColormakerConstructor }\r\n  userSchemes: { [k: string]: ColormakerConstructor }\r\n\r\n  constructor () {\r\n    this.schemes = {}\r\n    this.userSchemes = {}\r\n  }\r\n\r\n  getScheme (params: Partial<{ scheme: string } & ColormakerParameters>) {\r\n    const p = params || {}\r\n    const id = (p.scheme || '').toLowerCase()\r\n\r\n    let SchemeClass: ColormakerConstructor\r\n\r\n    if (id in this.schemes) {\r\n      SchemeClass = this.schemes[ id ]\r\n    } else if (id in this.userSchemes) {\r\n      SchemeClass = this.userSchemes[ id ]\r\n    } else {\r\n      //@ts-expect-error  abstract class used as a constructor\r\n      SchemeClass = Colormaker\r\n    }\r\n\r\n    return new SchemeClass(params)\r\n  }\r\n\r\n  /**\r\n   * Get an description of available schemes as an\r\n   * object with id-label as key-value pairs\r\n   * @return {Object} available schemes\r\n   */\r\n  getSchemes () {\r\n    const types: { [k: string]: string } = {}\r\n\r\n    Object.keys(this.schemes).forEach(function (k) {\r\n      types[ k ] = k\r\n    })\r\n\r\n    Object.keys(this.userSchemes).forEach(function (k) {\r\n      types[ k ] = k.split('|')[ 1 ]\r\n    })\r\n\r\n    return types\r\n  }\r\n\r\n  /**\r\n   * Get an description of available scales as an\r\n   * object with id-label as key-value pairs\r\n   * @return {Object} available scales\r\n   */\r\n  getScales () {\r\n    return ColormakerScales\r\n  }\r\n\r\n  getModes () {\r\n    return ColormakerModes\r\n  }\r\n\r\n  /**\r\n   * Add a scheme with a hardcoded id\r\n   * @param {String} id - the id\r\n   * @param {Colormaker} scheme - the colormaker\r\n   * @return {undefined}\r\n   */\r\n  add (id: string, scheme: ColormakerConstructor) {\r\n    id = id.toLowerCase()\r\n    this.schemes[ id ] = scheme\r\n  }\r\n\r\n  /**\r\n   * Register a custom scheme\r\n   *\r\n   * @example\r\n   * // Create a class with a `atomColor` method that returns a hex color.\r\n   * var schemeId = NGL.ColormakerRegistry.addScheme( function( params ){\r\n   *     this.atomColor = function( atom ){\r\n   *         if( atom.serial < 1000 ){\r\n   *             return 0x0000FF;  // blue\r\n   *         }else if( atom.serial > 2000 ){\r\n   *             return 0xFF0000;  // red\r\n   *         }else{\r\n   *             return 0x00FF00;  // green\r\n   *         }\r\n   *     };\r\n   * } );\r\n   *\r\n   * stage.loadFile( \"rcsb://3dqb.pdb\" ).then( function( o ){\r\n   *     o.addRepresentation( \"cartoon\", { color: schemeId } );  // pass schemeId here\r\n   *     o.autoView();\r\n   * } );\r\n   *\r\n   * @param {Function|Colormaker} scheme - constructor or {@link Colormaker} instance\r\n   * @param {String} label - scheme label\r\n   * @return {String} id to refer to the registered scheme\r\n   */\r\n  addScheme (scheme: ColormakerConstructor|ColormakerDefinitionFunction, label?: string) {\r\n    if (!(isColormakerSubClass(scheme))) {\r\n      scheme = this._createScheme(scheme)\r\n    }\r\n\r\n    return this._addUserScheme(scheme, label)\r\n  }\r\n\r\n  /**\r\n   * Add a user-defined scheme\r\n   * @param {Colormaker} scheme - the user-defined scheme\r\n   * @param {String} [label] - scheme label\r\n   * @return {String} id to refer to the registered scheme\r\n   */\r\n  _addUserScheme (scheme: ColormakerConstructor, label?: string) {\r\n    label = label || ''\r\n    const id = `${generateUUID()}|${label}`.toLowerCase()\r\n    this.userSchemes[ id ] = scheme\r\n\r\n    return id\r\n  }\r\n\r\n  /**\r\n   * Remove the scheme with the given id\r\n   * @param  {String} id - scheme to remove\r\n   * @return {undefined}\r\n   */\r\n  removeScheme (id: string) {\r\n    id = id.toLowerCase()\r\n    delete this.userSchemes[ id ]\r\n  }\r\n\r\n  _createScheme (constructor: ColormakerDefinitionFunction): ColormakerConstructor {\r\n    class _Colormaker extends Colormaker {\r\n      constructor (params: ColormakerParameters) {\r\n        super(params)\r\n        constructor.call(this, params)\r\n      }\r\n    }\r\n    return _Colormaker\r\n  }\r\n\r\n  /**\r\n   * Create and a selection-based coloring scheme. Supply a list with pairs\r\n   * of colorname and selection for coloring by selections. Use the last\r\n   * entry as a default (catch all) coloring definition.\r\n   *\r\n   * @example\r\n   * var schemeId = NGL.ColormakerRegistry.addSelectionScheme( [\r\n   *     [ \"red\", \"64-74 or 134-154 or 222-254 or 310-310 or 322-326\" ],\r\n   *     [ \"green\", \"311-322\" ],\r\n   *     [ \"yellow\", \"40-63 or 75-95 or 112-133 or 155-173 or 202-221 or 255-277 or 289-309\" ],\r\n   *     [ \"blue\", \"1-39 or 96-112 or 174-201 or 278-288\" ],\r\n   *     [ \"white\", \"*\" ]\r\n   * ], \"Transmembrane 3dqb\" );\r\n   *\r\n   * stage.loadFile( \"rcsb://3dqb.pdb\" ).then( function( o ){\r\n   *     o.addRepresentation( \"cartoon\", { color: schemeId } );  // pass schemeId here\r\n   *     o.autoView();\r\n   * } );\r\n   *\r\n   * @param {Array} dataList - cloror-selection pairs\r\n   * @param {String} label - scheme name\r\n   * @return {String} id to refer to the registered scheme\r\n   */\r\n  addSelectionScheme (dataList: SelectionSchemeData[], label?: string) {\r\n    class MySelectionColormaker extends SelectionColormaker {\r\n      constructor (params: { structure: Structure } & ColormakerParameters) {\r\n        super(Object.assign({ dataList }, params))\r\n      }\r\n    }\r\n\r\n    return this._addUserScheme(MySelectionColormaker, label)\r\n  }\r\n\r\n  /**\r\n   * Check if a scheme with the given id exists\r\n   * @param  {String}  id - the id to check\r\n   * @return {Boolean} flag indicating if the scheme exists\r\n   */\r\n  hasScheme (id: string) {\r\n    id = id.toLowerCase()\r\n    return id in this.schemes || id in this.userSchemes\r\n  }\r\n}\r\n\r\nfunction isColormakerSubClass (\r\n  scheme: ColormakerConstructor|((this: Colormaker, param?: ColormakerParameters) => void)\r\n): scheme is ColormakerConstructor {\r\n  return (scheme instanceof Colormaker)\r\n}\r\n\r\nexport default ColormakerRegistry\r\n","/**\r\n * @file Parser Registry\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Registry from '../utils/registry'\r\n\r\nclass ParserRegistry extends Registry {\r\n  constructor () {\r\n    super('parser')\r\n  }\r\n\r\n  __hasObjName (key: string, objName: string) {\r\n    const parser = this.get(key)\r\n    return parser && parser.prototype.__objName === objName\r\n  }\r\n\r\n  isTrajectory (key: string) {\r\n    return this.__hasObjName(key, 'frames')\r\n  }\r\n\r\n  isStructure (key: string) {\r\n    return this.__hasObjName(key, 'structure')\r\n  }\r\n\r\n  isVolume (key: string) {\r\n    return this.__hasObjName(key, 'volume')\r\n  }\r\n\r\n  isSurface (key: string) {\r\n    return this.__hasObjName(key, 'surface')\r\n  }\r\n\r\n  isBinary (key: string) {\r\n    const parser = this.get(key)\r\n    return parser && parser.prototype.isBinary\r\n  }\r\n\r\n  isXml (key: string) {\r\n    const parser = this.get(key)\r\n    return parser && parser.prototype.isXml\r\n  }\r\n\r\n  isJson (key: string) {\r\n    const parser = this.get(key)\r\n    return parser && parser.prototype.isJson\r\n  }\r\n\r\n  getTrajectoryExtensions () {\r\n    return this.names.filter(name => this.isTrajectory(name))\r\n  }\r\n\r\n  getStructureExtensions () {\r\n    return this.names.filter(name => this.isStructure(name))\r\n  }\r\n\r\n  getVolumeExtensions () {\r\n    return this.names.filter(name => this.isVolume(name))\r\n  }\r\n\r\n  getSurfaceExtensions () {\r\n    return this.names.filter(name => this.isSurface(name))\r\n  }\r\n}\r\n\r\nexport default ParserRegistry\r\n","/**\r\n * @file Worker Utils\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { uniqueArray } from '../utils'\r\n\r\nexport type FunctionWithDeps = { __deps?: Function[] } & Function\r\nexport interface WorkerEvent {\r\n  data: {\r\n    __name: string\r\n    __postId: string\r\n  }\r\n}\r\n\r\nfunction getWorkerDeps (vars: FunctionWithDeps[]) {\r\n  const deps = vars\r\n  vars.forEach(function (sym) {\r\n    if (sym.__deps) {\r\n      Array.prototype.push.apply(deps, getWorkerDeps(sym.__deps))\r\n    }\r\n  })\r\n  return deps\r\n}\r\n\r\nfunction makeWorkerString (vars: any) {\r\n  const deps = uniqueArray(getWorkerDeps(vars))\r\n  return deps.map(function (sym) {\r\n    return sym.toString()\r\n  }).join('\\n\\n\\n')\r\n}\r\n\r\nfunction onmessage (e: WorkerEvent) {\r\n  const name = e.data.__name\r\n  const postId = e.data.__postId\r\n\r\n  /* global self */\r\n  if (name === undefined) {\r\n    console.error('message __name undefined')\r\n  } else if ((self as any).func === undefined) {\r\n    console.error('worker func undefined', name)\r\n  } else {\r\n    const callback = function (aMessage: any, transferList: any[]) {\r\n      aMessage = aMessage || {}\r\n      if (postId !== undefined) aMessage.__postId = postId\r\n\r\n      try {\r\n        (self as any).postMessage(aMessage, transferList)\r\n      } catch (error) {\r\n        console.error('self.postMessage:', error);\r\n        (self as any).postMessage(aMessage)\r\n      }\r\n    };\r\n    (self as any).func(e, callback)\r\n  }\r\n}\r\n\r\nexport function makeWorkerBlob (func: Function, deps: Function[]) {\r\n  let str = \"'use strict';\\n\\n\" + makeWorkerString(deps)\r\n  str += '\\n\\n\\nself.func = ' + func.toString() + ';'\r\n  str += '\\n\\n\\nself.onmessage = ' + onmessage.toString() + ';'\r\n    // console.log(str);\r\n  return new Blob([ str ], { type: 'application/javascript' })\r\n}\r\n","/**\r\n * @file Worker Registry\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { makeWorkerBlob } from './worker-utils'\r\n\r\nclass WorkerRegistry {\r\n  activeWorkerCount = 0\r\n\r\n  private _funcDict: { [k: string]: Function } = {}\r\n  private _depsDict: { [k: string]: Function[] } = {}\r\n  private _blobDict: { [k: string]: Blob } = {}\r\n\r\n  add (name: string, func: Function, deps: Function[]) {\r\n    this._funcDict[ name ] = func\r\n    this._depsDict[ name ] = deps\r\n  }\r\n\r\n  get (name: string) {\r\n    if (!this._blobDict[ name ]) {\r\n      this._blobDict[ name ] = makeWorkerBlob(\r\n        this._funcDict[ name ], this._depsDict[ name ]\r\n      )\r\n    }\r\n    return this._blobDict[ name ]\r\n  }\r\n}\r\n\r\nexport default WorkerRegistry\r\n","/**\r\n * @file Globals\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { getBrowser, getQuery, boolean } from './utils'\r\nimport Registry from './utils/registry'\r\nimport _ColormakerRegistry from './color/colormaker-registry'\r\nimport _ParserRegistry from './parser/parser-registry'\r\nimport _WorkerRegistry from './worker/worker-registry'\r\nimport { MeasurementRepresentationParameters } from './representation/measurement-representation';\r\n\r\n/**\r\n * The browser name: \"Opera\", \"Chrome\", \"Firefox\", \"Mobile Safari\",\r\n * \"Internet Explorer\", \"Safari\" or false.\r\n */\r\nexport const Browser = getBrowser()\r\n\r\n/**\r\n * Flag indicating support for the 'passive' option for event handler\r\n */\r\nexport let SupportsPassiveEventHandler = false\r\ntry {\r\n  // Test via a getter in the options object to see if the passive property is accessed\r\n  const opts = Object.defineProperty({}, 'passive', {\r\n    get: function () {\r\n      SupportsPassiveEventHandler = true\r\n    }\r\n  })\r\n  window.addEventListener('test', e => {}, opts)\r\n} catch (e) {}\r\n\r\n/**\r\n * Flag indicating a mobile browser\r\n */\r\nexport const Mobile = typeof window !== 'undefined' ? typeof window.orientation !== 'undefined' : false\r\n\r\nexport let SupportsReadPixelsFloat = false\r\nexport function setSupportsReadPixelsFloat (value: boolean) {\r\n  SupportsReadPixelsFloat = value\r\n}\r\n\r\n/**\r\n * Flag indicating support for the `EXT_frag_depth` WebGL extension\r\n * (Always present in WebGL2)\r\n */\r\nexport let ExtensionFragDepth = false\r\nexport function setExtensionFragDepth (value: boolean) {\r\n  ExtensionFragDepth = value\r\n}\r\n\r\nexport const Log = {\r\n  log: Function.prototype.bind.call(console.log, console),\r\n  info: Function.prototype.bind.call(console.info, console),\r\n  warn: Function.prototype.bind.call(console.warn, console),\r\n  error: Function.prototype.bind.call(console.error, console),\r\n  time: Function.prototype.bind.call(console.time, console),\r\n  timeEnd: Function.prototype.bind.call(console.timeEnd, console)\r\n}\r\n\r\nexport let MeasurementDefaultParams: Partial<MeasurementRepresentationParameters> = {\r\n  color: 'green',\r\n  labelColor: 0x808080,\r\n  labelAttachment: 'bottom-center',\r\n  labelSize: 0.7,\r\n  labelZOffset: 0.5,\r\n  labelYOffset: 0.1,\r\n  labelBorder: true,\r\n  labelBorderColor: 0xd3d3d3,\r\n  labelBorderWidth: 0.25,\r\n  lineOpacity: 0.8,\r\n  linewidth: 5.0,\r\n  opacity: 0.6,\r\n\r\n  labelUnit: 'angstrom',\r\n  arcVisible: true,\r\n  planeVisible: false\r\n}\r\nexport function setMeasurementDefaultParams (params = {}) {\r\n  Object.assign(MeasurementDefaultParams, params)\r\n}\r\n\r\nexport let Debug = boolean(getQuery('debug'))\r\nexport function setDebug (value: boolean) {\r\n  Debug = value\r\n}\r\n\r\nexport const WebglErrorMessage = '<div style=\"display:flex;align-items:center;justify-content:center;height:100%;\"><p style=\"padding:15px;text-align:center;\">Your browser/graphics card does not seem to support <a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/WebGL\">WebGL</a>.<br/><br/>Find out how to get it <a target=\"_blank\" href=\"http://get.webgl.org/\">here</a>.</p></div>'\r\n\r\n/**\r\n * List of file extensions to be recognized as scripts\r\n */\r\nexport const ScriptExtensions = [ 'ngl', 'js' ]\r\n\r\nexport const WorkerRegistry = new _WorkerRegistry()\r\nexport const ColormakerRegistry = new _ColormakerRegistry()\r\nexport const DatasourceRegistry = new Registry('datasource')\r\nexport const RepresentationRegistry = new Registry('representatation')\r\nexport const ParserRegistry = new _ParserRegistry()\r\nexport const ShaderRegistry = new Registry('shader')\r\nexport const DecompressorRegistry = new Registry('decompressor')\r\nexport const ComponentRegistry = new Registry('component')\r\nexport const BufferRegistry = new Registry('buffer')\r\nexport const PickerRegistry = new Registry('picker')\r\n\r\nexport let ListingDatasource: any\r\nexport function setListingDatasource (value: any) {\r\n  ListingDatasource = value\r\n}\r\n\r\nexport let TrajectoryDatasource: any  // TODO should accept mdsrvDatasource\r\nexport function setTrajectoryDatasource (value: any) {\r\n  TrajectoryDatasource = value\r\n}\r\n","/**\r\n * @file Streamer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { DecompressorRegistry } from '../globals'\r\nimport { uint8ToString, defaults } from '../utils'\r\n\r\nexport interface StreamerParams {\r\n  compressed?: string|false\r\n  binary?: boolean\r\n  json?: boolean\r\n  xml?: boolean\r\n}\r\n\r\nabstract class Streamer {\r\n  src: any\r\n  data: any\r\n\r\n  compressed: string|false\r\n  binary: boolean\r\n  json: boolean\r\n  xml: boolean\r\n\r\n  chunkSize = 1024 * 1024 * 10\r\n  newline = '\\n'\r\n\r\n  protected __pointer = 0\r\n  protected __partialLine = ''\r\n\r\n  constructor (src: any, params: StreamerParams = {}) {\r\n    this.compressed = defaults(params.compressed, false)\r\n    this.binary = defaults(params.binary, false)\r\n    this.json = defaults(params.json, false)\r\n    this.xml = defaults(params.xml, false)\r\n\r\n    this.src = src\r\n  }\r\n\r\n  isBinary () {\r\n    return this.binary || this.compressed\r\n  }\r\n\r\n  read () {\r\n    return this._read().then(data => {\r\n      const decompressFn = this.compressed ? DecompressorRegistry.get(this.compressed) : undefined\r\n\r\n      if (this.compressed && decompressFn) {\r\n        this.data = decompressFn(data)\r\n      } else {\r\n        if ((this.binary || this.compressed) && data instanceof ArrayBuffer) {\r\n          data = new Uint8Array(data)\r\n        }\r\n        this.data = data\r\n      }\r\n\r\n      return this.data\r\n    })\r\n  }\r\n\r\n  protected abstract _read (): Promise<any>\r\n\r\n  protected _chunk (start: number, end: number) {\r\n    end = Math.min(this.data.length, end)\r\n\r\n    if (start === 0 && this.data.length === end) {\r\n      return this.data\r\n    } else {\r\n      if (this.isBinary()) {\r\n        return this.data.subarray(start, end)\r\n      } else {\r\n        return this.data.substring(start, end)\r\n      }\r\n    }\r\n  }\r\n\r\n  chunk (start: number) {\r\n    const end = start + this.chunkSize\r\n\r\n    return this._chunk(start, end)\r\n  }\r\n\r\n  peekLines (m: number) {\r\n    const data = this.data\r\n    const n = data.length\r\n\r\n    // FIXME does not work for multi-char newline\r\n    const newline = this.isBinary() ? this.newline.charCodeAt(0) : this.newline\r\n\r\n    let i\r\n    let count = 0\r\n    for (i = 0; i < n; ++i) {\r\n      if (data[ i ] === newline) ++count\r\n      if (count === m) break\r\n    }\r\n\r\n    const chunk = this._chunk(0, i + 1)\r\n    const d = this.chunkToLines(chunk, '', i > n)\r\n\r\n    return d.lines\r\n  }\r\n\r\n  chunkCount () {\r\n    return Math.floor(this.data.length / this.chunkSize) + 1\r\n  }\r\n\r\n  asText () {\r\n    return this.isBinary() ? uint8ToString(this.data) : this.data\r\n  }\r\n\r\n  chunkToLines (chunk: string|Uint8Array, partialLine: string, isLast: boolean) {\r\n    const newline = this.newline\r\n\r\n    if (!this.isBinary() && chunk.length === this.data.length) {\r\n      return {\r\n        lines: (chunk as string).split(newline),\r\n        partialLine: ''\r\n      }\r\n    }\r\n\r\n    let lines: string[] = []\r\n    const str = this.isBinary() ? uint8ToString(chunk as Uint8Array) : chunk\r\n    const idx = str.lastIndexOf(newline)\r\n\r\n    if (idx === -1) {\r\n      partialLine += str\r\n    } else {\r\n      const str2 = partialLine + str.substr(0, idx)\r\n      lines = lines.concat(str2.split(newline))\r\n\r\n      if (idx === str.length - newline.length) {\r\n        partialLine = ''\r\n      } else {\r\n        partialLine = str.substr(idx + newline.length)\r\n      }\r\n    }\r\n\r\n    if (isLast && partialLine !== '') {\r\n      lines.push(partialLine)\r\n    }\r\n\r\n    return {\r\n      lines: lines,\r\n      partialLine: partialLine\r\n    }\r\n  }\r\n\r\n  nextChunk () {\r\n    const start = this.__pointer\r\n\r\n    if (start > this.data.length) {\r\n      return undefined\r\n    }\r\n\r\n    this.__pointer += this.chunkSize\r\n    return this.chunk(start)\r\n  }\r\n\r\n  nextChunkOfLines () {\r\n    const chunk = this.nextChunk()\r\n\r\n    if (chunk === undefined) {\r\n      return undefined\r\n    }\r\n\r\n    const isLast = this.__pointer > this.data.length\r\n    const d = this.chunkToLines(chunk, this.__partialLine, isLast)\r\n\r\n    this.__partialLine = d.partialLine\r\n\r\n    return d.lines\r\n  }\r\n\r\n  eachChunk (callback: (chunk: string|Uint8Array, chunkNo: number, chunkCount: number) => void) {\r\n    const chunkSize = this.chunkSize\r\n    const n = this.data.length\r\n    const chunkCount = this.chunkCount()\r\n\r\n    for (let i = 0; i < n; i += chunkSize) {\r\n      const chunk = this.chunk(i)\r\n      const chunkNo = Math.round(i / chunkSize)\r\n\r\n      callback(chunk, chunkNo, chunkCount)\r\n    }\r\n  }\r\n\r\n  eachChunkOfLines (callback: (chunk: string[], chunkNo: number, chunkCount: number) => void) {\r\n    this.eachChunk((chunk, chunkNo, chunkCount) => {\r\n      const isLast = chunkNo === chunkCount + 1\r\n      const d = this.chunkToLines(chunk, this.__partialLine, isLast)\r\n\r\n      this.__partialLine = d.partialLine\r\n\r\n      callback(d.lines, chunkNo, chunkCount)\r\n    })\r\n  }\r\n\r\n  dispose () {\r\n    delete this.src\r\n  }\r\n}\r\n\r\nexport default Streamer\r\n","/**\r\n * @file File Streamer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Streamer from './streamer'\r\n\r\ninterface FileReaderEventTarget extends EventTarget {\r\n    result:string | ArrayBuffer | null\r\n}\r\n\r\ninterface FileReaderEvent extends ProgressEvent {\r\n    target: FileReaderEventTarget | null;\r\n}\r\n\r\nclass FileStreamer extends Streamer {\r\n  _read () {\r\n    return new Promise((resolve, reject) => {\r\n      const file = this.src\r\n      const reader = new FileReader()\r\n\r\n      reader.onload = (event: FileReaderEvent) => {\r\n        if(event.target) resolve(event.target.result)\r\n      }\r\n\r\n      // if (typeof this.onprogress === 'function') {\r\n      //   reader.onprogress = event => this.onprogress(event)\r\n      // }\r\n\r\n      reader.onerror = event => reject(event)\r\n\r\n      if (this.binary || this.compressed) {\r\n        reader.readAsArrayBuffer(file)\r\n      } else {\r\n        reader.readAsText(file)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default FileStreamer\r\n","/**\r\n * @file Network Streamer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Streamer from './streamer'\r\n\r\nclass NetworkStreamer extends Streamer {\r\n  _read () {\r\n    return new Promise((resolve, reject) => {\r\n      const url = this.src\r\n      const xhr = new XMLHttpRequest()\r\n\r\n      xhr.open('GET', url, true)\r\n\r\n      xhr.addEventListener('load', () => {\r\n        if (xhr.status === 200 || xhr.status === 304 ||\r\n            // when requesting from local file system\r\n            // the status in Google Chrome/Chromium is 0\r\n            xhr.status === 0\r\n        ) {\r\n          try {\r\n            resolve(xhr.response)\r\n          } catch (e) {\r\n            reject(e)\r\n          }\r\n        } else {\r\n          reject(xhr.statusText)\r\n        }\r\n      }, false)\r\n\r\n      // if (typeof this.onprogress === 'function') {\r\n      //   xhr.addEventListener('progress', event => this.onprogress(event), false);\r\n      // }\r\n\r\n      xhr.addEventListener('error', event => reject('network error'), false)\r\n\r\n      if (this.isBinary()) {\r\n        xhr.responseType = 'arraybuffer'\r\n      } else if (this.json) {\r\n        xhr.responseType = 'json'\r\n      } else if (this.xml) {\r\n        xhr.responseType = 'document'\r\n      } else {\r\n        xhr.responseType = 'text'\r\n      }\r\n      // xhr.crossOrigin = true;\r\n\r\n      xhr.send()\r\n    })\r\n  }\r\n}\r\n\r\nexport default NetworkStreamer\r\n","/**\r\n * @file Loader\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ParserRegistry } from '../globals'\r\nimport { createParams } from '../utils'\r\nimport FileStreamer from '../streamer/file-streamer'\r\nimport NetworkStreamer from '../streamer/network-streamer'\r\nimport { LoaderParameters, LoaderInput } from './loader-utils'\r\n\r\n/**\r\n * Loader parameter object.\r\n * @typedef {Object} LoaderParameters - loader parameters\r\n * @property {String} ext - file extension, determines file type\r\n * @property {Boolean} compressed - flag data as compressed\r\n * @property {Boolean} binary - flag data as binary\r\n * @property {String} name - set data name\r\n */\r\n\r\n/**\r\n * Loader base class\r\n */\r\nabstract class Loader {\r\n  parameters: LoaderParameters\r\n  streamer: FileStreamer | NetworkStreamer\r\n\r\n  /**\r\n   * Construct a loader object\r\n   * @param  {String|File|Blob} src - data source, string is interpreted as an URL\r\n   * @param  {LoaderParameters} params - parameters object\r\n   */\r\n  constructor (src: LoaderInput, params: Partial<LoaderParameters> = {}) {\r\n    this.parameters = createParams(params, {\r\n      ext: '',\r\n      compressed: false,\r\n      binary: ParserRegistry.isBinary(params.ext || ''),\r\n      name: '',\r\n\r\n      dir: '',\r\n      path: '',\r\n      protocol: ''\r\n    } as LoaderParameters)\r\n\r\n    const streamerParams = {\r\n      compressed: this.parameters.compressed as string|false,\r\n      binary: this.parameters.binary,\r\n      json: ParserRegistry.isJson(this.parameters.ext),\r\n      xml: ParserRegistry.isXml(this.parameters.ext)\r\n    }\r\n\r\n    if ((typeof File !== 'undefined' && src instanceof File) ||\r\n        (typeof Blob !== 'undefined' && src instanceof Blob)\r\n    ) {\r\n      this.streamer = new FileStreamer(src, streamerParams)\r\n    } else {\r\n      this.streamer = new NetworkStreamer(src, streamerParams)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Load data\r\n   * @abstract\r\n   * @return {Promise} resolves to the loaded data {@link Object}\r\n   */\r\n  abstract load (): Promise<any>\r\n}\r\n\r\nexport default Loader\r\n","/**\r\n * @file Parser Loader\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ParserRegistry } from '../globals'\r\nimport type { InferBondsOptions } from '../structure/structure-utils'\r\nimport Loader from './loader'\r\nimport { LoaderParameters, LoaderInput } from './loader-utils'\r\n\r\nexport interface ParserParams {\r\n  voxelSize?: number\r\n  firstModelOnly?: boolean\r\n  asTrajectory?: boolean\r\n  cAlphaOnly?: boolean\r\n  name?: string\r\n  path?: string\r\n  delimiter?: string\r\n  comment?: string\r\n  columnNames?: string\r\n  inferBonds?: InferBondsOptions\r\n}\r\n\r\n/**\r\n * Parser loader class\r\n * @extends Loader\r\n */\r\nclass ParserLoader extends Loader {\r\n  parserParams: ParserParams\r\n\r\n  constructor (src: LoaderInput, params: Partial<LoaderParameters> & ParserParams = {}) {\r\n    super(src, params)\r\n    this.parserParams = {\r\n      voxelSize: params.voxelSize,\r\n      firstModelOnly: params.firstModelOnly,\r\n      asTrajectory: params.asTrajectory,\r\n      cAlphaOnly: params.cAlphaOnly,\r\n      delimiter: params.delimiter,\r\n      comment: params.comment,\r\n      columnNames: params.columnNames,\r\n      inferBonds: params.inferBonds,\r\n      name: this.parameters.name,\r\n      path: this.parameters.path\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Load parsed object\r\n   * @return {Promise} resolves to the loaded & parsed {@link Structure},\r\n   *                   {@link Volume}, {@link Surface} or data object\r\n   */\r\n  load () {\r\n    var ParserClass = ParserRegistry.get(this.parameters.ext)\r\n    var parser = new ParserClass(this.streamer, this.parserParams)\r\n\r\n    return parser.parse()\r\n  }\r\n}\r\n\r\nexport default ParserLoader\r\n","/**\r\n * @file Script\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Signal } from 'signals'\r\n\r\nimport { Log } from './globals'\r\nimport Stage from './stage/stage'\r\n\r\nexport interface ScriptSignals {\r\n  elementAdded: Signal\r\n  elementRemoved: Signal\r\n  nameChanged: Signal\r\n}\r\n\r\n/**\r\n * Script class\r\n */\r\nclass Script {\r\n  readonly signals: ScriptSignals = {\r\n    elementAdded: new Signal(),\r\n    elementRemoved: new Signal(),\r\n    nameChanged: new Signal()\r\n  }\r\n\r\n  readonly dir: string\r\n  readonly fn: Function\r\n\r\n  readonly type = 'Script'\r\n\r\n  /**\r\n   * Create a script instance\r\n   * @param {String} functionBody - the function source\r\n   * @param {String} name - name of the script\r\n   * @param {String} path - path of the script\r\n   */\r\n  constructor (functionBody: string, readonly name: string, readonly path: string) {\r\n    this.dir = path.substring(0, path.lastIndexOf('/') + 1)\r\n\r\n    try {\r\n      /* eslint-disable no-new-func */\r\n      this.fn = new Function('stage', '__name', '__path', '__dir', functionBody)\r\n    } catch (e) {\r\n      Log.error('Script compilation failed', e)\r\n      this.fn = function () {}\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Execute the script\r\n   * @param  {Stage} stage - the stage context\r\n   * @return {Promise} - resolve when script finished running\r\n   */\r\n  run (stage: Stage): Promise<void> {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        this.fn.apply(null, [ stage, this.name, this.path, this.dir ])\r\n        resolve()\r\n      } catch (e) {\r\n        Log.error('Script.fn', e)\r\n        reject(e)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default Script\r\n","/**\r\n * @file Script Loader\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Loader from './loader'\r\nimport Script from '../script'\r\n\r\n/**\r\n * Script loader class\r\n * @extends Loader\r\n */\r\nclass ScriptLoader extends Loader {\r\n  /**\r\n   * Load script\r\n   * @return {Promise} resolves to the loaded {@link Script}\r\n   */\r\n  load () {\r\n    return this.streamer.read().then(() => {\r\n      return new Script(\r\n        this.streamer.asText(), this.parameters.name, this.parameters.path\r\n      )\r\n    })\r\n  }\r\n}\r\n\r\nexport default ScriptLoader\r\n","/**\r\n * @file Loader Utils\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport {\r\n  DatasourceRegistry, DecompressorRegistry, ParserRegistry, ScriptExtensions\r\n} from '../globals'\r\nimport ParserLoader, { ParserParams } from './parser-loader'\r\nimport ScriptLoader from './script-loader'\r\n\r\nexport interface LoaderParameters {\r\n ext: string  // file extension, determines file type\r\n compressed: string|false  // flag data as compressed\r\n binary: boolean  // flag data as binary\r\n name: string  // set data name\r\n\r\n dir: string\r\n path: string\r\n protocol: string\r\n}\r\n\r\nexport type LoaderInput = File|Blob|string\r\n\r\nexport function getFileInfo (file: LoaderInput) {\r\n  const compressedExtList = DecompressorRegistry.names\r\n\r\n  let path: string\r\n  let compressed: string|false\r\n  let protocol = ''\r\n\r\n  if (file instanceof File) {\r\n    path = file.name\r\n  } else if (file instanceof Blob) {\r\n    path = ''\r\n  } else {\r\n    path = file\r\n  }\r\n  const queryIndex = path.lastIndexOf('?')\r\n  const query = queryIndex !== -1 ? path.substring(queryIndex) : ''\r\n  path = path.substring(0, queryIndex === -1 ? path.length : queryIndex)\r\n\r\n  const name = path.replace(/^.*[\\\\/]/, '')\r\n  let base = name.substring(0, name.lastIndexOf('.'))\r\n\r\n  const nameSplit = name.split('.')\r\n  let ext = nameSplit.length > 1 ? (nameSplit.pop() || '').toLowerCase() : ''\r\n\r\n  const protocolMatch = path.match(/^(.+):\\/\\/(.+)$/)\r\n  if (protocolMatch) {\r\n    protocol = protocolMatch[ 1 ].toLowerCase()\r\n    path = protocolMatch[ 2 ] || ''\r\n  }\r\n\r\n  const dir = path.substring(0, path.lastIndexOf('/') + 1)\r\n\r\n  if (compressedExtList.includes(ext)) {\r\n    compressed = ext\r\n    const n = path.length - ext.length - 1\r\n    ext = (path.substr(0, n).split('.').pop() || '').toLowerCase()\r\n    const m = base.length - ext.length - 1\r\n    base = base.substr(0, m)\r\n  } else {\r\n    compressed = false\r\n  }\r\n\r\n  return { path, name, ext, base, dir, compressed, protocol, query, 'src': file }\r\n}\r\n\r\nexport function getDataInfo (src: LoaderInput) {\r\n  let info = getFileInfo(src)\r\n  const datasource = DatasourceRegistry.get(info.protocol)\r\n  if (datasource) {\r\n    info = getFileInfo(datasource.getUrl(info.src))\r\n    if (!info.ext && datasource.getExt) {\r\n      info.ext = datasource.getExt(src)\r\n    }\r\n  }\r\n  return info\r\n}\r\n\r\n/**\r\n * Load a file\r\n *\r\n * @example\r\n * // load from URL\r\n * NGL.autoLoad( \"http://files.rcsb.org/download/5IOS.cif\" );\r\n *\r\n * @example\r\n * // load binary data in CCP4 format via a Blob\r\n * var binaryBlob = new Blob( [ ccp4Data ], { type: 'application/octet-binary'} );\r\n * NGL.autoLoad( binaryBlob, { ext: \"ccp4\" } );\r\n *\r\n * @example\r\n * // load string data in PDB format via a Blob\r\n * var stringBlob = new Blob( [ pdbData ], { type: 'text/plain'} );\r\n * NGL.autoLoad( stringBlob, { ext: \"pdb\" } );\r\n *\r\n * @example\r\n * // load a File object\r\n * NGL.autoLoad( file );\r\n *\r\n * @param  {String|File|Blob} file - either a URL or an object containing the file data\r\n * @param  {LoaderParameters} params - loading parameters\r\n * @return {Promise} Promise resolves to the loaded data\r\n */\r\nexport function autoLoad (file: LoaderInput, params: Partial<LoaderParameters & ParserParams> = {}) {\r\n  const p = Object.assign(getDataInfo(file), params)\r\n\r\n  let loader\r\n  if (ParserRegistry.names.includes(p.ext)) {\r\n    loader = new ParserLoader(p.src, p)\r\n  } else if (ScriptExtensions.includes(p.ext)) {\r\n    loader = new ScriptLoader(p.src, p)\r\n  }\r\n\r\n  if (loader) {\r\n    return loader.load()\r\n  } else {\r\n    return Promise.reject(new Error(`autoLoad: ext '${p.ext}' unknown`))\r\n  }\r\n}\r\n","/**\r\n * @file Writer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { defaults, download } from '../utils'\r\n\r\n/**\r\n * Base class for writers\r\n * @interface\r\n */\r\nabstract class Writer {\r\n  readonly mimeType: string\r\n  readonly defaultName: string\r\n  readonly defaultExt: string\r\n\r\n  /**\r\n   * @abstract\r\n   * @return {Anything} the data to be written\r\n   */\r\n  abstract getData (): any\r\n\r\n  /**\r\n   * Get a blob with the written data\r\n   * @return {Blob} the blob\r\n   */\r\n  getBlob () {\r\n    return new Blob([ this.getData() ], { type: this.mimeType })\r\n  }\r\n\r\n  /**\r\n   * Trigger a download of the\r\n   * @param  {[type]} name [description]\r\n   * @param  {[type]} ext  [description]\r\n   * @return {[type]}      [description]\r\n   */\r\n  download (name?: string, ext?: string) {\r\n    name = defaults(name, this.defaultName)\r\n    ext = defaults(ext, this.defaultExt)\r\n\r\n    download(this.getBlob(), `${name}.${ext}`)\r\n  }\r\n}\r\n\r\nexport default Writer","/**\r\n * @file Pdb Writer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { sprintf } from 'sprintf-js'\r\n\r\nimport Writer from './writer'\r\nimport { defaults, ensureArray } from '../utils'\r\nimport Structure from '../structure/structure'\r\nimport AtomProxy from '../proxy/atom-proxy'\r\n\r\n// http://www.wwpdb.org/documentation/file-format\r\n\r\n// Sample PDB line, the coords X,Y,Z are fields 5,6,7 on each line.\r\n// ATOM      1  N   ARG     1      29.292  13.212 -12.751  1.00 33.78      1BPT 108\r\n\r\nconst AtomFormat =\r\n  'ATOM  %5d %-4s %3s %1s%4d    %8.3f%8.3f%8.3f%6.2f%6.2f      %4s%2s%1s%1s'\r\n\r\nconst HetatmFormat =\r\n  'HETATM%5d %-4s %3s %1s%4d    %8.3f%8.3f%8.3f%6.2f%6.2f      %4s%2s%1s%1s'\r\n\r\nexport interface PdbWriterParams {\r\n  renumberSerial: boolean\r\n  remarks: string[]\r\n}\r\n\r\n/**\r\n * Create a PDB file from a Structure object\r\n */\r\nexport default class PdbWriter extends Writer {\r\n  readonly mimeType = 'text/plain'\r\n  readonly defaultName = 'structure'\r\n  readonly defaultExt = 'pdb'\r\n\r\n  renumberSerial: boolean\r\n  remarks: string[]\r\n\r\n  structure: Structure\r\n  private _records: string[]\r\n\r\n  /**\r\n   * @param  {Structure} structure - the structure object\r\n   * @param  {Object} params - parameters]\r\n   */\r\n  constructor (structure: Structure, params?: PdbWriterParams) {\r\n    super()\r\n\r\n    const p = Object.assign({}, params)\r\n\r\n    this.renumberSerial = defaults(p.renumberSerial, true)\r\n    this.remarks = ensureArray(defaults(p.remarks, []))\r\n\r\n    this.structure = structure\r\n    this._records = []\r\n  }\r\n\r\n  private _writeRecords () {\r\n    this._records.length = 0\r\n\r\n    this._writeTitle()\r\n    this._writeRemarks()\r\n    this._writeAtoms()\r\n  }\r\n\r\n  private _writeTitle () {\r\n    // FIXME multiline if title line longer than 80 chars\r\n    this._records.push(sprintf('TITLE %-74s', this.structure.name))\r\n  }\r\n\r\n  private _writeRemarks () {\r\n    this.remarks.forEach(str => {\r\n      this._records.push(sprintf('REMARK %-73s', str))\r\n    })\r\n\r\n    if (this.structure.trajectory) {\r\n      this._records.push(sprintf(\r\n        'REMARK %-73s',\r\n        \"Trajectory '\" + this.structure.trajectory.name + \"'\"\r\n      ))\r\n      this._records.push(sprintf(\r\n        'REMARK %-73s',\r\n        `Frame ${(this.structure.trajectory as any).frame}`  // TODO\r\n      ))\r\n    }\r\n  }\r\n\r\n  private _writeAtoms () {\r\n    let ia = 1\r\n    let im = 1\r\n    let charge = \" \"\r\n    let chargeSign = \" \"\r\n    const hasModels = this.structure.modelStore.count > 1\r\n\r\n    this.structure.eachModel(m => {\r\n      if (hasModels) this._records.push(sprintf('MODEL     %4d%-66s', im++, ''))\r\n\r\n      m.eachAtom((a: AtomProxy) => {\r\n        const formatString = a.hetero ? HetatmFormat : AtomFormat\r\n        const serial = this.renumberSerial ? ia : a.serial\r\n\r\n        // Formal PDB spec\r\n        // Alignment of one-letter atom name such as C starts at column 14,\r\n        // while two-letter atom name such as FE starts at column 13.\r\n\r\n        // This, however, leaves Calcium and C-alpha ambiguous\r\n        // The convention (from earlier versions of the spec, see 1992, and also: \r\n        // https://www.cgl.ucsf.edu/chimera/docs/UsersGuide/tutorials/pdbintro.html#misalignment)\r\n        // is that element is right-justified in 13-14, modifiers are left justified in columns 15-16\r\n        // A single-character element symmbol should not appear in column 13 unless the atom name has four characters\r\n        let atomname = a.atomname\r\n\r\n        if (atomname.length === 1) {\r\n          // Simple case\r\n          atomname = ' ' + atomname\r\n        } else if (atomname.length < 4) {\r\n          // 2 or 3-letter name, if element symbol is single char and matches name, add a space\r\n          if (a.element.length === 1 && atomname[0] === a.element) {\r\n            atomname = ' ' + atomname\r\n          }\r\n        }\r\n\r\n        if (a.formalCharge) { // Skip nulls and zeros\r\n          charge = Math.abs(a.formalCharge).toPrecision(1)\r\n          chargeSign = (a.formalCharge > 0) ? \"+\" : \"-\"\r\n        } else {\r\n          charge = \" \"\r\n          chargeSign = \" \"\r\n        }\r\n\r\n        this._records.push(sprintf(\r\n          formatString,\r\n\r\n          serial,\r\n          atomname,\r\n          a.resname,\r\n          defaults(a.chainname, ' '),\r\n          a.resno,\r\n          a.x, a.y, a.z,\r\n          defaults(a.occupancy, 1.0),\r\n          defaults(a.bfactor, 0.0),\r\n          '',  // segid\r\n          defaults(a.element, ''),\r\n          charge,\r\n          chargeSign\r\n        ))\r\n        ia += 1\r\n      }, this.structure.getSelection())\r\n\r\n      if (hasModels) this._records.push(sprintf('%-80s', 'ENDMDL'))\r\n    })\r\n\r\n    this._records.push(sprintf('%-80s', 'END'))\r\n  }\r\n\r\n  getString () {\r\n    console.warn('PdbWriter.getString() is deprecated, use .getData instead')\r\n    return this.getData()\r\n  }\r\n\r\n  /**\r\n   * Get string containing the PDB file data\r\n   * @return {String} PDB file\r\n   */\r\n  getData () {\r\n    this._writeRecords()\r\n    return this._records.join('\\n')\r\n  }\r\n}\r\n","/**\r\n * Writer class for sdf/mol files.\r\n */\r\n\r\nimport { sprintf } from 'sprintf-js'\r\n\r\nimport Writer from './writer'\r\nimport Structure from '../structure/structure'\r\nimport AtomProxy from '../proxy/atom-proxy'\r\nimport BondProxy from '../proxy/bond-proxy'\r\n\r\n// Hard-coded chiral as false as we don't specify it any atoms\r\nconst CountFormat = '%3i%3i  0  0  0  0  0  0  0  0999 V2000'\r\nconst AtomLine = '%10.4f%10.4f%10.4f %-3s 0%3i  0  0  0'\r\nconst BondFormat = '%3i%3i%3i  0  0  0'\r\n\r\nclass SdfWriter extends Writer {\r\n  readonly mimeType = 'text/plain'\r\n  readonly defaultName = 'structure'\r\n  readonly defaultExt = 'sdf'\r\n\r\n  structure: Structure\r\n  private _records: string[]\r\n\r\n  /**\r\n   * @param {Structure} structure - structure to write\r\n   * @param {Object} params - parameters\r\n   */\r\n  constructor (structure: Structure) {\r\n    super()\r\n\r\n    this.structure = structure\r\n    // Follow the pdb-writer example:\r\n    this._records = []\r\n  }\r\n\r\n  get idString () {\r\n    return this.structure.id\r\n  }\r\n\r\n  get titleString () {\r\n    return '  ' + this.structure.title\r\n  }\r\n\r\n  get countsString () {\r\n    return sprintf(\r\n      CountFormat,\r\n      this.structure.atomCount,\r\n      this.structure.bondCount\r\n      )\r\n  }\r\n\r\n  get chargeLines () {\r\n    const pairs: [number, number][] = []\r\n    this.structure.eachAtom(ap => {\r\n      if (ap.formalCharge != null && ap.formalCharge !== 0) {\r\n        pairs.push([ap.index, ap.formalCharge])\r\n      }\r\n    })\r\n    const lines = []\r\n    for (let i = 0; i < pairs.length; i += 8) {\r\n      const nCharges = Math.min(8, pairs.length - i)\r\n      let s = sprintf('M  CHG%3i', nCharges)\r\n      for (let j = i; j < i + nCharges; j++) {\r\n        s += sprintf(' %3i %3i', pairs[j][0] + 1, pairs[j][1])\r\n      }\r\n      lines.push(s)\r\n    }\r\n    return lines\r\n  }\r\n\r\n  formatAtom (ap: AtomProxy) {\r\n    let charge = 0\r\n    if (ap.formalCharge != null && ap.formalCharge !== 0) {\r\n      charge = 4 - ap.formalCharge\r\n    }\r\n    const line = sprintf(\r\n      AtomLine, ap.x, ap.y, ap.z, ap.element, charge\r\n    )\r\n    if (line.length !== 48) { throw new Error('Incompatible atom for sdf format') }\r\n\r\n    return line\r\n  }\r\n\r\n  formatBond (bp: BondProxy) {\r\n    return sprintf(\r\n      BondFormat,\r\n      bp.atomIndex1 + 1,\r\n      bp.atomIndex2 + 1,\r\n      bp.bondOrder)\r\n  }\r\n\r\n  _writeRecords () {\r\n    this._records.length = 0\r\n    this._writeHeader()\r\n    this._writeCTab()\r\n    this._writeFooter()\r\n  }\r\n\r\n  _writeHeader () {\r\n    this._records.push(this.idString, this.titleString, '')\r\n  }\r\n\r\n  _writeCTab () {\r\n    this._records.push(this.countsString)\r\n    this.structure.eachAtom(ap => {\r\n      this._records.push(this.formatAtom(ap))\r\n    })\r\n    this.structure.eachBond(bp => {\r\n      this._records.push(this.formatBond(bp))\r\n    })\r\n    this.chargeLines.forEach(line => {\r\n      this._records.push(line)\r\n    })\r\n    this._records.push('M  END')\r\n  }\r\n\r\n  _writeFooter () {\r\n    this._records.push('$$$$')\r\n  }\r\n\r\n  getData () {\r\n    this._writeRecords()\r\n    return this._records.join('\\n')\r\n  }\r\n}\r\n\r\nexport default SdfWriter\r\n","/**\r\n * @file IO Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n *\r\n * Adapted and converted to TypeScript from https://github.com/image-js/iobuffer\r\n * MIT License, Copyright (c) 2015 Michaël Zasso\r\n */\r\n\r\nimport { TypedArray } from '../types'\r\n\r\nconst defaultByteLength = 1024 * 8\r\nconst charArray: string[] = []\r\n\r\nexport interface IOBufferParameters {\r\n  offset?: number  // Ignore the first n bytes of the ArrayBuffer\r\n}\r\n\r\n/**\r\n * Class for writing and reading binary data\r\n */\r\nclass IOBuffer {\r\n  private _lastWrittenByte: number\r\n  private _mark = 0\r\n  private _marks: number[] = []\r\n  private _data: DataView\r\n\r\n  offset = 0  // The current offset of the buffer's pointer\r\n  littleEndian = true\r\n  buffer: ArrayBuffer  // Reference to the internal ArrayBuffer object\r\n  length: number  // Byte length of the internal ArrayBuffer\r\n  byteLength: number  // Byte length of the internal ArrayBuffer\r\n  byteOffset: number  // Byte offset of the internal ArrayBuffer\r\n\r\n  /**\r\n   * If it's a number, it will initialize the buffer with the number as\r\n   * the buffer's length. If it's undefined, it will initialize the buffer\r\n   * with a default length of 8 Kb. If its an ArrayBuffer, a TypedArray,\r\n   * it will create a view over the underlying ArrayBuffer.\r\n   */\r\n  constructor (data: number|ArrayBuffer|TypedArray, params: IOBufferParameters = {}) {\r\n    let dataIsGiven = false\r\n    if (data === undefined) {\r\n      data = defaultByteLength\r\n    }\r\n    if (typeof data === 'number') {\r\n      data = new ArrayBuffer(data)\r\n    } else {\r\n      dataIsGiven = true\r\n    }\r\n\r\n    const offset = params.offset ? params.offset >>> 0 : 0\r\n    let byteLength = data.byteLength - offset\r\n    let dvOffset = offset\r\n    if (!(data instanceof ArrayBuffer)) {\r\n      if (data.byteLength !== data.buffer.byteLength) {\r\n        dvOffset = data.byteOffset + offset\r\n      }\r\n      data = data.buffer\r\n    }\r\n    if (dataIsGiven) {\r\n      this._lastWrittenByte = byteLength\r\n    } else {\r\n      this._lastWrittenByte = 0\r\n    }\r\n\r\n    this.buffer = data\r\n    this.length = byteLength\r\n    this.byteLength = byteLength\r\n    this.byteOffset = dvOffset\r\n\r\n    this._data = new DataView(this.buffer, dvOffset, byteLength)\r\n  }\r\n\r\n  /**\r\n   * Checks if the memory allocated to the buffer is sufficient to store more bytes after the offset\r\n   * @param {number} [byteLength=1] The needed memory in bytes\r\n   * @return {boolean} Returns true if there is sufficient space and false otherwise\r\n   */\r\n  available (byteLength: number) {\r\n    if (byteLength === undefined) byteLength = 1\r\n    return (this.offset + byteLength) <= this.length\r\n  }\r\n\r\n  /**\r\n   * Check if little-endian mode is used for reading and writing multi-byte values\r\n   * @return {boolean} Returns true if little-endian mode is used, false otherwise\r\n   */\r\n  isLittleEndian () {\r\n    return this.littleEndian\r\n  }\r\n\r\n  /**\r\n   * Set little-endian mode for reading and writing multi-byte values\r\n   * @return {IOBuffer}\r\n   */\r\n  setLittleEndian () {\r\n    this.littleEndian = true\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Check if big-endian mode is used for reading and writing multi-byte values\r\n   * @return {boolean} Returns true if big-endian mode is used, false otherwise\r\n   */\r\n  isBigEndian () {\r\n    return !this.littleEndian\r\n  }\r\n\r\n  /**\r\n   * Switches to big-endian mode for reading and writing multi-byte values\r\n   * @return {IOBuffer}\r\n   */\r\n  setBigEndian () {\r\n    this.littleEndian = false\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Move the pointer n bytes forward\r\n   * @param {number} n\r\n   * @return {IOBuffer}\r\n   */\r\n  skip (n: number) {\r\n    if (n === undefined) n = 1\r\n    this.offset += n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Move the pointer to the given offset\r\n   * @param {number} offset\r\n   * @return {IOBuffer}\r\n   */\r\n  seek (offset: number) {\r\n    this.offset = offset\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Store the current pointer offset.\r\n   * @see {@link IOBuffer#reset}\r\n   * @return {IOBuffer}\r\n   */\r\n  mark () {\r\n    this._mark = this.offset\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Move the pointer back to the last pointer offset set by mark\r\n   * @see {@link IOBuffer#mark}\r\n   * @return {IOBuffer}\r\n   */\r\n  reset () {\r\n    this.offset = this._mark\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Push the current pointer offset to the mark stack\r\n   * @see {@link IOBuffer#popMark}\r\n   * @return {IOBuffer}\r\n   */\r\n  pushMark () {\r\n    this._marks.push(this.offset)\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Pop the last pointer offset from the mark stack, and set the current pointer offset to the popped value\r\n   * @see {@link IOBuffer#pushMark}\r\n   * @return {IOBuffer}\r\n   */\r\n  popMark () {\r\n    const offset = this._marks.pop()\r\n    if (offset === undefined) throw new Error('Mark stack empty')\r\n    this.seek(offset)\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Move the pointer offset back to 0\r\n   * @return {IOBuffer}\r\n   */\r\n  rewind () {\r\n    this.offset = 0\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Make sure the buffer has sufficient memory to write a given byteLength at the current pointer offset\r\n   * If the buffer's memory is insufficient, this method will create a new buffer (a copy) with a length\r\n   * that is twice (byteLength + current offset)\r\n   * @param {number} [byteLength = 1]\r\n   * @return {IOBuffer}\r\n   */\r\n  ensureAvailable (byteLength: number) {\r\n    if (byteLength === undefined) byteLength = 1\r\n    if (!this.available(byteLength)) {\r\n      const lengthNeeded = this.offset + byteLength\r\n      const newLength = lengthNeeded * 2\r\n      const newArray = new Uint8Array(newLength)\r\n      newArray.set(new Uint8Array(this.buffer))\r\n      this.buffer = newArray.buffer\r\n      this.length = this.byteLength = newLength\r\n      this._data = new DataView(this.buffer)\r\n    }\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Read a byte and return false if the byte's value is 0, or true otherwise\r\n   * Moves pointer forward\r\n   * @return {boolean}\r\n   */\r\n  readBoolean () {\r\n    return this.readUint8() !== 0\r\n  }\r\n\r\n  /**\r\n   * Read a signed 8-bit integer and move pointer forward\r\n   * @return {number}\r\n   */\r\n  readInt8 () {\r\n    return this._data.getInt8(this.offset++)\r\n  }\r\n\r\n  /**\r\n   * Read an unsigned 8-bit integer and move pointer forward\r\n   * @return {number}\r\n   */\r\n  readUint8 () {\r\n    return this._data.getUint8(this.offset++)\r\n  }\r\n\r\n  /**\r\n   * Alias for {@link IOBuffer#readUint8}\r\n   * @return {number}\r\n   */\r\n  readByte () {\r\n    return this.readUint8()\r\n  }\r\n\r\n  /**\r\n   * Read n bytes and move pointer forward.\r\n   * @param {number} n\r\n   * @return {Uint8Array}\r\n   */\r\n  readBytes (n: number) {\r\n    if (n === undefined) n = 1\r\n    var bytes = new Uint8Array(n)\r\n    for (var i = 0; i < n; i++) {\r\n      bytes[i] = this.readByte()\r\n    }\r\n    return bytes\r\n  }\r\n\r\n  /**\r\n   * Read a 16-bit signed integer and move pointer forward\r\n   * @return {number}\r\n   */\r\n  readInt16 () {\r\n    var value = this._data.getInt16(this.offset, this.littleEndian)\r\n    this.offset += 2\r\n    return value\r\n  }\r\n\r\n  /**\r\n   * Read a 16-bit unsigned integer and move pointer forward\r\n   * @return {number}\r\n   */\r\n  readUint16 () {\r\n    var value = this._data.getUint16(this.offset, this.littleEndian)\r\n    this.offset += 2\r\n    return value\r\n  }\r\n\r\n  /**\r\n   * Read a 32-bit signed integer and move pointer forward\r\n   * @return {number}\r\n   */\r\n  readInt32 () {\r\n    var value = this._data.getInt32(this.offset, this.littleEndian)\r\n    this.offset += 4\r\n    return value\r\n  }\r\n\r\n  /**\r\n   * Read a 32-bit unsigned integer and move pointer forward\r\n   * @return {number}\r\n   */\r\n  readUint32 () {\r\n    var value = this._data.getUint32(this.offset, this.littleEndian)\r\n    this.offset += 4\r\n    return value\r\n  }\r\n\r\n  /**\r\n   * Read a 32-bit floating number and move pointer forward\r\n   * @return {number}\r\n   */\r\n  readFloat32 () {\r\n    var value = this._data.getFloat32(this.offset, this.littleEndian)\r\n    this.offset += 4\r\n    return value\r\n  }\r\n\r\n  /**\r\n   * Read a 64-bit floating number and move pointer forward\r\n   * @return {number}\r\n   */\r\n  readFloat64 () {\r\n    var value = this._data.getFloat64(this.offset, this.littleEndian)\r\n    this.offset += 8\r\n    return value\r\n  }\r\n\r\n  /**\r\n   * Read 1-byte ascii character and move pointer forward\r\n   * @return {string}\r\n   */\r\n  readChar () {\r\n    return String.fromCharCode(this.readInt8())\r\n  }\r\n\r\n  /**\r\n   * Read n 1-byte ascii characters and move pointer forward\r\n   * @param {number} n\r\n   * @return {string}\r\n   */\r\n  readChars (n = 1) {\r\n    charArray.length = n\r\n    for (var i = 0; i < n; i++) {\r\n      charArray[i] = this.readChar()\r\n    }\r\n    return charArray.join('')\r\n  }\r\n\r\n  /**\r\n   * Write 0xff if the passed value is truthy, 0x00 otherwise\r\n   * @param {any} value\r\n   * @return {IOBuffer}\r\n   */\r\n  writeBoolean (value = false) {\r\n    this.writeUint8(value ? 0xff : 0x00)\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Write value as an 8-bit signed integer\r\n   * @param {number} value\r\n   * @return {IOBuffer}\r\n   */\r\n  writeInt8 (value: number) {\r\n    this.ensureAvailable(1)\r\n    this._data.setInt8(this.offset++, value)\r\n    this._updateLastWrittenByte()\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Write value as a 8-bit unsigned integer\r\n   * @param {number} value\r\n   * @return {IOBuffer}\r\n   */\r\n  writeUint8 (value: number) {\r\n    this.ensureAvailable(1)\r\n    this._data.setUint8(this.offset++, value)\r\n    this._updateLastWrittenByte()\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * An alias for {@link IOBuffer#writeUint8}\r\n   * @param {number} value\r\n   * @return {IOBuffer}\r\n   */\r\n  writeByte (value: number) {\r\n    return this.writeUint8(value)\r\n  }\r\n\r\n  /**\r\n   * Write bytes\r\n   * @param {Array|Uint8Array} bytes\r\n   * @return {IOBuffer}\r\n   */\r\n  writeBytes (bytes: number[]|Uint8Array) {\r\n    this.ensureAvailable(bytes.length)\r\n    for (var i = 0; i < bytes.length; i++) {\r\n      this._data.setUint8(this.offset++, bytes[i])\r\n    }\r\n    this._updateLastWrittenByte()\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Write value as an 16-bit signed integer\r\n   * @param {number} value\r\n   * @return {IOBuffer}\r\n   */\r\n  writeInt16 (value: number) {\r\n    this.ensureAvailable(2)\r\n    this._data.setInt16(this.offset, value, this.littleEndian)\r\n    this.offset += 2\r\n    this._updateLastWrittenByte()\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Write value as a 16-bit unsigned integer\r\n   * @param {number} value\r\n   * @return {IOBuffer}\r\n   */\r\n  writeUint16 (value: number) {\r\n    this.ensureAvailable(2)\r\n    this._data.setUint16(this.offset, value, this.littleEndian)\r\n    this.offset += 2\r\n    this._updateLastWrittenByte()\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Write a 32-bit signed integer at the current pointer offset\r\n   * @param {number} value\r\n   * @return {IOBuffer}\r\n   */\r\n  writeInt32 (value: number) {\r\n    this.ensureAvailable(4)\r\n    this._data.setInt32(this.offset, value, this.littleEndian)\r\n    this.offset += 4\r\n    this._updateLastWrittenByte()\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Write a 32-bit unsigned integer at the current pointer offset\r\n   * @param {number} value - The value to set\r\n   * @return {IOBuffer}\r\n   */\r\n  writeUint32 (value: number) {\r\n    this.ensureAvailable(4)\r\n    this._data.setUint32(this.offset, value, this.littleEndian)\r\n    this.offset += 4\r\n    this._updateLastWrittenByte()\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Write a 32-bit floating number at the current pointer offset\r\n   * @param {number} value - The value to set\r\n   * @return {IOBuffer}\r\n   */\r\n  writeFloat32 (value: number) {\r\n    this.ensureAvailable(4)\r\n    this._data.setFloat32(this.offset, value, this.littleEndian)\r\n    this.offset += 4\r\n    this._updateLastWrittenByte()\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Write a 64-bit floating number at the current pointer offset\r\n   * @param {number} value\r\n   * @return {IOBuffer}\r\n   */\r\n  writeFloat64 (value: number) {\r\n    this.ensureAvailable(8)\r\n    this._data.setFloat64(this.offset, value, this.littleEndian)\r\n    this.offset += 8\r\n    this._updateLastWrittenByte()\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Write the charCode of the passed string's first character to the current pointer offset\r\n   * @param {string} str - The character to set\r\n   * @return {IOBuffer}\r\n   */\r\n  writeChar (str: string) {\r\n    return this.writeUint8(str.charCodeAt(0))\r\n  }\r\n\r\n  /**\r\n   * Write the charCodes of the passed string's characters to the current pointer offset\r\n   * @param {string} str\r\n   * @return {IOBuffer}\r\n   */\r\n  writeChars (str: string) {\r\n    for (var i = 0; i < str.length; i++) {\r\n      this.writeUint8(str.charCodeAt(i))\r\n    }\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Export a Uint8Array view of the internal buffer.\r\n   * The view starts at the byte offset and its length\r\n   * is calculated to stop at the last written byte or the original length.\r\n   * @return {Uint8Array}\r\n   */\r\n  toArray () {\r\n    return new Uint8Array(this.buffer, this.byteOffset, this._lastWrittenByte)\r\n  }\r\n\r\n  /**\r\n   * Update the last written byte offset\r\n   * @private\r\n   */\r\n  _updateLastWrittenByte () {\r\n    if (this.offset > this._lastWrittenByte) {\r\n      this._lastWrittenByte = this.offset\r\n    }\r\n  }\r\n}\r\n\r\nexport default IOBuffer\r\n","/**\r\n * @file STL Writer\r\n * @author Paul Pillot <paul.pillot@cimf.ca>\r\n * @private\r\n */\r\n\r\nimport { Vector3 } from 'three'\r\n\r\nimport Writer from './writer'\r\nimport IOBuffer from '../utils/io-buffer'\r\nimport Surface from '../surface/surface'\r\n\r\n// https://en.wikipedia.org/wiki/STL_(file_format)#ASCII_STL\r\n\r\n/**\r\n * Create an STL File from a surface Object (e.g. for 3D printing)\r\n *\r\n * @example\r\n * molsurf = new MolecularSurface(structure)\r\n * surf = molsurf.getSurface({type: 'av', probeRadius: 1.4})\r\n * stl = new StlWriter(surf)\r\n * stl.download('myFileName')\r\n */\r\nexport default class StlWriter extends Writer {\r\n  readonly mimeType = 'application/vnd.ms-pki.stl'\r\n  readonly defaultName = 'surface'\r\n  readonly defaultExt = 'stl'\r\n\r\n  surface: any  // TODO\r\n\r\n  /**\r\n   * @param {Surface} surface - the surface to write out\r\n   */\r\n  constructor (surface: Surface) {\r\n    super()\r\n\r\n    this.surface = surface\r\n  }\r\n\r\n  /*\r\n   * Get STL Binary data\r\n   *\r\n   * Adapted from: https://github.com/mrdoob/three.js/blob/master/examples/js/exporters/STLBinaryExporter.js\r\n   * see https://en.wikipedia.org/wiki/STL_(file_format)#Binary_STL for the file format description\r\n   *\r\n   * @return {DataView} the data\r\n   */\r\n  getData () {\r\n    const triangles = this.surface.index.length / 3\r\n    const bufferLength = triangles * 2 + triangles * 3 * 4 * 4 + 80 + 4\r\n    const output = new IOBuffer(bufferLength)\r\n\r\n    output.skip(80)  // skip header\r\n    output.writeUint32(triangles)\r\n\r\n    const vector = new Vector3()\r\n    const vectorNorm1 = new Vector3()\r\n    const vectorNorm2 = new Vector3()\r\n    const vectorNorm3 = new Vector3()\r\n\r\n    // traversing vertices\r\n    for (let i = 0; i < triangles; i++) {\r\n      const indices = [\r\n        this.surface.index[i * 3],\r\n        this.surface.index[i * 3 + 1],\r\n        this.surface.index[i * 3 + 2]\r\n      ]\r\n\r\n      vectorNorm1.fromArray(this.surface.normal, indices[0] * 3)\r\n      vectorNorm2.fromArray(this.surface.normal, indices[1] * 3)\r\n      vectorNorm3.fromArray(this.surface.normal, indices[2] * 3)\r\n\r\n      vector.addVectors(vectorNorm1, vectorNorm2).add(vectorNorm3).normalize()\r\n\r\n      output.writeFloat32(vector.x)\r\n      output.writeFloat32(vector.y)\r\n      output.writeFloat32(vector.z)\r\n\r\n      for (let j = 0; j < 3; j++) {\r\n        vector.fromArray(this.surface.position, indices[j] * 3)\r\n\r\n        output.writeFloat32(vector.x)  // vertices\r\n        output.writeFloat32(vector.y)\r\n        output.writeFloat32(vector.z)\r\n      }\r\n\r\n      output.writeUint16(0)  // attribute byte count\r\n    }\r\n\r\n    return new DataView(output.buffer)\r\n  }\r\n}","/**\r\n * @file Counter\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Log } from '../globals'\r\n\r\nimport * as signalsWrapper from 'signals'\r\n\r\n/**\r\n * {@link Signal}, dispatched when the `count` changes\r\n * @example\r\n * counter.signals.countChanged.add( function( delta ){ ... } );\r\n * @event Counter#countChanged\r\n * @type {Integer}\r\n */\r\n\r\nexport interface CounterSignals {\r\n  countChanged: signalsWrapper.Signal\r\n}\r\n\r\n/**\r\n * Counter class for keeping track of counts\r\n */\r\nclass Counter {\r\n  count = 0\r\n\r\n  signals: CounterSignals = {\r\n    countChanged: new signalsWrapper.Signal()\r\n  }\r\n\r\n  /**\r\n   * Set the `count` to zero\r\n   * @return {undefined}\r\n   */\r\n  clear () {\r\n    this.change(-this.count)\r\n  }\r\n\r\n  /**\r\n   * Change the `count`\r\n   * @fires Counter#countChanged\r\n   * @param {Integer} delta - count change\r\n   * @return {undefined}\r\n   */\r\n  change (delta: number) {\r\n    this.count += delta\r\n    this.signals.countChanged.dispatch(delta, this.count)\r\n\r\n    if (this.count < 0) {\r\n      Log.warn('Counter.count below zero', this.count)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Increments the `count` by one.\r\n   * @return {undefined}\r\n   */\r\n  increment () {\r\n    this.change(1)\r\n  }\r\n\r\n  /**\r\n   * Decrements the `count` by one.\r\n   * @return {undefined}\r\n   */\r\n  decrement () {\r\n    this.change(-1)\r\n  }\r\n\r\n  /**\r\n   * Listen to another counter object and change this `count` by the\r\n   * same amount\r\n   * @param  {Counter} counter - the counter object to listen to\r\n   * @return {undefined}\r\n   */\r\n  listen (counter: Counter) {\r\n    this.change(counter.count)\r\n    counter.signals.countChanged.add(this.change, this)\r\n  }\r\n\r\n  /**\r\n   * Stop listening to the other counter object\r\n   * @param  {Counter} counter - the counter object to stop listening to\r\n   * @return {undefined}\r\n   */\r\n  unlisten (counter: Counter) {\r\n    const countChanged = counter.signals.countChanged\r\n    if (countChanged.has(this.change, this)) {\r\n      countChanged.remove(this.change, this)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Invole the callback function once, when the `count` becomes zero\r\n   * @param  {Function} callback - the callback function\r\n   * @param  {Object}   context - the context for the callback function\r\n   * @return {undefined}\r\n   */\r\n  onZeroOnce (callback: () => void, context?: any) {\r\n    if (this.count === 0) {\r\n      callback.call(context)\r\n    } else {\r\n      const fn = () => {\r\n        if (this.count === 0) {\r\n          this.signals.countChanged.remove(fn, this)\r\n          callback.call(context)\r\n        }\r\n      }\r\n      this.signals.countChanged.add(fn, this)\r\n    }\r\n  }\r\n\r\n  dispose () {\r\n    this.clear()\r\n    this.signals.countChanged.dispose()\r\n  }\r\n}\r\n\r\nexport default Counter\r\n","/**\r\n * @file Stats\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport * as signalsWrapper from 'signals'\r\n\r\nexport default class Stats {\r\n  signals = {\r\n    updated: new signalsWrapper.Signal()\r\n  }\r\n\r\n  maxDuration = -Infinity\r\n  minDuration = Infinity\r\n  avgDuration = 14\r\n  lastDuration = Infinity\r\n\r\n  prevFpsTime = 0\r\n  lastFps = Infinity\r\n  lastFrames = 1\r\n  frames = 0\r\n  count = 0\r\n\r\n  startTime: number\r\n  currentTime: number\r\n\r\n  constructor () {\r\n    this.begin()\r\n  }\r\n\r\n  update () {\r\n    this.startTime = this.end()\r\n    this.currentTime = this.startTime\r\n    this.signals.updated.dispatch()\r\n  }\r\n\r\n  begin () {\r\n    this.startTime = window.performance.now()\r\n    this.lastFrames = this.frames\r\n  }\r\n\r\n  end () {\r\n    const time = window.performance.now()\r\n\r\n    this.count += 1\r\n    this.frames += 1\r\n\r\n    this.lastDuration = time - this.startTime\r\n    this.minDuration = Math.min(this.minDuration, this.lastDuration)\r\n    this.maxDuration = Math.max(this.maxDuration, this.lastDuration)\r\n    this.avgDuration -= this.avgDuration / 30\r\n    this.avgDuration += this.lastDuration / 30\r\n\r\n    if (time > this.prevFpsTime + 1000) {\r\n      this.lastFps = this.frames\r\n      this.prevFpsTime = time\r\n      this.frames = 0\r\n    }\r\n\r\n    return time\r\n  }\r\n}","/**\r\n * @file Shader Utils\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ShaderChunk } from 'three'\r\n\r\nimport './chunk/fog_fragment.glsl'\r\nimport './chunk/interior_fragment.glsl'\r\nimport './chunk/matrix_scale.glsl'\r\nimport './chunk/nearclip_vertex.glsl'\r\nimport './chunk/nearclip_fragment.glsl'\r\nimport './chunk/opaque_back_fragment.glsl'\r\nimport './chunk/radiusclip_vertex.glsl'\r\nimport './chunk/radiusclip_fragment.glsl'\r\nimport './chunk/unpack_color.glsl'\r\n\r\nimport { ShaderRegistry } from '../globals'\r\n\r\nexport type ShaderDefine = (\r\n  'NEAR_CLIP'|'RADIUS_CLIP'|'PICKING'|'NOLIGHT'|'FLAT_SHADED'|'OPAQUE_BACK'|\r\n  'DIFFUSE_INTERIOR'|'USE_INTERIOR_COLOR'|\r\n  'USE_SIZEATTENUATION'|'USE_MAP'|'ALPHATEST'|'SDF'|'FIXED_SIZE'|\r\n  'CUBIC_INTERPOLATION'|'BSPLINE_FILTER'|'CATMULROM_FILTER'|'MITCHELL_FILTER'\r\n)\r\nexport type ShaderDefines = {\r\n  [k in ShaderDefine]?: number|string\r\n}\r\n\r\nfunction getDefines (defines: ShaderDefines) {\r\n  if (defines === undefined) return ''\r\n\r\n  const lines = []\r\n\r\n  for (const name in defines) {\r\n    const value = defines[ name as keyof ShaderDefines ]\r\n\r\n    if (!value) continue\r\n\r\n    lines.push(`#define ${name} ${value}`)\r\n  }\r\n\r\n  return lines.join('\\n') + '\\n'\r\n}\r\n\r\nconst reInclude = /^(?!\\/\\/)\\s*#include\\s+(\\S+)/gmi\r\nconst shaderCache: { [k: string]: string } = {}\r\n\r\nexport function getShader (name: string, defines: ShaderDefines = {}) {\r\n  let hash = name + '|'\r\n  for (const key in defines) {\r\n    hash += key + ':' + defines[ key as keyof ShaderDefines ]\r\n  }\r\n\r\n  if (!shaderCache[ hash ]) {\r\n    const definesText = getDefines(defines)\r\n\r\n    let shaderText = ShaderRegistry.get(`shader/${name}`) as string\r\n    if (!shaderText) {\r\n      throw new Error(`empty shader, '${name}'`)\r\n    }\r\n    shaderText = shaderText.replace(reInclude, function (match, p1) {\r\n      const path = `shader/chunk/${p1}.glsl`\r\n      const chunk = ShaderRegistry.get(path) || ShaderChunk[ p1 ]\r\n      if (!chunk) {\r\n        throw new Error(`empty chunk, '${p1}'`)\r\n      }\r\n      return chunk\r\n    })\r\n\r\n    shaderCache[ hash ] = definesText + shaderText\r\n  }\r\n\r\n  return shaderCache[ hash ]\r\n}\r\n","/**\r\n * @file Viewer Constants\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Debug } from '../globals'\r\n\r\nif (typeof WebGLRenderingContext !== 'undefined') {\r\n  const wrcp = WebGLRenderingContext.prototype\r\n\r\n  // wrap WebGL debug function used by three.js and\r\n  // ignore calls to them when the debug flag is not set\r\n\r\n  const _getShaderParameter = wrcp.getShaderParameter\r\n  wrcp.getShaderParameter = function getShaderParameter (this: WebGLRenderingContext) {\r\n    if (Debug) {\r\n      return _getShaderParameter.apply(this, arguments)\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  const _getShaderInfoLog = wrcp.getShaderInfoLog\r\n  wrcp.getShaderInfoLog = function getShaderInfoLog (this: WebGLRenderingContext) {\r\n    if (Debug) {\r\n      return _getShaderInfoLog.apply(this, arguments)\r\n    } else {\r\n      return ''\r\n    }\r\n  }\r\n\r\n  const _getProgramParameter = wrcp.getProgramParameter\r\n  wrcp.getProgramParameter = function getProgramParameter (this: WebGLRenderingContext, program, pname) {\r\n    if (Debug || pname !== wrcp.LINK_STATUS) {\r\n      return _getProgramParameter.apply(this, arguments)\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  const _getProgramInfoLog = wrcp.getProgramInfoLog\r\n  wrcp.getProgramInfoLog = function getProgramInfoLog (this: WebGLRenderingContext) {\r\n    if (Debug) {\r\n      return _getProgramInfoLog.apply(this, arguments)\r\n    } else {\r\n      return ''\r\n    }\r\n  }\r\n}\r\n\r\nexport const JitterVectors = [\r\n  [\r\n    [ 0, 0 ]\r\n  ],\r\n  [\r\n    [ 4, 4 ], [ -4, -4 ]\r\n  ],\r\n  [\r\n    [ -2, -6 ], [ 6, -2 ], [ -6, 2 ], [ 2, 6 ]\r\n  ],\r\n  [\r\n    [ 1, -3 ], [ -1, 3 ], [ 5, 1 ], [ -3, -5 ],\r\n    [ -5, 5 ], [ -7, -1 ], [ 3, 7 ], [ 7, -7 ]\r\n  ],\r\n  [\r\n    [ 1, 1 ], [ -1, -3 ], [ -3, 2 ], [ 4, -1 ],\r\n    [ -5, -2 ], [ 2, 5 ], [ 5, 3 ], [ 3, -5 ],\r\n    [ -2, 6 ], [ 0, -7 ], [ -4, -6 ], [ -6, 4 ],\r\n    [ -8, 0 ], [ 7, -4 ], [ 6, 7 ], [ -7, -8 ]\r\n  ],\r\n  [\r\n    [ -4, -7 ], [ -7, -5 ], [ -3, -5 ], [ -5, -4 ],\r\n    [ -1, -4 ], [ -2, -2 ], [ -6, -1 ], [ -4, 0 ],\r\n    [ -7, 1 ], [ -1, 2 ], [ -6, 3 ], [ -3, 3 ],\r\n    [ -7, 6 ], [ -3, 6 ], [ -5, 7 ], [ -1, 7 ],\r\n    [ 5, -7 ], [ 1, -6 ], [ 6, -5 ], [ 4, -4 ],\r\n    [ 2, -3 ], [ 7, -2 ], [ 1, -1 ], [ 4, -1 ],\r\n    [ 2, 1 ], [ 6, 2 ], [ 0, 4 ], [ 4, 4 ],\r\n    [ 2, 5 ], [ 7, 5 ], [ 5, 6 ], [ 3, 7 ]\r\n  ]\r\n]\r\n\r\nJitterVectors.forEach(offsetList => {\r\n  offsetList.forEach(offset => {\r\n    // 0.0625 = 1 / 16\r\n    offset[ 0 ] *= 0.0625\r\n    offset[ 1 ] *= 0.0625\r\n  })\r\n})\r\n","/**\r\n * @file Tiled Renderer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { defaults } from '../utils'\r\nimport { Camera, WebGLRenderer } from 'three'\r\nimport Viewer from './viewer'\r\n\r\nexport interface TiledRendererParams {\r\n  factor?: number\r\n  antialias?: boolean\r\n  onProgress?: Function\r\n  onFinish?: Function\r\n}\r\n\r\nclass TiledRenderer {\r\n  canvas = document.createElement('canvas')\r\n\r\n  private _width: number\r\n  private _height: number\r\n  private _n: number\r\n  private _factor: number\r\n  private _antialias: boolean\r\n  private _viewerSampleLevel: number\r\n\r\n  private _viewer: Viewer\r\n  private _onProgress?: Function\r\n  private _onFinish?: Function\r\n  private _ctx: CanvasRenderingContext2D\r\n\r\n  constructor(renderer: WebGLRenderer, camera: Camera, viewer: Viewer, params: TiledRendererParams) {\r\n    this._viewer = viewer\r\n\r\n    this._factor = defaults(params.factor, 2)\r\n    this._antialias = defaults(params.antialias, false)\r\n\r\n    this._onProgress = params.onProgress\r\n    this._onFinish = params.onFinish\r\n\r\n    if (this._antialias) this._factor *= 2\r\n    this._n = this._factor * this._factor\r\n\r\n    // canvas\r\n\r\n    this._width = this._viewer.width\r\n    this._height = this._viewer.height\r\n\r\n    if (this._antialias) {\r\n      this.canvas.width = this._width * this._factor / 2\r\n      this.canvas.height = this._height * this._factor / 2\r\n    } else {\r\n      this.canvas.width = this._width * this._factor\r\n      this.canvas.height = this._height * this._factor\r\n    }\r\n\r\n    this._ctx = this.canvas.getContext('2d')!\r\n\r\n    this._viewerSampleLevel = viewer.sampleLevel\r\n    this._viewer.setSampling(-1)\r\n  }\r\n\r\n  private _renderTile (i: number) {\r\n    const viewer = this._viewer\r\n    const width = this._width\r\n    const height = this._height\r\n    const factor = this._factor\r\n\r\n    const x = i % factor\r\n    const y = Math.floor(i / factor)\r\n\r\n    const offsetX = x * width\r\n    const offsetY = y * height\r\n\r\n    viewer.camera.setViewOffset(\r\n      width * factor,\r\n      height * factor,\r\n      offsetX,\r\n      offsetY,\r\n      width,\r\n      height\r\n    )\r\n\r\n    viewer.render()\r\n\r\n    if (this._antialias) {\r\n        const w = Math.round((offsetX + width) / 2) - Math.round (offsetX / 2);\r\n        const h = Math.round((offsetY + height) / 2) - Math.round (offsetY / 2);\r\n      this._ctx.drawImage(\r\n        viewer.renderer.domElement,\r\n        Math.round(offsetX / 2),\r\n        Math.round(offsetY / 2),\r\n        w,\r\n        h\r\n      )\r\n    } else {\r\n      this._ctx.drawImage(\r\n        viewer.renderer.domElement,\r\n        Math.floor(offsetX),\r\n        Math.floor(offsetY),\r\n        Math.ceil(width),\r\n        Math.ceil(height)\r\n      )\r\n    }\r\n\r\n    if (typeof this._onProgress === 'function') {\r\n      this._onProgress(i + 1, this._n, false)\r\n    }\r\n  }\r\n\r\n  private _finalize () {\r\n    this._viewer.setSampling(this._viewerSampleLevel)\r\n    this._viewer.camera.view = null!  // TODO\r\n\r\n    if (typeof this._onFinish === 'function') {\r\n      this._onFinish(this._n + 1, this._n, false)\r\n    }\r\n  }\r\n\r\n  render () {\r\n    for (let i = 0; i <= this._n; ++i) {\r\n      if (i === this._n) {\r\n        this._finalize()\r\n      } else {\r\n        this._renderTile(i)\r\n      }\r\n    }\r\n  }\r\n\r\n  renderAsync () {\r\n    let count = 0\r\n    const n = this._n\r\n\r\n    const fn = () => {\r\n      if (count === n) {\r\n        this._finalize()\r\n      } else {\r\n        this._renderTile(count)\r\n      }\r\n      count += 1\r\n    }\r\n\r\n    for (let i = 0; i <= n; ++i) {\r\n      setTimeout(fn, 0)\r\n    }\r\n  }\r\n}\r\n\r\nexport default TiledRenderer\r\n","/**\r\n * @file Math Constants\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nexport const EPS = 0.0000001\r\nexport const TwoPI = 2 * Math.PI\r\n\r\nexport const DEG2RAD = Math.PI / 180\r\nexport const RAD2DEG = 180 / Math.PI\r\n","/**\r\n * @file Array Utils\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3 } from 'three'\r\n\r\nimport { NumberArray } from '../types'\r\nimport { TwoPI } from './math-constants'\r\n\r\nexport function circularMean (array: NumberArray, max: number, stride = 1, offset = 0, indices?: NumberArray) {\r\n  // http://en.wikipedia.org/wiki/Center_of_mass#Systems_with_periodic_boundary_conditions\r\n\r\n  // Bai, Linge; Breen, David (2008). Calculating Center of Mass in an Unbounded 2D Environment. Journal of Graphics, GPU, and Game Tools 13 (4): 53–60.\r\n\r\n  // http://stackoverflow.com/questions/18166507/using-fft-to-find-the-center-of-mass-under-periodic-boundary-conditions\r\n\r\n  const n = indices ? indices.length : array.length / stride\r\n\r\n  let cosMean = 0\r\n  let sinMean = 0\r\n\r\n  if (indices) {\r\n    for (let i = 0; i < n; ++i) {\r\n      const c = (array[ indices[ i ] * stride + offset ] + max) % max\r\n      const angle = (c / max) * TwoPI - Math.PI\r\n\r\n      cosMean += Math.cos(angle)\r\n      sinMean += Math.sin(angle)\r\n    }\r\n  } else {\r\n    for (let i = offset; i < n; i += stride) {\r\n      const c = (array[ i ] + max) % max\r\n      const angle = (c / max) * TwoPI - Math.PI\r\n\r\n      cosMean += Math.cos(angle)\r\n      sinMean += Math.sin(angle)\r\n    }\r\n  }\r\n\r\n  cosMean /= n\r\n  sinMean /= n\r\n\r\n  const meanAngle = Math.atan2(sinMean, cosMean)\r\n  const mean = (meanAngle + Math.PI) / TwoPI * max\r\n\r\n  return mean\r\n}\r\n\r\nexport function calculateCenterArray <T extends NumberArray = Float32Array>(array1: NumberArray, array2: NumberArray, center?: T, offset = 0): T {\r\n  const n = array1.length\r\n  const c = center || new Float32Array(n)\r\n\r\n  for (let i = 0; i < n; i += 3) {\r\n    c[ offset + i + 0 ] = (array1[ i + 0 ] + array2[ i + 0 ]) / 2.0\r\n    c[ offset + i + 1 ] = (array1[ i + 1 ] + array2[ i + 1 ]) / 2.0\r\n    c[ offset + i + 2 ] = (array1[ i + 2 ] + array2[ i + 2 ]) / 2.0\r\n  }\r\n\r\n  return c as T\r\n}\r\n\r\nexport function calculateDirectionArray (array1: NumberArray, array2: NumberArray) {\r\n  const n = array1.length\r\n  const direction = new Float32Array(n)\r\n\r\n  for (let i = 0; i < n; i += 3) {\r\n    direction[ i + 0 ] = array2[ i + 0 ] - array1[ i + 0 ]\r\n    direction[ i + 1 ] = array2[ i + 1 ] - array1[ i + 1 ]\r\n    direction[ i + 2 ] = array2[ i + 2 ] - array1[ i + 2 ]\r\n  }\r\n\r\n  return direction\r\n}\r\n\r\nexport function uniformArray <T extends NumberArray = Float32Array>(n: number, a: number, optionalTarget?: T): T {\r\n  const array = optionalTarget || new Float32Array(n)\r\n\r\n  for (let i = 0; i < n; ++i) {\r\n    array[ i ] = a\r\n  }\r\n\r\n  return array as T\r\n}\r\n\r\nexport function uniformArray3 (n: number, a: number, b: number, c: number, optionalTarget?: NumberArray) {\r\n  const array = optionalTarget || new Float32Array(n * 3)\r\n\r\n  for (let i = 0; i < n; ++i) {\r\n    const j = i * 3\r\n\r\n    array[ j + 0 ] = a\r\n    array[ j + 1 ] = b\r\n    array[ j + 2 ] = c\r\n  }\r\n\r\n  return array\r\n}\r\n\r\nexport function centerArray3 (array: NumberArray, center = new Vector3()) {\r\n  const n = array.length\r\n\r\n  for (let i = 0; i < n; i += 3) {\r\n    center.x += array[ i ]\r\n    center.y += array[ i + 1 ]\r\n    center.z += array[ i + 2 ]\r\n  }\r\n\r\n  center.divideScalar(n / 3)\r\n\r\n  return center\r\n}\r\n\r\nexport function serialArray (n: number) {\r\n  const array = new Float32Array(n)\r\n\r\n  for (let i = 0; i < n; ++i) {\r\n    array[ i ] = i\r\n  }\r\n\r\n  return array\r\n}\r\n\r\nexport function serialBlockArray (n: number, b: number, offset = 0, optionalTarget?: NumberArray) {\r\n  const array = optionalTarget || new Float32Array(n * b)\r\n\r\n  for (let i = 0; i < n; ++i) {\r\n    const k = offset + i * b\r\n\r\n    for (let j = 0; j < b; ++j) {\r\n      array[ k + j ] = i\r\n    }\r\n  }\r\n\r\n  return array\r\n}\r\n\r\nexport function randomColorArray (n: number) {\r\n  const array = new Float32Array(n * 3)\r\n\r\n  for (let i = 0; i < n; ++i) {\r\n    const j = i * 3\r\n\r\n    array[ j + 0 ] = Math.random()\r\n    array[ j + 1 ] = Math.random()\r\n    array[ j + 2 ] = Math.random()\r\n  }\r\n\r\n  return array\r\n}\r\n\r\nexport function replicateArrayEntries (array: NumberArray, m: number) {\r\n  const n = array.length\r\n  const repArr = new Float32Array(n * m)\r\n\r\n  for (let i = 0; i < n; ++i) {\r\n    const k = i * m\r\n    const a = array[ i ]\r\n\r\n    for (let j = 0; j < m; ++j) {\r\n      repArr[ k + j ] = a\r\n    }\r\n  }\r\n\r\n  return repArr\r\n}\r\n\r\nexport function replicateArray3Entries (array: NumberArray, m: number) {\r\n  const n = array.length / 3\r\n  const repArr = new Float32Array(n * m * 3)\r\n\r\n  for (let i = 0; i < n; ++i) {\r\n    const v = i * 3\r\n    const k = i * m * 3\r\n\r\n    const a = array[ v + 0 ]\r\n    const b = array[ v + 1 ]\r\n    const c = array[ v + 2 ]\r\n\r\n    for (let j = 0; j < m; ++j) {\r\n      const l = k + j * 3\r\n\r\n      repArr[ l + 0 ] = a\r\n      repArr[ l + 1 ] = b\r\n      repArr[ l + 2 ] = c\r\n    }\r\n  }\r\n\r\n  return repArr\r\n}\r\n\r\nexport function calculateMeanArray (array1: NumberArray, array2: NumberArray) {\r\n  const n = array1.length\r\n  const mean = new Float32Array(n)\r\n\r\n  for (let i = 0; i < n; i++) {\r\n    mean[ i ] = (array1[ i ] + array2[ i ]) / 2.0\r\n  }\r\n\r\n  return mean\r\n}\r\n\r\nexport function calculateMinArray (array1: NumberArray, array2: NumberArray) {\r\n  const n = array1.length\r\n  const min = new Float32Array(n)\r\n\r\n  for (let i = 0; i < n; i++) {\r\n    min[ i ] = Math.min(array1[ i ], array2[ i ])\r\n  }\r\n\r\n  return min\r\n}\r\n\r\nexport function copyArray<T extends any[]|NumberArray> (src: T, dst: T, srcOffset: number, dstOffset: number, length: number) {\r\n  for (let i = 0; i < length; ++i) {\r\n    dst[ dstOffset + i ] = src[ srcOffset + i ]\r\n  }\r\n}\r\n\r\nexport function copyWithin (array: NumberArray|any[], srcOffset: number, dstOffset: number, length: number) {\r\n  copyArray(array, array, srcOffset, dstOffset, length)\r\n}\r\n\r\nconst swap = new Float32Array(4)\r\nconst temp = new Float32Array(4)\r\n/**\r\n * quicksortIP\r\n * @function\r\n * @author Roman Bolzern <roman.bolzern@fhnw.ch>, 2013\r\n * @author I4DS http://www.fhnw.ch/i4ds, 2013\r\n * @license MIT License <http://www.opensource.org/licenses/mit-license.php>\r\n * @description\r\n * In-place quicksort for typed arrays (e.g. for Float32Array)\r\n * provides fast sorting\r\n * useful e.g. for a custom shader and/or BufferGeometry\r\n * Complexity: http://bigocheatsheet.com/ see Quicksort\r\n *\r\n * @example\r\n * points: [x, y, z, x, y, z, x, y, z, ...]\r\n * eleSize: 3 //because of (x, y, z)\r\n * orderElement: 0 //order according to x\r\n *\r\n * @param {TypedArray} arr - array to be sorted\r\n * @param {Integer} eleSize - element size\r\n * @param {Integer} orderElement - index of element used for sorting, < eleSize\r\n * @param {Integer} [begin] - start index for range to be sorted\r\n * @param {Integer} [end] - end index for range to be sorted\r\n * @return {TypedArray} the input array\r\n */\r\nexport function quicksortIP (arr: NumberArray, eleSize: number, orderElement: number, begin = 0, end?: number) {\r\n  end = (end || (arr.length / eleSize)) - 1\r\n\r\n  const stack = []\r\n  let sp = -1\r\n  let left = begin\r\n  let right = end\r\n  let tmp = 0.0\r\n  let x = 0\r\n  let y = 0\r\n\r\n  const swapF = function (a: number, b: number) {\r\n    a *= eleSize; b *= eleSize\r\n    for (y = 0; y < eleSize; y++) {\r\n      tmp = arr[ a + y ]\r\n      arr[ a + y ] = arr[ b + y ]\r\n      arr[ b + y ] = tmp\r\n    }\r\n  }\r\n\r\n  let i, j\r\n\r\n  while (true) {\r\n    if (right - left <= 25) {\r\n      for (j = left + 1; j <= right; j++) {\r\n        for (x = 0; x < eleSize; x++) {\r\n          swap[ x ] = arr[ j * eleSize + x ]\r\n        }\r\n\r\n        i = j - 1\r\n\r\n        while (i >= left && arr[ i * eleSize + orderElement ] > swap[ orderElement ]) {\r\n          for (x = 0; x < eleSize; x++) {\r\n            arr[ (i + 1) * eleSize + x ] = arr[ i * eleSize + x ]\r\n          }\r\n          i--\r\n        }\r\n\r\n        for (x = 0; x < eleSize; x++) {\r\n          arr[ (i + 1) * eleSize + x ] = swap[ x ]\r\n        }\r\n      }\r\n\r\n      if (sp === -1) break\r\n\r\n      right = stack[ sp-- ] // ?\r\n      left = stack[ sp-- ]\r\n    } else {\r\n      const median = (left + right) >> 1\r\n\r\n      i = left + 1\r\n      j = right\r\n\r\n      swapF(median, i)\r\n\r\n      if (arr[ left * eleSize + orderElement ] > arr[ right * eleSize + orderElement ]) {\r\n        swapF(left, right)\r\n      }\r\n\r\n      if (arr[ i * eleSize + orderElement ] > arr[ right * eleSize + orderElement ]) {\r\n        swapF(i, right)\r\n      }\r\n\r\n      if (arr[ left * eleSize + orderElement ] > arr[ i * eleSize + orderElement ]) {\r\n        swapF(left, i)\r\n      }\r\n\r\n      for (x = 0; x < eleSize; x++) {\r\n        temp[ x ] = arr[ i * eleSize + x ]\r\n      }\r\n\r\n      while (true) {\r\n        do i++; while (arr[ i * eleSize + orderElement ] < temp[ orderElement ])\r\n        do j--; while (arr[ j * eleSize + orderElement ] > temp[ orderElement ])\r\n        if (j < i) break\r\n        swapF(i, j)\r\n      }\r\n\r\n      for (x = 0; x < eleSize; x++) {\r\n        arr[ (left + 1) * eleSize + x ] = arr[ j * eleSize + x ]\r\n        arr[ j * eleSize + x ] = temp[ x ]\r\n      }\r\n\r\n      if (right - i + 1 >= j - left) {\r\n        stack[ ++sp ] = i\r\n        stack[ ++sp ] = right\r\n        right = j - 1\r\n      } else {\r\n        stack[ ++sp ] = left\r\n        stack[ ++sp ] = j - 1\r\n        left = i\r\n      }\r\n    }\r\n  }\r\n\r\n  return arr\r\n}\r\n\r\nexport function quicksortCmp<T> (arr: NumberArray|T[], cmp?: (a: number|T, b: number|T) => number, begin = 0, end?: number) {\r\n  cmp = cmp || function cmp (a, b) {\r\n    if (a > b) return 1\r\n    if (a < b) return -1\r\n    return 0\r\n  }\r\n  end = (end || arr.length) - 1\r\n\r\n  const stack = []\r\n  let sp = -1\r\n  let left = begin\r\n  let right = end\r\n  let tmp: number|T\r\n\r\n  function swap (a: number, b: number) {\r\n    const tmp2 = arr[ a ]\r\n    arr[ a ] = arr[ b ]\r\n    arr[ b ] = tmp2\r\n  }\r\n\r\n  let i, j\r\n\r\n  while (true) {\r\n    if (right - left <= 25) {\r\n      for (let k = left + 1; k <= right; ++k) {\r\n        tmp = arr[ k ]\r\n        i = k - 1\r\n\r\n        while (i >= left && cmp(arr[ i ], tmp) > 0) {\r\n          arr[ i + 1 ] = arr[ i ]\r\n          --i\r\n        }\r\n\r\n        arr[ i + 1 ] = tmp\r\n      }\r\n\r\n      if (sp === -1) break\r\n\r\n      right = stack[ sp-- ] // ?\r\n      left = stack[ sp-- ]\r\n    } else {\r\n      const median = (left + right) >> 1\r\n\r\n      i = left + 1\r\n      j = right\r\n\r\n      swap(median, i)\r\n\r\n      if (cmp(arr[ left ], arr[ right ]) > 0) {\r\n        swap(left, right)\r\n      }\r\n\r\n      if (cmp(arr[ i ], arr[ right ]) > 0) {\r\n        swap(i, right)\r\n      }\r\n\r\n      if (cmp(arr[ left ], arr[ i ]) > 0) {\r\n        swap(left, i)\r\n      }\r\n\r\n      tmp = arr[ i ]\r\n\r\n      while (true) {\r\n        do i++; while (cmp(arr[ i ], tmp) < 0)\r\n        do j--; while (cmp(arr[ j ], tmp) > 0)\r\n        if (j < i) break\r\n        swap(i, j)\r\n      }\r\n\r\n      arr[ left + 1 ] = arr[ j ]\r\n      arr[ j ] = tmp\r\n\r\n      if (right - i + 1 >= j - left) {\r\n        stack[ ++sp ] = i\r\n        stack[ ++sp ] = right\r\n        right = j - 1\r\n      } else {\r\n        stack[ ++sp ] = left\r\n        stack[ ++sp ] = j - 1\r\n        left = i\r\n      }\r\n    }\r\n  }\r\n\r\n  return arr\r\n}\r\n\r\nexport function quickselectCmp<T> (arr: NumberArray|T[], n: number, cmp?: (a: number|T, b: number|T) => number, left = 0, right?: number) {\r\n  cmp = cmp || function cmp (a, b) {\r\n    if (a > b) return 1\r\n    if (a < b) return -1\r\n    return 0\r\n  }\r\n  right = (right || arr.length) - 1\r\n\r\n  let pivotIndex, pivotValue, storeIndex\r\n\r\n  function swap (a: number, b: number) {\r\n    const tmp = arr[ a ]\r\n    arr[ a ] = arr[ b ]\r\n    arr[ b ] = tmp\r\n  }\r\n\r\n  while (true) {\r\n    if (left === right) {\r\n      return arr[ left ]\r\n    }\r\n    pivotIndex = (left + right) >> 1\r\n    pivotValue = arr[ pivotIndex ]\r\n    swap(pivotIndex, right)\r\n    storeIndex = left\r\n    for (let i = left; i < right; ++i) {\r\n      if (cmp(arr[ i ], pivotValue) < 0) {\r\n        swap(storeIndex, i)\r\n        ++storeIndex\r\n      }\r\n    }\r\n    swap(right, storeIndex)\r\n    pivotIndex = storeIndex\r\n    if (n === pivotIndex) {\r\n      return arr[ n ]\r\n    } else if (n < pivotIndex) {\r\n      right = pivotIndex - 1\r\n    } else {\r\n      left = pivotIndex + 1\r\n    }\r\n  }\r\n}\r\n\r\nexport function arrayMax (array: NumberArray) {\r\n  let max = -Infinity\r\n  for (let i = 0, il = array.length; i < il; ++i) {\r\n    if (array[ i ] > max) max = array[ i ]\r\n  }\r\n  return max\r\n}\r\n\r\nexport function arrayMin (array: NumberArray) {\r\n  let min = Infinity\r\n  for (let i = 0, il = array.length; i < il; ++i) {\r\n    if (array[ i ] < min) min = array[ i ]\r\n  }\r\n  return min\r\n}\r\n\r\nexport function arraySum (array: NumberArray, stride = 1, offset = 0) {\r\n  const n = array.length\r\n  let sum = 0\r\n  for (let i = offset; i < n; i += stride) {\r\n    sum += array[ i ]\r\n  }\r\n  return sum\r\n}\r\n\r\nexport function arrayMean (array: NumberArray, stride = 1, offset = 0) {\r\n  return arraySum(array, stride, offset) / (array.length / stride)\r\n}\r\n\r\nexport function arrayRms (array: NumberArray) {\r\n  const n = array.length\r\n  let sumSq = 0\r\n  for (let i = 0; i < n; ++i) {\r\n    const di = array[ i ]\r\n    sumSq += di * di\r\n  }\r\n  return Math.sqrt(sumSq / n)\r\n}\r\n\r\nexport function arraySorted (array: NumberArray) {\r\n  for (let i = 1, il = array.length; i < il; ++i) {\r\n    if (array[ i - 1 ] > array[ i ]) return false\r\n  }\r\n  return true\r\n}\r\n\r\nexport function arraySortedCmp<T> (array: NumberArray|T[], cmp: (a: number|T, b: number|T) => number) {\r\n  for (let i = 1, il = array.length; i < il; ++i) {\r\n    if (cmp(array[ i - 1 ], array[ i ]) > 0) return false\r\n  }\r\n  return true\r\n}\r\n","/**\r\n * @file Viewer Utils\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport {\r\n  Vector2, Vector3, Matrix4, Points, Scene, Camera,\r\n  Object3D, WebGLRenderer\r\n} from 'three'\r\n\r\nimport { createParams } from '../utils'\r\nimport TiledRenderer from './tiled-renderer'\r\nimport { quicksortCmp } from '../math/array-utils'\r\nimport Viewer from './viewer'\r\n\r\nfunction _trimCanvas (canvas: HTMLCanvasElement, r: number, g: number, b: number, a: number) {\r\n  const canvasHeight = canvas.height\r\n  const canvasWidth = canvas.width\r\n\r\n  const ctx = canvas.getContext('2d')!\r\n  const pixels = ctx.getImageData(0, 0, canvasWidth, canvasHeight).data\r\n\r\n  let x, y, doBreak, off\r\n\r\n  doBreak = false\r\n  for (y = 0; y < canvasHeight; y++) {\r\n    for (x = 0; x < canvasWidth; x++) {\r\n      off = (y * canvasWidth + x) * 4\r\n      if (pixels[ off ] !== r || pixels[ off + 1 ] !== g ||\r\n          pixels[ off + 2 ] !== b || pixels[ off + 3 ] !== a\r\n      ) {\r\n        doBreak = true\r\n        break\r\n      }\r\n    }\r\n    if (doBreak) {\r\n      break\r\n    }\r\n  }\r\n  const topY = y\r\n\r\n  doBreak = false\r\n  for (x = 0; x < canvasWidth; x++) {\r\n    for (y = 0; y < canvasHeight; y++) {\r\n      off = (y * canvasWidth + x) * 4\r\n      if (pixels[ off ] !== r || pixels[ off + 1 ] !== g ||\r\n          pixels[ off + 2 ] !== b || pixels[ off + 3 ] !== a\r\n      ) {\r\n        doBreak = true\r\n        break\r\n      }\r\n    }\r\n    if (doBreak) {\r\n      break\r\n    }\r\n  }\r\n  const topX = x\r\n\r\n  doBreak = false\r\n  for (y = canvasHeight - 1; y >= 0; y--) {\r\n    for (x = canvasWidth - 1; x >= 0; x--) {\r\n      off = (y * canvasWidth + x) * 4\r\n      if (pixels[ off ] !== r || pixels[ off + 1 ] !== g ||\r\n          pixels[ off + 2 ] !== b || pixels[ off + 3 ] !== a\r\n      ) {\r\n        doBreak = true\r\n        break\r\n      }\r\n    }\r\n    if (doBreak) {\r\n      break\r\n    }\r\n  }\r\n  const bottomY = y\r\n\r\n  doBreak = false\r\n  for (x = canvasWidth - 1; x >= 0; x--) {\r\n    for (y = canvasHeight - 1; y >= 0; y--) {\r\n      off = (y * canvasWidth + x) * 4\r\n      if (pixels[ off ] !== r || pixels[ off + 1 ] !== g ||\r\n          pixels[ off + 2 ] !== b || pixels[ off + 3 ] !== a\r\n      ) {\r\n        doBreak = true\r\n        break\r\n      }\r\n    }\r\n    if (doBreak) {\r\n      break\r\n    }\r\n  }\r\n  const bottomX = x\r\n\r\n  const trimedCanvas = document.createElement('canvas')\r\n  trimedCanvas.width = bottomX - topX\r\n  trimedCanvas.height = bottomY - topY\r\n\r\n  const trimedCtx = trimedCanvas.getContext('2d')!\r\n  trimedCtx.drawImage(\r\n    canvas,\r\n    topX, topY,\r\n    trimedCanvas.width, trimedCanvas.height,\r\n    0, 0,\r\n    trimedCanvas.width, trimedCanvas.height\r\n  )\r\n\r\n  return trimedCanvas\r\n}\r\n\r\n/**\r\n * Image parameter object.\r\n * @typedef {Object} ImageParameters - image generation parameters\r\n * @property {Boolean} trim - trim the image\r\n * @property {Integer} factor - scaling factor to apply to the viewer canvas\r\n * @property {Boolean} antialias - antialias the image\r\n * @property {Boolean} transparent - transparent image background\r\n */\r\n\r\nexport const ImageDefaultParameters = {\r\n  trim: false,\r\n  factor: 1,\r\n  antialias: false,\r\n  transparent: false,\r\n  onProgress: undefined as Function|undefined\r\n}\r\nexport type ImageParameters = typeof ImageDefaultParameters\r\n\r\n/**\r\n * Make image from what is shown in a viewer canvas\r\n * @param  {Viewer} viewer - the viewer\r\n * @param  {ImageParameters} params - parameters object\r\n * @return {Promise} A Promise object that resolves to an image {@link Blob}.\r\n */\r\nexport function makeImage (viewer: Viewer, params: Partial<ImageParameters> = {}) {\r\n  const {trim, factor, antialias, transparent} = createParams(params, ImageDefaultParameters)\r\n\r\n  const renderer = viewer.renderer\r\n  const camera = viewer.camera\r\n\r\n  const originalClearAlpha = renderer.getClearAlpha()\r\n  const backgroundColor = renderer.getClearColor()\r\n\r\n  function setLineWidthAndPixelSize (invert = false) {\r\n    let _factor = factor\r\n    if (antialias) _factor *= 2\r\n    if (invert) _factor = 1 / _factor\r\n    viewer.scene.traverse(function (o: any) {  // TODO\r\n      const m = o.material\r\n      if (m && m.linewidth) {\r\n        m.linewidth *= _factor\r\n      }\r\n      if (m && m.uniforms && m.uniforms.size) {\r\n        if (m.uniforms.size.__seen === undefined) {\r\n          m.uniforms.size.value *= _factor\r\n          m.uniforms.size.__seen = true\r\n        }\r\n      }\r\n      if (m && m.uniforms && m.uniforms.linewidth) {\r\n        if (m.uniforms.linewidth.__seen === undefined) {\r\n          m.uniforms.linewidth.value *= _factor\r\n          m.uniforms.linewidth.__seen = true\r\n        }\r\n      }\r\n    })\r\n    viewer.scene.traverse(function (o: any) {  // TODO\r\n      const m = o.material\r\n      if (m && m.uniforms && m.uniforms.size) {\r\n        delete m.uniforms.size.__seen\r\n      }\r\n      if (m && m.uniforms && m.uniforms.linewidth) {\r\n        delete m.uniforms.linewidth.__seen\r\n      }\r\n    })\r\n  }\r\n\r\n  function trimCanvas (canvas: HTMLCanvasElement) {\r\n    if (trim) {\r\n      const bg = backgroundColor\r\n      const r = transparent ? 0 : bg.r * 255\r\n      const g = transparent ? 0 : bg.g * 255\r\n      const b = transparent ? 0 : bg.b * 255\r\n      const a = transparent ? 0 : 255\r\n      return _trimCanvas(canvas, r, g, b, a)\r\n    } else {\r\n      return canvas\r\n    }\r\n  }\r\n\r\n  function onProgress (i: number, n: number, finished: boolean) {\r\n    if (typeof params.onProgress === 'function') {\r\n      params.onProgress(i, n, finished)\r\n    }\r\n  }\r\n\r\n  return new Promise<Blob>(function (resolve, reject) {\r\n    const tiledRenderer = new TiledRenderer(\r\n      renderer, camera, viewer,\r\n      { factor, antialias, onProgress, onFinish }\r\n    )\r\n\r\n    renderer.setClearAlpha(transparent ? 0 : 1)\r\n    setLineWidthAndPixelSize()\r\n    tiledRenderer.renderAsync()\r\n\r\n    function onFinish (i: number, n: number) {\r\n      const canvas = trimCanvas(tiledRenderer.canvas)\r\n      canvas.toBlob(\r\n        function (blob) {\r\n          renderer.setClearAlpha(originalClearAlpha)\r\n          setLineWidthAndPixelSize(true)\r\n          viewer.requestRender()\r\n          onProgress(n, n, true)\r\n          if (blob) {\r\n            resolve(blob)\r\n          } else {\r\n            reject('error creating image')\r\n          }\r\n        },\r\n        'image/png'\r\n      )\r\n    }\r\n  })\r\n}\r\n\r\nconst vertex = new Vector3()\r\nconst matrix = new Matrix4()\r\nconst modelViewProjectionMatrix = new Matrix4()\r\n\r\nexport function sortProjectedPosition (scene: Scene, camera: Camera) {\r\n  // console.time( \"sort\" );\r\n\r\n  scene.traverseVisible(function (o) {\r\n    if (!(o instanceof Points) || !o.userData.buffer.parameters.sortParticles) {\r\n      return\r\n    }\r\n\r\n    const attributes = (o.geometry as any).attributes  // TODO\r\n    const n = attributes.position.count\r\n\r\n    if (n === 0) return\r\n\r\n    matrix.multiplyMatrices(\r\n      camera.matrixWorldInverse, o.matrixWorld\r\n    )\r\n    modelViewProjectionMatrix.multiplyMatrices(\r\n      camera.projectionMatrix, matrix\r\n    )\r\n\r\n    let sortData, sortArray, zArray: Float32Array, cmpFn\r\n\r\n    if (!o.userData.sortData) {\r\n      zArray = new Float32Array(n)\r\n      sortArray = new Uint32Array(n)\r\n      cmpFn = function (ai: number, bi: number) {\r\n        const a = zArray[ ai ]\r\n        const b = zArray[ bi ]\r\n        if (a > b) return 1\r\n        if (a < b) return -1\r\n        return 0\r\n      }\r\n\r\n      sortData = {\r\n        __zArray: zArray,\r\n        __sortArray: sortArray,\r\n        __cmpFn: cmpFn\r\n      }\r\n\r\n      o.userData.sortData = sortData\r\n    } else {\r\n      sortData = o.userData.sortData\r\n      zArray = sortData.__zArray\r\n      sortArray = sortData.__sortArray\r\n      cmpFn = sortData.__cmpFn\r\n    }\r\n\r\n    for (let i = 0; i < n; ++i) {\r\n      vertex.fromArray(attributes.position.array, i * 3)\r\n      vertex.applyMatrix4(modelViewProjectionMatrix)\r\n\r\n      // negate, so that sorting order is reversed\r\n      zArray[ i ] = -vertex.z\r\n      sortArray[ i ] = i\r\n    }\r\n\r\n    quicksortCmp(sortArray, cmpFn)\r\n\r\n    let index, indexSrc, indexDst, tmpTab\r\n\r\n    for (let name in attributes) {\r\n      const attr = attributes[ name ]\r\n      const array = attr.array\r\n      const itemSize = attr.itemSize\r\n\r\n      if (!sortData[ name ]) {\r\n        sortData[ name ] = new Float32Array(itemSize * n)\r\n      }\r\n\r\n      tmpTab = sortData[ name ]\r\n      sortData[ name ] = array\r\n\r\n      for (let i = 0; i < n; ++i) {\r\n        index = sortArray[ i ]\r\n\r\n        for (let j = 0; j < itemSize; ++j) {\r\n          indexSrc = index * itemSize + j\r\n          indexDst = i * itemSize + j\r\n          tmpTab[ indexDst ] = array[ indexSrc ]\r\n        }\r\n      }\r\n\r\n      attributes[ name ].array = tmpTab\r\n      attributes[ name ].needsUpdate = true\r\n    }\r\n  })\r\n\r\n    // console.timeEnd( \"sort\" );\r\n}\r\n\r\nconst resolution = new Vector2()\r\nconst projectionMatrixInverse = new Matrix4()\r\nconst projectionMatrixTranspose = new Matrix4()\r\n\r\nexport function updateMaterialUniforms (group: Object3D, camera: Camera, renderer: WebGLRenderer, cDist: number, bRadius: number) {\r\n  let size = new Vector2()\r\n  renderer.getSize(size)\r\n  const canvasHeight = size.height\r\n  const pixelRatio = renderer.getPixelRatio()\r\n  const ortho = camera.type === 'OrthographicCamera'\r\n\r\n  resolution.set(size.width, size.height)\r\n  projectionMatrixInverse.getInverse(camera.projectionMatrix)\r\n  projectionMatrixTranspose.copy(camera.projectionMatrix).transpose()\r\n\r\n  group.traverse(function (o: any) {\r\n    const m = o.material\r\n    if (!m) return\r\n\r\n    const u = m.uniforms\r\n    if (!u) return\r\n\r\n    if (m.clipNear) {\r\n      const nearFactor = (50 - m.clipNear) / 50\r\n      const nearClip = cDist - (bRadius * nearFactor)\r\n      u.clipNear.value = nearClip\r\n    }\r\n\r\n    if (u.canvasHeight) {\r\n      u.canvasHeight.value = canvasHeight\r\n    }\r\n\r\n    if (u.resolution) {\r\n      u.resolution.value.copy(resolution)\r\n    }\r\n\r\n    if (u.pixelRatio) {\r\n      u.pixelRatio.value = pixelRatio\r\n    }\r\n\r\n    if (u.projectionMatrixInverse) {\r\n      u.projectionMatrixInverse.value.copy(projectionMatrixInverse)\r\n    }\r\n\r\n    if (u.projectionMatrixTranspose) {\r\n      u.projectionMatrixTranspose.value.copy(projectionMatrixTranspose)\r\n    }\r\n\r\n    if (u.ortho) {\r\n      u.ortho.value = ortho\r\n    }\r\n  })\r\n}\r\n\r\nexport function updateCameraUniforms (group: Object3D, camera: Camera) {\r\n  projectionMatrixInverse.getInverse(camera.projectionMatrix)\r\n  projectionMatrixTranspose.copy(camera.projectionMatrix).transpose()\r\n\r\n  group.traverse(function (o: any) {\r\n    const m = o.material\r\n    if (!m) return\r\n\r\n    const u = m.uniforms\r\n    if (!u) return\r\n\r\n    if (u.projectionMatrixInverse) {\r\n      u.projectionMatrixInverse.value.copy(projectionMatrixInverse)\r\n    }\r\n\r\n    if (u.projectionMatrixTranspose) {\r\n      u.projectionMatrixTranspose.value.copy(projectionMatrixTranspose)\r\n    }\r\n  })\r\n}\r\n","/**\r\n * @file Viewer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\n// adapted from https://webglfundamentals.org/webgl/resources/webgl-utils.js\r\n// Copyright 2012, Gregg Tavares. Modified BSD License\r\n\r\nexport function createProgram(gl: WebGLRenderingContext, shaders: WebGLShader[], attribs?: string[], locations?: number[]) {\r\n  const program = gl.createProgram()\r\n  if (!program) {\r\n    console.log(`error creating WebGL program`)\r\n    return\r\n  }\r\n  shaders.forEach(shader => gl.attachShader(program, shader))\r\n  if (attribs) {\r\n    attribs.forEach((attrib, i) => {\r\n      gl.bindAttribLocation(program, locations ? locations[i] : i, attrib)\r\n    })\r\n  }\r\n  gl.linkProgram(program);\r\n\r\n  // Check the link status\r\n  const linked = gl.getProgramParameter(program, gl.LINK_STATUS)\r\n  if (!linked) {\r\n      console.log(`error linking program: ${gl.getProgramInfoLog(program)}`)\r\n      gl.deleteProgram(program)\r\n      return null\r\n  }\r\n  return program\r\n}\r\n\r\nexport function loadShader(gl: WebGLRenderingContext, shaderSource: string, shaderType: number) {\r\n  const shader = gl.createShader(shaderType)\r\n  if (!shader) {\r\n    console.log(`error creating WebGL shader ${shaderType}`)\r\n    return                      // can't create shader\r\n  }\r\n  gl.shaderSource(shader, shaderSource)\r\n  gl.compileShader(shader)\r\n\r\n  // Check the compile status\r\n  const compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS)\r\n  if (!compiled) {\r\n    console.log(`error compiling shader ${shader}: ${gl.getShaderInfoLog(shader)}`)\r\n    gl.deleteShader(shader)\r\n    return null\r\n  }\r\n\r\n  return shader\r\n}\r\n\r\n//\r\n\r\nexport function getErrorDescription(gl: WebGLRenderingContext, error: number) {\r\n  switch (error) {\r\n    case gl.NO_ERROR: return 'no error'\r\n    case gl.INVALID_ENUM: return 'invalid enum'\r\n    case gl.INVALID_VALUE: return 'invalid value'\r\n    case gl.INVALID_OPERATION: return 'invalid operation'\r\n    case gl.INVALID_FRAMEBUFFER_OPERATION: return 'invalid framebuffer operation'\r\n    case gl.OUT_OF_MEMORY: return 'out of memory'\r\n    case gl.CONTEXT_LOST_WEBGL: return 'context lost'\r\n  }\r\n  return 'unknown error'\r\n}\r\n\r\nexport function getExtension (gl: WebGLRenderingContext, name: string) {\r\n   const ext = gl.getExtension(name)\r\n   if (!ext) console.log(`extension '${name}' not available`)\r\n   return ext\r\n}\r\n\r\nconst TextureTestVertShader = `\r\nattribute vec4 a_position;\r\n\r\nvoid main() {\r\n  gl_Position = a_position;\r\n}`\r\n\r\nconst TextureTestFragShader = `\r\nprecision mediump float;\r\nuniform vec4 u_color;\r\nuniform sampler2D u_texture;\r\n\r\nvoid main() {\r\n  gl_FragColor = texture2D(u_texture, vec2(0.5, 0.5)) * u_color;\r\n}`\r\n\r\nconst TextureTestTexCoords = new Float32Array([\r\n  -1.0, -1.0, 1.0, -1.0, -1.0,  1.0, -1.0,  1.0, 1.0, -1.0, 1.0,  1.0\r\n])\r\n\r\nexport function testTextureSupport (type: number) {\r\n  // adapted from\r\n  // https://stackoverflow.com/questions/28827511/webgl-ios-render-to-floating-point-texture\r\n\r\n  // Get A WebGL context\r\n  const canvas = document.createElement('canvas')\r\n  canvas.width = 16\r\n  canvas.height = 16\r\n  canvas.style.width = 16 + 'px'\r\n  canvas.style.height = 16 + 'px'\r\n  const gl = canvas.getContext(\"webgl\") || canvas.getContext(\"experimental-webgl\");\r\n  if (!gl) {\r\n    console.log(`error creating webgl context for ${type}`)\r\n    return false\r\n  }\r\n  if (!(gl instanceof WebGLRenderingContext)) {\r\n    console.log(`Got unexpected type for WebGL rendering context`)\r\n    return false\r\n  }\r\n\r\n  getExtension(gl, 'OES_texture_float')\r\n  getExtension(gl, 'OES_texture_half_float')\r\n  getExtension(gl, 'WEBGL_color_buffer_float')\r\n\r\n  // setup shaders\r\n  const vertShader = loadShader(gl, TextureTestVertShader, gl.VERTEX_SHADER)\r\n  const fragShader = loadShader(gl, TextureTestFragShader, gl.FRAGMENT_SHADER)\r\n  if (!vertShader || !fragShader) return false\r\n\r\n  // setup program\r\n  const program = createProgram(gl, [ vertShader, fragShader ])\r\n  if (!program) {\r\n    console.log(`error creating WebGL program`)\r\n    return false\r\n  }\r\n  gl.useProgram(program);\r\n\r\n  // look up where the vertex data needs to go.\r\n  const positionLocation = gl.getAttribLocation(program, \"a_position\");\r\n  const colorLoc = gl.getUniformLocation(program, \"u_color\");\r\n  if (!colorLoc) {\r\n    console.log(`error getting 'u_color' uniform location`)\r\n    return false\r\n  }\r\n\r\n  // provide texture coordinates for the rectangle.\r\n  const positionBuffer = gl.createBuffer()\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer)\r\n  gl.bufferData(gl.ARRAY_BUFFER, TextureTestTexCoords, gl.STATIC_DRAW)\r\n  gl.enableVertexAttribArray(positionLocation)\r\n  gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 0, 0)\r\n\r\n  const whiteTex = gl.createTexture()\r\n  const whiteData = new Uint8Array([255, 255, 255, 255])\r\n  gl.bindTexture(gl.TEXTURE_2D, whiteTex)\r\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, whiteData)\r\n\r\n  const tex = gl.createTexture()\r\n  gl.bindTexture(gl.TEXTURE_2D, tex)\r\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, type, null)\r\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST)\r\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST)\r\n\r\n  const fb = gl.createFramebuffer()\r\n  gl.bindFramebuffer(gl.FRAMEBUFFER, fb)\r\n  gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, tex, 0)\r\n  const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER)\r\n  if (status !== gl.FRAMEBUFFER_COMPLETE) {\r\n    console.log(`error creating framebuffer for ${type}`)\r\n    return false\r\n  }\r\n\r\n  // Draw the rectangle.\r\n  gl.bindTexture(gl.TEXTURE_2D, whiteTex)\r\n  gl.uniform4fv(colorLoc, [0, 10, 20, 1])\r\n  gl.drawArrays(gl.TRIANGLES, 0, 6)\r\n\r\n  gl.bindTexture(gl.TEXTURE_2D, tex)\r\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null)\r\n  gl.clearColor(1, 0, 0, 1)\r\n  gl.clear(gl.COLOR_BUFFER_BIT)\r\n  gl.uniform4fv(colorLoc, [0, 1/10, 1/20, 1])\r\n  gl.drawArrays(gl.TRIANGLES, 0, 6)\r\n\r\n  // Check if rendered correctly\r\n  const pixel = new Uint8Array(4)\r\n  gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixel)\r\n  if (pixel[0] !== 0 || pixel[1] < 248 || pixel[2] < 248 || pixel[3] < 254) {\r\n    console.log(`not able to actually render to ${type} texture`)\r\n    return false\r\n  }\r\n\r\n  // Check reading from float texture\r\n  if (type === gl.FLOAT) {\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, fb)\r\n    const floatPixel = new Float32Array(4)\r\n    gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.FLOAT, floatPixel)\r\n    const error = gl.getError()\r\n    if (error) {\r\n      console.log(`error reading pixels as float: '${getErrorDescription(gl, error)}'`)\r\n      return false\r\n    }\r\n  }\r\n\r\n  return true\r\n}\r\n","/**\r\n * @file Viewer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Signal } from 'signals'\r\nimport {\r\n  PerspectiveCamera, OrthographicCamera, StereoCamera,\r\n  Vector2, Box3, Vector3, Matrix4, Color,\r\n  WebGLRenderer, WebGLRenderTarget,\r\n  NearestFilter, LinearFilter, AdditiveBlending,\r\n  RGBAFormat, FloatType, /*HalfFloatType, */UnsignedByteType,\r\n  ShaderMaterial,\r\n  PlaneGeometry, Geometry,\r\n  Scene, Mesh, Group, Object3D, Uniform,\r\n  Fog, SpotLight, AmbientLight,\r\n  BufferGeometry, BufferAttribute,\r\n  LineSegments,\r\n  LinearEncoding, sRGBEncoding, TextureEncoding\r\n} from 'three'\r\nimport '../shader/BasicLine.vert'\r\nimport '../shader/BasicLine.frag'\r\nimport '../shader/Quad.vert'\r\nimport '../shader/Quad.frag'\r\n\r\nimport {\r\n  Debug, Log, WebglErrorMessage, Browser,\r\n  setExtensionFragDepth, SupportsReadPixelsFloat, setSupportsReadPixelsFloat\r\n} from '../globals'\r\nimport { degToRad } from '../math/math-utils'\r\nimport Stats from './stats'\r\nimport { getShader } from '../shader/shader-utils'\r\nimport { setColorSpace } from '../color/colormaker'\r\nimport { JitterVectors } from './viewer-constants'\r\nimport {\r\n  makeImage, ImageParameters,\r\n  sortProjectedPosition, updateMaterialUniforms, updateCameraUniforms\r\n} from './viewer-utils'\r\nimport { testTextureSupport } from './gl-utils'\r\n\r\nimport Buffer from '../buffer/buffer'\r\n\r\nconst pixelBufferFloat = new Float32Array(4 * 25)\r\nconst pixelBufferUint = new Uint8Array(4 * 25)\r\n\r\n// When picking, we read a 25 pixel (5x5) array (readRenderTargetPixels)\r\n// We read the pixels in the order below to find what was picked.\r\n// This starts at the center and tries successively further points.\r\n// (Many points will be at equal distance to the center, their order\r\n// is arbitrary).\r\nconst pixelOrder = [12,7,13,17,11,6,8,18,16,2,14,22,10,1,3,9,19,23,21,15,5,0,4,24,20]\r\n\r\n\r\nconst tmpMatrix = new Matrix4()\r\n\r\nfunction onBeforeRender (this: Object3D, renderer: WebGLRenderer, scene: Scene, camera: PerspectiveCamera|OrthographicCamera, geometry: Geometry, material: ShaderMaterial/*, group */) {\r\n  const u = material.uniforms\r\n  const updateList = []\r\n\r\n  if (!u) return  // See #908 - some materials may not have uniforms, ignore these\r\n\r\n  if (u.objectId) {\r\n    u.objectId.value = SupportsReadPixelsFloat ? this.id : this.id / 255\r\n    updateList.push('objectId')\r\n  }\r\n\r\n  if (u.modelViewMatrixInverse || u.modelViewMatrixInverseTranspose ||\r\n      u.modelViewProjectionMatrix || u.modelViewProjectionMatrixInverse\r\n  ) {\r\n    this.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, this.matrixWorld)\r\n  }\r\n\r\n  if (u.modelViewMatrixInverse) {\r\n    u.modelViewMatrixInverse.value.getInverse(this.modelViewMatrix)\r\n    updateList.push('modelViewMatrixInverse')\r\n  }\r\n\r\n  if (u.modelViewMatrixInverseTranspose) {\r\n    if (u.modelViewMatrixInverse) {\r\n      u.modelViewMatrixInverseTranspose.value.copy(\r\n        u.modelViewMatrixInverse.value\r\n      ).transpose()\r\n    } else {\r\n      u.modelViewMatrixInverseTranspose.value\r\n        .getInverse(this.modelViewMatrix)\r\n        .transpose()\r\n    }\r\n    updateList.push('modelViewMatrixInverseTranspose')\r\n  }\r\n\r\n  if (u.modelViewProjectionMatrix) {\r\n    u.modelViewProjectionMatrix.value.multiplyMatrices(\r\n      camera.projectionMatrix, this.modelViewMatrix\r\n    )\r\n    updateList.push('modelViewProjectionMatrix')\r\n  }\r\n\r\n  if (u.modelViewProjectionMatrixInverse) {\r\n    if (u.modelViewProjectionMatrix) {\r\n      tmpMatrix.copy(\r\n        u.modelViewProjectionMatrix.value\r\n      )\r\n      u.modelViewProjectionMatrixInverse.value.getInverse(\r\n        tmpMatrix\r\n      )\r\n    } else {\r\n      tmpMatrix.multiplyMatrices(\r\n        camera.projectionMatrix, this.modelViewMatrix\r\n      )\r\n      u.modelViewProjectionMatrixInverse.value.getInverse(\r\n        tmpMatrix\r\n      )\r\n    }\r\n    updateList.push('modelViewProjectionMatrixInverse')\r\n  }\r\n\r\n  if (updateList.length) {\r\n    const materialProperties = renderer.properties.get(material)\r\n\r\n    if (materialProperties.program) {\r\n      const gl = renderer.getContext()\r\n      const p = materialProperties.program\r\n      gl.useProgram(p.program)\r\n      const pu = p.getUniforms()\r\n\r\n      updateList.forEach(function (name) {\r\n        pu.setValue(gl, name, u[ name ].value)\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport type CameraType = 'perspective'|'orthographic'|'stereo'\r\nexport type ColorWorkflow = 'linear' | 'sRGB'\r\n\r\nexport interface ViewerSignals {\r\n  ticked: Signal,\r\n  rendered: Signal\r\n}\r\n\r\nexport interface ViewerParameters {\r\n  fogColor: Color\r\n  fogNear: number\r\n  fogFar: number\r\n\r\n  backgroundColor: Color\r\n\r\n  cameraType: CameraType\r\n  cameraFov: number\r\n  cameraEyeSep: number\r\n  cameraZ: number\r\n\r\n  clipNear: number\r\n  clipFar: number\r\n  clipDist: number\r\n  clipMode: string               // \"scene\" or \"camera\"\r\n  clipScale: string              // \"relative\" or \"absolute\"\r\n\r\n  lightColor: Color\r\n  lightIntensity: number\r\n  ambientColor: Color\r\n  ambientIntensity: number\r\n\r\n  sampleLevel: number\r\n\r\n  rendererEncoding: TextureEncoding // default is three.LinearEncoding; three.sRGBEncoding gives more correct results\r\n}\r\n\r\nexport interface BufferInstance {\r\n  matrix: Matrix4\r\n}\r\n\r\n/**\r\n * Viewer class\r\n * @class\r\n * @param {String|Element} [idOrElement] - dom id or element\r\n */\r\nexport default class Viewer {\r\n  signals: ViewerSignals\r\n\r\n  container: HTMLElement\r\n  wrapper: HTMLElement\r\n\r\n  private rendering: boolean\r\n  private renderPending: boolean\r\n  private lastRenderedPicking: boolean\r\n  private isStill: boolean\r\n  private frameRequest: number\r\n\r\n  sampleLevel: number\r\n  private cDist: number\r\n  private bRadius: number\r\n\r\n  private parameters: ViewerParameters\r\n  stats: Stats\r\n\r\n  perspectiveCamera: PerspectiveCamera\r\n  private orthographicCamera: OrthographicCamera\r\n  private stereoCamera: StereoCamera\r\n  camera: PerspectiveCamera|OrthographicCamera\r\n\r\n  width: number\r\n  height: number\r\n\r\n  scene: Scene\r\n  private spotLight: SpotLight\r\n  private ambientLight: AmbientLight\r\n  rotationGroup: Group\r\n  translationGroup: Group\r\n  private modelGroup: Group\r\n  private pickingGroup: Group\r\n  private backgroundGroup: Group\r\n  private helperGroup: Group\r\n\r\n  renderer: WebGLRenderer\r\n  private supportsHalfFloat: boolean\r\n\r\n  private pickingTarget: WebGLRenderTarget\r\n  private sampleTarget: WebGLRenderTarget\r\n  private holdTarget: WebGLRenderTarget\r\n\r\n  private compositeUniforms: {\r\n    tForeground: Uniform\r\n    scale: Uniform\r\n  }\r\n  private compositeMaterial: ShaderMaterial\r\n  private compositeCamera: OrthographicCamera\r\n  private compositeScene: Scene\r\n\r\n  private boundingBoxMesh: LineSegments\r\n  boundingBox = new Box3()\r\n  private boundingBoxSize = new Vector3()\r\n  private boundingBoxLength = 0\r\n\r\n  private info = {\r\n    memory: {\r\n      programs: 0,\r\n      geometries: 0,\r\n      textures: 0\r\n    },\r\n    render: {\r\n      calls: 0,\r\n      vertices: 0,\r\n      faces: 0,\r\n      points: 0\r\n    }\r\n  }\r\n\r\n  private distVector = new Vector3()\r\n\r\n  constructor (idOrElement: string|HTMLElement) {\r\n    this.signals = {\r\n      ticked: new Signal(),\r\n      rendered: new Signal()\r\n    }\r\n\r\n    if (typeof idOrElement === 'string') {\r\n      const elm = document.getElementById(idOrElement)\r\n      if (elm === null) {\r\n        this.container = document.createElement('div')\r\n      }else {\r\n        this.container = elm\r\n      }\r\n    } else if (idOrElement instanceof HTMLElement) {\r\n      this.container = idOrElement\r\n    } else {\r\n      this.container = document.createElement('div')\r\n    }\r\n\r\n    if (this.container === document.body) {\r\n      this.width = window.innerWidth || 1\r\n      this.height = window.innerHeight || 1\r\n    } else {\r\n      const box = this.container.getBoundingClientRect()\r\n      this.width = box.width || 1\r\n      this.height = box.height || 1\r\n      this.container.style.overflow = 'hidden'\r\n    }\r\n\r\n    this.wrapper = document.createElement('div')\r\n    this.wrapper.style.position = 'relative'\r\n    this.container.appendChild(this.wrapper)\r\n\r\n    this._initParams()\r\n    this._initStats()\r\n    this._initCamera()\r\n    this._initScene()\r\n\r\n    if (this._initRenderer() === false) {\r\n      Log.error('Viewer: could not initialize renderer')\r\n      return\r\n    }\r\n\r\n    this._initHelper()\r\n\r\n    // fog & background\r\n    this.setBackground()\r\n    this.setFog()\r\n\r\n    this.animate = this.animate.bind(this)\r\n  }\r\n\r\n  private _initParams () {\r\n    this.parameters = {\r\n      fogColor: new Color(0x000000),\r\n      fogNear: 50,\r\n      fogFar: 100,\r\n\r\n      backgroundColor: new Color(0x000000),\r\n\r\n      cameraType: 'perspective',\r\n      cameraFov: 40,\r\n      cameraEyeSep: 0.3,\r\n      cameraZ: -80, // FIXME initial value should be automatically determined\r\n\r\n      clipNear: 0,\r\n      clipFar: 100,\r\n      clipDist: 10,\r\n      clipMode: 'scene',\r\n      clipScale: 'relative',\r\n\r\n      lightColor: new Color(0xdddddd),\r\n      lightIntensity: 1.0,\r\n      ambientColor: new Color(0xdddddd),\r\n      ambientIntensity: 0.2,\r\n\r\n      sampleLevel: 0,\r\n\r\n      // output encoding: use sRGB for a linear internal workflow, linear for traditional sRGB workflow.\r\n      rendererEncoding: LinearEncoding,\r\n    }\r\n  }\r\n\r\n  private _initCamera () {\r\n    const lookAt = new Vector3(0, 0, 0)\r\n    const {width, height} = this\r\n\r\n    this.perspectiveCamera = new PerspectiveCamera(\r\n      this.parameters.cameraFov, width / height\r\n    )\r\n    this.perspectiveCamera.position.z = this.parameters.cameraZ\r\n    this.perspectiveCamera.lookAt(lookAt)\r\n\r\n    this.orthographicCamera = new OrthographicCamera(\r\n      width / -2, width / 2, height / 2, height / -2\r\n    )\r\n    this.orthographicCamera.position.z = this.parameters.cameraZ\r\n    this.orthographicCamera.lookAt(lookAt)\r\n\r\n    this.stereoCamera = new StereoCamera()\r\n    this.stereoCamera.aspect = 0.5\r\n    this.stereoCamera.eyeSep = this.parameters.cameraEyeSep\r\n\r\n    const cameraType = this.parameters.cameraType\r\n    if (cameraType === 'orthographic') {\r\n      this.camera = this.orthographicCamera\r\n    } else if(cameraType === 'perspective' || cameraType === 'stereo') {\r\n      this.camera = this.perspectiveCamera\r\n    } else {\r\n      throw new Error(`Unknown cameraType '${cameraType}'`)\r\n    }\r\n    this.camera.updateProjectionMatrix()\r\n  }\r\n\r\n  private _initStats () {\r\n    this.stats = new Stats()\r\n  }\r\n\r\n  private _initScene () {\r\n    if (!this.scene) {\r\n      this.scene = new Scene()\r\n      this.scene.name = 'scene'\r\n    }\r\n\r\n    this.rotationGroup = new Group()\r\n    this.rotationGroup.name = 'rotationGroup'\r\n    this.scene.add(this.rotationGroup)\r\n\r\n    this.translationGroup = new Group()\r\n    this.translationGroup.name = 'translationGroup'\r\n    this.rotationGroup.add(this.translationGroup)\r\n\r\n    this.modelGroup = new Group()\r\n    this.modelGroup.name = 'modelGroup'\r\n    this.translationGroup.add(this.modelGroup)\r\n\r\n    this.pickingGroup = new Group()\r\n    this.pickingGroup.name = 'pickingGroup'\r\n    this.translationGroup.add(this.pickingGroup)\r\n\r\n    this.backgroundGroup = new Group()\r\n    this.backgroundGroup.name = 'backgroundGroup'\r\n    this.translationGroup.add(this.backgroundGroup)\r\n\r\n    this.helperGroup = new Group()\r\n    this.helperGroup.name = 'helperGroup'\r\n    this.translationGroup.add(this.helperGroup)\r\n\r\n    // fog\r\n\r\n    this.scene.fog = new Fog(this.parameters.fogColor.getHex())\r\n\r\n    // light\r\n\r\n    this.spotLight = new SpotLight(\r\n      this.parameters.lightColor.getHex(), this.parameters.lightIntensity\r\n    )\r\n    this.scene.add(this.spotLight)\r\n\r\n    this.ambientLight = new AmbientLight(\r\n      this.parameters.ambientColor.getHex(), this.parameters.ambientIntensity\r\n    )\r\n    this.scene.add(this.ambientLight)\r\n  }\r\n\r\n  private _initRenderer () {\r\n    const dpr = window.devicePixelRatio\r\n    const {width, height} = this\r\n\r\n    try {\r\n      this.renderer = new WebGLRenderer({\r\n        preserveDrawingBuffer: true,\r\n        alpha: true,\r\n        antialias: true\r\n      })\r\n    } catch (e) {\r\n      this.wrapper.innerHTML = WebglErrorMessage\r\n      return false\r\n    }\r\n    this.renderer.setPixelRatio(dpr)\r\n    this.renderer.setSize(width, height)\r\n    this.renderer.autoClear = false\r\n    this.renderer.sortObjects = true\r\n    this.renderer.outputEncoding = this.parameters.rendererEncoding\r\n\r\n    const gl = this.renderer.getContext()\r\n    // console.log(gl.getContextAttributes().antialias)\r\n    // console.log(gl.getParameter(gl.SAMPLES))\r\n\r\n    // For WebGL1, extensions must be explicitly enabled.\r\n    // The following are builtin to WebGL2 (and don't appear as\r\n    // extensions)\r\n    // EXT_frag_depth, OES_element_index_uint, OES_texture_float\r\n    // OES_texture_half_float\r\n\r\n    // The WEBGL_color_buffer_float extension is replaced by\r\n    // EXT_color_buffer_float\r\n\r\n    // If not webgl2 context, explicitly check for these\r\n    if (!this.renderer.capabilities.isWebGL2) {\r\n      setExtensionFragDepth(this.renderer.extensions.get('EXT_frag_depth'))\r\n      this.renderer.extensions.get('OES_element_index_uint')\r\n\r\n      setSupportsReadPixelsFloat(\r\n        (this.renderer.extensions.get('OES_texture_float') &&\r\n          this.renderer.extensions.get('WEBGL_color_buffer_float')) ||\r\n        (this.renderer.extensions.get('OES_texture_float') &&\r\n          testTextureSupport(gl.FLOAT))\r\n      )\r\n      // picking texture\r\n\r\n      this.renderer.extensions.get('OES_texture_float')\r\n\r\n      this.supportsHalfFloat = (\r\n        this.renderer.extensions.get('OES_texture_half_float') &&\r\n        testTextureSupport(0x8D61)\r\n      )\r\n\r\n    } else {\r\n      setExtensionFragDepth(true)\r\n      setSupportsReadPixelsFloat(\r\n        this.renderer.extensions.get('EXT_color_buffer_float')\r\n      )\r\n      this.supportsHalfFloat = true\r\n    }\r\n\r\n    this.wrapper.appendChild(this.renderer.domElement)\r\n\r\n    const dprWidth = width * dpr\r\n    const dprHeight = height * dpr\r\n\r\n\r\n    if (Debug) {\r\n      console.log(JSON.stringify({\r\n        'Browser': Browser,\r\n        'OES_texture_float': !!this.renderer.extensions.get('OES_texture_float'),\r\n        'OES_texture_half_float': !!this.renderer.extensions.get('OES_texture_half_float'),\r\n        'WEBGL_color_buffer_float': !!this.renderer.extensions.get('WEBGL_color_buffer_float'),\r\n        'testTextureSupport Float': testTextureSupport(gl.FLOAT),\r\n        'testTextureSupport HalfFloat': testTextureSupport(0x8D61),\r\n        'this.supportsHalfFloat': this.supportsHalfFloat,\r\n        'SupportsReadPixelsFloat': SupportsReadPixelsFloat\r\n      }, null, 2))\r\n    }\r\n\r\n    this.pickingTarget = new WebGLRenderTarget(\r\n      dprWidth, dprHeight,\r\n      {\r\n        minFilter: NearestFilter,\r\n        magFilter: NearestFilter,\r\n        stencilBuffer: false,\r\n        format: RGBAFormat,\r\n        type: SupportsReadPixelsFloat ? FloatType : UnsignedByteType\r\n      }\r\n    )\r\n    this.pickingTarget.texture.generateMipmaps = false\r\n    this.pickingTarget.texture.encoding = this.parameters.rendererEncoding\r\n\r\n    // workaround to reset the gl state after using testTextureSupport\r\n    // fixes some bug where nothing is rendered to the canvas\r\n    // when animations are started on page load\r\n    this.renderer.setRenderTarget(this.pickingTarget)\r\n    this.renderer.clear()\r\n    this.renderer.setRenderTarget(null!)\r\n\r\n    // ssaa textures\r\n\r\n    this.sampleTarget = new WebGLRenderTarget(\r\n      dprWidth, dprHeight,\r\n      {\r\n        minFilter: LinearFilter,\r\n        magFilter: LinearFilter,\r\n        format: RGBAFormat\r\n      }\r\n    )\r\n    this.sampleTarget.texture.encoding = this.parameters.rendererEncoding\r\n\r\n    this.holdTarget = new WebGLRenderTarget(\r\n      dprWidth, dprHeight,\r\n      {\r\n        minFilter: NearestFilter,\r\n        magFilter: NearestFilter,\r\n        format: RGBAFormat,\r\n        type: UnsignedByteType\r\n        // using HalfFloatType or FloatType does not work on some Chrome 61 installations\r\n        // type: this.supportsHalfFloat ? HalfFloatType : (\r\n        //   SupportsReadPixelsFloat ? FloatType : UnsignedByteType\r\n        // )\r\n      }\r\n    )\r\n    this.holdTarget.texture.encoding = this.parameters.rendererEncoding\r\n\r\n    this.compositeUniforms = {\r\n      'tForeground': new Uniform(this.sampleTarget.texture),\r\n      'scale': new Uniform(1.0)\r\n    }\r\n\r\n    this.compositeMaterial = new ShaderMaterial({\r\n      uniforms: this.compositeUniforms,\r\n      vertexShader: getShader('Quad.vert'),\r\n      fragmentShader: getShader('Quad.frag'),\r\n      premultipliedAlpha: true,\r\n      transparent: true,\r\n      blending: AdditiveBlending,\r\n      depthTest: false,\r\n      depthWrite: false\r\n    })\r\n\r\n    this.compositeCamera = new OrthographicCamera(-1, 1, 1, -1, 0, 1)\r\n    this.compositeScene = new Scene()\r\n    this.compositeScene.name = 'compositeScene'\r\n    this.compositeScene.add(new Mesh(\r\n      new PlaneGeometry(2, 2), this.compositeMaterial\r\n    ))\r\n  }\r\n\r\n  private _initHelper () {\r\n    const indices = new Uint16Array([\r\n      0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6,\r\n      6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7\r\n    ])\r\n    const positions = new Float32Array(8 * 3)\r\n\r\n    const bbGeometry = new BufferGeometry()\r\n    bbGeometry.setIndex(new BufferAttribute(indices, 1))\r\n    bbGeometry.setAttribute('position', new BufferAttribute(positions, 3))\r\n    const bbMaterial = new ShaderMaterial({\r\n      uniforms: { 'uColor': { value: new Color('skyblue') } },\r\n      vertexShader: getShader('BasicLine.vert'),\r\n      fragmentShader: getShader('BasicLine.frag')\r\n    })\r\n\r\n    this.boundingBoxMesh = new LineSegments(bbGeometry, bbMaterial)\r\n    this.helperGroup.add(this.boundingBoxMesh)\r\n  }\r\n\r\n  updateHelper () {\r\n    const position = ((this.boundingBoxMesh.geometry as BufferGeometry).attributes as any).position  // TODO\r\n    const array = position.array\r\n    const {min, max} = this.boundingBox\r\n\r\n    array[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z\r\n    array[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z\r\n    array[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z\r\n    array[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z\r\n    array[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z\r\n    array[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z\r\n    array[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z\r\n    array[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z\r\n\r\n    position.needsUpdate = true\r\n\r\n    if (!this.boundingBox.isEmpty()) {\r\n      this.boundingBoxMesh.geometry.computeBoundingSphere()\r\n    }\r\n  }\r\n\r\n  /** Distance from origin (lookAt point) */\r\n  get cameraDistance(): number {\r\n    return Math.abs(this.camera.position.z)\r\n  }\r\n\r\n  /** Set distance from origin (lookAt point); along the -z axis */\r\n  set cameraDistance(d: number) {\r\n    this.camera.position.z = -d\r\n  }\r\n\r\n  add (buffer: Buffer, instanceList?: BufferInstance[]) {\r\n    // Log.time( \"Viewer.add\" );\r\n\r\n    if (instanceList) {\r\n      instanceList.forEach(instance => this.addBuffer(buffer, instance))\r\n    } else {\r\n      this.addBuffer(buffer)\r\n    }\r\n\r\n    buffer.group.name = 'meshGroup'\r\n    buffer.wireframeGroup.name = 'wireframeGroup'\r\n    if (buffer.parameters.background) {\r\n      this.backgroundGroup.add(buffer.group)\r\n      this.backgroundGroup.add(buffer.wireframeGroup)\r\n    } else {\r\n      this.modelGroup.add(buffer.group)\r\n      this.modelGroup.add(buffer.wireframeGroup)\r\n    }\r\n\r\n    if (buffer.pickable) {\r\n      this.pickingGroup.add(buffer.pickingGroup)\r\n    }\r\n\r\n    if (Debug) this.updateHelper()\r\n\r\n    // Log.timeEnd( \"Viewer.add\" );\r\n  }\r\n\r\n  addBuffer (buffer: Buffer, instance?: BufferInstance) {\r\n    // Log.time( \"Viewer.addBuffer\" );\r\n\r\n    function setUserData (object: Object3D) {\r\n      if (object instanceof Group) {\r\n        object.children.forEach(setUserData)\r\n      } else {\r\n        object.userData.buffer = buffer\r\n        object.userData.instance = instance\r\n        object.onBeforeRender = onBeforeRender\r\n      }\r\n    }\r\n\r\n    const mesh = buffer.getMesh()\r\n    if (instance) {\r\n      mesh.applyMatrix4(instance.matrix)\r\n    }\r\n    setUserData(mesh)\r\n    buffer.group.add(mesh)\r\n\r\n    const wireframeMesh = buffer.getWireframeMesh()\r\n    if (instance) {\r\n      // wireframeMesh.applyMatrix( instance.matrix );\r\n      wireframeMesh.matrix.copy(mesh.matrix)\r\n      wireframeMesh.position.copy(mesh.position)\r\n      wireframeMesh.quaternion.copy(mesh.quaternion)\r\n      wireframeMesh.scale.copy(mesh.scale)\r\n    }\r\n    setUserData(wireframeMesh)\r\n    buffer.wireframeGroup.add(wireframeMesh)\r\n\r\n    if (buffer.pickable) {\r\n      const pickingMesh = buffer.getPickingMesh()\r\n      if (instance) {\r\n        // pickingMesh.applyMatrix( instance.matrix );\r\n        pickingMesh.matrix.copy(mesh.matrix)\r\n        pickingMesh.position.copy(mesh.position)\r\n        pickingMesh.quaternion.copy(mesh.quaternion)\r\n        pickingMesh.scale.copy(mesh.scale)\r\n      }\r\n      setUserData(pickingMesh)\r\n      buffer.pickingGroup.add(pickingMesh)\r\n    }\r\n\r\n    if (instance) {\r\n      this._updateBoundingBox(buffer.geometry, buffer.matrix, instance.matrix)\r\n    } else {\r\n      this._updateBoundingBox(buffer.geometry, buffer.matrix)\r\n    }\r\n\r\n    // Log.timeEnd( \"Viewer.addBuffer\" );\r\n  }\r\n\r\n  remove (buffer: Buffer) {\r\n    this.translationGroup.children.forEach(function (group) {\r\n      group.remove(buffer.group)\r\n      group.remove(buffer.wireframeGroup)\r\n    })\r\n\r\n    if (buffer.pickable) {\r\n      this.pickingGroup.remove(buffer.pickingGroup)\r\n    }\r\n\r\n    this.updateBoundingBox()\r\n    if (Debug) this.updateHelper()\r\n\r\n    // this.requestRender();\r\n  }\r\n\r\n  private _updateBoundingBox (geometry?: BufferGeometry, matrix?: Matrix4, instanceMatrix?: Matrix4) {\r\n    const boundingBox = this.boundingBox\r\n\r\n    function updateGeometry (geometry: BufferGeometry, matrix?: Matrix4, instanceMatrix?: Matrix4) {\r\n      if (geometry.boundingBox == null) {\r\n        geometry.computeBoundingBox()\r\n      }\r\n\r\n      const geoBoundingBox = (geometry.boundingBox as Box3).clone()\r\n\r\n      if (matrix) {\r\n        geoBoundingBox.applyMatrix4(matrix)\r\n      }\r\n      if (instanceMatrix) {\r\n        geoBoundingBox.applyMatrix4(instanceMatrix)\r\n      }\r\n\r\n      if (geoBoundingBox.min.equals(geoBoundingBox.max)) {\r\n        // mainly to give a single impostor geometry some volume\r\n        // as it is only expanded in the shader on the GPU\r\n        geoBoundingBox.expandByScalar(5)\r\n      }\r\n\r\n      boundingBox.union(geoBoundingBox)\r\n    }\r\n\r\n    function updateNode (node: Mesh) {\r\n      if (node.geometry !== undefined) {\r\n        let matrix, instanceMatrix\r\n        if (node.userData.buffer) {\r\n          matrix = node.userData.buffer.matrix\r\n        }\r\n        if (node.userData.instance) {\r\n          instanceMatrix = node.userData.instance.matrix\r\n        }\r\n        updateGeometry(node.geometry as BufferGeometry, matrix, instanceMatrix)  // TODO\r\n      }\r\n    }\r\n\r\n    if (geometry) {\r\n      updateGeometry(geometry, matrix, instanceMatrix)\r\n    } else {\r\n      boundingBox.makeEmpty()\r\n      this.modelGroup.traverse(updateNode)\r\n      this.backgroundGroup.traverse(updateNode)\r\n    }\r\n\r\n    boundingBox.getSize(this.boundingBoxSize)\r\n    this.boundingBoxLength = this.boundingBoxSize.length()\r\n  }\r\n\r\n  updateBoundingBox () {\r\n    this._updateBoundingBox()\r\n    if (Debug) this.updateHelper()\r\n  }\r\n\r\n  getPickingPixels () {\r\n    const {width, height} = this\r\n\r\n    const n = width * height * 4\r\n    const imgBuffer = SupportsReadPixelsFloat ? new Float32Array(n) : new Uint8Array(n)\r\n\r\n    this.render(true)\r\n    this.renderer.readRenderTargetPixels(\r\n      this.pickingTarget, 0, 0, width, height, imgBuffer\r\n    )\r\n\r\n    return imgBuffer\r\n  }\r\n\r\n  getImage (picking: boolean) {\r\n    return new Promise(resolve => {\r\n      if (picking) {\r\n        const {width, height} = this\r\n        const n = width * height * 4\r\n        let imgBuffer = this.getPickingPixels()\r\n\r\n        if (SupportsReadPixelsFloat) {\r\n          const imgBuffer2 = new Uint8Array(n)\r\n          for (let i = 0; i < n; ++i) {\r\n            imgBuffer2[ i ] = Math.round(imgBuffer[ i ] * 255)\r\n          }\r\n          imgBuffer = imgBuffer2\r\n        }\r\n\r\n        const canvas = document.createElement('canvas')\r\n        canvas.width = width\r\n        canvas.height = height\r\n        const ctx = canvas.getContext('2d')!  // TODO\r\n        const imgData = ctx.getImageData(0, 0, width, height)\r\n        imgData.data.set(imgBuffer as any)  // TODO\r\n        ctx.putImageData(imgData, 0, 0)\r\n        canvas.toBlob(resolve as any, 'image/png')  // TODO\r\n      } else {\r\n        this.renderer.domElement.toBlob(resolve as any, 'image/png')  // TODO\r\n      }\r\n    })\r\n  }\r\n\r\n  makeImage (params: Partial<ImageParameters> = {}) {\r\n    return makeImage(this, params)\r\n  }\r\n\r\n  setLight (color: Color|number|string, intensity: number, ambientColor: Color|number|string, ambientIntensity: number) {\r\n    const p = this.parameters\r\n\r\n    if (color !== undefined) p.lightColor.set(color as string)  // TODO\r\n    if (intensity !== undefined) p.lightIntensity = intensity\r\n    if (ambientColor !== undefined) p.ambientColor.set(ambientColor as string)  // TODO\r\n    if (ambientIntensity !== undefined) p.ambientIntensity = ambientIntensity\r\n\r\n    this.requestRender()\r\n  }\r\n\r\n  setFog (color?: Color|number|string, near?: number, far?: number) {\r\n    const p = this.parameters\r\n\r\n    if (color !== undefined) p.fogColor.set(color as string)  // TODO\r\n    if (near !== undefined) p.fogNear = near\r\n    if (far !== undefined) p.fogFar = far\r\n\r\n    this.requestRender()\r\n  }\r\n\r\n  setBackground (color?: Color|number|string) {\r\n    const p = this.parameters\r\n\r\n    if (color) p.backgroundColor.set(color as string)  // TODO\r\n\r\n    this.setFog(p.backgroundColor)\r\n    this.renderer.setClearColor(p.backgroundColor, 0)\r\n    this.renderer.domElement.style.backgroundColor = p.backgroundColor.getStyle()\r\n\r\n    this.requestRender()\r\n  }\r\n\r\n  setSampling (level: number) {\r\n    if (level !== undefined) {\r\n      this.parameters.sampleLevel = level\r\n      this.sampleLevel = level\r\n    }\r\n\r\n    this.requestRender()\r\n  }\r\n\r\n  /**\r\n   * Set the output color encoding, i.e. how the renderer translates\r\n   * colorspaces as it renders to the screen.\r\n\r\n   * The default is LinearEncoding, because the internals of NGL are\r\n   * already sRGB so no translation is needed to show sRGB colors.\r\n   * Set to sRGBEncoding to create a linear workflow, and also call\r\n   * `setColorEncoding(LinearEncoding)` to linearize colors on input.\r\n   * @see setColorEncoding\r\n   */\r\n  private setOutputEncoding (encoding: TextureEncoding) {\r\n    this.parameters.rendererEncoding = encoding\r\n    this.renderer.outputEncoding = encoding\r\n    this.pickingTarget.texture.encoding = encoding\r\n    this.sampleTarget.texture.encoding = encoding\r\n    this.holdTarget.texture.encoding = encoding\r\n  }\r\n\r\n  /**\r\n   * Set the internal color workflow, linear or sRGB.\r\n   * sRGB, the default, is more \"vibrant\" at the cost of accuracy.\r\n   * Linear gives more accurate results, especially for transparent objects.\r\n   * In all cases, the output is always sRGB; this just affects how colors are computed internally.\r\n   * Call this just after creating the viewer, before loading any models.\r\n   */\r\n  setColorWorkflow (encoding: ColorWorkflow) {\r\n    if (encoding != 'linear' && encoding != 'sRGB')\r\n      throw new Error(`setColorWorkflow: invalid color workflow ${encoding}`)\r\n    setColorSpace(encoding == 'linear' ? 'linear' : 'sRGB')\r\n    this.setOutputEncoding(encoding == 'linear' ? sRGBEncoding : LinearEncoding)\r\n    // Note: this doesn't rebuild models, so existing geometry will have\r\n    // the old color encoding.\r\n    this.requestRender()\r\n  }\r\n\r\n  setCamera (type: CameraType, fov?: number, eyeSep?: number) {\r\n    const p = this.parameters\r\n\r\n    if (type) p.cameraType = type\r\n    if (fov) p.cameraFov = fov\r\n    if (eyeSep) p.cameraEyeSep = eyeSep\r\n\r\n    if (p.cameraType === 'orthographic') {\r\n      if (this.camera !== this.orthographicCamera) {\r\n        this.camera = this.orthographicCamera\r\n        this.camera.position.copy(this.perspectiveCamera.position)\r\n        this.camera.up.copy(this.perspectiveCamera.up)\r\n        this.updateZoom()\r\n      }\r\n    } else if (p.cameraType === 'perspective' || p.cameraType === 'stereo') {\r\n      if (this.camera !== this.perspectiveCamera) {\r\n        this.camera = this.perspectiveCamera\r\n        this.camera.position.copy(this.orthographicCamera.position)\r\n        this.camera.up.copy(this.orthographicCamera.up)\r\n      }\r\n    } else {\r\n      throw new Error(`Unknown cameraType '${p.cameraType}'`)\r\n    }\r\n\r\n    this.perspectiveCamera.fov = p.cameraFov\r\n    this.stereoCamera.eyeSep = p.cameraEyeSep\r\n    this.camera.updateProjectionMatrix()\r\n\r\n    this.requestRender()\r\n  }\r\n\r\n  setClip (near: number, far: number, dist: number, clipMode?: string, clipScale?: string) {\r\n    const p = this.parameters\r\n\r\n    if (near !== undefined) p.clipNear = near\r\n    if (far !== undefined) p.clipFar = far\r\n    if (dist !== undefined) p.clipDist = dist\r\n    if (clipMode !== undefined) p.clipMode = clipMode\r\n    if (clipScale !== undefined) p.clipScale = clipScale\r\n\r\n    this.requestRender()\r\n  }\r\n\r\n  setSize (width: number, height: number) {\r\n    this.width = width || 1\r\n    this.height = height || 1\r\n\r\n    this.perspectiveCamera.aspect = this.width / this.height\r\n    this.orthographicCamera.left = -this.width / 2\r\n    this.orthographicCamera.right = this.width / 2\r\n    this.orthographicCamera.top = this.height / 2\r\n    this.orthographicCamera.bottom = -this.height / 2\r\n    this.camera.updateProjectionMatrix()\r\n\r\n    const dpr = window.devicePixelRatio\r\n\r\n    this.renderer.setPixelRatio(dpr)\r\n    this.renderer.setSize(width, height)\r\n\r\n    const dprWidth = this.width * dpr\r\n    const dprHeight = this.height * dpr\r\n\r\n    this.pickingTarget.setSize(dprWidth, dprHeight)\r\n    this.sampleTarget.setSize(dprWidth, dprHeight)\r\n    this.holdTarget.setSize(dprWidth, dprHeight)\r\n\r\n    this.requestRender()\r\n  }\r\n\r\n  handleResize () {\r\n    if (this.container === document.body) {\r\n      this.setSize(window.innerWidth, window.innerHeight)\r\n    } else {\r\n      const box = this.container.getBoundingClientRect()\r\n      this.setSize(box.width, box.height)\r\n    }\r\n  }\r\n\r\n  updateInfo (reset?: boolean) {\r\n    const { memory, render } = this.info\r\n\r\n    if (reset) {\r\n      memory.programs = 0\r\n      memory.geometries = 0\r\n      memory.textures = 0\r\n\r\n      render.calls = 0\r\n      render.vertices = 0\r\n      render.points = 0\r\n    } else {\r\n      const rInfo = this.renderer.info\r\n      const rMemory = rInfo.memory\r\n      const rRender = rInfo.render\r\n\r\n      memory.geometries = rMemory.geometries\r\n      memory.textures = rMemory.textures\r\n\r\n      render.calls += rRender.calls\r\n      render.faces += rRender.triangles\r\n      render.points += rRender.points\r\n    }\r\n  }\r\n\r\n  animate () {\r\n    this.signals.ticked.dispatch(this.stats)\r\n    const delta = window.performance.now() - this.stats.startTime\r\n\r\n    if (delta > 500 && !this.isStill && this.sampleLevel < 3 && this.sampleLevel !== -1) {\r\n      const currentSampleLevel = this.sampleLevel\r\n      this.sampleLevel = 3\r\n      this.renderPending = true\r\n      this.render()\r\n      this.isStill = true\r\n      this.sampleLevel = currentSampleLevel\r\n      if (Debug) Log.log('rendered still frame')\r\n    }\r\n\r\n    this.frameRequest = window.requestAnimationFrame(this.animate)\r\n  }\r\n\r\n  pick (x: number, y: number) {\r\n    if (this.parameters.cameraType === 'stereo') {\r\n      // TODO picking broken for stereo camera\r\n      return {\r\n        'pid': 0,\r\n        'instance': undefined,\r\n        'picker': undefined\r\n      }\r\n    }\r\n\r\n    x *= window.devicePixelRatio\r\n    y *= window.devicePixelRatio\r\n\r\n    x = Math.max(x - 2, 0)\r\n    y = Math.max(y - 2, 0)\r\n\r\n    let pid = 0, instance, picker\r\n    const pixelBuffer = SupportsReadPixelsFloat ? pixelBufferFloat : pixelBufferUint\r\n\r\n    this.render(true)\r\n    this.renderer.readRenderTargetPixels(\r\n      this.pickingTarget, x, y, 5, 5, pixelBuffer\r\n    )\r\n\r\n    for (let i = 0; i < pixelOrder.length; i++) {\r\n\r\n      const offset = pixelOrder[i] * 4\r\n\r\n      const oid = Math.round(pixelBuffer[ offset + 3 ])\r\n      const object = this.pickingGroup.getObjectById(oid)\r\n      if (object) {\r\n        instance = object.userData.instance\r\n        picker = object.userData.buffer.picking\r\n      } else {\r\n        continue\r\n      }\r\n\r\n      if (SupportsReadPixelsFloat) {\r\n        pid =\r\n          ((Math.round(pixelBuffer[offset] * 255) << 16) & 0xFF0000) |\r\n          ((Math.round(pixelBuffer[offset + 1] * 255) << 8) & 0x00FF00) |\r\n          ((Math.round(pixelBuffer[offset + 2] * 255)) & 0x0000FF)\r\n      } else {\r\n        pid =\r\n          (pixelBuffer[offset] << 16) |\r\n          (pixelBuffer[offset + 1] << 8) |\r\n          (pixelBuffer[offset + 2])\r\n      }\r\n    }\r\n    // if( Debug ){\r\n    //   const rgba = Array.apply( [], pixelBuffer );\r\n    //   Log.log( pixelBuffer );\r\n    //   Log.log(\r\n    //     \"picked color\",\r\n    //     rgba.map( c => { return c.toPrecision( 2 ) } )\r\n    //   );\r\n    //   Log.log( \"picked pid\", pid );\r\n    //   Log.log( \"picked oid\", oid );\r\n    //   Log.log( \"picked object\", object );\r\n    //   Log.log( \"picked instance\", instance );\r\n    //   Log.log( \"picked position\", x, y );\r\n    //   Log.log( \"devicePixelRatio\", window.devicePixelRatio );\r\n    // }\r\n\r\n    return { pid, instance, picker }\r\n  }\r\n\r\n  requestRender () {\r\n    if (this.renderPending) {\r\n      // Log.info(\"there is still a 'render' call pending\")\r\n      return\r\n    }\r\n\r\n    // start gathering stats anew after inactivity\r\n    if (window.performance.now() - this.stats.startTime > 22) {\r\n      this.stats.begin()\r\n      this.isStill = false\r\n    }\r\n\r\n    this.renderPending = true\r\n\r\n    window.requestAnimationFrame(() => {\r\n      this.render()\r\n      this.stats.update()\r\n    })\r\n  }\r\n\r\n  updateZoom () {\r\n    const fov = degToRad(this.perspectiveCamera.fov)\r\n    const height = 2 * Math.tan(fov / 2) * this.cameraDistance\r\n    this.orthographicCamera.zoom = this.height / height\r\n  }\r\n\r\n  /**\r\n   * Convert an absolute clip value to a relative one using bRadius.\r\n   *\r\n   * 0.0 -> 50.0\r\n   * bRadius -> 0.0\r\n   */\r\n  absoluteToRelative (d: number) :number {\r\n    return 50 * (1 - d / this.bRadius)\r\n  }\r\n\r\n  /**\r\n   * Convert a relative clip value to an absolute one using bRadius\r\n   *\r\n   * 0.0 -> bRadius\r\n   * 50.0 -> 0.0\r\n   */\r\n  relativeToAbsolute (d: number) : number {\r\n    return this.bRadius * (1 - d / 50)\r\n  }\r\n\r\n  /**\r\n   * Intepret clipMode, clipScale and set the camera and fog clipping.\r\n   * Also ensures bRadius and cDist are valid\r\n   */\r\n  private __updateClipping () {\r\n    const p = this.parameters\r\n\r\n    // bRadius must always be updated for material-based clipping\r\n    // and for focus calculations\r\n    this.bRadius = Math.max(10, this.boundingBoxLength * 0.5)\r\n\r\n    // FL: Removed below, but leaving commented as I don't understand intention\r\n    // this.bRadius += this.boundingBox.getCenter(this.distVector).length()\r\n\r\n    if (!isFinite(this.bRadius)) {\r\n      this.bRadius = 50\r\n    }\r\n\r\n    this.camera.getWorldPosition(this.distVector)\r\n    this.cDist = this.distVector.length()\r\n    if (!this.cDist) {\r\n      // recover from a broken (NaN) camera position\r\n      this.cameraDistance = Math.abs(p.cameraZ)\r\n      this.cDist = Math.abs(p.cameraZ)\r\n    }\r\n\r\n    // fog\r\n    const fog = this.scene.fog as Fog\r\n    fog.color.set(p.fogColor)\r\n\r\n    if (p.clipMode === 'camera') {\r\n      // Always interpret clipScale as absolute for clipMode camera\r\n\r\n      this.camera.near = p.clipNear\r\n      this.camera.far = p.clipFar\r\n      fog.near = p.fogNear\r\n      fog.far = p.fogFar\r\n\r\n    } else {\r\n      // scene mode\r\n\r\n      if (p.clipScale === 'absolute') {\r\n        // absolute scene mode; offset clip planes from scene center\r\n        // (note: positive values move near plane towards camera and rear plane away)\r\n\r\n        this.camera.near = this.cDist - p.clipNear\r\n        this.camera.far = this.cDist + p.clipFar\r\n        fog.near = this.cDist - p.fogNear\r\n        fog.far = this.cDist + p.fogFar\r\n\r\n      } else {\r\n        // relative scene mode (default): convert pecentages to Angstroms\r\n\r\n        const nearFactor = (50 - p.clipNear) / 50\r\n        const farFactor = -(50 - p.clipFar) / 50\r\n        this.camera.near = this.cDist - (this.bRadius * nearFactor)\r\n        this.camera.far = this.cDist + (this.bRadius * farFactor)\r\n\r\n        const fogNearFactor = (50 - p.fogNear) / 50\r\n        const fogFarFactor = -(50 - p.fogFar) / 50\r\n        fog.near = this.cDist - (this.bRadius * fogNearFactor)\r\n        fog.far = this.cDist + (this.bRadius * fogFarFactor)\r\n      }\r\n    }\r\n\r\n    if (p.clipMode !== 'camera') {\r\n\r\n      if (this.camera.type === 'PerspectiveCamera') {\r\n\r\n        this.camera.near = Math.max(0.1, p.clipDist, this.camera.near)\r\n        this.camera.far = Math.max(1, this.camera.far)\r\n        fog.near = Math.max(0.1, fog.near)\r\n        fog.far = Math.max(1, fog.far)\r\n      } else if (this.camera.type === 'OrthographicCamera') {\r\n\r\n        if (p.clipDist > 0) {\r\n          this.camera.near = Math.max(p.clipDist, this.camera.near)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private __updateCamera () {\r\n    const camera = this.camera\r\n    camera.updateMatrix()\r\n    camera.updateMatrixWorld(true)\r\n    camera.updateProjectionMatrix()\r\n\r\n    updateMaterialUniforms(this.scene, camera, this.renderer, this.cDist, this.bRadius)\r\n    sortProjectedPosition(this.scene, camera)\r\n  }\r\n\r\n  private __setVisibility (model: boolean, picking: boolean, background: boolean, helper: boolean) {\r\n    this.modelGroup.visible = model\r\n    this.pickingGroup.visible = picking\r\n    this.backgroundGroup.visible = background\r\n    this.helperGroup.visible = helper\r\n  }\r\n\r\n  private __updateLights () {\r\n    this.spotLight.color.set(this.parameters.lightColor)\r\n    this.spotLight.intensity = this.parameters.lightIntensity\r\n\r\n    this.distVector.copy(this.camera.position).setLength(this.boundingBoxLength * 100)\r\n    this.spotLight.position.copy(this.camera.position).add(this.distVector)\r\n\r\n    this.ambientLight.color.set(this.parameters.ambientColor)\r\n    this.ambientLight.intensity = this.parameters.ambientIntensity\r\n  }\r\n\r\n  private __renderPickingGroup (camera: PerspectiveCamera|OrthographicCamera) {\r\n    this.renderer.setRenderTarget(this.pickingTarget || null)\r\n    this.renderer.clear()\r\n    this.__setVisibility(false, true, false, false)\r\n    this.renderer.render(this.scene, camera)\r\n    //  back to standard render target\r\n    this.renderer.setRenderTarget(null)\r\n    this.updateInfo()\r\n\r\n    // if (Debug) {\r\n    //   this.__setVisibility(false, true, false, true);\r\n\r\n    //   this.renderer.clear();\r\n    //   this.renderer.render(this.scene, camera);\r\n    // }\r\n  }\r\n\r\n  private __renderModelGroup (camera: PerspectiveCamera|OrthographicCamera, renderTarget?: WebGLRenderTarget) {\r\n    this.renderer.setRenderTarget(renderTarget || null)\r\n    this.renderer.clear()\r\n    this.__setVisibility(false, false, true, false)\r\n    this.renderer.render(this.scene, camera)\r\n    this.renderer.clear(false, true, true)\r\n    this.updateInfo()\r\n\r\n    this.__setVisibility(true, false, false, Debug)\r\n    this.renderer.render(this.scene, camera)\r\n    this.renderer.setRenderTarget(null) // set back to default canvas\r\n    this.updateInfo()\r\n  }\r\n\r\n  private __renderSuperSample (camera: PerspectiveCamera|OrthographicCamera, renderTarget?: WebGLRenderTarget) {\r\n    // based on the Supersample Anti-Aliasing Render Pass\r\n    // contributed to three.js by bhouston / http://clara.io/\r\n    //\r\n    // This manual approach to SSAA re-renders the scene ones for\r\n    // each sample with camera jitter and accumulates the results.\r\n    // References: https://en.wikipedia.org/wiki/Supersampling\r\n    const offsetList = JitterVectors[ Math.max(0, Math.min(this.sampleLevel, 5)) ]\r\n\r\n    const baseSampleWeight = 1.0 / offsetList.length\r\n    const roundingRange = 1 / 32\r\n\r\n    this.compositeUniforms.tForeground.value = this.sampleTarget.texture\r\n\r\n    let width = this.sampleTarget.width\r\n    const height = this.sampleTarget.height\r\n    if (this.parameters.cameraType === 'stereo') {\r\n      width /= 2\r\n    }\r\n\r\n    // render the scene multiple times, each slightly jitter offset\r\n    // from the last and accumulate the results.\r\n    for (let i = 0; i < offsetList.length; ++i) {\r\n      const offset = offsetList[ i ]\r\n      camera.setViewOffset(\r\n        width, height, offset[ 0 ], offset[ 1 ], width, height\r\n      )\r\n      camera.updateProjectionMatrix()\r\n      updateCameraUniforms(this.scene, camera)\r\n\r\n      let sampleWeight = baseSampleWeight\r\n      // the theory is that equal weights for each sample lead to an\r\n      // accumulation of rounding errors.\r\n      // The following equation varies the sampleWeight per sample\r\n      // so that it is uniformly distributed across a range of values\r\n      // whose rounding errors cancel each other out.\r\n      const uniformCenteredDistribution = -0.5 + (i + 0.5) / offsetList.length\r\n      sampleWeight += roundingRange * uniformCenteredDistribution\r\n      this.compositeUniforms.scale.value = sampleWeight\r\n\r\n      this.__renderModelGroup(camera, this.sampleTarget)\r\n      this.renderer.setRenderTarget(this.holdTarget)\r\n      if (i === 0)  {\r\n        this.renderer.clear()\r\n      }\r\n\r\n      this.renderer.render(this.compositeScene, this.compositeCamera)\r\n    }\r\n\r\n    this.compositeUniforms.scale.value = 1.0\r\n    this.compositeUniforms.tForeground.value = this.holdTarget.texture\r\n\r\n    camera.clearViewOffset()\r\n    this.renderer.setRenderTarget(renderTarget || null)\r\n    this.renderer.clear()\r\n    this.renderer.render(this.compositeScene, this.compositeCamera)\r\n  }\r\n\r\n  private __renderStereo (picking = false, _renderTarget?: WebGLRenderTarget) {\r\n    const stereoCamera = this.stereoCamera\r\n    stereoCamera.update(this.perspectiveCamera);\r\n\r\n    const renderer = this.renderer\r\n    let size = new Vector2()\r\n    renderer.getSize(size)\r\n\r\n    renderer.setScissorTest(true)\r\n\r\n    renderer.setScissor(0, 0, size.width / 2, size.height)\r\n    renderer.setViewport(0, 0, size.width / 2, size.height)\r\n    updateCameraUniforms(this.scene, stereoCamera.cameraL)\r\n    this.__render(picking, stereoCamera.cameraL)\r\n\r\n    renderer.setScissor(size.width / 2, 0, size.width / 2, size.height)\r\n    renderer.setViewport(size.width / 2, 0, size.width / 2, size.height)\r\n    updateCameraUniforms(this.scene, stereoCamera.cameraR)\r\n    this.__render(picking, stereoCamera.cameraR)\r\n\r\n    renderer.setScissorTest(false)\r\n    renderer.setViewport(0, 0, size.width, size.height)\r\n  }\r\n\r\n  private __render(picking = false, camera: PerspectiveCamera|OrthographicCamera, renderTarget?: WebGLRenderTarget) {\r\n    if (picking) {\r\n      if (!this.lastRenderedPicking) this.__renderPickingGroup(camera)\r\n    } else if (this.sampleLevel > 0 && this.parameters.cameraType !== 'stereo') {\r\n      // TODO super sample broken for stereo camera\r\n      this.__renderSuperSample(camera, renderTarget)\r\n    } else {\r\n      this.__renderModelGroup(camera, renderTarget)\r\n    }\r\n  }\r\n\r\n  render (picking = false, renderTarget?: WebGLRenderTarget) {\r\n    if (this.rendering) {\r\n      Log.warn(\"'tried to call 'render' from within 'render'\")\r\n      return\r\n    }\r\n\r\n    // Log.time('Viewer.render')\r\n\r\n    this.rendering = true\r\n\r\n    try {\r\n      this.__updateClipping()\r\n      this.__updateCamera()\r\n      this.__updateLights()\r\n      this.updateInfo(true)\r\n\r\n      // render\r\n      if (this.parameters.cameraType === 'stereo') {\r\n        this.__renderStereo(picking, renderTarget)\r\n      } else {\r\n        this.__render(picking, this.camera, renderTarget)\r\n      }\r\n      this.lastRenderedPicking = picking\r\n    } finally {\r\n      this.rendering = false\r\n      this.renderPending = false\r\n    }\r\n    this.signals.rendered.dispatch()\r\n\r\n    // Log.timeEnd('Viewer.render')\r\n    // Log.log(this.info.memory, this.info.render)\r\n  }\r\n\r\n  clear () {\r\n    Log.log('scene cleared')\r\n    this.scene.remove(this.rotationGroup)\r\n    this._initScene()\r\n    this.renderer.clear()\r\n  }\r\n\r\n  dispose () {\r\n    this.renderer.dispose()\r\n    window.cancelAnimationFrame(this.frameRequest)\r\n  }\r\n}\r\n","/**\r\n * @file Constants\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nexport const LeftMouseButton = 1\r\nexport const MiddleMouseButton = 2\r\nexport const RightMouseButton = 3\r\n","/**\r\n * @file Mouse Observer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector2 } from 'three'\r\nimport { Signal } from 'signals'\r\n\r\nimport { LeftMouseButton, RightMouseButton } from '../constants'\r\nimport { defaults } from '../utils'\r\nimport Viewer from '../viewer/viewer'\r\nimport MouseControls from '../controls/mouse-controls'\r\n\r\ntype Optional<T, K extends keyof T> = Pick<Partial<T>, K> & Omit<T, K>;\r\n\r\n/**\r\n * @example\r\n * mouseObserver.signals.scrolled.add( function( delta ){ ... } );\r\n *\r\n * @typedef {Object} MouseSignals\r\n * @property {Signal<Integer, Integer>} moved - on move: deltaX, deltaY\r\n * @property {Signal<Number>} scrolled - on scroll: delta\r\n * @property {Signal<Integer, Integer>} dragged - on drag: deltaX, deltaY\r\n * @property {Signal} dropped - on drop\r\n * @property {Signal} clicked - on click\r\n * @property {Signal} hovered - on hover\r\n */\r\n\r\nfunction getTouchDistance (event: TouchEvent) {\r\n  const dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX\r\n  const dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY\r\n  return Math.sqrt(dx * dx + dy * dy)\r\n}\r\n\r\nfunction getMouseButtons (event: MouseEvent) {\r\n    if (typeof event === 'object') {\r\n    if ('buttons' in event) {\r\n      return event.buttons\r\n    } else if ('which' in event as any) {\r\n      const b = (event as any).which\r\n      if (b === 2) {\r\n        return 4\r\n      } else if (b === 3) {\r\n        return 2\r\n      } else if (b > 0) {\r\n        return 1 << (b - 1)\r\n      }\r\n    } else if ('button' in event as any) {\r\n      const b = (event as any).button\r\n      if (b === 1) {\r\n        return 4\r\n      } else if (b === 2) {\r\n        return 2\r\n      } else if (b >= 0) {\r\n        return 1 << b\r\n      }\r\n    }\r\n  }\r\n  return 0\r\n}\r\n\r\nexport interface MouseSignals {\r\n  moved: Signal  // on move: deltaX, deltaY\r\n  scrolled: Signal  // on scroll: delta\r\n  dragged: Signal  // on drag: deltaX, deltaY\r\n  dropped: Signal  // on drop\r\n  clicked: Signal  // on click\r\n  hovered: Signal  // on hover\r\n  doubleClicked: Signal\r\n}\r\n\r\nexport interface MouseParams {\r\n  hoverTimeout?: number\r\n  handleScroll?:boolean\r\n  doubleClickSpeed?: number\r\n}\r\n\r\n/**\r\n * Mouse observer\r\n *\r\n * @example\r\n * // listen to mouse moving (and touch-moving) events\r\n * mouseObserver.moved.moved.add( function( deltaX, deltaY ){ ... } );\r\n *\r\n * @example\r\n * // listen to scrolling (and pinching) events\r\n * mouseObserver.signals.scrolled.add( function( delta ){ ... } );\r\n *\r\n * @example\r\n * // listen to dragging (and touch-dragging) events\r\n * mouseObserver.signals.dragged.add( function( deltaX, deltaY ){ ... } );\r\n *\r\n * @example\r\n * // listen to clicking (and tapping) events\r\n * mouseObserver.signals.clicked.add( function(){ ... } );\r\n *\r\n * @example\r\n * // listen to double clicking (and double tapping) events\r\n * mouseObserver.signals.doubleClicked.add( function(){ ... } );\r\n *\r\n * @example\r\n * // listen to hovering events\r\n * mouseObserver.signals.hovered.add( function(){ ... } );\r\n */\r\nclass MouseObserver {\r\n  signals: MouseSignals = {\r\n    moved: new Signal(),\r\n    scrolled: new Signal(),\r\n    dragged: new Signal(),\r\n    dropped: new Signal(),\r\n    clicked: new Signal(),\r\n    hovered: new Signal(),\r\n    doubleClicked: new Signal()\r\n  }\r\n\r\n  hoverTimeout: number\r\n  handleScroll:boolean\r\n  doubleClickSpeed: number\r\n\r\n  viewer: Viewer\r\n  mouse: MouseObserver\r\n  controls: MouseControls\r\n\r\n  position = new Vector2()  // Position on page\r\n  prevPosition = new Vector2()  // Previous position on page\r\n  down = new Vector2()  // Position on page when clicked\r\n  canvasPosition = new Vector2()  // Position on dom element\r\n  prevClickCP = new Vector2()\r\n\r\n  moving = false  // Flag indicating if the mouse is moving\r\n  hovering = true  // Flag indicating if the mouse is hovering\r\n  scrolled = false  // Flag indicating if there was a scolling event since the last mouse move\r\n  lastMoved = Infinity  // Timestamp of last mouse move\r\n  which? = 0  // 0: No button; 1: Left button; 2: Middle button; 3: Right button\r\n  buttons? = 0  // 0: No button; 1: Left button; 2: Right button; 4: Middle button\r\n  pressed? = false  // Flag indicating if the mouse is pressed down\r\n  altKey = false  // Flag indicating if the alt key is pressed\r\n  ctrlKey = false  // Flag indicating if the ctrl key is pressed\r\n  metaKey = false  // Flag indicating if the meta key is pressed\r\n  shiftKey = false  // Flag indicating if the shift key is pressed\r\n\r\n  doubleClickPending: boolean\r\n  lastClicked: number\r\n  overElement: boolean\r\n  lastTouchDistance: number\r\n  private frameRequest: number\r\n\r\n  /**\r\n   * @param  {Element} domElement - the dom element to observe mouse events in\r\n   * @param  {Object} params - parameters object\r\n   * @param  {Integer} params.hoverTimeout - timeout in ms until the {@link MouseSignals.hovered}\r\n   *                                         signal is fired, set to -1 to ignore hovering\r\n   * @param  {Boolean} params.handleScroll - whether or not to handle scroll events\r\n   * @param  {Integer} params.doubleClickSpeed - max time in ms to trigger double click\r\n   */\r\n  constructor (readonly domElement: HTMLCanvasElement, params: MouseParams = {}) {\r\n    this.domElement.style.touchAction = 'none'\r\n\r\n    this.hoverTimeout = defaults(params.hoverTimeout, 50)\r\n    this.handleScroll = defaults(params.handleScroll, true)\r\n    this.doubleClickSpeed = defaults(params.doubleClickSpeed, 500)\r\n\r\n    this._listen = this._listen.bind(this)\r\n    this._onMousewheel = this._onMousewheel.bind(this)\r\n    this._onMousemove = this._onMousemove.bind(this)\r\n    this._onMousedown = this._onMousedown.bind(this)\r\n    this._onMouseup = this._onMouseup.bind(this)\r\n    this._onContextmenu = this._onContextmenu.bind(this)\r\n    this._onTouchstart = this._onTouchstart.bind(this)\r\n    this._onTouchend = this._onTouchend.bind(this)\r\n    this._onTouchmove = this._onTouchmove.bind(this)\r\n\r\n    this._listen()\r\n\r\n    const opt = { passive: false } // treat as 'passive' so preventDefault can be called\r\n    document.addEventListener('mousewheel', this._onMousewheel, opt)\r\n    document.addEventListener('wheel', this._onMousewheel, opt)\r\n    document.addEventListener('MozMousePixelScroll', this._onMousewheel, opt)\r\n    document.addEventListener('mousemove', this._onMousemove, opt)\r\n    document.addEventListener('mousedown', this._onMousedown, opt)\r\n    document.addEventListener('mouseup', this._onMouseup, opt)\r\n    document.addEventListener('contextmenu', this._onContextmenu, opt)\r\n    document.addEventListener('touchstart', this._onTouchstart, opt)\r\n    document.addEventListener('touchend', this._onTouchend, opt)\r\n    document.addEventListener('touchmove', this._onTouchmove, opt)\r\n  }\r\n\r\n  get key () {\r\n    let key = 0\r\n    if (this.altKey) key += 1\r\n    if (this.ctrlKey) key += 2\r\n    if (this.metaKey) key += 4\r\n    if (this.shiftKey) key += 8\r\n    return key\r\n  }\r\n\r\n  setParameters (params: MouseParams = {}) {\r\n    this.hoverTimeout = defaults(params.hoverTimeout, this.hoverTimeout)\r\n  }\r\n\r\n  /**\r\n   * listen to mouse actions\r\n   * @emits {MouseSignals.clicked} when clicked\r\n   * @emits {MouseSignals.hovered} when hovered\r\n   * @return {undefined}\r\n   */\r\n  _listen () {\r\n    const now = window.performance.now()\r\n    const cp = this.canvasPosition\r\n    if (this.doubleClickPending && now - this.lastClicked > this.doubleClickSpeed) {\r\n      this.doubleClickPending = false\r\n    }\r\n    if (now - this.lastMoved > this.hoverTimeout) {\r\n      this.moving = false\r\n    }\r\n    if (this.scrolled || (!this.moving && !this.hovering)) {\r\n      this.scrolled = false\r\n      if (this.hoverTimeout !== -1 && this.overElement) {\r\n        this.hovering = true\r\n        this.signals.hovered.dispatch(cp.x, cp.y)\r\n      }\r\n    }\r\n    this.frameRequest = window.requestAnimationFrame(this._listen)\r\n  }\r\n\r\n  /**\r\n   * handle mouse scroll\r\n   * @emits {MouseSignals.scrolled} when scrolled\r\n   * @param  {Event} event - mouse event\r\n   * @return {undefined}\r\n   */\r\n  _onMousewheel(event: Optional<WheelEvent, 'detail'> & { wheelDelta?: number, wheelDeltaY?: number }) {\r\n    if (event.target !== this.domElement || !this.handleScroll) {\r\n      return\r\n    }\r\n    event.preventDefault()\r\n    this._setKeys(event as any)\r\n\r\n    let delta = 0\r\n    // This has to be written in a particular way to handle old browsers that\r\n    // all send events with different properties set in different ways.\r\n    if ('deltaY' in event && 'deltaMode' in event &&\r\n      event.deltaY !== undefined && event.deltaMode !== undefined) {\r\n      // all modern browsers, using WheelEvent; deltaY + down (toward user)\r\n      if (event.deltaMode === WheelEvent.DOM_DELTA_PIXEL)\r\n        // everything except Firefox: normally 100 per wheel click\r\n        delta = -event.deltaY * (2.5 / 100.0)\r\n      else if (event.deltaMode === WheelEvent.DOM_DELTA_LINE)\r\n        // Firefox in line mode, normally 3 per wheel click\r\n        delta = -event.deltaY * (2.5 / 3.0)\r\n      else                      // page mode: 1 per wheel click\r\n        delta = -event.deltaY * 2.5\r\n    } else if ('deltaY' in event && !('detail' in event))  {\r\n      // Old Firefox or IE 11: deltaY but no deltaMode; treat as pixels\r\n      delta = -event.deltaY * (2.5 / 100.0)\r\n    } else if (event.wheelDelta !== undefined) {\r\n      delta = -event.wheelDelta * (2.5 / 100)\r\n    } else if (event.wheelDeltaY !== undefined) {\r\n      delta = -event.wheelDeltaY * (2.5 / 100)\r\n    } else if (event.detail !== undefined){\r\n      // Old Firefox, MouseWheelEvent\r\n      delta = -event.detail / 3\r\n    }\r\n    this.signals.scrolled.dispatch(delta)\r\n\r\n    setTimeout(() => {\r\n      this.scrolled = true\r\n    }, this.hoverTimeout)\r\n  }\r\n\r\n  /**\r\n   * handle mouse move\r\n   * @emits {MouseSignals.moved} when moved\r\n   * @emits {MouseSignals.dragged} when dragged\r\n   * @param  {Event} event - mouse event\r\n   * @return {undefined}\r\n   */\r\n  _onMousemove (event: MouseEvent) {\r\n    if (event.target === this.domElement) {\r\n      event.preventDefault()\r\n      this.overElement = true\r\n    } else {\r\n      this.overElement = false\r\n    }\r\n    this._setKeys(event)\r\n    this.moving = true\r\n    this.hovering = false\r\n    this.lastMoved = window.performance.now()\r\n    this.prevPosition.copy(this.position)\r\n    this.position.set(event.clientX, event.clientY)\r\n    this._setCanvasPosition(event)\r\n    const dx = this.prevPosition.x - this.position.x\r\n    const dy = this.prevPosition.y - this.position.y\r\n    this.signals.moved.dispatch(dx, dy)\r\n    if (this.pressed) {\r\n      this.signals.dragged.dispatch(dx, dy)\r\n    }\r\n  }\r\n\r\n  _onMousedown (event: MouseEvent) {\r\n    if (event.target !== this.domElement) {\r\n      return\r\n    }\r\n    event.preventDefault()\r\n    this._setKeys(event)\r\n    this.moving = false\r\n    this.hovering = false\r\n    this.down.set(event.clientX, event.clientY)\r\n    this.position.set(event.clientX, event.clientY)\r\n    this.which = event.which\r\n    this.buttons = getMouseButtons(event)\r\n    this.pressed = true\r\n    this._setCanvasPosition(event)\r\n  }\r\n\r\n  /**\r\n   * handle mouse up\r\n   * @emits {MouseSignals.doubleClicked} when double clicked\r\n   * @emits {MouseSignals.dropped} when dropped\r\n   * @param  {Event} event - mouse event\r\n   * @return {undefined}\r\n   */\r\n  _onMouseup (event: MouseEvent) {\r\n    if (event.target === this.domElement) {\r\n      event.preventDefault()\r\n    }\r\n    this._setKeys(event)\r\n    const cp = this.canvasPosition\r\n    if (this._distance() < 4) {\r\n      this.lastClicked = window.performance.now()\r\n      if (this.doubleClickPending && this.prevClickCP.distanceTo(cp) < 4) {\r\n        this.signals.doubleClicked.dispatch(cp.x, cp.y)\r\n        this.doubleClickPending = false\r\n      }\r\n      this.signals.clicked.dispatch(cp.x, cp.y)\r\n      this.doubleClickPending = true\r\n      this.prevClickCP.copy(cp)\r\n    }\r\n    this.which = undefined\r\n    this.buttons = undefined\r\n    this.pressed = undefined\r\n    // if (this._distance() > 3 || event.which === RightMouseButton) {\r\n    //   this.signals.dropped.dispatch();\r\n    // }\r\n  }\r\n\r\n  _onContextmenu (event: MouseEvent) {\r\n    if (event.target === this.domElement) {\r\n      event.preventDefault()\r\n    }\r\n  }\r\n\r\n  _onTouchstart (event: TouchEvent) {\r\n    if (event.target !== this.domElement) {\r\n      return\r\n    }\r\n    event.preventDefault()\r\n    this.pressed = true\r\n    switch (event.touches.length) {\r\n      case 1: {\r\n        this.moving = false\r\n        this.hovering = false\r\n        this.down.set(\r\n          event.touches[ 0 ].pageX,\r\n          event.touches[ 0 ].pageY\r\n        )\r\n        this.position.set(\r\n          event.touches[ 0 ].pageX,\r\n          event.touches[ 0 ].pageY\r\n        )\r\n        this._setCanvasPosition(event.touches[ 0 ])\r\n        break\r\n      }\r\n\r\n      case 2: {\r\n        this.down.set(\r\n          (event.touches[ 0 ].pageX + event.touches[ 1 ].pageX) / 2,\r\n          (event.touches[ 0 ].pageY + event.touches[ 1 ].pageY) / 2\r\n        )\r\n        this.position.set(\r\n          (event.touches[ 0 ].pageX + event.touches[ 1 ].pageX) / 2,\r\n          (event.touches[ 0 ].pageY + event.touches[ 1 ].pageY) / 2\r\n        )\r\n        this.lastTouchDistance = getTouchDistance(event)\r\n      }\r\n    }\r\n  }\r\n\r\n  _onTouchend (event: TouchEvent) {\r\n    if (event.target === this.domElement) {\r\n      event.preventDefault()\r\n    }\r\n    this.which = undefined\r\n    this.buttons = undefined\r\n    this.pressed = undefined\r\n  }\r\n\r\n  _onTouchmove (event: TouchEvent) {\r\n    if (event.target === this.domElement) {\r\n      event.preventDefault()\r\n      this.overElement = true\r\n    } else {\r\n      this.overElement = false\r\n    }\r\n    switch (event.touches.length) {\r\n      case 1: {\r\n        this._setKeys(event)\r\n        this.which = LeftMouseButton\r\n        this.buttons = 1\r\n        this.moving = true\r\n        this.hovering = false\r\n        this.lastMoved = window.performance.now()\r\n        this.prevPosition.copy(this.position)\r\n        this.position.set(\r\n          event.touches[ 0 ].pageX,\r\n          event.touches[ 0 ].pageY\r\n        )\r\n        this._setCanvasPosition(event.touches[ 0 ])\r\n        const dx = this.prevPosition.x - this.position.x\r\n        const dy = this.prevPosition.y - this.position.y\r\n        this.signals.moved.dispatch(dx, dy)\r\n        if (this.pressed) {\r\n          this.signals.dragged.dispatch(dx, dy)\r\n        }\r\n        break\r\n      }\r\n\r\n      case 2: {\r\n        const touchDistance = getTouchDistance(event)\r\n        const delta = touchDistance - this.lastTouchDistance\r\n        this.lastTouchDistance = touchDistance\r\n        this.prevPosition.copy(this.position)\r\n        this.position.set(\r\n          (event.touches[ 0 ].pageX + event.touches[ 1 ].pageX) / 2,\r\n          (event.touches[ 0 ].pageY + event.touches[ 1 ].pageY) / 2\r\n        )\r\n        if (Math.abs(delta) > 2 && this.handleScroll &&\r\n            this.position.distanceTo(this.prevPosition) < 2\r\n        ) {\r\n          this.which = 0\r\n          this.buttons = 0\r\n          this.signals.scrolled.dispatch(delta / 2)\r\n        } else {\r\n          this.which = RightMouseButton\r\n          this.buttons = 2\r\n          const dx = this.prevPosition.x - this.position.x\r\n          const dy = this.prevPosition.y - this.position.y\r\n          this.signals.moved.dispatch(dx, dy)\r\n          if (this.pressed) {\r\n            this.signals.dragged.dispatch(dx, dy)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _distance () {\r\n    return this.position.distanceTo(this.down)\r\n  }\r\n\r\n  _setCanvasPosition (event: any) {  // TODO\r\n    const box = this.domElement.getBoundingClientRect()\r\n    let offsetX, offsetY;\r\n    if ('clientX' in event && 'clientY' in event) {\r\n      offsetX = event.clientX - box.left\r\n      offsetY = event.clientY - box.top\r\n    } else {\r\n      offsetX = event.offsetX\r\n      offsetY = event.offsetY\r\n    }\r\n    this.canvasPosition.set(offsetX, box.height - offsetY)\r\n  }\r\n\r\n  _setKeys (event: MouseEvent|TouchEvent) {\r\n    this.altKey = event.altKey\r\n    this.ctrlKey = event.ctrlKey\r\n    this.metaKey = event.metaKey\r\n    this.shiftKey = event.shiftKey\r\n  }\r\n\r\n  dispose () {\r\n    document.removeEventListener('mousewheel', this._onMousewheel)\r\n    document.removeEventListener('wheel', this._onMousewheel)\r\n    document.removeEventListener('MozMousePixelScroll', this._onMousewheel)\r\n    document.removeEventListener('mousemove', this._onMousemove)\r\n    document.removeEventListener('mousedown', this._onMousedown)\r\n    document.removeEventListener('mouseup', this._onMouseup)\r\n    document.removeEventListener('contextmenu', this._onContextmenu)\r\n    document.removeEventListener('touchstart', this._onTouchstart)\r\n    document.removeEventListener('touchend', this._onTouchend)\r\n    document.removeEventListener('touchmove', this._onTouchmove)\r\n    window.cancelAnimationFrame(this.frameRequest)\r\n  }\r\n}\r\n\r\nexport default MouseObserver\r\n","/**\r\n * @file Trackball Controls\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3, Matrix4, Quaternion } from 'three'\r\n\r\nimport { defaults } from '../utils'\r\nimport Stage from '../stage/stage'\r\nimport MouseObserver from '../stage/mouse-observer'\r\nimport Viewer from '../viewer/viewer'\r\nimport ViewerControls from './viewer-controls'\r\nimport AtomProxy from '../proxy/atom-proxy';\r\nimport Component from '../component/component';\r\n\r\nconst tmpRotateXMatrix = new Matrix4()\r\nconst tmpRotateYMatrix = new Matrix4()\r\nconst tmpRotateZMatrix = new Matrix4()\r\nconst tmpRotateMatrix = new Matrix4()\r\nconst tmpRotateCameraMatrix = new Matrix4()\r\nconst tmpRotateVector = new Vector3()\r\nconst tmpRotateQuaternion = new Quaternion()\r\nconst tmpRotateQuaternion2 = new Quaternion()\r\nconst tmpPanMatrix = new Matrix4()\r\nconst tmpPanVector = new Vector3()\r\nconst tmpAtomVector = new Vector3()\r\n\r\nexport interface TrackballControlsParams {\r\n  rotateSpeed?: number\r\n  zoomSpeed?: number\r\n  panSpeed?: number\r\n}\r\n\r\n/**\r\n * Trackball controls\r\n */\r\nclass TrackballControls {\r\n  viewer: Viewer\r\n  mouse: MouseObserver\r\n  controls: ViewerControls\r\n\r\n  rotateSpeed: number\r\n  zoomSpeed: number\r\n  panSpeed: number\r\n\r\n  constructor (readonly stage: Stage, params: TrackballControlsParams = {}) {\r\n    this.rotateSpeed = defaults(params.rotateSpeed, 2.0)\r\n    this.zoomSpeed = defaults(params.zoomSpeed, 1.2)\r\n    this.panSpeed = defaults(params.panSpeed, 1.0)\r\n\r\n    this.viewer = stage.viewer\r\n    this.mouse = stage.mouseObserver\r\n    this.controls = stage.viewerControls\r\n  }\r\n\r\n  get component (): Component|undefined {\r\n    return this.stage.transformComponent\r\n  }\r\n\r\n  get atom (): AtomProxy|undefined {\r\n    return this.stage.transformAtom\r\n  }\r\n\r\n  private _setPanVector (x: number, y: number, z = 0) {\r\n    const scaleFactor = this.controls.getCanvasScaleFactor(z)\r\n    tmpPanVector.set(x, y, 0)\r\n    tmpPanVector.multiplyScalar(this.panSpeed * scaleFactor)\r\n  }\r\n\r\n  private _getRotateXY (x: number, y: number) {\r\n    return [\r\n      this.rotateSpeed * -x * 0.01,\r\n      this.rotateSpeed * y * 0.01\r\n    ]\r\n  }\r\n\r\n  private _getCameraRotation(m: Matrix4) {\r\n    m.extractRotation(this.viewer.camera.matrixWorld)\r\n    m.multiply(tmpRotateYMatrix.makeRotationY(Math.PI))\r\n\r\n    return m\r\n  }\r\n\r\n  private _transformPanVector () {\r\n    if (!this.component) return\r\n\r\n    // Adjust for component and scene rotation\r\n    tmpPanMatrix.extractRotation(this.component.transform)\r\n    tmpPanMatrix.premultiply(this.viewer.rotationGroup.matrix)\r\n    tmpPanMatrix.getInverse(tmpPanMatrix)\r\n\r\n    // Adjust for camera rotation\r\n    tmpPanMatrix.multiply(this._getCameraRotation(tmpRotateMatrix))\r\n\r\n    tmpPanVector.applyMatrix4(tmpPanMatrix)\r\n  }\r\n\r\n  zoom (delta: number) {\r\n    this.controls.zoom(this.zoomSpeed * delta * 0.02)\r\n  }\r\n\r\n  pan (x: number, y: number) {\r\n    this._setPanVector(x, y)\r\n\r\n    // Adjust for scene rotation\r\n    tmpPanMatrix.getInverse(this.viewer.rotationGroup.matrix)\r\n\r\n    // Adjust for camera rotation\r\n    tmpPanMatrix.multiply(this._getCameraRotation(tmpRotateMatrix))\r\n\r\n    tmpPanVector.applyMatrix4(tmpPanMatrix)\r\n    this.controls.translate(tmpPanVector)\r\n  }\r\n\r\n  panComponent (x: number, y: number) {\r\n    if (!this.component) return\r\n\r\n    this._setPanVector(x, y)\r\n    this._transformPanVector()\r\n\r\n    this.component.position.add(tmpPanVector)\r\n    this.component.updateMatrix()\r\n  }\r\n\r\n  panAtom (x: number, y: number) {\r\n    if (!this.atom || !this.component) return\r\n\r\n    this.atom.positionToVector3(tmpAtomVector)\r\n    tmpAtomVector.add(this.viewer.translationGroup.position)\r\n    tmpAtomVector.applyMatrix4(this.viewer.rotationGroup.matrix)\r\n\r\n    this._setPanVector(x, y, tmpAtomVector.z)\r\n    this._transformPanVector()\r\n\r\n    this.atom.positionAdd(tmpPanVector)\r\n    this.component.updateRepresentations({ 'position': true })\r\n  }\r\n\r\n  rotate (x: number, y: number) {\r\n    const [ dx, dy ] = this._getRotateXY(x, y)\r\n\r\n    // rotate around screen X then screen Y\r\n    this._getCameraRotation(tmpRotateMatrix)\r\n    tmpRotateVector.set(1, 0, 0) // X axis\r\n    tmpRotateVector.applyMatrix4(tmpRotateMatrix) // screen X\r\n    tmpRotateQuaternion.setFromAxisAngle(tmpRotateVector, dy)\r\n\r\n    tmpRotateVector.set(0, 1, 0) // Y axis\r\n    tmpRotateVector.applyMatrix4(tmpRotateMatrix) // screen Y\r\n    tmpRotateQuaternion2.setFromAxisAngle(tmpRotateVector, dx)\r\n\r\n    tmpRotateQuaternion.multiply(tmpRotateQuaternion2)\r\n    tmpRotateMatrix.makeRotationFromQuaternion(tmpRotateQuaternion)\r\n    this.controls.applyMatrix(tmpRotateMatrix)\r\n  }\r\n\r\n  zRotate (x: number, y: number) {\r\n    const dz = this.rotateSpeed * ((-x + y) / -2) * 0.01\r\n\r\n    tmpRotateZMatrix.makeRotationZ(dz)\r\n    this.controls.applyMatrix(tmpRotateZMatrix)\r\n  }\r\n\r\n  rotateComponent (x: number, y: number) {\r\n    if (!this.component) return\r\n\r\n    const [ dx, dy ] = this._getRotateXY(x, y)\r\n\r\n    this._getCameraRotation(tmpRotateCameraMatrix)\r\n\r\n    tmpRotateMatrix.extractRotation(this.component.transform)\r\n    tmpRotateMatrix.premultiply(this.viewer.rotationGroup.matrix)\r\n    tmpRotateMatrix.getInverse(tmpRotateMatrix)\r\n    tmpRotateMatrix.premultiply(tmpRotateCameraMatrix)\r\n\r\n    tmpRotateVector.set(1, 0, 0)\r\n    tmpRotateVector.applyMatrix4(tmpRotateMatrix)\r\n    tmpRotateXMatrix.makeRotationAxis(tmpRotateVector, dy)\r\n\r\n    tmpRotateVector.set(0, 1, 0)\r\n    tmpRotateVector.applyMatrix4(tmpRotateMatrix)\r\n    tmpRotateYMatrix.makeRotationAxis(tmpRotateVector, dx)\r\n\r\n    tmpRotateXMatrix.multiply(tmpRotateYMatrix)\r\n    tmpRotateQuaternion.setFromRotationMatrix(tmpRotateXMatrix)\r\n    this.component.quaternion.premultiply(tmpRotateQuaternion)\r\n    this.component.quaternion.normalize()\r\n    this.component.updateMatrix()\r\n  }\r\n}\r\n\r\nexport default TrackballControls\r\n","/**\r\n * @file Picking Proxy\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3, Matrix4, Vector2 } from 'three'\r\n\r\nimport Stage from '../stage/stage'\r\nimport StructureComponent from '../component/structure-component'\r\nimport MouseObserver from '../stage/mouse-observer'\r\nimport { Picker } from '../utils/picker'\r\nimport ViewerControls from './viewer-controls'\r\nimport Shape from '../geometry/shape'\r\nimport Structure from '../structure/structure'\r\nimport BondProxy from '../proxy/bond-proxy'\r\nimport AtomProxy from '../proxy/atom-proxy'\r\nimport Surface from '../surface/surface'\r\nimport Volume from '../surface/volume'\r\nimport Unitcell from '../symmetry/unitcell'\r\nimport Component from '../component/component';\r\n\r\nconst tmpVec = new Vector3()\r\n\r\nexport interface ShapePrimitive {\r\n  name: string\r\n  shape: Shape\r\n}\r\n\r\nfunction closer (x: Vector3, a: Vector3, b: Vector3) {\r\n  return x.distanceTo(a) < x.distanceTo(b)\r\n}\r\n\r\n/**\r\n * Picking data object.\r\n * @typedef {Object} PickingData - picking data\r\n * @property {Number} [pid] - picking id\r\n * @property {Object} [instance] - instance data\r\n * @property {Integer} instance.id - instance id\r\n * @property {String|Integer} instance.name - instance name\r\n * @property {Matrix4} instance.matrix - transformation matrix of the instance\r\n * @property {Picker} [picker] - picker object\r\n */\r\n\r\nexport interface InstanceData {\r\n  id: number\r\n  name: number|string\r\n  matrix: Matrix4\r\n}\r\n\r\nexport interface PickingData {\r\n  pid: number\r\n  instance: InstanceData\r\n  picker: Picker\r\n}\r\n\r\n/**\r\n * Picking proxy class.\r\n */\r\nclass PickingProxy {\r\n  pid: number\r\n  picker: Picker\r\n  instance: InstanceData\r\n  controls: ViewerControls\r\n  mouse: MouseObserver\r\n\r\n  /**\r\n   * Create picking proxy object\r\n   * @param  {PickingData} pickingData - picking data\r\n   * @param  {Stage} stage - stage object\r\n   */\r\n  constructor (pickingData: PickingData, readonly stage: Stage) {\r\n    this.pid = pickingData.pid\r\n    this.picker = pickingData.picker\r\n\r\n    /**\r\n     * @type {Object}\r\n     */\r\n    this.instance = pickingData.instance\r\n\r\n    /**\r\n     * @type {Stage}\r\n     */\r\n    this.stage = stage\r\n    /**\r\n     * @type {ViewerControls}\r\n     */\r\n    this.controls = stage.viewerControls\r\n    /**\r\n     * @type {MouseObserver}\r\n     */\r\n    this.mouse = stage.mouseObserver\r\n  }\r\n\r\n  /**\r\n   * Kind of the picked data\r\n   * @type {String}\r\n   */\r\n  get type () { return this.picker.type }\r\n\r\n  /**\r\n   * If the `alt` key was pressed\r\n   * @type {Boolean}\r\n   */\r\n  get altKey () { return this.mouse.altKey }\r\n  /**\r\n   * If the `ctrl` key was pressed\r\n   * @type {Boolean}\r\n   */\r\n  get ctrlKey () { return this.mouse.ctrlKey }\r\n  /**\r\n   * If the `meta` key was pressed\r\n   * @type {Boolean}\r\n   */\r\n  get metaKey () { return this.mouse.metaKey }\r\n  /**\r\n   * If the `shift` key was pressed\r\n   * @type {Boolean}\r\n   */\r\n  get shiftKey () { return this.mouse.shiftKey }\r\n\r\n  /**\r\n   * Position of the mouse on the canvas\r\n   * @type {Vector2}\r\n   */\r\n  get canvasPosition (): Vector2 { return this.mouse.canvasPosition }\r\n\r\n  /**\r\n   * The component the picked data is part of\r\n   * @type {Component}\r\n   */\r\n  get component (): Component {\r\n    return this.stage.getComponentsByObject(this.picker.data as any).list[ 0 ]  // TODO\r\n  }\r\n\r\n  /**\r\n   * The picked object data\r\n   * @type {Object}\r\n   */\r\n  get object () {\r\n    return this.picker.getObject(this.pid)\r\n  }\r\n\r\n  /**\r\n   * The 3d position in the scene of the picked object\r\n   * @type {Vector3}\r\n   */\r\n  get position () {\r\n    return this.picker.getPosition(this.pid, this.instance, this.component)\r\n  }\r\n\r\n  /**\r\n   * The atom of a picked bond that is closest to the mouse\r\n   * @type {AtomProxy}\r\n   */\r\n  get closestBondAtom (): AtomProxy|undefined {\r\n    if (this.type !== 'bond' || !this.bond) return undefined\r\n\r\n    const bond = this.bond\r\n    const controls = this.controls\r\n    const cp = this.canvasPosition\r\n\r\n    const v1 = bond.atom1.positionToVector3()\r\n    const v2 = bond.atom2.positionToVector3()\r\n\r\n    v1.applyMatrix4(this.component.matrix)\r\n    v2.applyMatrix4(this.component.matrix)\r\n\r\n    const acp1 = controls.getPositionOnCanvas(v1)\r\n    const acp2 = controls.getPositionOnCanvas(v2)\r\n\r\n    return closer(cp as any, acp1, acp2) ? bond.atom1 : bond.atom2\r\n  }\r\n\r\n  /**\r\n   * Close-by atom\r\n   * @type {AtomProxy}\r\n   */\r\n  get closeAtom (): AtomProxy|undefined {\r\n    const cp = this.canvasPosition\r\n    const ca = this.closestBondAtom\r\n    if (!ca) return undefined\r\n\r\n    const v = ca.positionToVector3().applyMatrix4(this.component.matrix)\r\n\r\n    const acp = this.controls.getPositionOnCanvas(v)\r\n\r\n    ca.positionToVector3(tmpVec)\r\n    if (this.instance) tmpVec.applyMatrix4(this.instance.matrix)\r\n    tmpVec.applyMatrix4(this.component.matrix)\r\n    const viewer = this.controls.viewer\r\n    tmpVec.add(viewer.translationGroup.position)\r\n    tmpVec.applyMatrix4(viewer.rotationGroup.matrix)\r\n\r\n    const scaleFactor = this.controls.getCanvasScaleFactor(tmpVec.z)\r\n    const sc = this.component as StructureComponent\r\n    const radius = sc.getMaxRepresentationRadius(ca.index)\r\n    //console.log(scaleFactor, cp.distanceTo(acp), radius/scaleFactor, radius)\r\n\r\n    if (cp.distanceTo(acp) <= radius/scaleFactor) {\r\n      return ca\r\n    } else {\r\n      return undefined\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @type {Object}\r\n   */\r\n  get arrow () { return this._objectIfType('arrow') as ShapePrimitive }\r\n  /**\r\n   * @type {AtomProxy}\r\n   */\r\n  get atom () { return this._objectIfType('atom') as AtomProxy }\r\n  /**\r\n   * @type {Object}\r\n   */\r\n  get axes () { return this._objectIfType('axes') }\r\n  /**\r\n   * @type {BondProxy}\r\n   */\r\n  get bond () { return this._objectIfType('bond') as BondProxy }\r\n  /**\r\n   * @type {Object}\r\n   */\r\n  get box () { return this._objectIfType('box') as ShapePrimitive }\r\n  /**\r\n   * @type {Object}\r\n   */\r\n  get cone () { return this._objectIfType('cone') as ShapePrimitive }\r\n  /**\r\n   * @type {Object}\r\n   */\r\n  get clash () { return this._objectIfType('clash') as { clash: { sele1: string, sele2: string } } }\r\n  /**\r\n   * @type {BondProxy}\r\n   */\r\n  get contact () { return this._objectIfType('contact') as { type: string, atom1: AtomProxy, atom2: AtomProxy } }\r\n  /**\r\n   * @type {Object}\r\n   */\r\n  get cylinder () { return this._objectIfType('cylinder') as ShapePrimitive }\r\n  /**\r\n   * @type {BondProxy}\r\n   */\r\n  get distance () { return this._objectIfType('distance') as BondProxy }\r\n  /**\r\n   * @type {Object}\r\n   */\r\n  get ellipsoid () { return this._objectIfType('ellipsoid') as ShapePrimitive }\r\n  /**\r\n   * @type {Object}\r\n   */\r\n  get octahedron () { return this._objectIfType('octahedron') as ShapePrimitive }\r\n  /**\r\n   * @type {Object}\r\n   */\r\n  get point () { return this._objectIfType('point') as ShapePrimitive }\r\n  /**\r\n   * @type {Object}\r\n   */\r\n  get mesh () { return this._objectIfType('mesh') as { name: string, shape: Shape, serial: number } }\r\n  /**\r\n   * @type {Object}\r\n   */\r\n  get slice () { return this._objectIfType('slice') as { volume: Volume, value: number } }\r\n  /**\r\n   * @type {Object}\r\n   */\r\n  get sphere () { return this._objectIfType('sphere') as ShapePrimitive }\r\n  /**\r\n   * @type {Object}\r\n   */\r\n  get tetrahedron () { return this._objectIfType('tetrahedron') as ShapePrimitive }\r\n  /**\r\n   * @type {Object}\r\n   */\r\n  get torus () { return this._objectIfType('torus') as ShapePrimitive }\r\n  /**\r\n   * @type {Object}\r\n   */\r\n  get surface () { return this._objectIfType('surface') as { surface: Surface, index: number } }\r\n  /**\r\n   * @type {Object}\r\n   */\r\n  get unitcell () { return this._objectIfType('unitcell') as { unitcell: Unitcell, structure: Structure } }\r\n  /**\r\n   * @type {Object}\r\n   */\r\n  get unknown () { return this._objectIfType('unknown') }\r\n  /**\r\n   * @type {Object}\r\n   */\r\n  get volume () { return this._objectIfType('volume') as { volume: Volume, value: number } }\r\n  /**\r\n   * @type {Object}\r\n   */\r\n  get wideline () { return this._objectIfType('wideline') as ShapePrimitive }\r\n\r\n  _objectIfType (type: string) {\r\n    return this.type === type ? this.object : undefined\r\n  }\r\n\r\n  getLabel () {\r\n    const atom = this.atom || this.closeAtom\r\n    let msg = 'nothing'\r\n    if (this.arrow) {\r\n      msg = this.arrow.name\r\n    } else if (atom) {\r\n      msg = `atom: ${atom.qualifiedName()} (${atom.structure.name})`\r\n    } else if (this.axes) {\r\n      msg = 'axes'\r\n    } else if (this.bond) {\r\n      msg = `bond: ${this.bond.atom1.qualifiedName()} - ${this.bond.atom2.qualifiedName()} (${this.bond.structure.name})`\r\n    } else if (this.box) {\r\n      msg = this.box.name\r\n    } else if (this.cone) {\r\n      msg = this.cone.name\r\n    } else if (this.clash) {\r\n      msg = `clash: ${this.clash.clash.sele1} - ${this.clash.clash.sele2}`\r\n    } else if (this.contact) {\r\n      msg = `${this.contact.type}: ${this.contact.atom1.qualifiedName()} - ${this.contact.atom2.qualifiedName()} (${this.contact.atom1.structure.name})`\r\n    } else if (this.cylinder) {\r\n      msg = this.cylinder.name\r\n    } else if (this.distance) {\r\n      msg = `distance: ${this.distance.atom1.qualifiedName()} - ${this.distance.atom2.qualifiedName()} (${this.distance.structure.name})`\r\n    } else if (this.ellipsoid) {\r\n      msg = this.ellipsoid.name\r\n    } else if (this.octahedron) {\r\n      msg = this.octahedron.name\r\n    } else if (this.point) {\r\n      msg = this.point.name\r\n    } else if (this.mesh) {\r\n      msg = `mesh: ${this.mesh.name || this.mesh.serial} (${this.mesh.shape.name})`\r\n    } else if (this.slice) {\r\n      msg = `slice: ${this.slice.value.toPrecision(3)} (${this.slice.volume.name})`\r\n    } else if (this.sphere) {\r\n      msg = this.sphere.name\r\n    } else if (this.surface) {\r\n      msg = `surface: ${this.surface.surface.name}`\r\n    } else if (this.tetrahedron) {\r\n      msg = this.tetrahedron.name\r\n    } else if (this.torus) {\r\n      msg = this.torus.name\r\n    } else if (this.unitcell) {\r\n      msg = `unitcell: ${this.unitcell.unitcell.spacegroup} (${this.unitcell.structure.name})`\r\n    } else if (this.unknown) {\r\n      msg = 'unknown'\r\n    } else if (this.volume) {\r\n      msg = `volume: ${this.volume.value.toPrecision(3)} (${this.volume.volume.name})`\r\n    } else if (this.wideline) {\r\n      msg = this.wideline.name\r\n    }\r\n    return msg\r\n  }\r\n}\r\n\r\nexport default PickingProxy\r\n","/**\r\n * @file Picking Controls\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport PickingProxy from './picking-proxy'\r\nimport Stage from '../stage/stage'\r\nimport Viewer from '../viewer/viewer'\r\n\r\n/**\r\n * Picking controls\r\n */\r\nclass PickingControls {\r\n  viewer: Viewer\r\n\r\n  constructor (readonly stage: Stage) {\r\n    this.viewer = stage.viewer\r\n  }\r\n\r\n  /**\r\n   * get picking data\r\n   * @param {Number} x - canvas x coordinate\r\n   * @param {Number} y - canvas y coordinate\r\n   * @return {PickingProxy|undefined} picking proxy\r\n   */\r\n  pick (x: number, y: number) {\r\n    const pickingData = this.viewer.pick(x, y)\r\n\r\n    if (pickingData.picker &&\r\n        pickingData.picker.type !== 'ignore' &&\r\n        pickingData.pid !== undefined\r\n    ) {\r\n      const pickerArray = pickingData.picker.array\r\n      if (pickerArray && pickingData.pid >= pickerArray.length) {\r\n        console.error('pid >= picker.array.length')\r\n      } else {\r\n        return new PickingProxy(pickingData, this.stage)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default PickingControls\r\n","/**\r\n * @file Viewer Controls\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector2, Vector3, Matrix4, Quaternion, OrthographicCamera } from 'three'\r\nimport * as signalsWrapper from 'signals'\r\n\r\nimport {\r\n  ensureVector2, ensureVector3, ensureMatrix4, ensureQuaternion\r\n} from '../utils'\r\nimport { degToRad } from '../math/math-utils'\r\nimport Stage from '../stage/stage'\r\nimport Viewer from '../viewer/viewer'\r\n\r\n/**\r\n * Orientation matrix, a 4x4 transformation matrix with rotation part\r\n * used for scene rotation, scale part for scene camera distance and\r\n * position part for scene translation\r\n * @typedef {Matrix4} OrientationMatrix - orientation matrix\r\n */\r\n\r\nconst tmpQ = new Quaternion()\r\nconst tmpP = new Vector3()\r\nconst tmpS = new Vector3()\r\n\r\nconst tmpCanvasVector = new Vector3()\r\nconst tmpScaleVector = new Vector3()\r\nconst tmpRotateMatrix = new Matrix4()\r\nconst tmpRotateVector = new Vector3()\r\nconst tmpAlignMatrix = new Matrix4()\r\n\r\n/**\r\n * Viewer controls\r\n */\r\nclass ViewerControls {\r\n  signals = {\r\n    changed: new signalsWrapper.Signal()\r\n  }\r\n\r\n  viewer: Viewer\r\n\r\n  /**\r\n   * @param  {Stage} stage - the stage object\r\n   */\r\n  constructor (readonly stage: Stage) {\r\n    this.viewer = stage.viewer\r\n  }\r\n\r\n  /**\r\n   * scene center position\r\n   * @type {Vector3}\r\n   */\r\n  get position () {\r\n    return this.viewer.translationGroup.position\r\n  }\r\n\r\n  /**\r\n   * scene rotation\r\n   * @type {Quaternion}\r\n   */\r\n  get rotation () {\r\n    return this.viewer.rotationGroup.quaternion\r\n  }\r\n\r\n  /**\r\n   * Trigger render and emit changed event\r\n   * @emits {ViewerControls.signals.changed}\r\n   * @return {undefined}\r\n   */\r\n  changed () {\r\n    this.viewer.requestRender()\r\n    this.signals.changed.dispatch()\r\n  }\r\n\r\n  getPositionOnCanvas (position: Vector3, optionalTarget?: Vector2) {\r\n    const canvasPosition = ensureVector2(optionalTarget)\r\n    const viewer = this.viewer\r\n\r\n    tmpCanvasVector.copy(position)\r\n      .add(viewer.translationGroup.position)\r\n      .applyMatrix4(viewer.rotationGroup.matrix)\r\n      .project(viewer.camera)\r\n\r\n    return canvasPosition.set(\r\n      (tmpCanvasVector.x + 1) * viewer.width / 2,\r\n      (tmpCanvasVector.y + 1) * viewer.height / 2\r\n    )\r\n  }\r\n\r\n  getCanvasScaleFactor (z = 0) {\r\n    const camera = this.viewer.camera\r\n    if (camera instanceof OrthographicCamera) {\r\n      return 1 / camera.zoom\r\n    } else {\r\n      z = Math.abs(z)\r\n      z += this.getCameraDistance()\r\n      const fov = degToRad(camera.fov)\r\n      const unitHeight = 2.0 * z * Math.tan(fov / 2)\r\n      return unitHeight / this.viewer.height\r\n    }\r\n  }\r\n\r\n  /**\r\n   * get scene orientation\r\n   * @param {Matrix4} optionalTarget - pre-allocated target matrix\r\n   * @return {OrientationMatrix} scene orientation\r\n   */\r\n  getOrientation (optionalTarget?: Matrix4) {\r\n    const m = ensureMatrix4(optionalTarget)\r\n\r\n    m.copy(this.viewer.rotationGroup.matrix)\r\n    const z = this.getCameraDistance()\r\n    m.scale(tmpScaleVector.set(z, z, z))\r\n    m.setPosition(this.viewer.translationGroup.position)\r\n\r\n    return m\r\n  }\r\n\r\n  /**\r\n   * set scene orientation\r\n   * @param {OrientationMatrix|Array} orientation - scene orientation\r\n   * @return {undefined}\r\n   */\r\n  orient (orientation?: Matrix4) {\r\n    ensureMatrix4(orientation).decompose(tmpP, tmpQ, tmpS)\r\n\r\n    const v = this.viewer\r\n    v.rotationGroup.setRotationFromQuaternion(tmpQ)\r\n    v.translationGroup.position.copy(tmpP)\r\n    v.cameraDistance = tmpS.z\r\n    v.updateZoom()\r\n    this.changed()\r\n  }\r\n\r\n  /**\r\n   * translate scene\r\n   * @param  {Vector3|Array} vector - translation vector\r\n   * @return {undefined}\r\n   */\r\n  translate (vector: Vector3|number[]) {\r\n    this.viewer.translationGroup.position\r\n      .add(ensureVector3(vector))\r\n    this.changed()\r\n  }\r\n\r\n  /**\r\n   * center scene\r\n   * @param  {Vector3|Array} position - center position\r\n   * @return {undefined}\r\n   */\r\n  center (position: Vector3|number[]) {\r\n    this.viewer.translationGroup.position\r\n      .copy(ensureVector3(position)).negate()\r\n    this.changed()\r\n  }\r\n\r\n  /**\r\n   * \"zoom\" scene by moving camera closer to origin\r\n   * @param  {Number} delta - zoom change\r\n   * @return {undefined}\r\n   */\r\n  zoom (delta: number) {\r\n    this.distance(this.getCameraDistance() * (1 - delta))\r\n  }\r\n\r\n  /**\r\n   * get camera distance\r\n   */\r\n  getCameraDistance(): number {\r\n    return this.viewer.cameraDistance\r\n  }\r\n\r\n  /**\r\n   * camera distance\r\n   * @param  {Number} z - distance\r\n   * @return {undefined}\r\n   */\r\n  distance (distance: number) {\r\n    // Math.abs because distance used to be \"z\", normally negative.\r\n    // Math.max to prevent us from getting _too_ close.\r\n    this.viewer.cameraDistance = Math.max(Math.abs(distance), 0.2)\r\n    this.viewer.updateZoom()\r\n    this.changed()\r\n  }\r\n\r\n  /**\r\n   * spin scene on axis\r\n   * @param  {Vector3|Array} axis - rotation axis\r\n   * @param  {Number} angle - amount to spin\r\n   * @return {undefined}\r\n   */\r\n  spin (axis: Vector3|number[], angle: number) {\r\n    tmpRotateMatrix.getInverse(this.viewer.rotationGroup.matrix)\r\n    tmpRotateVector\r\n      .copy(ensureVector3(axis)).applyMatrix4(tmpRotateMatrix)\r\n\r\n    this.viewer.rotationGroup.rotateOnAxis(tmpRotateVector, angle)\r\n    this.changed()\r\n  }\r\n\r\n  /**\r\n   * rotate scene\r\n   * @param  {Quaternion|Array} quaternion - rotation quaternion\r\n   * @return {undefined}\r\n   */\r\n  rotate (quaternion: Quaternion|number[]) {\r\n    this.viewer.rotationGroup\r\n      .setRotationFromQuaternion(ensureQuaternion(quaternion))\r\n    this.changed()\r\n  }\r\n\r\n  /**\r\n   * align scene to basis matrix\r\n   * @param  {Matrix4|Array} basis - basis matrix\r\n   * @return {undefined}\r\n   */\r\n  align (basis: Matrix4|number[]) {\r\n    tmpAlignMatrix.getInverse(ensureMatrix4(basis))\r\n\r\n    this.viewer.rotationGroup.setRotationFromMatrix(tmpAlignMatrix)\r\n    this.changed()\r\n  }\r\n\r\n  /**\r\n   * apply rotation matrix to scene\r\n   * @param  {Matrix4|Array} matrix - rotation matrix\r\n   * @return {undefined}\r\n   */\r\n  applyMatrix (matrix: Matrix4|number[]) {\r\n    this.viewer.rotationGroup.applyMatrix4(ensureMatrix4(matrix))\r\n    this.changed()\r\n  }\r\n}\r\n\r\nexport default ViewerControls\r\n","/**\r\n * @file Animation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3, Quaternion } from 'three'\r\n\r\nimport { defaults, ensureVector3, ensureQuaternion } from '../utils'\r\nimport { lerp, smoothstep } from '../math/math-utils'\r\nimport ViewerControls from '../controls/viewer-controls'\r\nimport Stats from '../viewer/stats'\r\n\r\n/**\r\n * Animation. Base animation class.\r\n * @interface\r\n */\r\nabstract class Animation {\r\n  duration: number\r\n  controls: ViewerControls\r\n\r\n  alpha: number\r\n  startTime: number\r\n\r\n  pausedTime = -1\r\n  elapsedDuration = 0\r\n  pausedDuration = 0\r\n  ignoreGlobalToggle = false\r\n\r\n  private _paused = false\r\n  private _resolveList: Function[] = []\r\n  private _hold: boolean\r\n\r\n  constructor (duration: number|undefined, controls: ViewerControls, ...args: any[]) {\r\n    this.duration = defaults(duration, 1000)\r\n    this.controls = controls\r\n\r\n    this.startTime = window.performance.now()\r\n\r\n    this._init(...args)\r\n  }\r\n\r\n  /**\r\n   * True when animation has finished\r\n   */\r\n  get done () {\r\n    return this.alpha === 1\r\n  }\r\n\r\n  /**\r\n   * True when animation is paused\r\n   */\r\n  get paused () {\r\n    return this._paused\r\n  }\r\n\r\n  /**\r\n   * init animation\r\n   */\r\n  abstract _init (...args: any[]): void\r\n\r\n  /**\r\n   * called on every tick\r\n   */\r\n  abstract _tick (stats?: Stats): void\r\n\r\n  tick (stats: Stats) {\r\n    if (this._paused) return\r\n\r\n    this.elapsedDuration = stats.currentTime - this.startTime - this.pausedDuration\r\n\r\n    if (this.duration === 0) {\r\n      this.alpha = 1\r\n    } else {\r\n      this.alpha = smoothstep(0, 1, this.elapsedDuration / this.duration)\r\n    }\r\n\r\n    this._tick(stats)\r\n\r\n    if (this.done) {\r\n      this._resolveList.forEach(resolve => resolve())\r\n    }\r\n\r\n    return this.done\r\n  }\r\n\r\n  /**\r\n   * Pause animation\r\n   * @param {boolean} [hold] - put animation on a hold which\r\n   *                           must be release before it can be resumed\r\n   */\r\n  pause (hold?: boolean) {\r\n    if (hold) this._hold = true\r\n\r\n    if (this.pausedTime === -1) {\r\n      this.pausedTime = window.performance.now()\r\n    }\r\n    this._paused = true\r\n  }\r\n\r\n  /**\r\n   * Resume animation\r\n   * @param {Boolean} [releaseHold] - release a hold on the animation\r\n   */\r\n  resume (releaseHold?: boolean) {\r\n    if (!releaseHold && this._hold) return\r\n\r\n    this.pausedDuration += window.performance.now() - this.pausedTime\r\n    this._paused = false\r\n    this._hold = false\r\n    this.pausedTime = -1\r\n  }\r\n\r\n  /**\r\n   * Toggle animation\r\n   */\r\n  toggle () {\r\n    if (this._paused) {\r\n      this.resume()\r\n    } else {\r\n      this.pause()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Promise-like interface\r\n   */\r\n  then (callback: Function) {\r\n    let p: Promise<any>\r\n\r\n    if (this.done) {\r\n      p = Promise.resolve()\r\n    } else {\r\n      p = new Promise(resolve => this._resolveList.push(resolve))\r\n    }\r\n\r\n    return p.then(callback as any)\r\n  }\r\n}\r\n\r\nexport default Animation\r\n\r\n/**\r\n * Spin animation. Spin around an axis.\r\n */\r\nexport class SpinAnimation extends Animation {\r\n  axis: Vector3\r\n  angle: number\r\n\r\n  constructor (duration: number|undefined, controls: ViewerControls, ...args: any[]) {\r\n    super(defaults(duration, Infinity), controls, ...args)\r\n  }\r\n\r\n  _init (axis: number[]|Vector3, angle: number) {\r\n    if (Array.isArray(axis)) {\r\n      this.axis = new Vector3().fromArray(axis)\r\n    } else {\r\n      this.axis = defaults(axis, new Vector3(0, 1, 0))\r\n    }\r\n    this.angle = defaults(angle, 0.01)\r\n  }\r\n\r\n  _tick (stats: Stats) {\r\n    if (!this.axis || !this.angle) return\r\n\r\n    this.controls.spin(\r\n      this.axis, this.angle * stats.lastDuration / 16\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * Rock animation. Rock around an axis.\r\n */\r\nexport class RockAnimation extends Animation {\r\n  axis: Vector3\r\n  angleStep: number\r\n  angleEnd: number\r\n  angleSum = 0\r\n  direction = 1\r\n\r\n  constructor (duration: number|undefined, controls: ViewerControls, ...args: any[]) {\r\n    super(defaults(duration, Infinity), controls, ...args)\r\n  }\r\n\r\n  _init (axis: number[]|Vector3, angleStep: number, angleEnd: number) {\r\n    if (Array.isArray(axis)) {\r\n      this.axis = new Vector3().fromArray(axis)\r\n    } else {\r\n      this.axis = defaults(axis, new Vector3(0, 1, 0))\r\n    }\r\n    this.angleStep = defaults(angleStep, 0.01)\r\n    this.angleEnd = defaults(angleEnd, 0.2)\r\n  }\r\n\r\n  _tick (stats: Stats) {\r\n    if (!this.axis || !this.angleStep || !this.angleEnd) return\r\n\r\n    const alpha = smoothstep(\r\n      0, 1, Math.abs(this.angleSum) / this.angleEnd\r\n    )\r\n    const angle = this.angleStep * this.direction * (1.1 - alpha)\r\n\r\n    this.controls.spin(\r\n      this.axis, angle * stats.lastDuration / 16\r\n    )\r\n\r\n    this.angleSum += this.angleStep\r\n\r\n    if (this.angleSum >= this.angleEnd) {\r\n      this.direction *= -1\r\n      this.angleSum = -this.angleEnd\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Move animation. Move from one position to another.\r\n */\r\nexport class MoveAnimation extends Animation {\r\n  moveFrom: Vector3\r\n  moveTo: Vector3\r\n\r\n  _init (moveFrom: number[]|Vector3, moveTo: number[]|Vector3) {\r\n    this.moveFrom = ensureVector3(defaults(moveFrom, new Vector3()))\r\n    this.moveTo = ensureVector3(defaults(moveTo, new Vector3()))\r\n  }\r\n\r\n  _tick (/* stats */) {\r\n    this.controls.position.lerpVectors(\r\n      this.moveFrom, this.moveTo, this.alpha\r\n    ).negate()\r\n    this.controls.changed()\r\n  }\r\n}\r\n\r\n/**\r\n * Zoom animation. Gradually change the zoom level.\r\n */\r\nexport class ZoomAnimation extends Animation {\r\n  zoomFrom: number\r\n  zoomTo: number\r\n\r\n  _init (zoomFrom: number, zoomTo: number) {\r\n    this.zoomFrom = zoomFrom\r\n    this.zoomTo = zoomTo\r\n  }\r\n\r\n  _tick () {\r\n    this.controls.distance(lerp(this.zoomFrom, this.zoomTo, this.alpha))\r\n  }\r\n}\r\n\r\n/**\r\n * Rotate animation. Rotate from one orientation to another.\r\n */\r\nexport class RotateAnimation extends Animation {\r\n  rotateFrom: Quaternion\r\n  rotateTo: Quaternion\r\n\r\n  private _currentRotation = new Quaternion()\r\n\r\n  _init (rotateFrom: number[]|Quaternion, rotateTo: number[]|Quaternion) {\r\n    this.rotateFrom = ensureQuaternion(rotateFrom)\r\n    this.rotateTo = ensureQuaternion(rotateTo)\r\n\r\n    this._currentRotation = new Quaternion()\r\n  }\r\n\r\n  _tick () {\r\n    this._currentRotation\r\n      .copy(this.rotateFrom)\r\n      .slerp(this.rotateTo, this.alpha)\r\n\r\n    this.controls.rotate(this._currentRotation)\r\n  }\r\n}\r\n\r\n/**\r\n * Value animation. Call callback with interpolated value.\r\n */\r\nexport class ValueAnimation extends Animation {\r\n  valueFrom: number\r\n  valueTo: number\r\n  callback: Function\r\n\r\n  _init (valueFrom: number, valueTo: number, callback: Function) {\r\n    this.valueFrom = valueFrom\r\n    this.valueTo = valueTo\r\n\r\n    this.callback = callback\r\n  }\r\n\r\n  _tick (/* stats */) {\r\n    this.callback(lerp(this.valueFrom, this.valueTo, this.alpha))\r\n  }\r\n}\r\n\r\n/**\r\n * Timeout animation. Call callback after duration.\r\n */\r\nexport class TimeoutAnimation extends Animation {\r\n  callback: Function\r\n\r\n  _init (callback: Function) {\r\n    this.callback = callback\r\n  }\r\n\r\n  _tick () {\r\n    if (this.alpha === 1) this.callback()\r\n  }\r\n}\r\n\r\n/**\r\n * Animation list.\r\n */\r\nexport class AnimationList {\r\n  _list: Animation[]\r\n  _resolveList: Function[] = []\r\n\r\n  constructor (list: Animation[] = []) {\r\n    this._list = list\r\n  }\r\n\r\n  /**\r\n   * True when all animations have finished\r\n   */\r\n  get done () {\r\n    return this._list.every(animation => {\r\n      return animation.done\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Promise-like interface\r\n   */\r\n  then (callback: Function) {\r\n    let p: Promise<any>\r\n\r\n    if (this.done) {\r\n      p = Promise.resolve()\r\n    } else {\r\n      p = new Promise(resolve => {\r\n        this._resolveList.push(resolve)\r\n        this._list.forEach(animation => {\r\n          animation.then(() => {\r\n            this._resolveList.forEach(callback => {\r\n              callback()\r\n            })\r\n            this._resolveList.length = 0\r\n          })\r\n        })\r\n      })\r\n    }\r\n\r\n    return p.then(callback as any)\r\n  }\r\n}\r\n","/**\r\n * @file Animation Controls\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3, Quaternion, Matrix4 } from 'three'\r\n\r\nimport { ensureMatrix4 } from '../utils'\r\nimport Animation, {\r\n    SpinAnimation, RockAnimation, MoveAnimation, ZoomAnimation,\r\n    RotateAnimation, ValueAnimation, TimeoutAnimation, AnimationList\r\n} from '../animation/animation'\r\nimport Stage from '../stage/stage'\r\nimport Component from '../component/component'\r\nimport Viewer from '../viewer/viewer'\r\nimport Stats from '../viewer/stats'\r\nimport ViewerControls from './viewer-controls'\r\n\r\n/**\r\n * Animation controls\r\n */\r\nclass AnimationControls {\r\n  viewer: Viewer\r\n  controls: ViewerControls\r\n\r\n  animationList: Animation[] = []\r\n  finishedList: Animation[] = []\r\n\r\n  /**\r\n   * Create animation controls\r\n   * @param  {Stage} stage - the stage object\r\n   */\r\n  constructor (readonly stage: Stage) {\r\n    this.viewer = stage.viewer\r\n    this.controls = stage.viewerControls\r\n  }\r\n\r\n  /**\r\n   * True when all animations are paused\r\n   * @type {Boolean}\r\n   */\r\n  get paused () {\r\n    return this.animationList.every((animation: Animation) => animation.paused)\r\n  }\r\n\r\n  /**\r\n   * Add an animation\r\n   */\r\n  add (animation: Animation) {\r\n    if (animation.duration === 0) {\r\n      animation.tick(this.viewer.stats)\r\n    } else {\r\n      this.animationList.push(animation)\r\n    }\r\n\r\n    return animation\r\n  }\r\n\r\n  /**\r\n   * Remove an animation\r\n   */\r\n  remove (animation: Animation) {\r\n    const list = this.animationList\r\n    const index = list.indexOf(animation)\r\n\r\n    if (index > -1) {\r\n      list.splice(index, 1)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Run all animations\r\n   */\r\n  run (stats: Stats) {\r\n    const finishedList = this.finishedList\r\n    const animationList = this.animationList\r\n\r\n    const n = animationList.length\r\n    for (let i = 0; i < n; ++i) {\r\n      const animation = animationList[ i ]\r\n      // tick returns true when finished\r\n      if (animation.tick(stats)) {\r\n        finishedList.push(animation)\r\n      }\r\n    }\r\n\r\n    const m = finishedList.length\r\n    if (m) {\r\n      for (let j = 0; j < m; ++j) {\r\n        this.remove(finishedList[ j ])\r\n      }\r\n      finishedList.length = 0\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add a spin animation\r\n   * @param  {Vector3} axis - axis to spin around\r\n   * @param  {Number} angle - amount to spin per frame, radians\r\n   * @param  {Number} duration - animation time in milliseconds\r\n   * @return {SpinAnimation} the animation\r\n   */\r\n  spin (axis: Vector3|number[], angle?: number, duration?: number) {\r\n    return this.add(\r\n      new SpinAnimation(duration, this.controls, axis, angle)\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Add a rock animation\r\n   * @param  {Vector3} axis - axis to rock around\r\n   * @param  {Number} angle - amount to spin per frame, radians\r\n   * @param  {Number} end - maximum extend of motion, radians\r\n   * @param  {Number} duration - animation time in milliseconds\r\n   * @return {SpinAnimation} the animation\r\n   */\r\n  rock (axis: Vector3|number[], angle?: number, end?: number, duration?: number) {\r\n    return this.add(\r\n      new RockAnimation(duration, this.controls, axis, angle, end)\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Add a rotate animation\r\n   * @param  {Quaternion} rotateTo - target rotation\r\n   * @param  {Number} duration - animation time in milliseconds\r\n   * @return {RotateAnimation} the animation\r\n   */\r\n  rotate (rotateTo: Quaternion|number[], duration?: number) {\r\n    const rotateFrom = this.viewer.rotationGroup.quaternion.clone()\r\n\r\n    return this.add(\r\n      new RotateAnimation(duration, this.controls, rotateFrom, rotateTo)\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Add a move animation\r\n   * @param  {Vector3} moveTo - target position\r\n   * @param  {Number} duration - animation time in milliseconds\r\n   * @return {MoveAnimation} the animation\r\n   */\r\n  move (moveTo: Vector3|number[], duration?: number) {\r\n    const moveFrom = this.controls.position.clone().negate()\r\n\r\n    return this.add(\r\n      new MoveAnimation(duration, this.controls, moveFrom, moveTo)\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Add a zoom animation\r\n   * @param  {Number} zoomTo - target distance\r\n   * @param  {Number} duration - animation time in milliseconds\r\n   * @return {ZoomAnimation} the animation\r\n   */\r\n  zoom (zoomTo: number, duration?: number) {\r\n    const zoomFrom = this.viewer.camera.position.z\r\n\r\n    return this.add(\r\n      new ZoomAnimation(duration, this.controls, zoomFrom, zoomTo)\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Add a zoom and a move animation\r\n   * @param  {Vector3} moveTo - target position\r\n   * @param  {Number} zoomTo - target distance\r\n   * @param  {Number} duration - animation time in milliseconds\r\n   * @return {Array} the animations\r\n   */\r\n  zoomMove (moveTo: Vector3, zoomTo: number, duration?: number) {\r\n    return new AnimationList([\r\n      this.move(moveTo, duration),\r\n      this.zoom(zoomTo, duration)\r\n    ])\r\n  }\r\n\r\n  /**\r\n   * Add an orient animation\r\n   * @param  {OrientationMatrix|Array} orientTo - target orientation\r\n   * @param  {Number} duration - animation time in milliseconds\r\n   * @return {Array} the animations\r\n   */\r\n  orient (orientTo: Matrix4|number[], duration?: number) {\r\n    const p = new Vector3()\r\n    const q = new Quaternion()\r\n    const s = new Vector3()\r\n\r\n    ensureMatrix4(orientTo).decompose(p, q, s)\r\n\r\n    return new AnimationList([\r\n      this.move(p.negate(), duration),\r\n      this.rotate(q, duration),\r\n      this.zoom(-s.x, duration)\r\n    ])\r\n  }\r\n\r\n  /**\r\n   * Add a value animation\r\n   * @param  {Number} valueFrom - start value\r\n   * @param  {Number} valueTo - target value\r\n   * @param  {Function} callback - called on every tick\r\n   * @param  {Number} duration - animation time in milliseconds\r\n   * @return {ValueAnimation} the animation\r\n   */\r\n  value (valueFrom: number, valueTo: number, callback: Function, duration?: number) {\r\n    return this.add(\r\n      new ValueAnimation(duration, this.controls, valueFrom, valueTo, callback)\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Add a timeout animation\r\n   * @param  {Function} callback - called after duration\r\n   * @param  {Number} duration - timeout in milliseconds\r\n   * @return {TimeoutAnimation} the animation\r\n   */\r\n  timeout (callback: Function, duration?: number) {\r\n    return this.add(\r\n      new TimeoutAnimation(duration, this.controls, callback)\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Add a component spin animation\r\n   * @param  {Component} component - object to move\r\n   * @param  {Vector3} axis - axis to spin around\r\n   * @param  {Number} angle - amount to spin per frame, radians\r\n   * @param  {Number} duration - animation time in milliseconds\r\n   * @return {SpinAnimation} the animation\r\n   */\r\n  spinComponent (component: Component, axis?: Vector3|number[], angle?: number, duration?: number) {\r\n    return this.add(\r\n      // TODO\r\n      new SpinAnimation(duration, component.controls as any, axis, angle)\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Add a component rock animation\r\n   * @param  {Component} component - object to move\r\n   * @param  {Vector3} axis - axis to rock around\r\n   * @param  {Number} angle - amount to spin per frame, radians\r\n   * @param  {Number} end - maximum extend of motion, radians\r\n   * @param  {Number} duration - animation time in milliseconds\r\n   * @return {SpinAnimation} the animation\r\n   */\r\n  rockComponent (component: Component, axis: Vector3|number[], angle?: number, end?: number, duration?: number) {\r\n    return this.add(\r\n       // TODO\r\n      new RockAnimation(duration, component.controls as any, axis, angle, end)\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Add a component move animation\r\n   * @param  {Component} component - object to move\r\n   * @param  {Vector3} moveTo - target position\r\n   * @param  {Number} duration - animation time in milliseconds\r\n   * @return {MoveAnimation} the animation\r\n   */\r\n  moveComponent (component: Component, moveTo: Vector3|number[], duration?: number) {\r\n    const moveFrom = component.controls.position.clone().negate()\r\n\r\n    return this.add(\r\n      // TODO\r\n      new MoveAnimation(duration, component.controls as any, moveFrom, moveTo)\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Pause all animations\r\n   * @return {undefined}\r\n   */\r\n  pause () {\r\n    this.animationList.forEach(animation => animation.pause())\r\n  }\r\n\r\n  /**\r\n   * Resume all animations\r\n   * @return {undefined}\r\n   */\r\n  resume () {\r\n    this.animationList.forEach(animation => animation.resume())\r\n  }\r\n\r\n  /**\r\n   * Toggle all animations\r\n   * @return {undefined}\r\n   */\r\n  toggle () {\r\n    if (this.paused) {\r\n      this.resume()\r\n    } else {\r\n      this.pause()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear all animations\r\n   * @return {undefined}\r\n   */\r\n  clear () {\r\n    this.animationList.length = 0\r\n  }\r\n\r\n  dispose () {\r\n    this.clear()\r\n  }\r\n}\r\n\r\nexport default AnimationControls\r\n","/**\r\n * @file Queue\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nclass Queue<T> {\r\n  queue: T[] = []\r\n  pending = false\r\n\r\n  constructor(readonly fn: Function, argList?: T[]) {\r\n    this.next = this.next.bind(this)\r\n\r\n    if (argList) {\r\n      for (let i = 0, il = argList.length; i < il; ++i) {\r\n        this.queue.push(argList[ i ])\r\n      }\r\n      this.next()\r\n    }\r\n  }\r\n\r\n  private run (arg: any) {\r\n    this.fn(arg, this.next)\r\n  }\r\n\r\n  private next () {\r\n    const arg = this.queue.shift()\r\n    if (arg !== undefined) {\r\n      this.pending = true\r\n      setTimeout(() => this.run(arg))\r\n    } else {\r\n      this.pending = false\r\n    }\r\n  }\r\n\r\n  push (arg: T) {\r\n    this.queue.push(arg)\r\n    if (!this.pending) this.next()\r\n  }\r\n\r\n  kill () {\r\n    this.queue.length = 0\r\n  }\r\n\r\n  length () {\r\n    return this.queue.length\r\n  }\r\n}\r\n\r\nexport default Queue\r\n","/**\r\n * @file Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Color, Vector3, Matrix4 } from 'three'\r\n\r\nimport { Debug, Log, ColormakerRegistry, ExtensionFragDepth } from '../globals'\r\nimport { defaults } from '../utils'\r\nimport Queue from '../utils/queue'\r\nimport Counter from '../utils/counter'\r\nimport Viewer from '../viewer/viewer'\r\nimport { BufferParameters, BufferSide, default as Buffer } from '../buffer/buffer';\r\nimport { ColorData, ColormakerParameters, ColorMode } from '../color/colormaker';\r\nimport { GenericColor } from '../types'\r\n\r\nexport interface RepresentationParameters {\r\n  name: string\r\n  lazy: boolean,\r\n  clipNear: number,\r\n  clipRadius: number,\r\n  clipCenter: Vector3,\r\n  flatShaded: boolean,\r\n  opacity: number,\r\n  depthWrite: boolean,\r\n  side: BufferSide,\r\n  wireframe: boolean,\r\n  colorData: ColorData,\r\n  colorScheme: string,\r\n  colorScale: string | number[],\r\n  colorReverse: boolean,\r\n  colorValue: GenericColor,\r\n  colorDomain: number[],\r\n  colorMode: ColorMode,\r\n  colorSpace: 'sRGB' | 'linear',\r\n  roughness: number,\r\n  metalness: number,\r\n  diffuse: GenericColor,\r\n  diffuseInterior: boolean,\r\n  useInteriorColor: boolean,\r\n  interiorColor: GenericColor,\r\n  interiorDarkening: number,\r\n  disablePicking: boolean,\r\n  matrix: Matrix4\r\n  quality: string,\r\n  visible: boolean,\r\n  color: GenericColor,\r\n  sphereDetail: number,\r\n  radialSegments: number,\r\n  openEnded: boolean\r\n  disableImpostor: boolean\r\n  [key: string]: any//boolean | number | undefined | Color | string | Vector3 | Matrix4 | number[]\r\n}\r\n/**\r\n * Representation parameter object.\r\n * @typedef {Object} RepresentationParameters - representation parameters\r\n * @property {Boolean} [lazy] - only build & update the representation when visible\r\n *                            otherwise defer changes until set visible again\r\n * @property {Integer} [clipNear] - position of camera near/front clipping plane\r\n *                                in percent of scene bounding box\r\n * @property {Integer} [clipRadius] - radius of clipping sphere\r\n * @property {Vector3} [clipCenter] - position of for spherical clipping\r\n * @property {Boolean} [flatShaded] - render flat shaded\r\n * @property {Float} [opacity] - translucency: 1 is fully opaque, 0 is fully transparent\r\n * @property {Boolean} [depthWrite] - depth write\r\n * @property {String} [side] - which triangle sides to render, \"front\" front-side,\r\n *                            \"back\" back-side, \"double\" front- and back-side\r\n * @property {Boolean} [wireframe] - render as wireframe\r\n * @property {ColorData} [colorData] - atom or bond indexed data for coloring\r\n * @property {String} [colorScheme] - color scheme\r\n * @property {String} [colorScale] - color scale, either a string for a\r\n *                                 predefined scale or an array of\r\n *                                 colors to be used as the scale\r\n * @property {Boolean} [colorReverse] - reverse color scale\r\n * @property {Color} [colorValue] - color value\r\n * @property {Integer[]} [colorDomain] - scale value range\r\n * @property {Integer} colorDomain.0 - min value\r\n * @property {Integer} colorDomain.1 - max value\r\n * @property {String} [colorMode] - color mode, one of rgb, hsv, hsl, hsi, lab, hcl\r\n * @property {Float} [roughness] - how rough the material is, between 0 and 1\r\n * @property {Float} [metalness] - how metallic the material is, between 0 and 1\r\n * @property {Color} [diffuse] - diffuse color for lighting\r\n * @property {Boolean} [diffuseInterior] - diffuse interior, i.e. ignore normal\r\n * @property {Boolean} [useInteriorColor] - use interior color\r\n * @property {Color} [interiorColor] - interior color\r\n * @property {Float} [interiorDarkening] - interior darkening: 0 no darking, 1 fully darkened\r\n * @property {Boolean} [disablePicking] - disable picking\r\n */\r\n\r\n/**\r\n * Representation object\r\n * @interface\r\n * @param {Object} object - the object to be represented\r\n * @param {Viewer} viewer - a viewer object\r\n * @param {RepresentationParameters} [params] - representation parameters\r\n */\r\nclass Representation {\r\n  parameters: any\r\n  type: string\r\n  viewer: Viewer\r\n  tasks: Counter\r\n  private queue: Queue<any>\r\n  bufferList: Buffer[]\r\n\r\n  lazy: boolean\r\n  lazyProps: { build: boolean, bufferParams: BufferParameters | {}, what: {}}\r\n  protected name: string\r\n  protected clipNear: number\r\n  protected clipRadius: number\r\n  protected clipCenter: Vector3\r\n  protected flatShaded: boolean\r\n  protected opacity: number\r\n  protected depthWrite: boolean\r\n  protected side: BufferSide\r\n  protected wireframe: boolean\r\n  protected colorData: ColorData\r\n  protected colorScheme: string\r\n  protected colorScale: string | string[]\r\n  protected colorReverse: boolean\r\n  protected colorValue: number\r\n  protected colorDomain: number[]\r\n  protected colorMode: ColorMode\r\n  protected roughness: number\r\n  protected metalness: number\r\n  protected diffuse: GenericColor\r\n  protected diffuseInterior?: boolean\r\n  protected useInteriorColor?: boolean\r\n  protected interiorColor: GenericColor\r\n  protected interiorDarkening: number\r\n  protected disablePicking: boolean\r\n  protected sphereDetail: number\r\n  protected radialSegments: number\r\n  protected openEnded: boolean\r\n  protected disableImpostor: boolean\r\n  protected disposed: boolean\r\n\r\n  protected matrix: Matrix4\r\n\r\n  private quality: string\r\n  visible: boolean\r\n\r\n  protected manualAttach: ()=> any\r\n\r\n  protected toBePrepared: boolean\r\n\r\n  [key: string]: any\r\n\r\n  constructor (object: any, viewer: Viewer, params: Partial<RepresentationParameters>) {\r\n    // eslint-disable-next-line no-unused-vars\r\n    // const p = params || {}\r\n\r\n    this.type = ''\r\n\r\n    this.parameters = {\r\n\r\n      lazy: {\r\n        type: 'boolean'\r\n      },\r\n\r\n      clipNear: {\r\n        type: 'range', step: 1, max: 100, min: 0, buffer: true\r\n      },\r\n      clipRadius: {\r\n        type: 'number', precision: 1, max: 1000, min: 0, buffer: true\r\n      },\r\n      clipCenter: {\r\n        type: 'vector3', precision: 1, buffer: true\r\n      },\r\n      flatShaded: {\r\n        type: 'boolean', buffer: true\r\n      },\r\n      opacity: {\r\n        type: 'range', step: 0.01, max: 1, min: 0, buffer: true\r\n      },\r\n      depthWrite: {\r\n        type: 'boolean', buffer: true\r\n      },\r\n      side: {\r\n        type: 'select',\r\n        buffer: true,\r\n        options: { front: 'front', back: 'back', double: 'double' }\r\n      },\r\n      wireframe: {\r\n        type: 'boolean', buffer: true\r\n      },\r\n\r\n      colorData: {\r\n        type: 'hidden',\r\n        update: 'color',\r\n      },\r\n\r\n      colorScheme: {\r\n        type: 'select',\r\n        update: 'color',\r\n        options: {}\r\n      },\r\n      colorScale: {\r\n        type: 'select',\r\n        update: 'color',\r\n        options: ColormakerRegistry.getScales()\r\n      },\r\n      colorReverse: {\r\n        type: 'boolean', update: 'color'\r\n      },\r\n      colorValue: {\r\n        type: 'color', update: 'color'\r\n      },\r\n      colorDomain: {\r\n        type: 'hidden', update: 'color'\r\n      },\r\n      colorMode: {\r\n        type: 'select',\r\n        update: 'color',\r\n        options: ColormakerRegistry.getModes()\r\n      },\r\n\r\n      roughness: {\r\n        type: 'range', step: 0.01, max: 1, min: 0, buffer: true\r\n      },\r\n      metalness: {\r\n        type: 'range', step: 0.01, max: 1, min: 0, buffer: true\r\n      },\r\n      diffuse: {\r\n        type: 'color', buffer: true\r\n      },\r\n\r\n      diffuseInterior: {\r\n        type: 'boolean', buffer: true\r\n      },\r\n      useInteriorColor: {\r\n        type: 'boolean', buffer: true\r\n      },\r\n      interiorColor: {\r\n        type: 'color', buffer: true\r\n      },\r\n      interiorDarkening: {\r\n        type: 'range', step: 0.01, max: 1, min: 0, buffer: true\r\n      },\r\n\r\n      matrix: {\r\n        type: 'hidden', buffer: true\r\n      },\r\n\r\n      disablePicking: {\r\n        type: 'boolean', rebuild: true\r\n      }\r\n\r\n    }\r\n\r\n    /**\r\n     * @type {Viewer}\r\n     */\r\n    this.viewer = viewer\r\n\r\n    /**\r\n     * Counter that keeps track of tasks related to the creation of\r\n     * the representation, including surface calculations.\r\n     * @type {Counter}\r\n     */\r\n    this.tasks = new Counter()\r\n\r\n    /**\r\n     * @type {Queue}\r\n     * @private\r\n     */\r\n    this.queue = new Queue(this.make.bind(this))\r\n\r\n    /**\r\n     * @type {Array}\r\n     * @private\r\n     */\r\n    this.bufferList = []\r\n\r\n    if (this.parameters.colorScheme) {\r\n      this.parameters.colorScheme.options = ColormakerRegistry.getSchemes()\r\n    }\r\n\r\n    this.toBePrepared = false\r\n  }\r\n\r\n  init (params: Partial<RepresentationParameters>) {\r\n    const p = params || {}\r\n\r\n    this.clipNear = defaults(p.clipNear, 0)\r\n    this.clipRadius = defaults(p.clipRadius, 0)\r\n    this.clipCenter = defaults(p.clipCenter, new Vector3())\r\n    this.flatShaded = defaults(p.flatShaded, false)\r\n    this.side = defaults(p.side, 'double')\r\n    this.opacity = defaults(p.opacity, 1.0)\r\n    this.depthWrite = defaults(p.depthWrite, true)\r\n    this.wireframe = defaults(p.wireframe, false)\r\n\r\n    this.setColor(p.color, p)\r\n\r\n    this.colorData = defaults(p.colorData, undefined)\r\n    this.colorScheme = defaults(p.colorScheme, 'uniform')\r\n    this.colorScale = defaults(p.colorScale, '')\r\n    this.colorReverse = defaults(p.colorReverse, false)\r\n    this.colorValue = defaults(p.colorValue, 0x909090)\r\n    this.colorDomain = defaults(p.colorDomain, undefined)\r\n    this.colorMode = defaults(p.colorMode, 'hcl')\r\n\r\n    this.visible = defaults(p.visible, true)\r\n    this.quality = defaults(p.quality, undefined)\r\n\r\n    this.roughness = defaults(p.roughness, 0.4)\r\n    this.metalness = defaults(p.metalness, 0.0)\r\n    this.diffuse = defaults(p.diffuse, 0xffffff)\r\n\r\n    this.diffuseInterior = defaults(p.diffuseInterior, false)\r\n    this.useInteriorColor = defaults(p.useInteriorColor, false)\r\n    this.interiorColor = defaults(p.interiorColor, 0x222222)\r\n    this.interiorDarkening = defaults(p.interiorDarkening, 0)\r\n\r\n    this.lazy = defaults(p.lazy, false)\r\n    this.lazyProps = {\r\n      build: false,\r\n      bufferParams: {},\r\n      what: {}\r\n    }\r\n\r\n    this.matrix = defaults(p.matrix, new Matrix4())\r\n\r\n    this.disablePicking = defaults(p.disablePicking, false)\r\n\r\n    // handle common parameters when applicable\r\n\r\n    const tp = this.parameters\r\n\r\n    if (tp.sphereDetail === true) {\r\n      tp.sphereDetail = {\r\n        type: 'integer', max: 3, min: 0, rebuild: 'impostor'\r\n      }\r\n    }\r\n    if (tp.radialSegments === true) {\r\n      tp.radialSegments = {\r\n        type: 'integer', max: 25, min: 5, rebuild: 'impostor'\r\n      }\r\n    }\r\n    if (tp.openEnded === true) {\r\n      tp.openEnded = {\r\n        type: 'boolean', rebuild: 'impostor', buffer: true\r\n      }\r\n    }\r\n    if (tp.disableImpostor === true) {\r\n      tp.disableImpostor = {\r\n        type: 'boolean', rebuild: true\r\n      }\r\n    }\r\n\r\n    if (p.quality === 'low') {\r\n      if (tp.sphereDetail) this.sphereDetail = 0\r\n      if (tp.radialSegments) this.radialSegments = 5\r\n    } else if (p.quality === 'medium') {\r\n      if (tp.sphereDetail) this.sphereDetail = 1\r\n      if (tp.radialSegments) this.radialSegments = 10\r\n    } else if (p.quality === 'high') {\r\n      if (tp.sphereDetail) this.sphereDetail = 2\r\n      if (tp.radialSegments) this.radialSegments = 20\r\n    } else {\r\n      if (tp.sphereDetail) {\r\n        this.sphereDetail = defaults(p.sphereDetail, 1)\r\n      }\r\n      if (tp.radialSegments) {\r\n        this.radialSegments = defaults(p.radialSegments, 10)\r\n      }\r\n    }\r\n\r\n    if (tp.openEnded) {\r\n      this.openEnded = defaults(p.openEnded, true)\r\n    }\r\n\r\n    if (tp.disableImpostor) {\r\n      this.disableImpostor = defaults(p.disableImpostor, false)\r\n    }\r\n\r\n  }\r\n\r\n  getColorParams (p?: {[k: string]: any}): { scheme: string, [k: string]: any } & ColormakerParameters {\r\n    return Object.assign({\r\n\r\n      data: this.colorData,\r\n      scheme: this.colorScheme,\r\n      scale: this.colorScale,\r\n      reverse: this.colorReverse,\r\n      value: this.colorValue,\r\n      domain: this.colorDomain,\r\n      mode: this.colorMode,\r\n      colorSpace: this.colorSpace,\r\n\r\n    }, p)\r\n  }\r\n\r\n  getBufferParams (p: {[k: string]: any} = {}) {\r\n    return Object.assign({\r\n\r\n      clipNear: this.clipNear,\r\n      clipRadius: this.clipRadius,\r\n      clipCenter: this.clipCenter,\r\n      flatShaded: this.flatShaded,\r\n      opacity: this.opacity,\r\n      depthWrite: this.depthWrite,\r\n      side: this.side,\r\n      wireframe: this.wireframe,\r\n\r\n      roughness: this.roughness,\r\n      metalness: this.metalness,\r\n      diffuse: this.diffuse,\r\n\r\n      diffuseInterior: this.diffuseInterior,\r\n      useInteriorColor: this.useInteriorColor,\r\n      interiorColor: this.interiorColor,\r\n      interiorDarkening: this.interiorDarkening,\r\n\r\n      matrix: this.matrix,\r\n\r\n      disablePicking: this.disablePicking\r\n\r\n    }, p)\r\n  }\r\n\r\n  setColor (value: number | string | Color | undefined , p?: Partial<RepresentationParameters>) {\r\n    const types = Object.keys(ColormakerRegistry.getSchemes())\r\n\r\n    if (typeof value === 'string' && types.includes(value.toLowerCase())) {\r\n      if (p) {\r\n        p.colorScheme = value\r\n      } else {\r\n        this.setParameters({ colorScheme: value })\r\n      }\r\n    } else if (value !== undefined) {\r\n      let val = new Color(value as string).getHex() //TODO\r\n      if (p) {\r\n        p.colorScheme = 'uniform'\r\n        p.colorValue = val\r\n      } else {\r\n        this.setParameters({\r\n          colorScheme: 'uniform', colorValue: val\r\n        })\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // TODO\r\n  prepare (cb: ()=> void) {\r\n\r\n  }\r\n\r\n  create () {\r\n    // this.bufferList.length = 0;\r\n  }\r\n\r\n  update (what?: any) {\r\n    this.build()\r\n  }\r\n\r\n  build (updateWhat?: {[k: string]: boolean}) {\r\n    if (this.lazy && (!this.visible || !this.opacity)) {\r\n      this.lazyProps.build = true\r\n      return\r\n    }\r\n\r\n    if (!this.toBePrepared) {\r\n      this.tasks.increment()\r\n      this.make()\r\n      return\r\n    }\r\n\r\n    // don't let tasks accumulate\r\n    if (this.queue.length() > 0) {\r\n      this.tasks.change(1 - this.queue.length())\r\n      this.queue.kill()\r\n    } else {\r\n      this.tasks.increment()\r\n    }\r\n\r\n    this.queue.push(updateWhat || false)\r\n  }\r\n\r\n  make (updateWhat?: boolean, callback?: () => void) {\r\n    if (Debug) Log.time('Representation.make ' + this.type)\r\n\r\n    const _make = () => {\r\n      if (updateWhat) {\r\n        this.update(updateWhat)\r\n        this.viewer.requestRender()\r\n        this.tasks.decrement()\r\n        if (callback) callback()\r\n      } else {\r\n        this.clear()\r\n        this.create()\r\n        if (!this.manualAttach && !this.disposed) {\r\n          if (Debug) Log.time('Representation.attach ' + this.type)\r\n          this.attach(() => {\r\n            if (Debug) Log.timeEnd('Representation.attach ' + this.type)\r\n            this.tasks.decrement()\r\n            if (callback) callback()\r\n          })\r\n        }\r\n      }\r\n\r\n      if (Debug) Log.timeEnd('Representation.make ' + this.type)\r\n    }\r\n\r\n    if (this.toBePrepared) {\r\n      this.prepare(_make)\r\n    } else {\r\n      _make()\r\n    }\r\n  }\r\n\r\n  attach (callback: () => void) {\r\n    this.setVisibility(this.visible)\r\n\r\n    callback()\r\n  }\r\n\r\n  /**\r\n   * Set the visibility of the representation\r\n   * @param {Boolean} value - visibility flag\r\n   * @param {Boolean} [noRenderRequest] - whether or not to request a re-render from the viewer\r\n   * @return {Representation} this object\r\n   */\r\n  setVisibility (value: boolean, noRenderRequest?: boolean): Representation {\r\n    this.visible = value\r\n\r\n    if (this.visible && this.opacity) {\r\n      const lazyProps = this.lazyProps\r\n      const bufferParams = lazyProps.bufferParams\r\n      const what = lazyProps.what\r\n\r\n      if (lazyProps.build) {\r\n        lazyProps.build = false\r\n        this.build()\r\n        return this\r\n      } else if (Object.keys(bufferParams).length || Object.keys(what).length) {\r\n        lazyProps.bufferParams = {}\r\n        lazyProps.what = {}\r\n        this.updateParameters(bufferParams, what)\r\n      }\r\n    }\r\n\r\n    this.bufferList.forEach(function (buffer) {\r\n      buffer.setVisibility(value)\r\n    })\r\n\r\n    if (!noRenderRequest) this.viewer.requestRender()\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Set the visibility of the representation\r\n   * @param {RepresentationParameters} params - parameters object\r\n   * @param {Object} [what] - buffer data attributes to be updated,\r\n   *                        note that this needs to be implemented in the\r\n   *                        derived classes. Generally it allows more\r\n   *                        fine-grained control over updating than\r\n   *                        forcing a rebuild.\r\n   * @param {Boolean} what.position - update position data\r\n   * @param {Boolean} what.color - update color data\r\n   * @param {Boolean} [rebuild] - whether or not to rebuild the representation\r\n   * @return {Representation} this object\r\n   */\r\n  setParameters (params: Partial<RepresentationParameters>, what:{[propName: string]: any} = {}, rebuild = false) {\r\n    const p = params || {}\r\n    const tp = this.parameters\r\n    const bufferParams: BufferParameters = <any>{}\r\n\r\n    if (!this.opacity && p.opacity !== undefined) {\r\n      if (this.lazyProps.build) {\r\n        this.lazyProps.build = false\r\n        rebuild = true\r\n      } else {\r\n        Object.assign(bufferParams, this.lazyProps.bufferParams)\r\n        Object.assign(what, this.lazyProps.what)\r\n        this.lazyProps.bufferParams = {}\r\n        this.lazyProps.what = {}\r\n      }\r\n    }\r\n\r\n    this.setColor(p.color, p)\r\n\r\n    for (let name in p) {\r\n      if (p[ name ] === undefined) continue\r\n      if (tp[ name ] == undefined ) continue // Skip nulls as well as undefined\r\n\r\n      if (tp[ name ].int) p[ name ] = parseInt(p[ name ] as string)\r\n      if (tp[ name ].float) p[ name ] = parseFloat(p[ name ] as string)\r\n\r\n      // no value change\r\n      if (p[ name ] === this[ name ] && (\r\n        !p[ name ].equals || p[ name ].equals(this[ name ])\r\n      )) continue\r\n\r\n      if (this[ name ] && this[ name ].copy && p[ name ].copy) {\r\n        this[ name ].copy(p[ name ])\r\n      } else if (this[ name ] && this[ name ].set) {\r\n        this[ name ].set(p[ name ])\r\n      } else {\r\n        this[ name ] = p[ name ]\r\n      }\r\n\r\n      // buffer param\r\n      if (tp[ name ].buffer) {\r\n        if (tp[ name ].buffer === true) {\r\n          (bufferParams[ name as keyof BufferParameters ] as any) = p[ name ]\r\n        } else {\r\n          let key: (keyof BufferParameters) = tp[ name ].buffer;\r\n          (bufferParams[ key ] as any) = p[ name ]\r\n        }\r\n      }\r\n\r\n      // mark for update\r\n      if (tp[ name ].update) {\r\n        what[ tp[ name ].update ] = true\r\n      }\r\n\r\n      // mark for rebuild\r\n      if (tp[ name ].rebuild &&\r\n          !(tp[ name ].rebuild === 'impostor' &&\r\n            ExtensionFragDepth && !this.disableImpostor)\r\n      ) {\r\n        rebuild = true\r\n      }\r\n    }\r\n\r\n    //\r\n\r\n    if (rebuild) {\r\n      this.build()\r\n    } else {\r\n      this.updateParameters(bufferParams, what)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  updateParameters (bufferParams: BufferParameters | {} = {}, what?: any) {\r\n    if (this.lazy && (!this.visible || !this.opacity) && bufferParams.hasOwnProperty('opacity') === false) {\r\n      Object.assign(this.lazyProps.bufferParams, bufferParams)\r\n      Object.assign(this.lazyProps.what, what)\r\n      return\r\n    }\r\n\r\n    this.bufferList.forEach(function (buffer) {\r\n      buffer.setParameters(bufferParams)\r\n    })\r\n\r\n    if (Object.keys(what).length) {\r\n      this.update(what) // update buffer attribute\r\n    }\r\n\r\n    this.viewer.requestRender()\r\n  }\r\n\r\n  getParameters () {\r\n    const params: Partial<RepresentationParameters> = {\r\n      lazy: this.lazy,\r\n      visible: this.visible,\r\n      quality: this.quality\r\n    }\r\n\r\n    Object.keys(this.parameters).forEach(name => {\r\n      if (this.parameters[ name ] !== null) {\r\n        params[ name ] = this[ name ]\r\n      }\r\n    })\r\n\r\n    return params\r\n  }\r\n\r\n  clear () {\r\n    this.bufferList.forEach(buffer => {\r\n      this.viewer.remove(buffer)\r\n      buffer.dispose()\r\n    })\r\n    this.bufferList.length = 0\r\n\r\n    this.viewer.requestRender()\r\n  }\r\n\r\n  dispose () {\r\n    this.disposed = true\r\n    this.queue.kill()\r\n    this.tasks.dispose()\r\n    this.clear()\r\n  }\r\n}\r\n\r\nexport default Representation\r\n","/**\r\n * @file Worker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Log, Debug, WorkerRegistry } from '../globals'\r\n\r\nexport default class _Worker {\r\n\r\n  pending = 0\r\n  postCount = 0\r\n  onmessageDict: { [k: number]: Function|undefined } = {}\r\n  onerrorDict: { [k: number]: Function|undefined } = {}\r\n\r\n  name: string\r\n  blobUrl: string\r\n  worker: Worker\r\n\r\n  constructor (name: string) {\r\n\r\n    this.name = name\r\n    this.blobUrl = window.URL.createObjectURL(WorkerRegistry.get(name))\r\n    this.worker = new Worker(this.blobUrl)\r\n\r\n    WorkerRegistry.activeWorkerCount += 1\r\n\r\n    this.worker.onmessage = (event: any) => {\r\n      this.pending -= 1\r\n      const postId = event.data.__postId\r\n\r\n      if (Debug) Log.timeEnd('Worker.postMessage ' + name + ' #' + postId)\r\n\r\n      const onmessage = this.onmessageDict[ postId ]\r\n      if (onmessage) {\r\n        onmessage.call(this.worker, event)\r\n      } else {\r\n        // Log.debug('No onmessage', postId, name)\r\n      }\r\n\r\n      delete this.onmessageDict[ postId ]\r\n      delete this.onerrorDict[ postId ]\r\n    }\r\n\r\n    this.worker.onerror = (event: any) => {\r\n      this.pending -= 1\r\n      if (event.data) {\r\n        const postId = event.data.__postId\r\n\r\n        const onerror = this.onerrorDict[ postId ]\r\n        if (onerror) {\r\n          onerror.call(this.worker, event)\r\n        } else {\r\n          Log.error('Worker.onerror', postId, name, event)\r\n        }\r\n\r\n        delete this.onmessageDict[ postId ]\r\n        delete this.onerrorDict[ postId ]\r\n      } else {\r\n        Log.error('Worker.onerror', name, event)\r\n      }\r\n    }\r\n  }\r\n\r\n  post (aMessage: any = {}, transferList?: any, onmessage?: Function, onerror?: Function) {\r\n    this.onmessageDict[ this.postCount ] = onmessage\r\n    this.onerrorDict[ this.postCount ] = onerror\r\n\r\n    aMessage.__name = this.name\r\n    aMessage.__postId = this.postCount\r\n    aMessage.__debug = Debug\r\n\r\n    if (Debug) Log.time(`Worker.postMessage ${this.name} #${this.postCount}`)\r\n\r\n    try {\r\n      this.worker.postMessage(aMessage, transferList)\r\n    } catch (error) {\r\n      Log.error('worker.post:', error)\r\n      this.worker.postMessage(aMessage)\r\n    }\r\n\r\n    this.pending += 1\r\n    this.postCount += 1\r\n\r\n    return this\r\n  }\r\n\r\n  terminate () {\r\n    if (this.worker) {\r\n      this.worker.terminate()\r\n      window.URL.revokeObjectURL(this.blobUrl)\r\n      WorkerRegistry.activeWorkerCount -= 1\r\n    } else {\r\n      Log.log('no worker to terminate')\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @file Worker Pool\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Worker from './worker'\r\n\r\nclass WorkerPool {\r\n  maxCount: number\r\n  pool: Worker[] = []\r\n  count = 0\r\n  name: string\r\n\r\n  constructor (name: string, maxCount = 2) {\r\n    this.maxCount = Math.min(8, maxCount)\r\n    this.name = name\r\n  }\r\n\r\n  post (aMessage: any = {}, transferList?: any, onmessage?: Function, onerror?: Function) {\r\n    const worker = this.getNextWorker()\r\n    if (worker) {\r\n      worker.post(aMessage, transferList, onmessage, onerror)\r\n    } else {\r\n      console.error('unable to get worker from pool')\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  terminate () {\r\n    this.pool.forEach(function (worker) {\r\n      worker.terminate()\r\n    })\r\n  }\r\n\r\n  getNextWorker () {\r\n    let nextWorker\r\n    let minPending = Infinity\r\n\r\n    for (let i = 0; i < this.maxCount; ++i) {\r\n      if (i >= this.count) {\r\n        nextWorker = new Worker(this.name)\r\n        this.pool.push(nextWorker)\r\n        this.count += 1\r\n        break\r\n      }\r\n\r\n      const worker = this.pool[ i ]\r\n\r\n      if (worker.pending === 0) {\r\n        nextWorker = worker\r\n        break\r\n      } else if (worker.pending < minPending) {\r\n        minPending = worker.pending\r\n        nextWorker = worker\r\n      }\r\n    }\r\n\r\n    return nextWorker\r\n  }\r\n}\r\n\r\nWorkerPool.prototype.constructor = WorkerPool\r\n\r\nexport default WorkerPool\r\n","/**\r\n * @file Vector Utils\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3 } from 'three'\r\n\r\nimport { NumberArray } from '../types'\r\nimport { EPS } from './math-constants'\r\n\r\n/**\r\n * Calculate the two intersection points\r\n * Converted to JavaScript from\r\n * {@link http://paulbourke.net/geometry/pointlineplane/lineline.c}\r\n */\r\nexport function lineLineIntersect (p1: Vector3, p2: Vector3, p3: Vector3, p4: Vector3) {\r\n  const p13 = new Vector3()\r\n  const p43 = new Vector3()\r\n  const p21 = new Vector3()\r\n  let d1343, d4321, d1321, d4343, d2121\r\n  let denom, numer\r\n\r\n  p13.x = p1.x - p3.x\r\n  p13.y = p1.y - p3.y\r\n  p13.z = p1.z - p3.z\r\n  p43.x = p4.x - p3.x\r\n  p43.y = p4.y - p3.y\r\n  p43.z = p4.z - p3.z\r\n  if (Math.abs(p43.x) < EPS && Math.abs(p43.y) < EPS && Math.abs(p43.z) < EPS) { return null }\r\n\r\n  p21.x = p2.x - p1.x\r\n  p21.y = p2.y - p1.y\r\n  p21.z = p2.z - p1.z\r\n  if (Math.abs(p21.x) < EPS && Math.abs(p21.y) < EPS && Math.abs(p21.z) < EPS) { return null }\r\n\r\n  d1343 = p13.x * p43.x + p13.y * p43.y + p13.z * p43.z\r\n  d4321 = p43.x * p21.x + p43.y * p21.y + p43.z * p21.z\r\n  d1321 = p13.x * p21.x + p13.y * p21.y + p13.z * p21.z\r\n  d4343 = p43.x * p43.x + p43.y * p43.y + p43.z * p43.z\r\n  d2121 = p21.x * p21.x + p21.y * p21.y + p21.z * p21.z\r\n\r\n  denom = d2121 * d4343 - d4321 * d4321\r\n  if (Math.abs(denom) < EPS) { return null }\r\n  numer = d1343 * d4321 - d1321 * d4343\r\n\r\n  const mua = numer / denom\r\n  const mub = (d1343 + d4321 * mua) / d4343\r\n\r\n  const pa = new Vector3(\r\n    p1.x + mua * p21.x,\r\n    p1.y + mua * p21.y,\r\n    p1.z + mua * p21.z\r\n  )\r\n  const pb = new Vector3(\r\n    p3.x + mub * p43.x,\r\n    p3.y + mub * p43.y,\r\n    p3.z + mub * p43.z\r\n  )\r\n\r\n  return [ pa, pb ]\r\n}\r\n\r\nexport function calculateMeanVector3 (array: NumberArray) {\r\n  const n = array.length\r\n  const m = n / 3\r\n\r\n  let x = 0\r\n  let y = 0\r\n  let z = 0\r\n\r\n  for (let i = 0; i < n; i += 3) {\r\n    x += array[ i + 0 ]\r\n    y += array[ i + 1 ]\r\n    z += array[ i + 2 ]\r\n  }\r\n\r\n  return new Vector3(x / m, y / m, z / m)\r\n}\r\n\r\nexport function isPointOnSegment (p: Vector3, l1: Vector3, l2: Vector3) {\r\n  const len = l1.distanceTo(l2)\r\n\r\n  return p.distanceTo(l1) <= len && p.distanceTo(l2) <= len\r\n}\r\n\r\nexport function projectPointOnVector (point: Vector3, vector: Vector3, origin?: Vector3) {\r\n  if (origin) {\r\n    point.sub(origin).projectOnVector(vector).add(origin)\r\n  } else {\r\n    point.projectOnVector(vector)\r\n  }\r\n\r\n  return point\r\n}\r\n\r\nexport function computeBoundingBox (array: NumberArray) {\r\n  let minX = +Infinity\r\n  let minY = +Infinity\r\n  let minZ = +Infinity\r\n  let maxX = -Infinity\r\n  let maxY = -Infinity\r\n  let maxZ = -Infinity\r\n  for (let i = 0, l = array.length; i < l; i += 3) {\r\n    const x = array[ i ]\r\n    const y = array[ i + 1 ]\r\n    const z = array[ i + 2 ]\r\n    if (x < minX) minX = x\r\n    if (y < minY) minY = y\r\n    if (z < minZ) minZ = z\r\n    if (x > maxX) maxX = x\r\n    if (y > maxY) maxY = y\r\n    if (z > maxZ) maxZ = z\r\n  }\r\n  return [\r\n    v3new([ minX, minY, minZ ]),\r\n    v3new([ maxX, maxY, maxZ ])\r\n  ]\r\n}\r\n(computeBoundingBox as any).__deps = [ v3new ]\r\n\r\nexport function applyMatrix4toVector3array (m: Float32Array, a: Float32Array) {\r\n  for (let i = 0, il = a.length; i < il; i += 3) {\r\n    const x = a[ i ]\r\n    const y = a[ i + 1 ]\r\n    const z = a[ i + 2 ]\r\n    a[ i ] = m[ 0 ] * x + m[ 4 ] * y + m[ 8 ] * z + m[ 12 ]\r\n    a[ i + 1 ] = m[ 1 ] * x + m[ 5 ] * y + m[ 9 ] * z + m[ 13 ]\r\n    a[ i + 2 ] = m[ 2 ] * x + m[ 6 ] * y + m[ 10 ] * z + m[ 14 ]\r\n  }\r\n}\r\n\r\nexport function applyMatrix3toVector3array (m: Float32Array, a: Float32Array) {\r\n  for (let i = 0, il = a.length; i < il; i += 3) {\r\n    const x = a[ i ]\r\n    const y = a[ i + 1 ]\r\n    const z = a[ i + 2 ]\r\n    a[ i ] = m[ 0 ] * x + m[ 3 ] * y + m[ 6 ] * z\r\n    a[ i + 1 ] = m[ 1 ] * x + m[ 4 ] * y + m[ 7 ] * z\r\n    a[ i + 2 ] = m[ 2 ] * x + m[ 5 ] * y + m[ 8 ] * z\r\n  }\r\n}\r\n\r\nexport function normalizeVector3array (a: Float32Array) {\r\n  for (let i = 0, il = a.length; i < il; i += 3) {\r\n    const x = a[ i ]\r\n    const y = a[ i + 1 ]\r\n    const z = a[ i + 2 ]\r\n    const len2 = x * x + y * y + z * z\r\n    if (len2 > 0) {             // avoid divide by zero\r\n      const s = 1 / Math.sqrt(len2)\r\n      a[ i ] = x * s\r\n      a[ i + 1 ] = y * s\r\n      a[ i + 2 ] = z * s\r\n    }\r\n    // else leave as all zeros\r\n  }\r\n}\r\n\r\nexport function v3new (array?: NumberArray) {\r\n  return new Float32Array(array as any || 3)  // TODO\r\n}\r\n\r\nexport function v3cross (out: Float32Array, a: Float32Array, b: Float32Array) {\r\n  const ax = a[0]\r\n  const ay = a[1]\r\n  const az = a[2]\r\n  const bx = b[0]\r\n  const by = b[1]\r\n  const bz = b[2]\r\n  out[0] = ay * bz - az * by\r\n  out[1] = az * bx - ax * bz\r\n  out[2] = ax * by - ay * bx\r\n}\r\n\r\nexport function v3dot (a: Float32Array, b: Float32Array) {\r\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2]\r\n}\r\n\r\nexport function v3sub (out: Float32Array, a: Float32Array, b: Float32Array) {\r\n  out[0] = a[0] - b[0]\r\n  out[1] = a[1] - b[1]\r\n  out[2] = a[2] - b[2]\r\n}\r\n\r\nexport function v3add (out: Float32Array, a: Float32Array, b: Float32Array) {\r\n  out[0] = a[0] + b[0]\r\n  out[1] = a[1] + b[1]\r\n  out[2] = a[2] + b[2]\r\n}\r\n\r\nexport function v3fromArray (out: Float32Array, array: Float32Array, offset = 0) {\r\n  out[0] = array[offset]\r\n  out[1] = array[offset + 1]\r\n  out[2] = array[offset + 2]\r\n}\r\n\r\nexport function v3toArray (input: Float32Array, array: Float32Array, offset = 0) {\r\n  array[offset] = input[0]\r\n  array[offset + 1] = input[1]\r\n  array[offset + 2] = input[2]\r\n}\r\n\r\nexport function v3forEach (array: Float32Array, fn: (i: Float32Array, j: Float32Array, k: Float32Array) => void, b: Float32Array) {\r\n  const a = v3new()\r\n  for (let i = 0, n = array.length; i < n; i += 3) {\r\n    v3fromArray(a, array, i)\r\n    fn(a, a, b)\r\n    v3toArray(a, array, i)\r\n  }\r\n}\r\n(v3forEach as any).__deps = [ v3new, v3fromArray, v3toArray ]\r\n\r\nexport function v3length2 (a: Float32Array) {\r\n  return a[0] * a[0] + a[1] * a[1] + a[2] * a[2]\r\n}\r\n\r\nexport function v3length (a: Float32Array) {\r\n  return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2])\r\n}\r\n\r\nexport function v3divide (out: Float32Array, a: Float32Array, b: Float32Array) {\r\n  out[0] = a[0] / b[0]\r\n  out[1] = a[1] / b[1]\r\n  out[2] = a[2] / b[2]\r\n}\r\n\r\nexport function v3multiply (out: Float32Array, a: Float32Array, b: Float32Array) {\r\n  out[0] = a[0] * b[0]\r\n  out[1] = a[1] * b[1]\r\n  out[2] = a[2] * b[2]\r\n}\r\n\r\nexport function v3divideScalar (out: Float32Array, a: Float32Array, s: number) {\r\n  v3multiplyScalar(out, a, 1 / s)\r\n}\r\n(v3divideScalar as any).__deps = [ v3multiplyScalar ]\r\n\r\nexport function v3multiplyScalar (out: Float32Array, a: Float32Array, s: number) {\r\n  out[0] = a[0] * s\r\n  out[1] = a[1] * s\r\n  out[2] = a[2] * s\r\n}\r\n\r\nexport function v3normalize (out: Float32Array, a: Float32Array) {\r\n  const length2 = v3length2(a)\r\n  if (length2 == 0) {\r\n    out[0] = a[0]\r\n    out[1] = a[1]\r\n    out[2] = a[2]\r\n  } else {\r\n    v3multiplyScalar(out, a, 1 / Math.sqrt(length2))\r\n  }\r\n}\r\n(v3normalize as any).__deps = [ v3multiplyScalar, v3length2 ]\r\n\r\nexport function v3subScalar (out: Float32Array, a: Float32Array, s: number) {\r\n  out[0] = a[0] - s\r\n  out[1] = a[1] - s\r\n  out[2] = a[2] - s\r\n}\r\n\r\nexport function v3addScalar (out: Float32Array, a: Float32Array, s: number) {\r\n  out[0] = a[0] + s\r\n  out[1] = a[1] + s\r\n  out[2] = a[2] + s\r\n}\r\n\r\nexport function v3floor (out: Float32Array, a: Float32Array) {\r\n  out[0] = Math.floor(a[0])\r\n  out[1] = Math.floor(a[1])\r\n  out[2] = Math.floor(a[2])\r\n}\r\n\r\nexport function v3ceil (out: Float32Array, a: Float32Array) {\r\n  out[0] = Math.ceil(a[0])\r\n  out[1] = Math.ceil(a[1])\r\n  out[2] = Math.ceil(a[2])\r\n}\r\n\r\nexport function v3round (out: Float32Array, a: Float32Array) {\r\n  out[0] = Math.round(a[0])\r\n  out[1] = Math.round(a[1])\r\n  out[2] = Math.round(a[2])\r\n}\r\n\r\nexport function v3negate (out: Float32Array, a: Float32Array) {\r\n  out[0] = -a[0]\r\n  out[1] = -a[1]\r\n  out[2] = -a[2]\r\n}\r\n\r\nexport function v3angle (a: Float32Array, b: Float32Array) {\r\n  const ax = a[0]\r\n  const ay = a[1]\r\n  const az = a[2]\r\n  const bx = b[0]\r\n  const by = b[1]\r\n  const bz = b[2]\r\n  const cx = ay * bz - az * by\r\n  const cy = az * bx - ax * bz\r\n  const cz = ax * by - ay * bx\r\n  const s = Math.sqrt(cx * cx + cy * cy + cz * cz)\r\n  const c = ax * bx + ay * by + az * bz\r\n  return Math.atan2(s, c)\r\n}\r\n","/**\r\n * @file Dash\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3 } from 'three'\r\n\r\nimport { CylinderBufferData } from '../buffer/cylinder-buffer'\r\nimport { WideLineBufferData } from '../buffer/wideline-buffer'\r\nimport {\r\n  calculateDirectionArray, calculateCenterArray,\r\n  replicateArrayEntries, replicateArray3Entries\r\n} from '../math/array-utils'\r\n\r\nexport function getFixedCountDashData<T extends CylinderBufferData|WideLineBufferData> (data: T, segmentCount: number = 9) {\r\n\r\n  const s = Math.floor(segmentCount / 2)\r\n  const n = data.position1.length / 3\r\n  const sn = s * n\r\n  const sn3 = sn * 3\r\n  const step = 1 / segmentCount\r\n\r\n  const direction = calculateDirectionArray(data.position1, data.position2)\r\n  const position1 = new Float32Array(sn3)\r\n  const position2 = new Float32Array(sn3)\r\n\r\n  const v = new Vector3()\r\n\r\n  for (let i = 0; i < n; ++i) {\r\n    const i3 = i * 3\r\n    v.set(direction[ i3 ], direction[ i3 + 1 ], direction[ i3 + 2 ])\r\n\r\n    const x = data.position1[ i3 ]\r\n    const y = data.position1[ i3 + 1 ]\r\n    const z = data.position1[ i3 + 2 ]\r\n\r\n    for (let j = 0; j < s; ++j) {\r\n      const j3 = s * i3 + j * 3\r\n\r\n      const f1 = step * (j * 2 + 1)\r\n      const f2 = step * (j * 2 + 2)\r\n\r\n      position1[ j3 ] = x + v.x * f1\r\n      position1[ j3 + 1 ] = y + v.y * f1\r\n      position1[ j3 + 2 ] = z + v.z * f1\r\n\r\n      position2[ j3 ] = x + v.x * f2\r\n      position2[ j3 + 1 ] = y + v.y * f2\r\n      position2[ j3 + 2 ] = z + v.z * f2\r\n    }\r\n  }\r\n\r\n  const position = calculateCenterArray(position1, position2) as Float32Array\r\n  const color = replicateArray3Entries(data.color!, s)  // TODO\r\n  const color2 = color\r\n\r\n  const d: any = { position, position1, position2, color, color2 }\r\n\r\n  if ((data as any).radius) {  // TODO\r\n    d.radius = replicateArrayEntries((data as any).radius, s)  // TODO\r\n  }\r\n\r\n  if (data.picking && data.picking.array) {\r\n    data.picking.array = replicateArrayEntries(data.picking.array, s)\r\n    d.picking = data.picking\r\n  }\r\n  if (data.primitiveId) {\r\n    d.primitiveId = replicateArrayEntries(data.primitiveId, s)\r\n  }\r\n\r\n  return d as T\r\n}\r\n\r\nexport function getFixedLengthDashData<T extends CylinderBufferData|WideLineBufferData> (data: T, segmentLength: number = 0.1) {\r\n\r\n  const direction = calculateDirectionArray(data.position1, data.position2)\r\n  const pos1: number[] = []\r\n  const pos2: number[] = []\r\n  const col: number[] = []\r\n  const rad: number[]|undefined = (data as any).radius ? [] : undefined\r\n  const pick: number[]|undefined = (data as any).picking ? [] : undefined\r\n  const id: number[]|undefined = (data as any).primitiveId ? [] : undefined\r\n\r\n  const v = new Vector3()\r\n  const n = data.position1.length / 3\r\n\r\n  let k = 0\r\n\r\n  for (let i = 0; i < n; ++i) {\r\n    const i3 = i * 3\r\n    v.set(direction[ i3 ], direction[ i3 + 1 ], direction[ i3 + 2 ])\r\n\r\n    const vl = v.length()\r\n    const segmentCount = vl / segmentLength\r\n    const s = Math.floor(segmentCount / 2)\r\n    const step = 1 / segmentCount\r\n\r\n    const x = data.position1[ i3 ]\r\n    const y = data.position1[ i3 + 1 ]\r\n    const z = data.position1[ i3 + 2 ]\r\n\r\n    for (let j = 0; j < s; ++j) {\r\n      const j3 = k * 3 + j * 3\r\n\r\n      const f1 = step * (j * 2 + 1)\r\n      const f2 = step * (j * 2 + 2)\r\n\r\n      pos1[ j3 ] = x + v.x * f1\r\n      pos1[ j3 + 1 ] = y + v.y * f1\r\n      pos1[ j3 + 2 ] = z + v.z * f1\r\n\r\n      pos2[ j3 ] = x + v.x * f2\r\n      pos2[ j3 + 1 ] = y + v.y * f2\r\n      pos2[ j3 + 2 ] = z + v.z * f2\r\n\r\n      if (data.color) {\r\n        col[ j3 ] = data.color[ i3 ]\r\n        col[ j3 + 1 ] = data.color[ i3 + 1 ]\r\n        col[ j3 + 2 ] = data.color[ i3 + 2 ]\r\n      }\r\n\r\n      if (rad) rad[ k + j ] = (data as any).radius[ i ]\r\n      if (pick) {\r\n        if ((data as any).picking.array) {\r\n          pick[ k + j ] = (data as any).picking.array[ i ]\r\n        } else {\r\n          pick[ k + j ] = i\r\n        }\r\n      }\r\n      if (id) id[ k + j ] = (data as any).primitiveId[ i ]\r\n    }\r\n\r\n    k += s\r\n  }\r\n\r\n  const position1 = new Float32Array(pos1)\r\n  const position2 = new Float32Array(pos2)\r\n  const position = calculateCenterArray(position1, position2) as Float32Array\r\n  const color = new Float32Array(col)\r\n  const color2 = color\r\n\r\n  const d: any = { position, position1, position2, color, color2 }\r\n\r\n  if (rad) d.radius = new Float32Array(rad)\r\n  if (pick && data.picking) {\r\n    data.picking.array = new Float32Array(pick)\r\n    d.picking = data.picking\r\n  }\r\n  if (id) d.primitiveId = new Float32Array(id)\r\n\r\n  return d as T\r\n}\r\n\r\nexport function getFixedLengthWrappedDashData<T extends CylinderBufferData|WideLineBufferData> (data: T, segmentLength: number = 0.1) {\r\n\r\n  const direction = calculateDirectionArray(data.position1, data.position2)\r\n  const pos1: number[] = []\r\n  const pos2: number[] = []\r\n  const col: number[] = []\r\n  const rad: number[]|undefined = (data as any).radius ? [] : undefined\r\n  const pick: number[]|undefined = (data as any).picking ? [] : undefined\r\n  const id: number[]|undefined = (data as any).primitiveId ? [] : undefined\r\n\r\n  const v = new Vector3()\r\n  const n = data.position1.length / 3\r\n\r\n  let remaining = segmentLength\r\n  let drawing = true\r\n\r\n  let k = 0\r\n  let k3 = 0\r\n  let kprev = 0\r\n\r\n  for (let i = 0; i < n; ++i) {\r\n    const i3 = i * 3\r\n    const x = data.position1[ i3 ]\r\n    const y = data.position1[ i3 + 1 ]\r\n    const z = data.position1[ i3 + 2 ]\r\n\r\n    v.set(direction[ i3 ], direction[ i3 + 1 ], direction[ i3 + 2 ])\r\n    const vl = v.length()\r\n\r\n    if (drawing) {\r\n      pos1[ k3 ] = x\r\n      pos1[ k3 + 1 ] = y\r\n      pos1[ k3 + 2 ] = z\r\n    }\r\n\r\n    let dist = remaining\r\n    const inv = 1 / vl\r\n    while (dist < vl) {\r\n      const a = drawing ? pos2 : pos1\r\n      a[ k3 ] = x + v.x * dist * inv\r\n      a[ k3 + 1 ] = y +         v.y * dist * inv\r\n      a[ k3 + 2 ] = z + v.z * dist * inv\r\n      if (drawing) {\r\n        k++\r\n        k3 = k * 3\r\n      }\r\n      drawing = !drawing\r\n      remaining = segmentLength\r\n      dist += segmentLength\r\n    }\r\n\r\n    if (drawing) {\r\n      pos2[ k3 ] = data.position2[ i3 ]\r\n      pos2[ k3 + 1 ] = data.position2[ i3 + 1 ]\r\n      pos2[ k3 + 2 ] = data.position2[ i3 + 2 ]\r\n      k++\r\n      k3 = k * 3\r\n    }\r\n\r\n    remaining = dist - vl\r\n\r\n    for (let j = kprev; j < k ; j++){\r\n      if (data.color) {\r\n        const j3 = j * 3\r\n        col[ j3 ] = data.color[ i3 ]\r\n        col[ j3 + 1 ] = data.color[ i3 + 1 ]\r\n        col[ j3 + 2 ] = data.color[ i3 + 2 ]\r\n      }\r\n\r\n      if (rad) rad[ j ] = (data as any).radius[ i ]\r\n      if (pick) {\r\n        if ((data as any).picking.array) {\r\n          pick[ j ] = (data as any).picking.array[ i ]\r\n        } else {\r\n          pick[ j ] = i\r\n        }\r\n      }\r\n      if (id) id[ j ] = (data as any).primitiveId[ i ]\r\n    }\r\n\r\n    kprev = k\r\n\r\n  }\r\n\r\n  if (!drawing && n > 0) {\r\n    const k3 = k * 3\r\n    pos2[ k3 ] = data.position2[ 3 * n - 3 ]\r\n    pos2[ k3 + 1 ] = data.position2[ 3 * n - 2 ]\r\n    pos2[ k3 + 1 ] = data.position2[ 3 * n - 1 ]\r\n  }\r\n\r\n  const position1 = new Float32Array(pos1)\r\n  const position2 = new Float32Array(pos2)\r\n  const position = calculateCenterArray(position1, position2) as Float32Array\r\n  const color = new Float32Array(col)\r\n  const color2 = color\r\n\r\n  const d: any = { position, position1, position2, color, color2 }\r\n\r\n  if (rad) d.radius = new Float32Array(rad)\r\n  if (pick && data.picking) {\r\n    data.picking.array = new Float32Array(pick)\r\n    d.picking = data.picking\r\n  }\r\n  if (id) d.primitiveId = new Float32Array(id)\r\n\r\n  return d as T\r\n}\r\n","/**\r\n * @file Primitive\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3, Color, Box3 } from 'three'\r\n\r\nimport { BufferRegistry, PickerRegistry } from '../globals'\r\nimport Shape from './shape'\r\nimport { getFixedLengthDashData } from './dash'\r\n\r\nfunction addElement (elm: any, array: any[]) {\r\n  if (elm.toArray !== undefined) {\r\n    elm = elm.toArray()\r\n  } else if (elm.x !== undefined) {\r\n    elm = [ elm.x, elm.y, elm.z ]\r\n  } else if (elm.r !== undefined) {\r\n    elm = [ elm.r, elm.g, elm.b ]\r\n  }\r\n  array.push.apply(array, elm)\r\n}\r\n\r\nconst tmpVec = new Vector3()\r\n\r\nexport type PrimitiveFields = { [k: string]: string }\r\n\r\n/**\r\n * Base class for geometry primitives\r\n * @interface\r\n */\r\nexport abstract class Primitive {\r\n  static type = ''\r\n  static fields: PrimitiveFields = {}\r\n\r\n  static get Picker () { return PickerRegistry.get(this.type) }\r\n  static get Buffer () { return BufferRegistry.get(this.type) }\r\n\r\n  static getShapeKey (name: string) {\r\n    return this.type + name[0].toUpperCase() + name.substr(1)\r\n  }\r\n\r\n  static expandBoundingBox (box: Box3, data: any) {}\r\n\r\n  static valueToShape (shape: Shape, name: string, value: any) {\r\n    const data = shape._primitiveData[this.getShapeKey(name)]\r\n    const type = this.fields[name]\r\n\r\n    switch (type) {\r\n      case 'v3':\r\n      case 'c':\r\n        addElement(value, data)\r\n        break\r\n      default:\r\n        data.push(value)\r\n    }\r\n  }\r\n\r\n  static objectToShape (shape: Shape, data: any) {\r\n    Object.keys(this.fields).forEach(name => {\r\n      this.valueToShape(shape, name, data[name])\r\n    })\r\n    this.valueToShape(shape, 'name', data.name)\r\n    this.expandBoundingBox(shape.boundingBox, data)\r\n  }\r\n\r\n  static valueFromShape (shape: Shape, pid: number, name: string) {\r\n    const data = shape._primitiveData[this.getShapeKey(name)]\r\n    const type = this.fields[name]\r\n\r\n    switch (type) {\r\n      case 'v3':\r\n        return new Vector3().fromArray(data, 3 * pid)\r\n      case 'c':\r\n        return new Color().fromArray(data, 3 * pid)\r\n      default:\r\n        return data[pid]\r\n    }\r\n  }\r\n\r\n  static objectFromShape (shape: Shape, pid: number) {\r\n    let name = this.valueFromShape(shape, pid, 'name')\r\n    if (name === undefined) {\r\n      name = `${this.type}: ${pid} (${shape.name})`\r\n    }\r\n    const o: any = { shape, name }\r\n\r\n    Object.keys(this.fields).forEach(name => {\r\n      o[name] = this.valueFromShape(shape, pid, name)\r\n    })\r\n\r\n    return o\r\n  }\r\n\r\n  static arrayFromShape (shape: Shape, name: string) {\r\n    const data = shape._primitiveData[this.getShapeKey(name)]\r\n    const type = this.fields[name]\r\n\r\n    switch (type) {\r\n      case 's':\r\n        return data\r\n      default:\r\n        return new Float32Array(data)\r\n    }\r\n  }\r\n\r\n  static dataFromShape (shape: Shape) {\r\n    const data: any = {}\r\n\r\n    if (this.Picker) {\r\n      data.picking = new this.Picker(shape)\r\n    }\r\n\r\n    Object.keys(this.fields).forEach(name => {\r\n      data[name] = this.arrayFromShape(shape, name)\r\n    })\r\n\r\n    return data\r\n  }\r\n\r\n  static bufferFromShape (shape: Shape, params: any) {\r\n    return new this.Buffer(this.dataFromShape(shape), params)\r\n  }\r\n}\r\n\r\n/**\r\n * Sphere geometry primitive\r\n */\r\nexport class SpherePrimitive extends Primitive {\r\n  static type = 'sphere'\r\n\r\n  static fields = {\r\n    position: 'v3',\r\n    color: 'c',\r\n    radius: 'f'\r\n  }\r\n\r\n  static positionFromShape (shape: Shape, pid: number) {\r\n    return this.valueFromShape(shape, pid, 'position')\r\n  }\r\n\r\n  static expandBoundingBox (box: Box3, data: any) {\r\n    box.expandByPoint(tmpVec.fromArray(data.position))\r\n  }\r\n}\r\n\r\n/**\r\n * Box geometry primitive\r\n */\r\nexport class BoxPrimitive extends Primitive {\r\n  static type = 'box'\r\n\r\n  static fields = {\r\n    position: 'v3',\r\n    color: 'c',\r\n    size: 'f',\r\n    heightAxis: 'v3',\r\n    depthAxis: 'v3'\r\n  }\r\n\r\n  static positionFromShape (shape: Shape, pid: number) {\r\n    return this.valueFromShape(shape, pid, 'position')\r\n  }\r\n\r\n  static expandBoundingBox (box: Box3, data: any) {\r\n    box.expandByPoint(tmpVec.fromArray(data.position))\r\n  }\r\n}\r\n\r\n/**\r\n * Octahedron geometry primitive\r\n */\r\nexport class OctahedronPrimitive extends BoxPrimitive {\r\n  static type = 'octahedron'\r\n}\r\n\r\n/**\r\n * Tetrahedron geometry primitive\r\n */\r\nexport class TetrahedronPrimitive extends BoxPrimitive {\r\n  static type = 'tetrahedron'\r\n}\r\n\r\n/**\r\n * Cylinder geometry primitive\r\n */\r\nexport class CylinderPrimitive extends Primitive {\r\n  static type = 'cylinder'\r\n\r\n  static fields = {\r\n    position1: 'v3',\r\n    position2: 'v3',\r\n    color: 'c',\r\n    radius: 'f'\r\n  }\r\n\r\n  static positionFromShape (shape: Shape, pid: number) {\r\n    const p1 = this.valueFromShape(shape, pid, 'position1')\r\n    const p2 = this.valueFromShape(shape, pid, 'position2')\r\n    return p1.add(p2).multiplyScalar(0.5)\r\n  }\r\n\r\n  static expandBoundingBox (box: Box3, data: any) {\r\n    box.expandByPoint(tmpVec.fromArray(data.position1))\r\n    box.expandByPoint(tmpVec.fromArray(data.position2))\r\n  }\r\n\r\n  static bufferFromShape (shape: Shape, params: any = {}) {\r\n    let data = this.dataFromShape(shape)\r\n    if (this.type === 'cylinder' && params.dashedCylinder) {\r\n      data = getFixedLengthDashData(data)\r\n    }\r\n    return new this.Buffer(data, params)\r\n  }\r\n}\r\n\r\n/**\r\n * Arrow geometry primitive\r\n */\r\nexport class ArrowPrimitive extends CylinderPrimitive {\r\n  static type = 'arrow'\r\n}\r\n\r\n/**\r\n * Cone geometry primitive\r\n */\r\nexport class ConePrimitive extends CylinderPrimitive {\r\n  static type = 'cone'\r\n}\r\n\r\n/**\r\n * Ellipsoid geometry primitive\r\n */\r\nexport class EllipsoidPrimitive extends SpherePrimitive {\r\n  static type = 'ellipsoid'\r\n\r\n  static fields = {\r\n    position: 'v3',\r\n    color: 'c',\r\n    radius: 'f',\r\n    majorAxis: 'v3',\r\n    minorAxis: 'v3'\r\n  }\r\n}\r\n\r\n/**\r\n * Torus geometry primitive\r\n */\r\nexport class TorusPrimitive extends EllipsoidPrimitive {\r\n  static type = 'torus'\r\n}\r\n\r\n/**\r\n * Text geometry primitive\r\n */\r\nexport class TextPrimitive extends Primitive {\r\n  static type = 'text'\r\n\r\n  static fields = {\r\n    position: 'v3',\r\n    color: 'c',\r\n    size: 'f',\r\n    text: 's'\r\n  }\r\n\r\n  static positionFromShape (shape: Shape, pid: number) {\r\n    return this.valueFromShape(shape, pid, 'position')\r\n  }\r\n\r\n  static expandBoundingBox (box: Box3, data: any) {\r\n    box.expandByPoint(tmpVec.fromArray(data.position))\r\n  }\r\n}\r\n\r\n/**\r\n * Point primitive\r\n */\r\nexport class PointPrimitive extends Primitive {\r\n  static type = 'point'\r\n\r\n  static fields = {\r\n    position: 'v3',\r\n    color: 'c',\r\n  }\r\n\r\n  static positionFromShape (shape: Shape, pid: number) {\r\n    return this.valueFromShape(shape, pid, 'position')\r\n  }\r\n\r\n  static expandBoundingBox (box: Box3, data: any) {\r\n    box.expandByPoint(tmpVec.fromArray(data.position))\r\n  }\r\n}\r\n\r\n/**\r\n * Wideline geometry primitive\r\n */\r\nexport class WidelinePrimitive extends Primitive {\r\n  static type = 'wideline'\r\n\r\n  static fields = {\r\n    position1: 'v3',\r\n    position2: 'v3',\r\n    color: 'c'\r\n  }\r\n\r\n  static positionFromShape (shape: Shape, pid: number) {\r\n    const p1 = this.valueFromShape(shape, pid, 'position1')\r\n    const p2 = this.valueFromShape(shape, pid, 'position2')\r\n    return p1.add(p2).multiplyScalar(0.5)\r\n  }\r\n\r\n  static expandBoundingBox (box: Box3, data: any) {\r\n    box.expandByPoint(tmpVec.fromArray(data.position1))\r\n    box.expandByPoint(tmpVec.fromArray(data.position2))\r\n  }\r\n}\r\n","/**\r\n * @file Spatial Hash\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Box3 } from 'three'\r\n\r\nexport type Positions = {\r\n  x: ArrayLike<number>,\r\n  y: ArrayLike<number>,\r\n  z: ArrayLike<number>,\r\n  count?:number\r\n}\r\n\r\nfunction createBoundingBox(positions: Positions) {\r\n    const { x, y, z } = positions\r\n    const boundingBox = new Box3()\r\n    const count = x.length\r\n    const { min, max } = boundingBox\r\n\r\n    for (let i = 0; i < count; i++) {\r\n        min.x = Math.min(x[i], min.x)\r\n        min.y = Math.min(y[i], min.y)\r\n        min.z = Math.min(z[i], min.z)\r\n        max.x = Math.max(x[i], max.x)\r\n        max.y = Math.max(y[i], max.y)\r\n        max.z = Math.max(z[i], max.z)\r\n    }\r\n\r\n    return boundingBox\r\n}\r\n\r\nexport default class SpatialHash {\r\n  exp = 3\r\n\r\n  minX: number\r\n  minY: number\r\n  minZ: number\r\n\r\n  boundX: number\r\n  boundY: number\r\n  boundZ: number\r\n\r\n  grid: Uint32Array\r\n  bucketCount: Uint16Array\r\n  bucketOffset: Uint32Array\r\n  bucketArray: Int32Array\r\n\r\n  xArray: ArrayLike<number>\r\n  yArray: ArrayLike<number>\r\n  zArray: ArrayLike<number>\r\n\r\n  constructor(positions: Positions, boundingBox?: Box3) {\r\n    const bb = boundingBox || createBoundingBox(positions)\r\n    this.minX = bb.min.x\r\n    this.minY = bb.min.y\r\n    this.minZ = bb.min.z\r\n    this.boundX = ((bb.max.x - this.minX) >> this.exp) + 1\r\n    this.boundY = ((bb.max.y - this.minY) >> this.exp) + 1\r\n    this.boundZ = ((bb.max.z - this.minZ) >> this.exp) + 1\r\n\r\n    const n = this.boundX * this.boundY * this.boundZ\r\n    const an = (positions.count !== undefined) ? positions.count : positions.x.length\r\n\r\n    const xArray = positions.x\r\n    const yArray = positions.y\r\n    const zArray = positions.z\r\n\r\n    let count = 0\r\n    const grid = new Uint32Array(n)\r\n    const bucketIndex = new Int32Array(an)\r\n    for (let i = 0; i < an; ++i) {\r\n      const x = (xArray[ i ] - this.minX) >> this.exp\r\n      const y = (yArray[ i ] - this.minY) >> this.exp\r\n      const z = (zArray[ i ] - this.minZ) >> this.exp\r\n      const idx = (((x * this.boundY) + y) * this.boundZ) + z\r\n      if ((grid[ idx ] += 1) === 1) {\r\n        count += 1\r\n      }\r\n      bucketIndex[ i ] = idx\r\n    }\r\n\r\n    const bucketCount = new Uint16Array(count)\r\n    for (let i = 0, j = 0; i < n; ++i) {\r\n      const c = grid[ i ]\r\n      if (c > 0) {\r\n        grid[ i ] = j + 1\r\n        bucketCount[ j ] = c\r\n        j += 1\r\n      }\r\n    }\r\n\r\n    const bucketOffset = new Uint32Array(count)\r\n    for (let i = 1; i < count; ++i) {\r\n      bucketOffset[ i ] += bucketOffset[ i - 1 ] + bucketCount[ i - 1 ]\r\n    }\r\n\r\n    const bucketFill = new Uint16Array(count)\r\n    const bucketArray = new Int32Array(an)\r\n    for (let i = 0; i < an; ++i) {\r\n      const bucketIdx = grid[ bucketIndex[ i ] ]\r\n      if (bucketIdx > 0) {\r\n        const k = bucketIdx - 1\r\n        bucketArray[ bucketOffset[ k ] + bucketFill[ k ] ] = i\r\n        bucketFill[ k ] += 1\r\n      }\r\n    }\r\n\r\n    this.grid = grid\r\n    this.bucketCount = bucketCount\r\n    this.bucketOffset = bucketOffset\r\n    this.bucketArray = bucketArray\r\n\r\n    this.xArray = xArray\r\n    this.yArray = yArray\r\n    this.zArray = zArray\r\n  }\r\n\r\n  within (x: number, y: number, z: number, r: number) {\r\n    const result: number[] = []\r\n\r\n    this.eachWithin(x, y, z, r, atomIndex => result.push(atomIndex))\r\n\r\n    return result\r\n  }\r\n\r\n  eachWithin (x: number, y: number, z: number, r: number, callback: (atomIndex: number, dSq: number) => void) {\r\n    const rSq = r * r\r\n\r\n    const loX = Math.max(0, (x - r - this.minX) >> this.exp)\r\n    const loY = Math.max(0, (y - r - this.minY) >> this.exp)\r\n    const loZ = Math.max(0, (z - r - this.minZ) >> this.exp)\r\n\r\n    const hiX = Math.min(this.boundX, ((x + r - this.minX) >> this.exp) + 1)\r\n    const hiY = Math.min(this.boundY, ((y + r - this.minY) >> this.exp) + 1)\r\n    const hiZ = Math.min(this.boundZ, ((z + r - this.minZ) >> this.exp) + 1)\r\n\r\n    for (let ix = loX; ix < hiX; ++ix) {\r\n      for (let iy = loY; iy < hiY; ++iy) {\r\n        for (let iz = loZ; iz < hiZ; ++iz) {\r\n          const idx = (((ix * this.boundY) + iy) * this.boundZ) + iz\r\n          const bucketIdx = this.grid[ idx ]\r\n\r\n          if (bucketIdx > 0) {\r\n            const k = bucketIdx - 1\r\n            const offset = this.bucketOffset[ k ]\r\n            const count = this.bucketCount[ k ]\r\n            const end = offset + count\r\n\r\n            for (let i = offset; i < end; ++i) {\r\n              const atomIndex = this.bucketArray[ i ]\r\n              const dx = this.xArray[ atomIndex ] - x\r\n              const dy = this.yArray[ atomIndex ] - y\r\n              const dz = this.zArray[ atomIndex ] - z\r\n\r\n              const dSq = dx * dx + dy * dy + dz * dz\r\n              if (dSq <= rSq) callback(atomIndex, dSq)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}","/**\r\n * @file Store\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Log } from '../globals'\r\nimport { getTypedArray, TypedArrayString } from '../utils'\r\n\r\nexport type StoreField = [string, number, TypedArrayString]\r\n\r\n/**\r\n * Store base class\r\n * @interface\r\n */\r\nexport default class Store {\r\n  [k: string]: any\r\n\r\n  length: number\r\n  count: number\r\n\r\n  _fields: StoreField[]\r\n  get _defaultFields(): StoreField[] { return [] }\r\n\r\n  /**\r\n   * @param {Integer} [size] - initial size\r\n   */\r\n  constructor (size = 0) {\r\n    this._fields = this._defaultFields\r\n    this._init(0)\r\n  }\r\n\r\n  /**\r\n   * Initialize the store\r\n   * @param  {Integer} size - size to initialize\r\n   * @return {undefined}\r\n   */\r\n  _init (size: number) {\r\n    this.length = size\r\n    this.count = 0\r\n\r\n    for (let i = 0, il = this._fields.length; i < il; ++i) {\r\n      const [name, size, type]: StoreField = this._fields[ i ]\r\n      this._initField(name, size, type)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialize a field\r\n   * @param  {String} name - field name\r\n   * @param  {Integer} size - element size\r\n   * @param  {String} type - data type, one of int8, int16, int32,\r\n   *                         uint8, uint16, uint32, float32\r\n   * @return {undefined}\r\n   */\r\n  _initField (name: string, size: number, type: TypedArrayString) {\r\n    this[ name ] = getTypedArray(type, this.length * size)\r\n  }\r\n\r\n  /**\r\n   * Add a field\r\n   * @param  {String} name - field name\r\n   * @param  {Integer} size - element size\r\n   * @param  {String} type - data type, one of int8, int16, int32,\r\n   *                         uint8, uint16, uint32, float32\r\n   * @return {undefined}\r\n   */\r\n  addField (name: string, size: number, type: TypedArrayString) {\r\n    this._fields.push([name, size, type])\r\n    this._initField(name, size, type)\r\n  }\r\n\r\n  /**\r\n   * Resize the store to the new size\r\n   * @param  {Integer} size - new size\r\n   * @return {undefined}\r\n   */\r\n  resize (size?: number) {\r\n    // Log.time( \"Store.resize\" );\r\n\r\n    this.length = Math.round(size || 0)\r\n    this.count = Math.min(this.count, this.length)\r\n\r\n    for (let i = 0, il = this._fields.length; i < il; ++i) {\r\n      const name = this._fields[ i ][ 0 ]\r\n      const itemSize = this._fields[ i ][ 1 ]\r\n      const arraySize = this.length * itemSize\r\n      const tmpArray = new this[ name ].constructor(arraySize)\r\n\r\n      if (this[ name ].length > arraySize) {\r\n        tmpArray.set(this[ name ].subarray(0, arraySize))\r\n      } else {\r\n        tmpArray.set(this[ name ])\r\n      }\r\n      this[ name ] = tmpArray\r\n    }\r\n\r\n    // Log.timeEnd( \"Store.resize\" );\r\n  }\r\n\r\n  /**\r\n   * Resize the store to 1.5 times its current size if full\r\n   * @return {undefined}\r\n   */\r\n  growIfFull () {\r\n    if (this.count >= this.length) {\r\n      const size = Math.round(this.length * 1.5)\r\n      this.resize(Math.max(256, size))\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Copy data from one store to another\r\n   * @param  {Store} other - store to copy from\r\n   * @param  {Integer} thisOffset - offset to start copying to\r\n   * @param  {Integer} otherOffset - offset to start copying from\r\n   * @param  {Integer} length - number of entries to copy\r\n   * @return {undefined}\r\n   */\r\n  copyFrom (other: Store, thisOffset: number, otherOffset: number, length: number) {\r\n    for (let i = 0, il = this._fields.length; i < il; ++i) {\r\n      const name = this._fields[ i ][ 0 ]\r\n      const itemSize = this._fields[ i ][ 1 ]\r\n      const thisField = this[ name ]\r\n      const otherField = other[ name ]\r\n\r\n      for (let j = 0; j < length; ++j) {\r\n        const thisIndex = itemSize * (thisOffset + j)\r\n        const otherIndex = itemSize * (otherOffset + j)\r\n        for (let k = 0; k < itemSize; ++k) {\r\n          thisField[ thisIndex + k ] = otherField[ otherIndex + k ]\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Copy data within this store\r\n   * @param  {Integer} thisOffset - offset to start copying to\r\n   * @param  {Integer} otherOffset - offset to start copying from\r\n   * @param  {Integer} length - number of entries to copy\r\n   * @return {undefined}\r\n   */\r\n  copyWithin (offsetTarget: number, offsetSource: number, length: number) {\r\n    for (let i = 0, il = this._fields.length; i < il; ++i) {\r\n      const name = this._fields[ i ][ 0 ]\r\n      const itemSize = this._fields[ i ][ 1 ]\r\n      const thisField = this[ name ]\r\n\r\n      for (let j = 0; j < length; ++j) {\r\n        const targetIndex = itemSize * (offsetTarget + j)\r\n        const sourceIndex = itemSize * (offsetSource + j)\r\n        for (let k = 0; k < itemSize; ++k) {\r\n          thisField[ targetIndex + k ] = thisField[ sourceIndex + k ]\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sort entries in the store given the compare function\r\n   * @param  {[type]} compareFunction - function to sort by\r\n   * @return {undefined}\r\n   */\r\n  sort (compareFunction: (a: any, b: any) => number) {\r\n    Log.time('Store.sort')\r\n\r\n    const thisStore = this\r\n    const tmpStore = new (this.constructor as any)(1)\r\n\r\n    function swap (index1: number, index2: number) {\r\n      if (index1 === index2) return\r\n      tmpStore.copyFrom(thisStore, 0, index1, 1)\r\n      thisStore.copyWithin(index1, index2, 1)\r\n      thisStore.copyFrom(tmpStore, index2, 0, 1)\r\n    }\r\n\r\n    function quicksort (left: number, right: number) {\r\n      if (left < right) {\r\n        let pivot = Math.floor((left + right) / 2)\r\n        let leftNew = left\r\n        let rightNew = right\r\n        do {\r\n          while (compareFunction(leftNew, pivot) < 0) {\r\n            leftNew += 1\r\n          }\r\n          while (compareFunction(rightNew, pivot) > 0) {\r\n            rightNew -= 1\r\n          }\r\n          if (leftNew <= rightNew) {\r\n            if (leftNew === pivot) {\r\n              pivot = rightNew\r\n            } else if (rightNew === pivot) {\r\n              pivot = leftNew\r\n            }\r\n            swap(leftNew, rightNew)\r\n            leftNew += 1\r\n            rightNew -= 1\r\n          }\r\n        } while (leftNew <= rightNew)\r\n        quicksort(left, rightNew)\r\n        quicksort(leftNew, right)\r\n      }\r\n    }\r\n\r\n    quicksort(0, this.count - 1)\r\n\r\n    Log.timeEnd('Store.sort')\r\n  }\r\n\r\n  /**\r\n   * Empty the store\r\n   * @return {undefined}\r\n   */\r\n  clear () {\r\n    this.count = 0\r\n  }\r\n\r\n  /**\r\n   * Dispose of the store entries and fields\r\n   * @return {undefined}\r\n   */\r\n  dispose () {\r\n\r\n    for (let i = 0, il = this._fields.length; i < il; ++i) {\r\n      const name = this._fields[ i ][ 0 ]\r\n      delete this[ name ]\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @file Contact Store\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Store, { StoreField } from './store'\r\n\r\n/**\r\n * Bond store\r\n */\r\nexport default class ContactStore extends Store {\r\n  index1: Uint32Array\r\n  index2: Uint32Array\r\n  type: Uint8Array\r\n\r\n  get _defaultFields () {\r\n    return [\r\n      [ 'index1', 1, 'int32' ],\r\n      [ 'index2', 1, 'int32' ],\r\n      [ 'type', 1, 'int8' ]\r\n    ] as StoreField[]\r\n  }\r\n\r\n  addContact (index1: number, index2: number, type?: number) {\r\n    this.growIfFull()\r\n\r\n    const i = this.count\r\n\r\n    if (index1 < index2) {\r\n      this.index1[ i ] = index1\r\n      this.index2[ i ] = index2\r\n    } else {\r\n      this.index2[ i ] = index1\r\n      this.index1[ i ] = index2\r\n    }\r\n    if (type) this.type[ i ] = type\r\n\r\n    this.count += 1\r\n  }\r\n}","/**\r\n * @file Bit array\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @author Paul Pillot <paulpillot@gmail.com>\r\n * @private\r\n */\r\n\r\n/**\r\n * Compute the Hamming weight of a 32-bit unsigned integer\r\n * @param  {Integer} v - a 32-bit unsigned integer\r\n * @return {Integer} the Hamming weight\r\n */\r\nfunction hammingWeight (v: number) {\r\n  // works with signed or unsigned shifts\r\n  v -= ((v >>> 1) & 0x55555555)\r\n  v = (v & 0x33333333) + ((v >>> 2) & 0x33333333)\r\n  return ((v + (v >>> 4) & 0xF0F0F0F) * 0x1010101) >>> 24\r\n}\r\n\r\n/**\r\n * Bit array\r\n *\r\n * Based heavily on https://github.com/lemire/FastBitSet.js\r\n * which is licensed under the Apache License, Version 2.0.\r\n */\r\nexport default class BitArray {\r\n  private _words: Uint32Array\r\n  public length: number\r\n\r\n  /**\r\n   * @param  {Integer} length - array length\r\n   * @param  {Boolean} [setAll] - initialize with true\r\n   */\r\n  constructor (length: number, setAll?: boolean) {\r\n    this.length = length\r\n    this._words = new Uint32Array((length + 32) >>> 5)\r\n    if (setAll === true) {\r\n      this.setAll()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get value at index\r\n   * @param  {Integer} index - the index\r\n   * @return {Boolean} value\r\n   */\r\n  get (index: number) {\r\n    return (this._words[ index >>> 5 ] & (1 << index)) !== 0\r\n  }\r\n\r\n  /**\r\n   * Set value at index to true\r\n   * @param  {Integer} index - the index\r\n   * @return {undefined}\r\n   */\r\n  set (index: number) {\r\n    this._words[ index >>> 5 ] |= 1 << index\r\n  }\r\n\r\n  /**\r\n   * Set value at index to false\r\n   * @param  {Integer} index - the index\r\n   * @return {undefined}\r\n   */\r\n  clear (index: number) {\r\n    this._words[ index >>> 5 ] &= ~(1 << index)\r\n  }\r\n\r\n  /**\r\n   * Flip value at index\r\n   * @param  {Integer} index - the index\r\n   * @return {undefined}\r\n   */\r\n  flip (index: number) {\r\n    this._words[ index >>> 5 ] ^= 1 << index\r\n  }\r\n\r\n  _assignRange (start: number, end: number, value: boolean) {\r\n    if (end < start) return\r\n    const words = this._words\r\n    const wordValue = value === true ? 0xFFFFFFFF : 0\r\n    const wordStart = start >>> 5\r\n    const wordEnd = end >>> 5\r\n        // set complete words when applicable\r\n    for (let k = wordStart + 1; k < wordEnd; ++k) {\r\n      words[ k ] = wordValue\r\n    }\r\n        // set parts of the range not spanning complete words\r\n    const startWord = wordStart << 5\r\n    const endWord = wordEnd << 5\r\n    if (value === true) {\r\n      if (end - start < 32) {\r\n        for (let i = start, n = end + 1; i < n; ++i) {\r\n          words[ i >>> 5 ] |= 1 << i\r\n        }\r\n      } else {\r\n        for (let i = start, n = startWord + 32; i < n; ++i) {\r\n          words[ i >>> 5 ] |= 1 << i\r\n        }\r\n        for (let i = endWord, n = end + 1; i < n; ++i) {\r\n          words[ i >>> 5 ] |= 1 << i\r\n        }\r\n      }\r\n    } else {\r\n      if (end - start < 32) {\r\n        for (let i = start, n = end + 1; i < n; ++i) {\r\n          words[ i >>> 5 ] &= ~(1 << i)\r\n        }\r\n      } else {\r\n        for (let i = start, n = startWord + 32; i < n; ++i) {\r\n          words[ i >>> 5 ] &= ~(1 << i)\r\n        }\r\n        for (let i = endWord, n = end + 1; i < n; ++i) {\r\n          words[ i >>> 5 ] &= ~(1 << i)\r\n        }\r\n      }\r\n    }\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Set bits of the given range\r\n   * @param {Integer} start - start index\r\n   * @param {Integer} end - end index\r\n   * @return {BitArray} this object\r\n   */\r\n  setRange (start: number, end: number) {\r\n    return this._assignRange(start, end, true)\r\n  }\r\n\r\n  /**\r\n   * Clear bits of the given range\r\n   * @param {Integer} start - start index\r\n   * @param {Integer} end - end index\r\n   * @return {BitArray} this object\r\n   */\r\n  clearRange (start: number, end: number) {\r\n    return this._assignRange(start, end, false)\r\n  }\r\n\r\n  /**\r\n   * Set bits at all given indices\r\n   * @param {...Integer} arguments - indices\r\n   * @return {Boolean} this object\r\n   */\r\n  setBits (...indices: number[]) {\r\n    const words = this._words\r\n    const n = indices.length\r\n    for (let i = 0; i < n; ++i) {\r\n      const index = indices[ i ]\r\n      words[ index >>> 5 ] |= 1 << index\r\n    }\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Clear bits at all given indices\r\n   * @param {...Integer} arguments - indices\r\n   * @return {Boolean} this object\r\n   */\r\n  clearBits (...indices: number[]) {\r\n    const words = this._words\r\n    const n = indices.length\r\n    for (let i = 0; i < n; ++i) {\r\n      const index = indices[ i ]\r\n      words[ index >>> 5 ] &= ~(1 << index)\r\n    }\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Set all bits of the array\r\n   * @return {BitArray} this object\r\n   */\r\n  setAll () {\r\n    return this._assignRange(0, this.length - 1, true)\r\n  }\r\n\r\n  /**\r\n   * Clear all bits of the array\r\n   * @return {BitArray} this object\r\n   */\r\n  clearAll () {\r\n    return this._assignRange(0, this.length - 1, false)\r\n  }\r\n\r\n  /**\r\n   * Flip all the values in the array\r\n   * @return {BitArray} this object\r\n   */\r\n  flipAll () {\r\n    const count = this._words.length\r\n    const words = this._words\r\n    const bs = 32 - this.length % 32\r\n    for (let k = 0; k < count - 1; ++k) {\r\n      words[k] = ~words[ k ]\r\n    }\r\n    words[ count - 1 ] = (~(words[ count - 1 ] << bs)) >>> bs\r\n    return this\r\n  }\r\n\r\n  _isRangeValue (start: number, end: number, value: boolean) {\r\n    if (end < start) return\r\n    const words = this._words\r\n    const wordValue = value === true ? 0xFFFFFFFF : 0\r\n    const wordStart = start >>> 5\r\n    const wordEnd = end >>> 5\r\n        // set complete words when applicable\r\n    for (let k = wordStart + 1; k < wordEnd; ++k) {\r\n      if (words[ k ] !== wordValue) return false\r\n    }\r\n        // set parts of the range not spanning complete words\r\n    if (end - start < 32) {\r\n      for (let i = start, n = end + 1; i < n; ++i) {\r\n        if (!!(words[ i >>> 5 ] & (1 << i)) !== value) return false\r\n      }\r\n    } else {\r\n      const startWord = wordStart << 5\r\n      const endWord = wordEnd << 5\r\n      for (let i = start, n = startWord + 32; i < n; ++i) {\r\n        if (!!(words[ i >>> 5 ] & (1 << i)) !== value) return false\r\n      }\r\n      for (let i = endWord, n = end + 1; i < n; ++i) {\r\n        if (!!(words[ i >>> 5 ] & (1 << i)) !== value) return false\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n  /**\r\n   * Test if bits in given range are set\r\n   * @param {Integer} start - start index\r\n   * @param {Integer} end - end index\r\n   * @return {BitArray} this object\r\n   */\r\n  isRangeSet (start: number, end: number) {\r\n    return this._isRangeValue(start, end, true)\r\n  }\r\n\r\n  /**\r\n   * Test if bits in given range are clear\r\n   * @param {Integer} start - start index\r\n   * @param {Integer} end - end index\r\n   * @return {BitArray} this object\r\n   */\r\n  isRangeClear (start: number, end: number) {\r\n    return this._isRangeValue(start, end, false)\r\n  }\r\n\r\n  /**\r\n   * Test if all bits in the array are set\r\n   * @return {Boolean} test result\r\n   */\r\n  isAllSet () {\r\n    return this._isRangeValue(0, this.length - 1, true)\r\n  }\r\n\r\n  /**\r\n   * Test if all bits in the array are clear\r\n   * @return {Boolean} test result\r\n   */\r\n  isAllClear () {\r\n    return this._isRangeValue(0, this.length - 1, false)\r\n  }\r\n\r\n  /**\r\n   * Test if bits at all given indices are set\r\n   * @param {...Integer} arguments - indices\r\n   * @return {Boolean} test result\r\n   */\r\n  isSet (...indices: number[]) {\r\n    const words = this._words\r\n    const n = indices.length\r\n    for (let i = 0; i < n; ++i) {\r\n      const index = indices[ i ]\r\n      if ((words[ index >>> 5 ] & (1 << index)) === 0) return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  /**\r\n   * Test if bits at all given indices are clear\r\n   * @param {...Integer} arguments - indices\r\n   * @return {Boolean} test result\r\n   */\r\n  isClear (...indices: number[]) {\r\n    const words = this._words\r\n    const n = indices.length\r\n    for (let i = 0; i < n; ++i) {\r\n      const index = indices[ i ]\r\n      if ((words[ index >>> 5 ] & (1 << index)) !== 0) return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  /**\r\n   * Test if two BitArrays are identical in all their values\r\n   * @param {BitArray} otherBitarray - the other BitArray\r\n   * @return {Boolean} test result\r\n   */\r\n  isEqualTo (otherBitarray: BitArray) {\r\n    const words1 = this._words\r\n    const words2 = otherBitarray._words\r\n    const count = Math.min(words1.length, words2.length)\r\n    for (let k = 0; k < count; ++k) {\r\n      if (words1[ k ] !== words2[ k ]) {\r\n        return false\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n  /**\r\n   * How many set bits?\r\n   * @return {Integer} number of set bits\r\n   */\r\n  getSize () {\r\n    const count = this._words.length\r\n    const words = this._words\r\n    let size = 0\r\n    for (let i = 0; i < count; ++i) {\r\n      size += hammingWeight(words[ i ])\r\n    }\r\n    return size\r\n  }\r\n\r\n  /**\r\n   * Calculate difference betwen this and another bit array.\r\n   * Store result in this object.\r\n   * @param  {BitArray} otherBitarray - the other bit array\r\n   * @return {BitArray} this object\r\n   */\r\n  difference (otherBitarray: BitArray) {\r\n    const words1 = this._words\r\n    const words2 = otherBitarray._words\r\n    const count = Math.min(words1.length, words2.length)\r\n    for (let k = 0; k < count; ++k) {\r\n      words1[ k ] = words1[ k ] & ~words2[ k ]\r\n    }\r\n    for (let k = words1.length; k < count; ++k) {\r\n      words1[ k ] = 0\r\n    }\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Calculate union betwen this and another bit array.\r\n   * Store result in this object.\r\n   * @param  {BitArray} otherBitarray - the other bit array\r\n   * @return {BitArray} this object\r\n   */\r\n  union (otherBitarray: BitArray) {\r\n    const words1 = this._words\r\n    const words2 = otherBitarray._words\r\n    const count = Math.min(words1.length, words2.length)\r\n    for (let k = 0; k < count; ++k) {\r\n      words1[ k ] |= words2[ k ]\r\n    }\r\n    for (let k = words1.length; k < count; ++k) {\r\n      words1[ k ] = 0\r\n    }\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Calculate intersection betwen this and another bit array.\r\n   * Store result in this object.\r\n   * @param  {BitArray} otherBitarray - the other bit array\r\n   * @return {BitArray} this object\r\n   */\r\n  intersection (otherBitarray: BitArray) {\r\n    const words1 = this._words\r\n    const words2 = otherBitarray._words\r\n    const count = Math.min(words1.length, words2.length)\r\n    for (let k = 0; k < count; ++k) {\r\n      words1[ k ] &= words2[ k ]\r\n    }\r\n    for (let k = words1.length; k < count; ++k) {\r\n      words1[ k ] = 0\r\n    }\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Test if there is any intersection betwen this and another bit array.\r\n   * @param  {BitArray} otherBitarray - the other bit array\r\n   * @return {Boolean} test result\r\n   */\r\n  intersects (otherBitarray: BitArray) {\r\n    const words1 = this._words\r\n    const words2 = otherBitarray._words\r\n    const count = Math.min(words1.length, words2.length)\r\n    for (let k = 0; k < count; ++k) {\r\n      if ((words1[ k ] & words2[ k ]) !== 0) {\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * Calculate the number of bits in common betwen this and another bit array.\r\n   * @param  {BitArray} otherBitarray - the other bit array\r\n   * @return {Integer} size\r\n   */\r\n  getIntersectionSize (otherBitarray: BitArray) {\r\n    const words1 = this._words\r\n    const words2 = otherBitarray._words\r\n    const count = Math.min(words1.length, words2.length)\r\n    let size = 0\r\n    for (let k = 0; k < count; ++k) {\r\n      size += hammingWeight(words1[ k ] & words2[ k ])\r\n    }\r\n    return size\r\n  }\r\n\r\n  /**\r\n   * Calculate intersection betwen this and another bit array.\r\n   * Store result in a new bit array.\r\n   * @param  {BitArray} otherBitarray - the other bit array\r\n   * @return {BitArray} the new bit array\r\n   */\r\n  makeIntersection (otherBitarray: BitArray) {\r\n    const words1 = this._words\r\n    const words2 = otherBitarray._words\r\n    const count = Math.min(words1.length, words2.length)\r\n    const wordsA = new Uint32Array(count)\r\n    const intersection = Object.create(BitArray.prototype)\r\n    intersection._words = wordsA\r\n    intersection.length = Math.min(this.length, otherBitarray.length)\r\n    for (let k = 0; k < count; ++k) {\r\n      wordsA[ k ] = words1[ k ] & words2[ k ]\r\n    }\r\n    return intersection\r\n  }\r\n\r\n  /**\r\n   * Iterate over all set bits in the array\r\n   * @param  {function( index: Integer, i: Integer )} callback - the callback\r\n   * @return {undefined}\r\n   */\r\n  forEach (callback: (index: number, i: number) => any) {\r\n    const count = this._words.length\r\n    const words = this._words\r\n    let i = 0\r\n    for (let k = 0; k < count; ++k) {\r\n      let w = words[ k ]\r\n      while (w !== 0) {\r\n        const t = w & -w\r\n        const index = (k << 5) + hammingWeight(t - 1)\r\n        callback(index, i)\r\n        w ^= t\r\n        ++i\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get an array with the set bits\r\n   * @return {Array} bit indices\r\n   */\r\n  toArray () {\r\n    const words = this._words\r\n    const answer = new Array(this.getSize())\r\n    const count = this._words.length\r\n    let pos = 0\r\n    for (let k = 0; k < count; ++k) {\r\n      let w = words[ k ]\r\n      while (w !== 0) {\r\n        const t = w & -w\r\n        answer[ pos++ ] = (k << 5) + hammingWeight(t - 1)\r\n        w ^= t\r\n      }\r\n    }\r\n    return answer\r\n  }\r\n\r\n  toString () {\r\n    return '{' + this.toArray().join(',') + '}'\r\n  }\r\n\r\n  toSeleString () {\r\n    const sele = this.toArray().join(',')\r\n    return sele ? '@' + sele : 'NONE'\r\n  }\r\n\r\n  /**\r\n   * Clone this object\r\n   * @return {BitArray} the cloned object\r\n   */\r\n  clone () {\r\n    const clone = Object.create(BitArray.prototype)\r\n    clone.length = this.length\r\n    clone._words = new Uint32Array(this._words)\r\n    return clone\r\n  }\r\n}","/**\r\n * @file Adjacency List\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nexport interface Edges {\r\n  nodeArray1: ArrayLike<number>\r\n  nodeArray2: ArrayLike<number>\r\n  edgeCount: number\r\n  nodeCount: number\r\n}\r\n\r\nexport interface AdjacencyList {\r\n  /* number of edges for each node */\r\n  countArray: Uint8Array\r\n  /* offset into indexArray for each node */\r\n  offsetArray: Int32Array\r\n  /* edge indices, grouped by nodes */\r\n  indexArray: Int32Array\r\n}\r\n\r\nexport function createAdjacencyList (edges: Edges): AdjacencyList {\r\n  const { edgeCount, nodeCount, nodeArray1, nodeArray2 } = edges\r\n\r\n  const countArray = new Uint8Array(nodeCount)\r\n  const offsetArray = new Int32Array(nodeCount)\r\n\r\n  // count edges per node\r\n  for (let i = 0; i < edgeCount; ++i) {\r\n    countArray[ nodeArray1[ i ] ] += 1\r\n    countArray[ nodeArray2[ i ] ] += 1\r\n  }\r\n\r\n  // get offsets to node edges\r\n  for (let i = 1; i < nodeCount; ++i) {\r\n    offsetArray[ i ] += offsetArray[ i - 1 ] + countArray[ i - 1 ]\r\n  }\r\n\r\n  // prepare index array\r\n  const bondCount2 = edgeCount * 2\r\n  const indexArray = new Int32Array(bondCount2)\r\n  for (let j = 0; j < bondCount2; ++j) {\r\n    indexArray[ j ] = -1\r\n  }\r\n\r\n  // build index array\r\n  for (let i = 0; i < edgeCount; ++i) {\r\n    const idx1 = nodeArray1[ i ]\r\n    const idx2 = nodeArray2[ i ]\r\n    let j1 = offsetArray[ idx1 ]\r\n    while (indexArray[ j1 ] !== -1 && j1 < bondCount2) {\r\n      j1 += 1\r\n    }\r\n    indexArray[ j1 ] = i\r\n    let j2 = offsetArray[ idx2 ]\r\n    while (indexArray[ j2 ] !== -1 && j2 < bondCount2) {\r\n      j2 += 1\r\n    }\r\n    indexArray[ j2 ] = i\r\n  }\r\n\r\n  return { countArray, offsetArray, indexArray }\r\n}\r\n","/**\r\n * @file Features\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\n\r\nimport AtomProxy from '../../proxy/atom-proxy'\r\n\r\nexport interface Features {\r\n  types: FeatureType[]\r\n  groups: FeatureGroup[]\r\n  centers: { x: number[], y: number[], z: number[] }\r\n  atomSets: number[][]\r\n}\r\n\r\nexport const enum FeatureType {\r\n  Unknown = 0,\r\n  PositiveCharge = 1,\r\n  NegativeCharge = 2,\r\n  AromaticRing = 3,\r\n  HydrogenDonor = 4,\r\n  HydrogenAcceptor = 5,\r\n  HalogenDonor = 6,\r\n  HalogenAcceptor = 7,\r\n  Hydrophobic = 8,\r\n  WeakHydrogenDonor = 9,\r\n  IonicTypePartner = 10,\r\n  DativeBondPartner = 11,\r\n  TransitionMetal = 12,\r\n  IonicTypeMetal = 13\r\n}\r\n\r\nexport const enum FeatureGroup {\r\n  Unknown = 0,\r\n  QuaternaryAmine = 1,\r\n  TertiaryAmine = 2,\r\n  Sulfonium = 3,\r\n  SulfonicAcid = 4,\r\n  Sulfate = 5,\r\n  Phosphate = 6,\r\n  Halocarbon = 7,\r\n  Guanidine = 8,\r\n  Acetamidine = 9,\r\n  Carboxylate = 10\r\n}\r\n\r\nexport function createFeatures (): Features {\r\n  return {\r\n    types: [],\r\n    groups: [],\r\n    centers: { x: [], y: [], z: [] },\r\n    atomSets: []\r\n  }\r\n}\r\n\r\nexport interface FeatureState {\r\n  type: FeatureType\r\n  group: FeatureGroup\r\n  x: number\r\n  y: number\r\n  z: number\r\n  atomSet: number[]\r\n}\r\n\r\nexport function createFeatureState(type = FeatureType.Unknown, group = FeatureGroup.Unknown): FeatureState {\r\n  return { type, group, x: 0, y: 0, z: 0, atomSet: [] }\r\n}\r\n\r\nexport function addAtom (state: FeatureState, atom: AtomProxy) {\r\n  state.x += atom.x\r\n  state.y += atom.y\r\n  state.z += atom.z\r\n  state.atomSet.push(atom.index)\r\n}\r\n\r\nexport function addFeature (features: Features, state: FeatureState) {\r\n  const n = state.atomSet.length\r\n  if (n > 0) {\r\n    const { types, groups, centers, atomSets } = features\r\n    types.push(state.type)\r\n    groups.push(state.group)\r\n    centers.x.push(state.x / n)\r\n    centers.y.push(state.y / n)\r\n    centers.z.push(state.z / n)\r\n    atomSets.push(state.atomSet)\r\n  }\r\n}\r\n","/**\r\n * @file Structure Constants\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\n// entity types\r\nexport const UnknownEntity = 0\r\nexport const PolymerEntity = 1\r\nexport const NonPolymerEntity = 2\r\nexport const MacrolideEntity = 3\r\nexport const WaterEntity = 4\r\n\r\n// molecule types\r\nexport const UnknownType = 0\r\nexport const WaterType = 1\r\nexport const IonType = 2\r\nexport const ProteinType = 3\r\nexport const RnaType = 4\r\nexport const DnaType = 5\r\nexport const SaccharideType = 6\r\n\r\n// backbone types\r\nexport const UnknownBackboneType = 0\r\nexport const ProteinBackboneType = 1\r\nexport const RnaBackboneType = 2\r\nexport const DnaBackboneType = 3\r\nexport const CgProteinBackboneType = 4\r\nexport const CgRnaBackboneType = 5\r\nexport const CgDnaBackboneType = 6\r\n\r\n// chemical component types\r\nexport const ChemCompProtein = [\r\n  'D-BETA-PEPTIDE, C-GAMMA LINKING', 'D-GAMMA-PEPTIDE, C-DELTA LINKING',\r\n  'D-PEPTIDE COOH CARBOXY TERMINUS', 'D-PEPTIDE NH3 AMINO TERMINUS', 'D-PEPTIDE LINKING',\r\n  'L-BETA-PEPTIDE, C-GAMMA LINKING', 'L-GAMMA-PEPTIDE, C-DELTA LINKING',\r\n  'L-PEPTIDE COOH CARBOXY TERMINUS', 'L-PEPTIDE NH3 AMINO TERMINUS', 'L-PEPTIDE LINKING',\r\n  'PEPTIDE LINKING', 'PEPTIDE-LIKE'\r\n]\r\nexport const ChemCompRna = [\r\n  'RNA OH 3 PRIME TERMINUS', 'RNA OH 5 PRIME TERMINUS', 'RNA LINKING'\r\n]\r\nexport const ChemCompDna = [\r\n  'DNA OH 3 PRIME TERMINUS', 'DNA OH 5 PRIME TERMINUS', 'DNA LINKING',\r\n  'L-DNA LINKING', 'L-RNA LINKING'\r\n]\r\nexport const ChemCompSaccharide = [\r\n  'D-SACCHARIDE', 'D-SACCHARIDE 1,4 AND 1,4 LINKING', 'D-SACCHARIDE 1,4 AND 1,6 LINKING',\r\n  'L-SACCHARIDE', 'L-SACCHARIDE 1,4 AND 1,4 LINKING', 'L-SACCHARIDE 1,4 AND 1,6 LINKING',\r\n  'SACCHARIDE'\r\n]\r\nexport const ChemCompOther = [\r\n  'OTHER'\r\n]\r\nexport const ChemCompNonPolymer = [\r\n  'NON-POLYMER'\r\n]\r\nexport const ChemCompHetero = ChemCompNonPolymer.concat(ChemCompOther, ChemCompSaccharide)\r\n\r\n// secondary structure\r\nexport const SecStrucHelix = [ 'h', 'g', 'i' ]\r\nexport const SecStrucSheet = [ 'e', 'b' ]\r\nexport const SecStrucTurn = [ 's', 't', 'l', '' ]\r\n\r\nexport const AtomicNumbers: { [e: string]: number | undefined } = {\r\n  'H': 1, 'D': 1, 'T': 1, 'HE': 2, 'LI': 3, 'BE': 4, 'B': 5, 'C': 6, 'N': 7, 'O': 8, 'F': 9, 'NE': 10, 'NA': 11, 'MG': 12, 'AL': 13, 'SI': 14, 'P': 15, 'S': 16, 'CL': 17, 'AR': 18, 'K': 19, 'CA': 20, 'SC': 21, 'TI': 22, 'V': 23, 'CR': 24, 'MN': 25, 'FE': 26, 'CO': 27, 'NI': 28, 'CU': 29, 'ZN': 30, 'GA': 31, 'GE': 32, 'AS': 33, 'SE': 34, 'BR': 35, 'KR': 36, 'RB': 37, 'SR': 38, 'Y': 39, 'ZR': 40, 'NB': 41, 'MO': 42, 'TC': 43, 'RU': 44, 'RH': 45, 'PD': 46, 'AG': 47, 'CD': 48, 'IN': 49, 'SN': 50, 'SB': 51, 'TE': 52, 'I': 53, 'XE': 54, 'CS': 55, 'BA': 56, 'LA': 57, 'CE': 58, 'PR': 59, 'ND': 60, 'PM': 61, 'SM': 62, 'EU': 63, 'GD': 64, 'TB': 65, 'DY': 66, 'HO': 67, 'ER': 68, 'TM': 69, 'YB': 70, 'LU': 71, 'HF': 72, 'TA': 73, 'W': 74, 'RE': 75, 'OS': 76, 'IR': 77, 'PT': 78, 'AU': 79, 'HG': 80, 'TL': 81, 'PB': 82, 'BI': 83, 'PO': 84, 'AT': 85, 'RN': 86, 'FR': 87, 'RA': 88, 'AC': 89, 'TH': 90, 'PA': 91, 'U': 92, 'NP': 93, 'PU': 94, 'AM': 95, 'CM': 96, 'BK': 97, 'CF': 98, 'ES': 99, 'FM': 100, 'MD': 101, 'NO': 102, 'LR': 103, 'RF': 104, 'DB': 105, 'SG': 106, 'BH': 107, 'HS': 108, 'MT': 109, 'DS': 110, 'RG': 111, 'CN': 112, 'NH': 113, 'FL': 114, 'MC': 115, 'LV': 116, 'TS': 117, 'OG': 118\r\n}\r\nexport const DefaultAtomicNumber = 0\r\n\r\n/**\r\n * Enum mapping element to atomic number\r\n */\r\nexport const enum Elements {\r\n  H = 1, D = 1, T = 1, HE = 2, LI = 3, BE = 4, B = 5, C = 6, N = 7, O = 8, F = 9, NE = 10, NA = 11, MG = 12, AL = 13, SI = 14, P = 15, S = 16, CL = 17, AR = 18, K = 19, CA = 20, SC = 21, TI = 22, V = 23, CR = 24, MN = 25, FE = 26, CO = 27, NI = 28, CU = 29, ZN = 30, GA = 31, GE = 32, AS = 33, SE = 34, BR = 35, KR = 36, RB = 37, SR = 38, Y = 39, ZR = 40, NB = 41, MO = 42, TC = 43, RU = 44, RH = 45, PD = 46, AG = 47, CD = 48, IN = 49, SN = 50, SB = 51, TE = 52, I = 53, XE = 54, CS = 55, BA = 56, LA = 57, CE = 58, PR = 59, ND = 60, PM = 61, SM = 62, EU = 63, GD = 64, TB = 65, DY = 66, HO = 67, ER = 68, TM = 69, YB = 70, LU = 71, HF = 72, TA = 73, W = 74, RE = 75, OS = 76, IR = 77, PT = 78, AU = 79, HG = 80, TL = 81, PB = 82, BI = 83, PO = 84, AT = 85, RN = 86, FR = 87, RA = 88, AC = 89, TH = 90, PA = 91, U = 92, NP = 93, PU = 94, AM = 95, CM = 96, BK = 97, CF = 98, ES = 99, FM = 100, MD = 101, NO = 102, LR = 103, RF = 104, DB = 105, SG = 106, BH = 107, HS = 108, MT = 109, DS = 110, RG = 111, CN = 112, NH = 113, FL = 114, MC = 115, LV = 116, TS = 117, OG = 118\r\n}\r\n\r\n// https://doi.org/10.1515/pac-2015-0305 (table 2, 3, and 4)\r\nexport const AtomWeights: { [e: number]: number | undefined } = {\r\n  1: 1.008, 2: 4.0026, 3: 6.94, 4: 9.0122, 5: 10.81, 6: 10.81, 7: 14.007, 8: 15.999, 9: 18.998, 10: 20.180, 11: 22.990, 12: 24.305, 13: 26.982, 14: 28.085, 15: 30.974, 16: 32.06, 17: 35.45, 18: 39.948, 19: 39.098, 20: 40.078, 21: 44.956, 22: 47.867, 23: 50.942, 24: 51.996, 25: 54.938, 26: 55.845, 27: 58.933, 28: 58.693, 29: 63.546, 30: 65.38, 31: 69.723, 32: 72.630, 33: 74.922, 34: 78.971, 35: 79.904, 36: 83.798, 37: 85.468, 38: 87.62, 39: 88.906, 40: 91.224, 41: 92.906, 42: 95.95, 43: 96.906, 44: 101.07, 45: 102.91, 46: 106.42, 47: 107.87, 48: 112.41, 49: 114.82, 50: 118.71, 51: 121.76, 52: 127.60, 53: 127.60, 54: 131.29, 55: 132.91, 56: 137.33, 57: 138.91, 58: 140.12, 59: 140.91, 60: 144.24, 61: 144.912, 62: 150.36, 63: 151.96, 64: 157.25, 65: 158.93, 66: 162.50, 67: 164.93, 68: 167.26, 69: 168.93, 70: 173.05, 71: 174.97, 72: 178.49, 73: 180.95, 74: 183.84, 75: 186.21, 76: 190.23, 77: 192.22, 78: 195.08, 79: 196.97, 80: 200.59, 81: 204.38, 82: 207.2, 83: 208.98, 84: 1.97, 85: 2.02, 86: 2.2, 87: 3.48, 88: 2.83, 89: 2.0, 90: 232.04, 91: 231.04, 92: 238.03, 93: 237.048, 94: 244.064, 95: 243.061, 96: 247.070, 97: 247.070, 98: 251.079, 99: 252.083, 100: 257.095, 101: 258.098, 102: 259.101, 103: 262.110, 104: 267.122, 105: 270.131, 106: 271.134, 107: 270.133, 108: 270.134, 109: 278.156, 110: 281.165, 111: 281.166, 112: 285.177, 113: 286.182, 114: 289.190, 115: 289.194, 116: 293.204, 117: 293.208, 118: 294.214\r\n}\r\nexport const DefaultAtomWeight = 10.81  // C\r\n\r\n// http://dx.doi.org/10.1021/jp8111556 (or 2.0)\r\nexport const VdwRadii: { [e: number]: number | undefined } = {\r\n  1: 1.1, 2: 1.4, 3: 1.81, 4: 1.53, 5: 1.92, 6: 1.7, 7: 1.55, 8: 1.52, 9: 1.47, 10: 1.54, 11: 2.27, 12: 1.73, 13: 1.84, 14: 2.1, 15: 1.8, 16: 1.8, 17: 1.75, 18: 1.88, 19: 2.75, 20: 2.31, 21: 2.3, 22: 2.15, 23: 2.05, 24: 2.05, 25: 2.05, 26: 2.05, 27: 2.0, 28: 2.0, 29: 2.0, 30: 2.1, 31: 1.87, 32: 2.11, 33: 1.85, 34: 1.9, 35: 1.83, 36: 2.02, 37: 3.03, 38: 2.49, 39: 2.4, 40: 2.3, 41: 2.15, 42: 2.1, 43: 2.05, 44: 2.05, 45: 2.0, 46: 2.05, 47: 2.1, 48: 2.2, 49: 2.2, 50: 1.93, 51: 2.17, 52: 2.06, 53: 1.98, 54: 2.16, 55: 3.43, 56: 2.68, 57: 2.5, 58: 2.48, 59: 2.47, 60: 2.45, 61: 2.43, 62: 2.42, 63: 2.4, 64: 2.38, 65: 2.37, 66: 2.35, 67: 2.33, 68: 2.32, 69: 2.3, 70: 2.28, 71: 2.27, 72: 2.25, 73: 2.2, 74: 2.1, 75: 2.05, 76: 2.0, 77: 2.0, 78: 2.05, 79: 2.1, 80: 2.05, 81: 1.96, 82: 2.02, 83: 2.07, 84: 1.97, 85: 2.02, 86: 2.2, 87: 3.48, 88: 2.83, 89: 2.0, 90: 2.4, 91: 2.0, 92: 2.3, 93: 2.0, 94: 2.0, 95: 2.0, 96: 2.0, 97: 2.0, 98: 2.0, 99: 2.0, 100: 2.0, 101: 2.0, 102: 2.0, 103: 2.0, 104: 2.0, 105: 2.0, 106: 2.0, 107: 2.0, 108: 2.0, 109: 2.0, 110: 2.0, 111: 2.0, 112: 2.0, 113: 2.0, 114: 2.0, 115: 2.0, 116: 2.0, 117: 2.0, 118: 2.0\r\n}\r\nexport const DefaultVdwRadius = 2.0  // C\r\n\r\n// Peter Rose (peter.rose@rcsb.org), private communication, average accross PDB\r\nexport const ResidueRadii: { [k: string]: number } = {\r\n  '2QY': 6.58,\r\n  'CY0': 11.98,\r\n  '2QZ': 2.52,\r\n  'CY1': 6.59,\r\n  'HHK': 5.11,\r\n  'CXM': 4.69,\r\n  'HHI': 4.58,\r\n  'CY4': 4.57,\r\n  'S12': 18.57,\r\n  'CY3': 2.79,\r\n  'C5C': 5.35,\r\n  'PFX': 11.84,\r\n  '2R3': 6.94,\r\n  '2R1': 3.78,\r\n  'ILX': 4.99,\r\n  '32S': 5.68,\r\n  'BTK': 8.59,\r\n  '32T': 5.72,\r\n  'FAK': 9.8,\r\n  'B27': 2.78,\r\n  'ILM': 3.84,\r\n  'C4R': 5.63,\r\n  '32L': 6.75,\r\n  'SYS': 3.01,\r\n  '1MH': 5.04,\r\n  'ILE': 3.65,\r\n  'YNM': 6.39,\r\n  '2RX': 4.91,\r\n  'B3A': 2.48,\r\n  'GEE': 4.76,\r\n  '7MN': 7.34,\r\n  'B3E': 5.4,\r\n  'ARG': 6.33,\r\n  '200': 6.89,\r\n  'HIP': 5.47,\r\n  'HIA': 4.64,\r\n  'B3K': 5.89,\r\n  'HIC': 5.76,\r\n  'B3L': 4.96,\r\n  'B3M': 5.07,\r\n  'ARM': 6.86,\r\n  'ARO': 7.35,\r\n  'AR4': 8.42,\r\n  'PG1': 10.67,\r\n  'YOF': 6.44,\r\n  'IML': 3.74,\r\n  'SXE': 6.65,\r\n  'HIQ': 7.98,\r\n  'PFF': 6.31,\r\n  'HIS': 4.52,\r\n  '0TD': 3.62,\r\n  'C3Y': 5.24,\r\n  '1OP': 11.55,\r\n  '02Y': 4.77,\r\n  '02V': 4.83,\r\n  'ASB': 5.59,\r\n  '30V': 8.53,\r\n  'S2P': 4.81,\r\n  'ASP': 3.55,\r\n  'ASN': 3.54,\r\n  '2OR': 6.91,\r\n  'QMM': 6.13,\r\n  '2P0': 8.52,\r\n  'ASL': 5.36,\r\n  'HFA': 5.14,\r\n  '5PG': 5.69,\r\n  'B3X': 4.38,\r\n  'AS9': 4.1,\r\n  'ARV': 7.59,\r\n  'B3U': 6.06,\r\n  'S2C': 7.54,\r\n  'B3T': 3.34,\r\n  '175': 5.64,\r\n  'GFT': 8.18,\r\n  'HG7': 6.8,\r\n  'B3Q': 4.48,\r\n  'ASA': 3.64,\r\n  '02K': 2.94,\r\n  'B3Y': 7.45,\r\n  'PHD': 5.35,\r\n  'C6C': 6.42,\r\n  'BUC': 5.8,\r\n  'HGL': 8.07,\r\n  'PHE': 5.06,\r\n  '03Y': 2.6,\r\n  'PHA': 5.11,\r\n  'OCY': 5.0,\r\n  '4PH': 6.79,\r\n  '5OH': 4.7,\r\n  '31Q': 10.46,\r\n  'BTR': 7.98,\r\n  '3PX': 4.7,\r\n  '1PA': 8.07,\r\n  'ASX': 3.54,\r\n  'IOR': 7.23,\r\n  '03E': 3.38,\r\n  'PHL': 5.17,\r\n  'KWS': 5.09,\r\n  'PHI': 7.12,\r\n  'NAL': 7.22,\r\n  'S1H': 19.21,\r\n  '2ML': 3.86,\r\n  '2MR': 7.35,\r\n  'GHG': 4.83,\r\n  'TYY': 6.54,\r\n  '2MT': 3.67,\r\n  '56A': 13.01,\r\n  'SVA': 5.46,\r\n  'TYX': 8.31,\r\n  'TYS': 8.59,\r\n  'TYR': 6.38,\r\n  'TYQ': 6.43,\r\n  'HLU': 3.99,\r\n  'MYK': 19.47,\r\n  'TYO': 7.71,\r\n  'HLX': 4.98,\r\n  'TYN': 9.87,\r\n  'TYJ': 6.25,\r\n  'TYI': 6.49,\r\n  'LYH': 5.13,\r\n  'LYF': 12.19,\r\n  'SUN': 6.73,\r\n  'LYR': 18.28,\r\n  'TYB': 6.46,\r\n  '11W': 14.39,\r\n  'LYS': 5.54,\r\n  'LYN': 4.8,\r\n  '11Q': 4.85,\r\n  'LYO': 4.71,\r\n  'LYZ': 1.76,\r\n  'TXY': 6.44,\r\n  'MYN': 4.71,\r\n  'TY5': 10.6,\r\n  'HMR': 5.09,\r\n  '01W': 8.55,\r\n  'LYX': 13.36,\r\n  'TY8': 7.22,\r\n  'TY2': 6.49,\r\n  'KYN': 6.18,\r\n  'KYQ': 9.75,\r\n  'CZZ': 5.14,\r\n  'IIL': 3.81,\r\n  'HNC': 10.41,\r\n  'OIC': 4.62,\r\n  'LVN': 2.89,\r\n  'QIL': 3.84,\r\n  'JJL': 8.3,\r\n  'VAH': 3.88,\r\n  'JJJ': 7.5,\r\n  'JJK': 7.43,\r\n  'VAD': 2.56,\r\n  'CYW': 4.65,\r\n  '0QL': 5.72,\r\n  '143': 8.22,\r\n  'SVX': 7.04,\r\n  'CYJ': 11.64,\r\n  'SVY': 7.1,\r\n  'SVZ': 6.6,\r\n  'CYG': 8.03,\r\n  'CYF': 13.54,\r\n  'SVV': 5.09,\r\n  'GL3': 2.72,\r\n  '8SP': 14.26,\r\n  'CYS': 2.78,\r\n  '004': 4.33,\r\n  'CYR': 10.33,\r\n  'PLJ': 3.71,\r\n  'EXY': 7.37,\r\n  'HL2': 3.75,\r\n  'A5N': 5.21,\r\n  'CYQ': 5.67,\r\n  'CZ2': 5.16,\r\n  'LWY': 4.12,\r\n  'PM3': 8.78,\r\n  'OHS': 6.98,\r\n  'OHI': 5.35,\r\n  '3TY': 8.42,\r\n  'CYD': 8.55,\r\n  'DYS': 7.87,\r\n  'DAH': 6.47,\r\n  '4IK': 11.81,\r\n  '3EG': 3.66,\r\n  'AYA': 3.65,\r\n  '4IN': 6.31,\r\n  'DAB': 3.48,\r\n  '4HT': 6.03,\r\n  'RGL': 7.03,\r\n  'DAM': 2.49,\r\n  'NFA': 5.04,\r\n  'WFP': 6.07,\r\n  '2JC': 2.97,\r\n  'HAR': 7.55,\r\n  '2JG': 5.67,\r\n  'MH6': 1.72,\r\n  '2JF': 9.13,\r\n  '3FG': 4.96,\r\n  'MGN': 4.84,\r\n  'AZH': 5.36,\r\n  'AZK': 6.03,\r\n  'ZBZ': 7.79,\r\n  'TBG': 2.58,\r\n  'VAL': 2.51,\r\n  'MGG': 7.34,\r\n  'AZS': 5.61,\r\n  'FHL': 9.75,\r\n  '2JH': 4.56,\r\n  'IEL': 7.07,\r\n  'FHO': 6.75,\r\n  'DA2': 7.79,\r\n  'FH7': 6.99,\r\n  'ME0': 4.52,\r\n  '3GL': 4.84,\r\n  'MDO': 5.03,\r\n  'AZY': 7.37,\r\n  'A8E': 3.76,\r\n  'ZCL': 6.71,\r\n  'MDH': 2.58,\r\n  'LA2': 14.07,\r\n  '4FW': 6.1,\r\n  'YCM': 5.32,\r\n  'MDF': 4.95,\r\n  'YCP': 3.01,\r\n  'TEF': 8.63,\r\n  'FGP': 4.34,\r\n  'UF0': 19.72,\r\n  'XCN': 4.57,\r\n  'FGL': 2.56,\r\n  'MF3': 6.37,\r\n  'MEQ': 5.13,\r\n  'LAA': 3.23,\r\n  'IGL': 5.52,\r\n  'MET': 4.49,\r\n  'NIY': 6.81,\r\n  'QCS': 5.18,\r\n  'TCQ': 8.56,\r\n  'MEN': 4.33,\r\n  '4HL': 8.79,\r\n  'MEA': 4.95,\r\n  'EFC': 5.28,\r\n  'LAL': 2.41,\r\n  '2HF': 5.52,\r\n  'KBE': 5.64,\r\n  'OCS': 3.94,\r\n  'CAF': 5.46,\r\n  'NC1': 11.4,\r\n  'NBQ': 9.82,\r\n  'CAB': 4.19,\r\n  'MBQ': 9.55,\r\n  '193': 7.38,\r\n  '192': 2.44,\r\n  '0WZ': 7.61,\r\n  'CAS': 5.35,\r\n  'NB8': 11.98,\r\n  'OBS': 11.71,\r\n  '1AC': 2.42,\r\n  'PCA': 3.48,\r\n  'MCL': 9.73,\r\n  'LBY': 7.75,\r\n  'GAU': 4.67,\r\n  'PBF': 9.75,\r\n  'MCG': 6.46,\r\n  'DDE': 6.86,\r\n  '19W': 3.94,\r\n  'MD5': 9.33,\r\n  'MD6': 6.44,\r\n  'MD3': 8.41,\r\n  'MCS': 7.56,\r\n  'OBF': 3.64,\r\n  'UAL': 4.68,\r\n  'PAT': 6.05,\r\n  'IAM': 8.88,\r\n  'PAQ': 8.77,\r\n  'FDL': 9.49,\r\n  'NCB': 3.45,\r\n  'LCK': 9.81,\r\n  'DDZ': 2.52,\r\n  '2FM': 5.54,\r\n  'IAR': 6.77,\r\n  'OAS': 4.8,\r\n  'HBN': 8.8,\r\n  'TA4': 5.55,\r\n  '1C3': 7.43,\r\n  'ECX': 5.51,\r\n  'PF5': 6.28,\r\n  'RE3': 5.29,\r\n  'FCL': 6.25,\r\n  'ECC': 4.79,\r\n  'LDH': 7.06,\r\n  'NCY': 2.91,\r\n  'CCS': 4.58,\r\n  'PEC': 6.54,\r\n  '2CO': 4.45,\r\n  'LE1': 2.72,\r\n  'HCM': 5.53,\r\n  '07O': 8.05,\r\n  'HCL': 4.96,\r\n  'NEP': 6.94,\r\n  'PE1': 8.01,\r\n  'LEF': 4.37,\r\n  'FC0': 5.18,\r\n  'LED': 4.34,\r\n  'HCS': 4.09,\r\n  'DBU': 2.49,\r\n  'RE0': 5.53,\r\n  'LEN': 3.82,\r\n  '1E3': 8.71,\r\n  'BB9': 2.56,\r\n  'BB8': 5.14,\r\n  'PCS': 5.05,\r\n  'BB7': 4.56,\r\n  'BB6': 2.62,\r\n  'LEU': 3.83,\r\n  'DBZ': 7.08,\r\n  'LET': 11.29,\r\n  'DBY': 6.46,\r\n  'ICY': 7.76,\r\n  'MAA': 2.4,\r\n  'CGA': 7.91,\r\n  '5CS': 8.34,\r\n  'UGY': 3.7,\r\n  'LGY': 11.71,\r\n  'N10': 8.96,\r\n  'AAR': 6.39,\r\n  'FT6': 7.5,\r\n  'MOD': 12.62,\r\n  '5CW': 7.21,\r\n  'PVH': 4.58,\r\n  'BBC': 6.42,\r\n  'YYA': 7.3,\r\n  'O12': 14.08,\r\n  'NOT': 7.15,\r\n  'KGC': 9.88,\r\n  'MP4': 5.86,\r\n  '0CS': 4.07,\r\n  'MP8': 3.75,\r\n  'VLL': 2.54,\r\n  'VLM': 2.51,\r\n  'BCS': 8.03,\r\n  'MNL': 4.9,\r\n  'AA4': 4.47,\r\n  'SAC': 3.49,\r\n  'BCX': 2.99,\r\n  '3CF': 6.47,\r\n  'SAH': 11.7,\r\n  'NNH': 6.86,\r\n  'CGU': 4.71,\r\n  'SIB': 12.41,\r\n  'TLY': 8.78,\r\n  'SIC': 4.81,\r\n  'VMS': 8.82,\r\n  'TMD': 6.76,\r\n  'MMO': 6.53,\r\n  'PXU': 2.46,\r\n  '4AW': 6.22,\r\n  'OTH': 3.6,\r\n  'DLS': 6.84,\r\n  'MME': 4.99,\r\n  'DM0': 6.99,\r\n  '0FL': 2.76,\r\n  'SBL': 8.96,\r\n  'CDV': 3.72,\r\n  'OTY': 6.51,\r\n  'PYA': 7.75,\r\n  '2AS': 3.57,\r\n  'DMH': 4.92,\r\n  'ELY': 7.42,\r\n  'GVL': 9.6,\r\n  'FVA': 2.9,\r\n  'SAR': 2.48,\r\n  '4BF': 6.92,\r\n  'EME': 4.69,\r\n  'CDE': 2.51,\r\n  '3AR': 7.86,\r\n  '3AH': 9.11,\r\n  'AC5': 2.44,\r\n  'FTR': 6.08,\r\n  'MLL': 3.76,\r\n  'NPH': 11.66,\r\n  'NPI': 6.9,\r\n  'DMT': 6.67,\r\n  'PYX': 11.3,\r\n  'MLE': 3.87,\r\n  'PYL': 9.67,\r\n  'ZZU': 6.94,\r\n  'H5M': 3.61,\r\n  'SCH': 4.46,\r\n  'DMK': 3.52,\r\n  'FTY': 9.07,\r\n  '2AG': 3.7,\r\n  'ABA': 2.55,\r\n  'ZZJ': 2.44,\r\n  'MLZ': 6.8,\r\n  'MLY': 6.88,\r\n  'KCX': 7.28,\r\n  'ZZD': 8.16,\r\n  '3A5': 5.37,\r\n  'LHC': 7.75,\r\n  '9AT': 2.47,\r\n  'OZT': 3.4,\r\n  'THO': 2.62,\r\n  'THR': 2.5,\r\n  'DFI': 3.93,\r\n  'MKD': 6.42,\r\n  '4CY': 4.6,\r\n  'SDP': 6.07,\r\n  'DFO': 3.94,\r\n  '0A0': 3.45,\r\n  '4DB': 9.73,\r\n  'ML3': 6.26,\r\n  'BG1': 8.02,\r\n  'SD4': 4.57,\r\n  'THC': 3.8,\r\n  'SCS': 5.48,\r\n  'TH5': 4.65,\r\n  'BFD': 5.33,\r\n  'AEI': 6.34,\r\n  'TH6': 2.85,\r\n  'SCY': 4.53,\r\n  'TIS': 4.81,\r\n  'SEE': 4.53,\r\n  'BHD': 3.48,\r\n  'SEB': 8.18,\r\n  'SEC': 2.96,\r\n  'SEP': 4.8,\r\n  'CLH': 7.13,\r\n  'TIH': 5.02,\r\n  'CLG': 13.62,\r\n  'SEN': 6.43,\r\n  'XXA': 7.34,\r\n  'SEL': 2.46,\r\n  'SE7': 4.19,\r\n  '4CF': 7.72,\r\n  'G8M': 3.57,\r\n  'BH2': 3.51,\r\n  'UN2': 3.22,\r\n  'VR0': 10.51,\r\n  'MK8': 4.76,\r\n  'DHA': 2.32,\r\n  'LMQ': 4.69,\r\n  'SFE': 5.01,\r\n  'AHB': 3.47,\r\n  'OXX': 7.05,\r\n  'BIF': 9.63,\r\n  'IZO': 4.47,\r\n  'NMM': 8.25,\r\n  '0BN': 7.0,\r\n  'HZP': 3.12,\r\n  'NMC': 4.23,\r\n  'DHL': 2.69,\r\n  '9DS': 9.29,\r\n  'SER': 2.41,\r\n  'CHG': 4.2,\r\n  'MIR': 6.54,\r\n  'AGQ': 7.79,\r\n  'SET': 2.46,\r\n  'MIS': 6.32,\r\n  '4FB': 3.08,\r\n  '0AR': 8.46,\r\n  'LME': 3.99,\r\n  'FZN': 24.42,\r\n  'AGT': 9.04,\r\n  'IYR': 6.46,\r\n  '9DN': 9.31,\r\n  'CHP': 5.75,\r\n  'UNK': 1.64,\r\n  'XX1': 9.92,\r\n  'AGM': 6.57,\r\n  '0AH': 5.78,\r\n  'LLP': 10.22,\r\n  '0AF': 6.72,\r\n  '4DP': 9.28,\r\n  'HYP': 2.25,\r\n  'DIR': 5.8,\r\n  'LLY': 8.71,\r\n  '0AK': 6.11,\r\n  'NLE': 4.67,\r\n  'OYL': 6.42,\r\n  'WVL': 4.69,\r\n  '0A8': 8.1,\r\n  'NLY': 6.37,\r\n  'MHO': 4.89,\r\n  'VOL': 2.55,\r\n  '0A1': 7.1,\r\n  'MHL': 3.92,\r\n  'NLP': 4.81,\r\n  'NLQ': 4.65,\r\n  'MHW': 2.74,\r\n  'BIL': 4.7,\r\n  'NLO': 4.8,\r\n  'MHU': 7.51,\r\n  'XW1': 9.36,\r\n  'LLO': 10.13,\r\n  'SGB': 6.88,\r\n  'MHV': 3.6,\r\n  'MHS': 4.51,\r\n  '0A9': 5.17,\r\n  '0LF': 9.96,\r\n  'HT7': 6.82,\r\n  'X2W': 6.6,\r\n  'YPZ': 9.38,\r\n  'I58': 6.73,\r\n  'FLA': 2.4,\r\n  'M0H': 4.83,\r\n  'HSL': 2.46,\r\n  'FLE': 6.17,\r\n  'KOR': 10.1,\r\n  '1VR': 3.89,\r\n  'HSO': 4.56,\r\n  'TTS': 9.41,\r\n  'RVX': 7.01,\r\n  'TTQ': 7.71,\r\n  'H14': 5.27,\r\n  'HTI': 7.8,\r\n  'ONH': 6.14,\r\n  'LP6': 8.58,\r\n  'ONL': 4.83,\r\n  'AHH': 5.06,\r\n  'HS8': 7.4,\r\n  'HS9': 4.71,\r\n  'BL2': 5.82,\r\n  'AHP': 5.26,\r\n  '6HN': 7.34,\r\n  'HRP': 5.46,\r\n  'POM': 3.6,\r\n  'WPA': 5.11,\r\n  '2ZC': 4.29,\r\n  'CPC': 2.65,\r\n  'AIB': 2.4,\r\n  'XSN': 3.47,\r\n  'M2S': 5.28,\r\n  'GND': 6.67,\r\n  'GNC': 4.6,\r\n  'MVA': 2.56,\r\n  'OLZ': 5.32,\r\n  'M2L': 6.15,\r\n  'TRF': 6.69,\r\n  'NZH': 7.66,\r\n  'SRZ': 5.27,\r\n  'OLD': 10.47,\r\n  'CME': 5.86,\r\n  'CMH': 5.3,\r\n  'ALA': 2.38,\r\n  'TRQ': 7.36,\r\n  'PPN': 7.24,\r\n  'TRP': 6.07,\r\n  'TRO': 5.82,\r\n  'TRN': 5.95,\r\n  'NYS': 8.1,\r\n  'ALC': 5.26,\r\n  'U3X': 11.7,\r\n  'HVA': 2.58,\r\n  'TS9': 3.92,\r\n  'TRX': 7.27,\r\n  'TRW': 11.8,\r\n  'LPL': 7.51,\r\n  'GMA': 4.4,\r\n  'OMT': 5.07,\r\n  'CMT': 3.54,\r\n  'GME': 4.66,\r\n  'NYB': 6.07,\r\n  'PR3': 5.12,\r\n  'LPD': 2.48,\r\n  'GLU': 4.49,\r\n  '1X6': 6.84,\r\n  'LPG': 2.39,\r\n  'GLX': 4.52,\r\n  'PR4': 4.52,\r\n  'CML': 6.16,\r\n  'FME': 4.52,\r\n  'HTR': 6.48,\r\n  'PR7': 4.66,\r\n  'Z3E': 7.2,\r\n  'GLZ': 2.39,\r\n  'BMT': 6.37,\r\n  'WRP': 8.16,\r\n  'GLY': 2.37,\r\n  'OMY': 6.11,\r\n  'MTY': 5.46,\r\n  'OMX': 6.15,\r\n  'GLN': 4.46,\r\n  '2XA': 8.25,\r\n  '28X': 7.84,\r\n  '7JA': 9.46,\r\n  'FLT': 9.65,\r\n  'GLJ': 3.7,\r\n  'OMH': 5.26,\r\n  'TSY': 4.26,\r\n  'PRV': 4.28,\r\n  'CS4': 11.21,\r\n  'DOA': 12.33,\r\n  '23P': 5.42,\r\n  'CS3': 8.24,\r\n  '6CL': 6.47,\r\n  'PRR': 5.58,\r\n  'KST': 11.58,\r\n  'CS1': 7.23,\r\n  'PRS': 2.63,\r\n  'ZYJ': 11.4,\r\n  'IT1': 9.75,\r\n  'UU5': 4.98,\r\n  'ESB': 6.69,\r\n  'UU4': 2.49,\r\n  'ESC': 5.65,\r\n  'LSO': 10.58,\r\n  'ZYK': 11.45,\r\n  '9NV': 8.99,\r\n  '23F': 5.27,\r\n  'ORN': 4.25,\r\n  'HOX': 6.61,\r\n  'CSD': 3.95,\r\n  'FP9': 3.03,\r\n  'DO2': 4.44,\r\n  'SLL': 11.53,\r\n  'P3Q': 9.54,\r\n  'ORQ': 6.04,\r\n  'MSL': 5.21,\r\n  'DNP': 2.45,\r\n  'CSB': 3.51,\r\n  'WLU': 4.24,\r\n  'CSA': 5.7,\r\n  'MT2': 5.51,\r\n  'CSO': 3.53,\r\n  'TPO': 4.73,\r\n  'MSP': 13.11,\r\n  '23S': 6.09,\r\n  'MSO': 4.96,\r\n  'PRO': 2.41,\r\n  'TPL': 5.41,\r\n  'DNS': 8.79,\r\n  'CSK': 3.91,\r\n  'Z70': 7.4,\r\n  'CSJ': 7.51,\r\n  'DNW': 7.97,\r\n  'PRK': 9.15,\r\n  'GSU': 11.81,\r\n  'LTA': 6.57,\r\n  'HPE': 6.63,\r\n  'TPQ': 6.48,\r\n  'PRJ': 5.26,\r\n  'PSW': 4.65,\r\n  'L3O': 3.89,\r\n  'CSU': 4.89,\r\n  'ALY': 7.38,\r\n  'M3L': 7.12,\r\n  'CSW': 3.68,\r\n  'XPR': 7.68,\r\n  'D4P': 5.66,\r\n  'FOE': 8.17,\r\n  'SLZ': 5.69,\r\n  'CSP': 5.26,\r\n  'TQI': 7.68,\r\n  'ALT': 2.72,\r\n  'CSR': 5.42,\r\n  'CSS': 3.61,\r\n  'M3R': 7.18,\r\n  'ALO': 2.57,\r\n  'R4K': 4.67,\r\n  'SMF': 9.0,\r\n  'MSA': 2.73,\r\n  'SMC': 3.39,\r\n  'CSX': 3.47,\r\n  'SME': 4.8,\r\n  'ETA': 2.4,\r\n  'CSZ': 3.6,\r\n  '22G': 8.8,\r\n  'MSE': 4.62,\r\n  'ALN': 6.16,\r\n  'PSH': 7.26,\r\n  'CTE': 7.27,\r\n  'DON': 6.72,\r\n  'CTH': 3.45,\r\n  'U2X': 11.54,\r\n  '6CW': 7.56,\r\n  'TQZ': 6.97,\r\n  '3YM': 6.52,\r\n  'OSE': 4.49,\r\n  '2VA': 9.82,\r\n  'TQQ': 7.76,\r\n  'NRG': 8.35,\r\n  'BPE': 7.24,\r\n  'F2F': 6.25,\r\n  '1TQ': 8.58,\r\n  'I2M': 3.13,\r\n  'NVA': 3.76,\r\n  'R1A': 8.2,\r\n  'QPA': 6.95,\r\n  'C1X': 11.63,\r\n  'FRD': 5.05,\r\n  'HR7': 6.98,\r\n  'SNC': 3.93,\r\n  'QPH': 5.15,\r\n  '26B': 8.39,\r\n  'DPQ': 6.54,\r\n  'DPP': 2.51,\r\n  '2TY': 8.65,\r\n  'TNR': 6.88,\r\n  'PTH': 8.35,\r\n  'DPL': 3.58,\r\n  'APK': 8.79,\r\n  '1TY': 8.84,\r\n  'HRG': 7.36,\r\n  'PTM': 8.74,\r\n  '1U8': 3.62,\r\n  'PTR': 8.64,\r\n  'LVG': 3.01,\r\n  '6FL': 4.85,\r\n  'SOC': 4.05,\r\n  'KPI': 9.79,\r\n  'IPG': 2.91,\r\n  'P2Y': 2.51,\r\n  'N2C': 3.55,\r\n  'T0I': 7.34,\r\n  'MPH': 5.29,\r\n  'R2T': 4.71,\r\n  'TOX': 6.78,\r\n  'P2Q': 9.8,\r\n  'GPL': 10.77,\r\n  'MPJ': 5.07,\r\n  'F2Y': 6.2,\r\n  'T11': 8.58,\r\n  '9NR': 9.33,\r\n  'FPR': 8.85,\r\n  '9NF': 8.93,\r\n  'KPY': 10.17,\r\n  '9NE': 9.77,\r\n  'TOQ': 7.5,\r\n  'MPQ': 4.2,\r\n  'FPK': 3.08,\r\n  'HQA': 7.25,\r\n  'SOY': 10.94\r\n}\r\nexport const DefaultResidueRadius = 5.0\r\n\r\n// http://dx.doi.org/10.1039/b801115j (or 1.6)\r\nexport const CovalentRadii: { [e: number]: number | undefined } = {\r\n  1: 0.31, 2: 0.28, 3: 1.28, 4: 0.96, 5: 0.84, 6: 0.76, 7: 0.71, 8: 0.66, 9: 0.57, 10: 0.58, 11: 1.66, 12: 1.41, 13: 1.21, 14: 1.11, 15: 1.07, 16: 1.05, 17: 1.02, 18: 1.06, 19: 2.03, 20: 1.76, 21: 1.7, 22: 1.6, 23: 1.53, 24: 1.39, 25: 1.39, 26: 1.32, 27: 1.26, 28: 1.24, 29: 1.32, 30: 1.22, 31: 1.22, 32: 1.2, 33: 1.19, 34: 1.2, 35: 1.2, 36: 1.16, 37: 2.2, 38: 1.95, 39: 1.9, 40: 1.75, 41: 1.64, 42: 1.54, 43: 1.47, 44: 1.46, 45: 1.42, 46: 1.39, 47: 1.45, 48: 1.44, 49: 1.42, 50: 1.39, 51: 1.39, 52: 1.38, 53: 1.39, 54: 1.4, 55: 2.44, 56: 2.15, 57: 2.07, 58: 2.04, 59: 2.03, 60: 2.01, 61: 1.99, 62: 1.98, 63: 1.98, 64: 1.96, 65: 1.94, 66: 1.92, 67: 1.92, 68: 1.89, 69: 1.9, 70: 1.87, 71: 1.87, 72: 1.75, 73: 1.7, 74: 1.62, 75: 1.51, 76: 1.44, 77: 1.41, 78: 1.36, 79: 1.36, 80: 1.32, 81: 1.45, 82: 1.46, 83: 1.48, 84: 1.4, 85: 1.5, 86: 1.5, 87: 2.6, 88: 2.21, 89: 2.15, 90: 2.06, 91: 2.0, 92: 1.96, 93: 1.9, 94: 1.87, 95: 1.8, 96: 1.69, 97: 1.6, 98: 1.6, 99: 1.6, 100: 1.6, 101: 1.6, 102: 1.6, 103: 1.6, 104: 1.6, 105: 1.6, 106: 1.6, 107: 1.6, 108: 1.6, 109: 1.6, 110: 1.6, 111: 1.6, 112: 1.6, 113: 1.6, 114: 1.6, 115: 1.6, 116: 1.6, 117: 1.6, 118: 1.6\r\n}\r\nexport const DefaultCovalentRadius = 1.6\r\n\r\nexport const Valences: { [e: number]: number[] | undefined } = {\r\n  1: [ 1 ],\r\n  2: [ 0 ],\r\n  3: [ 1 ],\r\n  4: [ 2 ],\r\n  5: [ 3 ],\r\n  6: [ 4 ],\r\n  7: [ 3 ],\r\n  8: [ 2 ],\r\n  9: [ 1 ],\r\n  10: [ 0 ],\r\n  11: [ 1 ],\r\n  12: [ 2 ],\r\n  13: [ 6 ],\r\n  14: [ 6 ],\r\n  15: [ 3, 5, 7 ],\r\n  16: [ 2, 4, 6 ],\r\n  17: [ 1 ],\r\n  18: [ 0 ],\r\n  19: [ 1 ],\r\n  20: [ 2 ],\r\n\r\n  31: [ 3 ],\r\n  32: [ 4 ],\r\n  33: [ 3, 5 ],\r\n  34: [ 2, 4, 6 ],\r\n  35: [ 1 ],\r\n  36: [ 0 ],\r\n  37: [ 1 ],\r\n  38: [ 2 ],\r\n\r\n  49: [ 3 ],\r\n  50: [ 4 ],\r\n  51: [ 3, 5 ],\r\n  52: [ 2 ],\r\n  53: [ 1, 2, 5 ],\r\n  54: [ 0, 2 ],\r\n  55: [ 1 ],\r\n  56: [ 2 ],\r\n\r\n  81: [ 3 ],\r\n  82: [ 4 ],\r\n  83: [ 3 ],\r\n  84: [ 2 ],\r\n  85: [ 1 ],\r\n  86: [ 0 ],\r\n  87: [ 1 ],\r\n  88: [ 2 ]\r\n}\r\nexport const DefaultValence = -1\r\n\r\nexport const OuterShellElectronCounts: { [e: number]: number | undefined } = {\r\n1: 1, 2: 2, 3: 1, 4: 2, 5: 3, 6: 4, 7: 5, 8: 6, 9: 7, 10: 8, 11: 1, 12: 2, 13: 3, 14: 4, 15: 5, 16: 6, 17: 7, 18: 8, 19: 1, 20: 2, 21: 3, 22: 4, 23: 5, 24: 6, 25: 7, 26: 8, 27: 9, 28: 10, 29: 11, 30: 2, 31: 3, 32: 4, 33: 5, 34: 6, 35: 7, 36: 8, 37: 1, 38: 2, 39: 3, 40: 4, 41: 5, 42: 6, 43: 7, 44: 8, 45: 9, 46: 10, 47: 11, 48: 2, 49: 3, 50: 4, 51: 5, 52: 6, 53: 7, 54: 8, 55: 1, 56: 2, 57: 3, 58: 4, 59: 3, 60: 4, 61: 5, 62: 6, 63: 7, 64: 8, 65: 9, 66: 10, 67: 11, 68: 12, 69: 13, 70: 14, 71: 15, 72: 4, 73: 5, 74: 6, 75: 7, 76: 8, 77: 9, 78: 10, 79: 11, 80: 2, 81: 3, 82: 4, 83: 5, 84: 6, 85: 7, 86: 8, 87: 1, 88: 2, 89: 3, 90: 4, 91: 3, 92: 4, 93: 5, 94: 6, 95: 7, 96: 8, 97: 9, 98: 10, 99: 11, 100: 12, 101: 13, 102: 14, 103: 15, 104: 2, 105: 2, 106: 2, 107: 2, 108: 2, 109: 2, 110: 2, 111: 2, 112: 2, 113: 3, 114: 4, 115: 5, 116: 6, 117: 7, 118: 8\r\n}\r\nexport const DefaultOuterShellElectronCount = 2\r\n\r\n// http://blanco.biomol.uci.edu/Whole_residue_HFscales.txt\r\n// https://www.nature.com/articles/nsb1096-842\r\nexport const ResidueHydrophobicity: { [k: string]: [number, number, number] } = {\r\n  // AA  DGwif   DGwoct  Oct-IF\r\n  'ALA': [ 0.17, 0.50, 0.33 ],\r\n  'ARG': [ 0.81, 1.81, 1.00 ],\r\n  'ASN': [ 0.42, 0.85, 0.43 ],\r\n  'ASP': [ 1.23, 3.64, 2.41 ],\r\n  'ASH': [ -0.07, 0.43, 0.50 ],\r\n  'CYS': [ -0.24, -0.02, 0.22 ],\r\n  'GLN': [ 0.58, 0.77, 0.19 ],\r\n  'GLU': [ 2.02, 3.63, 1.61 ],\r\n  'GLH': [ -0.01, 0.11, 0.12 ],\r\n  'GLY': [ 0.01, 1.15, 1.14 ],\r\n  // \"His+\": [  0.96,  2.33,  1.37 ],\r\n  'HIS': [ 0.17, 0.11, -0.06 ],\r\n  'ILE': [ -0.31, -1.12, -0.81 ],\r\n  'LEU': [ -0.56, -1.25, -0.69 ],\r\n  'LYS': [ 0.99, 2.80, 1.81 ],\r\n  'MET': [ -0.23, -0.67, -0.44 ],\r\n  'PHE': [ -1.13, -1.71, -0.58 ],\r\n  'PRO': [ 0.45, 0.14, -0.31 ],\r\n  'SER': [ 0.13, 0.46, 0.33 ],\r\n  'THR': [ 0.14, 0.25, 0.11 ],\r\n  'TRP': [ -1.85, -2.09, -0.24 ],\r\n  'TYR': [ -0.94, -0.71, 0.23 ],\r\n  'VAL': [ 0.07, -0.46, -0.53 ]\r\n}\r\nexport const DefaultResidueHydrophobicity = [ 0.00, 0.00, 0.00 ]\r\n\r\nexport const AA1: { [k: string]: string } = {\r\n  'HIS': 'H',\r\n  'ARG': 'R',\r\n  'LYS': 'K',\r\n  'ILE': 'I',\r\n  'PHE': 'F',\r\n  'LEU': 'L',\r\n  'TRP': 'W',\r\n  'ALA': 'A',\r\n  'MET': 'M',\r\n  'PRO': 'P',\r\n  'CYS': 'C',\r\n  'ASN': 'N',\r\n  'VAL': 'V',\r\n  'GLY': 'G',\r\n  'SER': 'S',\r\n  'GLN': 'Q',\r\n  'TYR': 'Y',\r\n  'ASP': 'D',\r\n  'GLU': 'E',\r\n  'THR': 'T',\r\n\r\n  'SEC': 'U',  // as per IUPAC definition\r\n  'PYL': 'O',  // as per IUPAC definition\r\n}\r\n\r\nexport const AA3 = Object.keys(AA1)\r\n\r\nexport const RnaBases = [ 'A', 'C', 'T', 'G', 'U', 'I' ]\r\n\r\nexport const DnaBases = [ 'DA', 'DC', 'DT', 'DG', 'DU', 'DI' ]\r\n\r\nexport const PurinBases = [ 'A', 'G', 'I', 'DA', 'DG', 'DI' ]\r\n\r\nexport const Bases = RnaBases.concat(DnaBases)\r\n\r\nexport const WaterNames = [\r\n  'SOL', 'WAT', 'HOH', 'H2O', 'W', 'DOD', 'D3O', 'TIP3', 'TIP4', 'SPC'\r\n]\r\n\r\n// all chemical components with the word \"ion\" in their name, Sep 2016\r\n//\r\n// SET SESSION group_concat_max_len = 1000000;\r\n// SELECT GROUP_CONCAT(id_ ORDER BY id_ ASC SEPARATOR '\", \"') from\r\n// (\r\n//     SELECT count(obj_id) as c, id_\r\n//     FROM pdb.chem_comp WHERE name LIKE \"% ION%\"\r\n//     GROUP BY id_\r\n// ) AS t1;\r\nexport const IonNames = [\r\n  '118', '119', '1AL', '1CU', '2FK', '2HP', '2OF', '3CO',\r\n  '3MT', '3NI', '3OF', '3P8', '4MO', '4PU', '543', '6MO', 'ACT', 'AG', 'AL',\r\n  'ALF', 'AM', 'ATH', 'AU', 'AU3', 'AUC', 'AZI', 'BA', 'BCT', 'BEF', 'BF4', 'BO4',\r\n  'BR', 'BS3', 'BSY', 'CA', 'CAC', 'CD', 'CD1', 'CD3', 'CD5', 'CE', 'CHT', 'CL',\r\n  'CO', 'CO3', 'CO5', 'CON', 'CR', 'CS', 'CSB', 'CU', 'CU1', 'CU3', 'CUA', 'CUZ',\r\n  'CYN', 'DME', 'DMI', 'DSC', 'DTI', 'DY', 'E4N', 'EDR', 'EMC', 'ER3', 'EU',\r\n  'EU3', 'F', 'FE', 'FE2', 'FPO', 'GA', 'GD3', 'GEP', 'HAI', 'HG', 'HGC', 'IN',\r\n  'IOD', 'IR', 'IR3', 'IRI', 'IUM', 'K', 'KO4', 'LA', 'LCO', 'LCP', 'LI', 'LU',\r\n  'MAC', 'MG', 'MH2', 'MH3', 'MLI', 'MLT', 'MMC', 'MN', 'MN3', 'MN5', 'MN6',\r\n  'MO1', 'MO2', 'MO3', 'MO4', 'MO5', 'MO6', 'MOO', 'MOS', 'MOW', 'MW1', 'MW2',\r\n  'MW3', 'NA', 'NA2', 'NA5', 'NA6', 'NAO', 'NAW', 'NCO', 'NET', 'NH4', 'NI',\r\n  'NI1', 'NI2', 'NI3', 'NO2', 'NO3', 'NRU', 'O4M', 'OAA', 'OC1', 'OC2', 'OC3',\r\n  'OC4', 'OC5', 'OC6', 'OC7', 'OC8', 'OCL', 'OCM', 'OCN', 'OCO', 'OF1', 'OF2',\r\n  'OF3', 'OH', 'OS', 'OS4', 'OXL', 'PB', 'PBM', 'PD', 'PDV', 'PER', 'PI', 'PO3',\r\n  'PO4', 'PR', 'PT', 'PT4', 'PTN', 'RB', 'RH3', 'RHD', 'RU', 'SB', 'SCN', 'SE4',\r\n  'SEK', 'SM', 'SMO', 'SO3', 'SO4', 'SR', 'T1A', 'TB', 'TBA', 'TCN', 'TEA', 'TH',\r\n  'THE', 'TL', 'TMA', 'TRA', 'UNX', 'V', 'VN3', 'VO4', 'W', 'WO5', 'Y1', 'YB',\r\n  'YB2', 'YH', 'YT3', 'ZCM', 'ZN', 'ZN2', 'ZN3', 'ZNO', 'ZO3',\r\n    // additional ion names\r\n  'OHX'\r\n]\r\n\r\n// all chemical components with the word \"%saccharide%\" in their type, Sep 2016\r\n//\r\n// SET SESSION group_concat_max_len = 1000000;\r\n// select GROUP_CONCAT(id_ ORDER BY id_ ASC SEPARATOR '\", \"') from\r\n// (\r\n//     SELECT count(obj_id), id_\r\n//     FROM pdb.chem_comp WHERE type like \"%SACCHARIDE%\"\r\n//     GROUP BY id_\r\n// ) AS t1;\r\nexport const SaccharideNames = [\r\n  '045', '0AT', '0BD', '0MK', '0NZ', '0TS', '0V4', '0XY', '0YT', '10M',\r\n  '147', '149', '14T', '15L', '16G', '18T', '18Y', '1AR', '1BW', '1GL', '1GN',\r\n  '1JB', '1LL', '1NA', '1S3', '26M', '26Q', '26R', '26V', '26W', '26Y', '27C',\r\n  '289', '291', '293', '2DG', '2F8', '2FG', '2FL', '2FP', '2GL', '2M4', '2M5',\r\n  '32O', '34V', '3CM', '3DO', '3DY', '3FM', '3LR', '3MF', '3MG', '3SA', '3ZW',\r\n  '46D', '46M', '46Z', '48Z', '4CQ', '4GC', '4NN', '50A', '5DI', '5GF', '5MM',\r\n  '5RP', '5SA', '5SP', '64K', '6PG', '6SA', '7JZ', '7SA', 'A1Q', 'A2G', 'AAB',\r\n  'AAL', 'AAO', 'ABC', 'ABD', 'ABE', 'ABF', 'ABL', 'ACG', 'ACI', 'ACR', 'ACX',\r\n  'ADA', 'ADG', 'ADR', 'AF1', 'AFD', 'AFL', 'AFO', 'AFP', 'AFR', 'AGC', 'AGH',\r\n  'AGL', 'AHR', 'AIG', 'ALL', 'ALX', 'AMU', 'AOG', 'AOS', 'ARA', 'ARB', 'ARE',\r\n  'ARI', 'ASG', 'ASO', 'AXP', 'AXR', 'B0D', 'B16', 'B2G', 'B4G', 'B6D', 'B8D',\r\n  'B9D', 'BBK', 'BCD', 'BDG', 'BDP', 'BDR', 'BEM', 'BFP', 'BGC', 'BGL', 'BGP',\r\n  'BGS', 'BHG', 'BMA', 'BMX', 'BNG', 'BNX', 'BOG', 'BRI', 'BXF', 'BXP', 'BXX',\r\n  'BXY', 'C3X', 'C4X', 'C5X', 'CAP', 'CBI', 'CBK', 'CBS', 'CDR', 'CEG', 'CGF',\r\n  'CHO', 'CR1', 'CR6', 'CRA', 'CT3', 'CTO', 'CTR', 'CTT', 'D6G', 'DAF', 'DAG',\r\n  'DDA', 'DDB', 'DDL', 'DEL', 'DFR', 'DFX', 'DG0', 'DGC', 'DGD', 'DGM', 'DGS',\r\n  'DIG', 'DLF', 'DLG', 'DMU', 'DNO', 'DOM', 'DP5', 'DQQ', 'DQR', 'DR2', 'DR3',\r\n  'DR4', 'DRI', 'DSR', 'DT6', 'DVC', 'E4P', 'E5G', 'EAG', 'EBG', 'EBQ', 'EGA',\r\n  'EJT', 'EPG', 'ERE', 'ERI', 'F1P', 'F1X', 'F6P', 'FBP', 'FCA', 'FCB', 'FCT',\r\n  'FDP', 'FDQ', 'FFC', 'FIX', 'FMO', 'FRU', 'FSI', 'FU4', 'FUB', 'FUC', 'FUD',\r\n  'FUL', 'FXP', 'G16', 'G1P', 'G2F', 'G3I', 'G4D', 'G4S', 'G6D', 'G6P', 'G6S',\r\n  'GAC', 'GAD', 'GAL', 'GC1', 'GC4', 'GCD', 'GCN', 'GCO', 'GCS', 'GCT', 'GCU',\r\n  'GCV', 'GCW', 'GCX', 'GE1', 'GFG', 'GFP', 'GIV', 'GL0', 'GL2', 'GL5', 'GL6',\r\n  'GL7', 'GL9', 'GLA', 'GLB', 'GLC', 'GLD', 'GLF', 'GLG', 'GLO', 'GLP', 'GLS',\r\n  'GLT', 'GLW', 'GMH', 'GN1', 'GNX', 'GP1', 'GP4', 'GPH', 'GPM', 'GQ1', 'GQ2',\r\n  'GQ4', 'GS1', 'GS4', 'GSA', 'GSD', 'GTE', 'GTH', 'GTK', 'GTR', 'GTZ', 'GU0',\r\n  'GU1', 'GU2', 'GU3', 'GU4', 'GU5', 'GU6', 'GU8', 'GU9', 'GUF', 'GUP', 'GUZ',\r\n  'GYP', 'GYV', 'H2P', 'HDL', 'HMS', 'HS2', 'HSD', 'HSG', 'HSH', 'HSJ', 'HSQ',\r\n  'HSR', 'HSU', 'HSX', 'HSY', 'HSZ', 'IAB', 'IDG', 'IDR', 'IDS', 'IDT', 'IDU',\r\n  'IDX', 'IDY', 'IMK', 'IN1', 'IPT', 'ISL', 'KBG', 'KD2', 'KDA', 'KDM', 'KDO',\r\n  'KFN', 'KO1', 'KO2', 'KTU', 'L6S', 'LAG', 'LAI', 'LAK', 'LAO', 'LAT', 'LB2',\r\n  'LBT', 'LCN', 'LDY', 'LGC', 'LGU', 'LM2', 'LMT', 'LMU', 'LOG', 'LOX', 'LPK',\r\n  'LSM', 'LTM', 'LVZ', 'LXB', 'LXZ', 'M1F', 'M3M', 'M6P', 'M8C', 'MA1', 'MA2',\r\n  'MA3', 'MAB', 'MAG', 'MAL', 'MAN', 'MAT', 'MAV', 'MAW', 'MBG', 'MCU', 'MDA',\r\n  'MDM', 'MDP', 'MFA', 'MFB', 'MFU', 'MG5', 'MGA', 'MGL', 'MLB', 'MMA', 'MMN',\r\n  'MN0', 'MRP', 'MTT', 'MUG', 'MVP', 'MXY', 'N1L', 'N9S', 'NAA', 'NAG', 'NBG',\r\n  'NDG', 'NED', 'NG1', 'NG6', 'NGA', 'NGB', 'NGC', 'NGE', 'NGF', 'NGL', 'NGS',\r\n  'NGY', 'NHF', 'NM6', 'NM9', 'NTF', 'NTO', 'NTP', 'NXD', 'NYT', 'OPG', 'OPM',\r\n  'ORP', 'OX2', 'P3M', 'P53', 'P6P', 'PA5', 'PNA', 'PNG', 'PNW', 'PRP', 'PSJ',\r\n  'PSV', 'PTQ', 'QDK', 'QPS', 'QV4', 'R1P', 'R1X', 'R2B', 'R5P', 'RAA', 'RAE',\r\n  'RAF', 'RAM', 'RAO', 'RAT', 'RB5', 'RBL', 'RCD', 'RDP', 'REL', 'RER', 'RF5',\r\n  'RG1', 'RGG', 'RHA', 'RIB', 'RIP', 'RNS', 'RNT', 'ROB', 'ROR', 'RPA', 'RST',\r\n  'RUB', 'RUU', 'RZM', 'S6P', 'S7P', 'SA0', 'SCR', 'SDD', 'SF6', 'SF9', 'SG4',\r\n  'SG5', 'SG6', 'SG7', 'SGA', 'SGC', 'SGD', 'SGN', 'SGS', 'SHB', 'SHG', 'SI3',\r\n  'SIO', 'SOE', 'SOL', 'SSG', 'SUC', 'SUP', 'SUS', 'T6P', 'T6T', 'TAG', 'TCB',\r\n  'TDG', 'TGK', 'TGY', 'TH1', 'TIA', 'TM5', 'TM6', 'TM9', 'TMR', 'TMX', 'TOA',\r\n  'TOC', 'TRE', 'TYV', 'UCD', 'UDC', 'VG1', 'X0X', 'X1X', 'X2F', 'X4S', 'X5S',\r\n  'X6X', 'XBP', 'XDN', 'XDP', 'XIF', 'XIM', 'XLF', 'XLS', 'XMM', 'XUL', 'XXR',\r\n  'XYP', 'XYS', 'YO5', 'Z3Q', 'Z6J', 'Z9M', 'ZDC', 'ZDM'\r\n]\r\n\r\nexport const ProteinBackboneAtoms = [\r\n  'CA', 'C', 'N', 'O',\r\n  'O1', 'O2', 'OC1', 'OC2', 'OX1', 'OXT', 'OT1', 'OT2',\r\n  'H', 'H1', 'H2', 'H3', 'HA', 'HN',\r\n  'BB'\r\n]\r\n\r\nexport const NucleicBackboneAtoms = [\r\n  'P', 'OP1', 'OP2', 'HOP2', 'HOP3',\r\n  \"O2'\", \"O3'\", \"O4'\", \"O5'\", \"C1'\", \"C2'\", \"C3'\", \"C4'\", \"C5'\",\r\n  \"H1'\", \"H2'\", \"H2''\", \"HO2'\", \"H3'\", \"H4'\", \"H5'\", \"H5''\", \"HO3'\", \"HO5'\",\r\n  'O2*', 'O3*', 'O4*', 'O5*', 'C1*', 'C2*', 'C3*', 'C4*', 'C5*'\r\n]\r\n\r\nexport const ResidueTypeAtoms: { [k: number]: { [k: string]: string|string[] } } = {}\r\n\r\nResidueTypeAtoms[ ProteinBackboneType ] = {\r\n  trace: 'CA',\r\n  direction1: 'C',\r\n  direction2: [ 'O', 'OC1', 'O1', 'OX1', 'OXT', 'OT1', 'OT2' ],\r\n  backboneStart: 'N',\r\n  backboneEnd: 'C'\r\n}\r\n\r\nResidueTypeAtoms[ RnaBackboneType ] = {\r\n  trace: [ \"C4'\", 'C4*' ],\r\n  direction1: [ \"C1'\", 'C1*' ],\r\n  direction2: [ \"C3'\", 'C3*' ],\r\n  backboneStart: 'P',\r\n  backboneEnd: [ \"O3'\", 'O3*' ]\r\n}\r\n\r\nResidueTypeAtoms[ DnaBackboneType ] = {\r\n  trace: [ \"C3'\", 'C3*' ],\r\n  direction1: [ \"C2'\", 'C2*' ],\r\n  direction2: [ \"O4'\", 'O4*' ],\r\n  backboneStart: 'P',\r\n  backboneEnd: [ \"O3'\", 'O3*' ]\r\n}\r\n\r\nResidueTypeAtoms[ CgProteinBackboneType ] = {\r\n  trace: [ 'CA', 'BB' ],\r\n  backboneStart: [ 'CA', 'BB' ],\r\n  backboneEnd: [ 'CA', 'BB' ]\r\n}\r\n\r\nResidueTypeAtoms[ CgRnaBackboneType ] = {\r\n  trace: [ \"C4'\", 'C4*', 'P' ],\r\n  backboneStart: [ \"C4'\", 'C4*', 'P' ],\r\n  backboneEnd: [ \"C4'\", 'C4*', 'P' ]\r\n}\r\n\r\nResidueTypeAtoms[ CgDnaBackboneType ] = {\r\n  trace: [ \"C3'\", 'C3*', \"C2'\", 'P' ],  // C2' is used in martini ff\r\n  backboneStart: [ \"C3'\", 'C3*', \"C2'\", 'P' ],\r\n  backboneEnd: [ \"C3'\", 'C3*', \"C2'\", 'P' ]\r\n}\r\n\r\nResidueTypeAtoms[ UnknownBackboneType ] = {}\r\n\r\n// Mappings taken from Meeko: https://github.com/forlilab/Meeko/blob/develop/meeko/utils/autodock4_atom_types_elements.py\r\nexport const PDBQTSpecialElements = {\r\n  'HD':  'H',\r\n  'HS':  'H',\r\n  'A':   'C',\r\n  'NA':  'N',\r\n  'NS':  'N',\r\n  'OA':  'O',\r\n  'OS':  'O',\r\n  'SA':  'S',\r\n  'G0':  'C',\r\n  'G1':  'C',\r\n  'G2':  'C',\r\n  'G3':  'C',\r\n  'CG0': 'C',\r\n  'CG1': 'C',\r\n  'CG2': 'C',\r\n  'CG3': 'C',\r\n  'W':   'O'\r\n}","/**\r\n * @file Geometry\r\n * @author Fred Ludlow <Fred.Ludlow@astx.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\n\r\nimport { Vector3 } from 'three'\r\n\r\nimport { Elements } from '../structure/structure-constants'\r\nimport { degToRad } from '../math/math-utils'\r\nimport AtomProxy from '../proxy/atom-proxy'\r\n\r\n// Changed numbering so they're mostly inline with coordination number\r\n// from VSEPR\r\nexport const enum AtomGeometry {\r\n  Spherical = 0,\r\n  Terminal = 1,\r\n  Linear = 2,\r\n  Trigonal = 3,\r\n  Tetrahedral = 4,\r\n  TrigonalBiPyramidal = 5,\r\n  Octahedral = 6,\r\n  SquarePlanar = 7, // Okay, it breaks down somewhere!\r\n  Unknown = 8\r\n}\r\n\r\nexport function assignGeometry (totalCoordination: number): AtomGeometry {\r\n  switch(totalCoordination){\r\n    case 0:\r\n      return AtomGeometry.Spherical\r\n    case 1:\r\n      return AtomGeometry.Terminal\r\n    case 2:\r\n      return AtomGeometry.Linear\r\n    case 3:\r\n      return AtomGeometry.Trigonal\r\n    case 4:\r\n      return AtomGeometry.Tetrahedral\r\n    default:\r\n      return AtomGeometry.Unknown\r\n  }\r\n}\r\n\r\nexport const Angles = new Map<AtomGeometry, number>([\r\n  [ AtomGeometry.Linear, degToRad(180) ],\r\n  [ AtomGeometry.Trigonal, degToRad(120) ],\r\n  [ AtomGeometry.Tetrahedral, degToRad(109.4721) ],\r\n  [ AtomGeometry.Octahedral, degToRad(90) ]\r\n])\r\n\r\n/**\r\n * Calculate the angles x-1-2 for all x where x is a heavy atom bonded to ap1.\r\n * @param  {AtomProxy} ap1 First atom (angle centre)\r\n * @param  {AtomProxy} ap2 Second atom\r\n * @return {number[]}        Angles in radians\r\n */\r\nexport function calcAngles (ap1: AtomProxy, ap2: AtomProxy): number[] {\r\n  let angles: number[] = []\r\n  const d1 = new Vector3()\r\n  const d2 = new Vector3()\r\n  d1.subVectors(ap2 as any, ap1 as any)\r\n  ap1.eachBondedAtom( x => {\r\n    if (x.number !== Elements.H) {\r\n      d2.subVectors(x as any, ap1 as any)\r\n      angles.push(d1.angleTo(d2))\r\n    }\r\n   })\r\n  return angles\r\n}\r\n\r\n/**\r\n * Find two neighbours of ap1 to define a plane (if possible) and\r\n * measure angle out of plane to ap2\r\n * @param  {AtomProxy} ap1 First atom (angle centre)\r\n * @param  {AtomProxy} ap2 Second atom (out-of-plane)\r\n * @return {number}        Angle from plane to second atom\r\n */\r\nexport function calcPlaneAngle (ap1: AtomProxy, ap2: AtomProxy): number | undefined {\r\n  const x1 = ap1.clone()\r\n\r\n  const v12 = new Vector3()\r\n  v12.subVectors(ap2 as any, ap1 as any)\r\n\r\n  const neighbours = [new Vector3(), new Vector3()]\r\n  let ni = 0\r\n  ap1.eachBondedAtom( x => {\r\n    if (ni > 1) { return }\r\n    if (x.number !== Elements.H) {\r\n      x1.index = x.index\r\n      neighbours[ni++].subVectors(x as any, ap1 as any)\r\n    }\r\n  })\r\n  if (ni === 1) {\r\n    x1.eachBondedAtom( x => {\r\n      if (ni > 1) { return }\r\n      if (x.number !== Elements.H && x.index !== ap1.index){\r\n        neighbours[ni++].subVectors(x as any, ap1 as any)\r\n      }\r\n    })\r\n  }\r\n  if (ni !== 2) {\r\n    return\r\n  }\r\n\r\n  const cp = neighbours[0].cross(neighbours[1])\r\n  return Math.abs((Math.PI / 2) - cp.angleTo(v12))\r\n}\r\n","/**\r\n * @file Valence Model\r\n * @author Fred Ludlow <Fred.Ludlow@astx.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\n\r\n/**\r\n * Reworked ValenceModel\r\n *\r\n * TODO:\r\n *   Ensure proper treatment of disorder/models. e.g. V257 N in 5vim\r\n *   Formal charge of 255 for SO4 anion (e.g. 5ghl)\r\n *   Have removed a lot of explicit features (as I think they're more\r\n *   generally captured by better VM).\r\n *     Could we instead have a \"delocalised negative/positive\" charge\r\n *     feature and flag these up?\r\n *\r\n */\r\nimport { Data } from '../structure/data'\r\nimport AtomProxy from '../proxy/atom-proxy'\r\nimport { AtomGeometry, assignGeometry } from './geometry'\r\nimport { Elements } from '../structure/structure-constants'\r\n\r\n/**\r\n * Are we involved in some kind of pi system. Either explicitly forming\r\n * double bond or N, O next to a double bond, except:\r\n *\r\n *   N,O with degree 4 cannot be conjugated.\r\n *   N,O adjacent to P=O or S=O do not qualify (keeps sulfonamide N sp3 geom)\r\n */\r\nfunction isConjugated (a: AtomProxy) {\r\n  const _bp = a.structure.getBondProxy()\r\n  const atomicNumber = a.number\r\n  const hetero = atomicNumber === Elements.O || atomicNumber === Elements.N\r\n\r\n  if (hetero && a.bondCount === 4) {\r\n    return false\r\n  }\r\n\r\n  let flag = false\r\n\r\n  a.eachBond(b => {\r\n    if (b.bondOrder > 1) {\r\n      flag = true\r\n      return\r\n    }\r\n    if (hetero) {\r\n      const a2 = b.getOtherAtom(a)\r\n\r\n      a2.eachBond(b2 => {\r\n        if (b2.bondOrder > 1) {\r\n          const atomicNumber2 = a2.number\r\n          if (\r\n            (atomicNumber2 === Elements.P || atomicNumber2 === Elements.S) &&\r\n            b2.getOtherAtom(a2).number === Elements.O\r\n          ) {\r\n            return\r\n          }\r\n          flag = true\r\n        }\r\n      }, _bp) // Avoid reuse of structure._bp\r\n    }\r\n  })\r\n\r\n  return flag\r\n}\r\n\r\n/* function hasExplicitCharge(r: ResidueProxy) {\r\n  let flag = false\r\n  r.eachAtom(a => {\r\n    if (a.formalCharge != null && a.formalCharge !== 0) flag = true\r\n  })\r\n  return flag\r\n}\r\n\r\nfunction hasExplicitHydrogen(r: ResidueProxy) {\r\n  let flag = false\r\n  r.eachAtom(a => {\r\n    if (a.number === Elements.H) flag = true\r\n  })\r\n  return flag\r\n} */\r\n\r\nexport function explicitValence (a: AtomProxy) {\r\n  let v = 0\r\n  a.eachBond(b => v += b.bondOrder)\r\n  return v\r\n}\r\n\r\n/**\r\n * Attempts to produce a consistent charge and implicit\r\n * H-count for an atom.\r\n *\r\n * If both params.assignCharge and params.assignH, this\r\n * approximately followsthe rules described in\r\n * https://docs.eyesopen.com/toolkits/python/oechemtk/valence.html#openeye-hydrogen-count-model\r\n *\r\n * If only charge or hydrogens are to be assigned it takes\r\n * a much simpler view and deduces one from the other\r\n *\r\n * @param {AtomProxy}           a      Atom to analyze\r\n * @param {assignChargeHParams} params What to assign\r\n */\r\nexport function calculateHydrogensCharge (a: AtomProxy, params: ValenceModelParams) {\r\n  const hydrogenCount = a.bondToElementCount(Elements.H)\r\n  let charge = a.formalCharge || 0\r\n\r\n  const assignCharge = (params.assignCharge === 'always' ||\r\n    (params.assignCharge === 'auto' && charge === 0))\r\n  const assignH = (params.assignH === 'always' ||\r\n    (params.assignH === 'auto' && hydrogenCount === 0))\r\n\r\n  const degree = a.bondCount\r\n  const valence = explicitValence(a)\r\n\r\n  const conjugated = isConjugated(a)\r\n  const multiBond = (valence - degree > 0)\r\n\r\n\r\n  let implicitHCount = 0\r\n  let geom = AtomGeometry.Unknown\r\n\r\n  switch (a.number) {\r\n    case Elements.H:\r\n      if (assignCharge){\r\n        if (degree === 0){\r\n          charge = 1\r\n          geom = AtomGeometry.Spherical\r\n        } else if (degree === 1) {\r\n          charge = 0\r\n          geom = AtomGeometry.Terminal\r\n        }\r\n      }\r\n      break\r\n\r\n    case Elements.C:\r\n      // TODO: Isocyanide?\r\n      if (assignCharge) {\r\n        charge = 0 // Assume carbon always neutral\r\n      }\r\n      if (assignH) {\r\n        // Carbocation/carbanion are 3-valent\r\n        implicitHCount = Math.max(0, 4 - valence - Math.abs(charge))\r\n      }\r\n      // Carbocation is planar, carbanion is tetrahedral\r\n      geom = assignGeometry(degree + implicitHCount + Math.max(0, -charge))\r\n      break\r\n\r\n    case Elements.N:\r\n      if (assignCharge) {\r\n        if (!assignH) { // Trust input H explicitly:\r\n          charge = valence - 3\r\n        } else if (conjugated && valence < 4) {\r\n          // Neutral unless amidine/guanidine double-bonded N:\r\n          if (degree - hydrogenCount === 1 && valence - hydrogenCount === 2) {\r\n            charge = 1\r\n          } else {\r\n            charge = 0\r\n          }\r\n        } else {\r\n          // Sulfonamide nitrogen and classed as sp3 in conjugation model but\r\n          // they won't be charged\r\n          // Don't assign charge to nitrogens bound to metals\r\n          let flag = false\r\n          a.eachBondedAtom(ba => {\r\n            if (ba.number === Elements.S || ba.isMetal()) flag = true\r\n          })\r\n          if (flag) charge = 0\r\n          else charge = 1\r\n          // TODO: Planarity sanity check?\r\n        }\r\n\r\n      }\r\n\r\n      if (assignH) {\r\n        // NH4+ -> 4, 1' amide -> 2, nitro N/N+ depiction -> 0\r\n        implicitHCount = Math.max(0, 3 - valence + charge)\r\n      }\r\n\r\n      if (conjugated && !multiBond) {\r\n        // Amide, anilinic N etc. cannot consider lone-pair for geometry purposes\r\n        // Anilinic N geometry is depenent on ring electronics, for our purposes we\r\n        // assume it's trigonal!\r\n        geom = assignGeometry(degree + implicitHCount - charge)\r\n      } else {\r\n        // Everything else, pyridine, amine, nitrile, lp plays normal role:\r\n        geom = assignGeometry(degree + implicitHCount + 1 - charge)\r\n      }\r\n      break\r\n\r\n    case Elements.O:\r\n      if (assignCharge) {\r\n        if (!assignH) {\r\n          charge = valence - 2 //\r\n        }\r\n        if (valence === 1) {\r\n          a.eachBondedAtom(ba => {\r\n            ba.eachBond(b => {\r\n              const oa = b.getOtherAtom(ba)\r\n              if (oa.index !== a.index && oa.number === Elements.O && b.bondOrder === 2){\r\n                charge = -1\r\n              }\r\n            })\r\n          })\r\n        }\r\n      }\r\n      if (assignH) {\r\n        // ethanol -> 1, carboxylate -> -1\r\n        implicitHCount = Math.max(0, 2 - valence + charge)\r\n      }\r\n      if (conjugated && !multiBond){\r\n        // carboxylate OH, phenol OH, one lone-pair taken up with conjugation\r\n        geom = assignGeometry(degree + implicitHCount - charge + 1)\r\n      } else {\r\n        // Carbonyl (trigonal)\r\n        geom = assignGeometry(degree + implicitHCount - charge + 2)\r\n      }\r\n      break\r\n\r\n    // Only handles thiols/thiolates/thioether/sulfonium. Sulfoxides and higher\r\n    // oxidiation states are assumed neutral S (charge carried on O if required)\r\n    case Elements.S:\r\n      if (assignCharge) {\r\n        if (!assignH) {\r\n          if (valence <= 3 && !a.bondToElementCount(Elements.O)) {\r\n            charge = valence - 2 // e.g. explicitly deprotonated thiol\r\n          } else {\r\n            charge = 0\r\n          }\r\n        }\r\n      }\r\n      if (assignH){\r\n        if (valence < 2){\r\n          implicitHCount = Math.max(0, 2 - valence + charge)\r\n        }\r\n      }\r\n      if (valence <= 3){\r\n        // Thiol, thiolate, tioether -> tetrahedral\r\n        geom = assignGeometry(degree + implicitHCount - charge + 2)\r\n      }\r\n\r\n      break\r\n\r\n    case Elements.F:\r\n    case Elements.CL:\r\n    case Elements.BR:\r\n    case Elements.I:\r\n    case Elements.AT:\r\n      // Never implicitly protonate halides\r\n      if (assignCharge) {\r\n        charge = valence - 1\r\n      }\r\n      break\r\n\r\n    case Elements.LI:\r\n    case Elements.NA:\r\n    case Elements.K:\r\n    case Elements.RB:\r\n    case Elements.CS:\r\n    case Elements.FR:\r\n      if (assignCharge) {\r\n        charge = 1 - valence\r\n      }\r\n      break\r\n\r\n    case Elements.BE:\r\n    case Elements.MG:\r\n    case Elements.CA:\r\n    case Elements.SR:\r\n    case Elements.BA:\r\n    case Elements.RA:\r\n      if (assignCharge) {\r\n        charge = 2 - valence\r\n      }\r\n      break\r\n\r\n    default:\r\n      console.warn('Requested charge, protonation for an unhandled element', a.element)\r\n  }\r\n\r\n  return [ charge, implicitHCount, implicitHCount + hydrogenCount, geom ]\r\n}\r\n\r\n\r\nexport interface ValenceModel {\r\n  charge: Int8Array,\r\n  implicitH: Int8Array,\r\n  totalH: Int8Array,\r\n  idealGeometry: Int8Array\r\n}\r\n\r\nexport interface ValenceModelParams {\r\n  assignCharge: string,\r\n  assignH: string\r\n}\r\n\r\nexport function ValenceModel (data: Data, params: ValenceModelParams) {\r\n  const structure = data.structure\r\n  const n = structure.atomCount\r\n\r\n  const charge = new Int8Array(n)\r\n  const implicitH = new Int8Array(n)\r\n  const totalH = new Int8Array(n)\r\n  const idealGeometry = new Int8Array(n)\r\n\r\n  structure.eachAtom(a => {\r\n    const i = a.index\r\n    const [ chg, implH, totH, geom ] = calculateHydrogensCharge(a, params)\r\n    charge[ i ] = chg\r\n    implicitH[ i ] = implH\r\n    totalH[ i ] = totH\r\n    idealGeometry[ i ] = geom\r\n  })\r\n\r\n  return { charge, implicitH, totalH, idealGeometry }\r\n}","\r\nimport Structure from './structure'\r\nimport SpatialHash from '../geometry/spatial-hash'\r\nimport { ValenceModel } from '../chemistry/valence-model'\r\n\r\nexport interface Data {\r\n  structure: Structure\r\n  '@spatialLookup': SpatialHash | undefined\r\n  '@valenceModel': ValenceModel | undefined\r\n}\r\n\r\nexport function createData(structure: Structure): Data {\r\n  return {\r\n    structure,\r\n    '@spatialLookup': undefined,\r\n    '@valenceModel': undefined\r\n  }\r\n}\r\n\r\nexport function spatialLookup(data: Data): SpatialHash {\r\n  if (data['@spatialLookup']) return data['@spatialLookup']!\r\n  const lookup = new SpatialHash(data.structure.atomStore, data.structure.boundingBox)\r\n  data['@spatialLookup'] = lookup\r\n  return lookup\r\n}\r\n\r\nexport function valenceModel(data: Data): ValenceModel {\r\n  if (data['@valenceModel']) return data['@valenceModel']!\r\n  const valenceModel = ValenceModel(data, {assignCharge: 'auto', assignH: 'auto'})\r\n  data['@valenceModel'] = valenceModel\r\n  return valenceModel\r\n}\r\n","/**\r\n * @file Functional Groups\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\n\r\nimport AtomProxy from '../proxy/atom-proxy'\r\nimport { Elements } from '../structure/structure-constants'\r\n\r\n/**\r\n * Nitrogen in a quaternary amine\r\n */\r\nexport function isQuaternaryAmine (a: AtomProxy) {\r\n  return (\r\n    a.number === 7 &&\r\n    a.bondCount === 4 &&\r\n    a.bondToElementCount(Elements.H) === 0\r\n  )\r\n}\r\n\r\n/**\r\n * Nitrogen in a tertiary amine\r\n */\r\nexport function isTertiaryAmine (a: AtomProxy, idealValence: number) {\r\n  return (\r\n    a.number === 7 &&\r\n    a.bondCount >= 3 &&\r\n    idealValence === 3\r\n  )\r\n}\r\n\r\n/**\r\n * Nitrogen in an imide\r\n */\r\nexport function isImide (a: AtomProxy) {\r\n  let flag = false\r\n  if (a.number === Elements.N && (a.bondCount - a.bondToElementCount(Elements.H)) === 2) {\r\n    let carbonylCount = 0\r\n    a.eachBondedAtom(ba => {\r\n      if (isCarbonyl(ba)) ++carbonylCount\r\n    })\r\n    flag = carbonylCount === 2\r\n  }\r\n  return flag\r\n}\r\n\r\n/**\r\n * Nitrogen in an amide\r\n */\r\nexport function isAmide (a: AtomProxy) {\r\n  let flag = false\r\n  if (a.number === Elements.N && (a.bondCount - a.bondToElementCount(Elements.H)) === 2) {\r\n    let carbonylCount = 0\r\n    a.eachBondedAtom(ba => {\r\n      if (isCarbonyl(ba)) ++carbonylCount\r\n    })\r\n    flag = carbonylCount === 1\r\n  }\r\n  return flag\r\n}\r\n\r\n/**\r\n * Sulfur in a sulfonium group\r\n */\r\nexport function isSulfonium (a: AtomProxy) {\r\n  return (\r\n    a.number === 16 &&\r\n    a.bondCount === 3 &&\r\n    a.bondToElementCount(Elements.H) === 0\r\n  )\r\n}\r\n\r\n/**\r\n * Sulfur in a sulfonic acid or sulfonate group\r\n */\r\nexport function isSulfonicAcid (a: AtomProxy) {\r\n  return (\r\n    a.number === 16 &&\r\n    a.bondToElementCount(Elements.O) === 3\r\n  )\r\n}\r\n\r\n/**\r\n * Sulfur in a sulfate group\r\n */\r\nexport function isSulfate (a: AtomProxy) {\r\n  return (\r\n    a.number === 16 &&\r\n    a.bondToElementCount(Elements.O) === 4\r\n  )\r\n}\r\n\r\n/**\r\n * Phosphor in a phosphate group\r\n */\r\nexport function isPhosphate (a: AtomProxy) {\r\n  return (\r\n    a.number === 15 &&\r\n    a.bondToElementCount(Elements.O) === a.bondCount\r\n  )\r\n}\r\n\r\n/**\r\n * Halogen with one bond to a carbon\r\n */\r\nexport function isHalocarbon (a: AtomProxy) {\r\n  return (\r\n    a.isHalogen() &&\r\n    a.bondCount === 1 &&\r\n    a.bondToElementCount(Elements.C) === 1\r\n  )\r\n}\r\n\r\n/**\r\n * Carbon in a carbonyl/acyl group\r\n */\r\nexport function isCarbonyl (a: AtomProxy) {\r\n  let flag = false\r\n  if (a.number === Elements.C) {\r\n    a.eachBond(b => {\r\n      if (b.bondOrder === 2 && b.getOtherAtom(a).number === Elements.O) {\r\n        flag = true\r\n      }\r\n    })\r\n  }\r\n  return flag\r\n}\r\n\r\n/**\r\n * Carbon in a carboxylate group\r\n */\r\nexport function isCarboxylate (a: AtomProxy) {\r\n  let terminalOxygenCount = 0\r\n  if (\r\n    a.number === 6 &&\r\n    a.bondToElementCount(Elements.O) === 2 &&\r\n    a.bondToElementCount(Elements.C) === 1\r\n  ) {\r\n    a.eachBondedAtom(ba => {\r\n      if (ba.number === 8 && ba.bondCount - ba.bondToElementCount(Elements.H) === 1) {\r\n        ++terminalOxygenCount\r\n      }\r\n    })\r\n  }\r\n  return terminalOxygenCount === 2\r\n}\r\n\r\n/**\r\n * Carbon in a guanidine group\r\n */\r\nexport function isGuanidine (a: AtomProxy) {\r\n  let terminalNitrogenCount = 0\r\n  if (\r\n    a.number === 6 &&\r\n    a.bondCount === 3 &&\r\n    a.bondToElementCount(Elements.N) === 3\r\n  ) {\r\n    a.eachBondedAtom(ba => {\r\n      if (ba.bondCount - ba.bondToElementCount(Elements.H) === 1) {\r\n        ++terminalNitrogenCount\r\n      }\r\n    })\r\n  }\r\n  return terminalNitrogenCount === 2\r\n}\r\n\r\n/**\r\n * Carbon in a acetamidine group\r\n */\r\nexport function isAcetamidine (a: AtomProxy) {\r\n  let terminalNitrogenCount = 0\r\n  if (\r\n    a.number === 6 &&\r\n    a.bondCount === 3 &&\r\n    a.bondToElementCount(Elements.N) === 2 &&\r\n    a.bondToElementCount(Elements.C) === 1\r\n  ) {\r\n    a.eachBondedAtom(ba => {\r\n      if (ba.bondCount - ba.bondToElementCount(Elements.H) === 1) {\r\n        ++terminalNitrogenCount\r\n      }\r\n    })\r\n  }\r\n  return terminalNitrogenCount === 2\r\n}\r\n\r\nconst PolarElements = [\r\n  Elements.N, Elements.O, Elements.S,\r\n  Elements.F, Elements.CL, Elements.BR, Elements.I\r\n]\r\n\r\nexport function isPolar (a: AtomProxy) {\r\n  return PolarElements.includes(a.number)\r\n}\r\n\r\nexport function hasPolarNeighbour (a: AtomProxy) {\r\n  let flag = false\r\n  a.eachBondedAtom(ba => {\r\n    if (isPolar(ba)) flag = true\r\n  })\r\n  return flag\r\n}\r\n\r\nexport function hasAromaticNeighbour (a: AtomProxy) {\r\n  let flag = false\r\n  a.eachBondedAtom(function (bap) {\r\n    if (bap.aromatic) flag = true\r\n  })\r\n  return flag\r\n}\r\n","/**\r\n * @file Charged\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @author Fred Ludlow <Fred.Ludlow@astx.com>\r\n */\r\n\r\nimport { Vector3 } from 'three'\r\n\r\nimport { defaults } from '../../utils'\r\nimport { radToDeg } from '../../math/math-utils'\r\nimport Structure from '../../structure/structure'\r\nimport { AA3, Bases, Elements } from '../../structure/structure-constants'\r\nimport { valenceModel } from '../../structure/data'\r\nimport {\r\n  isGuanidine, isAcetamidine, isSulfonicAcid, isPhosphate, isSulfate, isCarboxylate\r\n} from '../functional-groups'\r\nimport {\r\n  Features, FeatureType, FeatureGroup,\r\n  addAtom, addFeature, createFeatureState,\r\n} from './features'\r\nimport { Contacts, ContactType, ContactDefaultParams, invalidAtomContact } from './contact'\r\n\r\nconst PositvelyCharged = [ 'ARG', 'HIS', 'LYS' ]\r\nconst NegativelyCharged = [ 'GLU', 'ASP' ]\r\n\r\nexport function addPositiveCharges (structure: Structure, features: Features) {\r\n  const { charge } = valenceModel(structure.data)\r\n  const atomInGroupDict: { [atomIndex: number]: true } = {}\r\n\r\n  structure.eachResidue(r => {\r\n    if (PositvelyCharged.includes(r.resname)) {\r\n      const state = createFeatureState(FeatureType.PositiveCharge)\r\n      r.eachAtom(a => {\r\n        if (a.number === Elements.N && a.isSidechain()) {\r\n          addAtom(state, a)\r\n        }\r\n      })\r\n      addFeature(features, state)\r\n    } else if(!AA3.includes(r.resname) && !r.isNucleic()) {\r\n      r.eachAtom(a => {\r\n        let addGroup = false\r\n        const state = createFeatureState(FeatureType.PositiveCharge)\r\n        if (isGuanidine(a)) {\r\n          state.group = FeatureGroup.Guanidine\r\n          addGroup = true\r\n        } else if (isAcetamidine(a)) {\r\n          state.group = FeatureGroup.Acetamidine\r\n          addGroup = true\r\n        }\r\n        if (addGroup) {\r\n          a.eachBondedAtom(a => {\r\n            if (a.number === Elements.N) {\r\n              atomInGroupDict[a.index] = true\r\n              addAtom(state, a)\r\n            }\r\n          })\r\n          addFeature(features, state)\r\n        }\r\n      })\r\n      r.eachAtom(a => {\r\n        const state = createFeatureState(FeatureType.PositiveCharge)\r\n        if (charge[a.index] > 0) {\r\n          if (!atomInGroupDict[a.index]) {\r\n            addAtom(state, a)\r\n            addFeature(features, state)\r\n          }\r\n        }\r\n      })\r\n    }\r\n  })\r\n}\r\n\r\nexport function addNegativeCharges (structure: Structure, features: Features) {\r\n  const { charge } = valenceModel(structure.data)\r\n  const atomInGroupDict: { [atomIndex: number]: true } = {}\r\n\r\n  structure.eachResidue(r => {\r\n    if (NegativelyCharged.includes(r.resname)) {\r\n      const state = createFeatureState(FeatureType.NegativeCharge)\r\n      r.eachAtom(a => {\r\n        if (a.number === Elements.O && a.isSidechain()) {\r\n          addAtom(state, a)\r\n        }\r\n      })\r\n      addFeature(features, state)\r\n    } else if (Bases.includes(r.resname)) {\r\n      const state = createFeatureState(FeatureType.NegativeCharge)\r\n      r.eachAtom(a => {\r\n        if (isPhosphate(a)) {\r\n          state.group = FeatureGroup.Phosphate\r\n          a.eachBondedAtom(a => {\r\n            if (a.number === Elements.O) addAtom(state, a)\r\n          })\r\n          addFeature(features, state)\r\n        }\r\n      })\r\n    } else if(!AA3.includes(r.resname) && !Bases.includes(r.resname)) {\r\n      r.eachAtom(a => {\r\n        let addGroup = false\r\n        const state = createFeatureState(FeatureType.NegativeCharge)\r\n        if (isSulfonicAcid(a)) {\r\n          state.group = FeatureGroup.SulfonicAcid\r\n          addGroup = true\r\n        } else if (isPhosphate(a)) {\r\n          state.group = FeatureGroup.Phosphate\r\n          addGroup = true\r\n        } else if (isSulfate(a)) {\r\n          state.group = FeatureGroup.Sulfate\r\n          addGroup = true\r\n        } else if (isCarboxylate(a)) {\r\n          state.group = FeatureGroup.Carboxylate\r\n          addGroup = true\r\n        }\r\n        if (addGroup) {\r\n          a.eachBondedAtom(a => {\r\n            if (a.number === Elements.O) {\r\n              atomInGroupDict[a.index] = true\r\n              addAtom(state, a)\r\n            }\r\n          })\r\n          addFeature(features, state)\r\n        }\r\n      })\r\n      r.eachAtom(a => {\r\n        const state = createFeatureState(FeatureType.NegativeCharge)\r\n        if (charge[a.index] < 0) {\r\n          if (!atomInGroupDict[a.index]) {\r\n            addAtom(state, a)\r\n            addFeature(features, state)\r\n          }\r\n        }\r\n      })\r\n    }\r\n  })\r\n}\r\n\r\nexport function addAromaticRings (structure: Structure, features: Features) {\r\n  const a = structure.getAtomProxy()\r\n  structure.eachResidue(r => {\r\n    const rings = r.getAromaticRings()\r\n    if (rings) {\r\n      const offset = r.atomOffset\r\n      rings.forEach(ring => {\r\n        const state = createFeatureState(FeatureType.AromaticRing)\r\n        ring.forEach(i => {\r\n          a.index = i + offset\r\n          addAtom(state, a)\r\n        })\r\n        addFeature(features, state)\r\n      })\r\n    }\r\n  })\r\n}\r\n\r\nfunction isIonicInteraction (ti: FeatureType, tj: FeatureType) {\r\n  return (\r\n    (ti === FeatureType.NegativeCharge && tj === FeatureType.PositiveCharge) ||\r\n    (ti === FeatureType.PositiveCharge && tj === FeatureType.NegativeCharge)\r\n  )\r\n}\r\n\r\nfunction isPiStacking (ti: FeatureType, tj: FeatureType) {\r\n  return ti === FeatureType.AromaticRing && tj === FeatureType.AromaticRing\r\n}\r\n\r\nfunction isCationPi (ti: FeatureType, tj: FeatureType) {\r\n  return (\r\n    (ti === FeatureType.AromaticRing && tj === FeatureType.PositiveCharge) ||\r\n    (ti === FeatureType.PositiveCharge && tj === FeatureType.AromaticRing)\r\n  )\r\n}\r\n\r\nexport interface ChargedContactsParams {\r\n  maxIonicDist?: number\r\n  maxPiStackingDist?: number\r\n  maxPiStackingOffset?: number\r\n  maxPiStackingAngle?: number\r\n  maxCationPiDist?: number\r\n  maxCationPiOffset?: number\r\n  masterModelIndex?: number\r\n}\r\n\r\nexport function addChargedContacts (structure: Structure, contacts: Contacts, params: ChargedContactsParams = {}) {\r\n  const maxIonicDist = defaults(params.maxIonicDist, ContactDefaultParams.maxIonicDist)\r\n  const maxPiStackingDist = defaults(params.maxPiStackingDist, ContactDefaultParams.maxPiStackingDist)\r\n  const maxPiStackingOffset = defaults(params.maxPiStackingOffset, ContactDefaultParams.maxPiStackingOffset)\r\n  const maxPiStackingAngle = defaults(params.maxPiStackingAngle, ContactDefaultParams.maxPiStackingAngle)\r\n  const maxCationPiDist = defaults(params.maxCationPiDist, ContactDefaultParams.maxCationPiDist)\r\n  const maxCationPiOffset = defaults(params.maxCationPiOffset, ContactDefaultParams.maxCationPiOffset)\r\n  const masterIdx = defaults(params.masterModelIndex, ContactDefaultParams.masterModelIndex)\r\n\r\n  const maxDistance = Math.max(maxIonicDist + 2, maxPiStackingDist, maxCationPiDist)\r\n  // const maxSaltBridgeDistSq = maxSaltBridgeDist * maxSaltBridgeDist\r\n  const maxPiStackingDistSq = maxPiStackingDist * maxPiStackingDist\r\n  const maxCationPiDistSq = maxCationPiDist * maxCationPiDist\r\n\r\n  const { features, spatialHash, contactStore, featureSet } = contacts\r\n  const { types, centers, atomSets } = features\r\n  const { x, y, z } = centers\r\n  const n = types.length\r\n\r\n  const ax = structure.atomStore.x\r\n  const ay = structure.atomStore.y\r\n  const az = structure.atomStore.z\r\n\r\n  const ap1 = structure.getAtomProxy()\r\n  const ap2 = structure.getAtomProxy()\r\n\r\n  const areAtomSetsWithinDist = function (atomSet1: number[], atomSet2: number[], maxDist: number) {\r\n    const sn = atomSet1.length\r\n    const sm = atomSet2.length\r\n    for (let si = 0; si < sn; ++si) {\r\n      ap1.index = atomSet1[ si ]\r\n      for (let sj = 0; sj < sm; ++sj) {\r\n        ap2.index = atomSet2[ sj ]\r\n        if (ap1.distanceTo(ap2) <= maxDist) {\r\n          return true\r\n        }\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  const v1 = new Vector3()\r\n  const v2 = new Vector3()\r\n  const v3 = new Vector3()\r\n  const d1 = new Vector3()\r\n  const d2 = new Vector3()\r\n  const n1 = new Vector3()\r\n  const n2 = new Vector3()\r\n\r\n  const getNormal = function (atoms: number[], normal: Vector3) {\r\n    v1.set(ax[ atoms[ 0 ] ], ay[ atoms[ 0 ] ], az[ atoms[ 0 ] ])\r\n    v2.set(ax[ atoms[ 1 ] ], ay[ atoms[ 1 ] ], az[ atoms[ 1 ] ])\r\n    v3.set(ax[ atoms[ 2 ] ], ay[ atoms[ 2 ] ], az[ atoms[ 2 ] ])\r\n    d1.subVectors(v1, v2)\r\n    d2.subVectors(v1, v3)\r\n    normal.crossVectors(d1, d2)\r\n  }\r\n\r\n  const getOffset = function (i: number, j: number, normal: Vector3) {\r\n    v1.set(x[ i ], y[ i ], z[ i ])\r\n    v2.set(x[ j ], y[ j ], z[ j ])\r\n    return v1.sub(v2).projectOnPlane(normal).add(v2).distanceTo(v2)\r\n  }\r\n\r\n  const add = function (i: number, j: number, ct: ContactType) {\r\n    featureSet.setBits(i, j)\r\n    contactStore.addContact(i, j, ct)\r\n  }\r\n\r\n  for (let i = 0; i < n; ++i) {\r\n    spatialHash.eachWithin(x[i], y[i], z[i], maxDistance, (j, dSq) => {\r\n      if (j <= i) return\r\n\r\n      ap1.index = atomSets[ i ][ 0 ]\r\n      ap2.index = atomSets[ j ][ 0 ]\r\n\r\n      if (invalidAtomContact(ap1, ap2, masterIdx)) return\r\n\r\n      const ti = types[ i ]\r\n      const tj = types[ j ]\r\n\r\n      if (isIonicInteraction(ti, tj)) {\r\n        if (areAtomSetsWithinDist(atomSets[ i ], atomSets[ j ], maxIonicDist)) {\r\n          add(i, j, ContactType.IonicInteraction)\r\n        }\r\n      } else if (isPiStacking(ti, tj)) {\r\n        if (dSq <= maxPiStackingDistSq) {\r\n          getNormal(atomSets[ i ], n1)\r\n          getNormal(atomSets[ j ], n2)\r\n\r\n          const angle = radToDeg(n1.angleTo(n2))\r\n          const offset = Math.min(getOffset(i, j, n2), getOffset(j, i, n1))\r\n          if (offset <= maxPiStackingOffset) {\r\n            if (angle <= maxPiStackingAngle || angle >= 180 - maxPiStackingAngle) {\r\n              add(i, j, ContactType.PiStacking)  // parallel\r\n            } else if (angle <= maxPiStackingAngle + 90 && angle >= 90 - maxPiStackingAngle) {\r\n              add(i, j, ContactType.PiStacking)  // t-shaped\r\n            }\r\n          }\r\n        }\r\n      } else if (isCationPi(ti, tj)) {\r\n        if (dSq <= maxCationPiDistSq) {\r\n          const [ l, k ] = ti === FeatureType.AromaticRing ? [ i, j ] : [ j, i ]\r\n\r\n          getNormal(atomSets[ l ], n1)\r\n          const offset = getOffset(k, l, n1)\r\n          if (offset <= maxCationPiOffset) {\r\n            add(l, k, ContactType.CationPi)\r\n          }\r\n        }\r\n      }\r\n    })\r\n  }\r\n}\r\n","/**\r\n * @file Hydrogen Bonds\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @author Fred Ludlow <Fred.Ludlow@astx.com>\r\n */\r\nimport { defaults } from '../../utils'\r\nimport { degToRad } from '../../math/math-utils'\r\nimport Structure from '../../structure/structure'\r\nimport AtomProxy from '../../proxy/atom-proxy'\r\nimport { valenceModel } from '../../structure/data'\r\nimport { Elements } from '../../structure/structure-constants'\r\nimport { Angles, AtomGeometry, calcAngles, calcPlaneAngle } from '../geometry'\r\nimport {\r\n  Features, FeatureType,\r\n  addAtom, addFeature, createFeatureState,\r\n} from './features'\r\nimport { Contacts, ContactType, ContactDefaultParams, invalidAtomContact } from './contact'\r\n\r\n\r\n// Geometric characteristics of hydrogen bonds involving sulfur atoms in proteins\r\n// https://doi.org/10.1002/prot.22327\r\n\r\n// Satisfying Hydrogen Bonding Potential in Proteins (HBPLUS)\r\n// https://doi.org/10.1006/jmbi.1994.1334\r\n// http://www.csb.yale.edu/userguides/datamanip/hbplus/hbplus_descrip.html\r\n\r\n/**\r\n * Potential hydrogen donor\r\n */\r\nexport function addHydrogenDonors (structure: Structure, features: Features) {\r\n  const { totalH } = valenceModel(structure.data)\r\n\r\n  structure.eachAtom(a => {\r\n    const state = createFeatureState(FeatureType.HydrogenDonor)\r\n\r\n    const an = a.number\r\n    if (isHistidineNitrogen(a)) {\r\n      // include both nitrogen atoms in histidine due to\r\n      // their often ambiguous protonation assignment\r\n      addAtom(state, a)\r\n      addFeature(features, state)\r\n    } else if (\r\n      totalH[ a.index ] > 0 &&\r\n      (an === Elements.N || an === Elements.O || an === Elements.S)\r\n    ) {\r\n      addAtom(state, a)\r\n      addFeature(features, state)\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * Weak hydrogen donor.\r\n */\r\nexport function addWeakHydrogenDonors (structure: Structure, features: Features) {\r\n  const { totalH } = valenceModel(structure.data)\r\n\r\n  structure.eachAtom(a => {\r\n    if (\r\n      a.number === Elements.C &&\r\n      totalH[ a.index ] > 0 &&\r\n      (\r\n        a.bondToElementCount(Elements.N) > 0 ||\r\n        a.bondToElementCount(Elements.O) > 0 ||\r\n        inAromaticRingWithElectronNegativeElement(a)\r\n      )\r\n    ) {\r\n      const state = createFeatureState(FeatureType.WeakHydrogenDonor)\r\n      addAtom(state, a)\r\n      addFeature(features, state)\r\n    }\r\n  })\r\n}\r\n\r\nfunction inAromaticRingWithElectronNegativeElement (a: AtomProxy) {\r\n  if (!a.isAromatic()) return false\r\n\r\n  const ringData = a.residueType.getRings()\r\n  if (!ringData) return false\r\n\r\n  let hasElement = false\r\n  const rings = ringData.rings\r\n  rings.forEach(ring => {\r\n    if (hasElement) return  // already found one\r\n    if (ring.some(idx => (a.index - a.residueAtomOffset) === idx)) {  // in ring\r\n      hasElement = ring.some(idx => {\r\n        const atomTypeId = a.residueType.atomTypeIdList[ idx ]\r\n        const number = a.atomMap.get(atomTypeId).number\r\n        return number === Elements.N || number === Elements.O\r\n      })\r\n    }\r\n  })\r\n\r\n  return hasElement\r\n}\r\n\r\n/**\r\n * Potential hydrogen acceptor\r\n */\r\nexport function addHydrogenAcceptors (structure: Structure, features: Features) {\r\n  const { charge, implicitH, idealGeometry } = valenceModel(structure.data)\r\n\r\n  structure.eachAtom(a => {\r\n    const state = createFeatureState(FeatureType.HydrogenAcceptor)\r\n\r\n    const an = a.number\r\n    if (an === Elements.O) {\r\n      // Basically assume all oxygen atoms are acceptors!\r\n      addAtom(state, a)\r\n      addFeature(features, state)\r\n    }else if (an === Elements.N) {\r\n      if (isHistidineNitrogen(a)) {\r\n        // include both nitrogen atoms in histidine due to\r\n        // their often ambiguous protonation assignment\r\n        addAtom(state, a)\r\n        addFeature(features, state)\r\n      } else if (charge[ a.index ] < 1){\r\n        // Neutral nitrogen might be an acceptor\r\n        // It must have at least one lone pair not conjugated\r\n        const totalBonds = a.bondCount + implicitH[ a.index ]\r\n        const ig = idealGeometry[ a.index ]\r\n        if (\r\n          (ig === AtomGeometry.Tetrahedral && totalBonds < 4) ||\r\n          (ig === AtomGeometry.Trigonal && totalBonds < 3) ||\r\n          (ig === AtomGeometry.Linear && totalBonds < 2)\r\n        ) {\r\n          addAtom(state, a)\r\n          addFeature(features, state)\r\n        }\r\n      }\r\n    }else if (an === 16) {  // S\r\n      if (a.resname === 'CYS' || a.resname === 'MET' || a.formalCharge === -1) {\r\n        addAtom(state, a)\r\n        addFeature(features, state)\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * Atom that is only bound to carbon or hydrogen\r\n */\r\n// function isHydrocarbon (atom: AtomProxy) {\r\n//   let flag = true\r\n//   atom.eachBondedAtom(ap => {\r\n//     const e = ap.element\r\n//     if (e !== 'C' && e !== 'H') flag = false\r\n//   })\r\n//   return flag\r\n// }\r\n\r\nfunction isHistidineNitrogen (ap: AtomProxy) {\r\n  return ap.resname === 'HIS' && ap.number == Elements.N && ap.isRing()\r\n}\r\n\r\nfunction isBackboneHydrogenBond (ap1: AtomProxy, ap2: AtomProxy) {\r\n  return ap1.isBackbone() && ap2.isBackbone()\r\n}\r\n\r\nfunction isWaterHydrogenBond (ap1: AtomProxy, ap2: AtomProxy) {\r\n  return ap1.isWater() && ap2.isWater()\r\n}\r\n\r\nfunction isHydrogenBond (ti: FeatureType, tj: FeatureType) {\r\n  return (\r\n    (ti === FeatureType.HydrogenAcceptor && tj === FeatureType.HydrogenDonor) ||\r\n    (ti === FeatureType.HydrogenDonor && tj === FeatureType.HydrogenAcceptor)\r\n  )\r\n}\r\n\r\nfunction isWeakHydrogenBond (ti: FeatureType, tj: FeatureType){\r\n  return (\r\n    (ti === FeatureType.WeakHydrogenDonor && tj === FeatureType.HydrogenAcceptor) ||\r\n    (ti === FeatureType.HydrogenAcceptor && tj === FeatureType.WeakHydrogenDonor)\r\n  )\r\n}\r\n\r\nfunction getHydrogenBondType (ap1: AtomProxy, ap2: AtomProxy) {\r\n  if (isWaterHydrogenBond(ap1, ap2)) {\r\n    return ContactType.WaterHydrogenBond\r\n  } else if (isBackboneHydrogenBond(ap1, ap2)) {\r\n    return ContactType.BackboneHydrogenBond\r\n  } else {\r\n    return ContactType.HydrogenBond\r\n  }\r\n}\r\n\r\nexport interface HydrogenBondParams {\r\n  maxHbondDist?: number\r\n  maxHbondSulfurDist?: number\r\n  maxHbondAccAngle?: number\r\n  maxHbondDonAngle?: number\r\n  maxHbondAccPlaneAngle?: number\r\n  maxHbondDonPlaneAngle?: number\r\n  backboneHbond?: boolean\r\n  waterHbond?: boolean\r\n  masterModelIndex?: number\r\n}\r\n\r\n/**\r\n * All pairs of hydrogen donor and acceptor atoms\r\n */\r\nexport function addHydrogenBonds (structure: Structure, contacts: Contacts, params: HydrogenBondParams = {}) {\r\n  const maxHbondDist = defaults(params.maxHbondDist, ContactDefaultParams.maxHbondDist)\r\n  const maxHbondSulfurDist = defaults(params.maxHbondSulfurDist, ContactDefaultParams.maxHbondSulfurDist)\r\n  const maxHbondAccAngle = degToRad(defaults(params.maxHbondAccAngle, ContactDefaultParams.maxHbondAccAngle))\r\n  const maxHbondDonAngle = degToRad(defaults(params.maxHbondDonAngle, ContactDefaultParams.maxHbondDonAngle))\r\n  const maxHbondAccPlaneAngle = degToRad(defaults(params.maxHbondAccPlaneAngle, ContactDefaultParams.maxHbondAccPlaneAngle))\r\n  const maxHbondDonPlaneAngle = degToRad(defaults(params.maxHbondDonPlaneAngle, ContactDefaultParams.maxHbondDonPlaneAngle))\r\n  const masterIdx = defaults(params.masterModelIndex, ContactDefaultParams.masterModelIndex)\r\n\r\n  const maxDist = Math.max(maxHbondDist, maxHbondSulfurDist)\r\n  const maxHbondDistSq = maxHbondDist * maxHbondDist\r\n\r\n  const { features, spatialHash, contactStore, featureSet } = contacts\r\n  const { types, centers, atomSets } = features\r\n  const { x, y, z } = centers\r\n  const n = types.length\r\n\r\n  const { idealGeometry } = valenceModel(structure.data)\r\n\r\n  const donor = structure.getAtomProxy()\r\n  const acceptor = structure.getAtomProxy()\r\n\r\n  for (let i = 0; i < n; ++i) {\r\n    spatialHash.eachWithin(x[i], y[i], z[i], maxDist, (j, dSq) => {\r\n      if (j <= i) return\r\n\r\n      const ti = types[ i ]\r\n      const tj = types[ j ]\r\n\r\n      const isWeak = isWeakHydrogenBond(ti, tj)\r\n      if (!isWeak && !isHydrogenBond(ti, tj)) return\r\n\r\n      const [ l, k ] = tj === FeatureType.HydrogenAcceptor ? [ i, j ] : [ j, i ]\r\n\r\n      donor.index = atomSets[ l ][ 0 ]\r\n      acceptor.index = atomSets[ k ][ 0 ]\r\n\r\n      if (acceptor.index === donor.index) return // DA to self\r\n\r\n      if (invalidAtomContact(donor, acceptor, masterIdx)) return\r\n      if (donor.number !== Elements.S && acceptor.number !== Elements.S && dSq > maxHbondDistSq) return\r\n      if (donor.connectedTo(acceptor)) return\r\n\r\n      const donorAngles = calcAngles(donor, acceptor)\r\n      const idealDonorAngle = Angles.get(idealGeometry[donor.index]) || degToRad(120)\r\n      if (donorAngles.some(donorAngle => {\r\n        return Math.abs(idealDonorAngle - donorAngle) > maxHbondDonAngle\r\n      })) return\r\n\r\n      if (idealGeometry[donor.index] === AtomGeometry.Trigonal){\r\n        const outOfPlane = calcPlaneAngle(donor, acceptor)\r\n        if (outOfPlane !== undefined && outOfPlane > maxHbondDonPlaneAngle) return\r\n      }\r\n\r\n      const acceptorAngles = calcAngles(acceptor, donor)\r\n      const idealAcceptorAngle = Angles.get(idealGeometry[acceptor.index]) || degToRad(120)\r\n      if (acceptorAngles.some(acceptorAngle => {\r\n        // Do not limit large acceptor angles\r\n        return idealAcceptorAngle - acceptorAngle > maxHbondAccAngle\r\n      })) return\r\n\r\n      if (idealGeometry[acceptor.index] === AtomGeometry.Trigonal){\r\n        const outOfPlane = calcPlaneAngle(acceptor, donor)\r\n        if (outOfPlane !== undefined && outOfPlane > maxHbondAccPlaneAngle) return\r\n      }\r\n\r\n      featureSet.setBits(l, k)\r\n      const bondType = isWeak ? ContactType.WeakHydrogenBond : getHydrogenBondType(donor, acceptor)\r\n      contactStore.addContact(l, k, bondType)\r\n    })\r\n  }\r\n}\r\n","/**\r\n * @file Metal Binding\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\n\r\nimport { defaults } from '../../utils'\r\nimport Structure from '../../structure/structure'\r\n// import { valenceModel } from '../../structure/data'\r\nimport { Elements, AA3, Bases } from '../../structure/structure-constants'\r\n// import { hasAromaticNeighbour } from '../functional-groups'\r\nimport {\r\n  Features, FeatureType,\r\n  addAtom, addFeature, createFeatureState,\r\n} from './features'\r\nimport { Contacts, ContactType, ContactDefaultParams, invalidAtomContact } from './contact'\r\n\r\nconst IonicTypeMetals = [\r\n  Elements.LI, Elements.NA, Elements.K, Elements.RB, Elements.CS,\r\n  Elements.MG, Elements.CA, Elements.SR, Elements.BA, Elements.AL,\r\n  Elements.GA, Elements.IN, Elements.TL, Elements.SC, Elements.SN,\r\n  Elements.PB, Elements.BI, Elements.SB, Elements.HG\r\n]\r\n\r\n/**\r\n * Metal binding partners (dative bond or ionic-type interaction)\r\n */\r\nexport function addMetalBinding (structure: Structure, features: Features) {\r\n  structure.eachAtom(a => {\r\n    let dative = false\r\n    let ionic = false\r\n\r\n    const isStandardAminoacid = AA3.includes(a.resname)\r\n    const isStandardBase = Bases.includes(a.resname)\r\n\r\n    if (!isStandardAminoacid && !isStandardBase) {\r\n      if (a.isHalogen() || a.number === Elements.O || a.number === Elements.S) {\r\n        dative = true\r\n        ionic = true\r\n      } else if (a.number === Elements.N) {\r\n        dative = true\r\n      }\r\n    } else if (isStandardAminoacid){\r\n      // main chain oxygen atom or oxygen, nitrogen and sulfur from specific amino acids\r\n      if (a.number === Elements.O) {\r\n        if(['ASP', 'GLU', 'SER', 'THR', 'TYR', 'ASN', 'GLN'].includes(a.resname) && a.isSidechain()) {\r\n          dative = true\r\n          ionic = true\r\n        } else if (a.isBackbone()) {\r\n          dative = true\r\n          ionic = true\r\n        }\r\n      } else if (a.number === Elements.S && 'CYS' === a.resname) {\r\n        dative = true\r\n        ionic = true\r\n      } else if (a.number === Elements.N) {\r\n        if(a.resname === 'HIS' && a.isSidechain()) {\r\n          dative = true\r\n        }\r\n      }\r\n    } else if (isStandardBase){\r\n      // http://pubs.acs.org/doi/pdf/10.1021/acs.accounts.6b00253\r\n      // http://onlinelibrary.wiley.com/doi/10.1002/anie.200900399/full\r\n      if (a.number === Elements.O && a.isBackbone()) {\r\n        dative = true\r\n        ionic = true\r\n      } else if(['N3', 'N4', 'N7'].includes(a.atomname)) {\r\n        dative = true\r\n      } else if(['O2', 'O4', 'O6'].includes(a.atomname)) {\r\n        dative = true\r\n        ionic = true\r\n      }\r\n    }\r\n    if (dative) {\r\n      const state = createFeatureState(FeatureType.DativeBondPartner)\r\n      addAtom(state, a)\r\n      addFeature(features, state)\r\n    }\r\n    if (ionic) {\r\n      const state = createFeatureState(FeatureType.IonicTypePartner)\r\n      addAtom(state, a)\r\n      addFeature(features, state)\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * Metal Pi complexation partner\r\n */\r\n// export function addMetalPiPartners (structure: Structure, features: Features) {\r\n//   const { charge } = valenceModel(structure.data)\r\n\r\n//   structure.eachAtom(a => {\r\n//     const state = createFeatureState(FeatureType.MetalPiPartner)\r\n\r\n//     const resname = a.resname\r\n//     const element = a.element\r\n//     const atomname = a.atomname\r\n//     if (!a.isPolymer()) {\r\n//       // water oxygen, as well as oxygen from carboxylate, phosphoryl, phenolate, alcohol;\r\n//       // nitrogen from imidazole; sulfur from thiolate\r\n//       if (element === 'O') {\r\n//         // Water oxygen\r\n//         if (a.bondCount === 0 || a.isWater()) {\r\n//           addAtom(state, a)\r\n//           addFeature(features, state)\r\n//           return\r\n//         }\r\n//         // Oxygen in alcohol (R-[O]-H)\r\n//         if (a.bondCount === 2 && charge[ a.index ] || a.hasBondToElement('H')) {\r\n//           addAtom(state, a)\r\n//           addFeature(features, state)\r\n//           return\r\n//         }\r\n//         // Phenolate oxygen\r\n//         if (hasAromaticNeighbour(a) && !a.aromatic) {\r\n//           addAtom(state, a)\r\n//           addFeature(features, state)\r\n//           return\r\n//         }\r\n//         // Carboxylic acid oxygen\r\n//         if (a.bondToElementCount('C') === 1) {\r\n//           let flag = false\r\n//           a.eachBondedAtom(ba => {\r\n//             if (ba.element === 'C' && ba.bondToElementCount('O') === 2 && ba.bondToElementCount('C') === 1) {\r\n//               flag = true\r\n//             }\r\n//           })\r\n//           if (flag) {\r\n//             addAtom(state, a)\r\n//             addFeature(features, state)\r\n//             return\r\n//           }\r\n//         }\r\n//         // Phosphoryl oxygen\r\n//         if (a.bondToElementCount('P') === 1) {\r\n//           let flag = false\r\n//           a.eachBondedAtom(ba => {\r\n//             if (ba.element === 'P' && ba.bondToElementCount('O') >= 3) {\r\n//               flag = true\r\n//             }\r\n//           })\r\n//           if (flag) {\r\n//             addAtom(state, a)\r\n//             addFeature(features, state)\r\n//             return\r\n//           }\r\n//         }\r\n//       } else if (element === 'N') {\r\n//         // Imidazole/pyrrole or similar\r\n//         if (a.bondToElementCount('C') === 2) {\r\n//           addAtom(state, a)\r\n//           addFeature(features, state)\r\n//           return\r\n//         }\r\n//       } else if (element === 'S') {\r\n//         // Thiolate\r\n//         if (hasAromaticNeighbour(a) && !a.aromatic) {\r\n//           addAtom(state, a)\r\n//           addFeature(features, state)\r\n//           return\r\n//         }\r\n//         // Sulfur in Iron sulfur cluster\r\n//         const ironCount = a.bondToElementCount('FE')\r\n//         if (ironCount > 0 && ironCount === a.bondCount) {\r\n//           addAtom(state, a)\r\n//           addFeature(features, state)\r\n//           return\r\n//         }\r\n//       }\r\n//     }\r\n//   })\r\n// }\r\n\r\nexport function addMetals (structure: Structure, features: Features) {\r\n  structure.eachAtom(a => {\r\n    if (a.isTransitionMetal() || a.number === Elements.ZN || a.number === Elements.CD) {\r\n      const state = createFeatureState(FeatureType.TransitionMetal)\r\n      addAtom(state, a)\r\n      addFeature(features, state)\r\n    } else if (IonicTypeMetals.includes(a.number)) {\r\n      const state = createFeatureState(FeatureType.IonicTypeMetal)\r\n      addAtom(state, a)\r\n      addFeature(features, state)\r\n    }\r\n  })\r\n}\r\n\r\nfunction isMetalComplex (ti: FeatureType, tj: FeatureType) {\r\n  if (ti === FeatureType.TransitionMetal) {\r\n    return (\r\n      tj === FeatureType.DativeBondPartner ||\r\n      tj === FeatureType.TransitionMetal\r\n    )\r\n  } else if (ti === FeatureType.IonicTypeMetal) {\r\n    return (\r\n      tj === FeatureType.IonicTypePartner\r\n    )\r\n  }\r\n}\r\n\r\nexport interface MetalComplexationParams {\r\n  maxMetalDist?: number\r\n  masterModelIndex?: number\r\n}\r\n\r\n/**\r\n * Metal complexes of metals and appropriate groups in protein and ligand, including water\r\n */\r\nexport function addMetalComplexation (structure: Structure, contacts: Contacts, params: MetalComplexationParams = {}) {\r\n  const maxMetalDist = defaults(params.maxMetalDist, ContactDefaultParams.maxMetalDist)\r\n  const masterIdx = defaults(params.masterModelIndex, ContactDefaultParams.masterModelIndex)\r\n\r\n  const { features, spatialHash, contactStore, featureSet } = contacts\r\n  const { types, centers, atomSets } = features\r\n  const { x, y, z } = centers\r\n  const n = types.length\r\n\r\n  const ap1 = structure.getAtomProxy()\r\n  const ap2 = structure.getAtomProxy()\r\n\r\n  for (let i = 0; i < n; ++i) {\r\n    spatialHash.eachWithin(x[i], y[i], z[i], maxMetalDist, (j, dSq) => {\r\n      if (j <= i) return\r\n\r\n      ap1.index = atomSets[ i ][ 0 ]\r\n      ap2.index = atomSets[ j ][ 0 ]\r\n\r\n      if (invalidAtomContact(ap1, ap2, masterIdx)) return\r\n\r\n      const m1 = ap1.isMetal()\r\n      const m2 = ap2.isMetal()\r\n      if (!m1 && !m2) return\r\n\r\n      const [ ti, tj ] = m1 ? [ types[ i ],types[ j ] ] : [ types[ j ],types[ i ] ]\r\n\r\n      if (isMetalComplex(ti, tj)) {\r\n        featureSet.setBits(i, j)\r\n        contactStore.addContact(i, j, ContactType.MetalCoordination)\r\n      }\r\n    })\r\n  }\r\n}\r\n","/**\r\n * @file Hydrophobic\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\n\r\nimport { defaults } from '../../utils'\r\nimport Structure from '../../structure/structure'\r\nimport { Elements } from '../../structure/structure-constants'\r\nimport {\r\n  Features, FeatureType,\r\n  addAtom, addFeature, createFeatureState,\r\n} from './features'\r\nimport { Contacts, ContactType, ContactDefaultParams, invalidAtomContact } from './contact'\r\n\r\n/**\r\n * Hydrophobic carbon (only bonded to carbon or hydrogen); fluorine\r\n */\r\nexport function addHydrophobic (structure: Structure, features: Features) {\r\n  structure.eachAtom(a => {\r\n    const state = createFeatureState(FeatureType.Hydrophobic)\r\n    let flag = false\r\n    if (a.number === Elements.C) {\r\n      flag = true\r\n      a.eachBondedAtom(ap => {\r\n        const an = ap.number\r\n        if (an !== Elements.C && an !== Elements.H) flag = false\r\n      })\r\n    } else if (a.number === Elements.F) {\r\n      flag = true\r\n    }\r\n    if (flag) {\r\n      addAtom(state, a)\r\n      addFeature(features, state)\r\n    }\r\n  })\r\n}\r\n\r\nfunction isHydrophobicContact (ti: FeatureType, tj: FeatureType) {\r\n  return ti === FeatureType.Hydrophobic && tj === FeatureType.Hydrophobic\r\n}\r\n\r\nexport interface HydrophobicContactsParams {\r\n  maxHydrophobicDist?: number\r\n  masterModelIndex?: number\r\n}\r\n\r\n/**\r\n * All hydrophobic contacts\r\n */\r\nexport function addHydrophobicContacts (structure: Structure, contacts: Contacts, params: HydrophobicContactsParams = {}) {\r\n  const maxHydrophobicDist = defaults(params.maxHydrophobicDist, ContactDefaultParams.maxHydrophobicDist)\r\n  const masterIdx = defaults(params.masterModelIndex, ContactDefaultParams.masterModelIndex)\r\n\r\n  const { features, spatialHash, contactStore, featureSet } = contacts\r\n  const { types, centers, atomSets } = features\r\n  const { x, y, z } = centers\r\n  const n = types.length\r\n\r\n  const ap1 = structure.getAtomProxy()\r\n  const ap2 = structure.getAtomProxy()\r\n\r\n  for (let i = 0; i < n; ++i) {\r\n    spatialHash.eachWithin(x[i], y[i], z[i], maxHydrophobicDist, (j, dSq) => {\r\n      if (j <= i) return\r\n\r\n      ap1.index = atomSets[ i ][ 0 ]\r\n      ap2.index = atomSets[ j ][ 0 ]\r\n\r\n      if (invalidAtomContact(ap1, ap2, masterIdx)) return\r\n      if (ap1.number === Elements.F && ap2.number === Elements.F) return\r\n      if (ap1.connectedTo(ap2)) return\r\n\r\n      if (isHydrophobicContact(types[ i ], types[ j ])) {\r\n        featureSet.setBits(i, j)\r\n        contactStore.addContact(i, j, ContactType.Hydrophobic)\r\n      }\r\n    })\r\n  }\r\n}\r\n","/**\r\n * @file Halogen Bonds\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @author Fred Ludlow <Fred.Ludlow@astx.com>\r\n */\r\n\r\nimport { defaults } from '../../utils'\r\nimport Structure from '../../structure/structure'\r\nimport { Elements } from '../../structure/structure-constants'\r\nimport { degToRad } from '../../math/math-utils'\r\nimport {\r\n  Features, FeatureType,\r\n  addAtom, addFeature, createFeatureState,\r\n} from './features'\r\nimport { Contacts, ContactType, ContactDefaultParams, invalidAtomContact } from './contact'\r\nimport { calcAngles } from '../geometry'\r\n\r\nconst halBondElements = [17, 35, 53, 85]\r\n\r\n/**\r\n * Halogen bond donors (X-C, with X one of Cl, Br, I or At) not F!\r\n */\r\nexport function addHalogenDonors (structure: Structure, features: Features) {\r\n  structure.eachAtom(a => {\r\n    if (halBondElements.includes(a.number) && a.bondToElementCount(Elements.C) === 1) {\r\n      const state = createFeatureState(FeatureType.HalogenDonor)\r\n      addAtom(state, a)\r\n      addFeature(features, state)\r\n    }\r\n  })\r\n}\r\n\r\nconst X = [ Elements.N, Elements.O, Elements.S ]\r\nconst Y = [ Elements.C, Elements.N, Elements.P, Elements.S ]\r\n\r\n/**\r\n * Halogen bond acceptors (Y-{O|N|S}, with Y=C,P,N,S)\r\n */\r\nexport function addHalogenAcceptors (structure: Structure, features: Features) {\r\n  structure.eachAtom(a => {\r\n    if (X.includes(a.number)) {\r\n      let flag = false\r\n      a.eachBondedAtom(ba => {\r\n        if (Y.includes(ba.number)) {\r\n          flag = true\r\n        }\r\n      })\r\n      if (flag) {\r\n        const state = createFeatureState(FeatureType.HalogenAcceptor)\r\n        addAtom(state, a)\r\n        addFeature(features, state)\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nfunction isHalogenBond (ti: FeatureType, tj: FeatureType) {\r\n  return (\r\n    (ti === FeatureType.HalogenAcceptor && tj === FeatureType.HalogenDonor) ||\r\n    (ti === FeatureType.HalogenDonor && tj === FeatureType.HalogenAcceptor)\r\n  )\r\n}\r\n\r\nexport interface HalogenBondsParams {\r\n  maxHalogenBondDist?: number\r\n  maxHalogenBondAngle?: number\r\n  masterModelIndex?: number\r\n}\r\n\r\n// http://www.pnas.org/content/101/48/16789.full\r\nconst OptimalHalogenAngle = degToRad(180)  // adjusted from 165 to account for spherical statistics\r\nconst OptimalAcceptorAngle = degToRad(120)\r\n\r\n/**\r\n * All pairs of halogen donor and acceptor atoms\r\n */\r\nexport function addHalogenBonds (structure: Structure, contacts: Contacts, params: HalogenBondsParams = {}) {\r\n  const maxHalogenBondDist = defaults(params.maxHalogenBondDist, ContactDefaultParams.maxHalogenBondDist)\r\n  const maxHalogenBondAngle = degToRad(defaults(params.maxHalogenBondAngle, ContactDefaultParams.maxHalogenBondAngle))\r\n  const masterIdx = defaults(params.masterModelIndex, ContactDefaultParams.masterModelIndex)\r\n\r\n  const { features, spatialHash, contactStore, featureSet } = contacts\r\n  const { types, centers, atomSets } = features\r\n  const { x, y, z } = centers\r\n  const n = types.length\r\n\r\n  const ap1 = structure.getAtomProxy()\r\n  const ap2 = structure.getAtomProxy()\r\n\r\n  for (let i = 0; i < n; ++i) {\r\n    spatialHash.eachWithin(x[i], y[i], z[i], maxHalogenBondDist, (j, dSq) => {\r\n      if (j <= i) return\r\n\r\n      ap1.index = atomSets[ i ][ 0 ]\r\n      ap2.index = atomSets[ j ][ 0 ]\r\n\r\n      if (invalidAtomContact(ap1, ap2, masterIdx)) return\r\n      if (!isHalogenBond(types[ i ], types[ j ])) return\r\n\r\n      const [ halogen, acceptor ] = types[ i ] === FeatureType.HalogenDonor ? [ ap1, ap2 ] : [ ap2, ap1 ]\r\n\r\n      const halogenAngles = calcAngles(halogen, acceptor)\r\n      // Singly bonded halogen only (not bromide ion for example)\r\n      if (halogenAngles.length !== 1) return\r\n      if (OptimalHalogenAngle - halogenAngles[0] > maxHalogenBondAngle) return\r\n\r\n      const acceptorAngles = calcAngles(acceptor, halogen)\r\n      // Angle must be defined. Excludes water as acceptor. Debatable\r\n      if (acceptorAngles.length === 0) return\r\n      if (acceptorAngles.some(acceptorAngle => {\r\n        return (OptimalAcceptorAngle - acceptorAngle > maxHalogenBondAngle)\r\n      })) return\r\n\r\n\r\n      featureSet.setBits(i, j)\r\n      contactStore.addContact(i, j, ContactType.HalogenBond)\r\n\r\n    })\r\n  }\r\n}\r\n","/**\r\n * @file Refine Contacts\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3 } from 'three'\r\n\r\nimport { Debug, Log } from '../../globals'\r\nimport { defaults } from '../../utils'\r\nimport Structure from '../../structure/structure'\r\nimport AtomProxy from '../../proxy/atom-proxy'\r\nimport { Elements } from '../../structure/structure-constants'\r\nimport { FrozenContacts, ContactType, ContactDefaultParams, isMasterContact } from './contact'\r\nimport { FeatureType } from './features'\r\n\r\nexport interface LineOfSightParams {\r\n  lineOfSightDistFactor?: number\r\n  masterModelIndex?: number\r\n}\r\n\r\n// also allows intra-residue contacts\r\nexport function invalidAtomContact (ap1: AtomProxy, ap2: AtomProxy, masterIdx: number) {\r\n  return !isMasterContact(ap1, ap2, masterIdx) && (\r\n    ap1.modelIndex !== ap2.modelIndex ||\r\n    (ap1.altloc && ap2.altloc && ap1.altloc !== ap2.altloc)\r\n  )\r\n}\r\n\r\nexport function refineLineOfSight (structure: Structure, contacts: FrozenContacts, params: LineOfSightParams = {}) {\r\n  if (Debug) Log.time('refineLineOfSight')\r\n\r\n  const lineOfSightDistFactor = defaults(params.lineOfSightDistFactor, ContactDefaultParams.lineOfSightDistFactor)\r\n  const masterIdx = defaults(params.masterModelIndex, ContactDefaultParams.masterModelIndex)\r\n\r\n  const spatialHash = structure.spatialHash!\r\n  const { contactSet, contactStore, features } = contacts\r\n  const { index1, index2 } = contactStore\r\n  const { centers, atomSets } = features\r\n  const { x, y, z } = centers\r\n\r\n  const ac1 = structure.getAtomProxy()\r\n  const ac2 = structure.getAtomProxy()\r\n  const aw = structure.getAtomProxy()\r\n\r\n  const c1 = new Vector3()\r\n  const c2 = new Vector3()\r\n\r\n  const lineOfSightDist = 3 * lineOfSightDistFactor\r\n  const lineOfSightDistFactorSq = lineOfSightDistFactor * lineOfSightDistFactor\r\n\r\n  contactSet.forEach(i => {\r\n    c1.set(x[index1[i]], y[index1[i]], z[index1[i]])\r\n    c2.set(x[index2[i]], y[index2[i]], z[index2[i]])\r\n\r\n    const cx = ( c1.x + c2.x ) / 2\r\n    const cy = ( c1.y + c2.y ) / 2\r\n    const cz = ( c1.z + c2.z ) / 2\r\n\r\n    const as1 = atomSets[ index1[ i ] ]\r\n    const as2 = atomSets[ index2[ i ] ]\r\n\r\n    ac1.index = as1[ 0 ]\r\n    ac2.index = as2[ 0 ]\r\n\r\n    spatialHash.eachWithin(cx, cy, cz, lineOfSightDist, (j, dSq) => {\r\n      aw.index = j\r\n      if (\r\n        aw.number !== Elements.H &&\r\n        (aw.vdw * aw.vdw * lineOfSightDistFactorSq) > dSq &&\r\n        !invalidAtomContact(ac1, aw, masterIdx) &&\r\n        !invalidAtomContact(ac2, aw, masterIdx) &&\r\n        !as1.includes(j) &&\r\n        !as2.includes(j) &&\r\n        // to ignore atoms in the center of functional groups\r\n        c1.distanceToSquared(aw as any) > 1 &&\r\n        c2.distanceToSquared(aw as any) > 1\r\n      ) {\r\n        contactSet.clear(i)\r\n        if (Debug) Log.log('removing', ac1.qualifiedName(), ac2.qualifiedName(), 'because', aw.qualifiedName())\r\n      }\r\n    })\r\n  })\r\n\r\n  if (Debug) Log.timeEnd('refineLineOfSight')\r\n}\r\n\r\n/**\r\n * For atoms interacting with several atoms in the same residue\r\n * only the one with the closest distance is kept.\r\n */\r\nexport function refineHydrophobicContacts (structure: Structure, contacts: FrozenContacts) {\r\n  const { contactSet, contactStore, features } = contacts\r\n  const { type, index1, index2 } = contactStore\r\n  const { atomSets } = features\r\n\r\n  const ap1 = structure.getAtomProxy()\r\n  const ap2 = structure.getAtomProxy()\r\n\r\n  const residueContactDict: { [k: string]: number[] } = {}\r\n\r\n  /* keep only closest contact between residues */\r\n  const handleResidueContact = function (dist: number, i: number, key: string) {\r\n    const [ minDist, minIndex ] = residueContactDict[ key ] || [ Infinity, -1 ]\r\n    if (dist < minDist) {\r\n      if (minIndex !== -1) contactSet.clear(minIndex)\r\n      residueContactDict[ key ] = [ dist, i ]\r\n    } else {\r\n      contactSet.clear(i)\r\n    }\r\n  }\r\n\r\n  contactSet.forEach(i => {\r\n    if (type[ i ] !== ContactType.Hydrophobic) return\r\n\r\n    ap1.index = atomSets[ index1[ i ] ][ 0 ]\r\n    ap2.index = atomSets[ index2[ i ] ][ 0 ]\r\n\r\n    const dist = ap1.distanceTo(ap2)\r\n    handleResidueContact(dist, i, `${ap1.index}|${ap2.residueIndex}`)\r\n    handleResidueContact(dist, i, `${ap2.index}|${ap1.residueIndex}`)\r\n  })\r\n}\r\n\r\nfunction isHydrogenBondType (type: number) {\r\n  return (\r\n    type === ContactType.HydrogenBond ||\r\n    type === ContactType.WaterHydrogenBond ||\r\n    type === ContactType.BackboneHydrogenBond\r\n  )\r\n}\r\n\r\n/**\r\n * Remove weak hydrogen bonds when the acceptor is involved in\r\n * a normal/strong hydrogen bond\r\n */\r\nexport function refineWeakHydrogenBonds (structure: Structure, contacts: FrozenContacts) {\r\n  const { contactSet, contactStore, features, adjacencyList } = contacts\r\n  const { type, index1, index2 } = contactStore\r\n  const { types } = features\r\n\r\n  contactSet.forEach(i => {\r\n    if (type[ i ] !== ContactType.WeakHydrogenBond) return\r\n\r\n    let accFeat: number\r\n    if (types[ index1[ i ] ] === FeatureType.WeakHydrogenDonor) {\r\n      accFeat = index2[ i ]\r\n    } else {\r\n      accFeat = index1[ i ]\r\n    }\r\n\r\n    const n = adjacencyList.countArray[ accFeat ]\r\n    const offset = adjacencyList.offsetArray[ accFeat ]\r\n    for (let j = 0; j < n; ++j) {\r\n      const ci = adjacencyList.indexArray[ offset + j ]\r\n      if (isHydrogenBondType(type[ ci ])) {\r\n        contactSet.clear(i)\r\n        return\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * Remove hydrogen bonds between groups that also form\r\n * a salt bridge between each other\r\n */\r\nexport function refineSaltBridges (structure: Structure, contacts: FrozenContacts) {\r\n  const { contactSet, contactStore, features } = contacts\r\n  const { type, index1, index2 } = contactStore\r\n  const { atomSets } = features\r\n\r\n  const ionicInteractionDict: { [atomIndex: number]: number[] } = {}\r\n\r\n  const add = function(idx: number, i: number) {\r\n    if (!ionicInteractionDict[ idx ]) ionicInteractionDict[ idx ] = []\r\n    ionicInteractionDict[ idx ].push(i)\r\n  }\r\n\r\n  contactSet.forEach(i => {\r\n    if (type[ i ] !== ContactType.IonicInteraction) return\r\n    atomSets[ index1[ i ] ].forEach(idx => add(idx, i))\r\n    atomSets[ index2[ i ] ].forEach(idx => add(idx, i))\r\n  })\r\n\r\n  contactSet.forEach(i => {\r\n    if (!isHydrogenBondType(type[ i ])) return\r\n\r\n    const iil1 = ionicInteractionDict[ atomSets[ index1[ i ] ][ 0 ] ]\r\n    const iil2 = ionicInteractionDict[ atomSets[ index2[ i ] ][ 0 ] ]\r\n    if (!iil1 || !iil2) return\r\n\r\n    const n = iil1.length\r\n    for (let j = 0; j < n; ++j) {\r\n      if (iil2.includes(iil1[j])) {\r\n        contactSet.clear(i)\r\n        return\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * Remove hydrophobic and cation-pi interactions between groups that also form\r\n * a pi-stacking interaction between each other\r\n */\r\nexport function refinePiStacking (structure: Structure, contacts: FrozenContacts) {\r\n  const { contactSet, contactStore, features } = contacts\r\n  const { type, index1, index2 } = contactStore\r\n  const { atomSets } = features\r\n\r\n  const piStackingDict: { [atomIndex: number]: number[] } = {}\r\n\r\n  const add = function(idx: number, i: number) {\r\n    if (!piStackingDict[ idx ]) piStackingDict[ idx ] = []\r\n    piStackingDict[ idx ].push(i)\r\n  }\r\n\r\n  contactSet.forEach(i => {\r\n    if (type[ i ] !== ContactType.PiStacking) return\r\n    atomSets[ index1[ i ] ].forEach(idx => add(idx, i))\r\n    atomSets[ index2[ i ] ].forEach(idx => add(idx, i))\r\n  })\r\n\r\n  contactSet.forEach(i => {\r\n    if (\r\n      type[ i ] !== ContactType.Hydrophobic &&\r\n      type[ i ] !== ContactType.CationPi\r\n    ) return\r\n\r\n    const pil1 = piStackingDict[ atomSets[ index1[ i ] ][ 0 ] ]\r\n    const pil2 = piStackingDict[ atomSets[ index2[ i ] ][ 0 ] ]\r\n    if (!pil1 || !pil2) return\r\n\r\n    const n = pil1.length\r\n    for (let j = 0; j < n; ++j) {\r\n      if (pil2.includes(pil1[j])) {\r\n        contactSet.clear(i)\r\n        return\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * Remove ionic interactions between groups that also form\r\n * a metal coordination between each other\r\n */\r\nexport function refineMetalCoordination (structure: Structure, contacts: FrozenContacts) {\r\n  const { contactSet, contactStore, features } = contacts\r\n  const { type, index1, index2 } = contactStore\r\n  const { atomSets } = features\r\n\r\n  const ionicInteractionDict: { [atomIndex: number]: number[] } = {}\r\n\r\n  const add = function(idx: number, i: number) {\r\n    if (!ionicInteractionDict[ idx ]) ionicInteractionDict[ idx ] = []\r\n    ionicInteractionDict[ idx ].push(i)\r\n  }\r\n\r\n  contactSet.forEach(i => {\r\n    if (type[ i ] !== ContactType.IonicInteraction) return\r\n    atomSets[ index1[ i ] ].forEach(idx => add(idx, i))\r\n    atomSets[ index2[ i ] ].forEach(idx => add(idx, i))\r\n  })\r\n\r\n  contactSet.forEach(i => {\r\n    if (type[ i ] !== ContactType.MetalCoordination) return\r\n\r\n    const iil1 = ionicInteractionDict[ atomSets[ index1[ i ] ][ 0 ] ]\r\n    const iil2 = ionicInteractionDict[ atomSets[ index2[ i ] ][ 0 ] ]\r\n    if (!iil1 || !iil2) return\r\n\r\n    const n = iil1.length\r\n    for (let j = 0; j < n; ++j) {\r\n      if (iil2.includes(iil1[j])) {\r\n        contactSet.clear(iil1[j])\r\n        return\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n// TODO: refactor refineSaltBridges, refinePiStacking and refineMetalCoordination to be DRY\r\n","/**\r\n * @file Contact\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\n\r\nimport { Color } from 'three'\r\n\r\nimport { Debug, Log } from '../../globals'\r\nimport { createParams } from '../../utils'\r\nimport { TextBufferData } from '../../buffer/text-buffer'\r\nimport Structure from '../../structure/structure'\r\nimport AtomProxy from '../../proxy/atom-proxy'\r\nimport SpatialHash from '../../geometry/spatial-hash'\r\nimport { calculateCenterArray, calculateDirectionArray, uniformArray } from '../../math/array-utils'\r\nimport ContactStore from '../../store/contact-store'\r\nimport BitArray from '../../utils/bitarray'\r\nimport Selection from '../../selection/selection'\r\nimport { ContactPicker } from '../../utils/picker'\r\nimport { createAdjacencyList, AdjacencyList } from '../../utils/adjacency-list'\r\nimport { createFeatures, Features } from './features'\r\nimport { addAromaticRings, addNegativeCharges, addPositiveCharges, addChargedContacts } from './charged'\r\nimport { addHydrogenAcceptors, addHydrogenDonors, addHydrogenBonds, addWeakHydrogenDonors } from './hydrogen-bonds'\r\nimport { addMetalBinding, addMetals, addMetalComplexation } from './metal-binding'\r\nimport { addHydrophobic, addHydrophobicContacts } from './hydrophobic'\r\nimport { addHalogenAcceptors, addHalogenDonors, addHalogenBonds } from './halogen-bonds'\r\nimport {\r\n  refineLineOfSight,\r\n  refineHydrophobicContacts, refineSaltBridges, refinePiStacking, refineMetalCoordination\r\n} from './refine-contacts'\r\n\r\nexport interface Contacts {\r\n  features: Features\r\n  spatialHash: SpatialHash\r\n  contactStore: ContactStore\r\n  featureSet: BitArray\r\n}\r\n\r\nexport interface FrozenContacts extends Contacts {\r\n  contactSet: BitArray\r\n  adjacencyList: AdjacencyList\r\n}\r\n\r\nexport const enum ContactType {\r\n  Unknown = 0,\r\n  IonicInteraction = 1,\r\n  CationPi = 2,\r\n  PiStacking = 3,\r\n  HydrogenBond = 4,\r\n  HalogenBond = 5,\r\n  Hydrophobic = 6,\r\n  MetalCoordination = 7,\r\n  WeakHydrogenBond = 8,\r\n  WaterHydrogenBond = 9,\r\n  BackboneHydrogenBond = 10\r\n}\r\n\r\nexport const ContactDefaultParams = {\r\n  maxHydrophobicDist: 4.0,\r\n  maxHbondDist: 3.5,\r\n  maxHbondSulfurDist: 4.1,\r\n  maxHbondAccAngle: 45,\r\n  maxHbondDonAngle: 45,\r\n  maxHbondAccPlaneAngle: 90,\r\n  maxHbondDonPlaneAngle: 30,\r\n  maxPiStackingDist: 5.5,\r\n  maxPiStackingOffset: 2.0,\r\n  maxPiStackingAngle: 30,\r\n  maxCationPiDist: 6.0,\r\n  maxCationPiOffset: 2.0,\r\n  maxIonicDist: 5.0,\r\n  maxHalogenBondDist: 4.0,\r\n  maxHalogenBondAngle: 30,\r\n  maxMetalDist: 3.0,\r\n  refineSaltBridges: true,\r\n  masterModelIndex: -1,\r\n  lineOfSightDistFactor: 1.0\r\n}\r\n\r\nexport function isMasterContact (ap1: AtomProxy, ap2: AtomProxy, masterIdx: number) {\r\n  return (\r\n    (ap1.modelIndex === masterIdx && ap2.modelIndex !== masterIdx) ||\r\n    (ap2.modelIndex === masterIdx && ap1.modelIndex !== masterIdx)\r\n  )\r\n}\r\n\r\nexport function invalidAtomContact (ap1: AtomProxy, ap2: AtomProxy, masterIdx: number) {\r\n  return !isMasterContact(ap1, ap2, masterIdx) && (\r\n    ap1.modelIndex !== ap2.modelIndex ||\r\n    ap1.residueIndex === ap2.residueIndex ||\r\n    (ap1.altloc && ap2.altloc && ap1.altloc !== ap2.altloc)\r\n  )\r\n}\r\n\r\nexport function createContacts (features: Features): Contacts {\r\n  const { types, centers } = features\r\n\r\n  const spatialHash = new SpatialHash(centers)\r\n  const contactStore = new ContactStore()\r\n  const featureSet = new BitArray(types.length, false)\r\n\r\n  return { features, spatialHash, contactStore, featureSet }\r\n}\r\n\r\nexport function createFrozenContacts (contacts: Contacts): FrozenContacts {\r\n  const { index1, index2, count } = contacts.contactStore\r\n\r\n  const adjacencyList = createAdjacencyList({\r\n    nodeArray1: index1,\r\n    nodeArray2: index2,\r\n    edgeCount: count,\r\n    nodeCount: contacts.featureSet.length\r\n  })\r\n  const contactSet = new BitArray(contacts.contactStore.count, true)\r\n\r\n  return Object.assign({ adjacencyList, contactSet }, contacts)\r\n}\r\n\r\nfunction calculateFeatures (structure: Structure) {\r\n  const features = createFeatures()\r\n\r\n  if (Debug) Log.time('calculateFeatures')\r\n\r\n  addPositiveCharges(structure, features)\r\n  addNegativeCharges(structure, features)\r\n  addAromaticRings(structure, features)\r\n\r\n  addHydrogenAcceptors(structure, features)\r\n  addHydrogenDonors(structure, features)\r\n  addWeakHydrogenDonors(structure, features)\r\n\r\n  addMetalBinding(structure, features)\r\n  addMetals(structure, features)\r\n\r\n  addHydrophobic(structure, features)\r\n\r\n  addHalogenAcceptors(structure, features)\r\n  addHalogenDonors(structure, features)\r\n\r\n  if (Debug) Log.timeEnd('calculateFeatures')\r\n\r\n  return features\r\n}\r\n\r\nexport function calculateContacts (structure: Structure, params = ContactDefaultParams) {\r\n  const features = calculateFeatures(structure)\r\n  const contacts = createContacts(features)\r\n\r\n  if (Debug) Log.time('calculateContacts')\r\n\r\n  addChargedContacts(structure, contacts, params)\r\n  addHydrogenBonds(structure, contacts, params)\r\n  addMetalComplexation(structure, contacts, params)\r\n  addHydrophobicContacts(structure, contacts, params)\r\n  addHalogenBonds(structure, contacts, params)\r\n\r\n  const frozenContacts = createFrozenContacts(contacts)\r\n\r\n  refineLineOfSight(structure, frozenContacts, params)\r\n  refineHydrophobicContacts(structure, frozenContacts)\r\n  if (params.refineSaltBridges) refineSaltBridges(structure, frozenContacts)\r\n  refinePiStacking(structure, frozenContacts)\r\n  refineMetalCoordination(structure, frozenContacts)\r\n\r\n  if (Debug) Log.timeEnd('calculateContacts')\r\n\r\n  return frozenContacts\r\n}\r\n\r\nexport function contactTypeName (type: ContactType) {\r\n  switch (type) {\r\n    case ContactType.HydrogenBond:\r\n    case ContactType.WaterHydrogenBond:\r\n    case ContactType.BackboneHydrogenBond:\r\n      return 'hydrogen bond'\r\n    case ContactType.Hydrophobic:\r\n      return 'hydrophobic contact'\r\n    case ContactType.HalogenBond:\r\n      return 'halogen bond'\r\n    case ContactType.IonicInteraction:\r\n      return 'ionic interaction'\r\n    case ContactType.MetalCoordination:\r\n      return 'metal coordination'\r\n    case ContactType.CationPi:\r\n      return 'cation-pi interaction'\r\n    case ContactType.PiStacking:\r\n      return 'pi-pi stacking'\r\n    case ContactType.WeakHydrogenBond:\r\n      return 'weak hydrogen bond'\r\n    default:\r\n      return 'unknown contact'\r\n  }\r\n}\r\n\r\nexport const ContactDataDefaultParams = {\r\n  hydrogenBond: true,\r\n  hydrophobic: true,\r\n  halogenBond: true,\r\n  ionicInteraction: true,\r\n  metalCoordination: true,\r\n  cationPi: true,\r\n  piStacking: true,\r\n  weakHydrogenBond: true,\r\n  waterHydrogenBond: true,\r\n  backboneHydrogenBond: true,\r\n  radius: 1,\r\n  filterSele: ''\r\n}\r\nexport type ContactDataParams = typeof ContactDataDefaultParams\r\n  | { filterSele: string|[string, string] }\r\n\r\nexport const ContactLabelDefaultParams = {\r\n  unit: '',\r\n  size: 2.0\r\n}\r\n\r\nexport type ContactLabelParams = typeof ContactLabelDefaultParams\r\n\r\nconst tmpColor = new Color()\r\nfunction contactColor (type: ContactType) {\r\n  switch (type) {\r\n    case ContactType.HydrogenBond:\r\n    case ContactType.WaterHydrogenBond:\r\n    case ContactType.BackboneHydrogenBond:\r\n      return tmpColor.setHex(0x2B83BA).toArray()\r\n    case ContactType.Hydrophobic:\r\n      return tmpColor.setHex(0x808080).toArray()\r\n    case ContactType.HalogenBond:\r\n      return tmpColor.setHex(0x40FFBF).toArray()\r\n    case ContactType.IonicInteraction:\r\n      return tmpColor.setHex(0xF0C814).toArray()\r\n    case ContactType.MetalCoordination:\r\n      return tmpColor.setHex(0x8C4099).toArray()\r\n    case ContactType.CationPi:\r\n      return tmpColor.setHex(0xFF8000).toArray()\r\n    case ContactType.PiStacking:\r\n      return tmpColor.setHex(0x8CB366).toArray()\r\n    case ContactType.WeakHydrogenBond:\r\n      return tmpColor.setHex(0xC5DDEC).toArray()\r\n    default:\r\n      return tmpColor.setHex(0xCCCCCC).toArray()\r\n  }\r\n}\r\n\r\nexport interface ContactData {\r\n  position1: Float32Array,\r\n  position2: Float32Array,\r\n  color: Float32Array,\r\n  color2: Float32Array,\r\n  radius: Float32Array,\r\n  picking: ContactPicker\r\n}\r\n\r\nexport function getContactData (contacts: FrozenContacts, structure: Structure, params: ContactDataParams): ContactData {\r\n  const p = createParams(params, ContactDataDefaultParams)\r\n  const types: ContactType[] = []\r\n  if (p.hydrogenBond) types.push(ContactType.HydrogenBond)\r\n  if (p.hydrophobic) types.push(ContactType.Hydrophobic)\r\n  if (p.halogenBond) types.push(ContactType.HalogenBond)\r\n  if (p.ionicInteraction) types.push(ContactType.IonicInteraction)\r\n  if (p.metalCoordination) types.push(ContactType.MetalCoordination)\r\n  if (p.cationPi) types.push(ContactType.CationPi)\r\n  if (p.piStacking) types.push(ContactType.PiStacking)\r\n  if (p.weakHydrogenBond) types.push(ContactType.WeakHydrogenBond)\r\n  if (p.waterHydrogenBond) types.push(ContactType.WaterHydrogenBond)\r\n  if (p.backboneHydrogenBond) types.push(ContactType.BackboneHydrogenBond)\r\n\r\n  const { features, contactSet, contactStore } = contacts\r\n  const { centers, atomSets } = features\r\n  const { x, y, z } = centers\r\n  const { index1, index2, type } = contactStore\r\n\r\n  const position1: number[] = []\r\n  const position2: number[] = []\r\n  const color: number[] = []\r\n  const radius: number[] = []\r\n  const picking: number[] = []\r\n\r\n  let filterSet: BitArray | BitArray[] | undefined\r\n  if (p.filterSele) {\r\n    if (Array.isArray(p.filterSele)) {\r\n      filterSet = p.filterSele.map(sele => {\r\n        return structure.getAtomSet(new Selection(sele))\r\n      })\r\n    } else {\r\n      filterSet = structure.getAtomSet(new Selection(p.filterSele))\r\n    }\r\n  }\r\n\r\n  contactSet.forEach(i => {\r\n    const ti = type[ i ]\r\n    if (!types.includes(ti)) return\r\n\r\n    if (filterSet) {\r\n      const idx1 = atomSets[index1[i]][0]\r\n      const idx2 = atomSets[index2[i]][0]\r\n\r\n      if (Array.isArray(filterSet)) {\r\n        if (!(filterSet[0].isSet(idx1) && filterSet[1].isSet(idx2) || (filterSet[1].isSet(idx1) && filterSet[0].isSet(idx2)))) return\r\n      } else {\r\n        if (!filterSet.isSet(idx1) && !filterSet.isSet(idx2)) return\r\n      }\r\n    }\r\n\r\n    const k = index1[i]\r\n    const l = index2[i]\r\n    position1.push(x[k], y[k], z[k])\r\n    position2.push(x[l], y[l], z[l])\r\n    color.push(...contactColor(ti))\r\n    radius.push(p.radius)\r\n    picking.push(i)\r\n  })\r\n\r\n  return {\r\n    position1: new Float32Array(position1),\r\n    position2: new Float32Array(position2),\r\n    color: new Float32Array(color),\r\n    color2: new Float32Array(color),\r\n    radius: new Float32Array(radius),\r\n    picking: new ContactPicker(picking, contacts, structure)\r\n  }\r\n}\r\n\r\nexport function getLabelData (contactData: ContactData, params: ContactLabelParams): TextBufferData {\r\n\r\n  const position = calculateCenterArray(contactData.position1, contactData.position2)\r\n  const text: string[] = []\r\n\r\n  const direction = calculateDirectionArray(contactData.position1, contactData.position2)\r\n\r\n  const n = direction.length / 3\r\n  for (let i=0; i<n; i++) {\r\n    const j = 3 * i\r\n    const d = Math.sqrt(direction[j]**2 + direction[j+1]**2 + direction[j+2]**2)\r\n    switch (params.unit) {\r\n        case 'angstrom':\r\n          text[ i ] = d.toFixed(2) + ' ' + String.fromCharCode(0x212B)\r\n          break\r\n        case 'nm':\r\n          text[ i ] = (d / 10).toFixed(2) + ' nm'\r\n          break\r\n        default:\r\n          text[ i ] = d.toFixed(2)\r\n          break\r\n      }\r\n  }\r\n  return {\r\n    position,\r\n    size: uniformArray(position.length / 3, params.size),\r\n    color: contactData.color,\r\n    text\r\n  }\r\n}\r\n","/**\r\n * @file Picker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3 } from 'three'\r\n\r\nimport { PickerRegistry } from '../globals'\r\nimport { calculateMeanVector3 } from '../math/vector-utils'\r\nimport Selection from '../selection/selection'\r\nimport {\r\n  ArrowPrimitive, BoxPrimitive, ConePrimitive, CylinderPrimitive,\r\n  EllipsoidPrimitive, OctahedronPrimitive, SpherePrimitive,\r\n  TetrahedronPrimitive, TorusPrimitive, PointPrimitive, WidelinePrimitive\r\n} from '../geometry/primitive'\r\nimport { contactTypeName, Contacts } from '../chemistry/interactions/contact'\r\nimport { TypedArray } from '../types';\r\nimport Component from '../component/component';\r\nimport { Shape, Structure, Volume } from '../ngl';\r\nimport BondStore from '../store/bond-store';\r\nimport Validation from '../structure/validation';\r\nimport PrincipalAxes from '../math/principal-axes';\r\nimport Surface from '../surface/surface';\r\nimport Unitcell from '../symmetry/unitcell';\r\nimport BondProxy from '../proxy/bond-proxy';\r\nimport AtomProxy from '../proxy/atom-proxy';\r\n\r\n/**\r\n * Picker class\r\n * @interface\r\n */\r\nclass Picker {\r\n  array: number[]|TypedArray|undefined\r\n  /**\r\n   * @param  {Array|TypedArray} [array] - mapping\r\n   */\r\n  constructor (array?: number[]|TypedArray) {\r\n    this.array = array\r\n  }\r\n\r\n  get type () { return '' }\r\n  get data () { return {} }\r\n\r\n  /**\r\n   * Get the index for the given picking id\r\n   * @param  {Integer} pid - the picking id\r\n   * @return {Integer} the index\r\n   */\r\n  getIndex (pid: number) {\r\n    return this.array ? this.array[ pid ] : pid\r\n  }\r\n\r\n  /**\r\n   * Get object data\r\n   * @abstract\r\n   * @param  {Integer} pid - the picking id\r\n   * @return {Object} the object data\r\n   */\r\n  getObject (pid: number) {\r\n    return {}\r\n  }\r\n\r\n  _applyTransformations (vector: Vector3, instance: any, component: Component) {\r\n    if (instance) {\r\n      vector.applyMatrix4(instance.matrix)\r\n    }\r\n    if (component) {\r\n      vector.applyMatrix4(component.matrix)\r\n    }\r\n    return vector\r\n  }\r\n\r\n  /**\r\n   * Get object position\r\n   * @abstract\r\n   * @param  {Integer} pid - the picking id\r\n   * @return {Vector3} the object position\r\n   */\r\n  _getPosition (pid: number) {\r\n    return new Vector3()\r\n  }\r\n\r\n  /**\r\n   * Get position for the given picking id\r\n   * @param  {Integer} pid - the picking id\r\n   * @param  {Object} instance - the instance that should be applied\r\n   * @param  {Component} component - the component of the picked object\r\n   * @return {Vector3} the position\r\n   */\r\n  getPosition (pid: number, instance: any, component: Component) {\r\n    return this._applyTransformations(\r\n      this._getPosition(pid), instance, component\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * Shape picker class\r\n * @interface\r\n */\r\nclass ShapePicker extends Picker {\r\n  shape: Shape\r\n  /**\r\n   * @param  {Shape} shape - shape object\r\n   */\r\n  constructor (shape: Shape) {\r\n    super()\r\n    this.shape = shape\r\n  }\r\n\r\n  get primitive (): any { return }\r\n\r\n  get data () { return this.shape }\r\n  get type () { return this.primitive.type }\r\n\r\n  getObject (pid: number) {\r\n    return this.primitive.objectFromShape(this.shape, this.getIndex(pid))\r\n  }\r\n\r\n  _getPosition (pid: number) {\r\n    return this.primitive.positionFromShape(this.shape, this.getIndex(pid))\r\n  }\r\n}\r\n\r\n//\r\n\r\nclass CylinderPicker extends ShapePicker {\r\n  get primitive () { return CylinderPrimitive }\r\n}\r\n\r\nclass ArrowPicker extends ShapePicker {\r\n  get primitive () { return ArrowPrimitive }\r\n}\r\n\r\nclass AtomPicker extends Picker {\r\n  structure: Structure\r\n  constructor (array: Float32Array, structure: Structure) {\r\n    super(array)\r\n    this.structure = structure\r\n  }\r\n\r\n  get type () { return 'atom' }\r\n  get data () { return this.structure }\r\n\r\n  getObject (pid: number): AtomProxy {\r\n    return this.structure.getAtomProxy(this.getIndex(pid))\r\n  }\r\n\r\n  _getPosition (pid: number) {\r\n    return new Vector3().copy(this.getObject(pid) as any)\r\n  }\r\n}\r\n\r\nclass AxesPicker extends Picker {\r\n  axes: PrincipalAxes\r\n  constructor (axes: PrincipalAxes) {\r\n    super()\r\n    this.axes = axes\r\n  }\r\n\r\n  get type () { return 'axes' }\r\n  get data () { return this.axes }\r\n\r\n  getObject (/* pid */) {\r\n    return {\r\n      axes: this.axes\r\n    }\r\n  }\r\n\r\n  _getPosition (/* pid */) {\r\n    return this.axes.center.clone()\r\n  }\r\n}\r\n\r\nclass BondPicker extends Picker {\r\n  structure: Structure\r\n  bondStore: BondStore\r\n  constructor (array: number[]|TypedArray|undefined, structure: Structure, bondStore?: BondStore) {\r\n    super(array)\r\n    this.structure = structure\r\n    this.bondStore = bondStore || structure.bondStore\r\n  }\r\n\r\n  get type () { return 'bond' }\r\n  get data () { return this.structure }\r\n\r\n  getObject (pid: number): BondProxy {\r\n    const bp = this.structure.getBondProxy(this.getIndex(pid))\r\n    bp.bondStore = this.bondStore\r\n    return bp\r\n  }\r\n\r\n  _getPosition (pid: number) {\r\n    const b = this.getObject(pid)\r\n    return new Vector3()\r\n      .copy(b.atom1 as any)\r\n      .add(b.atom2 as any)\r\n      .multiplyScalar(0.5)\r\n  }\r\n}\r\n\r\nclass ContactPicker extends Picker {\r\n  contacts: Contacts\r\n  structure: Structure\r\n  constructor (array: number[]|TypedArray|undefined, contacts: Contacts, structure: Structure) {\r\n    super(array)\r\n    this.contacts = contacts\r\n    this.structure = structure\r\n  }\r\n\r\n  get type () { return 'contact' }\r\n  get data () { return this.contacts }\r\n\r\n  getObject (pid: number) {\r\n    const idx = this.getIndex(pid)\r\n    const { features, contactStore } = this.contacts\r\n    const { centers, atomSets } = features\r\n    const { x, y, z } = centers\r\n    const { index1, index2, type } = contactStore\r\n    const k = index1[idx]\r\n    const l = index2[idx]\r\n    return {\r\n      center1: new Vector3(x[k], y[k], z[k]),\r\n      center2: new Vector3(x[l], y[l], z[l]),\r\n      atom1: this.structure.getAtomProxy(atomSets[k][0]),\r\n      atom2: this.structure.getAtomProxy(atomSets[l][0]),\r\n      type: contactTypeName(type[idx])\r\n    }\r\n  }\r\n\r\n  _getPosition (pid: number) {\r\n    const { center1, center2 } = this.getObject(pid)\r\n    return new Vector3().addVectors(center1, center2).multiplyScalar(0.5)\r\n  }\r\n}\r\n\r\nclass ConePicker extends ShapePicker {\r\n  get primitive () { return ConePrimitive }\r\n}\r\n\r\nclass ClashPicker extends Picker {\r\n  validation: Validation\r\n  structure: Structure\r\n  constructor (array: number[]|TypedArray|undefined, validation: Validation, structure: Structure) {\r\n    super(array)\r\n    this.validation = validation\r\n    this.structure = structure\r\n  }\r\n\r\n  get type () { return 'clash' }\r\n  get data () { return this.validation }\r\n\r\n  getObject (pid: number) {\r\n    const val = this.validation\r\n    const idx = this.getIndex(pid)\r\n    return {\r\n      validation: val,\r\n      index: idx,\r\n      clash: val.clashArray[ idx ]\r\n    }\r\n  }\r\n\r\n  _getAtomProxyFromSele (sele: string) {\r\n    const selection = new Selection(sele)\r\n    const idx = this.structure.getAtomIndices(selection)![ 0 ]\r\n    return this.structure.getAtomProxy(idx)\r\n  }\r\n\r\n  _getPosition (pid: number) {\r\n    const clash = this.getObject(pid).clash\r\n    const ap1 = this._getAtomProxyFromSele(clash.sele1)\r\n    const ap2 = this._getAtomProxyFromSele(clash.sele2)\r\n    return new Vector3().copy(ap1 as any).add(ap2 as any).multiplyScalar(0.5)\r\n  }\r\n}\r\n\r\nclass DistancePicker extends BondPicker {\r\n  get type () { return 'distance' }\r\n}\r\n\r\nclass EllipsoidPicker extends ShapePicker {\r\n  get primitive () { return EllipsoidPrimitive }\r\n}\r\n\r\nclass OctahedronPicker extends ShapePicker {\r\n  get primitive () { return OctahedronPrimitive }\r\n}\r\n\r\nclass BoxPicker extends ShapePicker {\r\n  get primitive () { return BoxPrimitive }\r\n}\r\n\r\nclass IgnorePicker extends Picker {\r\n  get type () { return 'ignore' }\r\n}\r\n\r\nexport interface MeshData {\r\n  name: string|undefined\r\n  serial: number\r\n  index: Uint32Array|Uint16Array|number[]\r\n  normal?: Float32Array|number[]\r\n  position: Float32Array|number[]\r\n  color: Float32Array|number[]\r\n}\r\nclass MeshPicker extends ShapePicker {\r\n  mesh: MeshData\r\n  __position: Vector3\r\n\r\n  constructor (shape: Shape, mesh: MeshData) {\r\n    super(shape)\r\n    this.mesh = mesh\r\n  }\r\n\r\n  get type () { return 'mesh' }\r\n\r\n  getObject (/* pid */) {\r\n    const m = this.mesh\r\n    return {\r\n      shape: this.shape,\r\n      name: m.name,\r\n      serial: m.serial\r\n    }\r\n  }\r\n\r\n  _getPosition (/* pid */) {\r\n    if (!this.__position) {\r\n      this.__position = calculateMeanVector3(this.mesh.position as any)\r\n    }\r\n    return this.__position\r\n  }\r\n}\r\n\r\nclass SpherePicker extends ShapePicker {\r\n  get primitive () { return SpherePrimitive }\r\n}\r\n\r\nclass SurfacePicker extends Picker {\r\n  surface: Surface\r\n  constructor (array: number[]|TypedArray|undefined, surface: Surface) {\r\n    super(array)\r\n    this.surface = surface\r\n  }\r\n\r\n  get type () { return 'surface' }\r\n  get data () { return this.surface }\r\n\r\n  getObject (pid: number) {\r\n    return {\r\n      surface: this.surface,\r\n      index: this.getIndex(pid)\r\n    }\r\n  }\r\n\r\n  _getPosition (/* pid */) {\r\n    return this.surface.center.clone()\r\n  }\r\n}\r\n\r\nclass TetrahedronPicker extends ShapePicker {\r\n  get primitive () { return TetrahedronPrimitive }\r\n}\r\n\r\nclass TorusPicker extends ShapePicker {\r\n  get primitive () { return TorusPrimitive }\r\n}\r\n\r\nclass UnitcellPicker extends Picker {\r\n  unitcell: Unitcell\r\n  structure: Structure\r\n\r\n  constructor (unitcell: Unitcell, structure: Structure) {\r\n    super()\r\n    this.unitcell = unitcell\r\n    this.structure = structure\r\n  }\r\n\r\n  get type () { return 'unitcell' }\r\n  get data () { return this.unitcell }\r\n\r\n  getObject (/* pid */) {\r\n    return {\r\n      unitcell: this.unitcell,\r\n      structure: this.structure\r\n    }\r\n  }\r\n\r\n  _getPosition (/* pid */) {\r\n    return this.unitcell.getCenter(this.structure)\r\n  }\r\n}\r\n\r\nclass UnknownPicker extends Picker {\r\n  get type () { return 'unknown' }\r\n}\r\n\r\nclass VolumePicker extends Picker {\r\n  volume: Volume\r\n  constructor (array: TypedArray, volume: Volume) {\r\n    super(array)\r\n    this.volume = volume\r\n  }\r\n\r\n  get type () { return 'volume' }\r\n  get data () { return this.volume }\r\n\r\n  getObject (pid: number) {\r\n    const vol = this.volume\r\n    const idx = this.getIndex(pid)\r\n    return {\r\n      volume: vol,\r\n      index: idx,\r\n      value: vol.data[ idx ]\r\n    }\r\n  }\r\n\r\n  _getPosition (pid: number) {\r\n    const dp = this.volume.position\r\n    const idx = this.getIndex(pid)\r\n    return new Vector3(\r\n      dp[ idx * 3 ],\r\n      dp[ idx * 3 + 1 ],\r\n      dp[ idx * 3 + 2 ]\r\n    )\r\n  }\r\n}\r\n\r\nclass SlicePicker extends VolumePicker {\r\n  get type () { return 'slice' }\r\n}\r\n\r\nclass PointPicker extends ShapePicker {\r\n  get primitive () { return PointPrimitive }\r\n}\r\n\r\nclass WidelinePicker extends ShapePicker {\r\n  get primitive () { return WidelinePrimitive }\r\n}\r\n\r\nPickerRegistry.add('arrow', ArrowPicker)\r\nPickerRegistry.add('box', BoxPicker)\r\nPickerRegistry.add('cone', ConePicker)\r\nPickerRegistry.add('cylinder', CylinderPicker)\r\nPickerRegistry.add('ellipsoid', EllipsoidPicker)\r\nPickerRegistry.add('octahedron', OctahedronPicker)\r\nPickerRegistry.add('sphere', SpherePicker)\r\nPickerRegistry.add('tetrahedron', TetrahedronPicker)\r\nPickerRegistry.add('torus', TorusPicker)\r\nPickerRegistry.add('point', PointPicker)\r\nPickerRegistry.add('wideline', WidelinePicker)\r\n\r\nexport {\r\n  Picker,\r\n  ShapePicker,\r\n  ArrowPicker,\r\n  AtomPicker,\r\n  AxesPicker,\r\n  BondPicker,\r\n  BoxPicker,\r\n  ConePicker,\r\n  ContactPicker,\r\n  CylinderPicker,\r\n  ClashPicker,\r\n  DistancePicker,\r\n  EllipsoidPicker,\r\n  IgnorePicker,\r\n  OctahedronPicker,\r\n  MeshPicker,\r\n  SlicePicker,\r\n  SpherePicker,\r\n  SurfacePicker,\r\n  TetrahedronPicker,\r\n  TorusPicker,\r\n  UnitcellPicker,\r\n  UnknownPicker,\r\n  VolumePicker,\r\n  PointPicker,\r\n  WidelinePicker\r\n}\r\n","/**\r\n * @file Marching Cubes\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { getUintArray } from '../utils'\r\n\r\nfunction getEdgeTable () {\r\n  return new Uint32Array([\r\n    0x0, 0x109, 0x203, 0x30a, 0x406, 0x50f, 0x605, 0x70c,\r\n    0x80c, 0x905, 0xa0f, 0xb06, 0xc0a, 0xd03, 0xe09, 0xf00,\r\n    0x190, 0x99, 0x393, 0x29a, 0x596, 0x49f, 0x795, 0x69c,\r\n    0x99c, 0x895, 0xb9f, 0xa96, 0xd9a, 0xc93, 0xf99, 0xe90,\r\n    0x230, 0x339, 0x33, 0x13a, 0x636, 0x73f, 0x435, 0x53c,\r\n    0xa3c, 0xb35, 0x83f, 0x936, 0xe3a, 0xf33, 0xc39, 0xd30,\r\n    0x3a0, 0x2a9, 0x1a3, 0xaa, 0x7a6, 0x6af, 0x5a5, 0x4ac,\r\n    0xbac, 0xaa5, 0x9af, 0x8a6, 0xfaa, 0xea3, 0xda9, 0xca0,\r\n    0x460, 0x569, 0x663, 0x76a, 0x66, 0x16f, 0x265, 0x36c,\r\n    0xc6c, 0xd65, 0xe6f, 0xf66, 0x86a, 0x963, 0xa69, 0xb60,\r\n    0x5f0, 0x4f9, 0x7f3, 0x6fa, 0x1f6, 0xff, 0x3f5, 0x2fc,\r\n    0xdfc, 0xcf5, 0xfff, 0xef6, 0x9fa, 0x8f3, 0xbf9, 0xaf0,\r\n    0x650, 0x759, 0x453, 0x55a, 0x256, 0x35f, 0x55, 0x15c,\r\n    0xe5c, 0xf55, 0xc5f, 0xd56, 0xa5a, 0xb53, 0x859, 0x950,\r\n    0x7c0, 0x6c9, 0x5c3, 0x4ca, 0x3c6, 0x2cf, 0x1c5, 0xcc,\r\n    0xfcc, 0xec5, 0xdcf, 0xcc6, 0xbca, 0xac3, 0x9c9, 0x8c0,\r\n    0x8c0, 0x9c9, 0xac3, 0xbca, 0xcc6, 0xdcf, 0xec5, 0xfcc,\r\n    0xcc, 0x1c5, 0x2cf, 0x3c6, 0x4ca, 0x5c3, 0x6c9, 0x7c0,\r\n    0x950, 0x859, 0xb53, 0xa5a, 0xd56, 0xc5f, 0xf55, 0xe5c,\r\n    0x15c, 0x55, 0x35f, 0x256, 0x55a, 0x453, 0x759, 0x650,\r\n    0xaf0, 0xbf9, 0x8f3, 0x9fa, 0xef6, 0xfff, 0xcf5, 0xdfc,\r\n    0x2fc, 0x3f5, 0xff, 0x1f6, 0x6fa, 0x7f3, 0x4f9, 0x5f0,\r\n    0xb60, 0xa69, 0x963, 0x86a, 0xf66, 0xe6f, 0xd65, 0xc6c,\r\n    0x36c, 0x265, 0x16f, 0x66, 0x76a, 0x663, 0x569, 0x460,\r\n    0xca0, 0xda9, 0xea3, 0xfaa, 0x8a6, 0x9af, 0xaa5, 0xbac,\r\n    0x4ac, 0x5a5, 0x6af, 0x7a6, 0xaa, 0x1a3, 0x2a9, 0x3a0,\r\n    0xd30, 0xc39, 0xf33, 0xe3a, 0x936, 0x83f, 0xb35, 0xa3c,\r\n    0x53c, 0x435, 0x73f, 0x636, 0x13a, 0x33, 0x339, 0x230,\r\n    0xe90, 0xf99, 0xc93, 0xd9a, 0xa96, 0xb9f, 0x895, 0x99c,\r\n    0x69c, 0x795, 0x49f, 0x596, 0x29a, 0x393, 0x99, 0x190,\r\n    0xf00, 0xe09, 0xd03, 0xc0a, 0xb06, 0xa0f, 0x905, 0x80c,\r\n    0x70c, 0x605, 0x50f, 0x406, 0x30a, 0x203, 0x109, 0x0\r\n  ])\r\n}\r\n\r\nfunction getTriTable (): Int32Array {\r\n  return new Int32Array([\r\n    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 8, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 1, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 8, 3, 9, 8, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 2, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 8, 3, 1, 2, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    9, 2, 10, 0, 2, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    2, 8, 3, 2, 10, 8, 10, 9, 8, -1, -1, -1, -1, -1, -1, -1,\r\n    3, 11, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 11, 2, 8, 11, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 9, 0, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 11, 2, 1, 9, 11, 9, 8, 11, -1, -1, -1, -1, -1, -1, -1,\r\n    3, 10, 1, 11, 10, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 10, 1, 0, 8, 10, 8, 11, 10, -1, -1, -1, -1, -1, -1, -1,\r\n    3, 9, 0, 3, 11, 9, 11, 10, 9, -1, -1, -1, -1, -1, -1, -1,\r\n    9, 8, 10, 10, 8, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    4, 7, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    4, 3, 0, 7, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 1, 9, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    4, 1, 9, 4, 7, 1, 7, 3, 1, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 2, 10, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    3, 4, 7, 3, 0, 4, 1, 2, 10, -1, -1, -1, -1, -1, -1, -1,\r\n    9, 2, 10, 9, 0, 2, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1,\r\n    2, 10, 9, 2, 9, 7, 2, 7, 3, 7, 9, 4, -1, -1, -1, -1,\r\n    8, 4, 7, 3, 11, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    11, 4, 7, 11, 2, 4, 2, 0, 4, -1, -1, -1, -1, -1, -1, -1,\r\n    9, 0, 1, 8, 4, 7, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1,\r\n    4, 7, 11, 9, 4, 11, 9, 11, 2, 9, 2, 1, -1, -1, -1, -1,\r\n    3, 10, 1, 3, 11, 10, 7, 8, 4, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 11, 10, 1, 4, 11, 1, 0, 4, 7, 11, 4, -1, -1, -1, -1,\r\n    4, 7, 8, 9, 0, 11, 9, 11, 10, 11, 0, 3, -1, -1, -1, -1,\r\n    4, 7, 11, 4, 11, 9, 9, 11, 10, -1, -1, -1, -1, -1, -1, -1,\r\n    9, 5, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    9, 5, 4, 0, 8, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 5, 4, 1, 5, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    8, 5, 4, 8, 3, 5, 3, 1, 5, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 2, 10, 9, 5, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    3, 0, 8, 1, 2, 10, 4, 9, 5, -1, -1, -1, -1, -1, -1, -1,\r\n    5, 2, 10, 5, 4, 2, 4, 0, 2, -1, -1, -1, -1, -1, -1, -1,\r\n    2, 10, 5, 3, 2, 5, 3, 5, 4, 3, 4, 8, -1, -1, -1, -1,\r\n    9, 5, 4, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 11, 2, 0, 8, 11, 4, 9, 5, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 5, 4, 0, 1, 5, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1,\r\n    2, 1, 5, 2, 5, 8, 2, 8, 11, 4, 8, 5, -1, -1, -1, -1,\r\n    10, 3, 11, 10, 1, 3, 9, 5, 4, -1, -1, -1, -1, -1, -1, -1,\r\n    4, 9, 5, 0, 8, 1, 8, 10, 1, 8, 11, 10, -1, -1, -1, -1,\r\n    5, 4, 0, 5, 0, 11, 5, 11, 10, 11, 0, 3, -1, -1, -1, -1,\r\n    5, 4, 8, 5, 8, 10, 10, 8, 11, -1, -1, -1, -1, -1, -1, -1,\r\n    9, 7, 8, 5, 7, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    9, 3, 0, 9, 5, 3, 5, 7, 3, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 7, 8, 0, 1, 7, 1, 5, 7, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 5, 3, 3, 5, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    9, 7, 8, 9, 5, 7, 10, 1, 2, -1, -1, -1, -1, -1, -1, -1,\r\n    10, 1, 2, 9, 5, 0, 5, 3, 0, 5, 7, 3, -1, -1, -1, -1,\r\n    8, 0, 2, 8, 2, 5, 8, 5, 7, 10, 5, 2, -1, -1, -1, -1,\r\n    2, 10, 5, 2, 5, 3, 3, 5, 7, -1, -1, -1, -1, -1, -1, -1,\r\n    7, 9, 5, 7, 8, 9, 3, 11, 2, -1, -1, -1, -1, -1, -1, -1,\r\n    9, 5, 7, 9, 7, 2, 9, 2, 0, 2, 7, 11, -1, -1, -1, -1,\r\n    2, 3, 11, 0, 1, 8, 1, 7, 8, 1, 5, 7, -1, -1, -1, -1,\r\n    11, 2, 1, 11, 1, 7, 7, 1, 5, -1, -1, -1, -1, -1, -1, -1,\r\n    9, 5, 8, 8, 5, 7, 10, 1, 3, 10, 3, 11, -1, -1, -1, -1,\r\n    5, 7, 0, 5, 0, 9, 7, 11, 0, 1, 0, 10, 11, 10, 0, -1,\r\n    11, 10, 0, 11, 0, 3, 10, 5, 0, 8, 0, 7, 5, 7, 0, -1,\r\n    11, 10, 5, 7, 11, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    10, 6, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 8, 3, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    9, 0, 1, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 8, 3, 1, 9, 8, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 6, 5, 2, 6, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 6, 5, 1, 2, 6, 3, 0, 8, -1, -1, -1, -1, -1, -1, -1,\r\n    9, 6, 5, 9, 0, 6, 0, 2, 6, -1, -1, -1, -1, -1, -1, -1,\r\n    5, 9, 8, 5, 8, 2, 5, 2, 6, 3, 2, 8, -1, -1, -1, -1,\r\n    2, 3, 11, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    11, 0, 8, 11, 2, 0, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 1, 9, 2, 3, 11, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1,\r\n    5, 10, 6, 1, 9, 2, 9, 11, 2, 9, 8, 11, -1, -1, -1, -1,\r\n    6, 3, 11, 6, 5, 3, 5, 1, 3, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 8, 11, 0, 11, 5, 0, 5, 1, 5, 11, 6, -1, -1, -1, -1,\r\n    3, 11, 6, 0, 3, 6, 0, 6, 5, 0, 5, 9, -1, -1, -1, -1,\r\n    6, 5, 9, 6, 9, 11, 11, 9, 8, -1, -1, -1, -1, -1, -1, -1,\r\n    5, 10, 6, 4, 7, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    4, 3, 0, 4, 7, 3, 6, 5, 10, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 9, 0, 5, 10, 6, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1,\r\n    10, 6, 5, 1, 9, 7, 1, 7, 3, 7, 9, 4, -1, -1, -1, -1,\r\n    6, 1, 2, 6, 5, 1, 4, 7, 8, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 2, 5, 5, 2, 6, 3, 0, 4, 3, 4, 7, -1, -1, -1, -1,\r\n    8, 4, 7, 9, 0, 5, 0, 6, 5, 0, 2, 6, -1, -1, -1, -1,\r\n    7, 3, 9, 7, 9, 4, 3, 2, 9, 5, 9, 6, 2, 6, 9, -1,\r\n    3, 11, 2, 7, 8, 4, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1,\r\n    5, 10, 6, 4, 7, 2, 4, 2, 0, 2, 7, 11, -1, -1, -1, -1,\r\n    0, 1, 9, 4, 7, 8, 2, 3, 11, 5, 10, 6, -1, -1, -1, -1,\r\n    9, 2, 1, 9, 11, 2, 9, 4, 11, 7, 11, 4, 5, 10, 6, -1,\r\n    8, 4, 7, 3, 11, 5, 3, 5, 1, 5, 11, 6, -1, -1, -1, -1,\r\n    5, 1, 11, 5, 11, 6, 1, 0, 11, 7, 11, 4, 0, 4, 11, -1,\r\n    0, 5, 9, 0, 6, 5, 0, 3, 6, 11, 6, 3, 8, 4, 7, -1,\r\n    6, 5, 9, 6, 9, 11, 4, 7, 9, 7, 11, 9, -1, -1, -1, -1,\r\n    10, 4, 9, 6, 4, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    4, 10, 6, 4, 9, 10, 0, 8, 3, -1, -1, -1, -1, -1, -1, -1,\r\n    10, 0, 1, 10, 6, 0, 6, 4, 0, -1, -1, -1, -1, -1, -1, -1,\r\n    8, 3, 1, 8, 1, 6, 8, 6, 4, 6, 1, 10, -1, -1, -1, -1,\r\n    1, 4, 9, 1, 2, 4, 2, 6, 4, -1, -1, -1, -1, -1, -1, -1,\r\n    3, 0, 8, 1, 2, 9, 2, 4, 9, 2, 6, 4, -1, -1, -1, -1,\r\n    0, 2, 4, 4, 2, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    8, 3, 2, 8, 2, 4, 4, 2, 6, -1, -1, -1, -1, -1, -1, -1,\r\n    10, 4, 9, 10, 6, 4, 11, 2, 3, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 8, 2, 2, 8, 11, 4, 9, 10, 4, 10, 6, -1, -1, -1, -1,\r\n    3, 11, 2, 0, 1, 6, 0, 6, 4, 6, 1, 10, -1, -1, -1, -1,\r\n    6, 4, 1, 6, 1, 10, 4, 8, 1, 2, 1, 11, 8, 11, 1, -1,\r\n    9, 6, 4, 9, 3, 6, 9, 1, 3, 11, 6, 3, -1, -1, -1, -1,\r\n    8, 11, 1, 8, 1, 0, 11, 6, 1, 9, 1, 4, 6, 4, 1, -1,\r\n    3, 11, 6, 3, 6, 0, 0, 6, 4, -1, -1, -1, -1, -1, -1, -1,\r\n    6, 4, 8, 11, 6, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    7, 10, 6, 7, 8, 10, 8, 9, 10, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 7, 3, 0, 10, 7, 0, 9, 10, 6, 7, 10, -1, -1, -1, -1,\r\n    10, 6, 7, 1, 10, 7, 1, 7, 8, 1, 8, 0, -1, -1, -1, -1,\r\n    10, 6, 7, 10, 7, 1, 1, 7, 3, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 2, 6, 1, 6, 8, 1, 8, 9, 8, 6, 7, -1, -1, -1, -1,\r\n    2, 6, 9, 2, 9, 1, 6, 7, 9, 0, 9, 3, 7, 3, 9, -1,\r\n    7, 8, 0, 7, 0, 6, 6, 0, 2, -1, -1, -1, -1, -1, -1, -1,\r\n    7, 3, 2, 6, 7, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    2, 3, 11, 10, 6, 8, 10, 8, 9, 8, 6, 7, -1, -1, -1, -1,\r\n    2, 0, 7, 2, 7, 11, 0, 9, 7, 6, 7, 10, 9, 10, 7, -1,\r\n    1, 8, 0, 1, 7, 8, 1, 10, 7, 6, 7, 10, 2, 3, 11, -1,\r\n    11, 2, 1, 11, 1, 7, 10, 6, 1, 6, 7, 1, -1, -1, -1, -1,\r\n    8, 9, 6, 8, 6, 7, 9, 1, 6, 11, 6, 3, 1, 3, 6, -1,\r\n    0, 9, 1, 11, 6, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    7, 8, 0, 7, 0, 6, 3, 11, 0, 11, 6, 0, -1, -1, -1, -1,\r\n    7, 11, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    7, 6, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    3, 0, 8, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 1, 9, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    8, 1, 9, 8, 3, 1, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1,\r\n    10, 1, 2, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 2, 10, 3, 0, 8, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1,\r\n    2, 9, 0, 2, 10, 9, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1,\r\n    6, 11, 7, 2, 10, 3, 10, 8, 3, 10, 9, 8, -1, -1, -1, -1,\r\n    7, 2, 3, 6, 2, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    7, 0, 8, 7, 6, 0, 6, 2, 0, -1, -1, -1, -1, -1, -1, -1,\r\n    2, 7, 6, 2, 3, 7, 0, 1, 9, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 6, 2, 1, 8, 6, 1, 9, 8, 8, 7, 6, -1, -1, -1, -1,\r\n    10, 7, 6, 10, 1, 7, 1, 3, 7, -1, -1, -1, -1, -1, -1, -1,\r\n    10, 7, 6, 1, 7, 10, 1, 8, 7, 1, 0, 8, -1, -1, -1, -1,\r\n    0, 3, 7, 0, 7, 10, 0, 10, 9, 6, 10, 7, -1, -1, -1, -1,\r\n    7, 6, 10, 7, 10, 8, 8, 10, 9, -1, -1, -1, -1, -1, -1, -1,\r\n    6, 8, 4, 11, 8, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    3, 6, 11, 3, 0, 6, 0, 4, 6, -1, -1, -1, -1, -1, -1, -1,\r\n    8, 6, 11, 8, 4, 6, 9, 0, 1, -1, -1, -1, -1, -1, -1, -1,\r\n    9, 4, 6, 9, 6, 3, 9, 3, 1, 11, 3, 6, -1, -1, -1, -1,\r\n    6, 8, 4, 6, 11, 8, 2, 10, 1, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 2, 10, 3, 0, 11, 0, 6, 11, 0, 4, 6, -1, -1, -1, -1,\r\n    4, 11, 8, 4, 6, 11, 0, 2, 9, 2, 10, 9, -1, -1, -1, -1,\r\n    10, 9, 3, 10, 3, 2, 9, 4, 3, 11, 3, 6, 4, 6, 3, -1,\r\n    8, 2, 3, 8, 4, 2, 4, 6, 2, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 4, 2, 4, 6, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 9, 0, 2, 3, 4, 2, 4, 6, 4, 3, 8, -1, -1, -1, -1,\r\n    1, 9, 4, 1, 4, 2, 2, 4, 6, -1, -1, -1, -1, -1, -1, -1,\r\n    8, 1, 3, 8, 6, 1, 8, 4, 6, 6, 10, 1, -1, -1, -1, -1,\r\n    10, 1, 0, 10, 0, 6, 6, 0, 4, -1, -1, -1, -1, -1, -1, -1,\r\n    4, 6, 3, 4, 3, 8, 6, 10, 3, 0, 3, 9, 10, 9, 3, -1,\r\n    10, 9, 4, 6, 10, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    4, 9, 5, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 8, 3, 4, 9, 5, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1,\r\n    5, 0, 1, 5, 4, 0, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1,\r\n    11, 7, 6, 8, 3, 4, 3, 5, 4, 3, 1, 5, -1, -1, -1, -1,\r\n    9, 5, 4, 10, 1, 2, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1,\r\n    6, 11, 7, 1, 2, 10, 0, 8, 3, 4, 9, 5, -1, -1, -1, -1,\r\n    7, 6, 11, 5, 4, 10, 4, 2, 10, 4, 0, 2, -1, -1, -1, -1,\r\n    3, 4, 8, 3, 5, 4, 3, 2, 5, 10, 5, 2, 11, 7, 6, -1,\r\n    7, 2, 3, 7, 6, 2, 5, 4, 9, -1, -1, -1, -1, -1, -1, -1,\r\n    9, 5, 4, 0, 8, 6, 0, 6, 2, 6, 8, 7, -1, -1, -1, -1,\r\n    3, 6, 2, 3, 7, 6, 1, 5, 0, 5, 4, 0, -1, -1, -1, -1,\r\n    6, 2, 8, 6, 8, 7, 2, 1, 8, 4, 8, 5, 1, 5, 8, -1,\r\n    9, 5, 4, 10, 1, 6, 1, 7, 6, 1, 3, 7, -1, -1, -1, -1,\r\n    1, 6, 10, 1, 7, 6, 1, 0, 7, 8, 7, 0, 9, 5, 4, -1,\r\n    4, 0, 10, 4, 10, 5, 0, 3, 10, 6, 10, 7, 3, 7, 10, -1,\r\n    7, 6, 10, 7, 10, 8, 5, 4, 10, 4, 8, 10, -1, -1, -1, -1,\r\n    6, 9, 5, 6, 11, 9, 11, 8, 9, -1, -1, -1, -1, -1, -1, -1,\r\n    3, 6, 11, 0, 6, 3, 0, 5, 6, 0, 9, 5, -1, -1, -1, -1,\r\n    0, 11, 8, 0, 5, 11, 0, 1, 5, 5, 6, 11, -1, -1, -1, -1,\r\n    6, 11, 3, 6, 3, 5, 5, 3, 1, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 2, 10, 9, 5, 11, 9, 11, 8, 11, 5, 6, -1, -1, -1, -1,\r\n    0, 11, 3, 0, 6, 11, 0, 9, 6, 5, 6, 9, 1, 2, 10, -1,\r\n    11, 8, 5, 11, 5, 6, 8, 0, 5, 10, 5, 2, 0, 2, 5, -1,\r\n    6, 11, 3, 6, 3, 5, 2, 10, 3, 10, 5, 3, -1, -1, -1, -1,\r\n    5, 8, 9, 5, 2, 8, 5, 6, 2, 3, 8, 2, -1, -1, -1, -1,\r\n    9, 5, 6, 9, 6, 0, 0, 6, 2, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 5, 8, 1, 8, 0, 5, 6, 8, 3, 8, 2, 6, 2, 8, -1,\r\n    1, 5, 6, 2, 1, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 3, 6, 1, 6, 10, 3, 8, 6, 5, 6, 9, 8, 9, 6, -1,\r\n    10, 1, 0, 10, 0, 6, 9, 5, 0, 5, 6, 0, -1, -1, -1, -1,\r\n    0, 3, 8, 5, 6, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    10, 5, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    11, 5, 10, 7, 5, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    11, 5, 10, 11, 7, 5, 8, 3, 0, -1, -1, -1, -1, -1, -1, -1,\r\n    5, 11, 7, 5, 10, 11, 1, 9, 0, -1, -1, -1, -1, -1, -1, -1,\r\n    10, 7, 5, 10, 11, 7, 9, 8, 1, 8, 3, 1, -1, -1, -1, -1,\r\n    11, 1, 2, 11, 7, 1, 7, 5, 1, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 8, 3, 1, 2, 7, 1, 7, 5, 7, 2, 11, -1, -1, -1, -1,\r\n    9, 7, 5, 9, 2, 7, 9, 0, 2, 2, 11, 7, -1, -1, -1, -1,\r\n    7, 5, 2, 7, 2, 11, 5, 9, 2, 3, 2, 8, 9, 8, 2, -1,\r\n    2, 5, 10, 2, 3, 5, 3, 7, 5, -1, -1, -1, -1, -1, -1, -1,\r\n    8, 2, 0, 8, 5, 2, 8, 7, 5, 10, 2, 5, -1, -1, -1, -1,\r\n    9, 0, 1, 5, 10, 3, 5, 3, 7, 3, 10, 2, -1, -1, -1, -1,\r\n    9, 8, 2, 9, 2, 1, 8, 7, 2, 10, 2, 5, 7, 5, 2, -1,\r\n    1, 3, 5, 3, 7, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 8, 7, 0, 7, 1, 1, 7, 5, -1, -1, -1, -1, -1, -1, -1,\r\n    9, 0, 3, 9, 3, 5, 5, 3, 7, -1, -1, -1, -1, -1, -1, -1,\r\n    9, 8, 7, 5, 9, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    5, 8, 4, 5, 10, 8, 10, 11, 8, -1, -1, -1, -1, -1, -1, -1,\r\n    5, 0, 4, 5, 11, 0, 5, 10, 11, 11, 3, 0, -1, -1, -1, -1,\r\n    0, 1, 9, 8, 4, 10, 8, 10, 11, 10, 4, 5, -1, -1, -1, -1,\r\n    10, 11, 4, 10, 4, 5, 11, 3, 4, 9, 4, 1, 3, 1, 4, -1,\r\n    2, 5, 1, 2, 8, 5, 2, 11, 8, 4, 5, 8, -1, -1, -1, -1,\r\n    0, 4, 11, 0, 11, 3, 4, 5, 11, 2, 11, 1, 5, 1, 11, -1,\r\n    0, 2, 5, 0, 5, 9, 2, 11, 5, 4, 5, 8, 11, 8, 5, -1,\r\n    9, 4, 5, 2, 11, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    2, 5, 10, 3, 5, 2, 3, 4, 5, 3, 8, 4, -1, -1, -1, -1,\r\n    5, 10, 2, 5, 2, 4, 4, 2, 0, -1, -1, -1, -1, -1, -1, -1,\r\n    3, 10, 2, 3, 5, 10, 3, 8, 5, 4, 5, 8, 0, 1, 9, -1,\r\n    5, 10, 2, 5, 2, 4, 1, 9, 2, 9, 4, 2, -1, -1, -1, -1,\r\n    8, 4, 5, 8, 5, 3, 3, 5, 1, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 4, 5, 1, 0, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    8, 4, 5, 8, 5, 3, 9, 0, 5, 0, 3, 5, -1, -1, -1, -1,\r\n    9, 4, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    4, 11, 7, 4, 9, 11, 9, 10, 11, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 8, 3, 4, 9, 7, 9, 11, 7, 9, 10, 11, -1, -1, -1, -1,\r\n    1, 10, 11, 1, 11, 4, 1, 4, 0, 7, 4, 11, -1, -1, -1, -1,\r\n    3, 1, 4, 3, 4, 8, 1, 10, 4, 7, 4, 11, 10, 11, 4, -1,\r\n    4, 11, 7, 9, 11, 4, 9, 2, 11, 9, 1, 2, -1, -1, -1, -1,\r\n    9, 7, 4, 9, 11, 7, 9, 1, 11, 2, 11, 1, 0, 8, 3, -1,\r\n    11, 7, 4, 11, 4, 2, 2, 4, 0, -1, -1, -1, -1, -1, -1, -1,\r\n    11, 7, 4, 11, 4, 2, 8, 3, 4, 3, 2, 4, -1, -1, -1, -1,\r\n    2, 9, 10, 2, 7, 9, 2, 3, 7, 7, 4, 9, -1, -1, -1, -1,\r\n    9, 10, 7, 9, 7, 4, 10, 2, 7, 8, 7, 0, 2, 0, 7, -1,\r\n    3, 7, 10, 3, 10, 2, 7, 4, 10, 1, 10, 0, 4, 0, 10, -1,\r\n    1, 10, 2, 8, 7, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    4, 9, 1, 4, 1, 7, 7, 1, 3, -1, -1, -1, -1, -1, -1, -1,\r\n    4, 9, 1, 4, 1, 7, 0, 8, 1, 8, 7, 1, -1, -1, -1, -1,\r\n    4, 0, 3, 7, 4, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    4, 8, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    9, 10, 8, 10, 11, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    3, 0, 9, 3, 9, 11, 11, 9, 10, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 1, 10, 0, 10, 8, 8, 10, 11, -1, -1, -1, -1, -1, -1, -1,\r\n    3, 1, 10, 11, 3, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 2, 11, 1, 11, 9, 9, 11, 8, -1, -1, -1, -1, -1, -1, -1,\r\n    3, 0, 9, 3, 9, 11, 1, 2, 9, 2, 11, 9, -1, -1, -1, -1,\r\n    0, 2, 11, 8, 0, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    3, 2, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    2, 3, 8, 2, 8, 10, 10, 8, 9, -1, -1, -1, -1, -1, -1, -1,\r\n    9, 10, 2, 0, 9, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    2, 3, 8, 2, 8, 10, 0, 1, 8, 1, 10, 8, -1, -1, -1, -1,\r\n    1, 10, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 3, 8, 9, 1, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 9, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 3, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1\r\n  ])\r\n}\r\n\r\ninterface MarchingCubes {\r\n  new (field: number[], nx: number, ny: number, nz: number, atomindex: number[]): void\r\n  triangulate: (_isolevel: number, _noNormals: boolean, _box: number[][]|undefined, _contour: boolean, _wrap: boolean) => {\r\n    position: Float32Array\r\n    normal: undefined|Float32Array\r\n    index: Uint32Array|Uint16Array\r\n    atomindex: Int32Array|undefined\r\n    contour: boolean\r\n  }\r\n}\r\nfunction MarchingCubes (this: MarchingCubes, field: number[], nx: number, ny: number, nz: number, atomindex: number[]) {\r\n  // Based on alteredq / http://alteredqualia.com/\r\n  // port of greggman's ThreeD version of marching cubes to Three.js\r\n  // http://webglsamples.googlecode.com/hg/blob/blob.html\r\n  //\r\n  // Adapted for NGL by Alexander Rose\r\n\r\n  // Triangles are constructed between points on cube edges.\r\n  // allowedContours[edge1][edge1] indicates which lines from a given\r\n  // triangle should be shown in line mode.\r\n\r\n  // Values are bitmasks:\r\n  // In loop over cubes we keep another bitmask indicating whether our current\r\n  // cell is the first x-value (1),\r\n  // first y-value (2) or first z-value (4) of the current loop.\r\n  // We draw all lines on leading faces but only draw trailing face lines the first\r\n  // time through the loop\r\n  // A value of 8 below means the edge is always drawn (leading face)\r\n\r\n  // E.g. the first row, lines between edge0 and other edges in the bottom\r\n  // x-y plane are only drawn for the first value of z, edges in the\r\n  // x-z plane are only drawn for the first value of y. No other lines\r\n  // are drawn as they're redundant\r\n  // The line between edge 1 and 5 is always drawn as it's on the leading edge\r\n  var allowedContours = [\r\n\r\n    [ 0, 4, 4, 4, 2, 0, 0, 0, 2, 2, 0, 0 ], // 1 2 3 4 8 9\r\n    [ 4, 0, 4, 4, 0, 8, 0, 0, 0, 8, 8, 0 ], // 0 2 3 5 9 10\r\n    [ 4, 4, 0, 4, 0, 0, 8, 0, 0, 0, 8, 8 ], // 0 1 3 6 10 11\r\n    [ 4, 4, 4, 0, 0, 0, 0, 1, 1, 0, 0, 1 ], // 0 1 2 7 8 11\r\n    [ 2, 0, 0, 0, 0, 8, 8, 8, 2, 2, 0, 0 ], // 0 5 6 7 8 9\r\n    [ 0, 8, 0, 0, 8, 0, 8, 8, 0, 8, 8, 0 ], // And rotate it\r\n    [ 0, 0, 8, 0, 8, 8, 0, 8, 0, 0, 8, 8 ],\r\n    [ 0, 0, 0, 1, 8, 8, 8, 0, 1, 0, 0, 1 ],\r\n    [ 2, 0, 0, 1, 2, 0, 0, 1, 0, 2, 0, 1 ], // 0 3 4 7 9 11\r\n    [ 2, 8, 0, 0, 2, 8, 0, 0, 2, 0, 8, 0 ], // And rotate some more\r\n    [ 0, 8, 8, 0, 0, 8, 8, 0, 0, 8, 0, 8 ],\r\n    [ 0, 0, 8, 1, 0, 0, 8, 1, 1, 0, 8, 0 ]\r\n\r\n  ]\r\n\r\n  var isolevel = 0\r\n  var noNormals = false\r\n  var contour = false\r\n  var wrap = false\r\n  var isNegativeIso = false\r\n  var normalFactor = -1\r\n\r\n\r\n  var n = nx * ny * nz\r\n\r\n  // deltas\r\n  var yd = nx\r\n  var zd = nx * ny\r\n\r\n  var normalCache: Float32Array, vertexIndex: Int32Array\r\n  var count: number, icount: number\r\n\r\n  var ilist = new Int32Array(12)\r\n\r\n  var positionArray: number[] = []\r\n  var normalArray: number[] = []\r\n  var indexArray: number[] = []\r\n  var atomindexArray: number[] = []\r\n\r\n  var edgeTable = getEdgeTable()\r\n  var triTable = getTriTable()\r\n\r\n  var mx: number, my: number, mz: number\r\n\r\n  //\r\n\r\n  this.triangulate = function (_isolevel: number, _noNormals: boolean, _box: number[][]|undefined, _contour: boolean, _wrap: boolean) {\r\n    isolevel = _isolevel\r\n    isNegativeIso = isolevel < 0.0\r\n    contour = _contour\r\n    wrap = _wrap\r\n    // Normals currently disabled in contour mode for performance (unused)\r\n    noNormals = _noNormals || contour\r\n\r\n    if (!noNormals) {\r\n      normalFactor = isolevel > 0 ? -1.0 : 1.0\r\n      if (!normalCache) {\r\n        normalCache = new Float32Array(n * 3)\r\n      }  \r\n    }\r\n\r\n    var vIndexLength = n * 3\r\n\r\n    if (!vertexIndex || vertexIndex.length !== vIndexLength) {\r\n      vertexIndex = new Int32Array(vIndexLength)\r\n    }\r\n\r\n    count = 0\r\n    icount = 0\r\n\r\n    if (_box !== undefined) {\r\n      var min = _box[ 0 ].map(Math.round)\r\n      var max = _box[ 1 ].map(Math.round)\r\n\r\n      mx = nx * Math.ceil(Math.abs(min[ 0 ]) / nx)\r\n      my = ny * Math.ceil(Math.abs(min[ 1 ]) / ny)\r\n      mz = nz * Math.ceil(Math.abs(min[ 2 ]) / nz)\r\n\r\n      triangulate(\r\n        min[ 0 ], min[ 1 ], min[ 2 ],\r\n        max[ 0 ], max[ 1 ], max[ 2 ]\r\n      )\r\n    } else {\r\n      mx = my = mz = 0\r\n\r\n      triangulate()\r\n    }\r\n\r\n    positionArray.length = count * 3\r\n    if (!noNormals) normalArray.length = count * 3\r\n    indexArray.length = icount\r\n    if (atomindex) atomindexArray.length = count\r\n\r\n    return {\r\n      position: new Float32Array(positionArray),\r\n      normal: noNormals ? undefined : new Float32Array(normalArray),\r\n      index: getUintArray(indexArray, positionArray.length / 3),\r\n      atomindex: atomindex ? new Int32Array(atomindexArray) : undefined,\r\n      contour: contour\r\n    }\r\n  }\r\n\r\n  // polygonization\r\n\r\n  function lerp (a: number, b: number, t: number) { return a + (b - a) * t }\r\n\r\n  function index (x: number, y: number, z: number) {\r\n    x = (x + mx) % nx\r\n    y = (y + my) % ny\r\n    z = (z + mz) % nz\r\n    return ((zd * z) + yd * y) + x\r\n  }\r\n\r\n  function VIntX (q: number, offset: number, x: number, y: number, z: number, valp1: number, valp2: number) {\r\n    var _q = 3 * q\r\n\r\n    if (vertexIndex[ _q ] < 0) {\r\n      var mu = (isolevel - valp1) / (valp2 - valp1)\r\n      var nc = normalCache\r\n\r\n      var c = count * 3\r\n\r\n      positionArray[ c ] = x + mu\r\n      positionArray[ c + 1 ] = y\r\n      positionArray[ c + 2 ] = z\r\n\r\n      if (!noNormals) {\r\n        var q3 = q * 3\r\n\r\n        normalArray[ c ] = normalFactor * lerp(nc[ q3 ], nc[ q3 + 3 ], mu)\r\n        normalArray[ c + 1 ] = normalFactor * lerp(nc[ q3 + 1 ], nc[ q3 + 4 ], mu)\r\n        normalArray[ c + 2 ] = normalFactor * lerp(nc[ q3 + 2 ], nc[ q3 + 5 ], mu)\r\n      }\r\n\r\n      if (atomindex) atomindexArray[ count ] = atomindex[ q + Math.round(mu) ]\r\n\r\n      vertexIndex[ _q ] = count\r\n      ilist[ offset ] = count\r\n\r\n      count += 1\r\n    } else {\r\n      ilist[ offset ] = vertexIndex[ _q ]\r\n    }\r\n  }\r\n\r\n  function VIntY (q: number, offset: number, x: number, y: number, z: number, valp1: number, valp2: number) {\r\n    var _q = 3 * q + 1\r\n\r\n    if (vertexIndex[ _q ] < 0) {\r\n      var mu = (isolevel - valp1) / (valp2 - valp1)\r\n      var nc = normalCache\r\n\r\n      var c = count * 3\r\n\r\n      positionArray[ c ] = x\r\n      positionArray[ c + 1 ] = y + mu\r\n      positionArray[ c + 2 ] = z\r\n\r\n      if (!noNormals) {\r\n        var q3 = q * 3\r\n        var q6 = q3 + yd * 3\r\n\r\n        normalArray[ c ] = normalFactor * lerp(nc[ q3 ], nc[ q6 ], mu)\r\n        normalArray[ c + 1 ] = normalFactor * lerp(nc[ q3 + 1 ], nc[ q6 + 1 ], mu)\r\n        normalArray[ c + 2 ] = normalFactor * lerp(nc[ q3 + 2 ], nc[ q6 + 2 ], mu)\r\n      }\r\n\r\n      if (atomindex) atomindexArray[ count ] = atomindex[ q + Math.round(mu) * yd ]\r\n\r\n      vertexIndex[ _q ] = count\r\n      ilist[ offset ] = count\r\n\r\n      count += 1\r\n    } else {\r\n      ilist[ offset ] = vertexIndex[ _q ]\r\n    }\r\n  }\r\n\r\n  function VIntZ (q: number, offset: number, x: number, y: number, z: number, valp1: number, valp2: number) {\r\n    var _q = 3 * q + 2\r\n\r\n    if (vertexIndex[ _q ] < 0) {\r\n      var mu = (isolevel - valp1) / (valp2 - valp1)\r\n      var nc = normalCache\r\n\r\n      var c = count * 3\r\n\r\n      positionArray[ c ] = x\r\n      positionArray[ c + 1 ] = y\r\n      positionArray[ c + 2 ] = z + mu\r\n\r\n      if (!noNormals) {\r\n        var q3 = q * 3\r\n        var q6 = q3 + zd * 3\r\n\r\n        normalArray[ c ] = normalFactor * lerp(nc[ q3 ], nc[ q6 ], mu)\r\n        normalArray[ c + 1 ] = normalFactor * lerp(nc[ q3 + 1 ], nc[ q6 + 1 ], mu)\r\n        normalArray[ c + 2 ] = normalFactor * lerp(nc[ q3 + 2 ], nc[ q6 + 2 ], mu)\r\n      }\r\n\r\n      if (atomindex) atomindexArray[ count ] = atomindex[ q + Math.round(mu) * zd ]\r\n\r\n      vertexIndex[ _q ] = count\r\n      ilist[ offset ] = count\r\n\r\n      count += 1\r\n    } else {\r\n      ilist[ offset ] = vertexIndex[ _q ]\r\n    }\r\n  }\r\n\r\n  function compNorm (q: number) {\r\n    var q3 = q * 3\r\n\r\n    if (normalCache[ q3 ] === 0.0) {\r\n      normalCache[ q3 ] = field[ (q - 1 + n) % n ] - field[ (q + 1) % n ]\r\n      normalCache[ q3 + 1 ] = field[ (q - yd + n) % n ] - field[ (q + yd) % n ]\r\n      normalCache[ q3 + 2 ] = field[ (q - zd + n) % n ] - field[ (q + zd) % n ]\r\n    }\r\n  }\r\n\r\n  function polygonize (fx: number, fy: number, fz: number, q: number, edgeFilter: number) {\r\n    // cache indices\r\n    var q1\r\n    var qy\r\n    var qz\r\n    var q1y\r\n    var q1z\r\n    var qyz\r\n    var q1yz\r\n    if (wrap) {\r\n      q = index(fx, fy, fz)\r\n      q1 = index(fx + 1, fy, fz)\r\n      qy = index(fx, fy + 1, fz)\r\n      qz = index(fx, fy, fz + 1)\r\n      q1y = index(fx + 1, fy + 1, fz)\r\n      q1z = index(fx + 1, fy, fz + 1)\r\n      qyz = index(fx, fy + 1, fz + 1)\r\n      q1yz = index(fx + 1, fy + 1, fz + 1)\r\n    } else {\r\n      q1 = q + 1\r\n      qy = q + yd\r\n      qz = q + zd\r\n      q1y = qy + 1\r\n      q1z = qz + 1\r\n      qyz = qy + zd\r\n      q1yz = qyz + 1\r\n    }\r\n\r\n    var cubeindex = 0\r\n    var field0 = field[ q ]\r\n    var field1 = field[ q1 ]\r\n    var field2 = field[ qy ]\r\n    var field3 = field[ q1y ]\r\n    var field4 = field[ qz ]\r\n    var field5 = field[ q1z ]\r\n    var field6 = field[ qyz ]\r\n    var field7 = field[ q1yz ]\r\n\r\n    if (field0 < isolevel) cubeindex |= 1\r\n    if (field1 < isolevel) cubeindex |= 2\r\n    if (field2 < isolevel) cubeindex |= 8\r\n    if (field3 < isolevel) cubeindex |= 4\r\n    if (field4 < isolevel) cubeindex |= 16\r\n    if (field5 < isolevel) cubeindex |= 32\r\n    if (field6 < isolevel) cubeindex |= 128\r\n    if (field7 < isolevel) cubeindex |= 64\r\n\r\n    // if cube is entirely in/out of the surface - bail, nothing to draw\r\n\r\n    var bits = edgeTable[ cubeindex ]\r\n    if (bits === 0) return 0\r\n\r\n    var fx2 = fx + 1\r\n    var fy2 = fy + 1\r\n    var fz2 = fz + 1\r\n\r\n    // top of the cube\r\n\r\n    if (bits & 1) {\r\n      if (!noNormals) {\r\n        compNorm(q)\r\n        compNorm(q1)\r\n      }\r\n      VIntX(q, 0, fx, fy, fz, field0, field1)\r\n    }\r\n\r\n    if (bits & 2) {\r\n      if (!noNormals) {\r\n        compNorm(q1)\r\n        compNorm(q1y)\r\n      }\r\n      VIntY(q1, 1, fx2, fy, fz, field1, field3)\r\n    }\r\n\r\n    if (bits & 4) {\r\n      if (!noNormals) {\r\n        compNorm(qy)\r\n        compNorm(q1y)\r\n      }\r\n      VIntX(qy, 2, fx, fy2, fz, field2, field3)\r\n    }\r\n\r\n    if (bits & 8) {\r\n      if (!noNormals) {\r\n        compNorm(q)\r\n        compNorm(qy)\r\n      }\r\n      VIntY(q, 3, fx, fy, fz, field0, field2)\r\n    }\r\n\r\n    // bottom of the cube\r\n\r\n    if (bits & 16) {\r\n      if (!noNormals) {\r\n        compNorm(qz)\r\n        compNorm(q1z)\r\n      }\r\n      VIntX(qz, 4, fx, fy, fz2, field4, field5)\r\n    }\r\n\r\n    if (bits & 32) {\r\n      if (!noNormals) {\r\n        compNorm(q1z)\r\n        compNorm(q1yz)\r\n      }\r\n      VIntY(q1z, 5, fx2, fy, fz2, field5, field7)\r\n    }\r\n\r\n    if (bits & 64) {\r\n      if (!noNormals) {\r\n        compNorm(qyz)\r\n        compNorm(q1yz)\r\n      }\r\n      VIntX(qyz, 6, fx, fy2, fz2, field6, field7)\r\n    }\r\n\r\n    if (bits & 128) {\r\n      if (!noNormals) {\r\n        compNorm(qz)\r\n        compNorm(qyz)\r\n      }\r\n      VIntY(qz, 7, fx, fy, fz2, field4, field6)\r\n    }\r\n\r\n    // vertical lines of the cube\r\n\r\n    if (bits & 256) {\r\n      if (!noNormals) {\r\n        compNorm(q)\r\n        compNorm(qz)\r\n      }\r\n      VIntZ(q, 8, fx, fy, fz, field0, field4)\r\n    }\r\n\r\n    if (bits & 512) {\r\n      if (!noNormals) {\r\n        compNorm(q1)\r\n        compNorm(q1z)\r\n      }\r\n      VIntZ(q1, 9, fx2, fy, fz, field1, field5)\r\n    }\r\n\r\n    if (bits & 1024) {\r\n      if (!noNormals) {\r\n        compNorm(q1y)\r\n        compNorm(q1yz)\r\n      }\r\n      VIntZ(q1y, 10, fx2, fy2, fz, field3, field7)\r\n    }\r\n\r\n    if (bits & 2048) {\r\n      if (!noNormals) {\r\n        compNorm(qy)\r\n        compNorm(qyz)\r\n      }\r\n      VIntZ(qy, 11, fx, fy2, fz, field2, field6)\r\n    }\r\n\r\n    var triIndex = cubeindex << 4 // re-purpose cubeindex into an offset into triTable\r\n\r\n    var e1\r\n    var e2\r\n    var e3\r\n    var i = 0\r\n\r\n    // here is where triangles are created\r\n\r\n    while (triTable[ triIndex + i ] !== -1) {\r\n      e1 = triTable[ triIndex + i ]\r\n      e2 = triTable[ triIndex + i + 1 ]\r\n      e3 = triTable[ triIndex + i + 2 ]\r\n\r\n      if (contour) {\r\n        if (allowedContours[ e1 ][ e2 ] & edgeFilter) {\r\n          indexArray[ icount++ ] = ilist[ e1 ]\r\n          indexArray[ icount++ ] = ilist[ e2 ]\r\n        }\r\n        if (allowedContours[ e2 ][ e3 ] & edgeFilter) {\r\n          indexArray[ icount++ ] = ilist[ e2 ]\r\n          indexArray[ icount++ ] = ilist[ e3 ]\r\n        }\r\n        if (allowedContours[ e1 ][ e3 ] & edgeFilter) {\r\n          indexArray[ icount++ ] = ilist[ e1 ]\r\n          indexArray[ icount++ ] = ilist[ e3 ]\r\n        }\r\n      } else {\r\n        indexArray[ icount++ ] = ilist[ isNegativeIso ? e1 : e2 ]\r\n        indexArray[ icount++ ] = ilist[ isNegativeIso ? e2 : e1 ]\r\n        indexArray[ icount++ ] = ilist[ e3 ]\r\n      }\r\n\r\n      i += 3\r\n    }\r\n  }\r\n\r\n  function triangulate (xBeg?: number, yBeg?: number, zBeg?: number, xEnd?: number, yEnd?: number, zEnd?: number) {\r\n    let q\r\n    let q3\r\n    let x\r\n    let y\r\n    let z\r\n    let yOffset\r\n    let zOffset\r\n\r\n    xBeg = xBeg !== undefined ? xBeg : 0\r\n    yBeg = yBeg !== undefined ? yBeg : 0\r\n    zBeg = zBeg !== undefined ? zBeg : 0\r\n\r\n    xEnd = xEnd !== undefined ? xEnd : nx - 1\r\n    yEnd = yEnd !== undefined ? yEnd : ny - 1\r\n    zEnd = zEnd !== undefined ? zEnd : nz - 1\r\n\r\n    if (!wrap) {\r\n      if (noNormals) {\r\n        xBeg = Math.max(0, xBeg)\r\n        yBeg = Math.max(0, yBeg)\r\n        zBeg = Math.max(0, zBeg)\r\n\r\n        xEnd = Math.min(nx - 1, xEnd)\r\n        yEnd = Math.min(ny - 1, yEnd)\r\n        zEnd = Math.min(nz - 1, zEnd)\r\n      } else {\r\n        xBeg = Math.max(1, xBeg)\r\n        yBeg = Math.max(1, yBeg)\r\n        zBeg = Math.max(1, zBeg)\r\n\r\n        xEnd = Math.min(nx - 2, xEnd)\r\n        yEnd = Math.min(ny - 2, yEnd)\r\n        zEnd = Math.min(nz - 2, zEnd)\r\n      }\r\n    }\r\n\r\n    let xBeg2, yBeg2, zBeg2, xEnd2, yEnd2, zEnd2\r\n\r\n    if (!wrap) {\r\n      // init part of the vertexIndex\r\n      // (takes a significant amount of time to do for all)\r\n\r\n      xBeg2 = Math.max(0, xBeg - 2)\r\n      yBeg2 = Math.max(0, yBeg - 2)\r\n      zBeg2 = Math.max(0, zBeg - 2)\r\n\r\n      xEnd2 = Math.min(nx, xEnd + 2)\r\n      yEnd2 = Math.min(ny, yEnd + 2)\r\n      zEnd2 = Math.min(nz, zEnd + 2)\r\n\r\n      for (z = zBeg2; z < zEnd2; ++z) {\r\n        zOffset = zd * z\r\n        for (y = yBeg2; y < yEnd2; ++y) {\r\n          yOffset = zOffset + yd * y\r\n          for (x = xBeg2; x < xEnd2; ++x) {\r\n            q = 3 * (yOffset + x)\r\n            vertexIndex[ q ] = -1\r\n            vertexIndex[ q + 1 ] = -1\r\n            vertexIndex[ q + 2 ] = -1\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      xBeg2 = xBeg - 2\r\n      yBeg2 = yBeg - 2\r\n      zBeg2 = zBeg - 2\r\n\r\n      xEnd2 = xEnd + 2\r\n      yEnd2 = yEnd + 2\r\n      zEnd2 = zEnd + 2\r\n\r\n      for (z = zBeg2; z < zEnd2; ++z) {\r\n        for (y = yBeg2; y < yEnd2; ++y) {\r\n          for (x = xBeg2; x < xEnd2; ++x) {\r\n            q3 = index(x, y, z) * 3\r\n            vertexIndex[ q3 ] = -1\r\n            vertexIndex[ q3 + 1 ] = -1\r\n            vertexIndex[ q3 + 2 ] = -1\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!wrap) {\r\n      // clip space where the isovalue is too low\r\n\r\n      var __break\r\n      var __xBeg = xBeg; var __yBeg = yBeg; var __zBeg = zBeg\r\n      var __xEnd = xEnd; var __yEnd = yEnd; var __zEnd = zEnd\r\n\r\n      __break = false\r\n      for (z = zBeg; z < zEnd; ++z) {\r\n        for (y = yBeg; y < yEnd; ++y) {\r\n          for (x = xBeg; x < xEnd; ++x) {\r\n            q = ((nx * ny) * z) + (nx * y) + x\r\n            if (field[ q ] >= isolevel) {\r\n              __zBeg = z\r\n              __break = true\r\n              break\r\n            }\r\n          }\r\n          if (__break) break\r\n        }\r\n        if (__break) break\r\n      }\r\n\r\n      __break = false\r\n      for (y = yBeg; y < yEnd; ++y) {\r\n        for (z = __zBeg; z < zEnd; ++z) {\r\n          for (x = xBeg; x < xEnd; ++x) {\r\n            q = ((nx * ny) * z) + (nx * y) + x\r\n            if (field[ q ] >= isolevel) {\r\n              __yBeg = y\r\n              __break = true\r\n              break\r\n            }\r\n          }\r\n          if (__break) break\r\n        }\r\n        if (__break) break\r\n      }\r\n\r\n      __break = false\r\n      for (x = xBeg; x < xEnd; ++x) {\r\n        for (y = __yBeg; y < yEnd; ++y) {\r\n          for (z = __zBeg; z < zEnd; ++z) {\r\n            q = ((nx * ny) * z) + (nx * y) + x\r\n            if (field[ q ] >= isolevel) {\r\n              __xBeg = x\r\n              __break = true\r\n              break\r\n            }\r\n          }\r\n          if (__break) break\r\n        }\r\n        if (__break) break\r\n      }\r\n\r\n      __break = false\r\n      for (z = zEnd; z >= zBeg; --z) {\r\n        for (y = yEnd; y >= yBeg; --y) {\r\n          for (x = xEnd; x >= xBeg; --x) {\r\n            q = ((nx * ny) * z) + (nx * y) + x\r\n            if (field[ q ] >= isolevel) {\r\n              __zEnd = z\r\n              __break = true\r\n              break\r\n            }\r\n          }\r\n          if (__break) break\r\n        }\r\n        if (__break) break\r\n      }\r\n\r\n      __break = false\r\n      for (y = yEnd; y >= yBeg; --y) {\r\n        for (z = __zEnd; z >= zBeg; --z) {\r\n          for (x = xEnd; x >= xBeg; --x) {\r\n            q = ((nx * ny) * z) + (nx * y) + x\r\n            if (field[ q ] >= isolevel) {\r\n              __yEnd = y\r\n              __break = true\r\n              break\r\n            }\r\n          }\r\n          if (__break) break\r\n        }\r\n        if (__break) break\r\n      }\r\n\r\n      __break = false\r\n      for (x = xEnd; x >= xBeg; --x) {\r\n        for (y = __yEnd; y >= yBeg; --y) {\r\n          for (z = __zEnd; z >= zBeg; --z) {\r\n            q = ((nx * ny) * z) + (nx * y) + x\r\n            if (field[ q ] >= isolevel) {\r\n              __xEnd = x\r\n              __break = true\r\n              break\r\n            }\r\n          }\r\n          if (__break) break\r\n        }\r\n        if (__break) break\r\n      }\r\n\r\n      //\r\n\r\n      if (noNormals) {\r\n        xBeg = Math.max(0, __xBeg - 1)\r\n        yBeg = Math.max(0, __yBeg - 1)\r\n        zBeg = Math.max(0, __zBeg - 1)\r\n\r\n        xEnd = Math.min(nx - 1, __xEnd + 1)\r\n        yEnd = Math.min(ny - 1, __yEnd + 1)\r\n        zEnd = Math.min(nz - 1, __zEnd + 1)\r\n      } else {\r\n        xBeg = Math.max(1, __xBeg - 1)\r\n        yBeg = Math.max(1, __yBeg - 1)\r\n        zBeg = Math.max(1, __zBeg - 1)\r\n\r\n        xEnd = Math.min(nx - 2, __xEnd + 1)\r\n        yEnd = Math.min(ny - 2, __yEnd + 1)\r\n        zEnd = Math.min(nz - 2, __zEnd + 1)\r\n      }\r\n    }\r\n\r\n    // polygonize part of the grid\r\n    var edgeFilter = 15\r\n    for (z = zBeg; z < zEnd; ++z, edgeFilter &= ~4) {\r\n      zOffset = zd * z\r\n      edgeFilter |= 2\r\n      for (y = yBeg; y < yEnd; ++y, edgeFilter &= ~2) {\r\n        yOffset = zOffset + yd * y\r\n        edgeFilter |= 1\r\n        for (x = xBeg; x < xEnd; ++x, edgeFilter &= ~1) {\r\n          q = yOffset + x\r\n          polygonize(x, y, z, q, edgeFilter)\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\nObject.assign(MarchingCubes, {__deps: [ getEdgeTable, getTriTable, getUintArray ]})\r\n\r\nexport default MarchingCubes\r\n","/**\r\n * @file Matrix Utils\r\n * @private\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n *\r\n * svd methods from Eugene Zatepyakin / http://inspirit.github.io/jsfeat/\r\n */\r\n\r\nimport { NumberArray } from '../types'\r\nimport { v3new, v3cross } from './vector-utils'\r\n\r\nexport class Matrix {\r\n  size: number\r\n  data: Float32Array\r\n\r\n  constructor (readonly cols: number, readonly rows: number) {\r\n    this.size = this.cols * this.rows\r\n    this.data = new Float32Array(this.size)\r\n  }\r\n\r\n  copyTo (matrix: Matrix) {\r\n    matrix.data.set(this.data)\r\n  }\r\n}\r\n\r\nexport function transpose (At: Matrix, A: Matrix) {\r\n  let i = 0\r\n  let j = 0\r\n  const nrows = A.rows\r\n  const ncols = A.cols\r\n  let Ai = 0\r\n  let Ati = 0\r\n  let pAt = 0\r\n  const ad = A.data\r\n  const atd = At.data\r\n\r\n  for (; i < nrows; Ati += 1, Ai += ncols, i++) {\r\n    pAt = Ati\r\n    for (j = 0; j < ncols; pAt += nrows, j++) atd[pAt] = ad[Ai + j]\r\n  }\r\n}\r\n\r\n// C = A * B\r\nexport function multiply (C: Matrix, A: Matrix, B: Matrix) {\r\n  let i = 0\r\n  let j = 0\r\n  let k = 0\r\n  let Ap = 0\r\n  let pA = 0\r\n  let pB = 0\r\n  let _pB = 0\r\n  let Cp = 0\r\n  const ncols = A.cols\r\n  const nrows = A.rows\r\n  const mcols = B.cols\r\n  const ad = A.data\r\n  const bd = B.data\r\n  const cd = C.data\r\n  let sum = 0.0\r\n\r\n  for (; i < nrows; Ap += ncols, i++) {\r\n    for (_pB = 0, j = 0; j < mcols; Cp++, _pB++, j++) {\r\n      pB = _pB\r\n      pA = Ap\r\n      sum = 0.0\r\n      for (k = 0; k < ncols; pA++, pB += mcols, k++) {\r\n        sum += ad[pA] * bd[pB]\r\n      }\r\n      cd[Cp] = sum\r\n    }\r\n  }\r\n}\r\n\r\n// C = A * B'\r\nexport function multiplyABt (C: Matrix, A: Matrix, B: Matrix) {\r\n  let i = 0\r\n  let j = 0\r\n  let k = 0\r\n  let Ap = 0\r\n  let pA = 0\r\n  let pB = 0\r\n  let Cp = 0\r\n  const ncols = A.cols\r\n  const nrows = A.rows\r\n  const mrows = B.rows\r\n  const ad = A.data\r\n  const bd = B.data\r\n  const cd = C.data\r\n  let sum = 0.0\r\n\r\n  for (; i < nrows; Ap += ncols, i++) {\r\n    for (pB = 0, j = 0; j < mrows; Cp++, j++) {\r\n      pA = Ap\r\n      sum = 0.0\r\n      for (k = 0; k < ncols; pA++, pB++, k++) {\r\n        sum += ad[pA] * bd[pB]\r\n      }\r\n      cd[Cp] = sum\r\n    }\r\n  }\r\n}\r\n\r\n// C = A' * B\r\nexport function multiplyAtB (C: Matrix, A: Matrix, B: Matrix) {\r\n  let i = 0\r\n  let j = 0\r\n  let k = 0\r\n  let Ap = 0\r\n  let pA = 0\r\n  let pB = 0\r\n  let _pB = 0\r\n  let Cp = 0\r\n  const ncols = A.cols\r\n  const nrows = A.rows\r\n  const mcols = B.cols\r\n  const ad = A.data\r\n  const bd = B.data\r\n  const cd = C.data\r\n  let sum = 0.0\r\n\r\n  for (; i < ncols; Ap++, i++) {\r\n    for (_pB = 0, j = 0; j < mcols; Cp++, _pB++, j++) {\r\n      pB = _pB\r\n      pA = Ap\r\n      sum = 0.0\r\n      for (k = 0; k < nrows; pA += ncols, pB += mcols, k++) {\r\n        sum += ad[pA] * bd[pB]\r\n      }\r\n      cd[Cp] = sum\r\n    }\r\n  }\r\n}\r\n\r\nexport function invert3x3 (from: Matrix, to: Matrix) {\r\n  const A = from.data\r\n  const invA = to.data\r\n  const t1 = A[4]\r\n  const t2 = A[8]\r\n  const t4 = A[5]\r\n  const t5 = A[7]\r\n  const t8 = A[0]\r\n\r\n  const t9 = t8 * t1\r\n  const t11 = t8 * t4\r\n  const t13 = A[3]\r\n  const t14 = A[1]\r\n  const t15 = t13 * t14\r\n  const t17 = A[2]\r\n  const t18 = t13 * t17\r\n  const t20 = A[6]\r\n  const t21 = t20 * t14\r\n  const t23 = t20 * t17\r\n  const t26 = 1.0 / (t9 * t2 - t11 * t5 - t15 * t2 + t18 * t5 + t21 * t4 - t23 * t1)\r\n  invA[0] = (t1 * t2 - t4 * t5) * t26\r\n  invA[1] = -(t14 * t2 - t17 * t5) * t26\r\n  invA[2] = -(-t14 * t4 + t17 * t1) * t26\r\n  invA[3] = -(t13 * t2 - t4 * t20) * t26\r\n  invA[4] = (t8 * t2 - t23) * t26\r\n  invA[5] = -(t11 - t18) * t26\r\n  invA[6] = -(-t13 * t5 + t1 * t20) * t26\r\n  invA[7] = -(t8 * t5 - t21) * t26\r\n  invA[8] = (t9 - t15) * t26\r\n}\r\n\r\nexport function mat3x3determinant (M: Matrix) {\r\n  const md = M.data\r\n  return md[0] * md[4] * md[8] -\r\n    md[0] * md[5] * md[7] -\r\n    md[3] * md[1] * md[8] +\r\n    md[3] * md[2] * md[7] +\r\n    md[6] * md[1] * md[5] -\r\n    md[6] * md[2] * md[4]\r\n}\r\n\r\n// C = A * B\r\nexport function multiply3x3 (C: Matrix, A: Matrix, B: Matrix) {\r\n  const Cd = C.data\r\n  const Ad = A.data\r\n  const Bd = B.data\r\n  const m10 = Ad[0]\r\n  const m11 = Ad[1]\r\n  const m12 = Ad[2]\r\n  const m13 = Ad[3]\r\n  const m14 = Ad[4]\r\n  const m15 = Ad[5]\r\n  const m16 = Ad[6]\r\n  const m17 = Ad[7]\r\n  const m18 = Ad[8]\r\n\r\n  const m20 = Bd[0]\r\n  const m21 = Bd[1]\r\n  const m22 = Bd[2]\r\n  const m23 = Bd[3]\r\n  const m24 = Bd[4]\r\n  const m25 = Bd[5]\r\n  const m26 = Bd[6]\r\n  const m27 = Bd[7]\r\n  const m28 = Bd[8]\r\n\r\n  Cd[0] = m10 * m20 + m11 * m23 + m12 * m26\r\n  Cd[1] = m10 * m21 + m11 * m24 + m12 * m27\r\n  Cd[2] = m10 * m22 + m11 * m25 + m12 * m28\r\n  Cd[3] = m13 * m20 + m14 * m23 + m15 * m26\r\n  Cd[4] = m13 * m21 + m14 * m24 + m15 * m27\r\n  Cd[5] = m13 * m22 + m14 * m25 + m15 * m28\r\n  Cd[6] = m16 * m20 + m17 * m23 + m18 * m26\r\n  Cd[7] = m16 * m21 + m17 * m24 + m18 * m27\r\n  Cd[8] = m16 * m22 + m17 * m25 + m18 * m28\r\n}\r\n\r\nexport function meanRows (A: Matrix) {\r\n  const nrows = A.rows\r\n  const ncols = A.cols\r\n  const Ad = A.data\r\n  const mean = new Array(ncols)\r\n\r\n  for (let j = 0; j < ncols; ++j) {\r\n    mean[ j ] = 0.0\r\n  }\r\n\r\n  for (let i = 0, p = 0; i < nrows; ++i) {\r\n    for (let j = 0; j < ncols; ++j, ++p) {\r\n      mean[ j ] += Ad[ p ]\r\n    }\r\n  }\r\n\r\n  for (let j = 0; j < ncols; ++j) {\r\n    mean[ j ] /= nrows\r\n  }\r\n\r\n  return mean\r\n}\r\n\r\nexport function meanCols (A: Matrix) {\r\n  const nrows = A.rows\r\n  const ncols = A.cols\r\n  const Ad = A.data\r\n  const mean = new Array(nrows)\r\n\r\n  for (let j = 0; j < nrows; ++j) {\r\n    mean[ j ] = 0.0\r\n  }\r\n\r\n  for (let i = 0, p = 0; i < ncols; ++i) {\r\n    for (let j = 0; j < nrows; ++j, ++p) {\r\n      mean[ j ] += Ad[ p ]\r\n    }\r\n  }\r\n\r\n  for (let j = 0; j < nrows; ++j) {\r\n    mean[ j ] /= ncols\r\n  }\r\n\r\n  return mean\r\n}\r\n\r\nexport function subRows (A: Matrix, row: number[]) {\r\n  const nrows = A.rows\r\n  const ncols = A.cols\r\n  const Ad = A.data\r\n\r\n  for (let i = 0, p = 0; i < nrows; ++i) {\r\n    for (let j = 0; j < ncols; ++j, ++p) {\r\n      Ad[ p ] -= row[ j ]\r\n    }\r\n  }\r\n}\r\n\r\nexport function subCols (A: Matrix, col: number[]) {\r\n  const nrows = A.rows\r\n  const ncols = A.cols\r\n  const Ad = A.data\r\n\r\n  for (let i = 0, p = 0; i < ncols; ++i) {\r\n    for (let j = 0; j < nrows; ++j, ++p) {\r\n      Ad[ p ] -= col[ j ]\r\n    }\r\n  }\r\n}\r\n\r\nexport function addRows (A: Matrix, row: number[]) {\r\n  const nrows = A.rows\r\n  const ncols = A.cols\r\n  const Ad = A.data\r\n\r\n  for (let i = 0, p = 0; i < nrows; ++i) {\r\n    for (let j = 0; j < ncols; ++j, ++p) {\r\n      Ad[ p ] += row[ j ]\r\n    }\r\n  }\r\n}\r\n\r\nexport function addCols (A: Matrix, col: number[]) {\r\n  const nrows = A.rows\r\n  const ncols = A.cols\r\n  const Ad = A.data\r\n\r\n  for (let i = 0, p = 0; i < ncols; ++i) {\r\n    for (let j = 0; j < nrows; ++j, ++p) {\r\n      Ad[ p ] += col[ j ]\r\n    }\r\n  }\r\n}\r\n\r\nexport function swap (A: NumberArray, i0: number, i1: number, t: number) {\r\n  t = A[i0]\r\n  A[i0] = A[i1]\r\n  A[i1] = t\r\n}\r\n\r\nexport function hypot (a: number, b: number) {\r\n  a = Math.abs(a)\r\n  b = Math.abs(b)\r\n  if (a > b) {\r\n    b /= a\r\n    return a * Math.sqrt(1.0 + b * b)\r\n  }\r\n  if (b > 0) {\r\n    a /= b\r\n    return b * Math.sqrt(1.0 + a * a)\r\n  }\r\n  return 0.0\r\n}\r\n\r\nconst EPSILON = 0.0000001192092896\r\nconst FLT_MIN = 1E-37\r\n\r\nexport function JacobiSVDImpl (At: NumberArray, astep: number, _W: NumberArray, Vt: NumberArray, vstep: number, m: number, n: number, n1: number) {\r\n  const eps = EPSILON * 2.0\r\n  const minval = FLT_MIN\r\n  let i = 0\r\n  let j = 0\r\n  let k = 0\r\n  let iter = 0\r\n  const maxIter = Math.max(m, 30)\r\n  let Ai = 0\r\n  let Aj = 0\r\n  let Vi = 0\r\n  let Vj = 0\r\n  let changed = 0\r\n  let c = 0.0\r\n  let s = 0.0\r\n  let t = 0.0\r\n  let t0 = 0.0\r\n  let t1 = 0.0\r\n  let sd = 0.0\r\n  let beta = 0.0\r\n  let gamma = 0.0\r\n  let delta = 0.0\r\n  let a = 0.0\r\n  let p = 0.0\r\n  let b = 0.0\r\n  let seed = 0x1234\r\n  let val = 0.0\r\n  let val0 = 0.0\r\n  let asum = 0.0\r\n\r\n  const W = new Float64Array(n << 3)\r\n\r\n  for (; i < n; i++) {\r\n    for (k = 0, sd = 0; k < m; k++) {\r\n      t = At[i * astep + k]\r\n      sd += t * t\r\n    }\r\n    W[i] = sd\r\n\r\n    if (Vt) {\r\n      for (k = 0; k < n; k++) {\r\n        Vt[i * vstep + k] = 0\r\n      }\r\n      Vt[i * vstep + i] = 1\r\n    }\r\n  }\r\n\r\n  for (; iter < maxIter; iter++) {\r\n    changed = 0\r\n\r\n    for (i = 0; i < n - 1; i++) {\r\n      for (j = i + 1; j < n; j++) {\r\n        Ai = (i * astep) | 0\r\n        Aj = (j * astep) | 0\r\n        a = W[i]\r\n        p = 0\r\n        b = W[j]\r\n\r\n        k = 2\r\n        p += At[Ai] * At[Aj]\r\n        p += At[Ai + 1] * At[Aj + 1]\r\n\r\n        for (; k < m; k++) { p += At[Ai + k] * At[Aj + k] }\r\n\r\n        if (Math.abs(p) <= eps * Math.sqrt(a * b)) continue\r\n\r\n        p *= 2.0\r\n        beta = a - b\r\n        gamma = hypot(p, beta)\r\n        if (beta < 0) {\r\n          delta = (gamma - beta) * 0.5\r\n          s = Math.sqrt(delta / gamma)\r\n          c = (p / (gamma * s * 2.0))\r\n        } else {\r\n          c = Math.sqrt((gamma + beta) / (gamma * 2.0))\r\n          s = (p / (gamma * c * 2.0))\r\n        }\r\n\r\n        a = 0.0\r\n        b = 0.0\r\n\r\n        k = 2 // unroll\r\n        t0 = c * At[Ai] + s * At[Aj]\r\n        t1 = -s * At[Ai] + c * At[Aj]\r\n        At[Ai] = t0; At[Aj] = t1\r\n        a += t0 * t0; b += t1 * t1\r\n\r\n        t0 = c * At[Ai + 1] + s * At[Aj + 1]\r\n        t1 = -s * At[Ai + 1] + c * At[Aj + 1]\r\n        At[Ai + 1] = t0; At[Aj + 1] = t1\r\n        a += t0 * t0; b += t1 * t1\r\n\r\n        for (; k < m; k++) {\r\n          t0 = c * At[Ai + k] + s * At[Aj + k]\r\n          t1 = -s * At[Ai + k] + c * At[Aj + k]\r\n          At[Ai + k] = t0; At[Aj + k] = t1\r\n\r\n          a += t0 * t0; b += t1 * t1\r\n        }\r\n\r\n        W[i] = a\r\n        W[j] = b\r\n\r\n        changed = 1\r\n\r\n        if (Vt) {\r\n          Vi = (i * vstep) | 0\r\n          Vj = (j * vstep) | 0\r\n\r\n          k = 2\r\n          t0 = c * Vt[Vi] + s * Vt[Vj]\r\n          t1 = -s * Vt[Vi] + c * Vt[Vj]\r\n          Vt[Vi] = t0; Vt[Vj] = t1\r\n\r\n          t0 = c * Vt[Vi + 1] + s * Vt[Vj + 1]\r\n          t1 = -s * Vt[Vi + 1] + c * Vt[Vj + 1]\r\n          Vt[Vi + 1] = t0; Vt[Vj + 1] = t1\r\n\r\n          for (; k < n; k++) {\r\n            t0 = c * Vt[Vi + k] + s * Vt[Vj + k]\r\n            t1 = -s * Vt[Vi + k] + c * Vt[Vj + k]\r\n            Vt[Vi + k] = t0; Vt[Vj + k] = t1\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (changed === 0) break\r\n  }\r\n\r\n  for (i = 0; i < n; i++) {\r\n    for (k = 0, sd = 0; k < m; k++) {\r\n      t = At[i * astep + k]\r\n      sd += t * t\r\n    }\r\n    W[i] = Math.sqrt(sd)\r\n  }\r\n\r\n  for (i = 0; i < n - 1; i++) {\r\n    j = i\r\n    for (k = i + 1; k < n; k++) {\r\n      if (W[j] < W[k]) { j = k }\r\n    }\r\n    if (i !== j) {\r\n      swap(W, i, j, sd)\r\n      if (Vt) {\r\n        for (k = 0; k < m; k++) {\r\n          swap(At, i * astep + k, j * astep + k, t)\r\n        }\r\n\r\n        for (k = 0; k < n; k++) {\r\n          swap(Vt, i * vstep + k, j * vstep + k, t)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  for (i = 0; i < n; i++) {\r\n    _W[i] = W[i]\r\n  }\r\n\r\n  if (!Vt) {\r\n    return\r\n  }\r\n\r\n  for (i = 0; i < n1; i++) {\r\n    sd = i < n ? W[i] : 0\r\n\r\n    while (sd <= minval) {\r\n      // if we got a zero singular value, then in order to get the corresponding left singular vector\r\n      // we generate a random vector, project it to the previously computed left singular vectors,\r\n      // subtract the projection and normalize the difference.\r\n      val0 = (1.0 / m)\r\n      for (k = 0; k < m; k++) {\r\n        seed = (seed * 214013 + 2531011)\r\n        val = (((seed >> 16) & 0x7fff) & 256) !== 0 ? val0 : -val0\r\n        At[i * astep + k] = val\r\n      }\r\n      for (iter = 0; iter < 2; iter++) {\r\n        for (j = 0; j < i; j++) {\r\n          sd = 0\r\n          for (k = 0; k < m; k++) {\r\n            sd += At[i * astep + k] * At[j * astep + k]\r\n          }\r\n          asum = 0.0\r\n          for (k = 0; k < m; k++) {\r\n            t = (At[i * astep + k] - sd * At[j * astep + k])\r\n            At[i * astep + k] = t\r\n            asum += Math.abs(t)\r\n          }\r\n          asum = asum ? 1.0 / asum : 0\r\n          for (k = 0; k < m; k++) {\r\n            At[i * astep + k] *= asum\r\n          }\r\n        }\r\n      }\r\n      sd = 0\r\n      for (k = 0; k < m; k++) {\r\n        t = At[i * astep + k]\r\n        sd += t * t\r\n      }\r\n      sd = Math.sqrt(sd)\r\n    }\r\n\r\n    s = (1.0 / sd)\r\n    for (k = 0; k < m; k++) {\r\n      At[i * astep + k] *= s\r\n    }\r\n  }\r\n}\r\n\r\nexport function svd (A: Matrix, W: Matrix, U: Matrix, V: Matrix) {\r\n  let at = 0\r\n  let i = 0\r\n  const _m = A.rows\r\n  const _n = A.cols\r\n  let m = _m\r\n  let n = _n\r\n\r\n  if (m < n) {\r\n    at = 1\r\n    i = m\r\n    m = n\r\n    n = i\r\n  }\r\n\r\n  const amt = new Matrix(m, m)\r\n  const wmt = new Matrix(1, n)\r\n  const vmt = new Matrix(n, n)\r\n\r\n  if (at === 0) {\r\n    transpose(amt, A)\r\n  } else {\r\n    for (i = 0; i < _n * _m; i++) {\r\n      amt.data[i] = A.data[i]\r\n    }\r\n    for (; i < n * m; i++) {\r\n      amt.data[i] = 0\r\n    }\r\n  }\r\n\r\n  JacobiSVDImpl(amt.data, m, wmt.data, vmt.data, n, m, n, m)\r\n\r\n  if (W) {\r\n    for (i = 0; i < n; i++) {\r\n      W.data[i] = wmt.data[i]\r\n    }\r\n    for (; i < _n; i++) {\r\n      W.data[i] = 0\r\n    }\r\n  }\r\n\r\n  if (at === 0) {\r\n    if (U) transpose(U, amt)\r\n    if (V) transpose(V, vmt)\r\n  } else {\r\n    if (U) transpose(U, vmt)\r\n    if (V) transpose(V, amt)\r\n  }\r\n}\r\n\r\n//\r\n\r\nexport function m4new () {\r\n  return new Float32Array([\r\n    1, 0, 0, 0,\r\n    0, 1, 0, 0,\r\n    0, 0, 1, 0,\r\n    0, 0, 0, 1\r\n  ])\r\n}\r\n\r\nexport function m4set (out: Float32Array, n11: number, n12: number, n13: number, n14: number, n21: number, n22: number, n23: number, n24: number, n31: number, n32: number, n33: number, n34: number, n41: number, n42: number, n43: number, n44: number) {\r\n  out[ 0 ] = n11; out[ 4 ] = n12; out[ 8 ] = n13; out[ 12 ] = n14\r\n  out[ 1 ] = n21; out[ 5 ] = n22; out[ 9 ] = n23; out[ 13 ] = n24\r\n  out[ 2 ] = n31; out[ 6 ] = n32; out[ 10 ] = n33; out[ 14 ] = n34\r\n  out[ 3 ] = n41; out[ 7 ] = n42; out[ 11 ] = n43; out[ 15 ] = n44\r\n}\r\n\r\nexport function m4identity (out: Float32Array) {\r\n  m4set(out,\r\n    1, 0, 0, 0,\r\n    0, 1, 0, 0,\r\n    0, 0, 1, 0,\r\n    0, 0, 0, 1\r\n  )\r\n}\r\n(m4identity as any).__deps = [ m4set ]\r\n\r\nexport function m4multiply (out: Float32Array, a: Float32Array, b: Float32Array) {\r\n  const a11 = a[ 0 ]\r\n  const a12 = a[ 4 ]\r\n  const a13 = a[ 8 ]\r\n  const a14 = a[ 12 ]\r\n  const a21 = a[ 1 ]\r\n  const a22 = a[ 5 ]\r\n  const a23 = a[ 9 ]\r\n  const a24 = a[ 13 ]\r\n  const a31 = a[ 2 ]\r\n  const a32 = a[ 6 ]\r\n  const a33 = a[ 10 ]\r\n  const a34 = a[ 14 ]\r\n  const a41 = a[ 3 ]\r\n  const a42 = a[ 7 ]\r\n  const a43 = a[ 11 ]\r\n  const a44 = a[ 15 ]\r\n\r\n  const b11 = b[ 0 ]\r\n  const b12 = b[ 4 ]\r\n  const b13 = b[ 8 ]\r\n  const b14 = b[ 12 ]\r\n  const b21 = b[ 1 ]\r\n  const b22 = b[ 5 ]\r\n  const b23 = b[ 9 ]\r\n  const b24 = b[ 13 ]\r\n  const b31 = b[ 2 ]\r\n  const b32 = b[ 6 ]\r\n  const b33 = b[ 10 ]\r\n  const b34 = b[ 14 ]\r\n  const b41 = b[ 3 ]\r\n  const b42 = b[ 7 ]\r\n  const b43 = b[ 11 ]\r\n  const b44 = b[ 15 ]\r\n\r\n  out[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41\r\n  out[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42\r\n  out[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43\r\n  out[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44\r\n\r\n  out[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41\r\n  out[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42\r\n  out[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43\r\n  out[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44\r\n\r\n  out[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41\r\n  out[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42\r\n  out[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43\r\n  out[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44\r\n\r\n  out[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41\r\n  out[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42\r\n  out[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43\r\n  out[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44\r\n}\r\n\r\nexport function m4makeScale (out: Float32Array, x: number, y: number, z: number) {\r\n  m4set(out,\r\n    x, 0, 0, 0,\r\n    0, y, 0, 0,\r\n    0, 0, z, 0,\r\n    0, 0, 0, 1\r\n  )\r\n}\r\n(m4makeScale as any).__deps = [ m4set ]\r\n\r\nexport function m4makeTranslation (out: Float32Array, x: number, y: number, z: number) {\r\n  m4set(out,\r\n    1, 0, 0, x,\r\n    0, 1, 0, y,\r\n    0, 0, 1, z,\r\n    0, 0, 0, 1\r\n  )\r\n}\r\n(m4makeTranslation as any).__deps = [ m4set ]\r\n\r\nexport function m4makeRotationY (out: Float32Array, theta: number) {\r\n  const c = Math.cos(theta)\r\n  const s = Math.sin(theta)\r\n  m4set(out,\r\n    c, 0, s, 0,\r\n    0, 1, 0, 0,\r\n    -s, 0, c, 0,\r\n    0, 0, 0, 1\r\n  )\r\n}\r\n(m4makeRotationY as any).__deps = [ m4set ]\r\n\r\n//\r\n\r\nexport function m3new () {\r\n  return new Float32Array([\r\n    1, 0, 0,\r\n    0, 1, 0,\r\n    0, 0, 1\r\n  ])\r\n}\r\n\r\nexport function m3makeNormal (out: Float32Array, m4: Float32Array) {\r\n  const r0 = v3new([ m4[0], m4[1], m4[2] ])\r\n  const r1 = v3new([ m4[4], m4[5], m4[6] ])\r\n  const r2 = v3new([ m4[8], m4[9], m4[10] ])\r\n  const cp = v3new()\r\n  //        [ r0 ]       [ r1 x r2 ]\r\n  // M3x3 = [ r1 ]   N = [ r2 x r0 ]\r\n  //        [ r2 ]       [ r0 x r1 ]\r\n  v3cross(cp, r1, r2)\r\n  out[ 0 ] = cp[ 0 ]\r\n  out[ 1 ] = cp[ 1 ]\r\n  out[ 2 ] = cp[ 2 ]\r\n  v3cross(cp, r2, r0)\r\n  out[ 3 ] = cp[ 0 ]\r\n  out[ 4 ] = cp[ 1 ]\r\n  out[ 5 ] = cp[ 2 ]\r\n  v3cross(cp, r0, r1)\r\n  out[ 6 ] = cp[ 0 ]\r\n  out[ 7 ] = cp[ 1 ]\r\n  out[ 8 ] = cp[ 2 ]\r\n}\r\n(m3makeNormal as any).__deps = [ v3new, v3cross ]\r\n","/**\r\n * @file Surface Utils\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { degToRad } from '../math/math-utils'\r\nimport {\r\n  m4new, m4multiply, m4makeTranslation, m4makeScale, m4makeRotationY\r\n} from '../math/matrix-utils'\r\nimport {\r\n  v3addScalar, v3subScalar, v3divideScalar, v3multiplyScalar,\r\n  v3floor, v3ceil, v3sub, v3negate,\r\n  v3cross, v3fromArray, normalizeVector3array\r\n} from '../math/vector-utils'\r\nimport { NumberArray } from '../types'\r\n\r\nfunction laplacianSmooth (verts: Float32Array, faces: Float32Array, numiter: number, inflate: boolean) {\r\n  // based on D. Xu, Y. Zhang (2009) Generating Triangulated Macromolecular\r\n  // Surfaces by Euclidean Distance Transform. PLoS ONE 4(12): e8140.\r\n  //\r\n  // Permission to use, copy, modify, and distribute this program for\r\n  // any purpose, with or without fee, is hereby granted, provided that\r\n  // the notices on the head, the reference information, and this\r\n  // copyright notice appear in all copies or substantial portions of\r\n  // the Software. It is provided \"as is\" without express or implied\r\n  // warranty.\r\n  //\r\n  // ported to JavaScript and adapted to NGL by Alexander Rose\r\n\r\n  numiter = numiter || 1\r\n  inflate = inflate || true\r\n\r\n  const nv = verts.length / 3\r\n  const nf = faces.length / 3\r\n  let norms: Float32Array | undefined = undefined\r\n\r\n  if (inflate) {\r\n    norms = new Float32Array(nv * 3)\r\n  }\r\n\r\n  const tps = new Float32Array(nv * 3)\r\n\r\n  let i\r\n  const ndeg = 20\r\n  const vertdeg = new Array(ndeg)\r\n\r\n  for (i = 0; i < ndeg; ++i) {\r\n    vertdeg[ i ] = new Uint32Array(nv)\r\n  }\r\n\r\n  for (i = 0; i < nv; ++i) {\r\n    vertdeg[ 0 ][ i ] = 0\r\n  }\r\n\r\n  let j, jl\r\n  let flagvert: boolean\r\n\r\n  // for each face\r\n\r\n  for (i = 0; i < nf; ++i) {\r\n    var ao = i * 3\r\n    var bo = i * 3 + 1\r\n    var co = i * 3 + 2\r\n\r\n    // vertex a\r\n\r\n    flagvert = true\r\n    for (j = 0, jl = vertdeg[ 0 ][ faces[ao] ]; j < jl; ++j) {\r\n      if (faces[ bo ] === vertdeg[ j + 1 ][ faces[ ao ] ]) {\r\n        flagvert = false\r\n        break\r\n      }\r\n    }\r\n    if (flagvert) {\r\n      vertdeg[ 0 ][ faces[ ao ] ]++\r\n      vertdeg[ vertdeg[ 0 ][ faces[ ao ] ] ][ faces[ ao ] ] = faces[ bo ]\r\n    }\r\n\r\n    flagvert = true\r\n    for (j = 0, jl = vertdeg[ 0 ][ faces[ ao ] ]; j < jl; ++j) {\r\n      if (faces[ co ] === vertdeg[ j + 1 ][ faces[ ao ] ]) {\r\n        flagvert = false\r\n        break\r\n      }\r\n    }\r\n    if (flagvert) {\r\n      vertdeg[ 0 ][ faces[ ao ] ]++\r\n      vertdeg[ vertdeg[ 0 ][ faces[ ao ] ] ][ faces[ ao ] ] = faces[ co ]\r\n    }\r\n\r\n    // vertex b\r\n\r\n    flagvert = true\r\n    for (j = 0, jl = vertdeg[ 0 ][ faces[ bo ] ]; j < jl; ++j) {\r\n      if (faces[ ao ] === vertdeg[ j + 1 ][ faces[ bo ] ]) {\r\n        flagvert = false\r\n        break\r\n      }\r\n    }\r\n    if (flagvert) {\r\n      vertdeg[ 0 ][ faces[ bo ] ]++\r\n      vertdeg[ vertdeg[ 0 ][ faces[ bo ] ] ][ faces[ bo ] ] = faces[ ao ]\r\n    }\r\n\r\n    flagvert = true\r\n    for (j = 0, jl = vertdeg[ 0 ][ faces[ bo ] ]; j < jl; ++j) {\r\n      if (faces[ co ] === vertdeg[ j + 1 ][ faces[ bo ] ]) {\r\n        flagvert = false\r\n        break\r\n      }\r\n    }\r\n    if (flagvert) {\r\n      vertdeg[ 0 ][ faces[ bo ] ]++\r\n      vertdeg[ vertdeg[ 0 ][ faces[ bo ] ] ][ faces[ bo ] ] = faces[ co ]\r\n    }\r\n\r\n    // vertex c\r\n\r\n    flagvert = true\r\n    for (j = 0; j < vertdeg[ 0 ][ faces[ co ] ]; ++j) {\r\n      if (faces[ ao ] === vertdeg[ j + 1 ][ faces[ co ] ]) {\r\n        flagvert = false\r\n        break\r\n      }\r\n    }\r\n    if (flagvert) {\r\n      vertdeg[ 0 ][ faces[ co ] ]++\r\n      vertdeg[ vertdeg[ 0 ][ faces[ co ] ] ][ faces[ co ] ] = faces[ ao ]\r\n    }\r\n\r\n    flagvert = true\r\n    for (j = 0, jl = vertdeg[ 0 ][ faces[ co ] ]; j < jl; ++j) {\r\n      if (faces[ bo ] === vertdeg[ j + 1 ][ faces[ co ] ]) {\r\n        flagvert = false\r\n        break\r\n      }\r\n    }\r\n    if (flagvert) {\r\n      vertdeg[ 0 ][ faces[ co ] ]++\r\n      vertdeg[ vertdeg[ 0 ][ faces[ co ] ] ][ faces[ co ] ] = faces[ bo ]\r\n    }\r\n  }\r\n\r\n  var wt = 1.0\r\n  var wt2 = 0.5\r\n  var i3, vi3, vdi, wtvi, wt2vi\r\n  var ssign = -1\r\n  var scaleFactor = 1\r\n  var outwt = 0.75 / (scaleFactor + 3.5) // area-preserving\r\n\r\n  // smoothing iterations\r\n\r\n  for (var k = 0; k < numiter; ++k) {\r\n    // for each vertex\r\n\r\n    for (i = 0; i < nv; ++i) {\r\n      i3 = i * 3\r\n      vdi = vertdeg[ 0 ][ i ]\r\n\r\n      if (vdi < 3) {\r\n        tps[ i3 ] = verts[ i3 ]\r\n        tps[ i3 + 1 ] = verts[ i3 + 1 ]\r\n        tps[ i3 + 2 ] = verts[ i3 + 2 ]\r\n      } else if (vdi === 3 || vdi === 4) {\r\n        tps[ i3 ] = 0\r\n        tps[ i3 + 1 ] = 0\r\n        tps[ i3 + 2 ] = 0\r\n\r\n        for (j = 0; j < vdi; ++j) {\r\n          vi3 = vertdeg[ j + 1 ][ i ] * 3\r\n          tps[ i3 ] += verts[ vi3 ]\r\n          tps[ i3 + 1 ] += verts[ vi3 + 1 ]\r\n          tps[ i3 + 2 ] += verts[ vi3 + 2 ]\r\n        }\r\n\r\n        tps[ i3 ] += wt2 * verts[ i3 ]\r\n        tps[ i3 + 1 ] += wt2 * verts[ i3 + 1 ]\r\n        tps[ i3 + 2 ] += wt2 * verts[ i3 + 2 ]\r\n\r\n        wt2vi = wt2 + vdi\r\n        tps[ i3 ] /= wt2vi\r\n        tps[ i3 + 1 ] /= wt2vi\r\n        tps[ i3 + 2 ] /= wt2vi\r\n      } else {\r\n        tps[ i3 ] = 0\r\n        tps[ i3 + 1 ] = 0\r\n        tps[ i3 + 2 ] = 0\r\n\r\n        for (j = 0; j < vdi; ++j) {\r\n          vi3 = vertdeg[ j + 1 ][ i ] * 3\r\n          tps[ i3 ] += verts[ vi3 ]\r\n          tps[ i3 + 1 ] += verts[ vi3 + 1 ]\r\n          tps[ i3 + 2 ] += verts[ vi3 + 2 ]\r\n        }\r\n\r\n        tps[ i3 ] += wt * verts[ i3 ]\r\n        tps[ i3 + 1 ] += wt * verts[ i3 + 1 ]\r\n        tps[ i3 + 2 ] += wt * verts[ i3 + 2 ]\r\n\r\n        wtvi = wt + vdi\r\n        tps[ i3 ] /= wtvi\r\n        tps[ i3 + 1 ] /= wtvi\r\n        tps[ i3 + 2 ] /= wtvi\r\n      }\r\n    }\r\n\r\n    verts.set(tps) // copy smoothed positions\r\n\r\n    if (inflate) {\r\n      computeVertexNormals(verts, faces, norms)\r\n      var nv3 = nv * 3\r\n\r\n      for (i3 = 0; i3 < nv3; i3 += 3) {\r\n        // if(verts[i].inout) ssign=1;\r\n        // else ssign=-1;\r\n\r\n        verts[ i3 ] += ssign * outwt * norms![ i3 ]\r\n        verts[ i3 + 1 ] += ssign * outwt * norms![ i3 + 1 ]\r\n        verts[ i3 + 2 ] += ssign * outwt * norms![ i3 + 2 ]\r\n      }\r\n    }\r\n  }\r\n}\r\nObject.assign(laplacianSmooth, {__deps: [ computeVertexNormals ]})\r\n\r\nfunction computeVertexNormals (position: Float32Array, index?: NumberArray, normal?: Float32Array) {\r\n  var i, il\r\n\r\n  if (normal === undefined) {\r\n    normal = new Float32Array(position.length)\r\n  } else {\r\n    // reset existing normals to zero\r\n    for (i = 0, il = normal.length; i < il; i++) {\r\n      normal[ i ] = 0\r\n    }\r\n  }\r\n\r\n  var a = new Float32Array(3)\r\n  var b = new Float32Array(3)\r\n  var c = new Float32Array(3)\r\n  var cb = new Float32Array(3)\r\n  var ab = new Float32Array(3)\r\n\r\n  if (index) {\r\n    // indexed elements\r\n    for (i = 0, il = index.length; i < il; i += 3) {\r\n      var ai = index[ i ] * 3\r\n      var bi = index[ i + 1 ] * 3\r\n      var ci = index[ i + 2 ] * 3\r\n\r\n      v3fromArray(a, position, ai)\r\n      v3fromArray(b, position, bi)\r\n      v3fromArray(c, position, ci)\r\n\r\n      v3sub(cb, c, b)\r\n      v3sub(ab, a, b)\r\n      v3cross(cb, cb, ab)\r\n\r\n      normal[ ai ] += cb[ 0 ]\r\n      normal[ ai + 1 ] += cb[ 1 ]\r\n      normal[ ai + 2 ] += cb[ 2 ]\r\n\r\n      normal[ bi ] += cb[ 0 ]\r\n      normal[ bi + 1 ] += cb[ 1 ]\r\n      normal[ bi + 2 ] += cb[ 2 ]\r\n\r\n      normal[ ci ] += cb[ 0 ]\r\n      normal[ ci + 1 ] += cb[ 1 ]\r\n      normal[ ci + 2 ] += cb[ 2 ]\r\n    }\r\n  } else {\r\n    // non-indexed elements (unconnected triangle soup)\r\n    for (i = 0, il = position.length; i < il; i += 9) {\r\n      v3fromArray(a, position, i)\r\n      v3fromArray(b, position, i + 3)\r\n      v3fromArray(c, position, i + 6)\r\n\r\n      v3sub(cb, c, b)\r\n      v3sub(ab, a, b)\r\n      v3cross(cb, cb, ab)\r\n\r\n      normal[ i ] = cb[ 0 ]\r\n      normal[ i + 1 ] = cb[ 1 ]\r\n      normal[ i + 2 ] = cb[ 2 ]\r\n\r\n      normal[ i + 3 ] = cb[ 0 ]\r\n      normal[ i + 4 ] = cb[ 1 ]\r\n      normal[ i + 5 ] = cb[ 2 ]\r\n\r\n      normal[ i + 6 ] = cb[ 0 ]\r\n      normal[ i + 7 ] = cb[ 1 ]\r\n      normal[ i + 8 ] = cb[ 2 ]\r\n    }\r\n  }\r\n\r\n  normalizeVector3array(normal)\r\n\r\n  return normal\r\n}\r\nObject.assign(computeVertexNormals, {__deps: [\r\n  v3sub, v3cross, v3fromArray, normalizeVector3array\r\n]})\r\n\r\nfunction getRadiusDict (radiusList: number[]) {\r\n  var radiusDict: {[k: number]: boolean} = {}\r\n  for (var i = 0, il = radiusList.length; i < il; ++i) {\r\n    radiusDict[ radiusList[ i ] ] = true\r\n  }\r\n  return radiusDict\r\n}\r\n\r\nfunction getSurfaceGrid (min: Float32Array, max: Float32Array, maxRadius: number, scaleFactor: number, extraMargin: number) {\r\n  // need margin to avoid boundary/round off effects\r\n  var margin = (1 / scaleFactor) * 3\r\n  margin += maxRadius\r\n\r\n  v3subScalar(min, min, extraMargin + margin)\r\n  v3addScalar(max, max, extraMargin + margin)\r\n\r\n  v3multiplyScalar(min, min, scaleFactor)\r\n  v3floor(min, min)\r\n  v3divideScalar(min, min, scaleFactor)\r\n\r\n  v3multiplyScalar(max, max, scaleFactor)\r\n  v3ceil(max, max)\r\n  v3divideScalar(max, max, scaleFactor)\r\n\r\n  var dim = new Float32Array(3)\r\n  v3sub(dim, max, min)\r\n  v3multiplyScalar(dim, dim, scaleFactor)\r\n  v3ceil(dim, dim)\r\n  v3addScalar(dim, dim, 1)\r\n\r\n  var maxSize = Math.pow(10, 6) * 256\r\n  var tmpSize = dim[ 0 ] * dim[ 1 ] * dim[ 2 ] * 3\r\n\r\n  if (maxSize <= tmpSize) {\r\n    scaleFactor *= Math.pow(maxSize / tmpSize, 1 / 3)\r\n\r\n    v3multiplyScalar(min, min, scaleFactor)\r\n    v3floor(min, min)\r\n    v3divideScalar(min, min, scaleFactor)\r\n\r\n    v3multiplyScalar(max, max, scaleFactor)\r\n    v3ceil(max, max)\r\n    v3divideScalar(max, max, scaleFactor)\r\n\r\n    v3sub(dim, max, min)\r\n    v3multiplyScalar(dim, dim, scaleFactor)\r\n    v3ceil(dim, dim)\r\n    v3addScalar(dim, dim, 1)\r\n  }\r\n\r\n  var tran = new Float32Array(min)\r\n  v3negate(tran, tran)\r\n\r\n  // coordinate transformation matrix\r\n  var matrix = m4new()\r\n  var mroty = m4new()\r\n  m4makeRotationY(mroty, degToRad(90))\r\n  m4multiply(matrix, matrix, mroty)\r\n\r\n  var mscale = m4new()\r\n  m4makeScale(\r\n    mscale,\r\n    -1 / scaleFactor,\r\n    1 / scaleFactor,\r\n    1 / scaleFactor\r\n  )\r\n  m4multiply(matrix, matrix, mscale)\r\n\r\n  var mtrans = m4new()\r\n  m4makeTranslation(\r\n    mtrans,\r\n    -scaleFactor * tran[2],\r\n    -scaleFactor * tran[1],\r\n    -scaleFactor * tran[0]\r\n  )\r\n  m4multiply(matrix, matrix, mtrans)\r\n\r\n  return {\r\n    dim: dim,\r\n    tran: tran,\r\n    matrix: matrix,\r\n    scaleFactor: scaleFactor\r\n  }\r\n}\r\nObject.assign(getSurfaceGrid, {__deps: [\r\n  degToRad,\r\n  v3subScalar, v3addScalar, v3divideScalar, v3multiplyScalar,\r\n  v3floor, v3ceil, v3sub, v3negate,\r\n  m4new, m4multiply, m4makeTranslation, m4makeScale, m4makeRotationY\r\n]})\r\n\r\nexport {\r\n  laplacianSmooth,\r\n  computeVertexNormals,\r\n  getRadiusDict,\r\n  getSurfaceGrid\r\n}\r\n","/**\r\n * @file Surface\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3, Box3, Geometry, BufferGeometry, Group, Color } from 'three'\r\n\r\nimport { Debug, Log, ColormakerRegistry } from '../globals'\r\nimport { getUintArray } from '../utils'\r\nimport { AtomPicker, SurfacePicker } from '../utils/picker'\r\nimport { uniformArray, uniformArray3, serialArray } from '../math/array-utils'\r\nimport Selection from '../selection/selection'\r\nimport { ColormakerParameters } from '../color/colormaker';\r\nimport { Structure, Volume } from '../ngl';\r\n\r\nexport interface SurfaceData {\r\n  position: Float32Array\r\n  index: Uint32Array|Uint16Array|undefined\r\n  normal: Float32Array\r\n  color: Float32Array\r\n  atomindex: Int32Array\r\n  contour: boolean\r\n}\r\n/**\r\n * Surface\r\n */\r\nclass Surface {\r\n  name: string\r\n  path: string\r\n  position: Float32Array\r\n  index: Uint32Array|Uint16Array|undefined\r\n  normal: Float32Array|undefined\r\n  color: Float32Array|undefined\r\n  atomindex: Int32Array|undefined\r\n  contour: boolean\r\n  center: Vector3\r\n  boundingBox: Box3\r\n  size: number\r\n  info: {\r\n    type?: string\r\n    probeRadius?: number\r\n    scaleFactor?: number\r\n    smooth?: number\r\n    cutoff?: number\r\n    isolevel?: number\r\n    volume?: Volume\r\n  }\r\n\r\n  /**\r\n   * @param {String} name - surface name\r\n   * @param {String} path - source path\r\n   * @param {Object} data - surface data\r\n   * @param {Float32Array} data.position - surface positions\r\n   * @param {Int32Array} data.index - surface indices\r\n   * @param {Float32Array} data.normal - surface normals\r\n   * @param {Float32Array} data.color - surface colors\r\n   * @param {Int32Array} data.atomindex - atom indices\r\n   * @param {boolean} data.contour - contour mode flag\r\n   */\r\n  constructor (name: string, path: string, data?: SurfaceData) {\r\n    this.name = name || ''\r\n    this.path = path || ''\r\n    this.info = {}\r\n\r\n    this.center = new Vector3()\r\n    this.boundingBox = new Box3()\r\n\r\n    if (data instanceof Geometry ||\r\n      data instanceof BufferGeometry ||\r\n      data instanceof Group\r\n    ) {\r\n      // to be removed\r\n      this.fromGeometry(data)\r\n    } else if (data) {\r\n      this.set(\r\n        data.position,\r\n        data.index,\r\n        data.normal,\r\n        data.color,\r\n        data.atomindex,\r\n        data.contour\r\n      )\r\n\r\n      this.boundingBox.setFromArray(data.position)\r\n      this.boundingBox.getCenter(this.center)\r\n    }\r\n  }\r\n\r\n  get type () { return 'Surface' }\r\n\r\n  /**\r\n   * set surface data\r\n   * @param {Float32Array} position - surface positions\r\n   * @param {Int32Array} index - surface indices\r\n   * @param {Float32Array} normal - surface normals\r\n   * @param {Float32Array} color - surface colors\r\n   * @param {Int32Array} atomindex - atom indices\r\n   * @param {boolean} contour - contour mode flag\r\n   * @return {undefined}\r\n   */\r\n  set (position: Float32Array,\r\n      index: Uint32Array|Uint16Array|undefined,\r\n      normal: Float32Array|undefined,\r\n      color: Float32Array|undefined,\r\n      atomindex: Int32Array|undefined,\r\n      contour: boolean = false) {\r\n    /**\r\n     * @type {Float32Array}\r\n     */\r\n    this.position = position\r\n    /**\r\n     * @type {Uint32Array|Uint16Array|undefined}\r\n     */\r\n    this.index = index\r\n    /**\r\n     * @type {Float32Array|undefined}\r\n     */\r\n    this.normal = normal\r\n    /**\r\n     * @type {Float32Array|undefined}\r\n     */\r\n    this.color = color\r\n    /**\r\n     * @type {Int32Array|undefined}\r\n     */\r\n    this.atomindex = atomindex\r\n\r\n    this.size = position.length / 3\r\n    this.contour = contour\r\n  }\r\n\r\n  fromGeometry (geometry: Geometry|BufferGeometry|Group) {\r\n    if (Debug) Log.time('GeometrySurface.fromGeometry')\r\n\r\n    let geo\r\n\r\n    if (geometry instanceof Geometry) {\r\n      geometry.computeVertexNormals(true)\r\n      geo = new BufferGeometry().fromGeometry(geometry)\r\n    } else if (geometry instanceof BufferGeometry) {\r\n      geo = geometry\r\n    } else {\r\n      geo = (geometry as any)[ 0 ]\r\n    }\r\n\r\n    if (!geo.boundingBox) geo.computeBoundingBox()\r\n\r\n    this.boundingBox.copy(geo.boundingBox)\r\n    this.boundingBox.getCenter(this.center)\r\n\r\n    let position, color, index, normal\r\n\r\n    if (geo instanceof BufferGeometry) {\r\n      const attr = geo.attributes\r\n      const an = (attr as any).normal ? (attr as any).normal.array : false\r\n\r\n      // assume there are no normals if the first is zero\r\n      if (!an || (an[ 0 ] === 0 && an[ 1 ] === 0 && an[ 2 ] === 0)) {\r\n        geo.computeVertexNormals()\r\n      }\r\n\r\n      position = (<any>attr).position.array\r\n      index = (<any>attr).index ? (<any>attr).index.array : null\r\n      normal = (<any>attr).normal.array\r\n    }\r\n\r\n    this.set(position, index, normal, color, undefined)\r\n\r\n    if (Debug) Log.timeEnd('GeometrySurface.setGeometry')\r\n  }\r\n\r\n  getPosition () {\r\n    return this.position\r\n  }\r\n\r\n  getColor (params: ColormakerParameters&{ scheme: string}) {\r\n    const p = params || {}\r\n    p.surface = this\r\n\r\n    const n = this.size\r\n    const array = new Float32Array(n * 3)\r\n    const colormaker = ColormakerRegistry.getScheme(p)\r\n\r\n    if (colormaker.volumeColor || p.scheme === 'random') {\r\n      for (let i = 0; i < n; ++i) {\r\n        colormaker.volumeColorToArray(i, array, i * 3)\r\n      }\r\n    } else if (colormaker.positionColor) {\r\n      const v = new Vector3()\r\n      const pos = this.position\r\n\r\n      for (let i = 0; i < n; ++i) {\r\n        var i3 = i * 3\r\n        v.set(pos[ i3 ], pos[ i3 + 1 ], pos[ i3 + 2 ])\r\n        colormaker.positionColorToArray(v, array, i3)\r\n      }\r\n    } else if (colormaker.atomColor && this.atomindex) {\r\n      const atomProxy = p.structure!.getAtomProxy()\r\n      const atomindex = this.atomindex\r\n\r\n      for (let i = 0; i < n; ++i) {\r\n        atomProxy.index = atomindex[ i ]\r\n        colormaker.atomColorToArray(atomProxy, array, i * 3)\r\n      }\r\n    } else {\r\n      const tc = new Color(p.value)\r\n      uniformArray3(n, tc.r, tc.g, tc.b, array)\r\n    }\r\n\r\n    return array\r\n  }\r\n\r\n  getPicking (structure?: Structure) {\r\n    if (this.atomindex && structure) {\r\n      return new AtomPicker(this.atomindex as any, structure)\r\n    } else {\r\n      return new SurfacePicker(serialArray(this.size), this)\r\n    }\r\n  }\r\n\r\n  getNormal () {\r\n    return this.normal\r\n  }\r\n\r\n  getSize (size: number, scale: number) {\r\n    return uniformArray(this.size, size * scale)\r\n  }\r\n\r\n  getIndex () {\r\n    return this.index\r\n  }\r\n\r\n  getFilteredIndex (sele: string, structure: Structure) {\r\n    if (sele && this.atomindex) {\r\n      const selection = new Selection(sele)\r\n      const atomSet = structure.getAtomSet(selection)\r\n      const filteredIndex = []\r\n\r\n      const atomindex = this.atomindex\r\n      const index = this.index\r\n      const n = index!.length\r\n      const elementSize = this.contour ? 2 : 3\r\n\r\n      let j = 0\r\n\r\n      for (let i = 0; i < n; i += elementSize) {\r\n        let include = true\r\n\r\n        for (let a = 0; a < elementSize; a++) {\r\n          const idx = index![ i + a ]\r\n          const ai = atomindex[ idx ]\r\n          if (!atomSet.get(ai)) {\r\n            include = false\r\n            break\r\n          }\r\n        }\r\n\r\n        if (!include) { continue }\r\n\r\n        for (let a = 0; a < elementSize; a++, j++) {\r\n          filteredIndex[ j ] = index![ i + a ]\r\n        }\r\n      }\r\n\r\n      return getUintArray(filteredIndex, this.position.length / 3)\r\n    } else {\r\n      return this.index\r\n    }\r\n  }\r\n\r\n  getAtomindex () {\r\n    return this.atomindex\r\n  }\r\n\r\n  dispose () {\r\n\r\n    //\r\n\r\n  }\r\n}\r\n\r\nexport default Surface\r\n","/**\r\n * @file Volume\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3, Box3, Matrix3, Matrix4 } from 'three'\r\n\r\nimport { WorkerRegistry, ColormakerRegistry } from '../globals'\r\nimport { defaults } from '../utils'\r\nimport WorkerPool from '../worker/worker-pool'\r\nimport { VolumePicker } from '../utils/picker'\r\nimport {\r\n  uniformArray, serialArray,\r\n  arrayMin, arrayMax, arraySum, arrayMean, arrayRms\r\n} from '../math/array-utils'\r\nimport MarchingCubes from './marching-cubes'\r\nimport { laplacianSmooth, computeVertexNormals } from './surface-utils'\r\nimport {\r\n  applyMatrix4toVector3array, applyMatrix3toVector3array\r\n} from '../math/vector-utils'\r\nimport { m3new, m3makeNormal } from '../math/matrix-utils'\r\nimport Surface from './surface'\r\nimport { NumberArray } from '../types';\r\nimport { ColormakerParameters } from '../color/colormaker';\r\n\r\nexport interface VolumeSurface {\r\n  new (data: NumberArray, nx: number, ny: number, nz: number, atomindex: NumberArray): void\r\n  getSurface: (isolevel: number, smooth: boolean|number, box: number[][]|undefined, matrix: Float32Array, contour: boolean, wrap?: boolean) => {\r\n    position: Float32Array\r\n    normal: undefined|Float32Array\r\n    index: Uint32Array|Uint16Array\r\n    atomindex: Int32Array|undefined\r\n    contour: boolean\r\n  }\r\n}\r\nexport function VolumeSurface (this: VolumeSurface,data: NumberArray, nx: number, ny: number, nz: number, atomindex: NumberArray) {\r\n  var mc = new (MarchingCubes as any)(data, nx, ny, nz, atomindex) as MarchingCubes\r\n\r\n  function getSurface (isolevel: number, smooth: boolean|number, box: number[][]|undefined, matrix: Float32Array, contour: boolean, wrap: boolean = false) {\r\n    const sd = mc.triangulate(isolevel, smooth as boolean, box, contour, wrap)\r\n    if (smooth && !contour) {\r\n      laplacianSmooth(sd.position, sd.index as any, smooth as number, true)\r\n      sd.normal = computeVertexNormals(sd.position, sd.index as any)\r\n    }\r\n    if (matrix) {\r\n      applyMatrix4toVector3array(matrix, sd.position)\r\n      if (sd.normal) {\r\n        const normalMatrix = m3new()\r\n        m3makeNormal(normalMatrix, matrix)\r\n        applyMatrix3toVector3array(normalMatrix, sd.normal)\r\n      }\r\n    }\r\n    return sd\r\n  }\r\n\r\n  this.getSurface = getSurface\r\n}\r\nObject.assign(VolumeSurface, {__deps: [\r\n  laplacianSmooth, computeVertexNormals, MarchingCubes,\r\n  applyMatrix4toVector3array, applyMatrix3toVector3array,\r\n  m3new, m3makeNormal\r\n]})\r\n\r\nWorkerRegistry.add('surf', function func (e: any, callback: (data: any, transferList: any) => void) {\r\n  const a = e.data.args\r\n  const p = e.data.params\r\n  if (a) {\r\n    /* global self */\r\n    (self as any).volsurf = new (VolumeSurface as any)(a[0], a[1], a[2], a[3], a[4]) as VolumeSurface\r\n  }\r\n  if (p) {\r\n    const sd = ((self as any).volsurf as VolumeSurface).getSurface(\r\n      p.isolevel, p.smooth, p.box, p.matrix, p.contour, p.wrap\r\n    )\r\n    const transferList = [ sd.position.buffer, sd.index.buffer ]\r\n    if (sd.normal) transferList.push(sd.normal.buffer)\r\n    if (sd.atomindex) transferList.push(sd.atomindex.buffer)\r\n    const data = {\r\n      sd: sd,\r\n      p: p\r\n    }\r\n    callback(data, transferList)\r\n  }\r\n}, [ VolumeSurface ])\r\n\r\nexport type VolumeSize = 'value'|'abs-value'|'value-min'|'deviation'\r\n/**\r\n * Volume\r\n */\r\nclass Volume {\r\n  name: string\r\n  path: string\r\n\r\n  matrix: Matrix4\r\n  normalMatrix: Matrix3\r\n  inverseMatrix: Matrix4\r\n  center: Vector3\r\n  boundingBox: Box3\r\n\r\n  nx: number\r\n  ny: number\r\n  nz: number\r\n  data: Float32Array\r\n\r\n  worker: Worker\r\n  workerPool: WorkerPool\r\n  _position: Float32Array\r\n  _min: number|undefined\r\n  _max: number|undefined\r\n  _mean: number|undefined\r\n  _rms: number|undefined\r\n  _sum: number|undefined\r\n  __box: Box3|undefined\r\n\r\n  atomindex: Int32Array|undefined\r\n  volsurf: VolumeSurface|undefined\r\n  header: any\r\n  /**\r\n   * Make Volume instance\r\n   * @param {String} name - volume name\r\n   * @param {String} path - source path\r\n   * @param {Float32array} data - volume 3d grid\r\n   * @param {Integer} nx - x dimension of the 3d volume\r\n   * @param {Integer} ny - y dimension of the 3d volume\r\n   * @param {Integer} nz - z dimension of the 3d volume\r\n   * @param {Int32Array} atomindex - atom indices corresponding to the cells in the 3d grid\r\n   */\r\n  constructor (name: string, path: string, data?: Float32Array, nx?: number, ny?: number, nz?: number, atomindex?: Int32Array) {\r\n    this.name = name\r\n    this.path = path\r\n\r\n    this.matrix = new Matrix4()\r\n    this.normalMatrix = new Matrix3()\r\n    this.inverseMatrix = new Matrix4()\r\n    this.center = new Vector3()\r\n    this.boundingBox = new Box3()\r\n\r\n    this.setData(data, nx, ny, nz, atomindex)\r\n  }\r\n\r\n  get type () { return 'Volume' }\r\n\r\n  /**\r\n   * set volume data\r\n   * @param {Float32array} data - volume 3d grid\r\n   * @param {Integer} nx - x dimension of the 3d volume\r\n   * @param {Integer} ny - y dimension of the 3d volume\r\n   * @param {Integer} nz - z dimension of the 3d volume\r\n   * @param {Int32Array} atomindex - atom indices corresponding to the cells in the 3d grid\r\n   * @return {undefined}\r\n   */\r\n  setData (data?: Float32Array, nx?: number, ny?: number, nz?: number, atomindex?: Int32Array) {\r\n    this.nx = nx || 1\r\n    this.ny = ny || 1\r\n    this.nz = nz || 1\r\n\r\n    this.data = data || new Float32Array(1)\r\n    this.setAtomindex(atomindex)\r\n\r\n    this._position = new Float32Array()\r\n\r\n    delete this._min\r\n    delete this._max\r\n    delete this._mean\r\n    delete this._rms\r\n\r\n    if (this.worker) this.worker.terminate()\r\n  }\r\n\r\n  /**\r\n   * Set statistics, which can be different from the data in this volume,\r\n   * if this volume is a slice of a bigger volume\r\n   * @param {Number|undefined} min - minimum value of the whole data set\r\n   * @param {Number|undefined} max - maximum value of the whole data set\r\n   * @param {Number|undefined} mean - average value of the whole data set\r\n   * @param {Number|undefined} rms - sigma value of the whole data set\r\n   */\r\n  setStats (min: number|undefined, max: number|undefined, mean: number|undefined, rms: number|undefined) {\r\n    this._min = min\r\n    this._max = max\r\n    this._mean = mean\r\n    this._rms = rms\r\n  }\r\n\r\n  /**\r\n   * set transformation matrix\r\n   * @param {Matrix4} matrix - 4x4 transformation matrix\r\n   * @return {undefined}\r\n   */\r\n  setMatrix (matrix: Matrix4) {\r\n    this.matrix.copy(matrix)\r\n\r\n    const bb = this.boundingBox\r\n    const v = this.center // temporary re-purposing\r\n\r\n    const x = this.nx - 1\r\n    const y = this.ny - 1\r\n    const z = this.nz - 1\r\n\r\n    bb.makeEmpty()\r\n\r\n    bb.expandByPoint(v.set(x, y, z))\r\n    bb.expandByPoint(v.set(x, y, 0))\r\n    bb.expandByPoint(v.set(x, 0, z))\r\n    bb.expandByPoint(v.set(x, 0, 0))\r\n    bb.expandByPoint(v.set(0, y, z))\r\n    bb.expandByPoint(v.set(0, 0, z))\r\n    bb.expandByPoint(v.set(0, y, 0))\r\n    bb.expandByPoint(v.set(0, 0, 0))\r\n\r\n    bb.applyMatrix4(this.matrix)\r\n    bb.getCenter(this.center)\r\n\r\n    // make normal matrix\r\n\r\n    const me = this.matrix.elements\r\n    const r0 = new Vector3(me[0], me[1], me[2])\r\n    const r1 = new Vector3(me[4], me[5], me[6])\r\n    const r2 = new Vector3(me[8], me[9], me[10])\r\n    const cp = new Vector3()\r\n    //        [ r0 ]       [ r1 x r2 ]\r\n    // M3x3 = [ r1 ]   N = [ r2 x r0 ]\r\n    //        [ r2 ]       [ r0 x r1 ]\r\n    const ne = this.normalMatrix.elements\r\n    cp.crossVectors(r1, r2)\r\n    ne[ 0 ] = cp.x\r\n    ne[ 1 ] = cp.y\r\n    ne[ 2 ] = cp.z\r\n    cp.crossVectors(r2, r0)\r\n    ne[ 3 ] = cp.x\r\n    ne[ 4 ] = cp.y\r\n    ne[ 5 ] = cp.z\r\n    cp.crossVectors(r0, r1)\r\n    ne[ 6 ] = cp.x\r\n    ne[ 7 ] = cp.y\r\n    ne[ 8 ] = cp.z\r\n\r\n    this.inverseMatrix.getInverse(this.matrix)\r\n  }\r\n\r\n  /**\r\n   * set atom indices\r\n   * @param {Int32Array} atomindex - atom indices corresponding to the cells in the 3d grid\r\n   * @return {undefined}\r\n     */\r\n  setAtomindex (atomindex?: Int32Array) {\r\n    this.atomindex = atomindex\r\n  }\r\n\r\n  getBox (center: Vector3, size: number, target: Box3) {\r\n    if (!target) target = new Box3()\r\n\r\n    target.set(center, center)\r\n    target.expandByScalar(size)\r\n    target.applyMatrix4(this.inverseMatrix)\r\n\r\n    target.min.round()\r\n    target.max.round()\r\n\r\n    return target\r\n  }\r\n\r\n  _getBox (center: Vector3|undefined, size: number) {\r\n    if (!center || !size) return\r\n\r\n    if (!this.__box) this.__box = new Box3()\r\n    const box = this.getBox(center, size, this.__box)\r\n    return [ box.min.toArray(), box.max.toArray() ]\r\n  }\r\n\r\n  _makeSurface (sd: any, isolevel: number, smooth: number) {\r\n    const name = this.name + '@' + isolevel.toPrecision(2)\r\n    const surface = new Surface(name, '', sd)\r\n    surface.info.isolevel = isolevel\r\n    surface.info.smooth = smooth\r\n    surface.info.volume = this\r\n\r\n    return surface\r\n  }\r\n\r\n  getSurface (isolevel: number, smooth: number, center: Vector3, size: number, contour: boolean, wrap: boolean = false) {\r\n    isolevel = isNaN(isolevel) ? this.getValueForSigma(2) : isolevel\r\n    smooth = defaults(smooth, 0)\r\n\r\n    //\r\n\r\n    if (this.volsurf === undefined) {\r\n      this.volsurf = new (VolumeSurface as any)(\r\n        this.data, this.nx, this.ny, this.nz, this.atomindex\r\n      ) as VolumeSurface\r\n    }\r\n\r\n    const box = this._getBox(center, size)\r\n    const sd = this.volsurf.getSurface(\r\n      isolevel, smooth, box!, this.matrix.elements as unknown as Float32Array, contour, wrap\r\n    )\r\n\r\n    return this._makeSurface(sd, isolevel, smooth)\r\n  }\r\n\r\n  getSurfaceWorker (isolevel: number, smooth: number, center: Vector3, size: number, contour: boolean, wrap: boolean, callback: (s: Surface) => void) {\r\n    isolevel = isNaN(isolevel) ? this.getValueForSigma(2) : isolevel\r\n    smooth = smooth || 0\r\n\r\n    //\r\n\r\n    if (window.hasOwnProperty('Worker')) {\r\n      if (this.workerPool === undefined) {\r\n        this.workerPool = new WorkerPool('surf', 2)\r\n      }\r\n\r\n      const msg = {}\r\n      const worker = this.workerPool.getNextWorker()\r\n\r\n      if (worker!.postCount === 0) {\r\n        Object.assign(msg, {\r\n          args: [\r\n            this.data, this.nx, this.ny, this.nz, this.atomindex\r\n          ]\r\n        })\r\n      }\r\n\r\n      Object.assign(msg, {\r\n        params: {\r\n          isolevel: isolevel,\r\n          smooth: smooth,\r\n          box: this._getBox(center, size),\r\n          matrix: this.matrix.elements,\r\n          contour: contour,\r\n          wrap: wrap\r\n        }\r\n      })\r\n\r\n      worker!.post(msg, undefined,\r\n        (e: any) => {\r\n          const sd = e.data.sd\r\n          const p = e.data.p\r\n          callback(this._makeSurface(sd, p.isolevel, p.smooth))\r\n        },\r\n        (e : string) => {\r\n          console.warn(\r\n            'Volume.getSurfaceWorker error - trying without worker', e\r\n          )\r\n          const surface = this.getSurface(isolevel, smooth, center, size, contour, wrap)\r\n          callback(surface)\r\n        }\r\n      )\r\n    } else {\r\n      const surface = this.getSurface(isolevel, smooth, center, size, contour, wrap)\r\n      callback(surface)\r\n    }\r\n  }\r\n\r\n  getValueForSigma (sigma: number) {\r\n    return this.mean + defaults(sigma, 2) * this.rms\r\n  }\r\n\r\n  getSigmaForValue (value: number) {\r\n    return (defaults(value, 0) - this.mean) / this.rms\r\n  }\r\n\r\n  get position () {\r\n    if (!this._position) {\r\n      const nz = this.nz\r\n      const ny = this.ny\r\n      const nx = this.nx\r\n      const position = new Float32Array(nx * ny * nz * 3)\r\n\r\n      let p = 0\r\n      for (let z = 0; z < nz; ++z) {\r\n        for (let y = 0; y < ny; ++y) {\r\n          for (let x = 0; x < nx; ++x) {\r\n            position[ p + 0 ] = x\r\n            position[ p + 1 ] = y\r\n            position[ p + 2 ] = z\r\n            p += 3\r\n          }\r\n        }\r\n      }\r\n\r\n      applyMatrix4toVector3array(this.matrix.elements as unknown as Float32Array, position)\r\n      this._position = position\r\n    }\r\n\r\n    return this._position\r\n  }\r\n\r\n  getDataAtomindex () {\r\n    return this.atomindex\r\n  }\r\n\r\n  getDataPosition () {\r\n    return this.position\r\n  }\r\n\r\n  getDataColor (params: ColormakerParameters & {scheme: string}) {\r\n    const p = params || {}\r\n    p.volume = this\r\n    p.scale = p.scale || 'Spectral'\r\n    p.domain = p.domain || [ this.min, this.max ]\r\n\r\n    const colormaker = ColormakerRegistry.getScheme(p)\r\n\r\n    const n = this.position.length / 3\r\n    const array = new Float32Array(n * 3)\r\n\r\n    // var atoms = p.structure.atoms;\r\n    // var atomindex = this.atomindex;\r\n\r\n    for (let i = 0; i < n; ++i) {\r\n      colormaker.volumeColorToArray(i, array, i * 3)\r\n      // a = atoms[ atomindex[ i ] ];\r\n      // if( a ) colormaker.atomColorToArray( a, array, i * 3 );\r\n    }\r\n\r\n    return array\r\n  }\r\n\r\n  getDataPicking () {\r\n    const picking = serialArray(this.position.length / 3)\r\n    return new VolumePicker(picking, this)\r\n  }\r\n\r\n  getDataSize (size: VolumeSize|number, scale: number) {\r\n    const data = this.data\r\n    const n = this.position.length / 3\r\n    let array\r\n\r\n    switch (size) {\r\n      case 'value':\r\n        array = new Float32Array(data)\r\n        break\r\n\r\n      case 'abs-value':\r\n        array = new Float32Array(data)\r\n        for (let i = 0; i < n; ++i) {\r\n          array[ i ] = Math.abs(array[ i ])\r\n        }\r\n        break\r\n\r\n      case 'value-min': {\r\n        array = new Float32Array(data)\r\n        const min = this.min\r\n        for (let i = 0; i < n; ++i) {\r\n          array[ i ] -= min\r\n        }\r\n        break\r\n      }\r\n\r\n      case 'deviation':\r\n        array = new Float32Array(data)\r\n        break\r\n\r\n      default:\r\n        array = uniformArray(n, size)\r\n        break\r\n    }\r\n\r\n    if (scale !== 1.0) {\r\n      for (let i = 0; i < n; ++i) {\r\n        array[ i ] *= scale\r\n      }\r\n    }\r\n\r\n    return array\r\n  }\r\n\r\n  get min () {\r\n    if (this._min === undefined) {\r\n      this._min = arrayMin(this.data)\r\n    }\r\n    return this._min\r\n  }\r\n\r\n  get max () {\r\n    if (this._max === undefined) {\r\n      this._max = arrayMax(this.data)\r\n    }\r\n    return this._max\r\n  }\r\n\r\n  get sum () {\r\n    if (this._sum === undefined) {\r\n      this._sum = arraySum(this.data)\r\n    }\r\n    return this._sum\r\n  }\r\n\r\n  get mean () {\r\n    if (this._mean === undefined) {\r\n      this._mean = arrayMean(this.data)\r\n    }\r\n    return this._mean\r\n  }\r\n\r\n  get rms () {\r\n    if (this._rms === undefined) {\r\n      this._rms = arrayRms(this.data)\r\n    }\r\n    return this._rms\r\n  }\r\n\r\n  clone () {\r\n    const vol = new Volume(\r\n      this.name,\r\n      this.path,\r\n\r\n      this.data,\r\n\r\n      this.nx,\r\n      this.ny,\r\n      this.nz,\r\n\r\n      this.atomindex\r\n    )\r\n\r\n    vol.matrix.copy(this.matrix)\r\n    vol.header = Object.assign({}, this.header)\r\n\r\n    return vol\r\n  }\r\n\r\n  dispose () {\r\n    if (this.workerPool) this.workerPool.terminate()\r\n  }\r\n}\r\n\r\nexport default Volume\r\n","/**\r\n * @file Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport {\r\n  Color, Vector3, Matrix4,\r\n  FrontSide, BackSide, DoubleSide,\r\n  // VertexColors,\r\n  NoBlending,\r\n  BufferGeometry, BufferAttribute,\r\n  UniformsUtils, UniformsLib, Uniform,\r\n  Group, LineSegments, Points, Mesh, Object3D,\r\n  ShaderMaterial\r\n} from 'three'\r\n\r\nimport { Log } from '../globals'\r\nimport { createParams, getTypedArray, getUintArray } from '../utils'\r\nimport { GenericColor, NumberArray } from '../types'\r\nimport { getShader, ShaderDefines } from '../shader/shader-utils'\r\nimport { serialArray } from '../math/array-utils'\r\nimport { Picker } from '../utils/picker'\r\n\r\nexport type BufferSide = 'front'|'back'|'double'\r\n\r\nfunction getThreeSide (side: BufferSide) {\r\n  if (side === 'front') {\r\n    return FrontSide\r\n  } else if (side === 'back') {\r\n    return BackSide\r\n  } else if (side === 'double') {\r\n    return DoubleSide\r\n  } else {\r\n    return DoubleSide\r\n  }\r\n}\r\n\r\nconst itemSize = {\r\n  'f': 1, 'v2': 2, 'v3': 3, 'c': 3\r\n}\r\n\r\nfunction setObjectMatrix (object: Object3D, matrix: Matrix4) {\r\n  object.matrix.copy(matrix)\r\n  object.matrix.decompose(object.position, object.quaternion, object.scale)\r\n  object.matrixWorldNeedsUpdate = true\r\n}\r\n\r\nexport type BufferTypes = 'picking'|'background'\r\nexport type BufferMaterials = 'material'|'wireframeMaterial'|'pickingMaterial'\r\n\r\nexport interface _BufferAttribute {\r\n  type: 'f'|'v2'|'v3'|'c'\r\n  value?: NumberArray\r\n}\r\n\r\nexport type Uniforms = { [k: string]: Uniform|{ value: any } }\r\n\r\nexport const BufferDefaultParameters = {\r\n  opaqueBack: false,\r\n  side: 'double' as BufferSide,  // which triangle sides to render\r\n  opacity: 1.0,  // translucency: 1 is fully opaque, 0 is fully transparent\r\n  depthWrite: true,\r\n  clipNear: 0, // position of camera near/front clipping plane in percent of scene bounding box\r\n  clipRadius: 0,\r\n  clipCenter: new Vector3(),\r\n  flatShaded: false,  // render flat shaded\r\n  wireframe: false,  // render as wireframe\r\n  roughness: 0.4,  // how rough the material is, between 0 and 1\r\n  metalness: 0.0,  // how metallic the material is, between 0 and 1\r\n  diffuse: 0xffffff,  // diffuse color for lighting\r\n  diffuseInterior: false,\r\n  useInteriorColor: false,  // render back-side with interior color\r\n  interiorColor: 0xdddddd,  // interior color\r\n  interiorDarkening: 0,  // interior darkening factor\r\n  forceTransparent: false,  // force the material to allow transparency\r\n  matrix: new Matrix4(),  // additional transformation matrix\r\n  disablePicking: false,  // disable picking\r\n  sortParticles: false,\r\n  background: false\r\n}\r\nexport type BufferParameters = Omit<typeof BufferDefaultParameters, 'diffuse'|'interiorColor'> & { diffuse: GenericColor; interiorColor: GenericColor }\r\n\r\nexport const BufferParameterTypes = {\r\n  opaqueBack: { updateShader: true },\r\n  side: { updateShader: true, property: true },\r\n  opacity: { uniform: true },\r\n  depthWrite: { property: true },\r\n  clipNear: { updateShader: true, property: true },\r\n  clipRadius: { updateShader: true, uniform: true },\r\n  clipCenter: { uniform: true },\r\n  flatShaded: { updateShader: true },\r\n  background: { updateShader: true },\r\n  wireframe: { updateVisibility: true },\r\n  roughness: { uniform: true },\r\n  metalness: { uniform: true },\r\n  diffuse: { uniform: true },\r\n  diffuseInterior: { updateShader: true },\r\n  useInteriorColor: { updateShader: true },\r\n  interiorColor: { uniform: true },\r\n  interiorDarkening: { uniform: true },\r\n  matrix: {}\r\n}\r\n\r\nexport interface BufferData {\r\n  position?: Float32Array\r\n  position1?: Float32Array  // TODO\r\n  color?: Float32Array\r\n  index?: Uint32Array|Uint16Array\r\n  normal?: Float32Array\r\n\r\n  picking?: Picker\r\n  primitiveId?: Float32Array\r\n}\r\n\r\n/**\r\n * Buffer class. Base class for buffers.\r\n * @interface\r\n */\r\nclass Buffer {\r\n  parameterTypes = BufferParameterTypes\r\n  get defaultParameters() { return BufferDefaultParameters }\r\n  parameters: BufferParameters\r\n  uniforms: Uniforms\r\n  pickingUniforms: Uniforms\r\n\r\n  private _positionDataSize: number\r\n\r\n  geometry = new BufferGeometry()\r\n  indexVersion = 0\r\n  wireframeIndexVersion = -1\r\n  group = new Group()\r\n  wireframeGroup = new Group()\r\n  pickingGroup = new Group()\r\n\r\n  vertexShader = ''\r\n  fragmentShader = ''\r\n  isImpostor = false\r\n  isText = false\r\n  isSurface = false\r\n  isPoint = false\r\n  isLine = false\r\n  dynamic = true\r\n  visible = true\r\n\r\n  picking?: Picker\r\n\r\n  material: ShaderMaterial\r\n  wireframeMaterial: ShaderMaterial\r\n  pickingMaterial: ShaderMaterial\r\n\r\n  wireframeIndex?: Uint32Array|Uint16Array\r\n  wireframeIndexCount = 0\r\n  wireframeGeometry?: BufferGeometry\r\n\r\n  /**\r\n   * @param {Object} data - attribute object\r\n   * @param {Float32Array} data.position - positions\r\n   * @param {Float32Array} data.color - colors\r\n   * @param {Uint32Array|Uint16Array} data.index - triangle indices\r\n   * @param {Picker} [data.picking] - picking ids\r\n   * @param {BufferParameters} params - parameters object\r\n   */\r\n  constructor (data: BufferData, params: Partial<BufferParameters> = {}) {\r\n    this.parameters = createParams(params, this.defaultParameters)\r\n\r\n    this.uniforms = UniformsUtils.merge([\r\n      UniformsLib.common,\r\n      {\r\n        fogColor: { value: new Color(0x000000) },\r\n        fogNear: { value: 0.0 },\r\n        fogFar: { value: 0.0 },\r\n        opacity: { value: this.parameters.opacity },\r\n        clipNear: { value: 0.0 },\r\n        clipRadius: { value: this.parameters.clipRadius },\r\n        clipCenter: { value: this.parameters.clipCenter }\r\n      },\r\n      {\r\n        emissive: { value: new Color(0x000000) },\r\n        roughness: { value: this.parameters.roughness },\r\n        metalness: { value: this.parameters.metalness },\r\n        interiorColor: { value: new Color(this.parameters.interiorColor) },\r\n        interiorDarkening: { value: this.parameters.interiorDarkening },\r\n      },\r\n      UniformsLib.lights\r\n    ])\r\n\r\n    this.uniforms.diffuse.value.set(this.parameters.diffuse)\r\n\r\n    this.pickingUniforms = {\r\n      clipNear: { value: 0.0 },\r\n      objectId: { value: 0 },\r\n      opacity: { value: this.parameters.opacity }\r\n    }\r\n\r\n    //\r\n\r\n    const position = data.position || data.position1\r\n    this._positionDataSize = position ? position.length / 3 : 0\r\n\r\n    if (!data.primitiveId) {\r\n      data.primitiveId = serialArray(this._positionDataSize)\r\n    }\r\n\r\n    this.addAttributes({\r\n      position: { type: 'v3', value: data.position },\r\n      color: { type: 'c', value: data.color },\r\n      primitiveId: { type: 'f', value: data.primitiveId }\r\n    })\r\n\r\n    if (params.matrix) {\r\n      this.matrix = params.matrix\r\n    }\r\n\r\n    if (data.index) {\r\n      this.initIndex(data.index)\r\n    }\r\n    this.picking = data.picking\r\n\r\n    this.makeWireframeGeometry()\r\n  }\r\n\r\n  set matrix (m) {\r\n    this.setMatrix(m)\r\n  }\r\n  get matrix () {\r\n    return this.group.matrix.clone()\r\n  }\r\n\r\n  get transparent () {\r\n    return this.parameters.opacity < 1 || this.parameters.forceTransparent\r\n  }\r\n\r\n  get size () {\r\n    return this._positionDataSize\r\n  }\r\n\r\n  get attributeSize () {\r\n    return this.size\r\n  }\r\n\r\n  get pickable () {\r\n    return !!this.picking && !this.parameters.disablePicking\r\n  }\r\n\r\n  setMatrix (m: Matrix4) {\r\n    setObjectMatrix(this.group, m)\r\n    setObjectMatrix(this.wireframeGroup, m)\r\n    setObjectMatrix(this.pickingGroup, m)\r\n  }\r\n\r\n  initIndex (index: Uint32Array|Uint16Array) {\r\n    this.geometry.setIndex(\r\n      new BufferAttribute(index, 1)\r\n    )\r\n    const nindex = this.geometry.getIndex();\r\n    if (!nindex) { Log.error('Index is null'); return; }\r\n    nindex.setUsage(this.dynamic ? WebGLRenderingContext.DYNAMIC_DRAW : 0)\r\n  }\r\n\r\n  makeMaterial () {\r\n    const side = getThreeSide(this.parameters.side)\r\n\r\n    const m = new ShaderMaterial({\r\n      uniforms: this.uniforms,\r\n      vertexShader: '',\r\n      fragmentShader: '',\r\n      depthTest: true,\r\n      transparent: this.transparent,\r\n      depthWrite: this.parameters.depthWrite,\r\n      lights: true,\r\n      fog: true,\r\n      side: side\r\n    })\r\n    m.vertexColors = true\r\n    m.extensions.derivatives = true\r\n    m.extensions.fragDepth = this.isImpostor\r\n\r\n    const wm = new ShaderMaterial({\r\n      uniforms: this.uniforms,\r\n      vertexShader: '',\r\n      fragmentShader: '',\r\n      depthTest: true,\r\n      transparent: this.transparent,\r\n      depthWrite: this.parameters.depthWrite,\r\n      lights: false,\r\n      fog: true,\r\n      side: side\r\n    })\r\n    wm.vertexColors = true\r\n\r\n    const pm = new ShaderMaterial({\r\n      uniforms: this.pickingUniforms,\r\n      vertexShader: '',\r\n      fragmentShader: '',\r\n      depthTest: true,\r\n      transparent: false,\r\n      depthWrite: this.parameters.depthWrite,\r\n      lights: false,\r\n      fog: false,\r\n      side: side,\r\n      blending: NoBlending\r\n    })\r\n    pm.vertexColors = true\r\n    pm.extensions.fragDepth = this.isImpostor\r\n\r\n    ;(m as any).clipNear = this.parameters.clipNear\r\n    ;(wm as any).clipNear = this.parameters.clipNear\r\n    ;(pm as any).clipNear = this.parameters.clipNear\r\n\r\n    this.material = m\r\n    this.wireframeMaterial = wm\r\n    this.pickingMaterial = pm\r\n\r\n    // also sets vertexShader/fragmentShader\r\n    this.updateShader()\r\n  }\r\n\r\n  makeWireframeGeometry () {\r\n    this.makeWireframeIndex()\r\n\r\n    const geometry = this.geometry\r\n    const wireframeIndex = this.wireframeIndex\r\n    const wireframeGeometry = new BufferGeometry()\r\n\r\n    wireframeGeometry.attributes = geometry.attributes\r\n    if (wireframeIndex) {\r\n      wireframeGeometry.setIndex(\r\n        new BufferAttribute(wireframeIndex, 1).setUsage(this.dynamic ? WebGLRenderingContext.DYNAMIC_DRAW : 0)\r\n      )\r\n      wireframeGeometry.setDrawRange(0, this.wireframeIndexCount)\r\n    }\r\n\r\n    this.wireframeGeometry = wireframeGeometry\r\n  }\r\n\r\n  makeWireframeIndex () {\r\n    const edges: number[][] = []\r\n\r\n    function checkEdge (a: number, b: number) {\r\n      if (a > b) {\r\n        const tmp = a\r\n        a = b\r\n        b = tmp\r\n      }\r\n\r\n      const list = edges[ a ]\r\n\r\n      if (list === undefined) {\r\n        edges[ a ] = [ b ]\r\n        return true\r\n      } else if (!list.includes(b)) {\r\n        list.push(b)\r\n        return true\r\n      }\r\n\r\n      return false\r\n    }\r\n\r\n    const geometry = this.geometry\r\n    const index = geometry.index\r\n\r\n    if (!this.parameters.wireframe) {\r\n      this.wireframeIndex = new Uint16Array(0)\r\n      this.wireframeIndexCount = 0\r\n    } else if (index) {\r\n      const array = index.array\r\n      let n = array.length\r\n      if (geometry.drawRange.count !== Infinity) {\r\n        n = geometry.drawRange.count\r\n      }\r\n      let wireframeIndex\r\n      if (this.wireframeIndex && this.wireframeIndex.length > n * 2) {\r\n        wireframeIndex = this.wireframeIndex\r\n      } else {\r\n        const count = (geometry.attributes as any).position.count  // TODO\r\n        wireframeIndex = getUintArray(n * 2, count)\r\n      }\r\n\r\n      let j = 0\r\n      edges.length = 0\r\n\r\n      for (let i = 0; i < n; i += 3) {\r\n        const a = array[ i + 0 ]\r\n        const b = array[ i + 1 ]\r\n        const c = array[ i + 2 ]\r\n\r\n        if (checkEdge(a, b)) {\r\n          wireframeIndex[ j + 0 ] = a\r\n          wireframeIndex[ j + 1 ] = b\r\n          j += 2\r\n        }\r\n        if (checkEdge(b, c)) {\r\n          wireframeIndex[ j + 0 ] = b\r\n          wireframeIndex[ j + 1 ] = c\r\n          j += 2\r\n        }\r\n        if (checkEdge(c, a)) {\r\n          wireframeIndex[ j + 0 ] = c\r\n          wireframeIndex[ j + 1 ] = a\r\n          j += 2\r\n        }\r\n      }\r\n\r\n      this.wireframeIndex = wireframeIndex\r\n      this.wireframeIndexCount = j\r\n      this.wireframeIndexVersion = this.indexVersion\r\n    } else {\r\n      const n = (geometry.attributes as any).position.count  // TODO\r\n\r\n      let wireframeIndex\r\n      if (this.wireframeIndex && this.wireframeIndex.length > n * 2) {\r\n        wireframeIndex = this.wireframeIndex\r\n      } else {\r\n        wireframeIndex = getUintArray(n * 2, n)\r\n      }\r\n\r\n      for (let i = 0, j = 0; i < n; i += 3) {\r\n        wireframeIndex[ j + 0 ] = i\r\n        wireframeIndex[ j + 1 ] = i + 1\r\n        wireframeIndex[ j + 2 ] = i + 1\r\n        wireframeIndex[ j + 3 ] = i + 2\r\n        wireframeIndex[ j + 4 ] = i + 2\r\n        wireframeIndex[ j + 5 ] = i\r\n\r\n        j += 6\r\n      }\r\n\r\n      this.wireframeIndex = wireframeIndex\r\n      this.wireframeIndexCount = n * 2\r\n      this.wireframeIndexVersion = this.indexVersion\r\n    }\r\n  }\r\n\r\n  updateWireframeIndex () {\r\n    if (!this.wireframeGeometry || !this.wireframeIndex) return\r\n\r\n    this.wireframeGeometry.setDrawRange(0, Infinity)\r\n    if (this.wireframeIndexVersion < this.indexVersion) this.makeWireframeIndex()\r\n\r\n    if (this.wireframeGeometry.index &&\r\n        this.wireframeIndex.length > this.wireframeGeometry.index.array.length) {\r\n      this.wireframeGeometry.setIndex(\r\n        new BufferAttribute(this.wireframeIndex, 1).setUsage(this.dynamic ? WebGLRenderingContext.DYNAMIC_DRAW : 0)\r\n      )\r\n    } else {\r\n      const index = this.wireframeGeometry.getIndex()\r\n      if (!index) { Log.error('Index is null'); return; }\r\n      index.set(this.wireframeIndex)\r\n      index.needsUpdate = this.wireframeIndexCount > 0\r\n      index.updateRange.count = this.wireframeIndexCount\r\n    }\r\n\r\n    this.wireframeGeometry.setDrawRange(0, this.wireframeIndexCount)\r\n  }\r\n\r\n  getRenderOrder () {\r\n    let renderOrder = 0\r\n\r\n    if (this.isText) {\r\n      renderOrder = 1\r\n    } else if (this.transparent) {\r\n      if (this.isSurface) {\r\n        renderOrder = 3\r\n      } else {\r\n        renderOrder = 2\r\n      }\r\n    }\r\n\r\n    return renderOrder\r\n  }\r\n\r\n  _getMesh (materialName: BufferMaterials) {\r\n    if (!this.material) this.makeMaterial()\r\n\r\n    const g = this.geometry\r\n    const m = this[ materialName ]\r\n\r\n    let mesh\r\n\r\n    if (this.isLine) {\r\n      mesh = new LineSegments(g, m)\r\n    } else if (this.isPoint) {\r\n      mesh = new Points(g, m)\r\n    } else {\r\n      mesh = new Mesh(g, m)\r\n    }\r\n\r\n    mesh.frustumCulled = false\r\n    mesh.renderOrder = this.getRenderOrder()\r\n\r\n    return mesh\r\n  }\r\n\r\n  getMesh () {\r\n    return this._getMesh('material')\r\n  }\r\n\r\n  getWireframeMesh () {\r\n    let mesh\r\n\r\n    if (!this.material) this.makeMaterial()\r\n    if (!this.wireframeGeometry) this.makeWireframeGeometry()\r\n\r\n    mesh = new LineSegments(\r\n      this.wireframeGeometry, this.wireframeMaterial\r\n    )\r\n\r\n    mesh.frustumCulled = false\r\n    mesh.renderOrder = this.getRenderOrder()\r\n\r\n    return mesh\r\n  }\r\n\r\n  getPickingMesh () {\r\n    return this._getMesh('pickingMaterial')\r\n  }\r\n\r\n  getShader (name: string, type?: BufferTypes) {\r\n    return getShader(name, this.getDefines(type))\r\n  }\r\n\r\n  getVertexShader (type?: BufferTypes) {\r\n    return this.getShader(this.vertexShader, type)\r\n  }\r\n\r\n  getFragmentShader (type?: BufferTypes) {\r\n    return this.getShader(this.fragmentShader, type)\r\n  }\r\n\r\n  getDefines (type?: BufferTypes) {\r\n    const defines: ShaderDefines = {}\r\n\r\n    if (this.parameters.clipNear) {\r\n      defines.NEAR_CLIP = 1\r\n    }\r\n\r\n    if (this.parameters.clipRadius) {\r\n      defines.RADIUS_CLIP = 1\r\n    }\r\n\r\n    if (type === 'picking') {\r\n      defines.PICKING = 1\r\n    } else {\r\n      if (type === 'background' || this.parameters.background) {\r\n        defines.NOLIGHT = 1\r\n      }\r\n      if (this.parameters.flatShaded) {\r\n        defines.FLAT_SHADED = 1\r\n      }\r\n      if (this.parameters.opaqueBack) {\r\n        defines.OPAQUE_BACK = 1\r\n      }\r\n      if (this.parameters.diffuseInterior) {\r\n        defines.DIFFUSE_INTERIOR = 1\r\n      }\r\n      if (this.parameters.useInteriorColor) {\r\n        defines.USE_INTERIOR_COLOR = 1\r\n      }\r\n    }\r\n\r\n    return defines\r\n  }\r\n\r\n  getParameters () {\r\n    return this.parameters\r\n  }\r\n\r\n  addUniforms (uniforms: Uniforms) {\r\n    this.uniforms = UniformsUtils.merge(\r\n      [ this.uniforms, uniforms ]\r\n    )\r\n\r\n    this.pickingUniforms = UniformsUtils.merge(\r\n      [ this.pickingUniforms, uniforms ]\r\n    )\r\n  }\r\n\r\n  addAttributes (attributes: { [k: string]: _BufferAttribute }) {\r\n    for (let name in attributes) {\r\n      let buf\r\n      const a = attributes[ name ]\r\n      const arraySize = this.attributeSize * itemSize[ a.type ]\r\n\r\n      if (a.value) {\r\n        if (arraySize !== a.value.length) {\r\n          Log.error('attribute value has wrong length', name)\r\n        }\r\n        buf = a.value\r\n      } else {\r\n        buf = getTypedArray('float32', arraySize)\r\n      }\r\n\r\n      this.geometry.setAttribute(\r\n        name,\r\n        new BufferAttribute(buf, itemSize[ a.type ]).setUsage(this.dynamic ? WebGLRenderingContext.DYNAMIC_DRAW : 0)\r\n      )\r\n    }\r\n  }\r\n\r\n  updateRenderOrder () {\r\n    const renderOrder = this.getRenderOrder()\r\n    function setRenderOrder (mesh: Object3D) {\r\n      mesh.renderOrder = renderOrder\r\n    }\r\n\r\n    this.group.children.forEach(setRenderOrder)\r\n    if (this.pickingGroup) {\r\n      this.pickingGroup.children.forEach(setRenderOrder)\r\n    }\r\n  }\r\n\r\n  updateShader () {\r\n    const m = this.material\r\n    const wm = this.wireframeMaterial\r\n    const pm = this.pickingMaterial\r\n\r\n    m.vertexShader = this.getVertexShader()\r\n    m.fragmentShader = this.getFragmentShader()\r\n    m.needsUpdate = true\r\n\r\n    wm.vertexShader = this.getShader('Line.vert')\r\n    wm.fragmentShader = this.getShader('Line.frag')\r\n    wm.needsUpdate = true\r\n\r\n    pm.vertexShader = this.getVertexShader('picking')\r\n    pm.fragmentShader = this.getFragmentShader('picking')\r\n    pm.needsUpdate = true\r\n  }\r\n\r\n  /**\r\n   * Set buffer parameters\r\n   * @param {BufferParameters} params - buffer parameters object\r\n   * @return {undefined}\r\n   */\r\n  setParameters (params: Partial<BufferParameters>) {\r\n    const p = params as any\r\n    const pt = this.parameterTypes as any\r\n    const pv = this.parameters as any\r\n\r\n    const propertyData: { [k: string]: any } = {}\r\n    const uniformData: { [k: string]: any } = {}\r\n    let doShaderUpdate = false\r\n    let doVisibilityUpdate = false\r\n\r\n    for (const name in p) {\r\n      const value = p[ name ]\r\n\r\n      if (value === undefined) continue\r\n      pv[ name ] = value\r\n\r\n      if (pt[ name ] === undefined) continue\r\n\r\n      if (pt[ name ].property) {\r\n        if (pt[ name ].property !== true) {\r\n          propertyData[ pt[ name ].property as any ] = value\r\n        } else {\r\n          propertyData[ name ] = value\r\n        }\r\n      }\r\n\r\n      if (pt[ name ].uniform) {\r\n        if (pt[ name ].uniform !== true) {\r\n          uniformData[ pt[ name ].uniform as any ] = value\r\n        } else {\r\n          uniformData[ name ] = value\r\n        }\r\n      }\r\n\r\n      if (pt[ name ].updateShader) {\r\n        doShaderUpdate = true\r\n      }\r\n\r\n      if (pt[ name ].updateVisibility) {\r\n        doVisibilityUpdate = true\r\n      }\r\n\r\n      if (this.dynamic && name === 'wireframe' && value === true) {\r\n        this.updateWireframeIndex()\r\n      }\r\n\r\n      if (name === 'forceTransparent') {\r\n        propertyData.transparent = this.transparent\r\n      }\r\n\r\n      if (name === 'matrix') {\r\n        this.matrix = value\r\n      }\r\n    }\r\n\r\n    this.setProperties(propertyData)\r\n    this.setUniforms(uniformData)\r\n    if (doShaderUpdate) this.updateShader()\r\n    if (doVisibilityUpdate) this.setVisibility(this.visible)\r\n  }\r\n\r\n  /**\r\n   * Sets buffer attributes\r\n   * @param {Object} data - An object where the keys are the attribute names\r\n   *      and the values are the attribute data.\r\n   * @example\r\n   * var buffer = new Buffer();\r\n   * buffer.setAttributes({ attrName: attrData });\r\n   */\r\n  setAttributes (data: any) {  // TODO\r\n    const geometry = this.geometry\r\n    const attributes = geometry.attributes as any  // TODO\r\n\r\n    for (const name in data) {\r\n      if (name === 'picking') continue\r\n\r\n      const array = data[ name ]\r\n      const length = array.length\r\n\r\n      if (name === 'index') {\r\n        const index = geometry.getIndex()\r\n        if (!index) { Log.error('Index is null'); continue; }\r\n        geometry.setDrawRange(0, Infinity)\r\n\r\n        if (length > index.array.length) {\r\n          geometry.setIndex(\r\n            new BufferAttribute(array, 1)\r\n              .setUsage(this.dynamic ? WebGLRenderingContext.DYNAMIC_DRAW : 0)\r\n          )\r\n        } else {\r\n          index.set(array)\r\n          index.count = length\r\n          index.needsUpdate = length > 0\r\n          index.updateRange.count = length\r\n          geometry.setDrawRange(0, length)\r\n        }\r\n\r\n        this.indexVersion++\r\n        if (this.parameters.wireframe) this.updateWireframeIndex()\r\n      } else {\r\n        const attribute = attributes[ name ]\r\n\r\n        if (length > attribute.array.length) {\r\n          geometry.setAttribute(\r\n            name,\r\n            new BufferAttribute(array, attribute.itemSize)\r\n              .setUsage(this.dynamic ? WebGLRenderingContext.DYNAMIC_DRAW : 0)\r\n          )\r\n        } else {\r\n          attributes[ name ].set(array)\r\n          attributes[ name ].needsUpdate = length > 0\r\n          attributes[ name ].updateRange.count = length\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  setUniforms (data: any) {  // TODO\r\n    if (!data) return\r\n\r\n    const u = this.material.uniforms\r\n    const wu = this.wireframeMaterial.uniforms\r\n    const pu = this.pickingMaterial.uniforms\r\n\r\n    for (let name in data) {\r\n      if (name === 'opacity') {\r\n        this.setProperties({ transparent: this.transparent })\r\n      }\r\n\r\n      if (u[ name ] !== undefined) {\r\n        if (u[ name ].value.isVector3) {\r\n          u[ name ].value.copy(data[ name ])\r\n        } else if (u[ name ].value.set) {\r\n          u[ name ].value.set(data[ name ])\r\n        } else {\r\n          u[ name ].value = data[ name ]\r\n        }\r\n      }\r\n\r\n      if (wu[ name ] !== undefined) {\r\n        if (wu[ name ].value.isVector3) {\r\n          wu[ name ].value.copy(data[ name ])\r\n        } else if (wu[ name ].value.set) {\r\n          wu[ name ].value.set(data[ name ])\r\n        } else {\r\n          wu[ name ].value = data[ name ]\r\n        }\r\n      }\r\n\r\n      if (pu[ name ] !== undefined) {\r\n        if (pu[ name ].value.isVector3) {\r\n          pu[ name ].value.copy(data[ name ])\r\n        } else if (pu[ name ].value.set) {\r\n          pu[ name ].value.set(data[ name ])\r\n        } else {\r\n          pu[ name ].value = data[ name ]\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  setProperties (data: any) {  // TODO\r\n    if (!data) return\r\n\r\n    const m = this.material\r\n    const wm = this.wireframeMaterial\r\n    const pm = this.pickingMaterial\r\n\r\n    for (const _name in data) {\r\n      const name = _name as 'side'|'transparent'  // TODO\r\n\r\n      let value = data[ name ]\r\n\r\n      if (name === 'transparent') {\r\n        this.updateRenderOrder()\r\n      } else if (name === 'side') {\r\n        value = getThreeSide(value)\r\n      }\r\n\r\n      (m[ name ] as any) = value;\r\n      (wm[ name ] as any) = value;\r\n      (pm[ name ] as any) = value\r\n    }\r\n\r\n    m.needsUpdate = true\r\n    wm.needsUpdate = true\r\n    pm.needsUpdate = true\r\n  }\r\n\r\n  /**\r\n   * Set buffer visibility\r\n   * @param {Boolean} value - visibility value\r\n   * @return {undefined}\r\n   */\r\n  setVisibility (value: boolean) {\r\n    this.visible = value\r\n\r\n    if (this.parameters.wireframe) {\r\n      this.group.visible = false\r\n      this.wireframeGroup.visible = value\r\n      if (this.pickable) {\r\n        this.pickingGroup.visible = false\r\n      }\r\n    } else {\r\n      this.group.visible = value\r\n      this.wireframeGroup.visible = false\r\n      if (this.pickable) {\r\n        this.pickingGroup.visible = value\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Free buffer resources\r\n   * @return {undefined}\r\n   */\r\n  dispose () {\r\n    if (this.material) this.material.dispose()\r\n    if (this.wireframeMaterial) this.wireframeMaterial.dispose()\r\n    if (this.pickingMaterial) this.pickingMaterial.dispose()\r\n\r\n    this.geometry.dispose()\r\n    if (this.wireframeGeometry) this.wireframeGeometry.dispose()\r\n  }\r\n\r\n  /**\r\n   * Customize JSON serialization to avoid circular references\r\n   */\r\n  toJSON () {\r\n    var result: any = {};\r\n    for (var x in this) {\r\n      if (x !== \"group\" && x !== \"wireframeGroup\" && x != \"pickingGroup\"\r\n         && x !== \"picking\") {\r\n        result[x] = this[x];\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n}\r\n\r\nexport default Buffer\r\n","/**\r\n * @file Mesh Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport '../shader/Mesh.vert'\r\nimport '../shader/Mesh.frag'\r\n\r\nimport Buffer, { BufferParameters, BufferData } from './buffer'\r\n\r\n/**\r\n * Mesh buffer. Draws a triangle mesh.\r\n *\r\n * @example\r\n * var meshBuffer = new MeshBuffer({\r\n *   position: new Float32Array(\r\n *     [ 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1 ]\r\n *   ),\r\n *   color: new Float32Array(\r\n *     [ 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0 ]\r\n *   )\r\n * });\r\n */\r\nclass MeshBuffer extends Buffer {\r\n  vertexShader = 'Mesh.vert'\r\n  fragmentShader = 'Mesh.frag'\r\n\r\n  /**\r\n   * @param  {Object} data - attribute object\r\n   * @param  {Float32Array} data.position - positions\r\n   * @param  {Float32Array} data.color - colors\r\n   * @param  {Float32Array} [data.index] - triangle indices\r\n   * @param  {Float32Array} [data.normal] - radii\r\n   * @param  {BufferParameters} params - parameter object\r\n   */\r\n  constructor (data: BufferData, params: Partial<BufferParameters> = {}) {\r\n    super(data, params)\r\n\r\n    this.addAttributes({\r\n      'normal': { type: 'v3', value: data.normal }\r\n    })\r\n\r\n    if (data.normal === undefined) {\r\n      this.geometry.computeVertexNormals()\r\n    }\r\n  }\r\n}\r\n\r\nexport default MeshBuffer\r\n","/**\r\n * @file Surface Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport MeshBuffer from './mesh-buffer'\r\n\r\n/**\r\n * Surface buffer. Like a {@link MeshBuffer}, but with `.isSurface` set to `true`.\r\n */\r\nclass SurfaceBuffer extends MeshBuffer {\r\n  isSurface = true\r\n}\r\n\r\nexport default SurfaceBuffer\r\n","/**\r\n * @file Double Sided Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\n// @ts-ignore: unused import Vector3, Matrix4 required for declaration only\r\nimport { Group, BufferGeometry, Object3D, Mesh, LineSegments, Vector3, Matrix4 } from 'three'\r\n\r\nimport Buffer, { BufferSide } from './buffer'\r\nimport { Picker } from '../utils/picker'\r\n\r\nfunction setVisibilityTrue (m: Object3D) { m.visible = true }\r\nfunction setVisibilityFalse (m: Object3D) { m.visible = false }\r\n\r\n/**\r\n * A double-sided mesh buffer. Takes a buffer and renders the front and\r\n * the back as seperate objects to avoid some artifacts when rendering\r\n * transparent meshes. Also allows to render the back of a mesh opaque\r\n * while the front is transparent.\r\n * @implements {Buffer}\r\n *\r\n * @example\r\n * var sphereGeometryBuffer = new SphereGeometryBuffer({\r\n *   position: new Float32Array([ 0, 0, 0 ]),\r\n *   color: new Float32Array([ 1, 0, 0 ]),\r\n *   radius: new Float32Array([ 1 ])\r\n * });\r\n * var doubleSidedBuffer = new DoubleSidedBuffer(sphereGeometryBuffer);\r\n */\r\nclass DoubleSidedBuffer {\r\n  size: number\r\n  side: BufferSide\r\n  visible: boolean\r\n  wireframe: boolean\r\n  geometry: BufferGeometry\r\n\r\n  picking?: Picker\r\n\r\n  group = new Group()\r\n  wireframeGroup = new Group()\r\n  pickingGroup = new Group()\r\n\r\n  frontMeshes: (Mesh|LineSegments)[] = []\r\n  backMeshes: (Mesh|LineSegments)[] = []\r\n\r\n  buffer: Buffer\r\n  frontBuffer: Buffer\r\n  backBuffer: Buffer\r\n\r\n  /**\r\n   * Create a double sided buffer\r\n   * @param  {Buffer} buffer - the buffer to be rendered double-sided\r\n   */\r\n  constructor (buffer: Buffer) {\r\n    this.size = buffer.size\r\n    this.side = buffer.parameters.side\r\n    this.visible = buffer.visible\r\n    this.geometry = buffer.geometry\r\n    this.picking = buffer.picking\r\n\r\n    this.group = new Group()\r\n    this.wireframeGroup = new Group()\r\n    this.pickingGroup = new Group()\r\n\r\n    // requires Group objects to be present\r\n    this.matrix = buffer.matrix\r\n\r\n    const frontBuffer = buffer\r\n    const backBuffer = new (buffer as any).constructor({  // TODO\r\n      position: new Float32Array(0)\r\n    }) as Buffer\r\n\r\n    frontBuffer.makeMaterial()\r\n    backBuffer.makeMaterial()\r\n\r\n    backBuffer.picking = buffer.picking\r\n    backBuffer.geometry = buffer.geometry\r\n    backBuffer.wireframeGeometry = buffer.wireframeGeometry\r\n    backBuffer.setParameters(buffer.getParameters())\r\n    backBuffer.updateShader()\r\n\r\n    frontBuffer.setParameters({\r\n      side: 'front'\r\n    })\r\n    backBuffer.setParameters({\r\n      side: 'back',\r\n      opacity: backBuffer.parameters.opacity\r\n    })\r\n\r\n    this.buffer = buffer\r\n    this.frontBuffer = frontBuffer\r\n    this.backBuffer = backBuffer\r\n  }\r\n\r\n  set matrix (m) {\r\n    Buffer.prototype.setMatrix.call(this, m)\r\n  }\r\n  get matrix () {\r\n    return this.group.matrix.clone()\r\n  }\r\n\r\n  get pickable () {\r\n    return !!this.picking && !this.parameters.disablePicking\r\n  }\r\n\r\n  get parameters () {\r\n    return this.buffer.parameters\r\n  }\r\n\r\n  getParameters () {\r\n    const p = Object.assign({}, this.buffer.parameters)\r\n    p.side = this.side\r\n    return p\r\n  }\r\n\r\n  getMesh (picking: boolean) {\r\n    let front, back\r\n\r\n    if (picking) {\r\n      back = this.backBuffer.getPickingMesh()\r\n      front = this.frontBuffer.getPickingMesh()\r\n    } else {\r\n      back = this.backBuffer.getMesh()\r\n      front = this.frontBuffer.getMesh()\r\n    }\r\n\r\n    this.frontMeshes.push(<LineSegments|Mesh>front)\r\n    this.backMeshes.push(<LineSegments|Mesh>back)\r\n\r\n    this.setParameters({ side: this.side })\r\n\r\n    return new Group().add(back, front)\r\n  }\r\n\r\n  getWireframeMesh () {\r\n    return this.buffer.getWireframeMesh()\r\n  }\r\n\r\n  getPickingMesh () {\r\n    return this.getMesh(true)\r\n  }\r\n\r\n  setAttributes (data: any) {  // TODO\r\n    this.buffer.setAttributes(data)\r\n  }\r\n\r\n  setParameters (data: any) {  // TODO\r\n    data = Object.assign({}, data)\r\n\r\n    if (data.side === 'front') {\r\n      this.frontMeshes.forEach(setVisibilityTrue)\r\n      this.backMeshes.forEach(setVisibilityFalse)\r\n    } else if (data.side === 'back') {\r\n      this.frontMeshes.forEach(setVisibilityFalse)\r\n      this.backMeshes.forEach(setVisibilityTrue)\r\n    } else if (data.side === 'double') {\r\n      this.frontMeshes.forEach(setVisibilityTrue)\r\n      this.backMeshes.forEach(setVisibilityTrue)\r\n    }\r\n\r\n    if (data.side !== undefined) {\r\n      this.side = data.side\r\n    }\r\n    delete data.side\r\n\r\n    if (data.matrix !== undefined) {\r\n      this.matrix = data.matrix\r\n    }\r\n    delete data.matrix\r\n\r\n    this.frontBuffer.setParameters(data)\r\n\r\n    if (data.wireframe !== undefined) {\r\n      this.wireframe = data.wireframe\r\n      this.setVisibility(this.visible)\r\n    }\r\n    delete data.wireframe\r\n\r\n    this.backBuffer.setParameters(data)\r\n  }\r\n\r\n  setVisibility (value: boolean) {\r\n    this.visible = value\r\n\r\n    if (this.parameters.wireframe) {\r\n      this.group.visible = false\r\n      this.wireframeGroup.visible = value\r\n      if (this.pickable) {\r\n        this.pickingGroup.visible = false\r\n      }\r\n    } else {\r\n      this.group.visible = value\r\n      this.wireframeGroup.visible = false\r\n      if (this.pickable) {\r\n        this.pickingGroup.visible = value\r\n      }\r\n    }\r\n  }\r\n\r\n  dispose () {\r\n    this.frontBuffer.dispose()\r\n    this.backBuffer.dispose()\r\n  }\r\n\r\n  /**\r\n   * Customize JSON serialization to avoid circular references.\r\n   * Only export simple params which could be useful.\r\n   */\r\n  toJSON () {\r\n    var result: any = {};\r\n    for (var x in this) {\r\n      if (['side', 'size', 'visible', 'matrix', 'parameters'].includes(x)) {\r\n        result[x] = this[x];\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n}\r\n\r\nexport default DoubleSidedBuffer\r\n","/**\r\n * @file Contour Buffer\r\n * @author Fred ludlow <fred.ludlow@gmail.com>\r\n * @private\r\n */\r\n\r\nimport '../shader/Line.vert'\r\nimport '../shader/Line.frag'\r\n\r\nimport Buffer from './buffer'\r\n\r\n/**\r\n * Contour buffer. A buffer that draws lines (instead of triangle meshes).\r\n */\r\nclass ContourBuffer extends Buffer {\r\n  isLine = true\r\n  vertexShader = 'Line.vert'\r\n  fragmentShader = 'Line.frag'\r\n}\r\n\r\nexport default ContourBuffer\r\n","/**\r\n * @file Surface Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Matrix4, Vector3, Box3 } from 'three'\r\n\r\nimport { defaults } from '../utils'\r\nimport Representation, { RepresentationParameters } from './representation'\r\nimport Volume from '../surface/volume'\r\nimport SurfaceBuffer from '../buffer/surface-buffer'\r\nimport DoubleSidedBuffer from '../buffer/doublesided-buffer'\r\nimport ContourBuffer from '../buffer/contour-buffer'\r\nimport Surface from '../surface/surface';\r\nimport Viewer from '../viewer/viewer';\r\nimport {SurfaceData} from '../surface/surface'\r\n// @ts-ignore: unused import ColormakerParameters required for declaration only\r\nimport { ColormakerParameters } from '../color/colormaker';\r\nexport type SurfaceDataFields = {position: boolean, color: boolean, index: boolean, normal: boolean, radius: boolean}\r\n\r\n/**\r\n * Surface representation parameter object. Extends {@link RepresentationParameters}\r\n *\r\n * @typedef {Object} SurfaceRepresentationParameters - surface representation parameters\r\n *\r\n * @property {String} isolevelType - Meaning of the isolevel value. Either *value* for the literal value or *sigma* as a factor of the sigma of the data. For volume data only.\r\n * @property {Float} isolevel - The value at which to create the isosurface. For volume data only.\r\n * @property {Boolean} negateIsolevel - For volume data only.\r\n * @property {Boolean} isolevelScroll - For volume data only\r\n * @property {Integer} smooth - How many iterations of laplacian smoothing after surface triangulation. For volume data only.\r\n * @property {Boolean} background - Render the surface in the background, unlit.\r\n * @property {Boolean} opaqueBack - Render the back-faces (where normals point away from the camera) of the surface opaque, ignoring the transparency parameter.\r\n * @property {Integer} boxSize - Size of the box to triangulate volume data in. Set to zero to triangulate the whole volume. For volume data only.\r\n * @property {Boolean} useWorker - Weather or not to triangulate the volume asynchronously in a Web Worker. For volume data only.\r\n * @property {Boolean} wrap - Wrap volume data around the edges; use in conjuction with boxSize but not larger than the volume dimension. For volume data only.\r\n */\r\nexport interface SurfaceRepresentationParameters extends RepresentationParameters {\r\n  isolevelType: 'value'|'sigma'\r\n  isolevel: number\r\n  smooth: number\r\n  background: boolean\r\n  opaqueBack: boolean\r\n  boxSize: number\r\n  useWorker: boolean\r\n  wrap: boolean\r\n}\r\n/**\r\n * Surface representation\r\n */\r\n/**\r\n   * Create Surface representation object\r\n   * @param {Surface|Volume} surface - the surface or volume to be represented\r\n   * @param {Viewer} viewer - a viewer object\r\n   * @param {SurfaceRepresentationParameters} params - surface representation parameters\r\n   */\r\nclass SurfaceRepresentation extends Representation {\r\n  protected surface: Surface|Volume|undefined\r\n  protected volume: Volume|undefined\r\n  protected boxCenter: Vector3\r\n  protected __boxCenter: Vector3\r\n  protected box: Box3\r\n  protected __box: Box3\r\n  protected _position: Vector3\r\n  protected isolevelType: 'value'|'sigma'\r\n  protected isolevel: number\r\n  protected negateIsolevel: boolean\r\n  protected isolevelScroll: boolean\r\n  protected smooth: number\r\n  protected background: boolean\r\n  protected opaqueBack: boolean\r\n  protected boxSize: number\r\n  protected inverseMatrix: Matrix4\r\n  protected colorVolume: Volume\r\n  protected contour: boolean\r\n  protected useWorker: boolean\r\n  protected wrap: boolean\r\n\r\n  protected __isolevel: number\r\n  protected __smooth: number\r\n  protected __contour: boolean\r\n  protected __wrap: boolean\r\n  protected __boxSize: number\r\n\r\n  setBox: () => void\r\n\r\n  constructor (surface: Surface, viewer: Viewer, params: Partial<SurfaceRepresentationParameters>) {\r\n    super(surface, viewer, params)\r\n\r\n    this.type = 'surface'\r\n\r\n    this.parameters = Object.assign({\r\n\r\n      isolevelType: {\r\n        type: 'select',\r\n        options: {\r\n          'value': 'value', 'sigma': 'sigma'\r\n        }\r\n      },\r\n      isolevel: {\r\n        type: 'number', precision: 2, max: 1000, min: -1000\r\n      },\r\n      negateIsolevel: {\r\n        type: 'boolean'\r\n      },\r\n      isolevelScroll: {\r\n        type: 'boolean'\r\n      },\r\n      smooth: {\r\n        type: 'integer', precision: 1, max: 10, min: 0\r\n      },\r\n      background: {\r\n        type: 'boolean', rebuild: true // FIXME\r\n      },\r\n      opaqueBack: {\r\n        type: 'boolean', buffer: true\r\n      },\r\n      boxSize: {\r\n        type: 'integer', precision: 1, max: 100, min: 0\r\n      },\r\n      colorVolume: {\r\n        type: 'hidden'\r\n      },\r\n      contour: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n      useWorker: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n      wrap: {\r\n        type: 'boolean', rebuild: true\r\n      }\r\n\r\n    }, this.parameters)\r\n\r\n    if (surface instanceof Volume) {\r\n      this.surface = undefined\r\n      this.volume = surface\r\n    } else {\r\n      this.surface = surface\r\n      this.volume = undefined\r\n    }\r\n\r\n    this.boxCenter = new Vector3()\r\n    this.__boxCenter = new Vector3()\r\n    this.box = new Box3()\r\n    this.__box = new Box3()\r\n\r\n    this._position = new Vector3()\r\n    this.inverseMatrix = new Matrix4()\r\n\r\n    this.setBox = function setBox () {\r\n      this._position.copy(viewer.translationGroup.position).negate()\r\n      this._position.applyMatrix4(this.inverseMatrix)\r\n      if (!this._position.equals(this.boxCenter)) {\r\n        this.setParameters({ 'boxCenter': this._position })\r\n      }\r\n    }\r\n\r\n    this.toBePrepared = true\r\n\r\n    this.viewer.signals.ticked.add(this.setBox, this)\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params: Partial<SurfaceRepresentationParameters>) {\r\n    const p = params || {}\r\n    p.colorScheme = defaults(p.colorScheme, 'uniform')\r\n    p.colorValue = defaults(p.colorValue, 0xDDDDDD)\r\n\r\n    this.isolevelType = defaults(p.isolevelType, 'sigma')\r\n    this.isolevel = defaults(p.isolevel, 2.0)\r\n    this.negateIsolevel = defaults(p.negateIsolevel, false)\r\n    this.isolevelScroll = defaults(p.isolevelScroll, false)\r\n    this.smooth = defaults(p.smooth, 0)\r\n    this.background = defaults(p.background, false)\r\n    this.opaqueBack = defaults(p.opaqueBack, true)\r\n    this.boxSize = defaults(p.boxSize, 0)\r\n    this.colorVolume = defaults(p.colorVolume, undefined)\r\n    this.contour = defaults(p.contour, false)\r\n    this.useWorker = defaults(p.useWorker, true)\r\n    this.wrap = defaults(p.wrap, false)\r\n\r\n    super.init(p)\r\n\r\n    this.inverseMatrix.getInverse(this.matrix)\r\n\r\n    this.build()\r\n  }\r\n\r\n  attach (callback: () => void) {\r\n    this.bufferList.forEach(buffer => {\r\n      this.viewer.add(buffer)\r\n    })\r\n\r\n    this.setVisibility(this.visible)\r\n\r\n    callback()\r\n  }\r\n\r\n  prepare (callback: () => void) {\r\n    if (this.volume) {\r\n      let isolevel\r\n\r\n      if (this.isolevelType === 'sigma') {\r\n        isolevel = this.volume.getValueForSigma(this.isolevel)\r\n      } else {\r\n        isolevel = this.isolevel\r\n      }\r\n      if (this.negateIsolevel) isolevel *= -1\r\n\r\n      if (!this.surface ||\r\n        this.__isolevel !== isolevel ||\r\n        this.__smooth !== this.smooth ||\r\n        this.__contour !== this.contour ||\r\n        this.__wrap !== this.wrap ||\r\n        this.__boxSize !== this.boxSize ||\r\n        (this.boxSize > 0 &&\r\n            !this.__boxCenter.equals(this.boxCenter))\r\n      ) {\r\n        this.__isolevel = isolevel\r\n        this.__smooth = this.smooth\r\n        this.__contour = this.contour\r\n        this.__wrap = this.wrap\r\n        this.__boxSize = this.boxSize\r\n        this.__boxCenter.copy(this.boxCenter)\r\n        this.__box.copy(this.box)\r\n\r\n        const onSurfaceFinish = (surface: Surface) => {\r\n          this.surface = surface\r\n          callback()\r\n        }\r\n\r\n        if (this.useWorker) {\r\n          this.volume.getSurfaceWorker(\r\n            isolevel, this.smooth, this.boxCenter, this.boxSize,\r\n            this.contour, this.wrap, onSurfaceFinish\r\n          )\r\n        } else {\r\n          onSurfaceFinish(\r\n            this.volume.getSurface(\r\n              isolevel, this.smooth, this.boxCenter, this.boxSize,\r\n              this.contour, this.wrap\r\n            )\r\n          )\r\n        }\r\n      } else {\r\n        callback()\r\n      }\r\n    } else {\r\n      callback()\r\n    }\r\n  }\r\n\r\n  create () {\r\n    const sd = {\r\n      position: (this.surface as Surface).getPosition(),\r\n      color: (this.surface as Surface).getColor(this.getColorParams()),\r\n      index: (this.surface as Surface).getIndex()\r\n    }\r\n\r\n    let buffer\r\n\r\n    if (this.contour) {\r\n      buffer = new ContourBuffer(\r\n        sd,\r\n        this.getBufferParams({ wireframe: false })\r\n      )\r\n    } else {\r\n      Object.assign(sd, {\r\n        normal: (this.surface as Surface).getNormal(),\r\n        picking: (this.surface as Surface).getPicking()\r\n      })\r\n\r\n      const surfaceBuffer = new SurfaceBuffer(\r\n        sd,\r\n        this.getBufferParams({\r\n          background: this.background,\r\n          opaqueBack: this.opaqueBack,\r\n          dullInterior: false\r\n        })\r\n      )\r\n\r\n      buffer = new DoubleSidedBuffer(surfaceBuffer)\r\n    }\r\n\r\n    this.bufferList.push(buffer as ContourBuffer)\r\n  }\r\n\r\n  update (what: SurfaceDataFields) {\r\n    if (this.bufferList.length === 0) return\r\n\r\n    what = what || {}\r\n\r\n    const surfaceData: Partial<SurfaceData> = {}\r\n\r\n    if (what.position) {\r\n      surfaceData.position = (this.surface as Surface).getPosition()\r\n    }\r\n\r\n    if (what.color) {\r\n      surfaceData.color = (this.surface as Surface).getColor(\r\n        this.getColorParams()\r\n      )\r\n    }\r\n\r\n    if (what.index) {\r\n      surfaceData.index = (this.surface as Surface).getIndex()\r\n    }\r\n\r\n    if (what.normal) {\r\n      surfaceData.normal = (this.surface as Surface).getNormal()\r\n    }\r\n\r\n    this.bufferList.forEach(function (buffer) {\r\n      buffer.setAttributes(surfaceData)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Set representation parameters\r\n   * @alias SurfaceRepresentation#setParameters\r\n   * @param {SurfaceRepresentationParameters} params - surface parameter object\r\n   * @param {Object} [what] - buffer data attributes to be updated,\r\n   *                        note that this needs to be implemented in the\r\n   *                        derived classes. Generally it allows more\r\n   *                        fine-grained control over updating than\r\n   *                        forcing a rebuild.\r\n   * @param {Boolean} what.position - update position data\r\n   * @param {Boolean} what.color - update color data\r\n   * @param {Boolean} [rebuild] - whether or not to rebuild the representation\r\n   * @return {SurfaceRepresentation} this object\r\n   */\r\n  setParameters (params: Partial<SurfaceRepresentationParameters>, what?: SurfaceDataFields, rebuild?: boolean) {\r\n    if (params && params.isolevelType !== undefined &&\r\n      this.volume\r\n    ) {\r\n      if (this.isolevelType === 'value' &&\r\n        params.isolevelType === 'sigma'\r\n      ) {\r\n        this.isolevel = this.volume.getSigmaForValue(this.isolevel)\r\n      } else if (this.isolevelType === 'sigma' &&\r\n        params.isolevelType === 'value'\r\n      ) {\r\n        this.isolevel = this.volume.getValueForSigma(this.isolevel)\r\n      }\r\n\r\n      this.isolevelType = params.isolevelType\r\n    }\r\n\r\n    if (params && params.boxCenter) {\r\n      this.boxCenter.copy(params.boxCenter)\r\n      delete params.boxCenter\r\n    }\r\n\r\n    // Forbid wireframe && contour as in molsurface\r\n    if (params && params.wireframe && (\r\n      params.contour || (params.contour === undefined && this.contour)\r\n    )) {\r\n      params.wireframe = false\r\n    }\r\n\r\n    super.setParameters(params, what, rebuild)\r\n\r\n    if (params.matrix) {\r\n      this.inverseMatrix.getInverse(params.matrix)\r\n    }\r\n\r\n    if (this.volume) {\r\n      this.volume.getBox(this.boxCenter, this.boxSize, this.box)\r\n    }\r\n\r\n    if (params && params.colorVolume !== undefined) {\r\n      if (what) what.color = true\r\n    }\r\n\r\n    if (this.surface && (\r\n      params.isolevel !== undefined ||\r\n      params.negateIsolevel !== undefined ||\r\n      params.smooth !== undefined ||\r\n      params.wrap !== undefined ||\r\n      params.boxSize !== undefined ||\r\n      (this.boxSize > 0 &&\r\n        !this.__box.equals(this.box))\r\n    )) {\r\n      this.build({\r\n        'position': true,\r\n        'color': true,\r\n        'index': true,\r\n        'normal': !this.contour\r\n      })\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  getColorParams () {\r\n    const p = super.getColorParams()\r\n\r\n    p.volume = this.colorVolume\r\n\r\n    return p\r\n  }\r\n\r\n  dispose () {\r\n    this.viewer.signals.ticked.remove(this.setBox, this)\r\n\r\n    super.dispose()\r\n  }\r\n}\r\n\r\nexport default SurfaceRepresentation\r\n","/**\r\n * @file Mouse Actions\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport PickingProxy from './picking-proxy'\r\nimport { almostIdentity } from '../math/math-utils'\r\nimport Stage from '../stage/stage'\r\nimport StructureComponent from '../component/structure-component'\r\nimport SurfaceRepresentation from '../representation/surface-representation'\r\n\r\nexport type ScrollCallback = (stage: Stage, delta: number) => void\r\nexport type DragCallback = (stage: Stage, dx: number, dy: number) => void\r\nexport type PickCallback = (stage: Stage, pickingProxy: PickingProxy) => void\r\nexport type MouseActionCallback = ScrollCallback | DragCallback | PickCallback\r\n\r\n/**\r\n * Mouse actions provided as static methods\r\n */\r\nclass MouseActions {\r\n  /**\r\n   * Zoom scene based on scroll-delta\r\n   * @param {Stage} stage - the stage\r\n   * @param {Number} delta - amount to zoom\r\n   * @return {undefined}\r\n   */\r\n  static zoomScroll (stage: Stage, delta: number) {\r\n    stage.trackballControls.zoom(delta)\r\n  }\r\n\r\n  /**\r\n   * Move near clipping plane based on scroll-delta\r\n   * @param {Stage} stage - the stage\r\n   * @param {Number} delta - amount to move clipping plane\r\n   * @return {undefined}\r\n   */\r\n  static clipNearScroll (stage: Stage, delta: number) {\r\n    const sp = stage.getParameters()\r\n    stage.setParameters({ clipNear: sp.clipNear + delta / 10 })\r\n  }\r\n\r\n  /**\r\n   * Move clipping planes based on scroll-delta.\r\n   * @param {Stage} stage - the stage\r\n   * @param {Number} delta - direction to move planes\r\n   * @return {undefined}\r\n   */\r\n  static focusScroll (stage: Stage, delta: number) {\r\n    const focus = stage.getFocus()\r\n    const sign = Math.sign(delta)\r\n    const step = sign * almostIdentity((100 - focus) / 10, 5, 0.2)\r\n    stage.setFocus(focus + step)\r\n  }\r\n\r\n  /**\r\n   * Zoom scene based on scroll-delta and\r\n   * move focus planes based on camera position (zoom)\r\n   * @param {Stage} stage - the stage\r\n   * @param {Number} delta - amount to move focus planes and zoom\r\n   * @return {undefined}\r\n   */\r\n  static zoomFocusScroll (stage: Stage, delta: number) {\r\n    stage.trackballControls.zoom(delta)\r\n    const z = stage.viewer.camera.position.z\r\n    stage.setFocus(100 - Math.abs(z / 8))\r\n  }\r\n\r\n  /**\r\n   * Change isolevel of volume surfaces based on scroll-delta\r\n   * @param {Stage} stage - the stage\r\n   * @param {Number} delta - amount to change isolevel\r\n   * @return {undefined}\r\n   */\r\n  static isolevelScroll (stage: Stage, delta: number) {\r\n    const d = Math.sign(delta) / 10\r\n    stage.eachRepresentation((reprElem, comp) => {\r\n      if (reprElem.repr instanceof SurfaceRepresentation) {\r\n        const p = reprElem.getParameters() as any  // TODO\r\n        if (p.isolevelScroll) {\r\n          reprElem.setParameters({ isolevel: p.isolevel + d })\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Pan scene based on mouse coordinate changes\r\n   * @param {Stage} stage - the stage\r\n   * @param {Number} dx - amount to pan in x direction\r\n   * @param {Number} dy - amount to pan in y direction\r\n   * @return {undefined}\r\n   */\r\n  static panDrag (stage: Stage, dx: number, dy: number) {\r\n    stage.trackballControls.pan(dx, dy)\r\n  }\r\n\r\n  /**\r\n   * Rotate scene based on mouse coordinate changes\r\n   * @param {Stage} stage - the stage\r\n   * @param {Number} dx - amount to rotate in x direction\r\n   * @param {Number} dy - amount to rotate in y direction\r\n   * @return {undefined}\r\n   */\r\n  static rotateDrag (stage: Stage, dx: number, dy: number) {\r\n    stage.trackballControls.rotate(dx, dy)\r\n  }\r\n\r\n  /**\r\n   * Rotate scene around z axis based on mouse coordinate changes\r\n   * @param {Stage} stage - the stage\r\n   * @param {Number} dx - amount to rotate in x direction\r\n   * @param {Number} dy - amount to rotate in y direction\r\n   * @return {undefined}\r\n   */\r\n  static zRotateDrag (stage: Stage, dx: number, dy: number) {\r\n    stage.trackballControls.zRotate(dx, dy)\r\n  }\r\n\r\n  /**\r\n   * Zoom scene based on mouse coordinate changes\r\n   * @param {Stage} stage - the stage\r\n   * @param {Number} dx - amount to zoom\r\n   * @param {Number} dy - amount to zoom\r\n   * @return {undefined}\r\n   */\r\n  static zoomDrag (stage: Stage, dx: number, dy: number) {\r\n    stage.trackballControls.zoom((dx + dy) / -2)\r\n  }\r\n\r\n  /**\r\n   * Zoom scene based on mouse coordinate changes and\r\n   * move focus planes based on camera position (zoom)\r\n   * @param {Stage} stage - the stage\r\n   * @param {Number} dx - amount to zoom and focus\r\n   * @param {Number} dy - amount to zoom and focus\r\n   * @return {undefined}\r\n   */\r\n  static zoomFocusDrag (stage: Stage, dx: number, dy: number) {\r\n    stage.trackballControls.zoom((dx + dy) / -2)\r\n    const z = stage.viewer.camera.position.z\r\n    stage.setFocus(100 - Math.abs(z / 8))\r\n  }\r\n\r\n  /**\r\n   * Pan picked component based on mouse coordinate changes\r\n   * @param {Stage} stage - the stage\r\n   * @param {Number} dx - amount to pan in x direction\r\n   * @param {Number} dy - amount to pan in y direction\r\n   * @return {undefined}\r\n   */\r\n  static panComponentDrag (stage: Stage, dx: number, dy: number) {\r\n    stage.trackballControls.panComponent(dx, dy)\r\n  }\r\n\r\n  /**\r\n   * Pan picked atom based on mouse coordinate changes\r\n   * @param {Stage} stage - the stage\r\n   * @param {Number} dx - amount to pan in x direction\r\n   * @param {Number} dy - amount to pan in y direction\r\n   * @return {undefined}\r\n   */\r\n  static panAtomDrag (stage: Stage, dx: number, dy: number) {\r\n    stage.trackballControls.panAtom(dx, dy)\r\n  }\r\n\r\n  /**\r\n   * Rotate picked component based on mouse coordinate changes\r\n   * @param {Stage} stage - the stage\r\n   * @param {Number} dx - amount to rotate in x direction\r\n   * @param {Number} dy - amount to rotate in y direction\r\n   * @return {undefined}\r\n   */\r\n  static rotateComponentDrag (stage: Stage, dx: number, dy: number) {\r\n    stage.trackballControls.rotateComponent(dx, dy)\r\n  }\r\n\r\n  /**\r\n   * Move picked element to the center of the screen\r\n   * @param {Stage} stage - the stage\r\n   * @param {PickingProxy} pickingProxy - the picking data object\r\n   * @return {undefined}\r\n   */\r\n  static movePick (stage: Stage, pickingProxy: PickingProxy) {\r\n    if (pickingProxy) {\r\n      stage.animationControls.move(pickingProxy.position.clone())\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Show tooltip with information of picked element\r\n   * @param {Stage} stage - the stage\r\n   * @param {PickingProxy} pickingProxy - the picking data object\r\n   * @return {undefined}\r\n   */\r\n  static tooltipPick (stage: Stage, pickingProxy: PickingProxy) {\r\n    const tt = stage.tooltip\r\n    const sp = stage.getParameters() as any\r\n    if (sp.tooltip && pickingProxy) {\r\n      const mp = pickingProxy.mouse.position\r\n      tt.innerText = pickingProxy.getLabel()\r\n      tt.style.bottom = (window.innerHeight - mp.y + 3) + 'px'\r\n      tt.style.left = (mp.x + 3) + 'px'\r\n      tt.style.display = 'block'\r\n    } else {\r\n      tt.style.display = 'none'\r\n    }\r\n  }\r\n\r\n  static measurePick (stage: Stage, pickingProxy: PickingProxy) {\r\n    if (pickingProxy && (pickingProxy.atom || pickingProxy.bond)) {\r\n      const atom = pickingProxy.atom || pickingProxy.closestBondAtom\r\n      const sc = pickingProxy.component as StructureComponent\r\n      sc.measurePick(atom)\r\n    } else {\r\n      stage.measureClear()\r\n    }\r\n  }\r\n}\r\n\r\ntype MouseActionPreset = [ string, MouseActionCallback ][]\r\nexport const MouseActionPresets = {\r\n  default: [\r\n    [ 'scroll', MouseActions.zoomScroll ],\r\n    [ 'scroll-shift', MouseActions.focusScroll ],\r\n    [ 'scroll-ctrl', MouseActions.isolevelScroll ],\r\n    [ 'scroll-shift-ctrl', MouseActions.zoomFocusScroll ],\r\n\r\n    [ 'drag-left', MouseActions.rotateDrag ],\r\n    [ 'drag-right', MouseActions.panDrag ],\r\n    [ 'drag-ctrl-left', MouseActions.panDrag ],\r\n    [ 'drag-ctrl-right', MouseActions.zRotateDrag ],\r\n    [ 'drag-shift-left', MouseActions.zoomDrag ],\r\n    [ 'drag-middle', MouseActions.zoomFocusDrag ],\r\n\r\n    [ 'drag-ctrl-shift-right', MouseActions.panComponentDrag ],\r\n    [ 'drag-ctrl-shift-left', MouseActions.rotateComponentDrag ],\r\n\r\n    [ 'clickPick-right', MouseActions.measurePick ],\r\n    [ 'clickPick-ctrl-left', MouseActions.measurePick ],\r\n    [ 'clickPick-middle', MouseActions.movePick ],\r\n    [ 'clickPick-left', MouseActions.movePick ],\r\n    [ 'hoverPick', MouseActions.tooltipPick ]\r\n  ] as MouseActionPreset,\r\n  pymol: [\r\n    [ 'drag-left', MouseActions.rotateDrag ],\r\n    [ 'drag-middle', MouseActions.panDrag ],\r\n    [ 'drag-right', MouseActions.zoomDrag ],\r\n    [ 'scroll', MouseActions.focusScroll ],\r\n    [ 'drag-shift-right', MouseActions.focusScroll ],\r\n\r\n    [ 'clickPick-ctrl+shift-middle', MouseActions.movePick ],\r\n    [ 'hoverPick', MouseActions.tooltipPick ]\r\n  ] as MouseActionPreset,\r\n  coot: [\r\n    [ 'scroll', MouseActions.isolevelScroll ],\r\n\r\n    [ 'drag-left', MouseActions.rotateDrag ],\r\n    [ 'drag-middle', MouseActions.panDrag ],\r\n    [ 'drag-ctrl-left', MouseActions.panDrag ],\r\n    [ 'drag-right', MouseActions.zoomFocusDrag ],\r\n    [ 'drag-ctrl-right', MouseActions.focusScroll ],\r\n\r\n    [ 'clickPick-middle', MouseActions.movePick ],\r\n    [ 'hoverPick', MouseActions.tooltipPick ]\r\n  ] as MouseActionPreset,\r\n  astexviewer: [\r\n    [ 'drag-left', MouseActions.rotateDrag ],\r\n    [ 'drag-ctrl-left', MouseActions.panDrag ],\r\n    [ 'drag-shift-left', MouseActions.zoomDrag ],\r\n    [ 'scroll', MouseActions.focusScroll ],\r\n    [ 'clickPick-middle', MouseActions.movePick ],\r\n    [ 'hoverPick', MouseActions.tooltipPick ]\r\n  ] as MouseActionPreset\r\n}\r\n\r\nexport default MouseActions\r\n","/**\r\n * @file Mouse Controls\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { MouseActionPresets, MouseActionCallback } from './mouse-actions'\r\nimport Stage from '../stage/stage'\r\nimport MouseObserver from '../stage/mouse-observer'\r\n\r\nexport type MouseControlPreset = keyof typeof MouseActionPresets\r\nexport interface MouseControlsParams {\r\n  preset?: MouseControlPreset\r\n  disabled?: boolean\r\n}\r\n\r\nexport type MouseActionType = ''|'scroll'|'drag'|'click'|'doubleClick'|'hover'|'clickPick'|'hoverPick'\r\nexport interface MouseAction {\r\n  type: MouseActionType\r\n  key: number\r\n  button: number\r\n  callback: MouseActionCallback\r\n}\r\n\r\n/**\r\n * Strings to describe mouse events (including optional keyboard modifiers).\r\n * Must contain an event type: \"scroll\", \"drag\", \"click\", \"doubleClick\",\r\n * \"hover\", \"clickPick\" or \"hoverPick\". Optionally contain one or more\r\n * (seperated by plus signs) keyboard modifiers: \"alt\", \"ctrl\", \"meta\" or\r\n * \"shift\". Can contain the mouse button performing the event: \"left\",\r\n * \"middle\" or \"right\". The type, key and button parts must be seperated by\r\n * dashes.\r\n *\r\n * @example\r\n * // triggered on scroll event (no key or button)\r\n * \"scroll\"\r\n *\r\n * @example\r\n * // triggered on scroll event while shift key is pressed\r\n * \"scroll-shift\"\r\n *\r\n * @example\r\n * // triggered on drag event with left mouse button\r\n * \"drag-left\"\r\n *\r\n * @example\r\n * // triggered on drag event with right mouse button\r\n * // while ctrl and shift keys are pressed\r\n * \"drag-right-ctrl+shift\"\r\n *\r\n * @typedef {String} TriggerString\r\n */\r\n\r\n/**\r\n * Get event type, key and button\r\n * @param  {TriggerString} str - input trigger string\r\n * @return {Array} event type, key and button\r\n */\r\nfunction triggerFromString (str: string) {\r\n  const tokens = str.split(/[-+]/)\r\n\r\n  let type = ''\r\n  if (tokens.includes('scroll')) type = 'scroll'\r\n  if (tokens.includes('drag')) type = 'drag'\r\n  if (tokens.includes('click')) type = 'click'\r\n  if (tokens.includes('doubleClick')) type = 'doubleClick'\r\n  if (tokens.includes('hover')) type = 'hover'\r\n  if (tokens.includes('clickPick')) type = 'clickPick'\r\n  if (tokens.includes('hoverPick')) type = 'hoverPick'\r\n\r\n  let key = 0\r\n  if (tokens.includes('alt')) key += 1\r\n  if (tokens.includes('ctrl')) key += 2\r\n  if (tokens.includes('meta')) key += 4\r\n  if (tokens.includes('shift')) key += 8\r\n\r\n  let button = 0\r\n  if (tokens.includes('left')) button += 1\r\n  if (tokens.includes('right')) button += 2\r\n  if (tokens.includes('middle')) button += 4\r\n\r\n  return [ type, key, button ] as [ MouseActionType, number, number ]\r\n}\r\n\r\n/**\r\n * Mouse controls\r\n */\r\nclass MouseControls {\r\n  actionList: MouseAction[] = []\r\n  mouse: MouseObserver\r\n\r\n  disabled: boolean  // Flag to disable all actions\r\n\r\n  /**\r\n   * @param {Stage} stage - the stage object\r\n   * @param {Object} [params] - the parameters\r\n   * @param {String} params.preset - one of \"default\", \"pymol\", \"coot\"\r\n   * @param {String} params.disabled - flag to disable all actions\r\n   */\r\n  constructor (readonly stage: Stage, params: MouseControlsParams = {}) {\r\n    this.mouse = stage.mouseObserver\r\n    this.disabled = params.disabled || false\r\n    this.preset(params.preset || 'default')\r\n  }\r\n\r\n  run (type: MouseActionType, ...args: any[]) {\r\n    if (this.disabled) return\r\n\r\n    const key = this.mouse.key || 0\r\n    const button = this.mouse.buttons || 0\r\n\r\n    this.actionList.forEach(a => {\r\n      if (a.type === type && a.key === key && a.button === button) {\r\n        (a.callback as any)(this.stage, ...args)  // TODO\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Add a new mouse action triggered by an event, key and button combination.\r\n   * The {@link MouseActions} class provides a number of static methods for\r\n   * use as callback functions.\r\n   *\r\n   * @example\r\n   * // change ambient light intensity on mouse scroll\r\n   * // while the ctrl and shift keys are pressed\r\n   * stage.mouseControls.add( \"scroll-ctrl+shift\", function( stage, delta ){\r\n   *     var ai = stage.getParameters().ambientIntensity;\r\n   *     stage.setParameters( { ambientIntensity: Math.max( 0, ai + delta / 50 ) } );\r\n   * } );\r\n   *\r\n   * @example\r\n   * // Call the MouseActions.zoomDrag method on mouse drag events\r\n   * // with left and right mouse buttons simultaneous\r\n   * stage.mouseControls.add( \"drag-left+right\", MouseActions.zoomDrag );\r\n   *\r\n   * @param {TriggerString} triggerStr - the trigger for the action\r\n   * @param {function(stage: Stage, ...args: Any)} callback - the callback function for the action\r\n   * @return {undefined}\r\n   */\r\n  add (triggerStr: string, callback: MouseActionCallback) {\r\n    const [ type, key, button ] = triggerFromString(triggerStr)\r\n\r\n    this.actionList.push({ type, key, button, callback })\r\n  }\r\n\r\n  /**\r\n   * Remove a mouse action. The trigger string can contain an asterix (*)\r\n   * as a wildcard for any key or mouse button. When the callback function\r\n   * is given, only actions that call that function are removed.\r\n   *\r\n   * @example\r\n   * // remove actions triggered solely by a scroll event\r\n   * stage.mouseControls.remove( \"scroll\" );\r\n   *\r\n   * @example\r\n   * // remove actions triggered by a scroll event, including\r\n   * // those requiring a key pressed or mouse button used\r\n   * stage.mouseControls.remove( \"scroll-*\" );\r\n   *\r\n   * @example\r\n   * // remove actions triggered by a scroll event\r\n   * // while the shift key is pressed\r\n   * stage.mouseControls.remove( \"scroll-shift\" );\r\n   *\r\n   * @param {TriggerString} triggerStr - the trigger for the action\r\n   * @param {Function} [callback] - the callback function for the action\r\n   * @return {undefined}\r\n   */\r\n  remove (triggerStr: string, callback?: MouseActionCallback) {\r\n    const wildcard = triggerStr.includes('*')\r\n    const [ type, key, button ] = triggerFromString(triggerStr)\r\n\r\n    const actionList = this.actionList.filter(function (a) {\r\n      return !(\r\n        (a.type === type || (wildcard && type === '')) &&\r\n        (a.key === key || (wildcard && key === 0)) &&\r\n        (a.button === button || (wildcard && button === 0)) &&\r\n        (a.callback === callback || callback === undefined)\r\n      )\r\n    })\r\n\r\n    this.actionList = actionList\r\n  }\r\n\r\n  /**\r\n   * Set mouse action preset\r\n   * @param  {String} name - one of \"default\", \"pymol\", \"coot\"\r\n   * @return {undefined}\r\n   */\r\n  preset (name: MouseControlPreset) {\r\n    this.clear()\r\n\r\n    const list = MouseActionPresets[ name ] || []\r\n\r\n    list.forEach(action => this.add(action[0], action[1]))\r\n  }\r\n\r\n  /**\r\n   * Remove all mouse actions\r\n   * @return {undefined}\r\n   */\r\n  clear () {\r\n    this.actionList.length = 0\r\n  }\r\n}\r\n\r\nexport default MouseControls\r\n","/**\r\n * @file Key Actions\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Stage from '../stage/stage'\r\n\r\nexport type KeyActionCallback = (stage: Stage) => void\r\n\r\n/**\r\n * Key actions provided as static methods\r\n */\r\nclass KeyActions {\r\n  /**\r\n   * Stage auto view\r\n   */\r\n  static autoView (stage: Stage) {\r\n    stage.autoView(1000)\r\n  }\r\n\r\n  /**\r\n   * Toggle stage animations\r\n   */\r\n  static toggleAnimations (stage: Stage) {\r\n    stage.animationControls.toggle()\r\n  }\r\n\r\n  /**\r\n   * Toggle stage rocking\r\n   */\r\n  static toggleRock (stage: Stage) {\r\n    stage.toggleRock()\r\n  }\r\n\r\n  /**\r\n   * Toggle stage spinning\r\n   */\r\n  static toggleSpin (stage: Stage) {\r\n    stage.toggleSpin()\r\n  }\r\n\r\n  /**\r\n   * Toggle anti-aliasing\r\n   */\r\n  static toggleAntialiasing (stage: Stage) {\r\n    const p = stage.getParameters()\r\n    stage.setParameters({ sampleLevel: p.sampleLevel === -1 ? 0 : -1 })\r\n  }\r\n}\r\n\r\ntype KeyActionPreset = [ string, KeyActionCallback ][]\r\nexport const KeyActionPresets = {\r\n  default: [\r\n    [ 'i', KeyActions.toggleSpin ],\r\n    [ 'k', KeyActions.toggleRock ],\r\n    [ 'p', KeyActions.toggleAnimations ],\r\n    [ 'a', KeyActions.toggleAntialiasing ],\r\n    [ 'r', KeyActions.autoView ]\r\n  ] as KeyActionPreset\r\n}\r\n\r\nexport default KeyActions\r\n","/**\r\n * @file Key Controls\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { KeyActionPresets, KeyActionCallback } from './key-actions'\r\nimport Stage from '../stage/stage'\r\n\r\nexport type KeyControlPreset = keyof typeof KeyActionPresets\r\nexport interface KeyControlsParams {\r\n  preset?: KeyControlPreset\r\n  disabled?: boolean\r\n}\r\n\r\nexport interface KeyAction {\r\n  key: string,\r\n  callback: KeyActionCallback\r\n}\r\n\r\n/**\r\n * Mouse controls\r\n */\r\nclass KeyControls {\r\n  actionList: KeyAction[] = []\r\n\r\n  disabled: boolean  // Flag to disable all actions\r\n\r\n  /**\r\n   * @param {Stage} stage - the stage object\r\n   * @param {Object} [params] - the parameters\r\n   * @param {String} params.preset - one of \"default\"\r\n   * @param {String} params.disabled - flag to disable all actions\r\n   */\r\n  constructor (readonly stage: Stage, params: KeyControlsParams = {}) {\r\n    this.disabled = params.disabled || false\r\n    this.preset(params.preset || 'default')\r\n  }\r\n\r\n  run (key: string) {\r\n    if (this.disabled) return\r\n\r\n    this.actionList.forEach(a => {\r\n      if (a.key === key) {\r\n        a.callback(this.stage)\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Add a key action triggered by pressing the given character.\r\n   * The {@link KeyActions} class provides a number of static methods for\r\n   * use as callback functions.\r\n   *\r\n   * @example\r\n   * // call KeyActions.toggleRock when \"k\" is pressed\r\n   * stage.keyControls.remove( \"k\", KeyActions.toggleRock );\r\n   *\r\n   * @param {Char} char - the key/character\r\n   * @param {Function} callback - the callback function for the action\r\n   * @return {undefined}\r\n   */\r\n  add (char: string, callback: KeyActionCallback) {\r\n    this.actionList.push({ key: char, callback })\r\n  }\r\n\r\n  /**\r\n   * Remove a key action. When the callback function\r\n   * is given, only actions that call that function are removed.\r\n   *\r\n   * @example\r\n   * // remove all actions triggered by pressing \"k\"\r\n   * stage.keyControls.remove( \"k\" );\r\n   *\r\n   * @example\r\n   * // remove action `toggleRock` triggered by pressing \"k\"\r\n   * stage.keyControls.remove( \"k\", toggleRock );\r\n   *\r\n   * @param {Char} char - the key/character\r\n   * @param {Function} [callback] - the callback function for the action\r\n   * @return {undefined}\r\n   */\r\n  remove (char: string, callback: KeyActionCallback) {\r\n\r\n    const actionList = this.actionList.filter(function (a) {\r\n      return !(\r\n        (a.key === char) &&\r\n        (a.callback === callback || callback === undefined)\r\n      )\r\n    })\r\n\r\n    this.actionList = actionList\r\n  }\r\n\r\n  /**\r\n   * Set key action preset\r\n   * @param  {String} name - one of \"default\"\r\n   * @return {undefined}\r\n   */\r\n  preset (name: KeyControlPreset) {\r\n    this.clear()\r\n\r\n    const list = KeyActionPresets[ name ] || []\r\n\r\n    list.forEach(action => this.add(action[0], action[1]))\r\n  }\r\n\r\n  /**\r\n   * Remove all key actions\r\n   * @return {undefined}\r\n   */\r\n  clear () {\r\n    this.actionList.length = 0\r\n  }\r\n}\r\n\r\nexport default KeyControls\r\n","/**\r\n * @file Picking Behavior\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Stage from './stage'\r\nimport MouseObserver from './mouse-observer'\r\nimport Viewer from '../viewer/viewer'\r\nimport MouseControls from '../controls/mouse-controls'\r\n\r\nclass PickingBehavior {\r\n  viewer: Viewer\r\n  mouse: MouseObserver\r\n  controls: MouseControls\r\n\r\n  constructor (readonly stage: Stage) {\r\n    this.stage = stage\r\n    this.mouse = stage.mouseObserver\r\n    this.controls = stage.mouseControls\r\n\r\n    this.mouse.signals.clicked.add(this._onClick, this)\r\n    this.mouse.signals.hovered.add(this._onHover, this)\r\n  }\r\n\r\n  _onClick (x: number, y: number) {\r\n    const pickingProxy = this.stage.pickingControls.pick(x, y)\r\n    this.stage.signals.clicked.dispatch(pickingProxy)\r\n    this.controls.run('clickPick', pickingProxy)\r\n  }\r\n\r\n  _onHover (x: number, y: number) {\r\n    const pickingProxy = this.stage.pickingControls.pick(x, y)\r\n    if (pickingProxy && this.mouse.down.equals(this.mouse.position)) {\r\n      this.stage.transformComponent = pickingProxy.component\r\n      this.stage.transformAtom = pickingProxy.atom\r\n    }\r\n    this.stage.signals.hovered.dispatch(pickingProxy)\r\n    this.controls.run('hoverPick', pickingProxy)\r\n  }\r\n\r\n  dispose () {\r\n    this.mouse.signals.clicked.remove(this._onClick, this)\r\n    this.mouse.signals.hovered.remove(this._onHover, this)\r\n  }\r\n}\r\n\r\nexport default PickingBehavior\r\n","/**\r\n * @file Mouse Behavior\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Stage from './stage'\r\nimport MouseObserver from './mouse-observer'\r\nimport Viewer from '../viewer/viewer'\r\nimport MouseControls from '../controls/mouse-controls'\r\n\r\nclass MouseBehavior {\r\n  viewer: Viewer\r\n  mouse: MouseObserver\r\n  controls: MouseControls\r\n  domElement: HTMLCanvasElement\r\n\r\n  constructor (readonly stage: Stage) {\r\n    this.stage = stage\r\n    this.mouse = stage.mouseObserver\r\n    this.controls = stage.mouseControls\r\n\r\n    this.mouse.signals.moved.add(this._onMove, this)\r\n    this.mouse.signals.scrolled.add(this._onScroll, this)\r\n    this.mouse.signals.dragged.add(this._onDrag, this)\r\n    this.mouse.signals.clicked.add(this._onClick, this)\r\n    this.mouse.signals.hovered.add(this._onHover, this)\r\n    this.mouse.signals.doubleClicked.add(this._onDblclick, this)\r\n  }\r\n\r\n  _onMove (/* x, y */) {\r\n    this.stage.tooltip.style.display = 'none'\r\n  }\r\n\r\n  _onScroll (delta: number) {\r\n    this.controls.run('scroll', delta)\r\n  }\r\n\r\n  _onDrag (dx: number, dy: number) {\r\n    this.controls.run('drag', dx, dy)\r\n  }\r\n\r\n  _onClick (x: number, y: number) {\r\n    this.controls.run('click', x, y)\r\n  }\r\n\r\n  _onDblclick (x: number, y: number) {\r\n    this.controls.run('doubleClick', x, y)\r\n  }\r\n\r\n  _onHover (x: number, y: number) {\r\n    this.controls.run('hover', x, y)\r\n  }\r\n\r\n  dispose () {\r\n    this.mouse.signals.moved.remove(this._onMove, this)\r\n    this.mouse.signals.scrolled.remove(this._onScroll, this)\r\n    this.mouse.signals.dragged.remove(this._onDrag, this)\r\n    this.mouse.signals.clicked.remove(this._onClick, this)\r\n    this.mouse.signals.hovered.remove(this._onHover, this)\r\n  }\r\n}\r\n\r\nexport default MouseBehavior\r\n","/**\r\n * @file Animation Behavior\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Stage from './stage'\r\nimport Viewer from '../viewer/viewer'\r\nimport Stats from '../viewer/stats'\r\nimport AnimationControls from '../controls/animation-controls'\r\n\r\nclass AnimationBehavior {\r\n  viewer: Viewer\r\n  animationControls: AnimationControls\r\n\r\n  constructor (readonly stage: Stage) {\r\n    this.viewer = stage.viewer\r\n    this.animationControls = stage.animationControls\r\n\r\n    this.viewer.signals.ticked.add(this._onTick, this)\r\n  }\r\n\r\n  _onTick (stats: Stats) {\r\n    this.animationControls.run(stats)\r\n  }\r\n\r\n  dispose () {\r\n    this.viewer.signals.ticked.remove(this._onTick, this)\r\n  }\r\n}\r\n\r\nexport default AnimationBehavior\r\n","/**\r\n * @file Key Behavior\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { SupportsPassiveEventHandler } from '../globals'\r\nimport Stage from './stage'\r\nimport Viewer from '../viewer/viewer'\r\nimport KeyControls from '../controls/key-controls'\r\n\r\nconst passive = SupportsPassiveEventHandler ? { passive: true } : false\r\n\r\nclass KeyBehavior {\r\n  viewer: Viewer\r\n  controls: KeyControls\r\n  domElement: HTMLCanvasElement\r\n\r\n  /**\r\n   * @param {Stage} stage - the stage object\r\n   */\r\n  constructor (readonly stage: Stage) {\r\n    this.stage = stage\r\n    this.controls = stage.keyControls\r\n    this.domElement = stage.viewer.renderer.domElement\r\n\r\n    // ensure the domElement is focusable\r\n    this.domElement.setAttribute('tabIndex', '-1')\r\n    this.domElement.style.outline = 'none'\r\n\r\n    this._focusDomElement = this._focusDomElement.bind(this)\r\n    this._onKeydown = this._onKeydown.bind(this)\r\n    this._onKeyup = this._onKeyup.bind(this)\r\n    this._onKeypress = this._onKeypress.bind(this)\r\n\r\n    this.domElement.addEventListener('mousedown', this._focusDomElement)\r\n    this.domElement.addEventListener('touchstart', this._focusDomElement, passive as any)  // TODO\r\n    this.domElement.addEventListener('keydown', this._onKeydown)\r\n    this.domElement.addEventListener('keyup', this._onKeyup)\r\n    this.domElement.addEventListener('keypress', this._onKeypress)\r\n  }\r\n\r\n  /**\r\n   * handle key down\r\n   * @param  {Event} event - key event\r\n   * @return {undefined}\r\n   */\r\n  _onKeydown (/* event */) {\r\n    // console.log( \"down\", event.keyCode, String.fromCharCode( event.keyCode ) );\r\n  }\r\n\r\n  /**\r\n   * handle key up\r\n   * @param  {Event} event - key event\r\n   * @return {undefined}\r\n   */\r\n  _onKeyup (/* event */) {\r\n    // console.log( \"up\", event.keyCode, String.fromCharCode( event.keyCode ) );\r\n  }\r\n\r\n  /**\r\n   * handle key press\r\n   * @param  {Event} event - key event\r\n   * @return {undefined}\r\n   */\r\n  _onKeypress (event: KeyboardEvent) {\r\n    // console.log( \"press\", event.keyCode, String.fromCharCode( event.keyCode ) );\r\n    let pressedKey: string;\r\n    if (\"key\" in KeyboardEvent.prototype) {\r\n      pressedKey = event.key;\r\n    // some mobile browsers don't support this attribute\r\n    } else {\r\n      pressedKey = String.fromCharCode(event.which || event.keyCode);\r\n    }\r\n    this.controls.run(pressedKey);\r\n  }\r\n\r\n  _focusDomElement () {\r\n    this.domElement.focus()\r\n  }\r\n\r\n  dispose () {\r\n    this.domElement.removeEventListener('mousedown', this._focusDomElement)\r\n    this.domElement.removeEventListener('touchstart', this._focusDomElement, passive as any)  // TODO\r\n    this.domElement.removeEventListener('keydown', this._onKeypress)\r\n    this.domElement.removeEventListener('keyup', this._onKeypress)\r\n    this.domElement.removeEventListener('keypress', this._onKeypress)\r\n  }\r\n}\r\n\r\nexport default KeyBehavior\r\n","/**\r\n * @file Annotation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector2, Vector3 } from 'three'\r\n\r\nimport { defaults } from '../utils'\r\nimport { smoothstep } from '../math/math-utils'\r\nimport Stage from '../stage/stage'\r\nimport Viewer from '../viewer/viewer'\r\nimport Component from './component'\r\n\r\nexport interface AnnotationParams {\r\n  offsetX?: number\r\n  offsetY?: number\r\n  visible?: boolean\r\n}\r\n\r\n/**\r\n * Annotation HTML element floating on top of a position rendered in 3d\r\n */\r\nexport default class Annotation {\r\n  offsetX: number\r\n  offsetY: number\r\n  visible: boolean\r\n\r\n  stage: Stage\r\n  viewer: Viewer\r\n  element: HTMLElement\r\n\r\n  private _viewerPosition: Vector3\r\n  private _canvasPosition: Vector2\r\n  private _cameraPosition: Vector3\r\n  private _clientRect: ClientRect\r\n\r\n  /**\r\n   * @param {Component} component - the associated component\r\n   * @param {Vector3} position - position in 3d\r\n   * @param {String|Element} content - HTML content\r\n   * @param {Object} [params] - parameters\r\n   * @param {Integer} params.offsetX - 2d offset in x direction\r\n   * @param {Integer} params.offsetY - 2d offset in y direction\r\n   * @param {Boolean} params.visible - visibility flag\r\n   */\r\n  constructor (readonly component: Component, readonly position: Vector3, content: string|HTMLElement, params: AnnotationParams = {}) {\r\n    this.offsetX = defaults(params.offsetX, 0)\r\n    this.offsetY = defaults(params.offsetY, 0)\r\n    this.visible = defaults(params.visible, true)\r\n\r\n    this.stage = component.stage\r\n    this.viewer = component.stage.viewer\r\n\r\n    this._viewerPosition = new Vector3()\r\n    this._updateViewerPosition()\r\n    this._canvasPosition = new Vector2()\r\n    this._cameraPosition = new Vector3()\r\n\r\n    this.element = document.createElement('div')\r\n    Object.assign(this.element.style, {\r\n      display: 'block',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      whiteSpace: 'nowrap',\r\n      left: '-10000px'\r\n    })\r\n\r\n    this.viewer.wrapper.appendChild(this.element)\r\n    this.setContent(content)\r\n    this.updateVisibility()\r\n    this.viewer.signals.rendered.add(this._update, this)\r\n    this.component.signals.matrixChanged.add(this._updateViewerPosition, this)\r\n  }\r\n\r\n  /**\r\n   * Set HTML content of the annotation\r\n   * @param {String|Element} value - HTML content\r\n   * @return {undefined}\r\n   */\r\n  setContent (value: string|HTMLElement) {\r\n    const displayValue = this.element.style.display\r\n    if (displayValue === 'none') {\r\n      this.element.style.left = '-10000px'\r\n      this.element.style.display = 'block'\r\n    }\r\n\r\n    if (value instanceof HTMLElement) {\r\n      this.element.appendChild(value)\r\n    } else {\r\n      const content = document.createElement('div')\r\n      content.innerText = value\r\n      Object.assign(content.style, {\r\n        backgroundColor: 'rgba( 0, 0, 0, 0.6 )',\r\n        color: 'lightgrey',\r\n        padding: '8px',\r\n        fontFamily: 'sans-serif',\r\n      })\r\n      this.element.appendChild(content)\r\n    }\r\n\r\n    this._clientRect = this.element.getBoundingClientRect()\r\n\r\n    if (displayValue === 'none') {\r\n      this.element.style.display = displayValue\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set visibility of the annotation\r\n   * @param {Boolean} value - visibility flag\r\n   * @return {undefined}\r\n   */\r\n  setVisibility (value: boolean) {\r\n    this.visible = value\r\n    this.updateVisibility()\r\n  }\r\n\r\n  getVisibility () {\r\n    return this.visible && this.component.parameters.visible\r\n  }\r\n\r\n  updateVisibility () {\r\n    this.element.style.display = this.getVisibility() ? 'block' : 'none'\r\n  }\r\n\r\n  _updateViewerPosition () {\r\n    this._viewerPosition\r\n      .copy(this.position)\r\n      .applyMatrix4(this.component.matrix)\r\n  }\r\n\r\n  _update () {\r\n    if (!this.getVisibility()) return\r\n\r\n    const s = this.element.style\r\n    const cp = this._canvasPosition\r\n    const vp = this._viewerPosition\r\n    const cr = this._clientRect\r\n\r\n    this._cameraPosition.copy(vp)\r\n      .add(this.viewer.translationGroup.position)\r\n      .applyMatrix4(this.viewer.rotationGroup.matrix)\r\n      .sub(this.viewer.camera.position)\r\n\r\n    if (this._cameraPosition.z < 0) {\r\n      s.display = 'none'\r\n      return\r\n    } else {\r\n      s.display = 'block'\r\n    }\r\n\r\n    const depth = this._cameraPosition.length()\r\n    const fog = this.viewer.scene.fog as any  // TODO\r\n\r\n    s.opacity = (1 - smoothstep(fog.near, fog.far, depth)).toString()\r\n    s.zIndex = (Math.round((fog.far - depth) * 100)).toString()\r\n\r\n    this.stage.viewerControls.getPositionOnCanvas(vp, cp)\r\n\r\n    s.bottom = (this.offsetX + cp.y + cr.height / 2) + 'px'\r\n    s.left = (this.offsetY + cp.x - cr.width / 2) + 'px'\r\n  }\r\n\r\n  /**\r\n   * Safely remove the annotation\r\n   * @return {undefined}\r\n   */\r\n  dispose () {\r\n    this.viewer.wrapper.removeChild(this.element)\r\n    this.viewer.signals.ticked.remove(this._update, this)\r\n    this.component.signals.matrixChanged.remove(this._updateViewerPosition, this)\r\n  }\r\n}","/**\r\n * @file Component Controls\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3, Matrix4, Quaternion } from 'three'\r\nimport * as signalsWrapper from 'signals'\r\n\r\nimport { ensureVector3 } from '../utils'\r\nimport Component from '../component/component'\r\nimport Stage from '../stage/stage'\r\nimport Viewer from '../viewer/viewer'\r\n\r\nconst tmpRotateMatrix = new Matrix4()\r\nconst tmpRotateVector = new Vector3()\r\nconst tmpRotateQuaternion = new Quaternion()\r\n\r\n/**\r\n * Component controls\r\n */\r\nclass ComponentControls {\r\n  signals = {\r\n    changed: new signalsWrapper.Signal()\r\n  }\r\n\r\n  stage: Stage\r\n  viewer: Viewer\r\n\r\n  /**\r\n   * @param  {Component} component - the component object\r\n   */\r\n  constructor (readonly component: Component) {\r\n    this.stage = component.stage\r\n    this.viewer = component.stage.viewer\r\n  }\r\n\r\n  /**\r\n   * component center position\r\n   * @type {Vector3}\r\n   */\r\n  get position () {\r\n    return this.component.position\r\n  }\r\n\r\n  /**\r\n   * component rotation\r\n   * @type {Quaternion}\r\n   */\r\n  get rotation () {\r\n    return this.component.quaternion\r\n  }\r\n\r\n  /**\r\n   * Trigger render and emit changed event\r\n   * @emits {ComponentControls.signals.changed}\r\n   * @return {undefined}\r\n   */\r\n  changed () {\r\n    this.component.updateMatrix()\r\n    this.viewer.requestRender()\r\n    this.signals.changed.dispatch()\r\n  }\r\n\r\n  /**\r\n   * spin component on axis\r\n   * @param  {Vector3|Array} axis - rotation axis\r\n   * @param  {Number} angle - amount to spin\r\n   * @return {undefined}\r\n   */\r\n  spin (axis: Vector3, angle: number) {\r\n    tmpRotateMatrix.getInverse(this.viewer.rotationGroup.matrix)\r\n    tmpRotateVector\r\n      .copy(ensureVector3(axis)).applyMatrix4(tmpRotateMatrix)\r\n\r\n    tmpRotateMatrix.extractRotation(this.component.transform)\r\n    tmpRotateMatrix.premultiply(this.viewer.rotationGroup.matrix)\r\n    tmpRotateMatrix.getInverse(tmpRotateMatrix)\r\n\r\n    tmpRotateVector.copy(ensureVector3(axis))\r\n    tmpRotateVector.applyMatrix4(tmpRotateMatrix)\r\n    tmpRotateMatrix.makeRotationAxis(tmpRotateVector, angle)\r\n    tmpRotateQuaternion.setFromRotationMatrix(tmpRotateMatrix)\r\n\r\n    this.component.quaternion.premultiply(tmpRotateQuaternion)\r\n    this.changed()\r\n  }\r\n}\r\n\r\nexport default ComponentControls\r\n","/**\r\n * @file Radius Factory\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { defaults } from '../utils'\r\nimport { NucleicBackboneAtoms } from '../structure/structure-constants'\r\nimport AtomProxy from '../proxy/atom-proxy'\r\n\r\nexport const RadiusFactoryTypes = {\r\n  '': '',\r\n  'vdw': 'by vdW radius',\r\n  'covalent': 'by covalent radius',\r\n  'sstruc': 'by secondary structure',\r\n  'bfactor': 'by bfactor',\r\n  'size': 'size',\r\n  'data': 'data',\r\n  'explicit' : 'explicit'\r\n}\r\nexport type RadiusType = keyof typeof RadiusFactoryTypes\r\n\r\nexport interface RadiusParams {\r\n  type?: RadiusType\r\n  scale?: number\r\n  size?: number\r\n  data?: { [k: number]: number }\r\n}\r\n\r\nclass RadiusFactory {\r\n  max = 10\r\n\r\n  static types = RadiusFactoryTypes\r\n\r\n  readonly type: RadiusType\r\n  readonly scale: number\r\n  readonly size: number\r\n  readonly data: { [k: number]: number }\r\n\r\n  constructor (params: RadiusParams = {}) {\r\n    this.type = defaults(params.type, 'size')\r\n    this.scale = defaults(params.scale, 1)\r\n    this.size = defaults(params.size, 1)\r\n    this.data = defaults(params.data, {})\r\n  }\r\n\r\n  atomRadius (a: AtomProxy) {\r\n    let r\r\n\r\n    switch (this.type) {\r\n      case 'vdw':\r\n        r = a.vdw\r\n        break\r\n\r\n      case 'covalent':\r\n        r = a.covalent\r\n        break\r\n\r\n      case 'bfactor':\r\n        r = a.bfactor || 1.0\r\n        break\r\n\r\n      case 'sstruc':\r\n        const sstruc = a.sstruc\r\n        if (sstruc === 'h') {\r\n          r = 0.25\r\n        } else if (sstruc === 'g') {\r\n          r = 0.25\r\n        } else if (sstruc === 'i') {\r\n          r = 0.25\r\n        } else if (sstruc === 'e') {\r\n          r = 0.25\r\n        } else if (sstruc === 'b') {\r\n          r = 0.25\r\n        } else if (NucleicBackboneAtoms.includes(a.atomname)) {\r\n          r = 0.4\r\n        } else {\r\n          r = 0.1\r\n        }\r\n        break\r\n\r\n      case 'data':\r\n        r = defaults(this.data[ a.index ], 1.0)\r\n        break\r\n\r\n      case 'explicit':\r\n        // defaults is inappropriate as AtomProxy.radius returns\r\n        // null for missing radii\r\n        r = a.radius\r\n        if (r === null) r = this.size\r\n        break\r\n\r\n      default:\r\n        r = this.size\r\n        break\r\n    }\r\n\r\n    return Math.min(r * this.scale, this.max)\r\n  }\r\n\r\n}\r\n\r\nexport default RadiusFactory\r\n","/**\r\n * @file Principal Axes\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3, Matrix4, Quaternion } from 'three'\r\n\r\nimport {\r\n    Matrix, meanRows, subRows, transpose, multiplyABt, svd\r\n} from './matrix-utils'\r\nimport { projectPointOnVector } from './vector-utils'\r\nimport Structure from '../structure/structure'\r\nimport AtomProxy from '../proxy/atom-proxy'\r\n\r\nconst negateVector = new Vector3(-1, -1, -1)\r\nconst tmpMatrix = new Matrix4()\r\n\r\n/**\r\n * Principal axes\r\n */\r\nclass PrincipalAxes {\r\n  begA: Vector3\r\n  endA: Vector3\r\n  begB: Vector3\r\n  endB: Vector3\r\n  begC: Vector3\r\n  endC: Vector3\r\n\r\n  center: Vector3\r\n\r\n  vecA: Vector3\r\n  vecB: Vector3\r\n  vecC: Vector3\r\n\r\n  normVecA: Vector3\r\n  normVecB: Vector3\r\n  normVecC: Vector3\r\n\r\n  /**\r\n   * @param  {Matrix} points - 3 by N matrix\r\n   */\r\n  constructor (points: Matrix) {\r\n    // console.time( \"PrincipalAxes\" );\r\n\r\n    const n = points.rows\r\n    const n3 = n / 3\r\n    const pointsT = new Matrix(n, 3)\r\n    const A = new Matrix(3, 3)\r\n    const W = new Matrix(1, 3)\r\n    const U = new Matrix(3, 3)\r\n    const V = new Matrix(3, 3)\r\n\r\n        // calculate\r\n    const mean = meanRows(points)\r\n    subRows(points, mean)\r\n    transpose(pointsT, points)\r\n    multiplyABt(A, pointsT, pointsT)\r\n    svd(A, W, U, V)\r\n\r\n    // console.log( points, pointsT, mean )\r\n    // console.log( n, A, W, U, V );\r\n\r\n    // center\r\n    const vm = new Vector3(mean[0], mean[1], mean[2])\r\n\r\n    // normalized\r\n    const van = new Vector3(U.data[0], U.data[3], U.data[6])\r\n    const vbn = new Vector3(U.data[1], U.data[4], U.data[7])\r\n    const vcn = new Vector3(U.data[2], U.data[5], U.data[8])\r\n\r\n    // scaled\r\n    const va = van.clone().multiplyScalar(Math.sqrt(W.data[0] / n3))\r\n    const vb = vbn.clone().multiplyScalar(Math.sqrt(W.data[1] / n3))\r\n    const vc = vcn.clone().multiplyScalar(Math.sqrt(W.data[2] / n3))\r\n\r\n    // points\r\n    this.begA = vm.clone().sub(va)\r\n    this.endA = vm.clone().add(va)\r\n    this.begB = vm.clone().sub(vb)\r\n    this.endB = vm.clone().add(vb)\r\n    this.begC = vm.clone().sub(vc)\r\n    this.endC = vm.clone().add(vc)\r\n\r\n    //\r\n\r\n    this.center = vm\r\n\r\n    this.vecA = va\r\n    this.vecB = vb\r\n    this.vecC = vc\r\n\r\n    this.normVecA = van\r\n    this.normVecB = vbn\r\n    this.normVecC = vcn\r\n\r\n    // console.timeEnd( \"PrincipalAxes\" );\r\n  }\r\n\r\n  /**\r\n   * Get the basis matrix descriping the axes\r\n   * @param  {Matrix4} [optionalTarget] - target object\r\n   * @return {Matrix4} the basis\r\n   */\r\n  getBasisMatrix (optionalTarget = new Matrix4()) {\r\n    const basis = optionalTarget\r\n\r\n    basis.makeBasis(this.normVecB, this.normVecA, this.normVecC)\r\n    if (basis.determinant() < 0) {\r\n      basis.scale(negateVector)\r\n    }\r\n\r\n    return basis\r\n  }\r\n\r\n  /**\r\n   * Get a quaternion descriping the axes rotation\r\n   * @param  {Quaternion} [optionalTarget] - target object\r\n   * @return {Quaternion} the rotation\r\n   */\r\n  getRotationQuaternion (optionalTarget = new Quaternion()) {\r\n    const q = optionalTarget\r\n    q.setFromRotationMatrix(this.getBasisMatrix(tmpMatrix))\r\n\r\n    return q.inverse()\r\n  }\r\n\r\n  /**\r\n   * Get the scale/length for each dimension for a box around the axes\r\n   * to enclose the atoms of a structure\r\n   * @param  {Structure|StructureView} structure - the structure\r\n   * @return {{d1a: Number, d2a: Number, d3a: Number, d1b: Number, d2b: Number, d3b: Number}} scale\r\n   */\r\n  getProjectedScaleForAtoms (structure: Structure) {\r\n    let d1a = -Infinity\r\n    let d1b = -Infinity\r\n    let d2a = -Infinity\r\n    let d2b = -Infinity\r\n    let d3a = -Infinity\r\n    let d3b = -Infinity\r\n\r\n    const p = new Vector3()\r\n    const t = new Vector3()\r\n\r\n    const center = this.center\r\n    const ax1 = this.normVecA\r\n    const ax2 = this.normVecB\r\n    const ax3 = this.normVecC\r\n\r\n    structure.eachAtom(function (ap: AtomProxy) {\r\n      projectPointOnVector(p.copy(ap as any), ax1, center)  // TODO\r\n      const dp1 = t.subVectors(p, center).normalize().dot(ax1)\r\n      const dt1 = p.distanceTo(center)\r\n      if (dp1 > 0) {\r\n        if (dt1 > d1a) d1a = dt1\r\n      } else {\r\n        if (dt1 > d1b) d1b = dt1\r\n      }\r\n\r\n      projectPointOnVector(p.copy(ap as any), ax2, center)\r\n      const dp2 = t.subVectors(p, center).normalize().dot(ax2)\r\n      const dt2 = p.distanceTo(center)\r\n      if (dp2 > 0) {\r\n        if (dt2 > d2a) d2a = dt2\r\n      } else {\r\n        if (dt2 > d2b) d2b = dt2\r\n      }\r\n\r\n      projectPointOnVector(p.copy(ap as any), ax3, center)\r\n      const dp3 = t.subVectors(p, center).normalize().dot(ax3)\r\n      const dt3 = p.distanceTo(center)\r\n      if (dp3 > 0) {\r\n        if (dt3 > d3a) d3a = dt3\r\n      } else {\r\n        if (dt3 > d3b) d3b = dt3\r\n      }\r\n    })\r\n\r\n    return {\r\n      d1a: d1a,\r\n      d2a: d2a,\r\n      d3a: d3a,\r\n      d1b: -d1b,\r\n      d2b: -d2b,\r\n      d3b: -d3b\r\n    }\r\n  }\r\n}\r\n\r\nexport default PrincipalAxes\r\n","/**\r\n * @file Filtered Volume\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { defaults } from '../utils'\r\nimport Volume from './volume'\r\nimport { Box3, Matrix4, Matrix3, Vector3 } from 'three';\r\n\r\nclass FilteredVolume {\r\n  volume: Volume\r\n  data: Float32Array\r\n  position: Float32Array\r\n  atomindex: Int32Array\r\n  _filterHash: string\r\n  _dataBuffer: ArrayBuffer\r\n  _positionBuffer: ArrayBuffer\r\n  _atomindexBuffer: ArrayBuffer\r\n  getValueForSigma: typeof Volume.prototype.getValueForSigma\r\n  getSigmaForValue: typeof Volume.prototype.getSigmaForValue\r\n  getDataAtomindex: typeof Volume.prototype.getDataAtomindex\r\n  getDataPosition: typeof Volume.prototype.getDataPosition\r\n  getDataColor: typeof Volume.prototype.getDataColor\r\n  getDataPicking: typeof Volume.prototype.getDataPicking\r\n  getDataSize: typeof Volume.prototype.getDataSize\r\n\r\n\r\n  constructor (volume: Volume, minValue?: number, maxValue?: number, outside?: boolean) {\r\n    this.volume = volume\r\n    this.setFilter(minValue, maxValue, outside)\r\n  }\r\n\r\n  get header () { return this.volume.header }\r\n  get matrix (): Matrix4 { return this.volume.matrix }\r\n  get normalMatrix (): Matrix3 { return this.volume.normalMatrix }\r\n  get inverseMatrix (): Matrix4 { return this.volume.inverseMatrix }\r\n  get center (): Vector3 { return this.volume.center }\r\n  get boundingBox (): Box3 { return this.volume.boundingBox }\r\n  get min () { return this.volume.min }\r\n  get max () { return this.volume.max }\r\n  get mean () { return this.volume.mean }\r\n  get rms () { return this.volume.rms }\r\n\r\n  _getFilterHash (minValue: number, maxValue: number, outside: boolean) {\r\n    return JSON.stringify([ minValue, maxValue, outside ])\r\n  }\r\n\r\n  setFilter (minValue: number|undefined, maxValue: number|undefined, outside: boolean|undefined) {\r\n    if (isNaN(<number>minValue) && this.header) {\r\n      minValue = this.header.DMEAN + 2.0 * this.header.ARMS\r\n    }\r\n\r\n    minValue = (minValue !== undefined && !isNaN(minValue)) ? minValue : -Infinity\r\n    maxValue = defaults(maxValue, Infinity) as number\r\n    outside = defaults(outside, false) as boolean\r\n\r\n    const data = this.volume.data\r\n    const position = this.volume.position\r\n    const atomindex = this.volume.atomindex\r\n\r\n    const filterHash = this._getFilterHash(minValue, maxValue, outside)\r\n\r\n    if (filterHash === this._filterHash) {\r\n      // already filtered\r\n      return\r\n    } else if (minValue === -Infinity && maxValue === Infinity) {\r\n      this.data = data\r\n      this.position = position\r\n      this.atomindex = atomindex!\r\n    } else {\r\n      const n = data.length\r\n\r\n      if (!this._dataBuffer) {\r\n        // ArrayBuffer for re-use as Float32Array backend\r\n\r\n        this._dataBuffer = new ArrayBuffer(n * 4)\r\n        this._positionBuffer = new ArrayBuffer(n * 3 * 4)\r\n        if (atomindex) this._atomindexBuffer = new ArrayBuffer(n * 4)\r\n      }\r\n\r\n      const filteredData = new Float32Array(this._dataBuffer)\r\n      const filteredPosition = new Float32Array(this._positionBuffer)\r\n      let filteredAtomindex\r\n      if (atomindex) filteredAtomindex = new Uint32Array(this._atomindexBuffer)\r\n\r\n      let j = 0\r\n\r\n      for (let i = 0; i < n; ++i) {\r\n        const i3 = i * 3\r\n        const v = data[ i ]\r\n\r\n        if ((!outside && v >= minValue && v <= maxValue) ||\r\n            (outside && (v < minValue || v > maxValue))\r\n        ) {\r\n          const j3 = j * 3\r\n\r\n          filteredData[ j ] = v\r\n\r\n          filteredPosition[ j3 + 0 ] = position[ i3 + 0 ]\r\n          filteredPosition[ j3 + 1 ] = position[ i3 + 1 ]\r\n          filteredPosition[ j3 + 2 ] = position[ i3 + 2 ]\r\n\r\n          if (atomindex && filteredAtomindex) filteredAtomindex[ j ] = atomindex[ i ]\r\n\r\n          j += 1\r\n        }\r\n      }\r\n\r\n      // set views\r\n\r\n      this.data = new Float32Array(this._dataBuffer, 0, j)\r\n      this.position = new Float32Array(this._positionBuffer, 0, j * 3)\r\n      if (atomindex) this.atomindex = new Int32Array(this._atomindexBuffer, 0, j)\r\n    }\r\n\r\n    this._filterHash = filterHash\r\n  }\r\n}\r\n\r\nFilteredVolume.prototype.getValueForSigma = Volume.prototype.getValueForSigma\r\nFilteredVolume.prototype.getSigmaForValue = Volume.prototype.getSigmaForValue\r\n\r\nFilteredVolume.prototype.getDataAtomindex = Volume.prototype.getDataAtomindex\r\nFilteredVolume.prototype.getDataPosition = Volume.prototype.getDataPosition\r\nFilteredVolume.prototype.getDataColor = Volume.prototype.getDataColor\r\nFilteredVolume.prototype.getDataPicking = Volume.prototype.getDataPicking\r\nFilteredVolume.prototype.getDataSize = Volume.prototype.getDataSize\r\n\r\nexport default FilteredVolume\r\n","/**\r\n * @file Bond Hash\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport BondStore from './bond-store'\r\nimport { createAdjacencyList } from '../utils/adjacency-list'\r\n\r\nclass BondHash {\r\n  countArray: Uint8Array\r\n  offsetArray: Int32Array\r\n  indexArray: Int32Array\r\n\r\n  constructor (bondStore: BondStore, atomCount: number) {\r\n    const al = createAdjacencyList({\r\n      nodeArray1: bondStore.atomIndex1,\r\n      nodeArray2: bondStore.atomIndex2,\r\n      edgeCount: bondStore.count,\r\n      nodeCount: atomCount\r\n    })\r\n\r\n    this.countArray = al.countArray\r\n    this.offsetArray = al.offsetArray\r\n    this.indexArray = al.indexArray\r\n  }\r\n}\r\n\r\nexport default BondHash\r\n","/**\r\n * @file Bond Store\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Store, { StoreField } from './store'\r\nimport AtomProxy from '../proxy/atom-proxy'\r\n\r\n/**\r\n * Bond store\r\n */\r\nexport default class BondStore extends Store {\r\n  atomIndex1: Uint32Array\r\n  atomIndex2: Uint32Array\r\n  bondOrder: Uint8Array\r\n\r\n  get _defaultFields () {\r\n    return [\r\n      [ 'atomIndex1', 1, 'int32' ],\r\n      [ 'atomIndex2', 1, 'int32' ],\r\n      [ 'bondOrder', 1, 'int8' ]\r\n    ] as StoreField[]\r\n  }\r\n\r\n  addBond (atom1: AtomProxy, atom2: AtomProxy, bondOrder?: number) {\r\n    this.growIfFull()\r\n\r\n    const i = this.count\r\n    const ai1 = atom1.index\r\n    const ai2 = atom2.index\r\n\r\n    if (ai1 < ai2) {\r\n      this.atomIndex1[ i ] = ai1\r\n      this.atomIndex2[ i ] = ai2\r\n    } else {\r\n      this.atomIndex2[ i ] = ai1\r\n      this.atomIndex1[ i ] = ai2\r\n    }\r\n    if (bondOrder) this.bondOrder[ i ] = bondOrder\r\n\r\n    this.count += 1\r\n  }\r\n\r\n  addBondIfConnected (atom1: AtomProxy, atom2: AtomProxy, bondOrder?: number) {\r\n    if (atom1.connectedTo(atom2)) {\r\n      this.addBond(atom1, atom2, bondOrder)\r\n      return true\r\n    }\r\n\r\n    return false\r\n  }\r\n}","/**\r\n * @file Atom Store\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Store, { StoreField } from './store'\r\n\r\n/**\r\n * Atom store\r\n */\r\nexport default class AtomStore extends Store {\r\n  residueIndex: Uint32Array\r\n  atomTypeId: Uint16Array\r\n\r\n  x: Float32Array\r\n  y: Float32Array\r\n  z: Float32Array\r\n  serial: Int32Array\r\n  bfactor: Float32Array\r\n  altloc: Uint8Array\r\n  occupancy: Float32Array\r\n\r\n  partialCharge?: Float32Array\r\n  formalCharge?: Uint8Array\r\n\r\n  get _defaultFields () {\r\n    return [\r\n      [ 'residueIndex', 1, 'uint32' ],\r\n      [ 'atomTypeId', 1, 'uint16' ],\r\n\r\n      [ 'x', 1, 'float32' ],\r\n      [ 'y', 1, 'float32' ],\r\n      [ 'z', 1, 'float32' ],\r\n      [ 'serial', 1, 'int32' ],\r\n      [ 'bfactor', 1, 'float32' ],\r\n      [ 'altloc', 1, 'uint8' ],\r\n      [ 'occupancy', 1, 'float32' ]\r\n    ] as StoreField[]\r\n  }\r\n\r\n  setAltloc (i: number, str: string) {\r\n    this.altloc[ i ] = str.charCodeAt(0)\r\n  }\r\n\r\n  getAltloc (i: number) {\r\n    const code = this.altloc[ i ]\r\n    return code ? String.fromCharCode(code) : ''\r\n  }\r\n}","/**\r\n * @file Residue Store\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Store, { StoreField } from './store'\r\n\r\n/**\r\n * Residue store\r\n */\r\nexport default class ResidueStore extends Store {\r\n  chainIndex: Uint32Array\r\n  atomOffset: Uint32Array\r\n  atomCount: Uint32Array\r\n  residueTypeId: Uint16Array\r\n\r\n  resno: Uint32Array\r\n  sstruc: Uint8Array\r\n  inscode: Uint8Array\r\n\r\n  get _defaultFields () {\r\n    return [\r\n      [ 'chainIndex', 1, 'uint32' ],\r\n      [ 'atomOffset', 1, 'uint32' ],\r\n      [ 'atomCount', 1, 'uint32' ],\r\n      [ 'residueTypeId', 1, 'uint16' ],\r\n\r\n      [ 'resno', 1, 'int32' ],\r\n      [ 'sstruc', 1, 'uint8' ],\r\n      [ 'inscode', 1, 'uint8' ]\r\n    ] as StoreField[]\r\n  }\r\n\r\n  setSstruc (i: number, str: string) {\r\n    this.sstruc[ i ] = str.charCodeAt(0)\r\n  }\r\n\r\n  getSstruc (i: number) {\r\n    const code = this.sstruc[ i ]\r\n    return code ? String.fromCharCode(code) : ''\r\n  }\r\n\r\n  setInscode (i: number, str: string) {\r\n    this.inscode[ i ] = str.charCodeAt(0)\r\n  }\r\n\r\n  getInscode (i: number) {\r\n    const code = this.inscode[ i ]\r\n    return code ? String.fromCharCode(code) : ''\r\n  }\r\n}","/**\r\n * @file Chain Store\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Store, { StoreField } from './store'\r\n\r\n/**\r\n * Chain store\r\n */\r\nexport default class ChainStore extends Store {\r\n  entityIndex: Uint16Array\r\n  modelIndex: Uint16Array\r\n  residueOffset: Uint32Array\r\n  residueCount: Uint32Array\r\n\r\n  chainname: Uint8Array\r\n  chainid: Uint8Array\r\n\r\n  get _defaultFields () {\r\n    return [\r\n      [ 'entityIndex', 1, 'uint16' ],\r\n      [ 'modelIndex', 1, 'uint16' ],\r\n      [ 'residueOffset', 1, 'uint32' ],\r\n      [ 'residueCount', 1, 'uint32' ],\r\n\r\n      [ 'chainname', 4, 'uint8' ],\r\n      [ 'chainid', 4, 'uint8' ]\r\n    ] as StoreField[]\r\n  }\r\n\r\n  setChainname (i: number, str: string) {\r\n    const j = 4 * i\r\n    this.chainname[ j ] = str.charCodeAt(0)\r\n    this.chainname[ j + 1 ] = str.charCodeAt(1)\r\n    this.chainname[ j + 2 ] = str.charCodeAt(2)\r\n    this.chainname[ j + 3 ] = str.charCodeAt(3)\r\n  }\r\n\r\n  getChainname (i: number) {\r\n    let chainname = ''\r\n    for (let k = 0; k < 4; ++k) {\r\n      const code = this.chainname[ 4 * i + k ]\r\n      if (code) {\r\n        chainname += String.fromCharCode(code)\r\n      } else {\r\n        break\r\n      }\r\n    }\r\n    return chainname\r\n  }\r\n\r\n  setChainid (i: number, str: string) {\r\n    const j = 4 * i\r\n    this.chainid[ j ] = str.charCodeAt(0)\r\n    this.chainid[ j + 1 ] = str.charCodeAt(1)\r\n    this.chainid[ j + 2 ] = str.charCodeAt(2)\r\n    this.chainid[ j + 3 ] = str.charCodeAt(3)\r\n  }\r\n\r\n  getChainid (i: number) {\r\n    let chainid = ''\r\n    for (let k = 0; k < 4; ++k) {\r\n      const code = this.chainid[ 4 * i + k ]\r\n      if (code) {\r\n        chainid += String.fromCharCode(code)\r\n      } else {\r\n        break\r\n      }\r\n    }\r\n    return chainid\r\n  }\r\n}\r\n","/**\r\n * @file Model Store\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Store, { StoreField } from './store'\r\n\r\n/**\r\n * Model store\r\n */\r\nexport default class ModelStore extends Store {\r\n\tchainOffset: Uint32Array\r\n\tchainCount: Uint32Array\r\n\r\n  get _defaultFields () {\r\n    return [\r\n      [ 'chainOffset', 1, 'uint32' ],\r\n      [ 'chainCount', 1, 'uint32' ]\r\n    ] as StoreField[]\r\n  }\r\n}","/**\r\n * @file Helixorient\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3 } from 'three'\r\n\r\nimport { ColormakerRegistry } from '../globals'\r\nimport { ColormakerParameters } from '../color/colormaker'\r\nimport { AtomPicker } from '../utils/picker'\r\nimport RadiusFactory, { RadiusParams } from '../utils/radius-factory'\r\nimport { copyArray } from '../math/array-utils'\r\nimport { projectPointOnVector } from '../math/vector-utils'\r\nimport Polymer from '../proxy/polymer'\r\n\r\nexport interface HelixIterator {\r\n  size: number\r\n  next: () => Vector3\r\n  get: (idx: number) => Vector3\r\n  reset: () => void\r\n}\r\n\r\nexport interface HelixPosition {\r\n  center: Float32Array\r\n  axis: Float32Array\r\n  bending: Float32Array\r\n  radius: Float32Array\r\n  rise: Float32Array\r\n  twist: Float32Array\r\n  resdir: Float32Array\r\n}\r\n\r\nclass Helixorient {\r\n  size: number\r\n\r\n  constructor (readonly polymer: Polymer) {\r\n    this.size = polymer.residueCount\r\n  }\r\n\r\n  getCenterIterator (smooth = 0): HelixIterator {\r\n    const center = this.getPosition().center\r\n    const size = center.length / 3\r\n\r\n    let i = 0\r\n    let j = -1\r\n\r\n    const cache = [\r\n      new Vector3(),\r\n      new Vector3(),\r\n      new Vector3(),\r\n      new Vector3()\r\n    ]\r\n\r\n    function next (this: HelixIterator) {\r\n      const vector = this.get(j)\r\n      j += 1\r\n      return vector\r\n    }\r\n\r\n    function get (idx: number) {\r\n      idx = Math.min(size - 1, Math.max(0, idx))\r\n      const v = cache[ i % 4 ]\r\n      const idx3 = 3 * idx\r\n      v.fromArray(center as any, idx3)  // TODO\r\n      if (smooth) {\r\n        const w = Math.min(smooth, idx, size - idx - 1)\r\n        for (let k = 1; k <= w; ++k) {\r\n          const l = k * 3\r\n          const t = (w + 1 - k) / (w + 1)\r\n          v.x += t * center[ idx3 - l + 0 ] + t * center[ idx3 + l + 0 ]\r\n          v.y += t * center[ idx3 - l + 1 ] + t * center[ idx3 + l + 1 ]\r\n          v.z += t * center[ idx3 - l + 2 ] + t * center[ idx3 + l + 2 ]\r\n        }\r\n        v.x /= w + 1\r\n        v.y /= w + 1\r\n        v.z /= w + 1\r\n      }\r\n      i += 1\r\n      return v\r\n    }\r\n\r\n    function reset () {\r\n      i = 0\r\n      j = -1\r\n    }\r\n\r\n    return { size, next, get, reset }\r\n  }\r\n\r\n  getColor (params: { scheme: string } & ColormakerParameters) {\r\n    const polymer = this.polymer\r\n    const structure = polymer.structure\r\n    const n = polymer.residueCount\r\n    const residueIndexStart = polymer.residueIndexStart\r\n\r\n    const col = new Float32Array(n * 3)\r\n\r\n    const p = params || {}\r\n    p.structure = structure\r\n\r\n    const colormaker = ColormakerRegistry.getScheme(p)\r\n\r\n    const rp = structure.getResidueProxy()\r\n    const ap = structure.getAtomProxy()\r\n\r\n    for (let i = 0; i < n; ++i) {\r\n      rp.index = residueIndexStart + i\r\n      ap.index = rp.traceAtomIndex\r\n\r\n      colormaker.atomColorToArray(ap, col, i * 3)\r\n    }\r\n\r\n    return {\r\n      'color': col\r\n    }\r\n  }\r\n\r\n  getPicking () {\r\n    const polymer = this.polymer\r\n    const structure = polymer.structure\r\n    const n = polymer.residueCount\r\n    const residueIndexStart = polymer.residueIndexStart\r\n\r\n    const pick = new Float32Array(n)\r\n    const rp = structure.getResidueProxy()\r\n\r\n    for (let i = 0; i < n; ++i) {\r\n      rp.index = residueIndexStart + i\r\n      pick[ i ] = rp.traceAtomIndex\r\n    }\r\n\r\n    return {\r\n      'picking': new AtomPicker(pick, structure)\r\n    }\r\n  }\r\n\r\n  getSize (params: RadiusParams) {\r\n    const polymer = this.polymer\r\n    const structure = polymer.structure\r\n    const n = polymer.residueCount\r\n    const residueIndexStart = polymer.residueIndexStart\r\n\r\n    const size = new Float32Array(n)\r\n    const radiusFactory = new RadiusFactory(params)\r\n\r\n    const rp = structure.getResidueProxy()\r\n    const ap = structure.getAtomProxy()\r\n\r\n    for (let i = 0; i < n; ++i) {\r\n      rp.index = residueIndexStart + i\r\n      ap.index = rp.traceAtomIndex\r\n      size[ i ] = radiusFactory.atomRadius(ap)\r\n    }\r\n\r\n    return { size }\r\n  }\r\n\r\n  getPosition (): HelixPosition {\r\n    const polymer = this.polymer\r\n    const structure = polymer.structure\r\n    const n = polymer.residueCount\r\n    const n3 = n - 3\r\n\r\n    const center = new Float32Array(3 * n)\r\n    const axis = new Float32Array(3 * n)\r\n    const diff = new Float32Array(n)\r\n    const radius = new Float32Array(n)\r\n    const rise = new Float32Array(n)\r\n    const twist = new Float32Array(n)\r\n    const resdir = new Float32Array(3 * n)\r\n\r\n    const r12 = new Vector3()\r\n    const r23 = new Vector3()\r\n    const r34 = new Vector3()\r\n\r\n    const diff13 = new Vector3()\r\n    const diff24 = new Vector3()\r\n\r\n    const v1 = new Vector3()\r\n    const v2 = new Vector3()\r\n    const vt = new Vector3()\r\n\r\n    const _axis = new Vector3()\r\n    const _prevAxis = new Vector3()\r\n\r\n    const _resdir = new Vector3()\r\n    const _center = new Vector3(0, 0, 0)\r\n\r\n    const type = 'trace'\r\n    const a1 = structure.getAtomProxy()\r\n    const a2 = structure.getAtomProxy(polymer.getAtomIndexByType(0, type))\r\n    const a3 = structure.getAtomProxy(polymer.getAtomIndexByType(1, type))\r\n    const a4 = structure.getAtomProxy(polymer.getAtomIndexByType(2, type))\r\n\r\n    for (let i = 0; i < n3; ++i) {\r\n      a1.index = a2.index\r\n      a2.index = a3.index\r\n      a3.index = a4.index\r\n      a4.index = polymer.getAtomIndexByType(i + 3, type)!  // TODO\r\n\r\n      const j = 3 * i\r\n\r\n      // ported from GROMACS src/tools/gmx_helixorient.c\r\n\r\n      r12.subVectors(a2 as any, a1 as any)  // TODO\r\n      r23.subVectors(a3 as any, a2 as any)  // TODO\r\n      r34.subVectors(a4 as any, a3 as any)  // TODO\r\n\r\n      diff13.subVectors(r12, r23)\r\n      diff24.subVectors(r23, r34)\r\n\r\n      _axis.crossVectors(diff13, diff24).normalize()\r\n      _axis.toArray(axis as any, j)  // TODO\r\n\r\n      if (i > 0) {\r\n        diff[ i ] = _axis.angleTo(_prevAxis)\r\n      }\r\n\r\n      const tmp = Math.cos(diff13.angleTo(diff24))\r\n      twist[ i ] = 180.0 / Math.PI * Math.acos(tmp)\r\n\r\n      const diff13Length = diff13.length()\r\n      const diff24Length = diff24.length()\r\n\r\n      radius[ i ] = (\r\n        Math.sqrt(diff24Length * diff13Length) /\r\n        // clamp, to avoid instabilities for when\r\n        // angle between diff13 and diff24 is near 0\r\n        Math.max(2.0, 2.0 * (1.0 - tmp))\r\n      )\r\n\r\n      rise[ i ] = Math.abs(r23.dot(_axis))\r\n\r\n      //\r\n\r\n      v1.copy(diff13).multiplyScalar(radius[ i ] / diff13Length)\r\n      v2.copy(diff24).multiplyScalar(radius[ i ] / diff24Length)\r\n\r\n      v1.subVectors(a2 as any, v1)  // TODO\r\n      v2.subVectors(a3 as any, v2)  // TODO\r\n\r\n      v1.toArray(center as any, j + 3)  // TODO\r\n      v2.toArray(center as any, j + 6)  // TODO\r\n\r\n      //\r\n\r\n      _resdir.subVectors(a1 as any, _center)  // TODO\r\n      _resdir.toArray(resdir as any, j)  // TODO\r\n\r\n      _prevAxis.copy(_axis)\r\n      _center.copy(v1)\r\n    }\r\n\r\n    //\r\n\r\n    // calc axis as dir of second and third center pos\r\n    // project first traceAtom onto axis to get first center pos\r\n    v1.fromArray(center as any, 3)  // TODO\r\n    v2.fromArray(center as any, 6)  // TODO\r\n    _axis.subVectors(v1, v2).normalize()\r\n      // _center.copy( res[ 0 ].getTraceAtom() );\r\n    a1.index = polymer.getAtomIndexByType(0, type)!  // TODO\r\n    _center.copy(a1 as any)  // TODO\r\n    vt.copy(a1 as any)  // TODO\r\n    projectPointOnVector(vt, _axis, v1)\r\n    vt.toArray(center as any, 0)  // TODO\r\n\r\n    // calc first resdir\r\n    _resdir.subVectors(_center, v1)\r\n    _resdir.toArray(resdir as any, 0)  // TODO\r\n\r\n    // calc axis as dir of n-1 and n-2 center pos\r\n    // project last traceAtom onto axis to get last center pos\r\n    v1.fromArray(center as any, 3 * n - 6)  // TODO\r\n    v2.fromArray(center as any, 3 * n - 9)  // TODO\r\n    _axis.subVectors(v1, v2).normalize()\r\n    // _center.copy( res[ n - 1 ].getTraceAtom() );\r\n    a1.index = polymer.getAtomIndexByType(n - 1, type)!  // TODO\r\n    _center.copy(a1 as any)  // TODO\r\n    vt.copy(a1 as any)  // TODO\r\n    projectPointOnVector(vt, _axis, v1)\r\n    vt.toArray(center as any, 3 * n - 3)  // TODO\r\n\r\n    // calc last three resdir\r\n    for (let i = n - 3; i < n; ++i) {\r\n      v1.fromArray(center as any, 3 * i)  // TODO\r\n      // _center.copy( res[ i ].getTraceAtom() );\r\n      a1.index = polymer.getAtomIndexByType(i, type)!  // TODO\r\n      _center.copy(a1 as any)  // TODO\r\n\r\n      _resdir.subVectors(_center, v1)\r\n      _resdir.toArray(resdir as any, 3 * i)  // TODO\r\n    }\r\n\r\n    // average measures to define them on the residues\r\n\r\n    const resRadius = new Float32Array(n)\r\n    const resTwist = new Float32Array(n)\r\n    const resRise = new Float32Array(n)\r\n    const resBending = new Float32Array(n)\r\n\r\n    resRadius[ 1 ] = radius[ 0 ]\r\n    resTwist[ 1 ] = twist[ 0 ]\r\n    resRise[ 1 ] = radius[ 0 ]\r\n\r\n    for (let i = 2; i < n - 2; ++i) {\r\n      resRadius[ i ] = 0.5 * (radius[ i - 2 ] + radius[ i - 1 ])\r\n      resTwist[ i ] = 0.5 * (twist[ i - 2 ] + twist[ i - 1 ])\r\n      resRise[ i ] = 0.5 * (rise[ i - 2 ] + rise[ i - 1 ])\r\n\r\n      v1.fromArray(axis as any, 3 * (i - 2))  // TODO\r\n      v2.fromArray(axis as any, 3 * (i - 1))  // TODO\r\n      resBending[ i ] = 180.0 / Math.PI * Math.acos(Math.cos(v1.angleTo(v2)))\r\n    }\r\n\r\n    resRadius[ n - 2 ] = radius[ n - 4 ]\r\n    resTwist[ n - 2 ] = twist[ n - 4 ]\r\n    resRise[ n - 2 ] = rise[ n - 4 ]\r\n\r\n    // average helix axes to define them on the residues\r\n\r\n    const resAxis = new Float32Array(3 * n)\r\n\r\n    copyArray(axis, resAxis, 0, 0, 3)\r\n    copyArray(axis, resAxis, 0, 3, 3)\r\n\r\n    for (let i = 2; i < n - 2; ++i) {\r\n      v1.fromArray(axis as any, 3 * (i - 2))  // TODO\r\n      v2.fromArray(axis as any, 3 * (i - 1))  // TODO\r\n\r\n      _axis.addVectors(v2, v1).multiplyScalar(0.5).normalize()\r\n      _axis.toArray(resAxis as any, 3 * i)  // TODO\r\n    }\r\n\r\n    copyArray(axis, resAxis, 3 * n - 12, 3 * n - 6, 3)\r\n    copyArray(axis, resAxis, 3 * n - 12, 3 * n - 3, 3)\r\n\r\n    return {\r\n      center,\r\n      axis: resAxis,\r\n      bending: resBending,\r\n      radius: resRadius,\r\n      rise: resRise,\r\n      twist: resTwist,\r\n      resdir: resdir\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default Helixorient\r\n","/**\r\n * @file Helixbundle\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3 } from 'three'\r\n\r\nimport { ColormakerRegistry } from '../globals'\r\nimport { AtomPicker } from '../utils/picker'\r\nimport RadiusFactory, { RadiusParams } from '../utils/radius-factory'\r\nimport Helixorient, { HelixPosition } from './helixorient'\r\nimport { calculateMeanVector3, projectPointOnVector } from '../math/vector-utils'\r\nimport Polymer from '../proxy/polymer'\r\nimport { ColormakerParameters } from '../color/colormaker';\r\n\r\nexport interface Axis {\r\n  axis: Float32Array\r\n  center: Float32Array\r\n  begin: Float32Array\r\n  end: Float32Array\r\n  color: Float32Array\r\n  picking: AtomPicker\r\n  size: Float32Array\r\n  residueOffset: number[]\r\n  residueCount: number[]\r\n}\r\n\r\nclass Helixbundle {\r\n  helixorient: Helixorient;\r\n  position: HelixPosition;\r\n\r\n  constructor (readonly polymer: Polymer) {\r\n\r\n    this.helixorient = new Helixorient(polymer)\r\n    this.position = this.helixorient.getPosition()\r\n  }\r\n\r\n  getAxis (localAngle: number, centerDist: number, ssBorder: boolean, colorParams: { scheme: string} & ColormakerParameters, radiusParams: RadiusParams): Axis {\r\n    localAngle = localAngle || 30\r\n    centerDist = centerDist || 2.5\r\n    ssBorder = ssBorder === undefined ? false : ssBorder\r\n\r\n    const polymer = this.polymer\r\n    const structure = polymer.structure\r\n    const n = polymer.residueCount\r\n    const residueIndexStart = polymer.residueIndexStart\r\n\r\n    const pos = this.position\r\n\r\n    const cp = colorParams || {}\r\n    cp.structure = structure\r\n\r\n    const colormaker = ColormakerRegistry.getScheme(cp)\r\n\r\n    const radiusFactory = new RadiusFactory(radiusParams)\r\n\r\n    let j = 0\r\n    let k = 0\r\n\r\n    const axis: number[] = []\r\n    const center: number[] = []\r\n    const beg: number[] = []\r\n    const end: number[] = []\r\n    const col: number[] = []\r\n    const pick = []\r\n    const size = []\r\n    const residueOffset = []\r\n    const residueCount = []\r\n\r\n    let tmpAxis = new Float32Array(n * 3)\r\n    let tmpCenter = new Float32Array(n * 3)\r\n\r\n    let _axis, _center\r\n    const _beg = new Vector3()\r\n    const _end = new Vector3()\r\n\r\n    const rp1 = structure.getResidueProxy()\r\n    const rp2 = structure.getResidueProxy()\r\n    const ap = structure.getAtomProxy()\r\n\r\n    const c1 = new Vector3()\r\n    const c2 = new Vector3()\r\n\r\n    let split = false\r\n\r\n    for (let i = 0; i < n; ++i) {\r\n      rp1.index = residueIndexStart + i\r\n      c1.fromArray(pos.center as any, i * 3)\r\n\r\n      if (i === n - 1) {\r\n        split = true\r\n      } else {\r\n        rp2.index = residueIndexStart + i + 1\r\n        c2.fromArray(pos.center as any, i * 3 + 3)\r\n\r\n        if (ssBorder && rp1.sstruc !== rp2.sstruc) {\r\n          split = true\r\n        } else if (c1.distanceTo(c2) > centerDist) {\r\n          split = true\r\n        } else if (pos.bending[ i ] > localAngle) {\r\n          split = true\r\n        }\r\n      }\r\n\r\n      if (split) {\r\n        if (i - j < 4) {\r\n          j = i\r\n          split = false\r\n          continue\r\n        }\r\n\r\n        ap.index = rp1.traceAtomIndex\r\n\r\n        // ignore first and last axis\r\n        tmpAxis = pos.axis.subarray(j * 3 + 3, i * 3)\r\n        tmpCenter = pos.center.subarray(j * 3, i * 3 + 3)\r\n\r\n        _axis = calculateMeanVector3(tmpAxis).normalize()\r\n        _center = calculateMeanVector3(tmpCenter)\r\n\r\n        _beg.fromArray(tmpCenter as any)\r\n        projectPointOnVector(_beg, _axis, _center)\r\n\r\n        _end.fromArray(tmpCenter as any, tmpCenter.length - 3)\r\n        projectPointOnVector(_end, _axis, _center)\r\n\r\n        _axis.subVectors(_end, _beg)\r\n\r\n        _axis.toArray(axis as any, k)\r\n        _center.toArray(center as any, k)\r\n        _beg.toArray(beg as any, k)\r\n        _end.toArray(end as any, k)\r\n\r\n        colormaker.atomColorToArray(ap, col, k)\r\n\r\n        pick.push(ap.index)\r\n\r\n        size.push(radiusFactory.atomRadius(ap))\r\n\r\n        residueOffset.push(residueIndexStart + j)\r\n        residueCount.push(residueIndexStart + i + 1 - j)\r\n\r\n        k += 3\r\n        j = i\r\n        split = false\r\n      }\r\n    }\r\n\r\n    const picking = new Float32Array(pick)\r\n\r\n    return {\r\n      axis: new Float32Array(axis),\r\n      center: new Float32Array(center),\r\n      begin: new Float32Array(beg),\r\n      end: new Float32Array(end),\r\n      color: new Float32Array(col),\r\n      picking: new AtomPicker(picking, structure),\r\n      size: new Float32Array(size),\r\n      residueOffset: residueOffset,\r\n      residueCount: residueCount\r\n    }\r\n  }\r\n}\r\n\r\nexport default Helixbundle\r\n","/**\r\n * @file Binary Heap\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\n/**\r\n * Binary heap implementation\r\n * @class\r\n * @author http://eloquentjavascript.net/appendix2.htm\r\n * @param {Function} scoreFunction - the heap scoring function\r\n */\r\nclass BinaryHeap<T> {\r\n  content: T[] = []\r\n\r\n  constructor(readonly scoreFunction: (x: T) => number) {\r\n\r\n    this.scoreFunction = scoreFunction\r\n  }\r\n\r\n  push (element: T) {\r\n    // Add the new element to the end of the array.\r\n    this.content.push(element)\r\n\r\n    // Allow it to bubble up.\r\n    this.bubbleUp(this.content.length - 1)\r\n  }\r\n\r\n  pop () {\r\n    // Store the first element so we can return it later.\r\n    const result = this.content[ 0 ]\r\n\r\n    // Get the element at the end of the array.\r\n    const end = this.content.pop()\r\n\r\n    // If there are any elements left, put the end element at the\r\n    // start, and let it sink down.\r\n    if (end && this.content.length > 0) {\r\n      this.content[ 0 ] = end\r\n      this.sinkDown(0)\r\n    }\r\n\r\n    return result\r\n  }\r\n\r\n  peek () {\r\n    return this.content[ 0 ]\r\n  }\r\n\r\n  remove (element: T) {\r\n    const len = this.content.length\r\n\r\n    // To remove a value, we must search through the array to find it.\r\n    for (let i = 0; i < len; i++) {\r\n      if (this.content[ i ] === element) {\r\n        // When it is found, the process seen in 'pop' is repeated\r\n        // to fill up the hole.\r\n        const end = this.content.pop()\r\n\r\n        if (end && i !== len - 1) {\r\n          this.content[ i ] = end\r\n\r\n          if (this.scoreFunction(end) < this.scoreFunction(element)) {\r\n            this.bubbleUp(i)\r\n          } else {\r\n            this.sinkDown(i)\r\n          }\r\n        }\r\n\r\n        return\r\n      }\r\n    }\r\n\r\n    throw new Error('Node not found.')\r\n  }\r\n\r\n  size () {\r\n    return this.content.length\r\n  }\r\n\r\n  bubbleUp (n: number) {\r\n    // Fetch the element that has to be moved.\r\n    const element = this.content[ n ]\r\n\r\n    // When at 0, an element can not go up any further.\r\n    while (n > 0) {\r\n      // Compute the parent element's index, and fetch it.\r\n      const parentN = Math.floor((n + 1) / 2) - 1\r\n      const parent = this.content[ parentN ]\r\n\r\n      // Swap the elements if the parent is greater.\r\n      if (this.scoreFunction(element) < this.scoreFunction(parent)) {\r\n        this.content[ parentN ] = element\r\n        this.content[ n ] = parent\r\n\r\n        // Update 'n' to continue at the new position.\r\n        n = parentN\r\n      } else {\r\n        // Found a parent that is less, no need to move it further.\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  sinkDown (n: number) {\r\n    // Look up the target element and its score.\r\n    const length = this.content.length\r\n    const element = this.content[ n ]\r\n    const elemScore = this.scoreFunction(element)\r\n\r\n    let child1Score = 0\r\n    let child2Score = 0\r\n\r\n    while (true) {\r\n      // Compute the indices of the child elements.\r\n      const child2N = (n + 1) * 2\r\n      const child1N = child2N - 1\r\n\r\n      // This is used to store the new position of the element, if any.\r\n      let swap = null\r\n\r\n      // If the first child exists (is inside the array)...\r\n      if (child1N < length) {\r\n        // Look it up and compute its score.\r\n        const child1 = this.content[ child1N ]\r\n        child1Score = this.scoreFunction(child1)\r\n\r\n        // If the score is less than our element's, we need to swap.\r\n        if (child1Score < elemScore) swap = child1N\r\n      }\r\n\r\n      // Do the same checks for the other child.\r\n      if (child2N < length) {\r\n        const child2 = this.content[ child2N ]\r\n        child2Score = this.scoreFunction(child2)\r\n\r\n        if (child2Score < (swap === null ? elemScore : child1Score)) swap = child2N\r\n      }\r\n\r\n      // If the element needs to be moved, swap it, and continue.\r\n      if (swap !== null) {\r\n        this.content[ n ] = this.content[ swap ]\r\n        this.content[ swap ] = element\r\n        n = swap\r\n      } else {\r\n        // Otherwise, we are done.\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default BinaryHeap\r\n","/**\r\n * @file Kdtree\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { NumberArray } from '../types'\r\nimport BinaryHeap from './binary-heap'\r\n\r\n/**\r\n * Kdtree\r\n * @class\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>, 2016\r\n * @author Roman Bolzern <roman.bolzern@fhnw.ch>, 2013\r\n * @author I4DS http://www.fhnw.ch/i4ds, 2013\r\n * @license MIT License <http://www.opensource.org/licenses/mit-license.php>\r\n * @description\r\n * k-d Tree for typed arrays of 3d points (e.g. for Float32Array), in-place\r\n * provides fast nearest neighbour search\r\n *\r\n * Based on https://github.com/ubilabs/kd-tree-javascript by Ubilabs\r\n *\r\n * Further information (including mathematical properties)\r\n * http://en.wikipedia.org/wiki/Binary_tree\r\n * http://en.wikipedia.org/wiki/K-d_tree\r\n *\r\n * @example\r\n * points: [x, y, z, x, y, z, x, y, z, ...]\r\n * metric: function(a, b){\r\n *    return Math.pow(a[0]-b[0], 2) + Math.pow(a[1]-b[1], 2) + Math.pow(a[2]-b[2], 2);\r\n * }\r\n *\r\n * @param {Float32Array} points - points\r\n * @param {Function} metric - metric\r\n */\r\nclass Kdtree {\r\n  indices: Uint32Array\r\n  nodes: Int32Array\r\n  rootIndex: number\r\n\r\n  maxDepth = 0\r\n  currentNode = 0\r\n\r\n  constructor(readonly points: NumberArray, readonly metric: (a: NumberArray, b: NumberArray) => number) {\r\n    const n = points.length / 3\r\n\r\n    const indices = new Uint32Array(n)\r\n    for (let i = 0; i < n; ++i) {\r\n      indices[ i ] = i\r\n    }\r\n    this.indices = indices\r\n    this.nodes = new Int32Array(n * 4)\r\n    this.rootIndex = this.buildTree(0, -1, 0, n)\r\n  }\r\n\r\n  buildTree (depth: number, parent: number, arrBegin: number, arrEnd: number) {\r\n    if (depth > this.maxDepth) this.maxDepth = depth\r\n\r\n    const plength = arrEnd - arrBegin\r\n    if (plength === 0) {\r\n      return -1\r\n    }\r\n\r\n    const nodeIndex = this.currentNode * 4\r\n    const nodes = this.nodes\r\n\r\n    this.currentNode += 1\r\n    if (plength === 1) {\r\n      nodes[ nodeIndex ] = arrBegin\r\n      nodes[ nodeIndex + 1 ] = -1\r\n      nodes[ nodeIndex + 2 ] = -1\r\n      nodes[ nodeIndex + 3 ] = parent\r\n      return nodeIndex\r\n    }\r\n    // if(plength <= 32){\r\n    //   return nodeIndex;\r\n    // }\r\n\r\n    const indices = this.indices\r\n    const points = this.points\r\n\r\n    const arrMedian = arrBegin + Math.floor(plength / 2)\r\n    const currentDim = depth % 3\r\n\r\n    // inlined quickselect function\r\n    let j, tmp, pivotIndex, pivotValue, storeIndex\r\n    let left = arrBegin\r\n    let right = arrEnd - 1\r\n    while (right > left) {\r\n      pivotIndex = (left + right) >> 1\r\n      pivotValue = points[ indices[ pivotIndex ] * 3 + currentDim ]\r\n      // swap( pivotIndex, right );\r\n      tmp = indices[ pivotIndex ]\r\n      indices[ pivotIndex ] = indices[ right ]\r\n      indices[ right ] = tmp\r\n      storeIndex = left\r\n      for (j = left; j < right; ++j) {\r\n        if (points[ indices[ j ] * 3 + currentDim ] < pivotValue) {\r\n          // swap( storeIndex, j );\r\n          tmp = indices[ storeIndex ]\r\n          indices[ storeIndex ] = indices[ j ]\r\n          indices[ j ] = tmp\r\n          ++storeIndex\r\n        }\r\n      }\r\n      // swap( right, storeIndex );\r\n      tmp = indices[ right ]\r\n      indices[ right ] = indices[ storeIndex ]\r\n      indices[ storeIndex ] = tmp\r\n      pivotIndex = storeIndex\r\n      if (arrMedian === pivotIndex) {\r\n        break\r\n      } else if (arrMedian < pivotIndex) {\r\n        right = pivotIndex - 1\r\n      } else {\r\n        left = pivotIndex + 1\r\n      }\r\n    }\r\n\r\n    nodes[ nodeIndex ] = arrMedian\r\n    nodes[ nodeIndex + 1 ] = this.buildTree(depth + 1, nodeIndex, arrBegin, arrMedian)\r\n    nodes[ nodeIndex + 2 ] = this.buildTree(depth + 1, nodeIndex, arrMedian + 1, arrEnd)\r\n    nodes[ nodeIndex + 3 ] = parent\r\n\r\n    return nodeIndex\r\n  }\r\n\r\n  getNodeDepth (nodeIndex: number): number {\r\n    const parentIndex = this.nodes[ nodeIndex + 3 ]\r\n    return (parentIndex === -1) ? 0 : this.getNodeDepth(parentIndex) + 1\r\n  }\r\n\r\n  // TODO\r\n  // function getNodePos (node) {}\r\n\r\n  /**\r\n   * find nearest points\r\n   * @param {Array} point - array of size 3\r\n   * @param {Integer} maxNodes - max amount of nodes to return\r\n   * @param {Float} maxDistance - maximum distance of point to result nodes\r\n   * @return {Array} array of point, distance pairs\r\n   */\r\n  nearest (point: NumberArray, maxNodes: number, maxDistance: number) {\r\n    const bestNodes = new BinaryHeap<[number, number]>(e => -e[ 1 ])\r\n\r\n    const nodes = this.nodes\r\n    const points = this.points\r\n    const indices = this.indices\r\n\r\n    const nearestSearch = (nodeIndex: number) => {\r\n      let bestChild, otherChild\r\n      const dimension = this.getNodeDepth(nodeIndex) % 3\r\n      const pointIndex = indices[ nodes[ nodeIndex ] ] * 3\r\n      const ownPoint = [\r\n        points[ pointIndex + 0 ],\r\n        points[ pointIndex + 1 ],\r\n        points[ pointIndex + 2 ]\r\n      ]\r\n      const ownDistance = this.metric(point, ownPoint)\r\n\r\n      function saveNode (nodeIndex: number, distance: number) {\r\n        bestNodes.push([ nodeIndex, distance ])\r\n        if (bestNodes.size() > maxNodes) {\r\n          bestNodes.pop()\r\n        }\r\n      }\r\n\r\n      const leftIndex = nodes[ nodeIndex + 1 ]\r\n      const rightIndex = nodes[ nodeIndex + 2 ]\r\n\r\n      // if it's a leaf\r\n      if (rightIndex === -1 && leftIndex === -1) {\r\n        if ((bestNodes.size() < maxNodes || ownDistance < bestNodes.peek()[ 1 ]) &&\r\n          ownDistance <= maxDistance\r\n        ) {\r\n          saveNode(nodeIndex, ownDistance)\r\n        }\r\n        return\r\n      }\r\n\r\n      if (rightIndex === -1) {\r\n        bestChild = leftIndex\r\n      } else if (leftIndex === -1) {\r\n        bestChild = rightIndex\r\n      } else {\r\n        if (point[ dimension ] <= points[ pointIndex + dimension ]) {\r\n          bestChild = leftIndex\r\n        } else {\r\n          bestChild = rightIndex\r\n        }\r\n      }\r\n\r\n      // recursive search\r\n      nearestSearch(bestChild)\r\n\r\n      if ((bestNodes.size() < maxNodes || ownDistance < bestNodes.peek()[ 1 ]) &&\r\n        ownDistance <= maxDistance\r\n      ) {\r\n        saveNode(nodeIndex, ownDistance)\r\n      }\r\n\r\n      // if there's still room or the current distance is nearer than the best distance\r\n      const linearPoint = []\r\n      for (let i = 0; i < 3; i += 1) {\r\n        if (i === dimension) {\r\n          linearPoint[ i ] = point[ i ]\r\n        } else {\r\n          linearPoint[ i ] = points[ pointIndex + i ]\r\n        }\r\n      }\r\n      const linearDistance = this.metric(linearPoint, ownPoint)\r\n\r\n      if ((bestNodes.size() < maxNodes || Math.abs(linearDistance) < bestNodes.peek()[ 1 ]) &&\r\n        Math.abs(linearDistance) <= maxDistance\r\n      ) {\r\n        if (bestChild === leftIndex) {\r\n          otherChild = rightIndex\r\n        } else {\r\n          otherChild = leftIndex\r\n        }\r\n        if (otherChild !== -1) {\r\n          nearestSearch(otherChild)\r\n        }\r\n      }\r\n    }\r\n\r\n    nearestSearch(this.rootIndex)\r\n\r\n    const result = []\r\n    for (let i = 0, il = Math.min(bestNodes.size(), maxNodes); i < il; i += 1) {\r\n      result.push(bestNodes.content[ i ])\r\n    }\r\n\r\n    return result\r\n  }\r\n\r\n  verify (nodeIndex?: number, depth = 0) {\r\n    let count = 1\r\n\r\n    if (nodeIndex === undefined) {\r\n      nodeIndex = this.rootIndex\r\n    }\r\n\r\n    if (nodeIndex === -1) {\r\n      throw new Error('node is null')\r\n    }\r\n\r\n    const dim = depth % 3\r\n    const nodes = this.nodes\r\n    const points = this.points\r\n    const indices = this.indices\r\n\r\n    const leftIndex = nodes[ nodeIndex + 1 ]\r\n    const rightIndex = nodes[ nodeIndex + 2 ]\r\n\r\n    if (leftIndex !== -1) {\r\n      if (points[ indices[ nodes[ leftIndex ] ] * 3 + dim ] >\r\n        points[ indices[ nodes[ nodeIndex ] ] * 3 + dim ]\r\n      ) {\r\n        throw new Error('left child is > parent!')\r\n      }\r\n      count += this.verify(leftIndex, depth + 1)\r\n    }\r\n\r\n    if (rightIndex !== -1) {\r\n      if (points[ indices[ nodes[ rightIndex ] ] * 3 + dim ] <\r\n        points[ indices[ nodes[ nodeIndex ] ] * 3 + dim ]\r\n      ) {\r\n        throw new Error('right child is < parent!')\r\n      }\r\n      count += this.verify(rightIndex, depth + 1)\r\n    }\r\n\r\n    return count\r\n  }\r\n}\r\n\r\nexport default Kdtree\r\n","/**\r\n * @file Atom Proxy\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3 } from 'three'\r\n\r\nimport { NumberArray } from '../types'\r\nimport {\r\n  Elements,\r\n  SecStrucHelix, SecStrucSheet, SecStrucTurn,\r\n  ProteinType, RnaType, DnaType, WaterType, IonType, SaccharideType,\r\n  CgProteinBackboneType, CgRnaBackboneType, CgDnaBackboneType\r\n} from '../structure/structure-constants'\r\n\r\nimport Structure from '../structure/structure'\r\n\r\nimport ChainStore from '../store/chain-store'\r\nimport ResidueStore from '../store/residue-store'\r\nimport AtomStore from '../store/atom-store'\r\n\r\nimport AtomMap from '../store/atom-map'\r\nimport ResidueMap from '../store/residue-map'\r\n\r\nimport BondProxy from '../proxy/bond-proxy'\r\nimport AtomType from '../store/atom-type';\r\nimport ResidueType from '../store/residue-type';\r\nimport ResidueProxy from './residue-proxy';\r\nimport Entity from '../structure/entity';\r\nimport BondHash from '../store/bond-hash';\r\n\r\n/**\r\n * Atom proxy\r\n */\r\nclass AtomProxy {\r\n  index: number\r\n\r\n  chainStore: ChainStore\r\n  residueStore: ResidueStore\r\n  atomStore: AtomStore\r\n\r\n  residueMap: ResidueMap\r\n  atomMap: AtomMap\r\n\r\n  /**\r\n   * @param {Structure} structure - the structure\r\n   * @param {Integer} index - the index\r\n   */\r\n  constructor (readonly structure: Structure, index = 0) {\r\n    this.index = index\r\n    this.chainStore = structure.chainStore\r\n    this.residueStore = structure.residueStore\r\n    this.atomStore = structure.atomStore\r\n    this.residueMap = structure.residueMap\r\n    this.atomMap = structure.atomMap\r\n  }\r\n\r\n  /**\r\n   * @type {BondHash}\r\n   */\r\n  get bondHash (): BondHash|undefined { return this.structure.bondHash }\r\n\r\n  /**\r\n   * Molecular enity\r\n   * @type {Entity}\r\n   */\r\n  get entity (): Entity {\r\n    return this.structure.entityList[ this.entityIndex ]\r\n  }\r\n  get entityIndex () {\r\n    return this.chainStore.entityIndex[ this.chainIndex ]\r\n  }\r\n  get modelIndex () {\r\n    return this.chainStore.modelIndex[ this.chainIndex ]\r\n  }\r\n  get chainIndex () {\r\n    return this.residueStore.chainIndex[ this.residueIndex ]\r\n  }\r\n  /**\r\n   * @type {ResidueProxy}\r\n   */\r\n  get residue (): ResidueProxy {\r\n    console.warn('residue - might be expensive')\r\n    return this.structure.getResidueProxy(this.residueIndex)\r\n  }\r\n\r\n  get residueIndex () {\r\n    return this.atomStore.residueIndex[ this.index ]\r\n  }\r\n  set residueIndex (value) {\r\n    this.atomStore.residueIndex[ this.index ] = value\r\n  }\r\n\r\n  //\r\n\r\n  /**\r\n   * Secondary structure code\r\n   * @type {String}\r\n   */\r\n  get sstruc () {\r\n    return this.residueStore.getSstruc(this.residueIndex)\r\n  }\r\n  /**\r\n   * Insertion code\r\n   * @type {String}\r\n   */\r\n  get inscode () {\r\n    return this.residueStore.getInscode(this.residueIndex)\r\n  }\r\n  /**\r\n   * Residue number/label\r\n   * @type {Integer}\r\n   */\r\n  get resno () {\r\n    return this.residueStore.resno[ this.residueIndex ]\r\n  }\r\n  /**\r\n   * Chain name\r\n   * @type {String}\r\n   */\r\n  get chainname () {\r\n    return this.chainStore.getChainname(this.chainIndex)\r\n  }\r\n  /**\r\n   * Chain id\r\n   * @type {String}\r\n   */\r\n  get chainid () {\r\n    return this.chainStore.getChainid(this.chainIndex)\r\n  }\r\n\r\n  //\r\n\r\n  /**\r\n   * @type {ResidueType}\r\n   */\r\n  get residueType (): ResidueType {\r\n    return this.residueMap.get(this.residueStore.residueTypeId[ this.residueIndex ])\r\n  }\r\n  /**\r\n   * @type {AtomType}\r\n   */\r\n  get atomType (): AtomType {\r\n    return this.atomMap.get(this.atomStore.atomTypeId[ this.index ])\r\n  }\r\n  get residueAtomOffset () {\r\n    return this.residueStore.atomOffset[ this.residueIndex ]\r\n  }\r\n\r\n  //\r\n\r\n  /**\r\n   * Residue name\r\n   */\r\n  get resname () {\r\n    return this.residueType.resname\r\n  }\r\n  /**\r\n   * Hetero flag\r\n   */\r\n  get hetero () {\r\n    return this.residueType.hetero\r\n  }\r\n\r\n  //\r\n\r\n  /**\r\n   * Atom name\r\n   */\r\n  get atomname () {\r\n    return this.atomType.atomname\r\n  }\r\n  /**\r\n   * Atomic number\r\n   */\r\n  get number () {\r\n    return this.atomType.number\r\n  }\r\n  /**\r\n   * Element\r\n   */\r\n  get element () {\r\n    return this.atomType.element\r\n  }\r\n  /**\r\n   * Van-der-Waals radius\r\n   */\r\n  get vdw () {\r\n    return this.atomType.vdw\r\n  }\r\n  /**\r\n   * Covalent radius\r\n   */\r\n  get covalent () {\r\n    return this.atomType.covalent\r\n  }\r\n\r\n  //\r\n\r\n  /**\r\n   * X coordinate\r\n   */\r\n  get x () {\r\n    return this.atomStore.x[ this.index ]\r\n  }\r\n  set x (value) {\r\n    this.atomStore.x[ this.index ] = value\r\n  }\r\n\r\n  /**\r\n   * Y coordinate\r\n   */\r\n  get y () {\r\n    return this.atomStore.y[ this.index ]\r\n  }\r\n  set y (value) {\r\n    this.atomStore.y[ this.index ] = value\r\n  }\r\n\r\n  /**\r\n   * Z coordinate\r\n   */\r\n  get z () {\r\n    return this.atomStore.z[ this.index ]\r\n  }\r\n  set z (value) {\r\n    this.atomStore.z[ this.index ] = value\r\n  }\r\n\r\n  /**\r\n   * Serial number\r\n   */\r\n  get serial () {\r\n    return this.atomStore.serial[ this.index ]\r\n  }\r\n  set serial (value) {\r\n    this.atomStore.serial[ this.index ] = value\r\n  }\r\n\r\n  /**\r\n   * B-factor value\r\n   */\r\n  get bfactor () {\r\n    return this.atomStore.bfactor[ this.index ]\r\n  }\r\n  set bfactor (value) {\r\n    this.atomStore.bfactor[ this.index ] = value\r\n  }\r\n\r\n  /**\r\n   * Occupancy value\r\n   */\r\n  get occupancy () {\r\n    return this.atomStore.occupancy[ this.index ]\r\n  }\r\n  set occupancy (value) {\r\n    this.atomStore.occupancy[ this.index ] = value\r\n  }\r\n\r\n  /**\r\n   * Alternate location identifier\r\n   */\r\n  get altloc () {\r\n    return this.atomStore.getAltloc(this.index)\r\n  }\r\n  set altloc (value) {\r\n    this.atomStore.setAltloc(this.index, value)\r\n  }\r\n\r\n  /**\r\n   * Partial charge\r\n   */\r\n  get partialCharge () {\r\n    return this.atomStore.partialCharge ? this.atomStore.partialCharge[ this.index ] : null\r\n  }\r\n  set partialCharge (value) {\r\n    if (this.atomStore.partialCharge) {\r\n      this.atomStore.partialCharge[ this.index ] = value as number\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Explicit radius\r\n   */\r\n  get radius () {\r\n    return this.atomStore.radius ? this.atomStore.radius[ this.index ] : null\r\n  }\r\n  set radius (value) {\r\n    if (this.atomStore.radius) {\r\n      this.atomStore.radius[ this.index ] = value as number\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Formal charge\r\n   */\r\n  get formalCharge () {\r\n    return this.atomStore.formalCharge ? this.atomStore.formalCharge[ this.index ] : null\r\n  }\r\n  set formalCharge (value) {\r\n    if (this.atomStore.formalCharge) {\r\n      this.atomStore.formalCharge[ this.index ] = value as number\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Aromaticity flag\r\n   */\r\n  get aromatic () {\r\n    if (this.atomStore.aromatic) {\r\n      return this.atomStore.aromatic[ this.index ] as number\r\n    } else {\r\n      return this.residueType.isAromatic(this) ? 1 : 0\r\n    }\r\n  }\r\n  set aromatic (value) {\r\n    if (this.atomStore.aromatic) {\r\n      this.atomStore.aromatic[ this.index ] = value as number\r\n    }\r\n  }\r\n\r\n  //\r\n\r\n  get bondCount () {\r\n    return this.bondHash!.countArray[ this.index ]  // TODO\r\n  }\r\n\r\n  //\r\n\r\n  /**\r\n   * Iterate over each bond\r\n   * @param  {function(bond: BondProxy)} callback - iterator callback function\r\n   * @param  {BondProxy} [bp] - optional target bond proxy for use in the callback\r\n   * @return {undefined}\r\n   */\r\n  eachBond (callback: (bp: BondProxy) => void, bp?: BondProxy) {\r\n    bp = bp || this.structure._bp\r\n    const idx = this.index\r\n    const bondHash = this.bondHash!  // TODO\r\n    const indexArray = bondHash.indexArray\r\n    const n = bondHash.countArray[ idx ]\r\n    const offset = bondHash.offsetArray[ idx ]\r\n\r\n    for (let i = 0; i < n; ++i) {\r\n      bp.index = indexArray[ offset + i ]\r\n      callback(bp)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Iterate over each bonded atom\r\n   * @param  {function(atom: AtomProxy)} callback - iterator callback function\r\n   * @param  {AtomProxy} [ap] - optional target atom proxy for use in the callback\r\n   * @return {undefined}\r\n   */\r\n  eachBondedAtom (callback: (ap: AtomProxy) => void, _ap?: AtomProxy) {\r\n    const ap = _ap ? _ap : this.structure._ap\r\n    const idx = this.index\r\n\r\n    this.eachBond(function (bp) {\r\n      ap.index = idx !== bp.atomIndex1 ? bp.atomIndex1 : bp.atomIndex2\r\n      callback(ap)\r\n    })\r\n    this.index = idx\r\n  }\r\n\r\n  /**\r\n   * Check if this atom is bonded to the given atom,\r\n   * assumes both atoms are from the same structure\r\n   * @param  {AtomProxy} ap - the given atom\r\n   * @return {Boolean} whether a bond exists or not\r\n   */\r\n  hasBondTo (ap: AtomProxy) {\r\n    let flag = false\r\n    this.eachBondedAtom(function (bap) {\r\n      if (ap.index === bap.index) flag = true\r\n    })\r\n    return flag\r\n  }\r\n\r\n  bondToElementCount (element: Elements) {\r\n    let count = 0\r\n    const idx = this.index // Avoid reentrancy problems\r\n    this.eachBondedAtom(function (bap) {\r\n      if (bap.number === element) count += 1\r\n    })\r\n    this.index = idx\r\n    return count\r\n  }\r\n\r\n  hasBondToElement (element: Elements) {\r\n    return this.bondToElementCount(element) > 0\r\n  }\r\n\r\n  //\r\n\r\n  /**\r\n   * If atom is part of a backbone\r\n   * @return {Boolean} flag\r\n   */\r\n  isBackbone () {\r\n    const backboneIndexList = this.residueType.backboneIndexList\r\n    if (backboneIndexList.length > 0) {\r\n      return backboneIndexList.includes(this.index - this.residueAtomOffset)\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  /**\r\n   * If atom is part of a polymer\r\n   * @return {Boolean} flag\r\n   */\r\n  isPolymer () {\r\n    if (this.structure.entityList.length > 0) {\r\n      return this.entity.isPolymer()\r\n    } else {\r\n      const moleculeType = this.residueType.moleculeType\r\n      return (\r\n        moleculeType === ProteinType ||\r\n        moleculeType === RnaType ||\r\n        moleculeType === DnaType\r\n      )\r\n    }\r\n  }\r\n\r\n  /**\r\n   * If atom is part of a sidechin\r\n   * @return {Boolean} flag\r\n   */\r\n  isSidechain () {\r\n    return this.isPolymer() && !this.isBackbone()\r\n  }\r\n\r\n  /**\r\n   * If atom is part of a coarse-grain group\r\n   * @return {Boolean} flag\r\n   */\r\n  isCg () {\r\n    const backboneType = this.residueType.backboneType\r\n    return (\r\n      backboneType === CgProteinBackboneType ||\r\n      backboneType === CgRnaBackboneType ||\r\n      backboneType === CgDnaBackboneType\r\n    )\r\n  }\r\n\r\n  isTrace () {\r\n    return this.index === (this.residueType.traceAtomIndex + this.residueAtomOffset)\r\n  }\r\n\r\n  /**\r\n   * If atom is part of a hetero group\r\n   * @return {Boolean} flag\r\n   */\r\n  isHetero () {\r\n    return this.residueType.hetero === 1\r\n  }\r\n\r\n  /**\r\n   * If atom is part of a protein molecule\r\n   * @return {Boolean} flag\r\n   */\r\n  isProtein () {\r\n    return this.residueType.moleculeType === ProteinType\r\n  }\r\n\r\n  /**\r\n   * If atom is part of a nucleic molecule\r\n   * @return {Boolean} flag\r\n   */\r\n  isNucleic () {\r\n    const moleculeType = this.residueType.moleculeType\r\n    return moleculeType === RnaType || moleculeType === DnaType\r\n  }\r\n\r\n  /**\r\n   * If atom is part of a rna\r\n   * @return {Boolean} flag\r\n   */\r\n  isRna () {\r\n    return this.residueType.moleculeType === RnaType\r\n  }\r\n\r\n  /**\r\n   * If atom is part of a dna\r\n   * @return {Boolean} flag\r\n   */\r\n  isDna () {\r\n    return this.residueType.moleculeType === DnaType\r\n  }\r\n\r\n  /**\r\n   * If atom is part of a water molecule\r\n   * @return {Boolean} flag\r\n   */\r\n  isWater () {\r\n    return this.residueType.moleculeType === WaterType\r\n  }\r\n\r\n  /**\r\n   * If atom is part of an ion\r\n   * @return {Boolean} flag\r\n   */\r\n  isIon () {\r\n    return this.residueType.moleculeType === IonType\r\n  }\r\n\r\n  /**\r\n   * If atom is part of a saccharide\r\n   * @return {Boolean} flag\r\n   */\r\n  isSaccharide () {\r\n    return this.residueType.moleculeType === SaccharideType\r\n  }\r\n\r\n  /**\r\n   * If atom is part of a helix\r\n   * @return {Boolean} flag\r\n   */\r\n  isHelix () {\r\n    return SecStrucHelix.includes(this.sstruc)\r\n  }\r\n\r\n  /**\r\n   * If atom is part of a sheet\r\n   * @return {Boolean} flag\r\n   */\r\n  isSheet () {\r\n    return SecStrucSheet.includes(this.sstruc)\r\n  }\r\n\r\n  /**\r\n   * If atom is part of a turn\r\n   * @return {Boolean} flag\r\n   */\r\n  isTurn () {\r\n    return SecStrucTurn.includes(this.sstruc) && this.isProtein()\r\n  }\r\n\r\n  isBonded () {\r\n    return this.bondHash!.countArray[ this.index ] !== 0   // TODO\r\n  }\r\n\r\n  /**\r\n   * If atom is part of a ring\r\n   * @return {Boolean} flag\r\n   */\r\n  isRing () {\r\n    const atomRings = this.residueType.getRings()!.atomRings  // TODO\r\n    return atomRings[ this.index - this.residueAtomOffset ] !== undefined\r\n  }\r\n\r\n  isAromatic () {\r\n    return this.aromatic === 1\r\n  }\r\n\r\n  isPolarHydrogen () {\r\n    let result = false\r\n\r\n    if (this.number !== 1) return result\r\n\r\n    result = !this.hasBondToElement(Elements.C)\r\n\r\n    return result\r\n  }\r\n\r\n  isMetal () { return this.atomType.isMetal() }\r\n  isNonmetal () { return this.atomType.isNonmetal() }\r\n  isMetalloid () { return this.atomType.isMetalloid() }\r\n  isHalogen () { return this.atomType.isHalogen() }\r\n  isDiatomicNonmetal () { return this.atomType.isDiatomicNonmetal() }\r\n  isPolyatomicNonmetal () { return this.atomType.isPolyatomicNonmetal() }\r\n  isAlkaliMetal () { return this.atomType.isAlkaliMetal() }\r\n  isAlkalineEarthMetal () { return this.atomType.isAlkalineEarthMetal() }\r\n  isNobleGas () { return this.atomType.isNobleGas() }\r\n  isTransitionMetal () { return this.atomType.isTransitionMetal() }\r\n  isPostTransitionMetal () { return this.atomType.isPostTransitionMetal() }\r\n  isLanthanide () { return this.atomType.isLanthanide() }\r\n  isActinide () { return this.atomType.isActinide() }\r\n\r\n  getDefaultValence () { return this.atomType.getDefaultValence() }\r\n  getValenceList () { return this.atomType.getValenceList() }\r\n  getOuterShellElectronCount () { return this.atomType.getOuterShellElectronCount() }\r\n\r\n  /**\r\n   * Distance to another atom\r\n   * @param  {AtomProxy} atom - the other atom\r\n   * @return {Number} the distance\r\n   */\r\n  distanceTo (atom: AtomProxy) {\r\n    const taa = this.atomStore\r\n    const aaa = atom.atomStore\r\n    const ti = this.index\r\n    const ai = atom.index\r\n    const x = taa.x[ ti ] - aaa.x[ ai ]\r\n    const y = taa.y[ ti ] - aaa.y[ ai ]\r\n    const z = taa.z[ ti ] - aaa.z[ ai ]\r\n    const distSquared = x * x + y * y + z * z\r\n    return Math.sqrt(distSquared)\r\n  }\r\n\r\n  /**\r\n   * If connected to another atom\r\n   * @param  {AtomProxy} atom - the other atom\r\n   * @return {Boolean} flag\r\n   */\r\n  connectedTo (atom: AtomProxy) {\r\n    const taa = this.atomStore\r\n    const aaa = atom.atomStore\r\n    const ti = this.index\r\n    const ai = atom.index\r\n\r\n    if (taa.altloc && aaa.altloc) {\r\n      const ta = taa.altloc[ ti ]  // use Uint8 value to compare\r\n      const aa = aaa.altloc[ ai ]  // no need to convert to char\r\n      // 0 is the Null character, 32 is the space character\r\n      if (!(ta === 0 || aa === 0 || ta === 32 || aa === 32 || (ta === aa))) return false\r\n    }\r\n\r\n    const x = taa.x[ ti ] - aaa.x[ ai ]\r\n    const y = taa.y[ ti ] - aaa.y[ ai ]\r\n    const z = taa.z[ ti ] - aaa.z[ ai ]\r\n\r\n    const distSquared = x * x + y * y + z * z\r\n\r\n    // if( this.isCg() ) console.log( this.qualifiedName(), Math.sqrt( distSquared ), distSquared )\r\n    if (distSquared < 48.0 && this.isCg()) return true\r\n\r\n    if (isNaN(distSquared)) return false\r\n\r\n    const d = this.covalent + atom.covalent\r\n    const d1 = d + 0.3\r\n    const d2 = d - 0.5\r\n\r\n    return distSquared < (d1 * d1) && distSquared > (d2 * d2)\r\n  }\r\n\r\n  /**\r\n   * Set atom position from array\r\n   * @param  {Array|TypedArray} array - input array\r\n   * @param  {Integer} [offset] - the offset\r\n   * @return {AtomProxy} this object\r\n   */\r\n  positionFromArray (array: NumberArray, offset = 0) {\r\n    this.x = array[ offset + 0 ]\r\n    this.y = array[ offset + 1 ]\r\n    this.z = array[ offset + 2 ]\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Write atom position to array\r\n   * @param  {Array|TypedArray} [array] - target array\r\n   * @param  {Integer} [offset] - the offset\r\n   * @return {Array|TypedArray} target array\r\n   */\r\n  positionToArray (array: NumberArray = [], offset = 0) {\r\n    const index = this.index\r\n    const atomStore = this.atomStore\r\n\r\n    array[ offset + 0 ] = atomStore.x[ index ]\r\n    array[ offset + 1 ] = atomStore.y[ index ]\r\n    array[ offset + 2 ] = atomStore.z[ index ]\r\n\r\n    return array\r\n  }\r\n\r\n  /**\r\n   * Write atom position to vector\r\n   * @param  {Vector3} [v] - target vector\r\n   * @return {Vector3} target vector\r\n   */\r\n  positionToVector3 (v?: Vector3) {\r\n    if (v === undefined) v = new Vector3()\r\n\r\n    v.x = this.x\r\n    v.y = this.y\r\n    v.z = this.z\r\n\r\n    return v\r\n  }\r\n\r\n  /**\r\n   * Set atom position from vector\r\n   * @param  {Vector3} v - input vector\r\n   * @return {AtomProxy} this object\r\n   */\r\n  positionFromVector3 (v: Vector3) {\r\n    this.x = v.x\r\n    this.y = v.y\r\n    this.z = v.z\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Add vector to atom position\r\n   * @param  {Vector3} v - input vector\r\n   * @return {AtomProxy} this object\r\n   */\r\n  positionAdd (v: Vector3|AtomProxy) {\r\n    this.x += v.x\r\n    this.y += v.y\r\n    this.z += v.z\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Subtract vector from atom position\r\n   * @param  {Vector3} v - input vector\r\n   * @return {AtomProxy} this object\r\n   */\r\n  positionSub (v: Vector3|AtomProxy) {\r\n    this.x -= v.x\r\n    this.y -= v.y\r\n    this.z -= v.z\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get intra group/residue bonds\r\n   * @param  {Boolean} firstOnly - immediately return the first connected atomIndex\r\n   * @return {Integer[]|Integer|undefined} connected atomIndices\r\n   */\r\n  getResidueBonds (firstOnly = false) {\r\n    const residueAtomOffset = this.residueAtomOffset\r\n    const relativeIndex = this.index - this.residueAtomOffset\r\n    const bonds = this.residueType.getBonds()!  // TODO\r\n    const atomIndices1 = bonds.atomIndices1\r\n    const atomIndices2 = bonds.atomIndices2\r\n    let idx1, idx2, connectedAtomIndex\r\n    let connectedAtomIndices: number[]|undefined\r\n\r\n    if (!firstOnly) connectedAtomIndices = []\r\n\r\n    idx1 = atomIndices1.indexOf(relativeIndex)\r\n    while (idx1 !== -1) {\r\n      connectedAtomIndex = atomIndices2[ idx1 ] + residueAtomOffset\r\n      if (connectedAtomIndices) {\r\n        connectedAtomIndices.push(connectedAtomIndex)\r\n        idx1 = atomIndices1.indexOf(relativeIndex, idx1 + 1)\r\n      } else {\r\n        return connectedAtomIndex\r\n      }\r\n    }\r\n\r\n    idx2 = atomIndices2.indexOf(relativeIndex)\r\n    while (idx2 !== -1) {\r\n      connectedAtomIndex = atomIndices1[ idx2 ] + residueAtomOffset\r\n      if (connectedAtomIndices) {\r\n        connectedAtomIndices.push(connectedAtomIndex)\r\n        idx2 = atomIndices2.indexOf(relativeIndex, idx2 + 1)\r\n      } else {\r\n        return connectedAtomIndex\r\n      }\r\n    }\r\n\r\n    return connectedAtomIndices\r\n  }\r\n\r\n  //\r\n\r\n  qualifiedName (noResname = false) {\r\n    var name = ''\r\n    if (this.resname && !noResname) name += '[' + this.resname + ']'\r\n    if (this.resno !== undefined) name += this.resno\r\n    if (this.inscode) name += '^' + this.inscode\r\n    if (this.chainname) name += ':' + this.chainname\r\n    if (this.atomname) name += '.' + this.atomname\r\n    if (this.altloc) name += '%' + this.altloc\r\n    if (this.structure.modelStore.count > 1) name += '/' + this.modelIndex\r\n    return name\r\n  }\r\n\r\n  /**\r\n   * Clone object\r\n   * @return {AtomProxy} cloned atom\r\n   */\r\n  clone () {\r\n    return new AtomProxy(this.structure, this.index)\r\n  }\r\n\r\n  toObject () {\r\n    return {\r\n      index: this.index,\r\n      residueIndex: this.residueIndex,\r\n\r\n      resname: this.resname,\r\n      x: this.x,\r\n      y: this.y,\r\n      z: this.z,\r\n      element: this.element,\r\n      chainname: this.chainname,\r\n      resno: this.resno,\r\n      serial: this.serial,\r\n      vdw: this.vdw,\r\n      covalent: this.covalent,\r\n      hetero: this.hetero,\r\n      bfactor: this.bfactor,\r\n      altloc: this.altloc,\r\n      atomname: this.atomname,\r\n      modelIndex: this.modelIndex\r\n    }\r\n  }\r\n}\r\n\r\nexport default AtomProxy\r\n","/**\r\n * @file Kdtree\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3 } from 'three'\r\n\r\nimport { Debug, Log } from '../globals'\r\nimport _Kdtree from '../utils/kdtree'\r\nimport Structure from '../structure/structure'\r\nimport AtomProxy from '../proxy/atom-proxy'\r\nimport ResidueProxy from '../proxy/residue-proxy'\r\n\r\nfunction euclideanDistSq(a: number[], b: number[]) {\r\n  const dx = a[0] - b[0]\r\n  const dy = a[1] - b[1]\r\n  const dz = a[2] - b[2]\r\n  return dx * dx + dy * dy + dz * dz\r\n}\r\n\r\nfunction euclideanDist(a: number[], b: number[]) {\r\n  return Math.sqrt(euclideanDistSq(a, b))\r\n}\r\n\r\nconst pointArray = new Float32Array(3)\r\n\r\nclass Kdtree {\r\n  points: Float32Array\r\n  atomIndices: Uint32Array\r\n  kdtree: _Kdtree\r\n\r\n  constructor(structure: Structure|ResidueProxy, useSquaredDist = false) {\r\n    if (Debug) Log.time('Kdtree build')\r\n\r\n    const metric = useSquaredDist ? euclideanDistSq : euclideanDist\r\n\r\n    const points = new Float32Array(structure.atomCount * 3)\r\n    const atomIndices = new Uint32Array(structure.atomCount)\r\n    let i = 0\r\n\r\n    structure.eachAtom(function (ap) {\r\n      points[ i + 0 ] = ap.x\r\n      points[ i + 1 ] = ap.y\r\n      points[ i + 2 ] = ap.z\r\n      atomIndices[ i / 3 ] = ap.index\r\n      i += 3\r\n    })\r\n\r\n    this.atomIndices = atomIndices\r\n    this.points = points\r\n    this.kdtree = new _Kdtree(points, metric)\r\n\r\n    if (Debug) Log.timeEnd('Kdtree build')\r\n\r\n      // console.log(\"this.kdtree.verify()\", this.kdtree.verify())\r\n  }\r\n\r\n  nearest (point: number[]|Vector3, maxNodes: number, maxDistance: number) {\r\n    // Log.time( \"Kdtree nearest\" );\r\n\r\n    if (point instanceof Vector3) {\r\n      point.toArray(pointArray as any)\r\n    } else if (point instanceof AtomProxy) {\r\n      point.positionToArray(pointArray)\r\n    }\r\n\r\n    const nodeList = this.kdtree.nearest(pointArray, maxNodes, maxDistance)\r\n\r\n    const indices = this.kdtree.indices\r\n    const nodes = this.kdtree.nodes\r\n    const atomIndices = this.atomIndices\r\n    const resultList = []\r\n\r\n    for (let i = 0, n = nodeList.length; i < n; ++i) {\r\n      const d = nodeList[ i ]\r\n      const nodeIndex = d[ 0 ]\r\n      const dist = d[ 1 ]\r\n\r\n      resultList.push({\r\n        index: atomIndices[ indices[ nodes[ nodeIndex ] ] ],\r\n        distance: dist\r\n      })\r\n    }\r\n\r\n    // Log.timeEnd( \"Kdtree nearest\" );\r\n\r\n    return resultList\r\n  }\r\n}\r\n\r\nexport default Kdtree\r\n","/**\r\n * @file Symmetry Constants\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nexport const SymOpCode: { [k: string]: string } = {\r\n  ' ': 'X',\r\n  '!': 'Y',\r\n  '#': 'Z',\r\n  '$': '-X',\r\n  '%': '-Y',\r\n  '&': '-Z',\r\n  \"'\": 'Y+1/2',\r\n  '(': '1/2+X',\r\n  ')': '1/2+Y',\r\n  '*': '1/2-X',\r\n  '+': '1/2+Z',\r\n  ',': '1/2-Y',\r\n  '-': '1/2-Z',\r\n  '.': 'X+1/2',\r\n  '/': 'Z+1/2',\r\n  '0': '-X+1/2',\r\n  '1': '-Y+1/2',\r\n  '2': '-Z+1/2',\r\n  '3': '1/4+X',\r\n  '4': '1/4-Y',\r\n  '5': '1/4+Z',\r\n  '6': '1/4-X',\r\n  '7': '1/4+Y',\r\n  '8': '3/4-Y',\r\n  '9': '3/4+Z',\r\n  ':': '3/4+Y',\r\n  ';': '3/4+X',\r\n  '<': '3/4-X',\r\n  '=': '1/4-Z',\r\n  '>': '3/4-Z',\r\n  '?': 'X-Y',\r\n  '@': 'Y-X',\r\n  'A': 'Z+1/3',\r\n  'B': 'Z+2/3',\r\n  'C': 'X+2/3',\r\n  'D': 'Y+1/3',\r\n  'E': '-Y+2/3',\r\n  'F': 'X-Y+1/3',\r\n  'G': 'Y-X+2/3',\r\n  'H': '-X+1/3',\r\n  'I': 'X+1/3',\r\n  'J': 'Y+2/3',\r\n  'K': '-Y+1/3',\r\n  'L': 'X-Y+2/3',\r\n  'M': 'Y-X+1/3',\r\n  'N': '-X+2/3',\r\n  'O': '2/3+X',\r\n  'P': '1/3+Y',\r\n  'Q': '1/3+Z',\r\n  'R': '2/3-Y',\r\n  'S': '1/3+X-Y',\r\n  'T': '2/3+Y-X',\r\n  'U': '1/3-X',\r\n  'V': '2/3-X',\r\n  'W': '1/3-Y',\r\n  'X': '1/3-Z',\r\n  'Y': '2/3+Y',\r\n  'Z': '1/3+Y-X',\r\n  '[': '2/3+X-Y',\r\n  ']': '1/3+X',\r\n  '^': '2/3+Z',\r\n  '_': '2/3-Z',\r\n  '`': '5/6+Z',\r\n  'a': '1/6+Z',\r\n  'b': '5/6-Z',\r\n  'c': '1/6-Z',\r\n  'd': 'Z+5/6',\r\n  'e': 'Z+1/6',\r\n  'f': 'Z+1/4',\r\n  'g': '+Y'\r\n}\r\n\r\n// encoded, originally from CCP4 symop.lib\r\nexport const EncodedSymOp: { [k: string]: string } = {\r\n  'P 1': ' !#',\r\n  'P -1': ' !#$%&',\r\n  'P 1 2 1': ' !#$!&',\r\n  'P 1 21 1': \" !#$'&\",\r\n  'C 1 2 1': ' !#$!&()#*)&',\r\n  'P 1 m 1': ' !# %#',\r\n  'P 1 c 1': ' !# %+',\r\n  'C 1 m 1': ' !# %#()#(,#',\r\n  'C 1 c 1': ' !# %+()#(,+',\r\n  'P 1 2/m 1': ' !# %#$!&$%&',\r\n  'P 1 21/m 1': ' !#$)&$%& ,#',\r\n  'C 1 2/m 1': ' !# %#$!&$%&()#(,#*)&*,&',\r\n  'P 1 2/c 1': ' !#$!-$%& %+',\r\n  'P 1 21/c 1': ' !#$%&$)- ,+',\r\n  'C 1 2/c 1': ' !#$!-$%& %+()#*)-*,&(,+',\r\n  'P 2 2 2': ' !#$%#$!& %&',\r\n  'P 2 2 21': ' !#$%+$!- %&',\r\n  'P 21 21 2': ' !#$%#*)&(,&',\r\n  'P 21 21 21': ' !#*%+$)-(,&',\r\n  'C 2 2 21': ' !#$%+$!- %&()#*,+*)-(,&',\r\n  'C 2 2 2': ' !#$%#$!& %&()#*,#*)&(,&',\r\n  'F 2 2 2': ' !#$%#$!& %& )+$,+$)- ,-(!+*%+*!-(%-()#*,#*)&(,&',\r\n  'I 2 2 2': \" !#$%# %&$!&.'/01/.120'2\",\r\n  'I 21 21 21': ' !#*%+$)-(,&()+$,#*!& %-',\r\n  'P m m 2': ' !#$%# %#$!#',\r\n  'P m c 21': ' !#$%+ %+$!#',\r\n  'P c c 2': ' !#$%# %+$!+',\r\n  'P m a 2': ' !#$%#(%#*!#',\r\n  'P c a 21': ' !#$%+(%#*!+',\r\n  'P n c 2': ' !#$%# ,+$)+',\r\n  'P m n 21': ' !#*%+(%+$!#',\r\n  'P b a 2': ' !#$%#(,#*)#',\r\n  'P n a 21': ' !#$%+(,#*)+',\r\n  'P n n 2': ' !#$%#(,+*)+',\r\n  'C m m 2': ' !#$%# %#$!#()#*,#(,#*)#',\r\n  'C m c 21': ' !#$%+ %+$!#()#*,+(,+*)#',\r\n  'C c c 2': ' !#$%# %+$!+()#*,#(,+*)+',\r\n  'A m m 2': ' !#$%# %#$!# )+$,+ ,+$)+',\r\n  'A b m 2': ' !#$%# ,#$)# )+$,+ %+$!+',\r\n  'A m a 2': ' !#$%#(%#*!# )+$,+(,+*)+',\r\n  'A b a 2': ' !#$%#(,#*)# )+$,+(%+*!+',\r\n  'F m m 2': ' !#$%# %#$!# )+$,+ ,+$)+(!+*%+(%+*!+()#*,#(,#*)#',\r\n  'F d d 2': ' !#$%#345675 )+$,+3896:9(!+*%+;49<79()#*,#;85<:5',\r\n  'I m m 2': ' !#$%# %#$!#()+*,+(,+*)+',\r\n  'I b a 2': ' !#$%#(,#*)#()+*,+ %+$!+',\r\n  'I m a 2': ' !#$%#(%#*!#()+*,+ ,+$)+',\r\n  'P 2/m 2/m 2/m': ' !#$%#$!& %&$%& !& %#$!#',\r\n  'P 2/n 2/n 2/n': ' !#$%#$!& %&*,-()-(,+*)+',\r\n  'P 2/c 2/c 2/m': ' !#$%#$!- %-$%& !& %+$!+',\r\n  'P 2/b 2/a 2/n': ' !#$%#$!& %&*,&()&(,#*)#',\r\n  'P 21/m 2/m 2/a': ' !#*%#$!&(%&$%&(!& %#*!#',\r\n  'P 2/n 21/n 2/a': ' !#*%#*)- ,-$%&(!&(,+$)+',\r\n  'P 2/m 2/n 21/a': ' !#*%+*!- %&$%&(!-(%+$!#',\r\n  'P 21/c 2/c 2/a': ' !#*%#$!-(%-$%&(!& %+*!+',\r\n  'P 21/b 21/a 2/m': ' !#$%#*)&(,&$%& !&(,#*)#',\r\n  'P 21/c 21/c 2/n': ' !#*,#$)-(%-$%&()& ,+*!+',\r\n  'P 2/b 21/c 21/m': ' !#$%+$)- ,&$%& !- ,+$)#',\r\n  'P 21/n 21/n 2/m': ' !#$%#*)-(,-$%& !&(,+*)+',\r\n  'P 21/m 21/m 2/n': \" !#$%#*'&.,&*,&.'& %#$!#\",\r\n  'P 21/b 2/c 21/n': ' !#*,+$!-(,&$%&()- %+*)#',\r\n  'P 21/b 21/c 21/a': ' !#*%+$)-(,&$%&(!- ,+*)#',\r\n  'P 21/n 21/m 21/a': \" !#0%/$'&.12$%&.!2 1#0'/\",\r\n  'C 2/m 2/c 21/m': ' !#$%+$!- %&$%& !- %+$!#()#*,+*)-(,&*,&()-(,+*)#',\r\n  'C 2/m 2/c 21/a': ' !#$,+$)- %&$%& )- ,+$!#()#*%+*!-(,&*,&(!-(%+*)#',\r\n  'C 2/m 2/m 2/m': ' !#$%#$!& %&$%& !& %#$!#()#*,#*)&(,&*,&()&(,#*)#',\r\n  'C 2/c 2/c 2/m': ' !#$%#$!- %-$%& !& %+$!+()#*,#*)-(,-*,&()&(,+*)+',\r\n  'C 2/m 2/m 2/a': ' !#$,#$)& %&$%& )& ,#$!#()#*%#*!&(,&*,&(!&(%#*)#',\r\n  'C 2/c 2/c 2/a': ' !#*,#$!&(,&$,-(!- ,+*!+()#$%#*)& %&*%- )-(%+$)+',\r\n  'F 2/m 2/m 2/m': ' !#$%#$!& %&$%& !& %#$!# )+$,+$)- ,-$,- )- ,+$)+(!+*%+*!-(%-*%-(!-(%+*!+()#*,#*)&(,&*,&()&(,#*)#',\r\n  'F 2/d 2/d 2/d': ' !#$%#$!& %&64=37=345675 )+$,+$)- ,-68>3:>3896:9(!+*%+*!-(%-<4>;7>;49<79()#*,#*)&(,&<8=;:=;85<:5',\r\n  'I 2/m 2/m 2/m': ' !#$%#$!& %&$%& !& %#$!#()+*,+*)-(,-*,-()-(,+*)+',\r\n  'I 2/b 2/a 2/m': ' !#$%#*)&(,&$%& !&(,#*)#()+*,+$!- %-*,-()- %+$!+',\r\n  'I 21/b 21/c 21/a': ' !#*%+$)-(,&$%&(!- ,+*)#()+$,#*!& %-*,- )&(%#$!+',\r\n  'I 21/m 21/m 21/a': ' !#$,#$)& %&$%& )& ,#$!#()+*%+*!-(,-*,-(!-(%+*)+',\r\n  'P 4': ' !#$%#% #!$#',\r\n  'P 41': ' !#$%+% 5!$9',\r\n  'P 42': ' !#$%#% +!$+',\r\n  'P 43': ' !#$%+% 9!$5',\r\n  'I 4': ' !#$%#% #!$#()+*,+,(+)*+',\r\n  'I 41': ' !#*,+%(5)$9()+$%#, 9!*5',\r\n  'P -4': ' !#$%#!$&% &',\r\n  'I -4': ' !#$%#!$&% &()+*,+)*-,(-',\r\n  'P 4/m': ' !#$%#% #!$#$%& !&!$&% &',\r\n  'P 42/m': ' !#$%#% +!$+$%& !&!$-% -',\r\n  'P 4/n': ' !#$%#,(#)*#*,&()&!$&% &',\r\n  'P 42/n': ' !#$%#,(+)*+*,-()-!$&% &',\r\n  'I 4/m': ' !#$%#% #!$#$%& !&!$&% &()+*,+,(+)*+*,-()-)*-,(-',\r\n  'I 41/a': ' !#*,+%(5)$9$,=(!>!$&,(-()+$%#, 9!*5*%> )=)*-% &',\r\n  'P 4 2 2': ' !#$%#% #!$#$!& %&! &%$&',\r\n  'P 4 21 2': ' !#$%#,(#)*#*)&(,&! &%$&',\r\n  'P 41 2 2': ' !#$%+% 5!$9$!& %-! >%$=',\r\n  'P 41 21 2': ' !#$%+,(5)*9*)=(,>! &%$-',\r\n  'P 42 2 2': ' !#$%#% +!$+$!& %&! -%$-',\r\n  'P 42 21 2': ' !#$%#,(+)*+*)-(,-! &%$&',\r\n  'P 43 2 2': ' !#$%+% 9!$5$!& %-! =%$>',\r\n  'P 43 21 2': ' !#$%+,(9)*5*)>(,=! &%$-',\r\n  'I 4 2 2': ' !#$%#% #!$#$!& %&! &%$&()+*,+,(+)*+*)-(,-)(-,*-',\r\n  'I 41 2 2': ' !#*,+%(5)$9*!> ,=)(-%$&()+$%#, 9!*5$)=(%>! &,*-',\r\n  'P 4 m m': ' !#$%#% #!$# %#$!#%$#! #',\r\n  'P 4 b m': ' !#$%#% #!$#(,#*)#,*#)(#',\r\n  'P 42 c m': ' !#$%#% +!$+ %+$!+%$#! #',\r\n  'P 42 n m': ' !#$%#,(+)*+(,+*)+%$#! #',\r\n  'P 4 c c': ' !#$%#% #!$# %+$!+%$+! +',\r\n  'P 4 n c': ' !#$%#% #!$#(,+*)+,*+)(+',\r\n  'P 42 m c': ' !#$%#% +!$+ %#$!#%$+! +',\r\n  'P 42 b c': ' !#$%#% +!$+(,#*)#,*+)(+',\r\n  'I 4 m m': ' !#$%#% #!$# %#$!#%$#! #()+*,+,(+)*+(,+*)+,*+)(+',\r\n  'I 4 c m': ' !#$%#% #!$# %+$!+%$+! +()+*,+,(+)*+(,#*)#,*#)(#',\r\n  'I 41 m d': ' !#*,+%(5)$9 %#*)+%*5) 9()+$%#, 9!*5(,+$!#,$9!(5',\r\n  'I 41 c d': ' !#*,+%(5)$9 %+*)#%*9) 5()+$%#, 9!*5(,#$!+,$5!(9',\r\n  'P -4 2 m': ' !#$%#% &!$&$!& %&%$#! #',\r\n  'P -4 2 c': ' !#$%#% &!$&$!- %-%$+! +',\r\n  'P -4 21 m': ' !#$%#% &!$&*)&(,&,*#)(#',\r\n  'P -4 21 c': ' !#$%#% &!$&*)-(,-,*+)(+',\r\n  'P -4 m 2': ' !#$%#!$&% & %#$!#! &%$&',\r\n  'P -4 c 2': ' !#$%#% &!$& %+$!+! -%$-',\r\n  'P -4 b 2': ' !#$%#% &!$&(,#*)#)(&,*&',\r\n  'P -4 n 2': ' !#$%#% &!$&(,+*)+)(-,*-',\r\n  'I -4 m 2': ' !#$%#% &!$& %#$!#! &%$&()+*,+,(-)*-(,+*)+)(-,*-',\r\n  'I -4 c 2': ' !#$%#% &!$& %+$!+! -%$-()+*,+,(-)*-(,#*)#)(&,*&',\r\n  'I -4 2 m': ' !#$%#% &!$&$!& %&%$#! #()+*,+,(-)*-*)-(,-,*+)(+',\r\n  'I -4 2 d': ' !#$%#% &!$&*!>(%>,$9) 9()+*,+,(-)*-$)= ,=%*5!(5',\r\n  'P 4/m 2/m 2/m': ' !#$%#% #!$#$!& %&! &%$&$%& !&!$&% & %#$!#%$#! #',\r\n  'P 4/m 2/c 2/c': ' !#$%#% #!$#$!- %-! -%$-$%& !&!$&% & %+$!+%$+! +',\r\n  'P 4/n 2/b 2/m': ' !#$%#% #!$#$!& %&! &%$&*,&()&)*&,(&(,#*)#,*#)(#',\r\n  'P 4/n 2/n 2/c': ' !#$%#% #!$#$!& %&! &%$&*,-()-)*-,(-(,+*)+,*+)(+',\r\n  'P 4/m 21/b 2/m': ' !#$%#% #!$#*)&(,&)(&,*&$%& !&!$&% &(,#*)#,*#)(#',\r\n  'P 4/m 21/n 2/c': ' !#$%#% #!$#*)-(,-)(-,*-$%& !&!$&% &(,+*)+,*+)(+',\r\n  'P 4/n 21/m 2/m': ' !#$%#,(#)*#*)&(,&! &%$&*,&()&!$&% & %#$!#,*#)(#',\r\n  'P 4/n 2/c 2/c': ' !#$%#,(#)*#*)-(,-! -%$-*,&()&!$&% & %+$!+,*+)(+',\r\n  'P 42/m 2/m 2/c': ' !#$%#% +!$+$!& %&! -%$-$%& !&!$-% - %#$!#%$+! +',\r\n  'P 42/m 2/c 2/m': ' !#$%#% +!$+$!- %-! &%$&$%& !&!$-% - %+$!+%$#! #',\r\n  'P 42/n 2/b 2/c': ' !#$%#,(+)*+$!- %-)(&,*&*,-()-!$&% &(,#*)#%$+! +',\r\n  'P 42/n 2/n 2/m': ' !#$%#,(+)*+$!& %&)(-,*-*,-()-!$&% &(,+*)+%$#! #',\r\n  'P 42/m 21/b 2/c': ' !#$%#% +!$+*)&(,&)(-,*-$%& !&!$-% -(,#*)#,*+)(+',\r\n  'P 42/m 21/n 2/m': \" !#$%#,./'*/*'-.,-! &%$&$%& !&'*-,.-.,/*'/%$#! #\",\r\n  'P 42/n 21/m 2/c': ' !#$%#,(+)*+*)-(,-! &%$&*,-()-!$&% & %#$!#,*+)(+',\r\n  'P 42/n 21/c 2/m': ' !#$%#,(+)*+*)&(,&! -%$-*,-()-!$&% & %+$!+,*#)(#',\r\n  'I 4/m 2/m 2/m': ' !#$%#% #!$#$!& %&! &%$&$%& !&!$&% & %#$!#%$#! #()+*,+,(+)*+*)-(,-)(-,*-*,-()-)*-,(-(,+*)+,*+)(+',\r\n  'I 4/m 2/c 2/m': ' !#$%#% #!$#$!- %-! -%$-$%& !&!$&% & %+$!+%$+! +()+*,+,(+)*+*)&(,&)(&,*&*,-()-)*-,(-(,#*)#,*#)(#',\r\n  'I 41/a 2/m 2/d': ' !#*,+%(5)$9*!> ,=)(-%$&$,=(!>!$&,(-(,+$!#,$9!(5()+$%#, 9!*5$)=(%>! &,*-*%> )=)*-% & %#*)+%*5) 9',\r\n  'I 41/a 2/c 2/d': ' !#*,+%(5)$9*!= ,>)(&%$-$,=(!>!$&,(-(,#$!+,$5!(9()+$%#, 9!*5$)>(%=! -,*&*%> )=)*-% & %+*)#%*9) 5',\r\n  'P 3': ' !#%?#@$#',\r\n  'P 31': ' !#%?A@$B',\r\n  'P 32': ' !#%?B@$A',\r\n  'H 3': ' !#%?#@$#CDAEFAGHAIJBKLBMNB',\r\n  'R 3': ' !## !!# ',\r\n  'P -3': ' !#%?#@$#$%&!@&? &',\r\n  'H -3': ' !#%?#@$#$%&!@&? &OPQRSQTUQVWXYZX[]X]Y^W[^ZV^UR_PT_SO_',\r\n  'R -3': ' !## !!# $%&&$%%&$',\r\n  'P 3 1 2': ' !#%?#@$#%$&@!& ?&',\r\n  'P 3 2 1': ' !#%?#@$#! &?%&$@&',\r\n  'P 31 1 2': ' !#%?Q@$^%$_@!X ?&',\r\n  'P 31 2 1': ' !#%?A@$B! &?%_$@X',\r\n  'P 32 1 2': ' !#%?^@$Q%$X@!_ ?&',\r\n  'P 32 2 1': ' !#%?B@$A! &?%X$@_',\r\n  'H 3 2': ' !#%?#@$#! &?%&$@&OPQRSQTUQY]X[WXVZX]Y^W[^ZV^PO_SR_UT_',\r\n  'R 3 2': ' !## !!# %$&$&%&%$',\r\n  'P 3 m 1': ' !#%?#@$#%$#@!# ?#',\r\n  'P 3 1 m': ' !#%?#@$#! #?%#$@#',\r\n  'P 3 c 1': ' !#%?#@$#%$+@!+ ?+',\r\n  'P 3 1 c': ' !#%?#@$#! +?%+$@+',\r\n  'H 3 m': ' !#%?#@$#%$#@!# ?#OPQRSQTUQRUQTPQOSQ]Y^W[^ZV^WV^ZY^][^',\r\n  'R 3 m': ' !## !!# ! # #!#! ',\r\n  'H 3 c': ' !#%?#@$#%$+@!+ ?+OPQRSQTUQRU`TP`OS`]Y^W[^ZV^WVaZYa][a',\r\n  'R 3 c': \" !## !!# '././'/'.\",\r\n  'P -3 1 2/m': ' !#%?#@$#%$&@!& ?&$%&!@&? &! #?%#$@#',\r\n  'P -3 1 2/c': ' !#%?#@$#%$-@!- ?-$%&!@&? &! +?%+$@+',\r\n  'P -3 2/m 1': ' !#%?#@$#! &?%&$@&$%&!@&? &%$#@!# ?#',\r\n  'P -3 2/c 1': ' !#%?#@$#! -?%-$@-$%&!@&? &%$+@!+ ?+',\r\n  'H -3 2/m': ' !#%?#@$#! &?%&$@&$%&!@&? &%$#@!# ?#OPQRSQTUQY]X[WXVZXVWXYZX[]XRUQTPQOSQ]Y^W[^ZV^PO_SR_UT_UR_PT_SO_WV^ZY^][^',\r\n  'R -3 2/m': ' !## !!# %$&$&%&%$$%&&$%%&$! # #!#! ',\r\n  'H -3 2/c': ' !#%?#@$#! -?%-$@-$%&!@&? &%$+@!+ ?+OPQRSQTUQY]b[WbVZbVWXYZX[]XRU`TP`OS`]Y^W[^ZV^POcSRcUTcUR_PT_SO_WVaZYa][a',\r\n  'R -3 2/c': \" !## !!# 102021210$%&&$%%&$'././'/'.\",\r\n  'P 6': ' !#%?#@$#$%#!@#? #',\r\n  'P 61': ' !#%?A@$B$%/!@d? e',\r\n  'P 65': ' !#%?B@$A$%/!@e? d',\r\n  'P 62': ' !#%?^@$Q$%#!@^? Q',\r\n  'P 64': ' !#%?Q@$^$%#!@Q? ^',\r\n  'P 63': ' !#%?#@$#$%+!@+? +',\r\n  'P -6': ' !#%?#@$# !&%?&@$&',\r\n  'P 6/m': ' !#%?#@$#$%#!@#? #$%&!@&? & !&%?&@$&',\r\n  'P 63/m': ' !#%?#@$#$%+!@+? +$%&!@&? & !-%?-@$-',\r\n  'P 6 2 2': ' !#%?#@$#$%#!@#? #! &?%&$@&%$&@!& ?&',\r\n  'P 61 2 2': ' !#%?Q@$^$%+!@`? a! X?%&$@_%$b@!- ?c',\r\n  'P 65 2 2': ' !#%?^@$Q$%+!@a? `! _?%&$@X%$c@!- ?b',\r\n  'P 62 2 2': ' !#%?^@$Q$%#!@^? Q! _?%&$@X%$_@!& ?X',\r\n  'P 64 2 2': ' !#%?Q@$^$%#!@Q? ^! X?%&$@_%$X@!& ?_',\r\n  'P 63 2 2': ' !#%?#@$#$%+!@+? +! &?%&$@&%$-@!- ?-',\r\n  'P 6 m m': ' !#%?#@$#$%#!@#? #%$#@!# ?#! #?%#$@#',\r\n  'P 6 c c': ' !#%?#@$#$%#!@#? #%$+@!+ ?+! +?%+$@+',\r\n  'P 63 c m': ' !#%?#@$#$%+!@+? +%$+@!+ ?+! #?%#$@#',\r\n  'P 63 m c': ' !#%?#@$#$%+!@+? +%$#@!# ?#! +?%+$@+',\r\n  'P -6 m 2': ' !#%?#@$# !&%?&@$&%$#@!# ?#%$&@!& ?&',\r\n  'P -6 c 2': ' !#%?#@$# !-%?-@$-%$+@!+ ?+%$&@!& ?&',\r\n  'P -6 2 m': ' !#%?#@$# !&%?&@$&! &?%&$@&! #?%#$@#',\r\n  'P -6 2 c': ' !#%?#@$# !-%?-@$-! &?%&$@&! +?%+$@+',\r\n  'P 6/m 2/m 2/m': ' !#%?#@$#$%#!@#? #! &?%&$@&%$&@!& ?&$%&!@&? & !&@$&%?&%$#@!# ?#! #?%#$@#',\r\n  'P 6/m 2/c 2/c': ' !#%?#@$#$%#!@#? #! -?%-$@-%$-@!- ?-$%&!@&? & !&@$&%?&%$+@!+ ?+! +?%+$@+',\r\n  'P 63/m 2/c 2/m': ' !#%?#@$#$%+!@+? +! -?%-$@-%$&@!& ?&$%&!@&? & !-@$-%?-%$+@!+ ?+! #?%#$@#',\r\n  'P 63/m 2/m 2/c': ' !#%?#@$#$%+!@+? +! &?%&$@&%$-@!- ?-$%&!@&? & !-@$-%?-%$#@!# ?#! +?%+$@+',\r\n  'P 2 3': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& ',\r\n  'F 2 3': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%&  )+$,+$)- ,-#()#*,&*)&(,!+(%+*!-*%-((!+*%+*!-(%-+ )+$,-$)- ,)#(,#*)&*,&(()#*,#*)&(,&+(!+*%-*!-(%)+ ,+$)-$,- ',\r\n  'I 2 3': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& ()+*,+*)-(,-+()+*,-*)-(,)+(,+*)-*,-(',\r\n  'P 21 3': ' !#*%+$)-(,&# !+*%-$)&(,!# %+*)-$,&(',\r\n  'I 21 3': ' !#*%+$)-(,&# !+*%-$)&(,!# %+*)-$,&(()+$,#*!& %-+()#$,&*!- %)+(,#$!&*%- ',\r\n  'P 2/m -3': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& $%& !& %#$!#&$%& !# %#$!%&$!& %# !#$',\r\n  'P 2/n -3': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& *,-()-(,+*)+-*,-()+(,+*),-*)-(,+()+*',\r\n  'F 2/m -3': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& $%& !& %#$!#&$%& !# %#$!%&$!& %# !#$ )+$,+$)- ,-#()#*,&*)&(,!+(%+*!-*%-($,- )- ,+$)+&*,&()#(,#*)%-*!-(%+(!+*(!+*%+*!-(%-+ )+$,-$)- ,)#(,#*)&*,&(*%-(!-(%+*!+-$,- )+ ,+$),&*)&(,#()#*()#*,#*)&(,&+(!+*%-*!-(%)+ ,+$)-$,- *,&()&(,#*)#-*%-(!+(%+*!,-$)- ,+ )+$',\r\n  'F 2/d -3': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& 64=37=345675=64=375345674=67=3453756 )+$,+$)- ,-#()#*,&*)&(,!+(%+*!-*%-(68>3:>3896:9=<8=;:5;85<:4><7>;49;79<(!+*%+*!-(%-+ )+$,-$)- ,)#(,#*)&*,&(<4>;7>;49<79>68>3:93896:8=<:=;85;:5<()#*,#*)&(,&+(!+*%-*!-(%)+ ,+$)-$,- <8=;:=;8f<:f><4>;79;49<78>6:>3893:96',\r\n  'I 2/m -3': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& $%& !& %#$!#&$%& !# %#$!%&$!& %# !#$()+*,+*)-(,-+()+*,-*)-(,)+(,+*)-*,-(*,-()-(,+*)+-*,-()+(,+*),-*)-(,+()+*',\r\n  'P 21/a -3': ' !#*%+$)-(,&# !+*%-$)&(,!# %+*)-$,&($%&(!- ,+*)#&$%-(!+ ,#*)%&$!-(,+ )#*',\r\n  'I 21/a -3': ' !#*%+$)-(,&# !+*%-$)&(,!# %+*)-$,&($%&(!- ,+*)#&$%-(!+ ,#*)%&$!-(,+ )#*()+$,#*g& %-+()#$,&*!- %)+(,#$!&*%- *,- )&(%#$!+-*,& )#(%+$!,-*)& %#(!+$',\r\n  'P 4 3 2': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& ! &%$&!$#% # #%$#!$&% &!#!$#% &! &%$',\r\n  'P 42 3 2': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& )(-,*-)*+,(+(+,*+)*-,(-)+)*+,(-)(-,*',\r\n  'F 4 3 2': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& ! &%$&!$#% # #%$#!$&% &!#!$#% &! &%$ )+$,+$)- ,-#()#*,&*)&(,!+(%+*!-*%-(!(-%*-!*+%(+ +,$+)$-, -)#)*#,(&)(&,*(!+*%+*!-(%-+ )+$,-$)- ,)#(,#*)&*,&() -,$-)$+, +(#,*#)*&,(&)+!*+%(-!(-%*()#*,#*)&(,&+(!+*%-*!-(%)+ ,+$)-$,- )(&,*&)*#,(#(+%*+!*-%(-!+)$+, -) -,$',\r\n  'F 41 3 2': ' !#$,+*)&(%-# !+$,&*)-(%!# ,+$)&*%-(:3>46=7<98;5;58<976=43>:97<58;>:3=46 )+$%#*!-(,&#()+*%&$!- ,!+(,#*)-$%& :;=4<>765839;94<5:6>83=79:6543>7;=8<(!+*,#$)- %&+ )#$%-*!&(,)#(%+*!&$,- 73=86>:<54;935469:<=8;>7576983=:;>4<()#*%+$!& ,-+(!#*,-$)& %)+ %#$!-*,&(7;>8<=:69435398657<>4;=:5:<94;=73>86',\r\n  'I 4 3 2': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& ! &%$&!$#% # #%$#!$&% &!#!$#% &! &%$()+*,+*)-(,-+()+*,-*)-(,)+(,+*)-*,-()(-,*-)*+,(+(+,*+)*-,(-)+)*+,(-)(-,*',\r\n  'P 43 3 2': ' !#*%+$)-(,&# !+*%-$)&(,!# %+*)-$,&(7;>46=:<5839398<5:6=4;>75:<983>7;=46',\r\n  'P 41 3 2': ' !#*%+$)-(,&# !+*%-$)&(,!# %+*)-$,&(:3=8<>7694;5;54697<>83=:97654;=:3>8<',\r\n  'I 41 3 2': ' !#*%+$)-(,&# !+*%-$)&(,!# %+*)-$,&(:3=8<>7694;5;54697<>83=:97654;=:3>8<()+$,#*!& %-+()#$,&*!- %)+(,#$!&*%- 7;>46=:<5839398<5:6=4;>75:<983>7;=46',\r\n  'P -4 3 m': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& ! #%$#!$&% & #!$#%$&! &%#! #%$&!$&% ',\r\n  'F -4 3 m': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& ! #%$#!$&% & #!$#%$&! &%#! #%$&!$&%  )+$,+$)- ,-#()#*,&*)&(,!+(%+*!-*%-(!(+%*+!*-%(- +)$+,$-) -,#)(#,*&)*&,((!+*%+*!-(%-+ )+$,-$)- ,)#(,#*)&*,&() +,$+)$-, -(#)*#,*&)(&,+!(+%*-!*-%(()#*,#*)&(,&+(!+*%-*!-(%)+ ,+$)-$,- )(#,*#)*&,(&(+!*+%*-!(-%+) +,$-)$-, ',\r\n  'I -4 3 m': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& ! #%$#!$&% & #!$#%$&! &%#! #%$&!$&% ()+*,+*)-(,-+()+*,-*)-(,)+(,+*)-*,-()(+,*+)*-,(-(+)*+,*-)(-,+)(+,*-)*-,(',\r\n  'P -4 3 n': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& )(+,*+)*-,(-(+)*+,*-)(-,+)(+,*-)*-,(',\r\n  'F -4 3 c': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& )(+,*+)*-,(-(+)*+,*-)(-,+)(+,*-)*-,( )+$,+$)- ,-#()#*,&*)&(,!+(%+*!-*%-() #,$#)$&, &(#!*#%*&!(&%+! +%$-!$-% (!+*%+*!-(%-+ )+$,-$)- ,)#(,#*)&*,&(!(#%*#!*&%(& +!$+%$-! -%#) #,$&)$&, ()#*,#*)&(,&+(!+*%-*!-(%)+ ,+$)-$,- ! +%$+!$-% - #)$#,$&) &,#!(#%*&!*&%(',\r\n  'I -4 3 d': ' !#*%+$)-(,&# !+*%-$)&(,!# %+*)-$,&(7354<9:6>8;=357<946>:;=857394<>:6=8;()+$,#*!& %-+()#$,&*!- %)+(,#$!&*%- :;98657<=43>;9:658<=73>49:;586=7<>43',\r\n  'P 4/m -3 2/m': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& ! &%$&!$#% # #%$#!$&% &!#!$#% &! &%$$%& !& %#$!#&$%& !# %#$!%&$!& %# !#$%$#! #% &!$&$&! &% #!$#%&% &!$#%$#! ',\r\n  'P 4/n -3 2/n': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& ! &%$&!$#% # #%$#!$&% &!#!$#% &! &%$*,-()-(,+*)+-*,-()+(,+*),-*)-(,+()+*,*+)(+,(-)*-*-)(-,(+)*+,-,(-)*+,*+)(',\r\n  'P 42/m -3 2/n': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& )(-,*-)*+,(+(+,*+)*-,(-)+)*+,(-)(-,*$%& !& %#$!#&$%& !# %#$!%&$!& %# !#$,*+)(+,(-)*-*-)(-,(+)*+,-,(-)*+,*+)(',\r\n  'P 42/n -3 2/m': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& )(-,*-)*+,(+(+,*+)*-,(-)+)*+,(-)(-,**,-()-(,+*)+-*,-()+(,+*),-*)-(,+()+*%$#! #% &!$&$&! &% #!$#%&% &!$#%$#! ',\r\n  'F 4/m -3 2/mr\n  'F 4/m -3 2/cr\n  'F 41/d -3 2/m': ' !#$,+*)&(%-# !+$,&*)-(%!# ,+$)&*%-(:3>46=7<98;5;58<976=43>:97<58;>:3=4664=3:>;85<79=64>3:5;89<74=6:>385;79<,$+! #%(-)*&*&)(-% #!$+,-%(&)*+,$#!  )+$%#*!-(,&#()+*%&$!- ,!+(,#*)-$%& :;=4<>765839;94<5:6>83=79:6543>7;=8<68>37=;49<:5=<8>;753496:4><:=;893756,*#!(+% &)$-*-!(&, +)$#%-, &!$+%*#)((!+*,#$)- %&+ )#$%-*!&(,)#(%+*!&$,- 73=86>:<54;935469:<=8;>7576983=:;>4<<4>;:=389675>68=379;45<:8=<7>;453:96%$#) +,(&!*-$&! -,(#)*+%&% -)$#,*+!(()#*%+$!& ,-+(!#*,-$)& %)+ %#$!-*,&(7;>8<=:69435398657<>4;=:5:<94;=73>86<8=;7>3456:9><4=;:9385678>67=349;:5<%*+)(#, -!$&$-) &%(+!*#,&,(-!*#%$+) ',\r\n  'F 41/d -3 2/cr\n  'I 4/m -3 2/m': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& ! &%$&!$#% # #%$#!$&% &!#!$#% &! &%$$%& !& %#$!#&$%& !# %#$!%&$!& %# !#$%$#! #% &!$&$&! &% #!$#%&% &!$#%$#! ()+*,+*)-(,-+()+*,-*)-(,)+(,+*)-*,-()(-,*-)*+,(+(+,*+)*-,(-)+)*+,(-)(-,**,-()-(,+*)+-*,-()+(,+*),-*)-(,+()+*,*+)(+,(-)*-*-)(-,(+)*+,-,(-)*+,*+)(',\r\n  'I 41/a -3 2/d': ' !#*%+$)-(,&# !+*%-$)&(,!# %+*)-$,&(:3=8<>7694;5;54697<>83=:97654;=:3>8<$%&(!- ,+*)#&$%-(!+ ,#*)%&$!-(,+ )#*4<97358;=:6>6>:;=8357<94=8;>:694<573()+$,#*!& %-+()#$,&*!- %)+(,#$!&*%- 7;>46=:<5839398<5:6=4;>75:<983>7;=46*,- )&(%#$!+-*,& )#(%+$!,-*)& %#(!+$865:;943>7<=<=73>4;9:658>43=7<5869:;',\r\n  'P 1 1 2': ' !#$%#',\r\n  'P 1 1 21': ' !#$%+',\r\n  'B 1 1 2': ' !#$%#(g+*%+',\r\n  'A 1 2 1': ' !#$!& )+$)-',\r\n  'C 1 21 1': ' !#$)&()#*!&',\r\n  'I 1 2 1': \" !#$!&.'/0'2\",\r\n  'I 1 21 1': \" !#$)&.'/0!-\",\r\n  'P 1 1 m': ' !# !&',\r\n  'P 1 1 b': ' !# )&',\r\n  'B 1 1 m': ' !# !&(!+(!-',\r\n  'B 1 1 b': ' !# )&(!+()-',\r\n  'P 1 1 2/m': ' !# !&$%#$%&',\r\n  'P 1 1 21/m': ' !#$%+$%& !-',\r\n  'B 1 1 2/m': ' !# !&$%#$%&(!+(!-*%+*%-',\r\n  'P 1 1 2/b': ' !#$,#$%& )&',\r\n  'P 1 1 21/b': ' !#$%&$,+ )-',\r\n  'B 1 1 2/b': ' !#$,#$%& )&(!+*,+*%-()-',\r\n  'P 21 2 2': ' !#$!&(%&*%#',\r\n  'P 2 21 2': ' !# ,&$)&$%#',\r\n  'P 21 21 2 (a)': \" !#*,#.%&$'&\",\r\n  'P 21 2 21': ' !#$!&(%-*%+',\r\n  'P 2 21 21': ' !# %&$)-$,+',\r\n  'C 2 2 21a)': ' !#*%+(,&$)-()#$,+ %&*!-',\r\n  'C 2 2 2a': \" !#*,#.%&$'&()#$%# ,&*!&\",\r\n  'F 2 2 2a': \" !#*,#.%&$'& '/*%/.12$!2.!/$,/ %20'2.'#$%# 1&0!&\",\r\n  'I 2 2 2a': \" !#*,#.%&$'&()+$%+*!- ,-\",\r\n  'P 21/m 21/m 2/n a': \" !#*,#$)&(%&$%&.'& ,#*!#\",\r\n  'P 42 21 2a': \" !#*,#%.+'$+$'&.%&! -,*-\",\r\n  'I 2 3a': \" !#*,#.%&$'&!# ,- '&$%/$# !-*!/$%&.%()+$%+ ,-*!-)+(%&(!-*,#*+()&$)#*,- ,\"\r\n}\r\n","/**\r\n * @file Symmetry Utils\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Matrix4 } from 'three'\r\n\r\nimport { Log } from '../globals'\r\nimport { EncodedSymOp, SymOpCode } from './symmetry-constants'\r\n\r\nconst reInteger = /^[1-9]$/\r\n\r\nexport function getSymmetryOperations (spacegroup: string) {\r\n  const encodedSymopList = EncodedSymOp[ spacegroup ]\r\n  const matrixDict: { [k: string]: Matrix4 } = {}\r\n\r\n  if (encodedSymopList === undefined) {\r\n    console.warn(`spacegroup '${spacegroup}' not found in symop library`)\r\n    return matrixDict\r\n  }\r\n\r\n  const symopList = []\r\n  for (let i = 0, il = encodedSymopList.length; i < il; i += 3) {\r\n    const symop = []\r\n    for (let j = 0; j < 3; ++j) {\r\n      symop.push(SymOpCode[ encodedSymopList[ i + j ] ])\r\n    }\r\n    symopList.push(symop)\r\n  }\r\n\r\n  symopList.forEach(function (symop) {\r\n    let row = 0\r\n    const matrix = new Matrix4().set(\r\n      0, 0, 0, 0,\r\n      0, 0, 0, 0,\r\n      0, 0, 0, 0,\r\n      0, 0, 0, 1\r\n    )\r\n    const me = matrix.elements\r\n\r\n    matrixDict[ symop.toString() ] = matrix\r\n\r\n    symop.forEach(function (elm) {\r\n      let negate = false\r\n      let denominator = false\r\n\r\n      for (let i = 0, n = elm.length; i < n; ++i) {\r\n        const c = elm[ i ]\r\n\r\n        if (c === '-') {\r\n          negate = true\r\n        } else if (c === '+') {\r\n          negate = false\r\n        } else if (c === '/') {\r\n          denominator = true\r\n        } else if (c === 'X') {\r\n          me[ 0 + row ] = negate ? -1 : 1\r\n        } else if (c === 'Y') {\r\n          me[ 4 + row ] = negate ? -1 : 1\r\n        } else if (c === 'Z') {\r\n          me[ 8 + row ] = negate ? -1 : 1\r\n        } else if (reInteger.test(c)) {\r\n          const integer = parseInt(c)\r\n          if (denominator) {\r\n            me[ 12 + row ] /= integer\r\n          } else {\r\n            me[ 12 + row ] = integer\r\n          }\r\n        } else {\r\n          Log.warn(`getSymmetryOperations: unknown token '${c}'`)\r\n        }\r\n      }\r\n\r\n      row += 1\r\n    })\r\n  })\r\n\r\n  return matrixDict\r\n}\r\n","/**\r\n * @file Assembly\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Matrix4, Box3, Vector3 } from 'three'\r\n\r\nimport { uniqueArray } from '../utils'\r\nimport Selection from '../selection/selection'\r\nimport Structure from '../structure/structure'\r\nimport StructureView from '../structure/structure-view';\r\n\r\nfunction selectionFromChains (chainList: string[]) {\r\n  let sele = ''\r\n  if (chainList.length > 0) {\r\n    sele = ':' + uniqueArray(chainList).join(' OR :')\r\n  }\r\n  return new Selection(sele)\r\n}\r\n\r\n/**\r\n * Assembly of transformed parts of a {@link Structure}\r\n */\r\nclass Assembly {\r\n  partList: AssemblyPart[] = []\r\n\r\n  /**\r\n   * @param {String} name - assembly name\r\n   */\r\n  constructor (readonly name = '') {}\r\n\r\n  get type () { return 'Assembly' }\r\n\r\n  /**\r\n   * Add transformed parts to the assembly\r\n   * @example\r\n   * var m1 = new NGL.Matrix4().set( ... );\r\n   * var m2 = new NGL.Matrix4().set( ... );\r\n   * var assembly = new NGL.Assembly( \"myAssembly\" );\r\n   * // add part that transforms chain 'A' and 'B' using matrices `m1` and `m2`\r\n   * assembly.addPart( [ m1, m2 ], [ \"A\", \"B\" ] )\r\n   *\r\n   * @param {Matrix4[]} matrixList - array of 4x4 transformation matrices\r\n   * @param {String[]} chainList - array of chain names\r\n   * @return {AssemblyPart} the added assembly part\r\n   */\r\n  addPart (matrixList?: Matrix4[], chainList?: string[]) {\r\n    const part = new AssemblyPart(matrixList, chainList)\r\n    this.partList.push(part)\r\n    return part\r\n  }\r\n\r\n  /**\r\n   * Get the number of atom for a given structure\r\n   * @param  {Structure} structure - the given structure\r\n   * @return {Integer} number of atoms in the assembly\r\n   */\r\n  getAtomCount (structure: Structure) {\r\n    return this.partList.reduce(\r\n      (count, part) => count + part.getAtomCount(structure), 0\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Get the number of residues for a given structure\r\n   * @param  {Structure} structure - the given structure\r\n   * @return {Integer} number of residues in the assembly\r\n   */\r\n  getResidueCount (structure: Structure) {\r\n    return this.partList.reduce(\r\n      (count, part) => count + part.getResidueCount(structure), 0\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Get number of instances the assembly will produce, i.e.\r\n   * the number of transformations performed by the assembly\r\n   * @return {Integer} number of instances\r\n   */\r\n  getInstanceCount () {\r\n    let instanceCount = 0\r\n\r\n    this.partList.forEach(function (part) {\r\n      instanceCount += part.matrixList.length\r\n    })\r\n\r\n    return instanceCount\r\n  }\r\n\r\n  /**\r\n   * Determine if the assembly is the full and untransformed structure\r\n   * @param  {Structure}  structure - the given structure\r\n   * @return {Boolean} whether the assembly is identical to the structure\r\n   */\r\n  isIdentity (structure: Structure) {\r\n    if (this.partList.length !== 1) return false\r\n\r\n    const part = this.partList[ 0 ]\r\n    if (part.matrixList.length !== 1) return false\r\n\r\n    const identityMatrix = new Matrix4()\r\n    if (!identityMatrix.equals(part.matrixList[ 0 ])) return false\r\n\r\n    let structureChainList: string[] = []\r\n    structure.eachChain(function (cp) {\r\n      structureChainList.push(cp.chainname)\r\n    })\r\n    structureChainList = uniqueArray(structureChainList)\r\n    if (part.chainList.length !== structureChainList.length) return false\r\n\r\n    return true\r\n  }\r\n\r\n  getBoundingBox (structure: Structure) {\r\n    const boundingBox = new Box3()\r\n\r\n    this.partList.forEach(function (part) {\r\n      const partBox = part.getBoundingBox(structure)\r\n      boundingBox.expandByPoint(partBox.min)\r\n      boundingBox.expandByPoint(partBox.max)\r\n    })\r\n\r\n    return boundingBox\r\n  }\r\n\r\n  getCenter (structure: Structure) {\r\n    return this.getBoundingBox(structure).getCenter(new Vector3())\r\n  }\r\n\r\n  getSelection () {\r\n    let chainList: string[] = []\r\n    this.partList.forEach(function (part) {\r\n      chainList = chainList.concat(part.chainList)\r\n    })\r\n    return selectionFromChains(chainList)\r\n  }\r\n}\r\n\r\nexport class AssemblyPart {\r\n  constructor (readonly matrixList: Matrix4[] = [], readonly chainList: string[] = []) {}\r\n\r\n  get type () { return 'AssemblyPart' }\r\n\r\n  _getCount (structure: Structure, propertyName: 'atomCount'|'residueCount') {\r\n    let count = 0\r\n\r\n    structure.eachChain(cp => {\r\n      if (this.chainList.length === 0 || this.chainList.includes(cp.chainname)) {\r\n        count += cp[ propertyName ]\r\n      }\r\n    })\r\n\r\n    return this.matrixList.length * count\r\n  }\r\n\r\n  getAtomCount (structure: Structure) {\r\n    return this._getCount(structure, 'atomCount')\r\n  }\r\n\r\n  getResidueCount (structure: Structure) {\r\n    return this._getCount(structure, 'residueCount')\r\n  }\r\n\r\n  getBoundingBox (structure: Structure) {\r\n    const partBox = new Box3()\r\n    const instanceBox = new Box3()\r\n\r\n    const selection = this.getSelection()\r\n    const structureBox = structure.getBoundingBox(selection)\r\n\r\n    this.matrixList.forEach(function (matrix) {\r\n      instanceBox.copy(structureBox).applyMatrix4(matrix)\r\n      partBox.expandByPoint(instanceBox.min)\r\n      partBox.expandByPoint(instanceBox.max)\r\n    })\r\n\r\n    return partBox\r\n  }\r\n\r\n  getSelection () {\r\n    return selectionFromChains(this.chainList)\r\n  }\r\n\r\n  getView (structure: Structure): Structure | StructureView {\r\n    const selection = this.getSelection()\r\n    if (selection) {\r\n      return structure.getView(selection)\r\n    } else {\r\n      return structure\r\n    }\r\n  }\r\n\r\n  getInstanceList () {\r\n    const instanceList = []\r\n    for (let j = 0, jl = this.matrixList.length; j < jl; ++j) {\r\n      instanceList.push({\r\n        id: j + 1,\r\n        name: j,\r\n        matrix: this.matrixList[ j ]\r\n      })\r\n    }\r\n    return instanceList\r\n  }\r\n}\r\n\r\nexport default Assembly\r\n","/**\r\n * @file Structure Builder\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Structure from './structure'\r\n\r\nclass StructureBuilder {\r\n  currentModelindex: number|null = null\r\n  currentChainid: string|null = null\r\n  currentResname: string|null = null\r\n  currentResno: number|null = null\r\n  currentInscode: string|undefined = undefined\r\n  currentHetero: boolean|null = null\r\n\r\n  previousResname: string|null = ''\r\n  previousHetero: boolean|null = null\r\n\r\n  ai = -1\r\n  ri = -1\r\n  ci = -1\r\n  mi = -1\r\n\r\n  constructor(readonly structure: Structure) {}\r\n\r\n  addResidueType (ri: number) {\r\n    const atomStore = this.structure.atomStore\r\n    const residueStore = this.structure.residueStore\r\n    const residueMap = this.structure.residueMap\r\n\r\n    const count = residueStore.atomCount[ ri ]\r\n    const offset = residueStore.atomOffset[ ri ]\r\n    const atomTypeIdList = new Array(count)\r\n    for (let i = 0; i < count; ++i) {\r\n      atomTypeIdList[ i ] = atomStore.atomTypeId[ offset + i ]\r\n    }\r\n    residueStore.residueTypeId[ ri ] = residueMap.add(\r\n      this.previousResname!, atomTypeIdList, this.previousHetero!  // TODO\r\n    )\r\n  }\r\n\r\n  addAtom (modelindex: number, chainname: string, chainid: string, resname: string, resno: number, hetero: boolean, sstruc?: string|undefined, inscode?: string|undefined) {\r\n    const atomStore = this.structure.atomStore\r\n    const residueStore = this.structure.residueStore\r\n    const chainStore = this.structure.chainStore\r\n    const modelStore = this.structure.modelStore\r\n\r\n    let addModel = false\r\n    let addChain = false\r\n    let addResidue = false\r\n\r\n    if (this.currentModelindex !== modelindex) {\r\n      addModel = true\r\n      addChain = true\r\n      addResidue = true\r\n      this.mi += 1\r\n      this.ci += 1\r\n      this.ri += 1\r\n    } else if (this.currentChainid !== chainid) {\r\n      addChain = true\r\n      addResidue = true\r\n      this.ci += 1\r\n      this.ri += 1\r\n    } else if (this.currentResno !== resno || this.currentResname !== resname || this.currentInscode !== inscode) {\r\n      addResidue = true\r\n      this.ri += 1\r\n    }\r\n    this.ai += 1\r\n\r\n    if (addModel) {\r\n      modelStore.growIfFull()\r\n      modelStore.chainOffset[ this.mi ] = this.ci\r\n      modelStore.chainCount[ this.mi ] = 0\r\n      modelStore.count += 1\r\n      chainStore.modelIndex[ this.ci ] = this.mi\r\n    }\r\n\r\n    if (addChain) {\r\n      chainStore.growIfFull()\r\n      chainStore.setChainname(this.ci, chainname)\r\n      chainStore.setChainid(this.ci, chainid)\r\n      chainStore.residueOffset[ this.ci ] = this.ri\r\n      chainStore.residueCount[ this.ci ] = 0\r\n      chainStore.count += 1\r\n      chainStore.modelIndex[ this.ci ] = this.mi\r\n      modelStore.chainCount[ this.mi ] += 1\r\n      residueStore.chainIndex[ this.ri ] = this.ci\r\n    }\r\n\r\n    if (addResidue) {\r\n      this.previousResname = this.currentResname\r\n      this.previousHetero = this.currentHetero\r\n      if (this.ri > 0) this.addResidueType(this.ri - 1)\r\n      residueStore.growIfFull()\r\n      residueStore.resno[ this.ri ] = resno\r\n      if (sstruc !== undefined) {\r\n        residueStore.sstruc[ this.ri ] = sstruc.charCodeAt(0)\r\n      }\r\n      if (inscode !== undefined) {\r\n        residueStore.inscode[ this.ri ] = inscode.charCodeAt(0)\r\n      }\r\n      residueStore.atomOffset[ this.ri ] = this.ai\r\n      residueStore.atomCount[ this.ri ] = 0\r\n      residueStore.count += 1\r\n      residueStore.chainIndex[ this.ri ] = this.ci\r\n      chainStore.residueCount[ this.ci ] += 1\r\n    }\r\n\r\n    atomStore.count += 1\r\n    atomStore.residueIndex[ this.ai ] = this.ri\r\n    residueStore.atomCount[ this.ri ] += 1\r\n\r\n    this.currentModelindex = modelindex\r\n    this.currentChainid = chainid\r\n    this.currentResname = resname\r\n    this.currentResno = resno\r\n    this.currentInscode = inscode\r\n    this.currentHetero = hetero\r\n  }\r\n\r\n  finalize () {\r\n    this.previousResname = this.currentResname\r\n    this.previousHetero = this.currentHetero\r\n    if (this.ri > -1) this.addResidueType(this.ri)\r\n  }\r\n}\r\n\r\nexport default StructureBuilder\r\n","/**\r\n * @file Structure Utils\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3, Matrix4 } from 'three'\r\n\r\nimport { Debug, Log } from '../globals'\r\nimport { binarySearchIndexOf } from '../utils'\r\nimport Helixbundle from '../geometry/helixbundle'\r\nimport Kdtree from '../geometry/kdtree'\r\nimport { getSymmetryOperations } from '../symmetry/symmetry-utils'\r\nimport Assembly from '../symmetry/assembly'\r\nimport Structure from '../structure/structure'\r\nimport StructureBuilder from '../structure/structure-builder'\r\nimport Polymer from '../proxy/polymer'\r\nimport ResidueProxy from '../proxy/residue-proxy'\r\n\r\nimport { UnknownBackboneType, AA3, Bases, AtomicNumbers } from './structure-constants'\r\n\r\nexport function reorderAtoms (structure: Structure) {\r\n  if (Debug) Log.time('reorderAtoms')\r\n\r\n  var ap1 = structure.getAtomProxy()\r\n  var ap2 = structure.getAtomProxy()\r\n\r\n  function compareModelChainResno (index1: number, index2: number) {\r\n    ap1.index = index1\r\n    ap2.index = index2\r\n    if (ap1.modelIndex < ap2.modelIndex) {\r\n      return -1\r\n    } else if (ap1.modelIndex > ap2.modelIndex) {\r\n      return 1\r\n    } else {\r\n      if (ap1.chainname < ap2.chainname) {\r\n        return -1\r\n      } else if (ap1.chainname > ap2.chainname) {\r\n        return 1\r\n      } else {\r\n        if (ap1.resno < ap2.resno) {\r\n          return -1\r\n        } else if (ap1.resno > ap2.resno) {\r\n          return 1\r\n        } else {\r\n          return 0\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  structure.atomStore.sort(compareModelChainResno)\r\n\r\n  if (Debug) Log.timeEnd('reorderAtoms')\r\n}\r\n\r\nexport interface SecStruct {\r\n  helices: [string, number, string, string, number, string, number][]\r\n  sheets: [string, number, string, string, number, string][]\r\n}\r\n\r\nexport function assignSecondaryStructure (structure: Structure, secStruct: SecStruct) {\r\n  if (!secStruct) return\r\n\r\n  if (Debug) Log.time('assignSecondaryStructure')\r\n\r\n  const chainnames: string[] = []\r\n  structure.eachModel(function (mp) {\r\n    mp.eachChain(function (cp) {\r\n      chainnames.push(cp.chainname)\r\n    })\r\n  })\r\n\r\n  const chainnamesSorted = chainnames.slice().sort()\r\n  const chainnamesIndex: number[] = []\r\n  chainnamesSorted.forEach(function (c) {\r\n    chainnamesIndex.push(chainnames.indexOf(c))\r\n  })\r\n\r\n    // helix assignment\r\n\r\n  const helices = secStruct.helices.filter(function (h) {\r\n    return binarySearchIndexOf(chainnamesSorted, h[ 0 ]) >= 0\r\n  })\r\n\r\n  helices.sort(function (h1, h2) {\r\n    const c1 = h1[ 0 ]\r\n    const c2 = h2[ 0 ]\r\n    const r1 = h1[ 1 ]\r\n    const r2 = h2[ 1 ]\r\n\r\n    if (c1 === c2) {\r\n      if (r1 === r2) {\r\n        return 0\r\n      } else {\r\n        return r1 < r2 ? -1 : 1\r\n      }\r\n    } else {\r\n      const idx1 = binarySearchIndexOf(chainnamesSorted, c1)\r\n      const idx2 = binarySearchIndexOf(chainnamesSorted, c2)\r\n      return chainnamesIndex[ idx1 ] < chainnamesIndex[ idx2 ] ? -1 : 1\r\n    }\r\n  })\r\n\r\n  const residueStore = structure.residueStore\r\n\r\n  structure.eachModel(function (mp) {\r\n    let i = 0\r\n    const n = helices.length\r\n    if (n === 0) return\r\n    let helix = helices[ i ]\r\n    let helixRun = false\r\n    let done = false\r\n\r\n    mp.eachChain(function (cp) {\r\n      let chainChange = false\r\n\r\n      if (cp.chainname === helix[ 0 ]) {\r\n        const count = cp.residueCount\r\n        const offset = cp.residueOffset\r\n        const end = offset + count\r\n\r\n        for (let j = offset; j < end; ++j) {\r\n          if (residueStore.resno[ j ] === helix[ 1 ] &&  // resnoBeg\r\n              residueStore.getInscode(j) === helix[ 2 ]   // inscodeBeg\r\n          ) {\r\n            helixRun = true\r\n          }\r\n\r\n          if (helixRun) {\r\n            residueStore.sstruc[ j ] = helix[ 6 ]\r\n\r\n            if (residueStore.resno[ j ] === helix[ 4 ] &&  // resnoEnd\r\n                residueStore.getInscode(j) === helix[ 5 ]   // inscodeEnd\r\n            ) {\r\n              helixRun = false\r\n              i += 1\r\n\r\n              if (i < n) {\r\n                // must look at previous residues as\r\n                // residues may not be ordered by resno\r\n                j = offset - 1\r\n                helix = helices[ i ]\r\n                chainChange = cp.chainname !== helix[ 0 ]\r\n              } else {\r\n                done = true\r\n              }\r\n            }\r\n          }\r\n\r\n          if (chainChange || done) return\r\n        }\r\n      }\r\n    })\r\n  })\r\n\r\n    // sheet assignment\r\n\r\n  const sheets = secStruct.sheets.filter(function (s) {\r\n    return binarySearchIndexOf(chainnamesSorted, s[ 0 ]) >= 0\r\n  })\r\n\r\n  sheets.sort(function (s1, s2) {\r\n    const c1 = s1[ 0 ]\r\n    const c2 = s2[ 0 ]\r\n\r\n    if (c1 === c2) return 0\r\n    const idx1 = binarySearchIndexOf(chainnamesSorted, c1)\r\n    const idx2 = binarySearchIndexOf(chainnamesSorted, c2)\r\n    return chainnamesIndex[ idx1 ] < chainnamesIndex[ idx2 ] ? -1 : 1\r\n  })\r\n\r\n  const strandCharCode = 'e'.charCodeAt(0)\r\n  structure.eachModel(function (mp) {\r\n    let i = 0\r\n    const n = sheets.length\r\n    if (n === 0) return\r\n    let sheet = sheets[ i ]\r\n    let sheetRun = false\r\n    let done = false\r\n\r\n    mp.eachChain(function (cp) {\r\n      let chainChange = false\r\n\r\n      if (cp.chainname === sheet[ 0 ]) {\r\n        const count = cp.residueCount\r\n        const offset = cp.residueOffset\r\n        const end = offset + count\r\n\r\n        for (let j = offset; j < end; ++j) {\r\n          if (residueStore.resno[ j ] === sheet[ 1 ] &&  // resnoBeg\r\n              residueStore.getInscode(j) === sheet[ 2 ]   // inscodeBeg\r\n          ) {\r\n            sheetRun = true\r\n          }\r\n\r\n          if (sheetRun) {\r\n            residueStore.sstruc[ j ] = strandCharCode\r\n\r\n            if (residueStore.resno[ j ] === sheet[ 4 ] &&  // resnoEnd\r\n                residueStore.getInscode(j) === sheet[ 5 ]   // inscodeEnd\r\n            ) {\r\n              sheetRun = false\r\n              i += 1\r\n\r\n              if (i < n) {\r\n                // must look at previous residues as\r\n                // residues may not be ordered by resno\r\n                j = offset - 1\r\n                sheet = sheets[ i ]\r\n                chainChange = cp.chainname !== sheet[ 0 ]\r\n              } else {\r\n                done = true\r\n              }\r\n            }\r\n          }\r\n\r\n          if (chainChange || done) return\r\n        }\r\n      }\r\n    })\r\n  })\r\n\r\n  if (Debug) Log.timeEnd('assignSecondaryStructure')\r\n}\r\n\r\nexport const calculateSecondaryStructure = (function () {\r\n  // Implementation for proteins based on \"pv\"\r\n  //\r\n  // assigns secondary structure information based on a simple and very fast\r\n  // algorithm published by Zhang and Skolnick in their TM-align paper.\r\n  // Reference:\r\n  //\r\n  // TM-align: a protein structure alignment algorithm based on the Tm-score\r\n  // (2005) NAR, 33(7) 2302-2309\r\n\r\n  const zhangSkolnickSS = function (polymer: Polymer, i: number, distances: number[], delta: number) {\r\n    const structure = polymer.structure\r\n    const offset = polymer.residueIndexStart\r\n    const rp1 = structure.getResidueProxy()\r\n    const rp2 = structure.getResidueProxy()\r\n    const ap1 = structure.getAtomProxy()\r\n    const ap2 = structure.getAtomProxy()\r\n\r\n    for (let j = Math.max(0, i - 2); j <= i; ++j) {\r\n      for (let k = 2; k < 5; ++k) {\r\n        if (j + k >= polymer.residueCount) {\r\n          continue\r\n        }\r\n\r\n        rp1.index = offset + j\r\n        rp2.index = offset + j + k\r\n        ap1.index = rp1.traceAtomIndex\r\n        ap2.index = rp2.traceAtomIndex\r\n\r\n        const d = ap1.distanceTo(ap2)\r\n\r\n        if (Math.abs(d - distances[ k - 2 ]) > delta) {\r\n          return false\r\n        }\r\n      }\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  const isHelical = function (polymer: Polymer, i: number) {\r\n    const helixDistances = [ 5.45, 5.18, 6.37 ]\r\n    const helixDelta = 2.1\r\n    return zhangSkolnickSS(polymer, i, helixDistances, helixDelta)\r\n  }\r\n\r\n  const isSheet = function (polymer: Polymer, i: number) {\r\n    const sheetDistances = [ 6.1, 10.4, 13.0 ]\r\n    const sheetDelta = 1.42\r\n    return zhangSkolnickSS(polymer, i, sheetDistances, sheetDelta)\r\n  }\r\n\r\n  const proteinPolymer = function (p: Polymer) {\r\n    const residueStore = p.residueStore\r\n    const offset = p.residueIndexStart\r\n    for (let i = 0, il = p.residueCount; i < il; ++i) {\r\n      let sstruc = 'c'\r\n      if (isHelical(p, i)) {\r\n        sstruc = 'h'\r\n      } else if (isSheet(p, i)) {\r\n        sstruc = 'e'\r\n      }\r\n      residueStore.sstruc[ offset + i ] = sstruc.charCodeAt(0)\r\n    }\r\n  }\r\n\r\n  const cgPolymer = function (p: Polymer) {\r\n    const localAngle = 20\r\n    const centerDist = 2.0\r\n\r\n    const residueStore = p.residueStore\r\n    const offset = p.residueIndexStart\r\n\r\n    const helixbundle = new Helixbundle(p)\r\n    const pos = helixbundle.position\r\n\r\n    const c1 = new Vector3()\r\n    const c2 = new Vector3()\r\n\r\n    for (let i = 0, il = p.residueCount; i < il; ++i) {\r\n      c1.fromArray(pos.center as any, i * 3)  // TODO\r\n      c2.fromArray(pos.center as any, i * 3 + 3)  // TODO\r\n      const d = c1.distanceTo(c2)\r\n\r\n      if (d < centerDist && d > 1.0 && pos.bending[ i ] < localAngle) {\r\n        residueStore.sstruc[ offset + i ] = 'h'.charCodeAt(0)\r\n        residueStore.sstruc[ offset + i + 1 ] = 'h'.charCodeAt(0)\r\n      }\r\n    }\r\n  }\r\n\r\n  return function calculateSecondaryStructure (structure: Structure) {\r\n    if (Debug) Log.time('calculateSecondaryStructure')\r\n\r\n    structure.eachPolymer(function (p) {\r\n      // assign secondary structure\r\n      if (p.residueCount < 4) return\r\n      if (p.isCg()) {\r\n        cgPolymer(p)\r\n      } else if (p.isProtein()) {\r\n        proteinPolymer(p)\r\n      } else {\r\n        return\r\n      }\r\n\r\n      // set lone secondary structure assignments to \"c\"\r\n      let prevSstruc: string\r\n      let sstrucCount = 0\r\n      p.eachResidue(function (r: ResidueProxy) {\r\n        if (r.sstruc === prevSstruc) {\r\n          sstrucCount += 1\r\n        } else {\r\n          if (sstrucCount === 1) {\r\n            r.index -= 1\r\n            r.sstruc = 'c'\r\n          }\r\n          sstrucCount = 1\r\n          prevSstruc = r.sstruc\r\n        }\r\n      })\r\n    })\r\n\r\n    if (Debug) Log.timeEnd('calculateSecondaryStructure')\r\n  }\r\n}())\r\n\r\n// const ChainnameAlphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" +\r\n//                           \"abcdefghijklmnopqrstuvwxyz\" +\r\n//                           \"0123456789\";\r\nconst ChainnameAlphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\r\n\r\nexport function getChainname (index: number) {\r\n  const n = ChainnameAlphabet.length\r\n  let j = index\r\n  let k = 0\r\n  let chainname = ChainnameAlphabet[j % n]\r\n  while (j >= n) {\r\n    j = Math.floor(j / n)\r\n    chainname += ChainnameAlphabet[j % n]\r\n    k += 1\r\n  }\r\n  if (k >= 5) {\r\n    Log.warn('chainname overflow')\r\n  }\r\n  return chainname\r\n}\r\n\r\ninterface ChainData {\r\n  mIndex: number\r\n  chainname: string\r\n  rStart: number\r\n  rCount: number\r\n}\r\n\r\n/**\r\n * When no chain names are set for the given structure, calculates\r\n * chains based on:\r\n * - polymer connectivity: when adjacent residues are not bonded, a new chain is created.\r\n * - non polymer chemical type: adjacent residues which are not polymers but are of the same\r\n * chemical type (e.g. water molecules) are grouped into the same chain.\r\n **/\r\nexport function calculateChainnames (structure: Structure, useExistingBonds = false) {\r\n  if (Debug) Log.time('calculateChainnames')\r\n\r\n  let doAutoChainName = true\r\n  structure.eachChain(function (c) {\r\n    if (c.chainname) doAutoChainName = false\r\n  })\r\n\r\n  if (doAutoChainName) {\r\n    const modelStore = structure.modelStore\r\n    const chainStore = structure.chainStore\r\n    const residueStore = structure.residueStore\r\n\r\n    const addChain = function (mIndex: number, chainname: string, rOffset: number, rCount: number) {\r\n      const ci = chainStore.count\r\n      for (let i = 0; i < rCount; ++i) {\r\n        residueStore.chainIndex[ rOffset + i ] = ci\r\n      }\r\n      chainStore.growIfFull()\r\n      chainStore.modelIndex[ ci ] = mIndex\r\n      chainStore.setChainname(ci, chainname)\r\n      chainStore.setChainid(ci, chainname)\r\n      chainStore.residueOffset[ ci ] = rOffset\r\n      chainStore.residueCount[ ci ] = rCount\r\n      chainStore.count += 1\r\n      modelStore.chainCount[ mIndex ] += 1\r\n    }\r\n\r\n    const ap1 = structure.getAtomProxy()\r\n    const ap2 = structure.getAtomProxy()\r\n\r\n    let i = 0\r\n    let mi = 0\r\n    let rStart = 0\r\n    let rEnd = 0\r\n    const chainData: ChainData[] = []\r\n\r\n    if (residueStore.count === 1) {\r\n      chainData.push({\r\n        mIndex: 0,\r\n        chainname: 'A',\r\n        rStart: 0,\r\n        rCount: 1\r\n      })\r\n    } else {\r\n      structure.eachResidueN(2, function (rp1: ResidueProxy, rp2: ResidueProxy) {\r\n        let newChain = false\r\n\r\n        const bbType1 = rp1.backboneType\r\n        const bbType2 = rp2.backboneType\r\n        const bbTypeUnk = UnknownBackboneType\r\n\r\n        rEnd = rp1.index\r\n\r\n        if (rp1.modelIndex !== rp2.modelIndex) {\r\n          newChain = true\r\n        } else if (rp1.moleculeType !== rp2.moleculeType) {\r\n          newChain = true\r\n        } else if (bbType1 !== bbTypeUnk && bbType1 === bbType2) {\r\n          ap1.index = rp1.backboneEndAtomIndex\r\n          ap2.index = rp2.backboneStartAtomIndex\r\n          if (useExistingBonds) {\r\n            newChain = !ap1.hasBondTo(ap2)\r\n          } else {\r\n            newChain = !ap1.connectedTo(ap2)\r\n          }\r\n        }\r\n\r\n        // current chain goes to end of the structure\r\n        if (!newChain && rp2.index === residueStore.count - 1) {\r\n          newChain = true\r\n          rEnd = rp2.index\r\n        }\r\n\r\n        if (newChain) {\r\n          chainData.push({\r\n            mIndex: mi,\r\n            chainname: getChainname(i),\r\n            rStart: rStart,\r\n            rCount: rEnd - rStart + 1\r\n          })\r\n\r\n          i += 1\r\n\r\n          if (rp1.modelIndex !== rp2.modelIndex) {\r\n            i = 0\r\n            mi += 1\r\n          }\r\n\r\n          // new chain for the last residue of the structure\r\n          if (rp2.index === residueStore.count - 1 && rEnd !== rp2.index) {\r\n            chainData.push({\r\n              mIndex: mi,\r\n              chainname: getChainname(i),\r\n              rStart: residueStore.count - 1,\r\n              rCount: 1\r\n            })\r\n          }\r\n\r\n          rStart = rp2.index\r\n          rEnd = rp2.index\r\n        }\r\n      })\r\n    }\r\n\r\n    //\r\n\r\n    chainStore.count = 0\r\n    modelStore.chainCount.fill(0, 0, modelStore.count)\r\n    modelStore.chainOffset.fill(0, 0, modelStore.count)\r\n    chainData.forEach(function (d) {\r\n      addChain(d.mIndex, d.chainname, d.rStart, d.rCount)\r\n    })\r\n\r\n    let chainOffset = 0\r\n    structure.eachModel(function (mp) {\r\n      modelStore.chainOffset[ mp.index ] = chainOffset\r\n      chainOffset += modelStore.chainCount[ mp.index ]\r\n    })\r\n  }\r\n\r\n  if (Debug) Log.timeEnd('calculateChainnames')\r\n}\r\n\r\nexport function calculateBonds (structure: Structure, inferBonds: InferBondsOptions='all') {\r\n  if (inferBonds === 'none') return \r\n  if (Debug) Log.time('calculateBonds')\r\n\r\n  calculateBondsWithin(structure, false, inferBonds)\r\n  calculateBondsBetween(structure)\r\n\r\n  if (Debug) Log.timeEnd('calculateBonds')\r\n}\r\n\r\n/**\r\n * Should Bonds be inferred for `all` atoms, `none` or `auto`\r\n * If `auto`, any hetgroup residue with at least one CONECT record will \r\n * not have bonding inferred, and will rely on the CONECT records\r\n */\r\nexport type InferBondsOptions = 'all' | 'none' | 'auto'\r\n\r\nexport interface ResidueBonds {\r\n  atomIndices1: number[]\r\n  atomIndices2: number[]\r\n  bondOrders: number[]\r\n}\r\n\r\n\r\nconst BondOrderTable: { [k: string]: number } = {\r\n  'HIS|CD2|CG': 2,\r\n  'HIS|CE1|ND1': 2,\r\n  'ARG|CZ|NH2': 2,\r\n  'PHE|CE1|CZ': 2,\r\n  'PHE|CD2|CE2': 2,\r\n  'PHE|CD1|CG': 2,\r\n  'TRP|CD1|CG': 2,\r\n  'TRP|CD2|CE2': 2,\r\n  'TRP|CE3|CZ3': 2,\r\n  'TRP|CH2|CZ2': 2,\r\n  'ASN|CG|OD1': 2,\r\n  'GLN|CD|OE1': 2,\r\n  'TYR|CD1|CG': 2,\r\n  'TYR|CD2|CE2': 2,\r\n  'TYR|CE1|CZ': 2,\r\n  'ASP|CG|OD1': 2,\r\n  'GLU|CD|OE1': 2,\r\n\r\n  'G|C8|N7': 2,\r\n  'G|C4|C5': 2,\r\n  'G|C2|N3': 2,\r\n  'G|C6|O6': 2,\r\n  'C|C4|N3': 2,\r\n  'C|C5|C6': 2,\r\n  'C|C2|O2': 2,\r\n  'A|C2|N3': 2,\r\n  'A|C6|N1': 2,\r\n  'A|C4|C5': 2,\r\n  'A|C8|N7': 2,\r\n  'U|C5|C6': 2,\r\n  'U|C2|O2': 2,\r\n  'U|C4|O4': 2,\r\n\r\n  'DG|C8|N7': 2,\r\n  'DG|C4|C5': 2,\r\n  'DG|C2|N3': 2,\r\n  'DG|C6|O6': 2,\r\n  'DC|C4|N3': 2,\r\n  'DC|C5|C6': 2,\r\n  'DC|C2|O2': 2,\r\n  'DA|C2|N3': 2,\r\n  'DA|C6|N1': 2,\r\n  'DA|C4|C5': 2,\r\n  'DA|C8|N7': 2,\r\n  'DT|C5|C6': 2,\r\n  'DT|C2|O2': 2,\r\n  'DT|C4|O4': 2\r\n}\r\nfunction getBondOrderFromTable (resname: string, atomname1: string, atomname2: string) {\r\n  [ atomname1, atomname2 ] = atomname1 < atomname2 ? [ atomname1, atomname2 ] : [ atomname2, atomname1 ]\r\n  if (AA3.includes(resname) && atomname1 === 'C' && atomname2 === 'O') return 2\r\n  if (Bases.includes(resname) && atomname1 === 'OP1' && atomname2 === 'P') return 2\r\n  return BondOrderTable[ `${resname}|${atomname1}|${atomname2}` ] || 1\r\n}\r\n\r\nexport function calculateResidueBonds (r: ResidueProxy) {\r\n  const structure = r.structure\r\n  const a1 = structure.getAtomProxy()\r\n  const a2 = structure.getAtomProxy()\r\n\r\n  const count = r.atomCount\r\n  const offset = r.atomOffset\r\n  const end = offset + count\r\n  const end1 = end - 1\r\n\r\n  const atomIndices1 = []\r\n  const atomIndices2 = []\r\n  const bondOrders = []\r\n\r\n  if (count > 500) {\r\n    if (Debug) Log.warn('more than 500 atoms, skip residue for auto-bonding', r.qualifiedName())\r\n  } else {\r\n    if (count > 50) {\r\n      const kdtree = new Kdtree(r, true)\r\n      const radius = r.isCg() ? 1.2 : 2.3\r\n\r\n      for (let i = offset; i < end1; ++i) {\r\n        a1.index = i\r\n        const maxd = a1.covalent + radius + 0.3\r\n        const nearestAtoms = kdtree.nearest(a1 as any, Infinity, maxd * maxd)  // TODO\r\n        const m = nearestAtoms.length\r\n        for (let j = 0; j < m; ++j) {\r\n          a2.index = nearestAtoms[ j ].index\r\n          if (a1.index < a2.index) {\r\n            if (a1.connectedTo(a2)) {\r\n              atomIndices1.push(a1.index - offset)\r\n              atomIndices2.push(a2.index - offset)\r\n              bondOrders.push(getBondOrderFromTable(a1.resname, a1.atomname, a2.atomname))\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      for (let i = offset; i < end1; ++i) {\r\n        a1.index = i\r\n        for (let j = i + 1; j <= end1; ++j) {\r\n          a2.index = j\r\n          if (a1.connectedTo(a2)) {\r\n            atomIndices1.push(i - offset)\r\n            atomIndices2.push(j - offset)\r\n            bondOrders.push(getBondOrderFromTable(a1.resname, a1.atomname, a2.atomname))\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    atomIndices1: atomIndices1,\r\n    atomIndices2: atomIndices2,\r\n    bondOrders: bondOrders\r\n  }\r\n}\r\n\r\nexport function calculateAtomBondMap (structure: Structure) {\r\n  if (Debug) Log.time('calculateAtomBondMap')\r\n\r\n  var atomBondMap: number[][] = []\r\n\r\n  structure.eachBond(function (bp) {\r\n    var ai1 = bp.atomIndex1\r\n    var ai2 = bp.atomIndex2\r\n    if (atomBondMap[ ai1 ] === undefined) atomBondMap[ ai1 ] = []\r\n    atomBondMap[ ai1 ][ ai2 ] = bp.index\r\n  })\r\n\r\n  if (Debug) Log.timeEnd('calculateAtomBondMap')\r\n\r\n  return atomBondMap\r\n}\r\n\r\nexport function calculateBondsWithin (structure: Structure, onlyAddRung = false, inferBonds: InferBondsOptions='all') {\r\n  if (Debug) Log.time('calculateBondsWithin')\r\n\r\n  const bondStore = structure.bondStore\r\n  const rungBondStore = structure.rungBondStore\r\n  const rungAtomSet = structure.getAtomSet(false)\r\n  const a1 = structure.getAtomProxy()\r\n  const a2 = structure.getAtomProxy()\r\n  const bp = structure.getBondProxy()\r\n  const atomBondMap = onlyAddRung ? null : calculateAtomBondMap(structure)\r\n\r\n  let bondedAtoms: Set<number>\r\n  if (!onlyAddRung && inferBonds === 'auto') {\r\n    bondedAtoms = new Set()\r\n    atomBondMap!.forEach((a, i) => {\r\n      bondedAtoms.add(i)\r\n      a.forEach(j => {bondedAtoms.add(j)})\r\n    })\r\n  }\r\n\r\n  structure.eachResidue(function (r) {\r\n    if (!onlyAddRung && atomBondMap) {\r\n      const count = r.atomCount\r\n      const offset = r.atomOffset\r\n\r\n      if (count > 500) {\r\n        Log.warn('more than 500 atoms, skip residue for auto-bonding', r.qualifiedName())\r\n        return\r\n      }\r\n\r\n      if (inferBonds === 'auto' && r.hetero) {\r\n        // Are bonds present on this residue?\r\n        for (let rai=r.atomOffset; rai<r.atomEnd; rai++) {\r\n          if (bondedAtoms.has(rai)) return\r\n        }\r\n      }\r\n\r\n      const bonds = r.getBonds()\r\n      const atomIndices1 = bonds.atomIndices1\r\n      const atomIndices2 = bonds.atomIndices2\r\n      const bondOrders = bonds.bondOrders\r\n      const nn = atomIndices1.length\r\n\r\n      for (let i = 0; i < nn; ++i) {\r\n        const rai1 = atomIndices1[ i ]\r\n        const rai2 = atomIndices2[ i ]\r\n        const ai1 = rai1 + offset\r\n        const ai2 = rai2 + offset\r\n        const tmp = atomBondMap[ ai1 ]\r\n        if (tmp !== undefined && tmp[ ai2 ] !== undefined) {\r\n          bp.index = tmp[ ai2 ]\r\n          const residueTypeBondIndex = r.residueType.getBondIndex(rai1, rai2)!  // TODO\r\n          // overwrite residueType bondOrder with value from existing bond\r\n          bondOrders[ residueTypeBondIndex ] = bp.bondOrder\r\n        } else {\r\n          a1.index = ai1\r\n          a2.index = ai2\r\n          // only add bond if not already in bondStore\r\n          bondStore.addBond(a1, a2, bondOrders[ i ])\r\n        }\r\n      }\r\n    }\r\n\r\n    // get RNA/DNA rung pseudo bonds\r\n    const traceAtomIndex = r.residueType.traceAtomIndex\r\n    const rungEndAtomIndex = r.residueType.rungEndAtomIndex\r\n    if (traceAtomIndex !== -1 && rungEndAtomIndex !== -1) {\r\n      a1.index = r.traceAtomIndex\r\n      a2.index = r.rungEndAtomIndex\r\n      rungBondStore.addBond(a1, a2)\r\n      rungAtomSet.set(a1.index)\r\n      rungAtomSet.set(a2.index)\r\n    }\r\n  })\r\n\r\n  structure.atomSetDict.rung = rungAtomSet\r\n\r\n  if (Debug) Log.timeEnd('calculateBondsWithin')\r\n}\r\n\r\nexport function calculateBondsBetween (structure: Structure, onlyAddBackbone = false, useExistingBonds = false) {\r\n  if (Debug) Log.time('calculateBondsBetween')\r\n\r\n  const bondStore = structure.bondStore\r\n  const backboneBondStore = structure.backboneBondStore\r\n  const backboneAtomSet = structure.getAtomSet(false)\r\n  const ap1 = structure.getAtomProxy()\r\n  const ap2 = structure.getAtomProxy()\r\n\r\n  if (backboneBondStore.count === 0) {\r\n    backboneBondStore.resize(structure.residueStore.count)\r\n  }\r\n\r\n  function addBondIfConnected (rp1: ResidueProxy, rp2: ResidueProxy) {\r\n    const bbType1 = rp1.backboneType\r\n    const bbType2 = rp2.backboneType\r\n    if (bbType1 !== UnknownBackboneType && bbType1 === bbType2) {\r\n      ap1.index = rp1.backboneEndAtomIndex\r\n      ap2.index = rp2.backboneStartAtomIndex\r\n      let needsBond = false\r\n      let needsBackbone = false\r\n\r\n      if (useExistingBonds && ap1.hasBondTo(ap2)) {\r\n        needsBond = false\r\n        needsBackbone = true\r\n      } else if (ap1.connectedTo(ap2)) {\r\n        needsBond = !onlyAddBackbone\r\n        needsBackbone = true\r\n      }\r\n      if (needsBond) {bondStore.addBond(ap1, ap2, 1)}  // assume single bond\r\n      if (needsBackbone) {\r\n        ap1.index = rp1.traceAtomIndex\r\n        ap2.index = rp2.traceAtomIndex\r\n        backboneBondStore.addBond(ap1, ap2)\r\n        backboneAtomSet.set(ap1.index)\r\n        backboneAtomSet.set(ap2.index)\r\n      }\r\n    }\r\n  }\r\n\r\n  structure.eachResidueN(2, addBondIfConnected)\r\n\r\n  const rp1 = structure.getResidueProxy()\r\n  const rp2 = structure.getResidueProxy()\r\n\r\n  // check for cyclic chains\r\n  structure.eachChain(function (cp) {\r\n    if (cp.residueCount === 0) return\r\n    rp1.index = cp.residueOffset\r\n    rp2.index = cp.residueOffset + cp.residueCount - 1\r\n    addBondIfConnected(rp2, rp1)\r\n  })\r\n\r\n  structure.atomSetDict.backbone = backboneAtomSet\r\n\r\n  if (!onlyAddBackbone) {\r\n    if (Debug) Log.time('calculateBondsBetween inter')\r\n    const spatialHash = structure.spatialHash\r\n    structure.eachResidue(function (rp) {\r\n      if (rp.backboneType === UnknownBackboneType && !rp.isWater()) {\r\n        rp.eachAtom(function (ap) {\r\n          if (ap.isMetal()) return\r\n          spatialHash!.eachWithin(ap.x, ap.y, ap.z, 4, function (idx) {  // TODO\r\n            ap2.index = idx\r\n            if (ap.modelIndex === ap2.modelIndex &&\r\n                ap.residueIndex !== ap2.residueIndex &&\r\n                !ap2.isMetal()\r\n            ) {\r\n              bondStore.addBondIfConnected(ap, ap2, 1)  // assume single bond\r\n            }\r\n          })\r\n        })\r\n      }\r\n    })\r\n    if (Debug) Log.timeEnd('calculateBondsBetween inter')\r\n  }\r\n\r\n  if (Debug) Log.timeEnd('calculateBondsBetween')\r\n}\r\n\r\nexport function buildUnitcellAssembly (structure: Structure) {\r\n  if (!structure.unitcell) return\r\n\r\n  if (Debug) Log.time('buildUnitcellAssembly')\r\n\r\n  const uc = structure.unitcell\r\n\r\n  const structureCenterFrac = structure.center.clone().applyMatrix4(uc.cartToFrac)\r\n  const centerFrac = structureCenterFrac.clone().floor()\r\n  const symopDict: { [K: string]: Matrix4 } = getSymmetryOperations(uc.spacegroup)\r\n\r\n  const centerFracSymop = new Vector3()\r\n  const positionFracSymop = new Vector3()\r\n\r\n  function getMatrixList (shift?: Vector3) {\r\n    const matrixList: Matrix4[] = []\r\n\r\n    Object.keys(symopDict).forEach(function (name) {\r\n      const m = symopDict[ name ].clone()\r\n\r\n      centerFracSymop.copy(structureCenterFrac).applyMatrix4(m).floor()\r\n      positionFracSymop.setFromMatrixPosition(m)\r\n      positionFracSymop.sub(centerFracSymop)\r\n      positionFracSymop.add(centerFrac)\r\n\r\n      if (shift) positionFracSymop.add(shift)\r\n\r\n      m.setPosition(positionFracSymop)\r\n      m.multiplyMatrices(uc.fracToCart, m)\r\n      m.multiply(uc.cartToFrac)\r\n\r\n      matrixList.push(m)\r\n    })\r\n\r\n    return matrixList\r\n  }\r\n\r\n  const unitcellAssembly = new Assembly('UNITCELL')\r\n  const unitcellMatrixList = getMatrixList()\r\n  const ncsMatrixList: Matrix4[] = []\r\n  if (structure.biomolDict.NCS) {\r\n    ncsMatrixList.push(\r\n      new Matrix4(), ...structure.biomolDict.NCS.partList[ 0 ].matrixList\r\n    )\r\n    const ncsUnitcellMatrixList: Matrix4[] = []\r\n    unitcellMatrixList.forEach(sm => {\r\n      ncsMatrixList.forEach(nm => {\r\n        ncsUnitcellMatrixList.push(sm.clone().multiply(nm))\r\n      })\r\n    })\r\n    unitcellAssembly.addPart(ncsUnitcellMatrixList)\r\n  } else {\r\n    unitcellAssembly.addPart(unitcellMatrixList)\r\n  }\r\n\r\n  const vec = new Vector3()\r\n  const supercellAssembly = new Assembly('SUPERCELL')\r\n  const supercellMatrixList = Array.prototype.concat.call(\r\n    getMatrixList(vec.set(1, 0, 0)),  // 655\r\n    getMatrixList(vec.set(0, 1, 0)),  // 565\r\n    getMatrixList(vec.set(0, 0, 1)),  // 556\r\n\r\n    getMatrixList(vec.set(-1, 0, 0)),  // 455\r\n    getMatrixList(vec.set(0, -1, 0)),  // 545\r\n    getMatrixList(vec.set(0, 0, -1)),  // 554\r\n\r\n    getMatrixList(vec.set(1, 1, 0)),  // 665\r\n    getMatrixList(vec.set(1, 0, 1)),  // 656\r\n    getMatrixList(vec.set(0, 1, 1)),  // 566\r\n\r\n    getMatrixList(vec.set(-1, -1, 0)),  // 445\r\n    getMatrixList(vec.set(-1, 0, -1)),  // 454\r\n    getMatrixList(vec.set(0, -1, -1)),  // 544\r\n\r\n    getMatrixList(vec.set(1, -1, -1)),  // 644\r\n    getMatrixList(vec.set(1, 1, -1)),  // 664\r\n    getMatrixList(vec.set(1, -1, 1)),  // 646\r\n    getMatrixList(vec.set(-1, 1, 1)),  // 466\r\n    getMatrixList(vec.set(-1, -1, 1)),  // 446\r\n    getMatrixList(vec.set(-1, 1, -1)),  // 464\r\n\r\n    getMatrixList(vec.set(0, 1, -1)),  // 564\r\n    getMatrixList(vec.set(0, -1, 1)),  // 546\r\n    getMatrixList(vec.set(1, 0, -1)),  // 654\r\n    getMatrixList(vec.set(-1, 0, 1)),  // 456\r\n    getMatrixList(vec.set(1, -1, 0)),  // 645\r\n    getMatrixList(vec.set(-1, 1, 0)),  // 465\r\n\r\n    getMatrixList(),  // 555\r\n    getMatrixList(vec.set(1, 1, 1)),  // 666\r\n    getMatrixList(vec.set(-1, -1, -1))   // 444\r\n  )\r\n  if (structure.biomolDict.NCS) {\r\n    const ncsSupercellMatrixList: Matrix4[] = []\r\n    supercellMatrixList.forEach(function (sm: Matrix4) {\r\n      ncsMatrixList.forEach(function (nm) {\r\n        ncsSupercellMatrixList.push(sm.clone().multiply(nm))\r\n      })\r\n    })\r\n    supercellAssembly.addPart(ncsSupercellMatrixList)\r\n  } else {\r\n    supercellAssembly.addPart(supercellMatrixList)\r\n  }\r\n\r\n  structure.biomolDict.UNITCELL = unitcellAssembly\r\n  structure.biomolDict.SUPERCELL = supercellAssembly\r\n\r\n  if (Debug) Log.timeEnd('buildUnitcellAssembly')\r\n}\r\n\r\nconst elm1 = [ 'H', 'C', 'O', 'N', 'S', 'P' ]\r\nconst elm2 = [ 'NA', 'CL', 'FE' ]\r\n\r\nexport function guessElement (atomName: string) {\r\n  // Retain first group of letters in atomName\r\n  let at = atomName.toUpperCase()\r\n  let begin = 0, end = 0\r\n  for (let i = 0; i < at.length ; i++) {\r\n    if (at.charCodeAt(i) < 65) {\r\n      if (end > 0) break\r\n      ++begin\r\n    }\r\n    else end = i + 1\r\n  }\r\n  if (begin > 0 || end < at.length) at = at.substring(begin, end)\r\n  \r\n  const n = at.length\r\n\r\n  if (n === 0) return ''\r\n  if (n === 1) return at\r\n  if (n === 2) {\r\n    if (elm2.indexOf(at) !== -1) return at\r\n    if (elm1.indexOf(at[0]) !== -1) return at[0]\r\n    if (at in AtomicNumbers) return at\r\n  }\r\n  if (n >= 3) {\r\n    if (elm1.indexOf(at[0]) !== -1) return at[0]\r\n  }\r\n  return ''\r\n}\r\n\r\n/**\r\n * Assigns ResidueType bonds.\r\n * @param {Structure} structure - the structure object\r\n * @return {undefined}\r\n */\r\nexport function assignResidueTypeBonds (structure: Structure) {\r\n  // if( Debug ) Log.time( \"assignResidueTypeBonds\" )\r\n\r\n  const bondHash = structure.bondHash!  // TODO\r\n  const countArray = bondHash.countArray\r\n  const offsetArray = bondHash.offsetArray\r\n  const indexArray = bondHash.indexArray\r\n  const bp = structure.getBondProxy()\r\n\r\n  structure.eachResidue(function (rp) {\r\n    const residueType = rp.residueType\r\n    if (residueType.bonds !== undefined) return\r\n\r\n    var atomOffset = rp.atomOffset\r\n    var atomIndices1: number[] = []\r\n    var atomIndices2: number[] = []\r\n    var bondOrders: number[] = []\r\n    var bondDict: { [k: string]: boolean } = {}\r\n\r\n    const nextAtomOffset = atomOffset + rp.atomCount\r\n\r\n    rp.eachAtom(function (ap) {\r\n      const index = ap.index\r\n      const offset = offsetArray[ index ]\r\n      const count = countArray[ index ]\r\n      for (let i = 0, il = count; i < il; ++i) {\r\n        bp.index = indexArray[ offset + i ]\r\n        let idx1 = bp.atomIndex1\r\n        if (idx1 < atomOffset || idx1 >= nextAtomOffset) {\r\n          // Don't add bonds outside of this resiude\r\n          continue\r\n        }\r\n        let idx2 = bp.atomIndex2\r\n        if (idx2 < atomOffset || idx2 >= nextAtomOffset) {\r\n          continue\r\n        }\r\n\r\n        if (idx1 > idx2) {\r\n          const tmp = idx2\r\n          idx2 = idx1\r\n          idx1 = tmp\r\n        }\r\n        const hash = idx1 + '|' + idx2\r\n        if (bondDict[ hash ] === undefined) {\r\n          bondDict[ hash ] = true\r\n          atomIndices1.push(idx1 - atomOffset)\r\n          atomIndices2.push(idx2 - atomOffset)\r\n          bondOrders.push(bp.bondOrder)\r\n        }\r\n      }\r\n    })\r\n\r\n    residueType.bonds = {\r\n      atomIndices1: atomIndices1,\r\n      atomIndices2: atomIndices2,\r\n      bondOrders: bondOrders\r\n    }\r\n  })\r\n\r\n  // if( Debug ) Log.timeEnd( \"assignResidueTypeBonds\" )\r\n}\r\n\r\nexport function concatStructures (name: string, ...structures: Structure[]) {\r\n  if( Debug ) Log.time( \"concatStructures\" )\r\n\r\n  const s = new Structure(name, '')\r\n  const sb = new StructureBuilder(s)\r\n\r\n  const atomStore = s.atomStore as any\r\n  const atomMap = s.atomMap\r\n  atomStore.addField('formalCharge', 1, 'int8')\r\n  atomStore.addField('partialCharge', 1, 'float32')\r\n\r\n  const atomIndexDict: { [k: number]: number } = {}\r\n\r\n  let idx = 0\r\n  let atomCount = 0\r\n  let modelCount = 0\r\n  structures.forEach(structure => {\r\n    structure.eachAtom(a => {\r\n      atomStore.growIfFull()\r\n      atomStore.atomTypeId[ idx ] = atomMap.add(a.atomname, a.element)\r\n\r\n      atomStore.x[ idx ] = a.x\r\n      atomStore.y[ idx ] = a.y\r\n      atomStore.z[ idx ] = a.z\r\n      atomStore.serial[ idx ] = a.serial\r\n      atomStore.formalCharge[ idx ] = a.formalCharge\r\n      atomStore.partialCharge[ idx ] = a.partialCharge\r\n      atomStore.altloc[ idx ] = a.altloc\r\n      atomStore.occupancy[ idx ] = a.occupancy\r\n      atomStore.bfactor[ idx ] = a.bfactor\r\n\r\n      sb.addAtom(\r\n        a.modelIndex + modelCount,\r\n        a.chainname,\r\n        a.chainid,\r\n        a.resname,\r\n        a.resno,\r\n        a.hetero === 1,\r\n        a.sstruc,\r\n        a.inscode\r\n      )\r\n\r\n      atomIndexDict[a.index + atomCount] = idx\r\n      idx += 1\r\n    })\r\n    atomCount += structure.atomStore.count\r\n    modelCount += structure.modelStore.count\r\n  })\r\n\r\n  const bondStore = s.bondStore\r\n  const a1 = s.getAtomProxy()\r\n  const a2 = s.getAtomProxy()\r\n\r\n  atomCount = 0\r\n  structures.forEach(structure => {\r\n    structure.eachBond(b => {\r\n      a1.index = atomIndexDict[ b.atomIndex1 + atomCount ]\r\n      a2.index = atomIndexDict[ b.atomIndex2 + atomCount ]\r\n      bondStore.addBond(a1, a2, b.bondOrder)\r\n    })\r\n    atomCount += structure.atomStore.count\r\n  })\r\n\r\n  sb.finalize()\r\n\r\n  calculateBondsBetween(s, true)  // calculate backbone bonds\r\n  calculateBondsWithin(s, true)  // calculate rung bonds\r\n\r\n  s.finalizeAtoms()\r\n  s.finalizeBonds()\r\n  assignResidueTypeBonds(s)\r\n\r\n  if( Debug ) Log.timeEnd( \"concatStructures\" )\r\n\r\n  return s\r\n}\r\n","/**\r\n * @file Atom Type\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { guessElement } from '../structure/structure-utils'\r\nimport {\r\n  AtomicNumbers, DefaultAtomicNumber,\r\n  VdwRadii, DefaultVdwRadius,\r\n  CovalentRadii, DefaultCovalentRadius,\r\n  Valences, DefaultValence,\r\n  OuterShellElectronCounts, DefaultOuterShellElectronCount\r\n} from '../structure/structure-constants'\r\nimport Structure from '../structure/structure'\r\n\r\n// Li, Na, K, Rb, Cs Fr\r\nconst AlkaliMetals = [ 3, 11, 19, 37, 55, 87 ]\r\n\r\n// Be, Mg, Ca, Sr, Ba, Ra\r\nconst AlkalineEarthMetals = [ 4, 12, 20, 38, 56, 88 ]\r\n\r\n// C, P, S, Se\r\nconst PolyatomicNonmetals = [ 6, 15, 16, 34, ]\r\n\r\n// H, N, O, F, Cl, Br, I\r\nconst DiatomicNonmetals = [ 1, 7, 8, 9, 17, 35, 53 ]\r\n\r\n// He, Ne, Ar, Kr, Xe, Rn\r\nconst NobleGases = [ 2, 10, 18, 36, 54, 86 ]\r\n\r\n// Zn, Ga, Cd, In, Sn, Hg, Ti, Pb, Bi, Po, Cn\r\nconst PostTransitionMetals = [ 13, 30, 31, 48, 49, 50, 80, 81, 82, 83, 84, 85, 112 ]\r\n\r\n// B, Si, Ge, As, Sb, Te, At\r\nconst Metalloids = [ 5, 14, 32, 33, 51, 52, 85 ]\r\n\r\n// F, Cl, Br, I, At\r\nconst Halogens = [ 9, 17, 35, 53, 85 ]\r\n\r\n/**\r\n * Atom type\r\n */\r\nclass AtomType {\r\n  element: string\r\n  number: number\r\n  vdw: number\r\n  covalent: number\r\n\r\n  /**\r\n   * @param {Structure} structure - the structure object\r\n   * @param {String} atomname - the name of the atom\r\n   * @param {String} element - the chemical element\r\n   */\r\n  constructor (readonly structure: Structure, readonly atomname: string, element?: string) {\r\n    element = element || guessElement(atomname)\r\n\r\n    this.element = element\r\n    this.number = AtomicNumbers[ element ] || DefaultAtomicNumber\r\n    this.vdw = VdwRadii[ this.number ] || DefaultVdwRadius\r\n    this.covalent = CovalentRadii[ this.number ] || DefaultCovalentRadius\r\n  }\r\n\r\n  getDefaultValence() {\r\n    const vl = Valences[ this.number ]\r\n    return vl ? vl[ 0 ] : DefaultValence\r\n  }\r\n\r\n  getValenceList () {\r\n    return Valences[ this.number ] || []\r\n  }\r\n\r\n  getOuterShellElectronCount () {\r\n    return OuterShellElectronCounts[ this.number ] || DefaultOuterShellElectronCount\r\n  }\r\n\r\n  isMetal () {\r\n    return (\r\n      this.isAlkaliMetal() ||\r\n      this.isAlkalineEarthMetal() ||\r\n      this.isLanthanide() ||\r\n      this.isActinide() ||\r\n      this.isTransitionMetal() ||\r\n      this.isPostTransitionMetal()\r\n    )\r\n  }\r\n\r\n  isNonmetal () {\r\n    return (\r\n      this.isDiatomicNonmetal() ||\r\n      this.isPolyatomicNonmetal() ||\r\n      this.isNobleGas()\r\n    )\r\n  }\r\n\r\n  isMetalloid () {\r\n    return Metalloids.includes(this.number)\r\n  }\r\n\r\n  isHalogen () {\r\n    return Halogens.includes(this.number)\r\n  }\r\n\r\n  isDiatomicNonmetal () {\r\n    return DiatomicNonmetals.includes(this.number)\r\n  }\r\n\r\n  isPolyatomicNonmetal () {\r\n    return PolyatomicNonmetals.includes(this.number)\r\n  }\r\n\r\n  isAlkaliMetal () {\r\n    return AlkaliMetals.includes(this.number)\r\n  }\r\n\r\n  isAlkalineEarthMetal () {\r\n    return AlkalineEarthMetals.includes(this.number)\r\n  }\r\n\r\n  isNobleGas () {\r\n    return NobleGases.includes(this.number)\r\n  }\r\n\r\n  isTransitionMetal () {\r\n    const no = this.number\r\n    return (\r\n      (no >= 21 && no <= 29) ||\r\n      (no >= 39 && no <= 47) ||\r\n      (no >= 72 && no <= 79) ||\r\n      (no >= 104 && no <= 108)\r\n    )\r\n  }\r\n\r\n  isPostTransitionMetal () {\r\n    return PostTransitionMetals.includes(this.number)\r\n  }\r\n\r\n  isLanthanide () {\r\n    return this.number >= 57 && this.number <= 71\r\n  }\r\n\r\n  isActinide () {\r\n    return this.number >= 89 && this.number <= 103\r\n  }\r\n\r\n}\r\n\r\nexport default AtomType","/**\r\n * @file Atom Map\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport AtomType from './atom-type'\r\nimport { guessElement } from '../structure/structure-utils'\r\nimport Structure from '../structure/structure'\r\n\r\nfunction getHash (atomname: string, element: string) {\r\n  return atomname + '|' + element\r\n}\r\n\r\nclass AtomMap {\r\n  dict: { [k: string]: number } = {}\r\n  list: AtomType[] = []\r\n\r\n  constructor (readonly structure: Structure) {\r\n    this.structure = structure\r\n  }\r\n\r\n  add (atomname: string, element?: string) {\r\n    atomname = atomname.toUpperCase()\r\n    if (!element) {\r\n      element = guessElement(atomname)\r\n    } else {\r\n      element = element.toUpperCase()\r\n    }\r\n    const hash = getHash(atomname, element)\r\n    let id = this.dict[ hash ]\r\n    if (id === undefined) {\r\n      const atomType = new AtomType(this.structure, atomname, element)\r\n      id = this.list.length\r\n      this.dict[ hash ] = id\r\n      this.list.push(atomType)\r\n    }\r\n    return id\r\n  }\r\n\r\n  get (id: number) {\r\n    return this.list[ id ]\r\n  }\r\n}\r\n\r\nexport default AtomMap\r\n","/**\r\n * @file Residue Type\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @author Fred Ludlow\r\n * @private\r\n */\r\n\r\nimport { defaults } from '../utils'\r\nimport PrincipalAxes from '../math/principal-axes'\r\nimport { Matrix } from '../math/matrix-utils'\r\nimport { calculateResidueBonds, ResidueBonds } from '../structure/structure-utils'\r\nimport {\r\n  Elements,\r\n  ProteinType, RnaType, DnaType, WaterType, IonType, SaccharideType, UnknownType,\r\n  ProteinBackboneType, RnaBackboneType, DnaBackboneType, UnknownBackboneType,\r\n  CgProteinBackboneType, CgRnaBackboneType, CgDnaBackboneType,\r\n  ChemCompProtein, ChemCompRna, ChemCompDna, ChemCompSaccharide,\r\n  AA3, PurinBases, RnaBases, DnaBases, Bases, IonNames, WaterNames, SaccharideNames,\r\n  ProteinBackboneAtoms, NucleicBackboneAtoms, ResidueTypeAtoms\r\n} from '../structure/structure-constants'\r\nimport Structure from '../structure/structure'\r\nimport ResidueProxy from '../proxy/residue-proxy'\r\nimport AtomProxy from '../proxy/atom-proxy'\r\n\r\nexport interface BondGraph {\r\n  [k: number]: number[]\r\n}\r\n\r\nexport interface RingData {\r\n  atomRings: number[][]  // sparse array:\r\n                         // atomRings[atomIdx] -> array of ring indices\r\n  rings: number[][]  // rings as arrays of indices\r\n}\r\n\r\n/**\r\n * Residue type\r\n */\r\nexport default class ResidueType {\r\n  resname: string\r\n  atomTypeIdList: number[]\r\n  hetero: number\r\n  chemCompType: string\r\n  bonds?: ResidueBonds\r\n  rings?: RingData\r\n  bondGraph?: BondGraph\r\n  aromaticAtoms?: Uint8Array\r\n  aromaticRings?: number[][]\r\n\r\n  atomCount: number\r\n\r\n  moleculeType: number\r\n  backboneType: number\r\n  backboneEndType: number\r\n  backboneStartType: number\r\n  backboneIndexList: number[]\r\n\r\n  traceAtomIndex: number\r\n  direction1AtomIndex: number\r\n  direction2AtomIndex: number\r\n  backboneStartAtomIndex: number\r\n  backboneEndAtomIndex: number\r\n  rungEndAtomIndex: number\r\n\r\n  // Sparse array containing the reference atom index for each bond.\r\n  bondReferenceAtomIndices: number[] = []\r\n\r\n  /**\r\n   * @param {Structure} structure - the structure object\r\n   * @param {String} resname - name of the residue\r\n   * @param {Array} atomTypeIdList - list of IDs of {@link AtomType}s corresponding\r\n   *                                 to the atoms of the residue\r\n   * @param {Boolean} hetero - hetero flag\r\n   * @param {String} chemCompType - chemical component type\r\n   * @param {Object} [bonds] - TODO\r\n   */\r\n  constructor (readonly structure: Structure, resname: string, atomTypeIdList: number[], hetero: boolean, chemCompType: string, bonds?: ResidueBonds) {\r\n    this.resname = resname\r\n    this.atomTypeIdList = atomTypeIdList\r\n    this.hetero = hetero ? 1 : 0\r\n    this.chemCompType = chemCompType\r\n    this.bonds = bonds\r\n    this.atomCount = atomTypeIdList.length\r\n\r\n    this.moleculeType = this.getMoleculeType()\r\n    this.backboneType = this.getBackboneType(0)\r\n    this.backboneEndType = this.getBackboneType(-1)\r\n    this.backboneStartType = this.getBackboneType(1)\r\n    this.backboneIndexList = this.getBackboneIndexList()\r\n\r\n    const atomnames = ResidueTypeAtoms[ this.backboneType ]\r\n    const atomnamesStart = ResidueTypeAtoms[ this.backboneStartType ]\r\n    const atomnamesEnd = ResidueTypeAtoms[ this.backboneEndType ]\r\n\r\n    const traceIndex = this.getAtomIndexByName(atomnames.trace)\r\n    this.traceAtomIndex = defaults(traceIndex, -1)\r\n\r\n    const dir1Index = this.getAtomIndexByName(atomnames.direction1)\r\n    this.direction1AtomIndex = defaults(dir1Index, -1)\r\n\r\n    const dir2Index = this.getAtomIndexByName(atomnames.direction2)\r\n    this.direction2AtomIndex = defaults(dir2Index, -1)\r\n\r\n    const bbStartIndex = this.getAtomIndexByName(atomnamesStart.backboneStart)\r\n    this.backboneStartAtomIndex = defaults(bbStartIndex, -1)\r\n\r\n    const bbEndIndex = this.getAtomIndexByName(atomnamesEnd.backboneEnd)\r\n    this.backboneEndAtomIndex = defaults(bbEndIndex, -1)\r\n\r\n    let rungEndIndex\r\n    if (PurinBases.includes(resname)) {\r\n      rungEndIndex = this.getAtomIndexByName('N1')\r\n    } else {\r\n      rungEndIndex = this.getAtomIndexByName('N3')\r\n    }\r\n    this.rungEndAtomIndex = defaults(rungEndIndex, -1)\r\n  }\r\n\r\n  getBackboneIndexList () {\r\n    const backboneIndexList: number[] = []\r\n    let atomnameList\r\n    switch (this.moleculeType) {\r\n      case ProteinType:\r\n        atomnameList = ProteinBackboneAtoms\r\n        break\r\n      case RnaType:\r\n      case DnaType:\r\n        atomnameList = NucleicBackboneAtoms\r\n        break\r\n      default:\r\n        return backboneIndexList\r\n    }\r\n    const atomMap = this.structure.atomMap\r\n    const atomTypeIdList = this.atomTypeIdList\r\n    for (let i = 0, il = this.atomCount; i < il; ++i) {\r\n      const atomType = atomMap.get(atomTypeIdList[ i ])\r\n      if (atomnameList.includes(atomType.atomname)) {\r\n        backboneIndexList.push(i)\r\n      }\r\n    }\r\n    return backboneIndexList\r\n  }\r\n\r\n  getMoleculeType () {\r\n    if (this.isProtein()) {\r\n      return ProteinType\r\n    } else if (this.isRna()) {\r\n      return RnaType\r\n    } else if (this.isDna()) {\r\n      return DnaType\r\n    } else if (this.isWater()) {\r\n      return WaterType\r\n    } else if (this.isIon()) {\r\n      return IonType\r\n    } else if (this.isSaccharide()) {\r\n      return SaccharideType\r\n    } else {\r\n      return UnknownType\r\n    }\r\n  }\r\n\r\n  getBackboneType (position: number) {\r\n    if (this.hasProteinBackbone(position)) {\r\n      return ProteinBackboneType\r\n    } else if (this.hasRnaBackbone(position)) {\r\n      return RnaBackboneType\r\n    } else if (this.hasDnaBackbone(position)) {\r\n      return DnaBackboneType\r\n    } else if (this.hasCgProteinBackbone(position)) {\r\n      return CgProteinBackboneType\r\n    } else if (this.hasCgRnaBackbone(position)) {\r\n      return CgRnaBackboneType\r\n    } else if (this.hasCgDnaBackbone(position)) {\r\n      return CgDnaBackboneType\r\n    } else {\r\n      return UnknownBackboneType\r\n    }\r\n  }\r\n\r\n  isProtein () {\r\n    if (this.chemCompType) {\r\n      return ChemCompProtein.includes(this.chemCompType)\r\n    } else {\r\n      return (\r\n        this.hasAtomWithName('CA', 'C', 'N') ||\r\n        AA3.includes(this.resname)\r\n      )\r\n    }\r\n  }\r\n\r\n  isCg () {\r\n    const backboneType = this.backboneType\r\n    return (\r\n      backboneType === CgProteinBackboneType ||\r\n      backboneType === CgRnaBackboneType ||\r\n      backboneType === CgDnaBackboneType\r\n    )\r\n  }\r\n\r\n  isNucleic () {\r\n    return this.isRna() || this.isDna()\r\n  }\r\n\r\n  isRna () {\r\n    if (this.chemCompType) {\r\n      return ChemCompRna.includes(this.chemCompType)\r\n    } else if (this.hetero === 1) {\r\n      return false\r\n    } else {\r\n      return (\r\n        this.hasAtomWithName(\r\n          [ 'P', \"O3'\", 'O3*' ], [ \"C4'\", 'C4*' ], [ \"O2'\", 'O2*', \"F2'\", 'F2*' ]\r\n        ) ||\r\n        (RnaBases.includes(this.resname) &&\r\n          (this.hasAtomWithName([ \"O2'\", 'O2*', \"F2'\", 'F2*' ])))\r\n      )\r\n    }\r\n  }\r\n\r\n  isDna () {\r\n    if (this.chemCompType) {\r\n      return ChemCompDna.includes(this.chemCompType)\r\n    } else if (this.hetero === 1) {\r\n      return false\r\n    } else {\r\n      return (\r\n        (this.hasAtomWithName([ 'P', \"O3'\", 'O3*' ], [ \"C3'\", 'C3*' ]) &&\r\n          !this.hasAtomWithName([ \"O2'\", 'O2*', \"F2'\", 'F2*' ])) ||\r\n        DnaBases.includes(this.resname)\r\n      )\r\n    }\r\n  }\r\n\r\n  isHetero () {\r\n    return this.hetero === 1\r\n  }\r\n\r\n  isIon () {\r\n    return IonNames.includes(this.resname)\r\n  }\r\n\r\n  isWater () {\r\n    return WaterNames.includes(this.resname)\r\n  }\r\n\r\n  isSaccharide () {\r\n    if (this.chemCompType) {\r\n      return ChemCompSaccharide.includes(this.chemCompType)\r\n    } else {\r\n      return SaccharideNames.includes(this.resname)\r\n    }\r\n  }\r\n\r\n  isStandardAminoacid () {\r\n    return AA3.includes(this.resname)\r\n  }\r\n\r\n  isStandardBase () {\r\n    return Bases.includes(this.resname)\r\n  }\r\n\r\n  hasBackboneAtoms (position: number, type: number) {\r\n    const atomnames = ResidueTypeAtoms[ type ]\r\n    if (position === -1) {\r\n      return this.hasAtomWithName(\r\n        atomnames.trace,\r\n        atomnames.backboneEnd,\r\n        atomnames.direction1,\r\n        atomnames.direction2\r\n      )\r\n    } else if (position === 0) {\r\n      return this.hasAtomWithName(\r\n        atomnames.trace,\r\n        atomnames.direction1,\r\n        atomnames.direction2\r\n      )\r\n    } else if (position === 1) {\r\n      return this.hasAtomWithName(\r\n        atomnames.trace,\r\n        atomnames.backboneStart,\r\n        atomnames.direction1,\r\n        atomnames.direction2\r\n      )\r\n    } else {\r\n      return this.hasAtomWithName(\r\n        atomnames.trace,\r\n        atomnames.backboneStart,\r\n        atomnames.backboneEnd,\r\n        atomnames.direction1,\r\n        atomnames.direction2\r\n      )\r\n    }\r\n  }\r\n\r\n  hasProteinBackbone (position: number) {\r\n    return (\r\n      this.isProtein() &&\r\n      this.hasBackboneAtoms(position, ProteinBackboneType)\r\n    )\r\n  }\r\n\r\n  hasRnaBackbone (position: number) {\r\n    return (\r\n      this.isRna() &&\r\n      this.hasBackboneAtoms(position, RnaBackboneType)\r\n    )\r\n  }\r\n\r\n  hasDnaBackbone (position: number) {\r\n    return (\r\n      this.isDna() &&\r\n      this.hasBackboneAtoms(position, DnaBackboneType)\r\n    )\r\n  }\r\n\r\n  hasCgProteinBackbone (position: number) {\r\n    return (\r\n      this.atomCount < 7 &&\r\n      this.isProtein() &&\r\n      this.hasBackboneAtoms(position, CgProteinBackboneType)\r\n    )\r\n  }\r\n\r\n  hasCgRnaBackbone (position: number) {\r\n    return (\r\n      this.atomCount < 11 &&\r\n      this.isRna() &&\r\n      this.hasBackboneAtoms(position, CgRnaBackboneType)\r\n    )\r\n  }\r\n\r\n  hasCgDnaBackbone (position: number) {\r\n    return (\r\n      this.atomCount < 11 &&\r\n      this.isDna() &&\r\n      this.hasBackboneAtoms(position, CgDnaBackboneType)\r\n    )\r\n  }\r\n\r\n  hasBackbone (position: number) {\r\n    return (\r\n      this.hasProteinBackbone(position) ||\r\n      this.hasRnaBackbone(position) ||\r\n      this.hasDnaBackbone(position) ||\r\n      this.hasCgProteinBackbone(position) ||\r\n      this.hasCgRnaBackbone(position) ||\r\n      this.hasCgDnaBackbone(position)\r\n    )\r\n  }\r\n\r\n  getAtomIndexByName (atomname: string|string[]) {\r\n    const n = this.atomCount\r\n    const atomMap = this.structure.atomMap\r\n    const atomTypeIdList = this.atomTypeIdList\r\n    if (Array.isArray(atomname)) {\r\n      for (let i = 0; i < n; ++i) {\r\n        const index = atomTypeIdList[ i ]\r\n        if (atomname.includes(atomMap.get(index).atomname)) {\r\n          return i\r\n        }\r\n      }\r\n    } else {\r\n      for (let i = 0; i < n; ++i) {\r\n        const index = atomTypeIdList[ i ]\r\n        if (atomname === atomMap.get(index).atomname) {\r\n          return i\r\n        }\r\n      }\r\n    }\r\n    return undefined\r\n  }\r\n\r\n  hasAtomWithName (...atomnames: (string|string[])[]) {\r\n    const n = atomnames.length\r\n    for (let i = 0; i < n; ++i) {\r\n      if (atomnames[ i ] === undefined) continue\r\n      if (this.getAtomIndexByName(atomnames[ i ]) === undefined) {\r\n        return false\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n  getBonds (r?: ResidueProxy) {\r\n    if (this.bonds === undefined) {\r\n      this.bonds = calculateResidueBonds(r!)  // TODO\r\n    }\r\n    return this.bonds\r\n  }\r\n\r\n  getRings () {\r\n    if (this.rings === undefined) {\r\n      this.calculateRings()\r\n    }\r\n    return this.rings\r\n  }\r\n\r\n  getBondGraph () {\r\n    if (this.bondGraph === undefined) {\r\n      this.calculateBondGraph()\r\n    }\r\n    return this.bondGraph\r\n  }\r\n\r\n  getAromatic (a?: AtomProxy) {\r\n    if (this.aromaticAtoms === undefined) {\r\n      this.calculateAromatic(this.structure.getResidueProxy((a!).residueIndex))  // TODO\r\n    }\r\n    return this.aromaticAtoms\r\n  }\r\n\r\n  getAromaticRings (r?: ResidueProxy) {\r\n    if (this.aromaticRings === undefined) {\r\n      this.calculateAromatic(r!)  // TODO\r\n    }\r\n    return this.aromaticRings\r\n  }\r\n\r\n  /**\r\n   * @return {Object} bondGraph - represents the bonding in this\r\n   *   residue: { ai1: [ ai2, ai3, ...], ...}\r\n   */\r\n  calculateBondGraph () {\r\n    const bondGraph: BondGraph = this.bondGraph = {}\r\n    const bonds = this.getBonds()\r\n    const nb = bonds.atomIndices1.length\r\n    const atomIndices1 = bonds.atomIndices1\r\n    const atomIndices2 = bonds.atomIndices2\r\n\r\n    for (let i = 0; i < nb; ++i) {\r\n      const ai1 = atomIndices1[i]\r\n      const ai2 = atomIndices2[i]\r\n\r\n      const a1 = bondGraph[ ai1 ] = bondGraph[ ai1 ] || []\r\n      a1.push(ai2)\r\n\r\n      const a2 = bondGraph[ ai2 ] = bondGraph[ ai2 ] || []\r\n      a2.push(ai1)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Find all rings up to 2 * RingFinderMaxDepth\r\n   */\r\n  calculateRings () {\r\n    const bondGraph = this.getBondGraph()!  // TODO\r\n    const state = RingFinderState(bondGraph, this.atomCount)\r\n\r\n    for (let i = 0; i < state.count; i++) {\r\n      if (state.visited[i] >= 0) continue\r\n      findRings(state, i)\r\n    }\r\n\r\n    this.rings = { atomRings: state.atomRings, rings: state.rings }\r\n  }\r\n\r\n  isAromatic (atom: AtomProxy) {\r\n    this.aromaticAtoms = this.getAromatic(atom)!  // TODO\r\n    return this.aromaticAtoms[atom.index - atom.residueAtomOffset] === 1\r\n  }\r\n\r\n  calculateAromatic (r: ResidueProxy) {\r\n    const aromaticAtoms = this.aromaticAtoms = new Uint8Array(this.atomCount)\r\n    const rings = this.getRings()!.rings\r\n\r\n    const aromaticRingFlags = rings.map(ring => {\r\n      return isRingAromatic(ring.map(idx => {\r\n        return this.structure.getAtomProxy(idx + r.atomOffset)\r\n      }))\r\n    })\r\n\r\n    const aromaticRings: number[][] = this.aromaticRings = []\r\n    rings.forEach((ring, i) => {\r\n      if (aromaticRingFlags[i]) {\r\n        aromaticRings.push(ring)\r\n        ring.forEach(idx => aromaticAtoms[idx] = 1)\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * For bonds with order > 1, pick a reference atom\r\n   * @return {undefined}\r\n   */\r\n  assignBondReferenceAtomIndices () {\r\n    const bondGraph = this.getBondGraph()!  // TODO\r\n    const rings = this.getRings()!  // TODO\r\n    const atomRings = rings.atomRings\r\n    const ringData = rings.rings\r\n\r\n    const bonds = this.bonds!  // TODO\r\n    const atomIndices1 = bonds.atomIndices1\r\n    const atomIndices2 = bonds.atomIndices2\r\n    const bondOrders = bonds.bondOrders\r\n    const bondReferenceAtomIndices = this.bondReferenceAtomIndices\r\n\r\n    const nb = bonds.atomIndices1.length\r\n\r\n    bondReferenceAtomIndices.length = 0  // reset array\r\n\r\n    for (let i = 0; i < nb; ++i) {\r\n      // Not required for single bonds\r\n      if (bondOrders[i] <= 1) continue\r\n\r\n      let refRing\r\n\r\n      const ai1 = atomIndices1[i]\r\n      const ai2 = atomIndices2[i]\r\n\r\n      const rings1 = atomRings[ ai1 ]\r\n      const rings2 = atomRings[ ai2 ]\r\n      // Are both atoms in a ring?\r\n      if (rings1 && rings2) {\r\n        // Are they in the same ring? (If not, ignore ring info)\r\n        for (let ri1 = 0; ri1 < rings1.length; ri1++){\r\n          if (rings2.indexOf(rings1[ ri1 ]) !== -1) {\r\n            refRing = ringData[ rings1[ ri1 ] ]\r\n            break\r\n          }\r\n        }\r\n      }\r\n\r\n      // Find the first neighbour.\r\n      if (bondGraph[ ai1 ].length > 1) {\r\n        for (let j = 0; j < bondGraph[ ai1 ].length; ++j) {\r\n          const ai3 = bondGraph[ ai1 ][ j ]\r\n          if (ai3 !== ai2) {\r\n            if (refRing === undefined || refRing.indexOf(ai3) !== -1){\r\n              bondReferenceAtomIndices[i] = ai3\r\n              break\r\n            }\r\n          }\r\n        }\r\n      } else if (bondGraph[ ai2 ].length > 1) {\r\n        for (let j = 0; j < bondGraph[ ai2 ].length; ++j) {\r\n          const ai3 = bondGraph[ ai2 ][ j ]\r\n          if (ai3 !== ai1) {\r\n            if (refRing === undefined || refRing.indexOf(ai3) !== -1){\r\n              bondReferenceAtomIndices[i] = ai3\r\n              break\r\n            }\r\n          }\r\n        }\r\n      } // No reference atom could be found (e.g. diatomic molecule/fragment)\r\n    }\r\n  }\r\n\r\n  getBondIndex (atomIndex1: number, atomIndex2: number) {\r\n    const bonds = this.bonds!  // TODO\r\n    const atomIndices1 = bonds.atomIndices1\r\n    const atomIndices2 = bonds.atomIndices2\r\n    let idx1 = atomIndices1.indexOf(atomIndex1)\r\n    let idx2 = atomIndices2.indexOf(atomIndex2)\r\n    const _idx2 = idx2\r\n    while (idx1 !== -1) {\r\n      while (idx2 !== -1) {\r\n        if (idx1 === idx2) return idx1\r\n        idx2 = atomIndices2.indexOf(atomIndex2, idx2 + 1)\r\n      }\r\n      idx1 = atomIndices1.indexOf(atomIndex1, idx1 + 1)\r\n      idx2 = _idx2\r\n    }\r\n    // returns undefined when no bond is found\r\n  }\r\n\r\n  getBondReferenceAtomIndex (atomIndex1: number, atomIndex2: number) {\r\n    const bondIndex = this.getBondIndex(atomIndex1, atomIndex2)\r\n    if (bondIndex === undefined) return undefined\r\n    if (this.bondReferenceAtomIndices.length === 0) {\r\n      this.assignBondReferenceAtomIndices()\r\n    }\r\n    return this.bondReferenceAtomIndices[ bondIndex ]\r\n  }\r\n}\r\n\r\n//\r\n\r\nconst AromaticRingElements = [\r\n  Elements.B, Elements.C, Elements.N, Elements.O,\r\n  Elements.SI, Elements.P, Elements.S,\r\n  Elements.GE, Elements.AS,\r\n  Elements.SN, Elements.SB,\r\n  Elements.BI\r\n]\r\nconst AromaticRingPlanarityThreshold = 0.05\r\n\r\nfunction isRingAromatic (ring: AtomProxy[]) {\r\n  if (ring.some(a => !AromaticRingElements.includes(a.number))) return false\r\n\r\n  let i = 0\r\n  const coords = new Matrix(3, ring.length)\r\n  const cd = coords.data\r\n\r\n  ring.forEach(a => {\r\n    cd[ i + 0 ] = a.x\r\n    cd[ i + 1 ] = a.y\r\n    cd[ i + 2 ] = a.z\r\n    i += 3\r\n  })\r\n\r\n  const pa = new PrincipalAxes(coords)\r\n\r\n  return pa.vecC.length() < AromaticRingPlanarityThreshold\r\n}\r\n\r\n//\r\n\r\n/**\r\n * Ring finding code below adapted from MolQL\r\n * Copyright (c) 2017 MolQL contributors, licensed under MIT\r\n * @author David Sehnal <david.sehnal@gmail.com>\r\n */\r\n\r\nfunction addRing(state: RingFinderState, a: number, b: number) {\r\n  // only \"monotonous\" rings\r\n  if (b < a) return\r\n\r\n  const { pred, color, left, right } = state\r\n  const nc = ++state.currentColor\r\n\r\n  let current = a\r\n\r\n  for (let t = 0; t < RingFinderMaxDepth; t++) {\r\n    color[current] = nc\r\n    current = pred[current]\r\n    if (current < 0) break\r\n  }\r\n\r\n  let leftOffset = 0\r\n  let rightOffset = 0\r\n\r\n  let found = false\r\n  let target = 0\r\n  current = b\r\n  for (let t = 0; t < RingFinderMaxDepth; t++) {\r\n    if (color[current] === nc) {\r\n      target = current\r\n      found = true\r\n      break\r\n    }\r\n    right[rightOffset++] = current\r\n    current = pred[current]\r\n    if (current < 0) break\r\n  }\r\n  if (!found) return\r\n\r\n  current = a\r\n  for (let t = 0; t < RingFinderMaxDepth; t++) {\r\n    left[leftOffset++] = current\r\n    if (target === current) break\r\n    current = pred[current]\r\n    if (current < 0) break\r\n  }\r\n\r\n  const rn = leftOffset + rightOffset\r\n  const ring: number[] = new Array(rn)\r\n  let ringOffset = 0;\r\n  for (let t = 0; t < leftOffset; t++) {\r\n    ring[ringOffset++] = left[t]\r\n  }\r\n  for (let t = rightOffset - 1; t >= 0; t--) {\r\n    ring[ringOffset++] = right[t]\r\n  }\r\n\r\n  const ri = state.rings.length\r\n  // set atomRing indices:\r\n  for (let i = 0; i < rn; ++i) {\r\n    const ai = ring[i]\r\n    if (state.atomRings[ai]) {\r\n      state.atomRings[ai].push(ri)\r\n    } else {\r\n      state.atomRings[ai] = [ri]\r\n    }\r\n  }\r\n\r\n  state.rings.push(ring)\r\n}\r\n\r\nfunction findRings(state: RingFinderState, from: number) {\r\n  const { bonds, visited, queue, pred } = state\r\n\r\n  visited[from] = 1\r\n  queue[0] = from\r\n\r\n  let head = 0\r\n  let size = 1\r\n\r\n  while (head < size) {\r\n    const top = queue[head++]\r\n    const start = 0\r\n    if (bonds[top] === undefined) {\r\n      continue\r\n    }\r\n    const end = bonds[top].length\r\n\r\n    for (let i = start; i < end; i++) {\r\n      const other = bonds[top][i]\r\n\r\n      if (visited[other] > 0) {\r\n        if (pred[other] !== top && pred[top] !== other) {\r\n          addRing(state, top, other)\r\n        }\r\n        continue\r\n      }\r\n\r\n      visited[other] = 1\r\n      queue[size++] = other\r\n      pred[other] = top\r\n    }\r\n  }\r\n}\r\n\r\nconst RingFinderMaxDepth = 4\r\n\r\ninterface RingFinderState {\r\n  count: number,\r\n  visited: Int32Array,\r\n  queue: Int32Array,\r\n  color: Int32Array,\r\n  pred: Int32Array,\r\n\r\n  left: Int32Array,\r\n  right: Int32Array,\r\n\r\n  currentColor: number,\r\n\r\n  rings: number[][],\r\n  atomRings: number[][],\r\n\r\n  bonds: BondGraph\r\n}\r\n\r\nfunction RingFinderState(bonds: BondGraph, capacity: number): RingFinderState {\r\n  const state = {\r\n    count: capacity,\r\n    visited: new Int32Array(capacity),\r\n    queue: new Int32Array(capacity),\r\n    pred: new Int32Array(capacity),\r\n    left: new Int32Array(RingFinderMaxDepth),\r\n    right: new Int32Array(RingFinderMaxDepth),\r\n    color: new Int32Array(capacity),\r\n    currentColor: 0,\r\n    rings: [],\r\n    atomRings: [],\r\n    bonds\r\n  }\r\n  for (let i = 0; i < capacity; i++) {\r\n    state.visited[i] = -1\r\n    state.pred[i] = -1\r\n  }\r\n  return state\r\n}\r\n","/**\r\n * @file Residue Map\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Structure from '../structure/structure'\r\nimport { ResidueBonds } from '../structure/structure-utils'\r\nimport ResidueType from './residue-type'\r\n\r\nfunction getHash (resname: string, atomTypeIdList: number[], hetero: boolean, chemCompType = '') {\r\n  return (\r\n    resname + '|' +\r\n    atomTypeIdList.join(',') + '|' +\r\n    (hetero ? 1 : 0) + '|' +\r\n    chemCompType\r\n  )\r\n}\r\n\r\nclass ResidueMap {\r\n  dict: { [k: string]: number } = {}\r\n  list: ResidueType[] = []\r\n\r\n  constructor (readonly structure: Structure) {}\r\n\r\n  add (resname: string, atomTypeIdList: number[], hetero: boolean, chemCompType = '', bonds?: ResidueBonds) {\r\n    resname = resname.toUpperCase()\r\n    const hash = getHash(resname, atomTypeIdList, hetero, chemCompType)\r\n    let id = this.dict[ hash ]\r\n    if (id === undefined) {\r\n      const residueType = new ResidueType(\r\n        this.structure, resname, atomTypeIdList, hetero, chemCompType, bonds\r\n      )\r\n      id = this.list.length\r\n      this.dict[ hash ] = id\r\n      this.list.push(residueType)\r\n    }\r\n    return id\r\n  }\r\n\r\n  get (id: number) {\r\n    return this.list[ id ]\r\n  }\r\n}\r\n\r\nexport default ResidueMap\r\n","/**\r\n * @file Bond Proxy\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3 } from 'three'\r\n\r\nimport Structure from '../structure/structure'\r\nimport BondStore from '../store/bond-store'\r\nimport AtomProxy from '../proxy/atom-proxy'\r\n\r\n/**\r\n * Bond proxy\r\n */\r\nclass BondProxy {\r\n  index: number\r\n\r\n  bondStore: BondStore\r\n\r\n  private _v12: Vector3\r\n  private _v13: Vector3\r\n  private _ap1: AtomProxy\r\n  private _ap2: AtomProxy\r\n  private _ap3: AtomProxy\r\n\r\n  /**\r\n   * @param {Structure} structure - the structure\r\n   * @param {Integer} index - the index\r\n   */\r\n  constructor (readonly structure: Structure, index = 0) {\r\n    this.index = index\r\n    this.bondStore = structure.bondStore\r\n\r\n    this._v12 = new Vector3()\r\n    this._v13 = new Vector3()\r\n    this._ap1 = this.structure.getAtomProxy()\r\n    this._ap2 = this.structure.getAtomProxy()\r\n    this._ap3 = this.structure.getAtomProxy()\r\n  }\r\n\r\n  /**\r\n   * @type {AtomProxy}\r\n   */\r\n  get atom1 () {\r\n    return this.structure.getAtomProxy(this.atomIndex1)\r\n  }\r\n\r\n  /**\r\n   * @type {AtomProxy}\r\n   */\r\n  get atom2 () {\r\n    return this.structure.getAtomProxy(this.atomIndex2)\r\n  }\r\n\r\n  /**\r\n   * @type {Integer}\r\n   */\r\n  get atomIndex1 () {\r\n    return this.bondStore.atomIndex1[ this.index ]\r\n  }\r\n  set atomIndex1 (value) {\r\n    this.bondStore.atomIndex1[ this.index ] = value\r\n  }\r\n\r\n  /**\r\n   * @type {Integer}\r\n   */\r\n  get atomIndex2 () {\r\n    return this.bondStore.atomIndex2[ this.index ]\r\n  }\r\n  set atomIndex2 (value) {\r\n    this.bondStore.atomIndex2[ this.index ] = value\r\n  }\r\n\r\n  /**\r\n   * @type {Integer}\r\n   */\r\n  get bondOrder () {\r\n    return this.bondStore.bondOrder[ this.index ]\r\n  }\r\n  set bondOrder (value) {\r\n    this.bondStore.bondOrder[ this.index ] = value\r\n  }\r\n\r\n  getOtherAtomIndex (atomIndex: number) {\r\n    return atomIndex === this.atomIndex1 ? this.atomIndex2 : this.atomIndex1\r\n  }\r\n\r\n  getOtherAtom (atom: AtomProxy) {\r\n    return this.structure.getAtomProxy(this.getOtherAtomIndex(atom.index))\r\n  }\r\n\r\n  /**\r\n   * Get reference atom index for the bond\r\n   * @return {Integer|undefined} atom index, or `undefined` if unavailable\r\n   */\r\n  getReferenceAtomIndex () {\r\n    const ap1 = this._ap1\r\n    const ap2 = this._ap2\r\n    ap1.index = this.atomIndex1\r\n    ap2.index = this.atomIndex2\r\n    if (ap1.residueIndex !== ap2.residueIndex) {\r\n      return undefined  // Bond between residues, for now ignore (could detect)\r\n    }\r\n    const typeAtomIndex1 = ap1.index - ap1.residueAtomOffset\r\n    const typeAtomIndex2 = ap2.index - ap2.residueAtomOffset\r\n    const residueType = ap1.residueType\r\n    const ix = residueType.getBondReferenceAtomIndex(typeAtomIndex1, typeAtomIndex2)\r\n    if (ix !== undefined) {\r\n      return ix + ap1.residueAtomOffset\r\n    } else {\r\n      console.warn('No reference atom found', ap1.index, ap2.index)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * calculate shift direction for displaying double/triple bonds\r\n   * @param  {Vector3} [v] pre-allocated output vector\r\n   * @return {Vector3} the shift direction vector\r\n   */\r\n  calculateShiftDir (v = new Vector3()) {\r\n    const ap1 = this._ap1\r\n    const ap2 = this._ap2\r\n    const ap3 = this._ap3\r\n    const v12 = this._v12\r\n    const v13 = this._v13\r\n\r\n    ap1.index = this.atomIndex1\r\n    ap2.index = this.atomIndex2\r\n    const ai3 = this.getReferenceAtomIndex()\r\n\r\n    v12.subVectors(ap1 as any, ap2 as any).normalize()  // TODO\r\n    if (ai3 !== undefined) {\r\n      ap3.index = ai3\r\n      v13.subVectors(ap1 as any, ap3 as any)  // TODO\r\n    } else {\r\n      v13.copy(ap1 as any)  // no reference point, use origin  // TODO\r\n    }\r\n    v13.normalize()\r\n\r\n    // make sure v13 and v12 are not colinear\r\n    let dp = v12.dot(v13)\r\n    if (1 - Math.abs(dp) < 1e-5) {\r\n      v13.set(1, 0, 0)\r\n      dp = v12.dot(v13)\r\n      if (1 - Math.abs(dp) < 1e-5) {\r\n        v13.set(0, 1, 0)\r\n        dp = v12.dot(v13)\r\n      }\r\n    }\r\n\r\n    return v.copy(v13.sub(v12.multiplyScalar(dp))).normalize()\r\n  }\r\n\r\n  qualifiedName () {\r\n    return this.atomIndex1 + '=' + this.atomIndex2\r\n  }\r\n\r\n  /**\r\n   * Clone object\r\n   * @return {BondProxy} cloned bond\r\n   */\r\n  clone () {\r\n    return new BondProxy(this.structure, this.index)\r\n  }\r\n\r\n  toObject () {\r\n    return {\r\n      atomIndex1: this.atomIndex1,\r\n      atomIndex2: this.atomIndex2,\r\n      bondOrder: this.bondOrder\r\n    }\r\n  }\r\n}\r\n\r\nexport default BondProxy\r\n","/**\r\n * @file Residue Proxy\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { NumberArray } from '../types'\r\nimport { defaults } from '../utils'\r\nimport {\r\n    SecStrucHelix, SecStrucSheet, SecStrucTurn,\r\n    ProteinType, RnaType, DnaType, WaterType, IonType, SaccharideType,\r\n    CgProteinBackboneType, CgRnaBackboneType, CgDnaBackboneType,\r\n    AA1\r\n} from '../structure/structure-constants'\r\n\r\nimport Structure from '../structure/structure'\r\nimport Selection from '../selection/selection'\r\n\r\nimport ChainStore from '../store/chain-store'\r\nimport ResidueStore from '../store/residue-store'\r\nimport AtomStore from '../store/atom-store'\r\n\r\nimport AtomMap from '../store/atom-map'\r\nimport ResidueMap from '../store/residue-map'\r\n\r\nimport AtomProxy from '../proxy/atom-proxy'\r\nimport ResidueType, { RingData } from '../store/residue-type';\r\nimport { ResidueBonds } from '../structure/structure-utils';\r\nimport AtomType from '../store/atom-type';\r\nimport ChainProxy from './chain-proxy';\r\nimport Entity from '../structure/entity';\r\n\r\n/**\r\n * Residue proxy\r\n */\r\nclass ResidueProxy {\r\n  index: number\r\n\r\n  chainStore: ChainStore\r\n  residueStore: ResidueStore\r\n  atomStore: AtomStore\r\n\r\n  residueMap: ResidueMap\r\n  atomMap: AtomMap\r\n\r\n  /**\r\n   * @param {Structure} structure - the structure\r\n   * @param {Integer} index - the index\r\n   */\r\n  constructor (readonly structure: Structure, index = 0) {\r\n    this.index = index\r\n    this.chainStore = structure.chainStore\r\n    this.residueStore = structure.residueStore\r\n    this.atomStore = structure.atomStore\r\n    this.residueMap = structure.residueMap\r\n    this.atomMap = structure.atomMap\r\n  }\r\n\r\n  /**\r\n   * Entity\r\n   * @type {Entity}\r\n   */\r\n  get entity (): Entity {\r\n    return this.structure.entityList[ this.entityIndex ]\r\n  }\r\n  get entityIndex () {\r\n    return this.chainStore.entityIndex[ this.chainIndex ]\r\n  }\r\n  /**\r\n   * Chain\r\n   * @type {ChainProxy}\r\n   */\r\n  get chain (): ChainProxy {\r\n    return this.structure.getChainProxy(this.chainIndex)\r\n  }\r\n\r\n  get chainIndex () {\r\n    return this.residueStore.chainIndex[ this.index ]\r\n  }\r\n  set chainIndex (value) {\r\n    this.residueStore.chainIndex[ this.index ] = value\r\n  }\r\n\r\n  get atomOffset () {\r\n    return this.residueStore.atomOffset[ this.index ]\r\n  }\r\n  set atomOffset (value) {\r\n    this.residueStore.atomOffset[ this.index ] = value\r\n  }\r\n\r\n  /**\r\n   * Atom count\r\n   * @type {Integer}\r\n   */\r\n  get atomCount () {\r\n    return this.residueStore.atomCount[ this.index ]\r\n  }\r\n  set atomCount (value) {\r\n    this.residueStore.atomCount[ this.index ] = value\r\n  }\r\n\r\n  get atomEnd () {\r\n    return this.atomOffset + this.atomCount - 1\r\n  }\r\n\r\n  //\r\n\r\n  get modelIndex () {\r\n    return this.chainStore.modelIndex[ this.chainIndex ]\r\n  }\r\n  /**\r\n   * Chain name\r\n   * @type {String}\r\n   */\r\n  get chainname () {\r\n    return this.chainStore.getChainname(this.chainIndex)\r\n  }\r\n  /**\r\n   * Chain id\r\n   * @type {String}\r\n   */\r\n  get chainid () {\r\n    return this.chainStore.getChainid(this.chainIndex)\r\n  }\r\n\r\n  //\r\n\r\n  /**\r\n   * Residue number/label\r\n   * @type {Integer}\r\n   */\r\n  get resno () {\r\n    return this.residueStore.resno[ this.index ]\r\n  }\r\n  set resno (value) {\r\n    this.residueStore.resno[ this.index ] = value\r\n  }\r\n\r\n  /**\r\n   * Secondary structure code\r\n   * @type {String}\r\n   */\r\n  get sstruc () {\r\n    return this.residueStore.getSstruc(this.index)\r\n  }\r\n  set sstruc (value) {\r\n    this.residueStore.setSstruc(this.index, value)\r\n  }\r\n\r\n  /**\r\n   * Insertion code\r\n   * @type {String}\r\n   */\r\n  get inscode () {\r\n    return this.residueStore.getInscode(this.index)\r\n  }\r\n  set inscode (value) {\r\n    this.residueStore.setInscode(this.index, value)\r\n  }\r\n\r\n  //\r\n\r\n  get residueType (): ResidueType {\r\n    return this.residueMap.get(this.residueStore.residueTypeId[ this.index ])\r\n  }\r\n\r\n  /**\r\n   * Residue name\r\n   * @type {String}\r\n   */\r\n  get resname () {\r\n    return this.residueType.resname\r\n  }\r\n  /**\r\n   * Hetero flag\r\n   * @type {Boolean}\r\n   */\r\n  get hetero () {\r\n    return this.residueType.hetero\r\n  }\r\n  get moleculeType () {\r\n    return this.residueType.moleculeType\r\n  }\r\n  get backboneType () {\r\n    return this.residueType.backboneType\r\n  }\r\n  get backboneStartType () {\r\n    return this.residueType.backboneStartType\r\n  }\r\n  get backboneEndType () {\r\n    return this.residueType.backboneEndType\r\n  }\r\n  get traceAtomIndex () {\r\n    return this.residueType.traceAtomIndex + this.atomOffset\r\n  }\r\n  get direction1AtomIndex () {\r\n    return this.residueType.direction1AtomIndex + this.atomOffset\r\n  }\r\n  get direction2AtomIndex () {\r\n    return this.residueType.direction2AtomIndex + this.atomOffset\r\n  }\r\n  get backboneStartAtomIndex () {\r\n    return this.residueType.backboneStartAtomIndex + this.atomOffset\r\n  }\r\n  get backboneEndAtomIndex () {\r\n    return this.residueType.backboneEndAtomIndex + this.atomOffset\r\n  }\r\n  get rungEndAtomIndex () {\r\n    return this.residueType.rungEndAtomIndex + this.atomOffset\r\n  }\r\n\r\n  //\r\n\r\n  get x () {\r\n    let x = 0\r\n    for (let i = this.atomOffset; i <= this.atomEnd; ++i) {\r\n      x += this.atomStore.x[ i ]\r\n    }\r\n    return x / this.atomCount\r\n  }\r\n\r\n  get y () {\r\n    let y = 0\r\n    for (let i = this.atomOffset; i <= this.atomEnd; ++i) {\r\n      y += this.atomStore.y[ i ]\r\n    }\r\n    return y / this.atomCount\r\n  }\r\n\r\n  get z () {\r\n    let z = 0\r\n    for (let i = this.atomOffset; i <= this.atomEnd; ++i) {\r\n      z += this.atomStore.z[ i ]\r\n    }\r\n    return z / this.atomCount\r\n  }\r\n\r\n  //\r\n\r\n  /**\r\n   * Atom iterator\r\n   * @param  {function(atom: AtomProxy)} callback - the callback\r\n   * @param  {Selection} [selection] - the selection\r\n   * @return {undefined}\r\n   */\r\n  eachAtom (callback: (ap: AtomProxy) => void, selection?: Selection) {\r\n    const count = this.atomCount\r\n    const offset = this.atomOffset\r\n    const ap = this.structure._ap\r\n    const end = offset + count\r\n\r\n    if (selection && selection.atomOnlyTest) {\r\n      const atomOnlyTest = selection.atomOnlyTest\r\n      for (let i = offset; i < end; ++i) {\r\n        ap.index = i\r\n        if (atomOnlyTest(ap)) callback(ap)\r\n      }\r\n    } else {\r\n      for (let i = offset; i < end; ++i) {\r\n        ap.index = i\r\n        callback(ap)\r\n      }\r\n    }\r\n  }\r\n\r\n  //\r\n\r\n  /**\r\n   * Write residue center position to array\r\n   * @param  {Array|TypedArray} [array] - target array\r\n   * @param  {Integer} [offset] - the offset\r\n   * @return {Array|TypedArray} target array\r\n   */\r\n  positionToArray (array: NumberArray = [], offset = 0) {\r\n    array[ offset + 0 ] = this.x\r\n    array[ offset + 1 ] = this.y\r\n    array[ offset + 2 ] = this.z\r\n\r\n    return array\r\n  }\r\n\r\n  //\r\n\r\n  /**\r\n   * If residue is from a protein\r\n   * @return {Boolean} flag\r\n   */\r\n  isProtein () {\r\n    return this.residueType.moleculeType === ProteinType\r\n  }\r\n\r\n  /**\r\n   * If residue is nucleic\r\n   * @return {Boolean} flag\r\n   */\r\n  isNucleic () {\r\n    const moleculeType = this.residueType.moleculeType\r\n    return moleculeType === RnaType || moleculeType === DnaType\r\n  }\r\n\r\n  /**\r\n   * If residue is rna\r\n   * @return {Boolean} flag\r\n   */\r\n  isRna () {\r\n    return this.residueType.moleculeType === RnaType\r\n  }\r\n\r\n  /**\r\n   * If residue is dna\r\n   * @return {Boolean} flag\r\n   */\r\n  isDna () {\r\n    return this.residueType.moleculeType === DnaType\r\n  }\r\n\r\n  /**\r\n   * If residue is coarse-grain\r\n   * @return {Boolean} flag\r\n   */\r\n  isCg () {\r\n    const backboneType = this.residueType.backboneType\r\n    return (\r\n      backboneType === CgProteinBackboneType ||\r\n      backboneType === CgRnaBackboneType ||\r\n      backboneType === CgDnaBackboneType\r\n    )\r\n  }\r\n\r\n  /**\r\n   * If residue is from a polymer\r\n   * @return {Boolean} flag\r\n   */\r\n  isPolymer () {\r\n    if (this.structure.entityList.length > 0) {\r\n      return this.entity.isPolymer()\r\n    } else {\r\n      const moleculeType = this.residueType.moleculeType\r\n      return (\r\n        moleculeType === ProteinType ||\r\n        moleculeType === RnaType ||\r\n        moleculeType === DnaType\r\n      )\r\n    }\r\n  }\r\n\r\n  /**\r\n   * If residue is hetero\r\n   * @return {Boolean} flag\r\n   */\r\n  isHetero () {\r\n    return this.residueType.hetero === 1\r\n  }\r\n\r\n  /**\r\n   * If residue is a water molecule\r\n   * @return {Boolean} flag\r\n   */\r\n  isWater () {\r\n    return this.residueType.moleculeType === WaterType\r\n  }\r\n\r\n  /**\r\n   * If residue is an ion\r\n   * @return {Boolean} flag\r\n   */\r\n  isIon () {\r\n    return this.residueType.moleculeType === IonType\r\n  }\r\n\r\n  /**\r\n   * If residue is a saccharide\r\n   * @return {Boolean} flag\r\n   */\r\n  isSaccharide () {\r\n    return this.residueType.moleculeType === SaccharideType\r\n  }\r\n\r\n  isStandardAminoacid () {\r\n    return this.residueType.isStandardAminoacid()\r\n  }\r\n\r\n  isStandardBase () {\r\n    return this.residueType.isStandardBase()\r\n  }\r\n\r\n  /**\r\n   * If residue is part of a helix\r\n   * @return {Boolean} flag\r\n   */\r\n  isHelix () {\r\n    return SecStrucHelix.includes(this.sstruc)\r\n  }\r\n\r\n  /**\r\n   * If residue is part of a sheet\r\n   * @return {Boolean} flag\r\n   */\r\n  isSheet () {\r\n    return SecStrucSheet.includes(this.sstruc)\r\n  }\r\n\r\n  /**\r\n   * If residue is part of a turn\r\n   * @return {Boolean} flag\r\n   */\r\n  isTurn () {\r\n    return SecStrucTurn.includes(this.sstruc) && this.isProtein()\r\n  }\r\n\r\n  getAtomType (index: number): AtomType {\r\n    return this.atomMap.get(this.atomStore.atomTypeId[ index ])\r\n  }\r\n\r\n  getResname1 () {\r\n    // FIXME nucleic support\r\n    return AA1[ this.resname.toUpperCase() ] || 'X'\r\n  }\r\n\r\n  getBackboneType (position: number) {\r\n    switch (position) {\r\n      case -1:\r\n        return this.residueType.backboneStartType\r\n      case 1:\r\n        return this.residueType.backboneEndType\r\n      default:\r\n        return this.residueType.backboneType\r\n    }\r\n  }\r\n\r\n  getAtomIndexByName (atomname: string) {\r\n    let index = this.residueType.getAtomIndexByName(atomname)\r\n    if (index !== undefined) {\r\n      index += this.atomOffset\r\n    }\r\n    return index\r\n  }\r\n\r\n  hasAtomWithName (atomname: string) {\r\n    return this.residueType.hasAtomWithName(atomname)\r\n  }\r\n\r\n  getAtomnameList () {\r\n    console.warn('getAtomnameList - might be expensive')\r\n\r\n    const n = this.atomCount\r\n    const offset = this.atomOffset\r\n    const list = new Array(n)\r\n    for (let i = 0; i < n; ++i) {\r\n      list[ i ] = this.getAtomType(offset + i).atomname\r\n    }\r\n    return list\r\n  }\r\n\r\n  /**\r\n   * If residue is connected to another\r\n   * @param  {ResidueProxy} rNext - the other residue\r\n   * @return {Boolean} - flag\r\n   */\r\n  connectedTo (rNext: ResidueProxy) {\r\n    const bbAtomEnd = this.structure.getAtomProxy(this.backboneEndAtomIndex)\r\n    const bbAtomStart = this.structure.getAtomProxy(rNext.backboneStartAtomIndex)\r\n    if (bbAtomEnd && bbAtomStart) {\r\n      return bbAtomEnd.connectedTo(bbAtomStart)\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  getNextConnectedResidue () {\r\n    const rOffset = this.chainStore.residueOffset[ this.chainIndex ]\r\n    const rCount = this.chainStore.residueCount[ this.chainIndex ]\r\n    const nextIndex = this.index + 1\r\n    if (nextIndex < rOffset + rCount) {\r\n      const rpNext = this.structure.getResidueProxy(nextIndex)\r\n      if (this.connectedTo(rpNext)) {\r\n        return rpNext\r\n      }\r\n    } else if (nextIndex === rOffset + rCount) {  // cyclic\r\n      const rpFirst = this.structure.getResidueProxy(rOffset)\r\n      if (this.connectedTo(rpFirst)) {\r\n        return rpFirst\r\n      }\r\n    }\r\n    return undefined\r\n  }\r\n\r\n  getPreviousConnectedResidue (residueProxy?: ResidueProxy) {\r\n    const rOffset = this.chainStore.residueOffset[ this.chainIndex ]\r\n    const prevIndex = this.index - 1\r\n    if (prevIndex >= rOffset) {\r\n      const rpPrev = defaults(residueProxy, this.structure.getResidueProxy())\r\n      rpPrev.index = prevIndex\r\n      if (rpPrev.connectedTo(this)) {\r\n        return rpPrev\r\n      }\r\n    } else if (prevIndex === rOffset - 1) {  // cyclic\r\n      const rCount = this.chainStore.residueCount[ this.chainIndex ]\r\n      const rpLast = defaults(residueProxy, this.structure.getResidueProxy())\r\n      rpLast.index = rOffset + rCount - 1\r\n      if (rpLast.connectedTo(this)) {\r\n        return rpLast\r\n      }\r\n    }\r\n    return undefined\r\n  }\r\n\r\n  getBonds (): ResidueBonds {\r\n    return this.residueType.getBonds(this)\r\n  }\r\n\r\n  getRings (): RingData|undefined {\r\n    return this.residueType.getRings()\r\n  }\r\n\r\n  getAromaticRings () {\r\n    return this.residueType.getAromaticRings(this)\r\n  }\r\n\r\n  qualifiedName (noResname = false) {\r\n    let name = ''\r\n    if (this.resname && !noResname) name += '[' + this.resname + ']'\r\n    if (this.resno !== undefined) name += this.resno\r\n    if (this.inscode) name += '^' + this.inscode\r\n    if (this.chain) name += ':' + this.chainname\r\n    name += '/' + this.modelIndex\r\n    return name\r\n  }\r\n\r\n  /**\r\n   * Clone object\r\n   * @return {ResidueProxy} cloned residue\r\n   */\r\n  clone () {\r\n    return new ResidueProxy(this.structure, this.index)\r\n  }\r\n\r\n  toObject () {\r\n    return {\r\n      index: this.index,\r\n      chainIndex: this.chainIndex,\r\n      atomOffset: this.atomOffset,\r\n      atomCount: this.atomCount,\r\n\r\n      resno: this.resno,\r\n      resname: this.resname,\r\n      sstruc: this.sstruc\r\n    }\r\n  }\r\n}\r\n\r\nexport default ResidueProxy\r\n","/**\r\n * @file Polymer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\n// import { Log } from '../globals'\r\n\r\nimport Structure from '../structure/structure'\r\nimport Selection from '../selection/selection'\r\n\r\nimport ChainStore from '../store/chain-store'\r\nimport ResidueStore from '../store/residue-store'\r\nimport AtomStore from '../store/atom-store'\r\n\r\nimport ResidueProxy from '../proxy/residue-proxy'\r\nimport AtomProxy from '../proxy/atom-proxy'\r\n\r\n/**\r\n * Polymer\r\n */\r\nclass Polymer {\r\n  chainStore: ChainStore\r\n  residueStore: ResidueStore\r\n  atomStore: AtomStore\r\n\r\n  residueCount: number\r\n\r\n  isPrevConnected: boolean\r\n  isNextConnected: boolean\r\n  isNextNextConnected: boolean\r\n  isCyclic: boolean\r\n\r\n  private __residueProxy: ResidueProxy\r\n\r\n  /**\r\n   * @param {Structure} structure - the structure\r\n   * @param {Integer} residueIndexStart - the index of the first residue\r\n   * @param {Integer} residueIndexEnd - the index of the last residue\r\n   */\r\n  constructor (readonly structure: Structure, readonly residueIndexStart: number, readonly residueIndexEnd: number) {\r\n    this.chainStore = structure.chainStore\r\n    this.residueStore = structure.residueStore\r\n    this.atomStore = structure.atomStore\r\n\r\n    /**\r\n     * @type {Integer}\r\n     */\r\n    this.residueCount = residueIndexEnd - residueIndexStart + 1\r\n\r\n    const rpStart = this.structure.getResidueProxy(this.residueIndexStart)\r\n    const rpEnd = this.structure.getResidueProxy(this.residueIndexEnd)\r\n    this.isPrevConnected = rpStart.getPreviousConnectedResidue() !== undefined\r\n    const rpNext = rpEnd.getNextConnectedResidue()\r\n    this.isNextConnected = rpNext !== undefined\r\n    this.isNextNextConnected = rpNext !== undefined && rpNext.getNextConnectedResidue() !== undefined\r\n    this.isCyclic = rpEnd.connectedTo(rpStart)\r\n\r\n    this.__residueProxy = this.structure.getResidueProxy()\r\n\r\n    // console.log( this.qualifiedName(), this );\r\n  }\r\n\r\n  get chainIndex () {\r\n    return this.residueStore.chainIndex[ this.residueIndexStart ]\r\n  }\r\n  get modelIndex () {\r\n    return this.chainStore.modelIndex[ this.chainIndex ]\r\n  }\r\n\r\n  /**\r\n   * @type {String}\r\n   */\r\n  get chainname () {\r\n    return this.chainStore.getChainname(this.chainIndex)\r\n  }\r\n\r\n  //\r\n\r\n  /**\r\n   * If first residue is from aprotein\r\n   * @return {Boolean} flag\r\n   */\r\n  isProtein () {\r\n    this.__residueProxy.index = this.residueIndexStart\r\n    return this.__residueProxy.isProtein()\r\n  }\r\n\r\n  /**\r\n   * If atom is part of a coarse-grain group\r\n   * @return {Boolean} flag\r\n   */\r\n  isCg () {\r\n    this.__residueProxy.index = this.residueIndexStart\r\n    return this.__residueProxy.isCg()\r\n  }\r\n\r\n  /**\r\n   * If atom is part of a nucleic molecule\r\n   * @return {Boolean} flag\r\n   */\r\n  isNucleic () {\r\n    this.__residueProxy.index = this.residueIndexStart\r\n    return this.__residueProxy.isNucleic()\r\n  }\r\n\r\n  getMoleculeType () {\r\n    this.__residueProxy.index = this.residueIndexStart\r\n    return this.__residueProxy.moleculeType\r\n  }\r\n\r\n  getBackboneType (position: number) {\r\n    this.__residueProxy.index = this.residueIndexStart\r\n    return this.__residueProxy.getBackboneType(position)\r\n  }\r\n\r\n  getAtomIndexByType (index: number, type: string) {\r\n    // TODO pre-calculate, add to residueStore???\r\n\r\n    if (this.isCyclic) {\r\n      if (index === -1) {\r\n        index = this.residueCount - 1\r\n      } else if (index === this.residueCount) {\r\n        index = 0\r\n      }\r\n    } else {\r\n      if (index === -1 && !this.isPrevConnected) index += 1\r\n      if (index === this.residueCount && !this.isNextNextConnected) index -= 1\r\n      // if( index === this.residueCount - 1 && !this.isNextConnected ) index -= 1;\r\n    }\r\n\r\n    const rp = this.__residueProxy\r\n    rp.index = this.residueIndexStart + index\r\n    let aIndex\r\n\r\n    switch (type) {\r\n      case 'trace':\r\n        aIndex = rp.traceAtomIndex\r\n        break\r\n      case 'direction1':\r\n        aIndex = rp.direction1AtomIndex\r\n        break\r\n      case 'direction2':\r\n        aIndex = rp.direction2AtomIndex\r\n        break\r\n      default:\r\n        aIndex = rp.getAtomIndexByName(type)\r\n    }\r\n\r\n    // if (!ap){\r\n    //   console.log(this, type, rp.residueType)\r\n    //   // console.log(rp.qualifiedName(), rp.index, index, this.residueCount - 1)\r\n    //   // rp.index = this.residueIndexStart;\r\n    //   // console.log(rp.qualifiedName(), this.residueIndexStart)\r\n    //   // rp.index = this.residueIndexEnd;\r\n    //   // console.log(rp.qualifiedName(), this.residueIndexEnd)\r\n    // }\r\n\r\n    return aIndex\r\n  }\r\n\r\n  /**\r\n   * Atom iterator\r\n   * @param  {function(atom: AtomProxy)} callback - the callback\r\n   * @param  {Selection} [selection] - the selection\r\n   * @return {undefined}\r\n   */\r\n  eachAtom (callback: (ap: AtomProxy) => void, selection?: Selection) {\r\n    this.eachResidue(function (rp) {\r\n      rp.eachAtom(callback, selection)\r\n    })\r\n  }\r\n\r\n  eachAtomN (n: number, callback: (...apArray: AtomProxy[]) => void, type: string) {\r\n    const m = this.residueCount\r\n    const array: AtomProxy[] = new Array(n)\r\n\r\n    for (let i = 0; i < n; ++i) {\r\n      array[ i ] = this.structure.getAtomProxy(this.getAtomIndexByType(i, type))\r\n    }\r\n    callback.apply(this, array)\r\n\r\n    for (var j = n; j < m; ++j) {\r\n      for (let i = 1; i < n; ++i) {\r\n        array[ i - 1 ].index = array[ i ].index\r\n      }\r\n      array[ n - 1 ].index = this.getAtomIndexByType(j, type)!  // TODO\r\n      callback.apply(this, array)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Residue iterator\r\n   * @param  {function(residue: ResidueProxy)} callback - the callback\r\n   * @return {undefined}\r\n   */\r\n  eachResidue (callback: (rp: ResidueProxy) => void) {\r\n    const rp = this.structure.getResidueProxy()\r\n    const n = this.residueCount\r\n    const rStartIndex = this.residueIndexStart\r\n\r\n    for (let i = 0; i < n; ++i) {\r\n      rp.index = rStartIndex + i\r\n      callback(rp)\r\n    }\r\n  }\r\n\r\n  qualifiedName () {\r\n    const rpStart = this.structure.getResidueProxy(this.residueIndexStart)\r\n    const rpEnd = this.structure.getResidueProxy(this.residueIndexEnd)\r\n    return rpStart.qualifiedName() + ' - ' + rpEnd.qualifiedName()\r\n  }\r\n}\r\n\r\nexport default Polymer\r\n","/**\r\n * @file Chain Proxy\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { UnknownBackboneType } from '../structure/structure-constants'\r\n\r\nimport Structure from '../structure/structure'\r\nimport Selection from '../selection/selection'\r\n\r\nimport ChainStore from '../store/chain-store'\r\nimport ResidueStore from '../store/residue-store'\r\n\r\nimport Polymer from '../proxy/polymer'\r\nimport ResidueProxy from '../proxy/residue-proxy'\r\nimport AtomProxy from '../proxy/atom-proxy'\r\nimport ModelProxy from './model-proxy';\r\nimport Entity from '../structure/entity';\r\n\r\n/**\r\n * Chain proxy\r\n */\r\nclass ChainProxy {\r\n  index: number\r\n\r\n  chainStore: ChainStore\r\n  residueStore: ResidueStore\r\n\r\n  /**\r\n   * @param {Structure} structure - the structure\r\n   * @param {Integer} index - the index\r\n   */\r\n  constructor (readonly structure: Structure, index = 0) {\r\n    this.index = index\r\n    this.chainStore = structure.chainStore\r\n    this.residueStore = structure.residueStore\r\n  }\r\n\r\n  /**\r\n   * Entity\r\n   * @type {Entity}\r\n   */\r\n  get entity (): Entity {\r\n    return this.structure.entityList[ this.entityIndex ]\r\n  }\r\n  /**\r\n   * Model\r\n   * @type {ModelProxy}\r\n   */\r\n  get model (): ModelProxy {\r\n    return this.structure.getModelProxy(this.modelIndex)\r\n  }\r\n\r\n  get entityIndex () {\r\n    return this.chainStore.entityIndex[ this.index ]\r\n  }\r\n  set entityIndex (value) {\r\n    this.chainStore.entityIndex[ this.index ] = value\r\n  }\r\n\r\n  get modelIndex () {\r\n    return this.chainStore.modelIndex[ this.index ]\r\n  }\r\n  set modelIndex (value) {\r\n    this.chainStore.modelIndex[ this.index ] = value\r\n  }\r\n\r\n  get residueOffset () {\r\n    return this.chainStore.residueOffset[ this.index ]\r\n  }\r\n  set residueOffset (value) {\r\n    this.chainStore.residueOffset[ this.index ] = value\r\n  }\r\n\r\n  /**\r\n   * Residue count\r\n   * @type {Integer}\r\n   */\r\n  get residueCount () {\r\n    return this.chainStore.residueCount[ this.index ]\r\n  }\r\n  set residueCount (value) {\r\n    this.chainStore.residueCount[ this.index ] = value\r\n  }\r\n\r\n  get residueEnd () {\r\n    return this.residueOffset + this.residueCount - 1\r\n  }\r\n\r\n  get atomOffset () {\r\n    return this.residueStore.atomOffset[ this.residueOffset ]\r\n  }\r\n  get atomEnd () {\r\n    return (\r\n      this.residueStore.atomOffset[ this.residueEnd ] +\r\n      this.residueStore.atomCount[ this.residueEnd ] - 1\r\n    )\r\n  }\r\n  /**\r\n   * Atom count\r\n   * @type {Integer}\r\n   */\r\n  get atomCount () {\r\n    if (this.residueCount === 0) {\r\n      return 0\r\n    } else {\r\n      return this.atomEnd - this.atomOffset + 1\r\n    }\r\n  }\r\n\r\n  //\r\n\r\n  /**\r\n   * Chain name\r\n   * @type {String}\r\n   */\r\n  get chainname () {\r\n    return this.chainStore.getChainname(this.index)\r\n  }\r\n  set chainname (value) {\r\n    this.chainStore.setChainname(this.index, value)\r\n  }\r\n\r\n  /**\r\n   * Chain id\r\n   * @type {String}\r\n   */\r\n  get chainid () {\r\n    return this.chainStore.getChainid(this.index)\r\n  }\r\n  set chainid (value) {\r\n    this.chainStore.setChainid(this.index, value)\r\n  }\r\n\r\n  //\r\n\r\n  /**\r\n   * Atom iterator\r\n   * @param  {function(atom: AtomProxy)} callback - the callback\r\n   * @param  {Selection} [selection] - the selection\r\n   * @return {undefined}\r\n   */\r\n  eachAtom (callback: (ap: AtomProxy) => void, selection?: Selection) {\r\n    this.eachResidue(function (rp) {\r\n      rp.eachAtom(callback, selection)\r\n    }, selection)\r\n  }\r\n\r\n  /**\r\n   * Residue iterator\r\n   * @param  {function(residue: ResidueProxy)} callback - the callback\r\n   * @param  {Selection} [selection] - the selection\r\n   * @return {undefined}\r\n   */\r\n  eachResidue (callback: (rp: ResidueProxy) => void, selection?: Selection) {\r\n    const count = this.residueCount\r\n    const offset = this.residueOffset\r\n    const rp = this.structure._rp\r\n    const end = offset + count\r\n\r\n    if (selection && selection.test) {\r\n      const residueOnlyTest = selection.residueOnlyTest\r\n      if (residueOnlyTest) {\r\n        for (let i = offset; i < end; ++i) {\r\n          rp.index = i\r\n          if (residueOnlyTest(rp)) {\r\n            callback(rp)\r\n          }\r\n        }\r\n      } else {\r\n        for (let i = offset; i < end; ++i) {\r\n          rp.index = i\r\n          callback(rp)\r\n        }\r\n      }\r\n    } else {\r\n      for (let i = offset; i < end; ++i) {\r\n        rp.index = i\r\n        callback(rp)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Multi-residue iterator\r\n   * @param {Integer} n - window size\r\n   * @param  {function(residueList: ResidueProxy[])} callback - the callback\r\n   * @return {undefined}\r\n   */\r\n  eachResidueN (n: number, callback: (...rpArray: ResidueProxy[]) => void) {\r\n    const count = this.residueCount\r\n    const offset = this.residueOffset\r\n    const end = offset + count\r\n    if (count < n) return\r\n    const array: ResidueProxy[] = new Array(n)\r\n\r\n    for (let i = 0; i < n; ++i) {\r\n      array[ i ] = this.structure.getResidueProxy(offset + i)\r\n    }\r\n    callback.apply(this, array)\r\n\r\n    for (let j = offset + n; j < end; ++j) {\r\n      for (let i = 0; i < n; ++i) {\r\n        array[ i ].index += 1\r\n      }\r\n      callback.apply(this, array)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Polymer iterator\r\n   * @param  {function(polymer: Polymer)} callback - the callback\r\n   * @param  {Selection} [selection] - the selection\r\n   * @return {undefined}\r\n   */\r\n  eachPolymer (callback: (p: Polymer) => void, selection?: Selection) {\r\n    let rStartIndex = 0\r\n    let rNextIndex = 0\r\n    const test = selection ? selection.residueOnlyTest : undefined\r\n    const structure = this.model.structure\r\n\r\n    const count = this.residueCount\r\n    const offset = this.residueOffset\r\n    const end = offset + count\r\n\r\n    const rp1 = this.structure.getResidueProxy()\r\n    const rp2 = this.structure.getResidueProxy(offset)\r\n\r\n    const ap1 = this.structure.getAtomProxy()\r\n    const ap2 = this.structure.getAtomProxy()\r\n\r\n    let first = true\r\n\r\n    for (let i = offset + 1; i < end; ++i) {\r\n      rp1.index = rp2.index\r\n      rp2.index = i\r\n\r\n      const bbType1 = first ? rp1.backboneEndType : rp1.backboneType\r\n      const bbType2 = rp2.backboneType\r\n\r\n      if (first) {\r\n        rStartIndex = rp1.index\r\n        first = false\r\n      }\r\n      rNextIndex = rp2.index\r\n\r\n      if (bbType1 !== UnknownBackboneType && bbType1 === bbType2) {\r\n        ap1.index = rp1.backboneEndAtomIndex\r\n        ap2.index = rp2.backboneStartAtomIndex\r\n      } else {\r\n        if (bbType1 !== UnknownBackboneType) {\r\n          if (rp1.index - rStartIndex > 1) {\r\n            // console.log(\"FOO1\",rStartIndex, rp1.index)\r\n            callback(new Polymer(structure, rStartIndex, rp1.index))\r\n          }\r\n        }\r\n        rStartIndex = rNextIndex\r\n\r\n        continue\r\n      }\r\n\r\n      if (!ap1 || !ap2 || !ap1.connectedTo(ap2) ||\r\n        (test && (!test(rp1) || !test(rp2)))\r\n      ) {\r\n        if (rp1.index - rStartIndex > 1) {\r\n          // console.log(\"FOO2\",rStartIndex, rp1.index)\r\n          callback(new Polymer(structure, rStartIndex, rp1.index))\r\n        }\r\n        rStartIndex = rNextIndex\r\n      }\r\n    }\r\n\r\n    if (rNextIndex - rStartIndex > 1) {\r\n      if (this.structure.getResidueProxy(rStartIndex).backboneEndType) {\r\n        // console.log(\"FOO3\",rStartIndex, rNextIndex)\r\n        callback(new Polymer(structure, rStartIndex, rNextIndex))\r\n      }\r\n    }\r\n  }\r\n\r\n  //\r\n\r\n  qualifiedName () {\r\n    var name = ':' + this.chainname + '/' + this.modelIndex\r\n    return name\r\n  }\r\n\r\n  /**\r\n   * Clone object\r\n   * @return {ChainProxy} cloned chain\r\n   */\r\n  clone () {\r\n    return new ChainProxy(this.structure, this.index)\r\n  }\r\n\r\n  toObject () {\r\n    return {\r\n      index: this.index,\r\n      residueOffset: this.residueOffset,\r\n      residueCount: this.residueCount,\r\n\r\n      chainname: this.chainname\r\n    }\r\n  }\r\n}\r\n\r\nexport default ChainProxy\r\n","/**\r\n * @file Model Proxy\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Structure from '../structure/structure'\r\nimport Selection from '../selection/selection'\r\n\r\nimport ModelStore from '../store/model-store'\r\nimport ChainStore from '../store/chain-store'\r\nimport ResidueStore from '../store/residue-store'\r\n\r\nimport ChainProxy from '../proxy/chain-proxy'\r\nimport Polymer from '../proxy/polymer'\r\nimport ResidueProxy from '../proxy/residue-proxy'\r\nimport AtomProxy from '../proxy/atom-proxy'\r\n\r\n/**\r\n * Model proxy\r\n */\r\nclass ModelProxy {\r\n  index: number\r\n\r\n  modelStore: ModelStore\r\n  chainStore: ChainStore\r\n  residueStore: ResidueStore\r\n\r\n  /**\r\n   * @param {Structure} structure - the structure\r\n   * @param {Integer} index - the index\r\n   */\r\n  constructor (readonly structure: Structure, index = 0) {\r\n    this.index = index\r\n    this.modelStore = structure.modelStore\r\n    this.chainStore = structure.chainStore\r\n    this.residueStore = structure.residueStore\r\n  }\r\n\r\n  get chainOffset () {\r\n    return this.modelStore.chainOffset[ this.index ]\r\n  }\r\n  set chainOffset (value) {\r\n    this.modelStore.chainOffset[ this.index ] = value\r\n  }\r\n\r\n  get chainCount () {\r\n    return this.modelStore.chainCount[ this.index ]\r\n  }\r\n  set chainCount (value) {\r\n    this.modelStore.chainCount[ this.index ] = value\r\n  }\r\n\r\n  get residueOffset () {\r\n    return this.chainStore.residueOffset[ this.chainOffset ]\r\n  }\r\n  get atomOffset () {\r\n    return this.residueStore.atomOffset[ this.residueOffset ]\r\n  }\r\n\r\n  get chainEnd () {\r\n    return this.chainOffset + this.chainCount - 1\r\n  }\r\n  get residueEnd () {\r\n    return (\r\n      this.chainStore.residueOffset[ this.chainEnd ] +\r\n      this.chainStore.residueCount[ this.chainEnd ] - 1\r\n    )\r\n  }\r\n  get atomEnd () {\r\n    return (\r\n      this.residueStore.atomOffset[ this.residueEnd ] +\r\n      this.residueStore.atomCount[ this.residueEnd ] - 1\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Residue count\r\n   * @type {Integer}\r\n   */\r\n  get residueCount () {\r\n    if (this.chainCount === 0) {\r\n      return 0\r\n    } else {\r\n      return this.residueEnd - this.residueOffset + 1\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Atom count\r\n   * @type {Integer}\r\n   */\r\n  get atomCount () {\r\n    if (this.residueCount === 0) {\r\n      return 0\r\n    } else {\r\n      return this.atomEnd - this.atomOffset + 1\r\n    }\r\n  }\r\n\r\n  //\r\n\r\n  /**\r\n   * Atom iterator\r\n   * @param  {function(atom: AtomProxy)} callback - the callback\r\n   * @param  {Selection} [selection] - the selection\r\n   * @return {undefined}\r\n   */\r\n  eachAtom (callback: (ap: AtomProxy) => void, selection?: Selection) {\r\n    this.eachChain(function (cp) {\r\n      cp.eachAtom(callback, selection)\r\n    }, selection)\r\n  }\r\n\r\n  /**\r\n   * Residue iterator\r\n   * @param  {function(residue: ResidueProxy)} callback - the callback\r\n   * @param  {Selection} [selection] - the selection\r\n   * @return {undefined}\r\n   */\r\n  eachResidue (callback: (rp: ResidueProxy) => void, selection?: Selection) {\r\n    this.eachChain(function (cp) {\r\n      cp.eachResidue(callback, selection)\r\n    }, selection)\r\n  }\r\n\r\n  /**\r\n   * Polymer iterator\r\n   * @param  {function(polymer: Polymer)} callback - the callback\r\n   * @param  {Selection} [selection] - the selection\r\n   * @return {undefined}\r\n   */\r\n  eachPolymer (callback: (p: Polymer) => void, selection?: Selection) {\r\n    if (selection && selection.chainOnlyTest) {\r\n      const chainOnlyTest = selection.chainOnlyTest\r\n\r\n      this.eachChain(function (cp) {\r\n        if (chainOnlyTest(cp)) {\r\n          cp.eachPolymer(callback, selection)\r\n        }\r\n      })\r\n    } else {\r\n      this.eachChain(function (cp) {\r\n        cp.eachPolymer(callback, selection)\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Chain iterator\r\n   * @param  {function(chain: ChainProxy)} callback - the callback\r\n   * @param  {Selection} [selection] - the selection\r\n   * @return {undefined}\r\n   */\r\n  eachChain (callback: (cp: ChainProxy) => void, selection?: Selection) {\r\n    const count = this.chainCount\r\n    const offset = this.chainOffset\r\n    const cp = this.structure._cp\r\n    const end = offset + count\r\n\r\n    if (selection && selection.test) {\r\n      const chainOnlyTest = selection.chainOnlyTest\r\n      if (chainOnlyTest) {\r\n        for (let i = offset; i < end; ++i) {\r\n          cp.index = i\r\n          if (chainOnlyTest(cp)) {\r\n            callback(cp)\r\n          }\r\n        }\r\n      } else {\r\n        for (let i = offset; i < end; ++i) {\r\n          cp.index = i\r\n          callback(cp)\r\n        }\r\n      }\r\n    } else {\r\n      for (let i = offset; i < end; ++i) {\r\n        cp.index = i\r\n        callback(cp)\r\n      }\r\n    }\r\n  }\r\n\r\n  //\r\n\r\n  qualifiedName () {\r\n    const name = '/' + this.index\r\n    return name\r\n  }\r\n\r\n  /**\r\n   * Clone object\r\n   * @return {ModelProxy} cloned model\r\n   */\r\n  clone () {\r\n    return new ModelProxy(this.structure, this.index)\r\n  }\r\n\r\n  toObject () {\r\n    return {\r\n      index: this.index,\r\n      chainOffset: this.chainOffset,\r\n      chainCount: this.chainCount\r\n    }\r\n  }\r\n}\r\n\r\nexport default ModelProxy\r\n","/**\r\n * @file Structure\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3, Box3 } from 'three'\r\nimport { Signal } from 'signals'\r\n\r\nimport { Debug, Log, ColormakerRegistry } from '../globals'\r\nimport { defaults } from '../utils'\r\nimport { AtomPicker, BondPicker } from '../utils/picker'\r\nimport { copyWithin, arrayMin, arrayMax } from '../math/array-utils'\r\nimport BitArray from '../utils/bitarray'\r\nimport RadiusFactory, { RadiusParams } from '../utils/radius-factory'\r\nimport { Matrix } from '../math/matrix-utils'\r\nimport PrincipalAxes from '../math/principal-axes'\r\nimport SpatialHash from '../geometry/spatial-hash'\r\nimport FilteredVolume from '../surface/filtered-volume'\r\nimport StructureView from './structure-view'\r\nimport { AtomDataParams, AtomData, BondDataParams, BondData } from './structure-data'\r\nimport { Data, createData } from './data'\r\n\r\nimport Entity from './entity'\r\nimport Unitcell from '../symmetry/unitcell'\r\nimport Validation from './validation'\r\nimport Selection from '../selection/selection'\r\nimport Assembly from '../symmetry/assembly'\r\nimport Volume from '../surface/volume'\r\nimport Polymer from '../proxy/polymer'\r\n\r\nimport BondHash from '../store/bond-hash'\r\nimport BondStore from '../store/bond-store'\r\nimport AtomStore from '../store/atom-store'\r\nimport ResidueStore from '../store/residue-store'\r\nimport ChainStore from '../store/chain-store'\r\nimport ModelStore from '../store/model-store'\r\n\r\nimport AtomMap from '../store/atom-map'\r\nimport ResidueMap from '../store/residue-map'\r\n\r\nimport BondProxy from '../proxy/bond-proxy'\r\nimport AtomProxy from '../proxy/atom-proxy'\r\nimport ResidueProxy from '../proxy/residue-proxy'\r\nimport ChainProxy from '../proxy/chain-proxy'\r\nimport ModelProxy from '../proxy/model-proxy'\r\n\r\ninterface Structure {\r\n  signals: StructureSignals\r\n\r\n  name: string\r\n  path: string\r\n  title: string\r\n  id: string\r\n\r\n  data: Data\r\n\r\n  atomCount: number\r\n  bondCount: number\r\n\r\n  header: StructureHeader\r\n  extraData: StructureExtraData\r\n\r\n  atomSetCache: { [k: string]: BitArray }\r\n  atomSetDict: { [k: string]: BitArray }\r\n  biomolDict: { [k: string]: Assembly }\r\n\r\n  entityList: Entity[]\r\n  unitcell?: Unitcell\r\n\r\n  frames: Float32Array[]\r\n  boxes: Float32Array[]\r\n\r\n  validation?: Validation\r\n\r\n  bondStore: BondStore\r\n  backboneBondStore: BondStore\r\n  rungBondStore: BondStore\r\n  atomStore: AtomStore\r\n  residueStore: ResidueStore\r\n  chainStore: ChainStore\r\n  modelStore: ModelStore\r\n\r\n  atomMap: AtomMap\r\n  residueMap: ResidueMap\r\n\r\n  bondHash?: BondHash\r\n  spatialHash?: SpatialHash\r\n\r\n  atomSet?: BitArray\r\n  bondSet?: BitArray\r\n\r\n  center: Vector3\r\n  boundingBox: Box3\r\n\r\n  trajectory?: {\r\n    name: string\r\n    frame: number\r\n  }\r\n\r\n  getView(selection: Selection): StructureView\r\n\r\n  _hasCoords?: boolean\r\n\r\n  _bp: BondProxy\r\n  _ap: AtomProxy\r\n  _rp: ResidueProxy\r\n  _cp: ChainProxy\r\n}\r\n\r\nexport type StructureHeader = {\r\n  releaseDate?: string\r\n  depositionDate?: string\r\n  resolution?: number\r\n  rFree?: number\r\n  rWork?: number\r\n  experimentalMethods?: string[]\r\n}\r\n\r\nexport type StructureExtraData = {\r\n  cif?: object\r\n  sdf?: object[]\r\n}\r\n\r\nexport type StructureSignals = {\r\n  refreshed: Signal\r\n}\r\n\r\n/**\r\n * Structure\r\n */\r\nclass Structure implements Structure{\r\n  signals: StructureSignals = {\r\n    refreshed: new Signal()\r\n  }\r\n\r\n  /**\r\n   * @param {String} name - structure name\r\n   * @param {String} path - source path\r\n   */\r\n  constructor (name = '', path = '') {\r\n    this.init(name, path)\r\n  }\r\n\r\n  init (name: string, path: string) {\r\n    this.name = name\r\n    this.path = path\r\n    this.title = ''\r\n    this.id = ''\r\n\r\n    this.data = createData(this)\r\n\r\n    this.header = {}\r\n    this.extraData = {}\r\n\r\n    this.atomSetCache = {}\r\n    this.atomSetDict = {}\r\n    this.biomolDict = {}\r\n\r\n    this.entityList = []\r\n    this.unitcell = undefined\r\n\r\n    this.frames = []\r\n    this.boxes = []\r\n\r\n    this.validation = undefined\r\n\r\n    this.bondStore = new BondStore(0)\r\n    this.backboneBondStore = new BondStore(0)\r\n    this.rungBondStore = new BondStore(0)\r\n    this.atomStore = new AtomStore(0)\r\n    this.residueStore = new ResidueStore(0)\r\n    this.chainStore = new ChainStore(0)\r\n    this.modelStore = new ModelStore(0)\r\n\r\n    this.atomMap = new AtomMap(this)\r\n    this.residueMap = new ResidueMap(this)\r\n\r\n    this.bondHash = undefined\r\n    this.spatialHash = undefined\r\n\r\n    this.atomSet = undefined\r\n    this.bondSet = undefined\r\n\r\n    this.center = new Vector3()\r\n    this.boundingBox = new Box3()\r\n\r\n    this._bp = this.getBondProxy()\r\n    this._ap = this.getAtomProxy()\r\n    this._rp = this.getResidueProxy()\r\n    this._cp = this.getChainProxy()\r\n  }\r\n\r\n  get type () { return 'Structure' }\r\n\r\n  finalizeAtoms () {\r\n    this.atomSet = this.getAtomSet()\r\n    this.atomCount = this.atomStore.count\r\n    this.boundingBox = this.getBoundingBox(undefined, this.boundingBox)\r\n    this.center = this.boundingBox.getCenter(new Vector3())\r\n    this.spatialHash = new SpatialHash(this.atomStore, this.boundingBox)\r\n  }\r\n\r\n  finalizeBonds () {\r\n    this.bondSet = this.getBondSet()\r\n    this.bondCount = this.bondStore.count\r\n    this.bondHash = new BondHash(this.bondStore, this.atomStore.count)\r\n\r\n    this.atomSetCache = {}\r\n    if (!this.atomSetDict.rung) {\r\n      this.atomSetDict.rung = this.getAtomSet(false)\r\n    }\r\n\r\n    for (let name in this.atomSetDict) {\r\n      this.atomSetCache[ '__' + name ] = this.atomSetDict[ name ].clone()\r\n    }\r\n  }\r\n\r\n  //\r\n\r\n  getBondProxy (index?: number) {\r\n    return new BondProxy(this, index)\r\n  }\r\n\r\n  getAtomProxy (index?: number) {\r\n    return new AtomProxy(this, index)\r\n  }\r\n\r\n  getResidueProxy (index?: number) {\r\n    return new ResidueProxy(this, index)\r\n  }\r\n\r\n  getChainProxy (index?: number) {\r\n    return new ChainProxy(this, index)\r\n  }\r\n\r\n  getModelProxy (index?: number) {\r\n    return new ModelProxy(this, index)\r\n  }\r\n\r\n  //\r\n\r\n  getBondSet (/* selection */) {\r\n    // TODO implement selection parameter\r\n\r\n    const n = this.bondStore.count\r\n    const bondSet = new BitArray(n)\r\n    const atomSet = this.atomSet\r\n\r\n    if (atomSet) {\r\n      if (atomSet.isAllSet()) {\r\n        bondSet.setAll()\r\n      } else if (atomSet.isAllClear()) {\r\n        bondSet.clearAll()\r\n      } else {\r\n        const bp = this.getBondProxy()\r\n\r\n        for (let i = 0; i < n; ++i) {\r\n          bp.index = i\r\n          if (atomSet.isSet(bp.atomIndex1, bp.atomIndex2)) {\r\n            bondSet.set(bp.index)\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      bondSet.setAll()\r\n    }\r\n\r\n    return bondSet\r\n  }\r\n\r\n  getBackboneBondSet (/* selection */) {\r\n    // TODO implement selection parameter\r\n\r\n    const n = this.backboneBondStore.count\r\n    const backboneBondSet = new BitArray(n)\r\n    const backboneAtomSet = this.atomSetCache.__backbone\r\n\r\n    if (backboneAtomSet) {\r\n      const bp = this.getBondProxy()\r\n      bp.bondStore = this.backboneBondStore\r\n\r\n      for (let i = 0; i < n; ++i) {\r\n        bp.index = i\r\n        if (backboneAtomSet.isSet(bp.atomIndex1, bp.atomIndex2)) {\r\n          backboneBondSet.set(bp.index)\r\n        }\r\n      }\r\n    } else {\r\n      backboneBondSet.setAll()\r\n    }\r\n\r\n    return backboneBondSet\r\n  }\r\n\r\n  getRungBondSet (/* selection */) {\r\n    // TODO implement selection parameter\r\n\r\n    const n = this.rungBondStore.count\r\n    const rungBondSet = new BitArray(n)\r\n    const rungAtomSet = this.atomSetCache.__rung\r\n\r\n    if (rungAtomSet) {\r\n      const bp = this.getBondProxy()\r\n      bp.bondStore = this.rungBondStore\r\n\r\n      for (let i = 0; i < n; ++i) {\r\n        bp.index = i\r\n        if (rungAtomSet.isSet(bp.atomIndex1, bp.atomIndex2)) {\r\n          rungBondSet.set(bp.index)\r\n        }\r\n      }\r\n    } else {\r\n      rungBondSet.setAll()\r\n    }\r\n\r\n    return rungBondSet\r\n  }\r\n\r\n  /**\r\n   * Get a set of atoms\r\n   * @param  {Boolean|Selection|BitArray} selection - object defining how to\r\n   *                                      initialize the atom set.\r\n   *                                      Boolean: init with value;\r\n   *                                      Selection: init with selection;\r\n   *                                      BitArray: return bit array\r\n   * @return {BitArray} set of atoms\r\n   */\r\n  getAtomSet (selection?: boolean|Selection|BitArray) {\r\n    const n = this.atomStore.count\r\n\r\n    if (selection === undefined) {\r\n      return new BitArray(n, true)\r\n    } else if (selection instanceof BitArray) {\r\n      return selection\r\n    } else if (selection === true) {\r\n      return new BitArray(n, true)\r\n    } else if (selection && selection.test) {\r\n      const seleString = selection.string\r\n      if (seleString in this.atomSetCache) {\r\n        return this.atomSetCache[ seleString ]\r\n      } else {\r\n        if (seleString === '') {\r\n          return new BitArray(n, true)\r\n        } else {\r\n          const atomSet = new BitArray(n)\r\n          this.eachAtom(function (ap: AtomProxy) {\r\n            atomSet.set(ap.index)\r\n          }, selection)\r\n          this.atomSetCache[ seleString ] = atomSet\r\n          return atomSet\r\n        }\r\n      }\r\n    } else if (selection === false) {\r\n      return new BitArray(n)\r\n    }\r\n\r\n    return new BitArray(n, true)\r\n  }\r\n\r\n  /**\r\n   * Get set of atoms around a set of atoms from a selection\r\n   * @param  {Selection} selection - the selection object\r\n   * @param  {Number} radius - radius to select within\r\n   * @return {BitArray} set of atoms\r\n   */\r\n  getAtomSetWithinSelection (selection: boolean|Selection|BitArray, radius: number) {\r\n    const spatialHash = this.spatialHash\r\n    const atomSet = this.getAtomSet(false)\r\n    const ap = this.getAtomProxy()\r\n\r\n    if (!spatialHash) return atomSet\r\n\r\n    this.getAtomSet(selection).forEach(function (idx: number) {\r\n      ap.index = idx\r\n      spatialHash.within(ap.x, ap.y, ap.z, radius).forEach(function (idx2: number) {\r\n        atomSet.set(idx2)\r\n      })\r\n    })\r\n\r\n    return atomSet\r\n  }\r\n\r\n  /**\r\n   * Get set of atoms around a point\r\n   * @param  {Vector3|AtomProxy} point - the point\r\n   * @param  {Number} radius - radius to select within\r\n   * @return {BitArray} set of atoms\r\n   */\r\n  getAtomSetWithinPoint (point: Vector3|AtomProxy, radius: number) {\r\n    const p = point\r\n    const atomSet = this.getAtomSet(false)\r\n\r\n    if (!this.spatialHash) return atomSet\r\n\r\n    this.spatialHash.within(p.x, p.y, p.z, radius).forEach(function (idx: number) {\r\n      atomSet.set(idx)\r\n    })\r\n\r\n    return atomSet\r\n  }\r\n\r\n  /**\r\n   * Get set of atoms within a volume\r\n   * @param  {Volume} volume - the volume\r\n   * @param  {Number} radius - radius to select within\r\n   * @param  {[type]} minValue - minimum value to be considered as within the volume\r\n   * @param  {[type]} maxValue - maximum value to be considered as within the volume\r\n   * @param  {[type]} outside - use only values falling outside of the min/max values\r\n   * @return {BitArray} set of atoms\r\n   */\r\n  getAtomSetWithinVolume (volume: Volume, radius: number, minValue: number, maxValue: number, outside: boolean) {\r\n    const fv = new FilteredVolume(volume, minValue, maxValue, outside) as any  // TODO\r\n\r\n    const dp = fv.getDataPosition()\r\n    const n = dp.length\r\n    const r = fv.matrix.getMaxScaleOnAxis()\r\n    const atomSet = this.getAtomSet(false)\r\n\r\n    if (!this.spatialHash) return atomSet\r\n\r\n    for (let i = 0; i < n; i += 3) {\r\n      this.spatialHash.within(dp[ i ], dp[ i + 1 ], dp[ i + 2 ], r).forEach(function (idx) {\r\n        atomSet.set(idx)\r\n      })\r\n    }\r\n\r\n    return atomSet\r\n  }\r\n\r\n  /**\r\n   * Get set of all atoms within the groups of a selection\r\n   * @param  {Selection} selection - the selection object\r\n   * @return {BitArray} set of atoms\r\n   */\r\n  getAtomSetWithinGroup (selection: boolean|Selection|BitArray) {\r\n    const atomResidueIndex = this.atomStore.residueIndex\r\n    const atomSet = this.getAtomSet(false)\r\n    const rp = this.getResidueProxy()\r\n\r\n    this.getAtomSet(selection).forEach(function (idx) {\r\n      rp.index = atomResidueIndex[ idx ]\r\n      for (let idx2 = rp.atomOffset; idx2 <= rp.atomEnd; ++idx2) {\r\n        atomSet.set(idx2)\r\n      }\r\n    })\r\n\r\n    return atomSet\r\n  }\r\n\r\n  //\r\n\r\n  getSelection (): undefined|Selection {\r\n    return\r\n  }\r\n\r\n  getStructure (): Structure|StructureView {\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Entity iterator\r\n   * @param  {function(entity: Entity)} callback - the callback\r\n   * @param  {EntityType} type - entity type\r\n   * @return {undefined}\r\n   */\r\n  eachEntity (callback: (entity: Entity) => void, type: number) {\r\n    this.entityList.forEach(function (entity) {\r\n      if (type === undefined || entity.getEntityType() === type) {\r\n        callback(entity)\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Bond iterator\r\n   * @param  {function(bond: BondProxy)} callback - the callback\r\n   * @param  {Selection} [selection] - the selection\r\n   * @return {undefined}\r\n   */\r\n  eachBond (callback: (entity: BondProxy) => void, selection?: Selection) {\r\n    const bp = this.getBondProxy()\r\n    let bondSet\r\n\r\n    if (selection && selection.test) {\r\n      bondSet = this.getBondSet(/*selection*/)\r\n      if (this.bondSet) {\r\n        bondSet.intersection(this.bondSet)\r\n      }\r\n    }\r\n\r\n    if (bondSet) {\r\n      bondSet.forEach(function (index) {\r\n        bp.index = index\r\n        callback(bp)\r\n      })\r\n    } else {\r\n      const n = this.bondStore.count\r\n      for (let i = 0; i < n; ++i) {\r\n        bp.index = i\r\n        callback(bp)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Atom iterator\r\n   * @param  {function(atom: AtomProxy)} callback - the callback\r\n   * @param  {Selection} [selection] - the selection\r\n   * @return {undefined}\r\n   */\r\n  eachAtom (callback: (entity: AtomProxy) => void, selection?: Selection) {\r\n    if (selection && selection.test) {\r\n      this.eachModel(function (mp) {\r\n        mp.eachAtom(callback, selection)\r\n      }, selection)\r\n    } else {\r\n      const an = this.atomStore.count\r\n      const ap = this.getAtomProxy()\r\n      for (let i = 0; i < an; ++i) {\r\n        ap.index = i\r\n        callback(ap)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Residue iterator\r\n   * @param  {function(residue: ResidueProxy)} callback - the callback\r\n   * @param  {Selection} [selection] - the selection\r\n   * @return {undefined}\r\n   */\r\n  eachResidue (callback: (entity: ResidueProxy) => void, selection?: Selection) {\r\n    if (selection && selection.test) {\r\n      const mn = this.modelStore.count\r\n      const mp = this.getModelProxy()\r\n      const modelOnlyTest = selection.modelOnlyTest\r\n      if (modelOnlyTest) {\r\n        for (let i = 0; i < mn; ++i) {\r\n          mp.index = i\r\n          if (modelOnlyTest(mp)) {\r\n            mp.eachResidue(callback, selection)\r\n          }\r\n        }\r\n      } else {\r\n        for (let i = 0; i < mn; ++i) {\r\n          mp.index = i\r\n          mp.eachResidue(callback, selection)\r\n        }\r\n      }\r\n    } else {\r\n      const rn = this.residueStore.count\r\n      const rp = this.getResidueProxy()\r\n      for (let i = 0; i < rn; ++i) {\r\n        rp.index = i\r\n        callback(rp)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Multi-residue iterator\r\n   * @param {Integer} n - window size\r\n   * @param  {function(residueList: ResidueProxy[])} callback - the callback\r\n   * @return {undefined}\r\n   */\r\n  eachResidueN (n: number, callback: (...entityArray: ResidueProxy[]) => void) {\r\n    const rn = this.residueStore.count\r\n    if (rn < n) return\r\n    const array: ResidueProxy[] = new Array(n)\r\n\r\n    for (let i = 0; i < n; ++i) {\r\n      array[ i ] = this.getResidueProxy(i)\r\n    }\r\n    callback.apply(this, array)\r\n\r\n    for (let j = n; j < rn; ++j) {\r\n      for (let i = 0; i < n; ++i) {\r\n        array[ i ].index += 1\r\n      }\r\n      callback.apply(this, array)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Polymer iterator\r\n   * @param  {function(polymer: Polymer)} callback - the callback\r\n   * @param  {Selection} [selection] - the selection\r\n   * @return {undefined}\r\n   */\r\n  eachPolymer (callback: (entity: Polymer) => void, selection?: Selection) {\r\n    if (selection && selection.modelOnlyTest) {\r\n      const modelOnlyTest = selection.modelOnlyTest\r\n\r\n      this.eachModel(function (mp) {\r\n        if (modelOnlyTest(mp)) {\r\n          mp.eachPolymer(callback, selection)\r\n        }\r\n      })\r\n    } else {\r\n      this.eachModel(function (mp) {\r\n        mp.eachPolymer(callback, selection)\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Chain iterator\r\n   * @param  {function(chain: ChainProxy)} callback - the callback\r\n   * @param  {Selection} [selection] - the selection\r\n   * @return {undefined}\r\n   */\r\n  eachChain (callback: (entity: ChainProxy) => void, selection?: Selection) {\r\n    if (selection && selection.test) {\r\n      this.eachModel(function (mp) {\r\n        mp.eachChain(callback, selection)\r\n      })\r\n    } else {\r\n      const cn = this.chainStore.count\r\n      const cp = this.getChainProxy()\r\n      for (let i = 0; i < cn; ++i) {\r\n        cp.index = i\r\n        callback(cp)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Model iterator\r\n   * @param  {function(model: ModelProxy)} callback - the callback\r\n   * @param  {Selection} [selection] - the selection\r\n   * @return {undefined}\r\n   */\r\n  eachModel (callback: (entity: ModelProxy) => void, selection?: Selection) {\r\n    const n = this.modelStore.count\r\n    const mp = this.getModelProxy()\r\n\r\n    if (selection && selection.test) {\r\n      const modelOnlyTest = selection.modelOnlyTest\r\n      if (modelOnlyTest) {\r\n        for (let i = 0; i < n; ++i) {\r\n          mp.index = i\r\n          if (modelOnlyTest(mp)) {\r\n            callback(mp)\r\n          }\r\n        }\r\n      } else {\r\n        for (let i = 0; i < n; ++i) {\r\n          mp.index = i\r\n          callback(mp)\r\n        }\r\n      }\r\n    } else {\r\n      for (let i = 0; i < n; ++i) {\r\n        mp.index = i\r\n        callback(mp)\r\n      }\r\n    }\r\n  }\r\n\r\n  //\r\n\r\n  getAtomData (params: AtomDataParams) {\r\n    const p = Object.assign({}, params)\r\n    if (p.colorParams) p.colorParams.structure = this.getStructure()\r\n\r\n    const what = p.what\r\n    const atomSet = defaults(p.atomSet, this.atomSet)\r\n\r\n    let radiusFactory: any  // TODO\r\n    let colormaker: any  // TODO\r\n\r\n    const atomData: AtomData = {}\r\n    const ap = this.getAtomProxy()\r\n    const atomCount = atomSet.getSize()\r\n\r\n    if (!what || what.position) {\r\n      atomData.position = new Float32Array(atomCount * 3)\r\n    }\r\n    if ((!what || what.color) && p.colorParams) {\r\n      atomData.color = new Float32Array(atomCount * 3)\r\n      colormaker = ColormakerRegistry.getScheme(p.colorParams)\r\n    }\r\n    if (!what || what.picking) {\r\n      atomData.picking = new AtomPicker(new Float32Array(atomCount), this.getStructure())\r\n    }\r\n    if (!what || what.radius) {\r\n      atomData.radius = new Float32Array(atomCount)\r\n      radiusFactory = new RadiusFactory(p.radiusParams as RadiusParams)\r\n    }\r\n    if (!what || what.index) {\r\n      atomData.index = new Uint32Array(atomCount)\r\n    }\r\n\r\n    const {position, color, picking, radius, index} = atomData\r\n\r\n    atomSet.forEach((idx: number, i: number) => {\r\n      const i3 = i * 3\r\n      ap.index = idx\r\n      if (position) {\r\n        ap.positionToArray(position, i3)\r\n      }\r\n      if (color) {\r\n        colormaker.atomColorToArray(ap, color, i3)\r\n      }\r\n      if (picking) {\r\n        picking.array![ i ] = idx\r\n      }\r\n      if (radius) {\r\n        radius[ i ] = radiusFactory.atomRadius(ap)\r\n      }\r\n      if (index) {\r\n        index[ i ] = idx\r\n      }\r\n    })\r\n    return atomData\r\n  }\r\n\r\n  getBondData (params: BondDataParams) {\r\n    const p = Object.assign({}, params)\r\n    if (p.colorParams) p.colorParams.structure = this.getStructure()\r\n\r\n    const what = p.what\r\n    const bondSet = defaults(p.bondSet, this.bondSet)\r\n    const multipleBond = defaults(p.multipleBond, 'off')\r\n    const isMulti = multipleBond !== 'off'\r\n    const isOffset = multipleBond === 'offset'\r\n    const bondScale = defaults(p.bondScale, 0.4)\r\n    const bondSpacing = defaults(p.bondSpacing, 1.0)\r\n\r\n    let radiusFactory: any  // TODO\r\n    let colormaker: any  // TODO\r\n\r\n    const bondData: BondData = {}\r\n    const bp = this.getBondProxy()\r\n    if (p.bondStore) bp.bondStore = p.bondStore\r\n    const ap1 = this.getAtomProxy()\r\n    const ap2 = this.getAtomProxy()\r\n\r\n    let bondCount: number\r\n    if (isMulti) {\r\n      const storeBondOrder = bp.bondStore.bondOrder\r\n      bondCount = 0\r\n      bondSet.forEach(function (index: number) {\r\n        bondCount += storeBondOrder[ index ]\r\n      })\r\n    } else {\r\n      bondCount = bondSet.getSize()\r\n    }\r\n\r\n    if (!what || what.position) {\r\n      bondData.position1 = new Float32Array(bondCount * 3)\r\n      bondData.position2 = new Float32Array(bondCount * 3)\r\n    }\r\n    if ((!what || what.color) && p.colorParams) {\r\n      bondData.color = new Float32Array(bondCount * 3)\r\n      bondData.color2 = new Float32Array(bondCount * 3)\r\n      colormaker = ColormakerRegistry.getScheme(p.colorParams)\r\n    }\r\n    if (!what || what.picking) {\r\n      bondData.picking = new BondPicker(new Float32Array(bondCount), this.getStructure(), p.bondStore)\r\n    }\r\n    if (!what || what.radius || (isMulti && what.position)) {\r\n      radiusFactory = new RadiusFactory(p.radiusParams as RadiusParams)\r\n    }\r\n    if (!what || what.radius) {\r\n      bondData.radius = new Float32Array(bondCount)\r\n      if (p.radius2) {\r\n        bondData.radius2 = new Float32Array(bondCount)\r\n      }\r\n    }\r\n\r\n    const {position1, position2, color, color2, picking, radius, radius2} = bondData\r\n\r\n    let i = 0\r\n    let j, i3, k, bondOrder, absOffset\r\n    let multiRadius\r\n\r\n    const vt = new Vector3()\r\n    const vShortening = new Vector3()\r\n    const vShift = new Vector3()\r\n\r\n    bondSet.forEach((index: number) => {\r\n      i3 = i * 3\r\n      bp.index = index\r\n      ap1.index = bp.atomIndex1\r\n      ap2.index = bp.atomIndex2\r\n      bondOrder = bp.bondOrder\r\n      if (position1) {\r\n        if (isMulti && bondOrder > 1) {\r\n          const atomRadius = radiusFactory.atomRadius(ap1)\r\n          multiRadius = atomRadius * bondScale / (0.5 * bondOrder)\r\n\r\n          bp.calculateShiftDir(vShift)\r\n\r\n          if (isOffset) {\r\n            absOffset = 2 * bondSpacing * atomRadius\r\n            vShift.multiplyScalar(absOffset)\r\n            vShift.negate()\r\n\r\n            // Shortening is calculated so that neighbouring double\r\n            // bonds on tetrahedral geometry (e.g. sulphonamide)\r\n            // are not quite touching (arccos(1.9 / 2) ~ 109deg)\r\n            // but don't shorten beyond 10% each end or it looks odd\r\n            vShortening.subVectors(ap2 as any, ap1 as any).multiplyScalar(  // TODO\r\n              Math.max(0.1, absOffset / 1.88)\r\n            )\r\n            ap1.positionToArray(position1, i3)\r\n            ap2.positionToArray(position2, i3)\r\n\r\n            if (bondOrder >= 2) {\r\n              vt.addVectors(ap1 as any, vShift).add(vShortening).toArray(position1 as any, i3 + 3)  // TODO\r\n              vt.addVectors(ap2 as any, vShift).sub(vShortening).toArray(position2 as any, i3 + 3)  // TODO\r\n\r\n              if (bondOrder >= 3) {\r\n                vt.subVectors(ap1 as any, vShift).add(vShortening).toArray(position1 as any, i3 + 6)  // TODO\r\n                vt.subVectors(ap2 as any, vShift).sub(vShortening).toArray(position2 as any, i3 + 6)  // TODO\r\n              }\r\n            }\r\n          } else {\r\n            absOffset = (bondSpacing - bondScale) * atomRadius\r\n            vShift.multiplyScalar(absOffset)\r\n\r\n            if (bondOrder === 2) {\r\n              vt.addVectors(ap1 as any, vShift).toArray(position1 as any, i3)  // TODO\r\n              vt.subVectors(ap1 as any, vShift).toArray(position1 as any, i3 + 3)  // TODO\r\n              vt.addVectors(ap2 as any, vShift).toArray(position2 as any, i3)  // TODO\r\n              vt.subVectors(ap2 as any, vShift).toArray(position2 as any, i3 + 3)  // TODO\r\n            } else if (bondOrder === 3) {\r\n              ap1.positionToArray(position1, i3)\r\n              vt.addVectors(ap1 as any, vShift).toArray(position1 as any, i3 + 3)  // TODO\r\n              vt.subVectors(ap1 as any, vShift).toArray(position1 as any, i3 + 6)  // TODO\r\n              ap2.positionToArray(position2, i3)\r\n              vt.addVectors(ap2 as any, vShift).toArray(position2 as any, i3 + 3)  // TODO\r\n              vt.subVectors(ap2 as any, vShift).toArray(position2 as any, i3 + 6)  // TODO\r\n            } else {\r\n              // todo, better fallback\r\n              ap1.positionToArray(position1, i3)\r\n              ap2.positionToArray(position2, i3)\r\n            }\r\n          }\r\n        } else {\r\n          ap1.positionToArray(position1, i3)\r\n          ap2.positionToArray(position2, i3)\r\n        }\r\n      }\r\n      if (color && color2) {\r\n        colormaker.bondColorToArray(bp, 1, color, i3)\r\n        colormaker.bondColorToArray(bp, 0, color2, i3)\r\n        if (isMulti && bondOrder > 1) {\r\n          for (j = 1; j < bondOrder; ++j) {\r\n            k = j * 3 + i3\r\n            copyWithin(color, i3, k, 3)\r\n            copyWithin(color2, i3, k, 3)\r\n          }\r\n        }\r\n      }\r\n      if (picking && picking.array) {\r\n        picking.array[ i ] = index\r\n        if (isMulti && bondOrder > 1) {\r\n          for (j = 1; j < bondOrder; ++j) {\r\n            picking.array[ i + j ] = index\r\n          }\r\n        }\r\n      }\r\n      if (radius) {\r\n        radius[ i ] = radiusFactory.atomRadius(ap1)\r\n        if (isMulti && bondOrder > 1) {\r\n          multiRadius = radius[ i ] * bondScale / (isOffset ? 1 : (0.5 * bondOrder))\r\n          for (j = isOffset ? 1 : 0; j < bondOrder; ++j) {\r\n            radius[ i + j ] = multiRadius\r\n          }\r\n        }\r\n      }\r\n      if (radius2) {\r\n        radius2[ i ] = radiusFactory.atomRadius(ap2)\r\n        if (isMulti && bondOrder > 1) {\r\n          multiRadius = radius2[ i ] * bondScale / (isOffset ? 1 : (0.5 * bondOrder))\r\n          for (j = isOffset ? 1 : 0; j < bondOrder; ++j) {\r\n            radius2[ i + j ] = multiRadius\r\n          }\r\n        }\r\n      }\r\n      i += isMulti ? bondOrder : 1\r\n    })\r\n\r\n    return bondData\r\n  }\r\n\r\n  getBackboneAtomData (params: AtomDataParams) {\r\n    params = Object.assign({\r\n      atomSet: this.atomSetCache.__backbone\r\n    }, params)\r\n\r\n    return this.getAtomData(params)\r\n  }\r\n\r\n  getBackboneBondData (params: BondDataParams) {\r\n    params = Object.assign({\r\n      bondSet: this.getBackboneBondSet(),\r\n      bondStore: this.backboneBondStore\r\n    }, params)\r\n\r\n    return this.getBondData(params)\r\n  }\r\n\r\n  getRungAtomData (params: AtomDataParams) {\r\n    params = Object.assign({\r\n      atomSet: this.atomSetCache.__rung\r\n    }, params)\r\n\r\n    return this.getAtomData(params)\r\n  }\r\n\r\n  getRungBondData (params: BondDataParams) {\r\n    params = Object.assign({\r\n      bondSet: this.getRungBondSet(),\r\n      bondStore: this.rungBondStore\r\n    }, params)\r\n\r\n    return this.getBondData(params)\r\n  }\r\n\r\n  //\r\n\r\n  /**\r\n   * Gets the bounding box of the (selected) structure atoms\r\n   * @param  {Selection} [selection] - the selection\r\n   * @param  {Box3} [box] - optional target\r\n   * @return {Vector3} the box\r\n   */\r\n  getBoundingBox (selection?: Selection, box?: Box3) {\r\n    if (Debug) Log.time('getBoundingBox')\r\n\r\n    box = box || new Box3()\r\n\r\n    let minX = +Infinity\r\n    let minY = +Infinity\r\n    let minZ = +Infinity\r\n\r\n    let maxX = -Infinity\r\n    let maxY = -Infinity\r\n    let maxZ = -Infinity\r\n\r\n    this.eachAtom(ap => {\r\n      const x = ap.x\r\n      const y = ap.y\r\n      const z = ap.z\r\n\r\n      if (x < minX) minX = x\r\n      if (y < minY) minY = y\r\n      if (z < minZ) minZ = z\r\n\r\n      if (x > maxX) maxX = x\r\n      if (y > maxY) maxY = y\r\n      if (z > maxZ) maxZ = z\r\n    }, selection)\r\n\r\n    box.min.set(minX, minY, minZ)\r\n    box.max.set(maxX, maxY, maxZ)\r\n\r\n    if (Debug) Log.timeEnd('getBoundingBox')\r\n\r\n    return box\r\n  }\r\n\r\n  /**\r\n   * Gets the principal axes of the (selected) structure atoms\r\n   * @param  {Selection} [selection] - the selection\r\n   * @return {PrincipalAxes} the principal axes\r\n   */\r\n  getPrincipalAxes (selection?: Selection) {\r\n    if (Debug) Log.time('getPrincipalAxes')\r\n\r\n    let i = 0\r\n    const coords = new Matrix(3, this.atomCount)\r\n    const cd = coords.data\r\n\r\n    this.eachAtom(a => {\r\n      cd[ i + 0 ] = a.x\r\n      cd[ i + 1 ] = a.y\r\n      cd[ i + 2 ] = a.z\r\n      i += 3\r\n    }, selection)\r\n\r\n    if (Debug) Log.timeEnd('getPrincipalAxes')\r\n\r\n    return new PrincipalAxes(coords)\r\n  }\r\n\r\n  /**\r\n   * Gets the center of the (selected) structure atoms\r\n   * @param  {Selection} [selection] - the selection\r\n   * @return {Vector3} the center\r\n   */\r\n  atomCenter (selection?: Selection) {\r\n    if (selection) {\r\n      return this.getBoundingBox(selection).getCenter(new Vector3())\r\n    } else {\r\n      return this.center.clone()\r\n    }\r\n  }\r\n\r\n  hasCoords () {\r\n    if (this._hasCoords === undefined) {\r\n      const atomStore = this.atomStore\r\n      this._hasCoords = (\r\n        arrayMin(atomStore.x) !== 0 || arrayMax(atomStore.x) !== 0 ||\r\n        arrayMin(atomStore.y) !== 0 || arrayMax(atomStore.y) !== 0 ||\r\n        arrayMin(atomStore.z) !== 0 || arrayMax(atomStore.z) !== 0\r\n      ) || (\r\n        // allow models with a single atom at the origin\r\n        atomStore.count / this.modelStore.count === 1\r\n      )\r\n    }\r\n    return this._hasCoords;\r\n  }\r\n\r\n  getSequence (selection?: Selection) {\r\n    const seq: string[] = []\r\n    const rp = this.getResidueProxy()\r\n\r\n    this.eachAtom(function (ap: AtomProxy) {\r\n      rp.index = ap.residueIndex\r\n      if (ap.index === rp.traceAtomIndex) {\r\n        seq.push(rp.getResname1())\r\n      }\r\n    }, selection)\r\n\r\n    return seq\r\n  }\r\n\r\n  getAtomIndices (selection?: Selection) {\r\n    if (selection && selection.string) {\r\n      const indices: number[] = []\r\n      this.eachAtom(function (ap: AtomProxy) {\r\n        indices.push(ap.index)\r\n      }, selection)\r\n      return new Uint32Array(indices)\r\n    } else {\r\n      const p = { what: { index: true } }\r\n      return this.getAtomData(p).index\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get number of unique chainnames\r\n   * @param  {Selection} selection - limit count to selection\r\n   * @return {Integer} count\r\n   */\r\n  getChainnameCount (selection?: Selection) {\r\n    const chainnames = new Set()\r\n    this.eachChain(function (cp: ChainProxy) {\r\n      if (cp.residueCount) {\r\n        chainnames.add(cp.chainname)\r\n      }\r\n    }, selection)\r\n\r\n    return chainnames.size\r\n  }\r\n\r\n  /**\r\n   * Update atomic positions\r\n   * @param position - Array to copy positions from\r\n   * @param refresh - Whether or not to issue a full refresh (automatically\r\n   *                  triggers re-calculation of bounding boxes, spatial hash,\r\n   *                  representations etc etc). This provides compatibility with\r\n   *                  the old behaviour\r\n   */\r\n  updatePosition (position: Float32Array|number[], refresh: boolean = true) {\r\n    let i = 0\r\n\r\n    this.eachAtom(function (ap: AtomProxy) {\r\n      ap.positionFromArray(position, i)\r\n      i += 3\r\n    }, undefined)\r\n\r\n    this._hasCoords = undefined  // to trigger recalculation (of the _hasCoords value)\r\n\r\n    if (refresh) { \r\n      this.refreshPosition()  // Recalculate bounds - structure-component listener will \r\n                              // trigger representation rebuild\r\n    }\r\n\r\n  }\r\n\r\n  refreshPosition () {\r\n    this.getBoundingBox(undefined, this.boundingBox)\r\n    this.boundingBox.getCenter(this.center)\r\n    this.spatialHash = new SpatialHash(this.atomStore, this.boundingBox)\r\n\r\n    this.signals.refreshed.dispatch(this)\r\n  }\r\n\r\n  /**\r\n   * Calls dispose() method of property objects.\r\n   * Unsets properties to help garbage collection.\r\n   * @return {undefined}\r\n   */\r\n  dispose () {\r\n    if (this.frames) this.frames.length = 0\r\n    if (this.boxes) this.boxes.length = 0\r\n\r\n    this.bondStore.dispose()\r\n    this.backboneBondStore.dispose()\r\n    this.rungBondStore.dispose()\r\n    this.atomStore.dispose()\r\n    this.residueStore.dispose()\r\n    this.chainStore.dispose()\r\n    this.modelStore.dispose()\r\n\r\n    // can't delete non-optional properties as of TS 4\r\n    // and since we've already disposed them, don't need to.\r\n\r\n    delete this.bondSet\r\n    delete this.atomSet\r\n  }\r\n}\r\n\r\nexport default Structure\r\n","/**\r\n * @file Shape\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\n// @ts-ignore: unused import Matrix4 required for declaration only\r\nimport { Box3, Vector3, Color, Matrix4 } from 'three'\r\n\r\nimport { createParams, ensureFloat32Array, getUintArray } from '../utils'\r\nimport {\r\n  ArrowPrimitive, BoxPrimitive, ConePrimitive, CylinderPrimitive, EllipsoidPrimitive,\r\n  OctahedronPrimitive, SpherePrimitive, TetrahedronPrimitive, TextPrimitive,\r\n  TorusPrimitive, PointPrimitive, WidelinePrimitive\r\n} from './primitive'\r\nimport { MeshPicker } from '../utils/picker'\r\nimport Buffer from '../buffer/buffer'\r\nimport MeshBuffer from '../buffer/mesh-buffer'\r\nimport { TextBufferParameters } from '../buffer/text-buffer'\r\n\r\nconst tmpBox = new Box3()\r\n\r\nconst Primitives = [\r\n  ArrowPrimitive, BoxPrimitive, ConePrimitive, CylinderPrimitive,\r\n  EllipsoidPrimitive, OctahedronPrimitive, SpherePrimitive, TetrahedronPrimitive,\r\n  TextPrimitive, TorusPrimitive, PointPrimitive, WidelinePrimitive\r\n]\r\n\r\nexport const ShapeDefaultParameters = {\r\n  aspectRatio: 1.5,\r\n  sphereDetail: 2,\r\n  radialSegments: 50,\r\n  disableImpostor: false,\r\n  openEnded: false,\r\n  dashedCylinder: false,\r\n  labelParams: {} as Partial<TextBufferParameters>,\r\n  pointSize: 2,\r\n  sizeAttenuation: false,\r\n  useTexture: true,\r\n  linewidth: 2\r\n}\r\nexport type ShapeParameters = typeof ShapeDefaultParameters\r\n\r\n/**\r\n * Class for building custom shapes.\r\n *\r\n * @example\r\n * var shape = new NGL.Shape('shape', { disableImpostor: true });\r\n * shape.addSphere([ 0, 0, 9 ], [ 1, 0, 0 ], 1.5 );\r\n * shape.addEllipsoid([ 6, 0, 0 ], [ 1, 0, 0 ], 1.5, [ 3, 0, 0 ], [ 0, 2, 0 ]);\r\n * shape.addCylinder([ 0, 2, 7 ], [ 0, 0, 9 ], [ 1, 1, 0 ], 0.5);\r\n * shape.addCone([ 0, 2, 7 ], [ 0, 3, 3 ], [ 1, 1, 0 ], 1.5);\r\n * shape.addArrow([ 1, 2, 7 ], [ 30, 3, 3 ], [ 1, 0, 1 ], 1.0);\r\n * shape.addBox([ 0, 3, 0 ], [ 1, 0, 1 ], 2, [ 0, 1, 1 ], [ 1, 0, 1 ]);\r\n * var shapeComp = stage.addComponentFromObject(shape);\r\n * geoComp.addRepresentation('buffer');\r\n */\r\nclass Shape {\r\n  name: string\r\n  parameters: ShapeParameters\r\n\r\n  boundingBox = new Box3()\r\n  bufferList: Buffer[] = []\r\n  meshCount = 0\r\n\r\n  _center?: Vector3\r\n  _primitiveData: { [k: string]: any } = {}\r\n\r\n  /**\r\n   * @param {String} name - name\r\n   * @param {Object} params - parameter object\r\n   * @param {Integer} params.aspectRatio - arrow aspect ratio, used for cylinder radius and cone length\r\n   * @param {Integer} params.sphereDetail - sphere quality (icosahedron subdivisions)\r\n   * @param {Integer} params.radialSegments - cylinder quality (number of segments)\r\n   * @param {Boolean} params.disableImpostor - disable use of raycasted impostors for rendering\r\n   * @param {Boolean} params.openEnded - capped or not\r\n   * @param {TextBufferParameters} params.labelParams - label parameters\r\n   */\r\n  constructor (name = 'shape', params: Partial<ShapeParameters> = {}) {\r\n    this.name = name\r\n\r\n    this.parameters = createParams(params, ShapeDefaultParameters)\r\n\r\n    Primitives.forEach(P => {\r\n      Object.keys(P.fields).forEach(name => {\r\n        this._primitiveData[ P.getShapeKey(name) ] = []\r\n      })\r\n      this._primitiveData[ P.getShapeKey('name') ] = []\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Add a buffer\r\n   * @param {Buffer} buffer - buffer object\r\n   * @return {Shape} this object\r\n   */\r\n  addBuffer (buffer: Buffer) {\r\n    this.bufferList.push(buffer)\r\n\r\n    const geometry = (buffer as any).geometry  // TODO\r\n    if (!geometry.boundingBox) {\r\n      geometry.computeBoundingBox()\r\n    }\r\n    this.boundingBox.union(geometry.boundingBox)\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Add a mesh\r\n   * @example\r\n   * shape.addMesh(\r\n   *   [ 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1 ],\r\n   *   [ 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0 ]\r\n   * );\r\n   *\r\n   * @param {Float32Array|Array} position - positions\r\n   * @param {Float32Array|Array} color - colors\r\n   * @param {Uint32Array|Uint16Array|Array} [index] - indices\r\n   * @param {Float32Array|Array} [normal] - normals\r\n   * @param {String} [name] - text\r\n   * @return {Shape} this object\r\n   */\r\n  addMesh (position: Float32Array|number[], color:Float32Array|number[], index: Uint32Array|Uint16Array|number[], normal?: Float32Array|number[], name?: string) {\r\n    position = ensureFloat32Array(position)\r\n    color = ensureFloat32Array(color)\r\n\r\n    if (Array.isArray(index)) {\r\n      index = getUintArray(index, position.length)\r\n    }\r\n    if (normal) {\r\n      normal = ensureFloat32Array(normal)\r\n    }\r\n\r\n    let data\r\n    if (normal === undefined || normal.length == 0 ) {\r\n      data = { position, color, index }\r\n    } else {\r\n      data = { position, color, index, normal }\r\n    }\r\n    //const data = { position, color, index, normal }\r\n    const picking = new MeshPicker(\r\n      this, Object.assign({ serial: this.meshCount, name }, data)\r\n    )\r\n    const meshBuffer = new MeshBuffer(\r\n      Object.assign({ picking }, data) as any\r\n    )\r\n    this.bufferList.push(meshBuffer)\r\n\r\n    tmpBox.setFromArray(position)\r\n    this.boundingBox.union(tmpBox)\r\n    this.meshCount += 1\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Add a sphere\r\n   * @example\r\n   * shape.addSphere([ 0, 0, 9 ], [ 1, 0, 0 ], 1.5);\r\n   *\r\n   * @param {Vector3|Array} position - position vector or array\r\n   * @param {Color|Array} color - color object or array\r\n   * @param {Float} radius - radius value\r\n   * @param {String} [name] - text\r\n   * @return {Shape} this object\r\n   */\r\n  addSphere (position: Vector3|[number, number, number], color: Color|[number, number, number], radius: number, name: string) {\r\n    SpherePrimitive.objectToShape(\r\n      this, { position, color, radius, name }\r\n    )\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Add an ellipsoid\r\n   * @example\r\n   * shape.addEllipsoid([ 6, 0, 0 ], [ 1, 0, 0 ], 1.5, [ 3, 0, 0 ], [ 0, 2, 0 ]);\r\n   *\r\n   * @param {Vector3|Array} position - position vector or array\r\n   * @param {Color|Array} color - color object or array\r\n   * @param {Float} radius - radius value\r\n   * @param {Vector3|Array} majorAxis - major axis vector or array\r\n   * @param {Vector3|Array} minorAxis - minor axis vector or array\r\n   * @param {String} [name] - text\r\n   * @return {Shape} this object\r\n   */\r\n  addEllipsoid (position: Vector3|[number, number, number], color: Color|[number, number, number], radius: number, majorAxis: Vector3|[number, number, number], minorAxis: Vector3|[number, number, number], name: string) {\r\n    EllipsoidPrimitive.objectToShape(\r\n      this, { position, color, radius, majorAxis, minorAxis, name }\r\n    )\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Add a torus\r\n   * @example\r\n   * shape.addTorus([ 6, 0, 0 ], [ 1, 0, 0 ], 1.5, [ 3, 0, 0 ], [ 0, 2, 0 ]);\r\n   *\r\n   * @param {Vector3|Array} position - position vector or array\r\n   * @param {Color|Array} color - color object or array\r\n   * @param {Float} radius - radius value\r\n   * @param {Vector3|Array} majorAxis - major axis vector or array\r\n   * @param {Vector3|Array} minorAxis - minor axis vector or array\r\n   * @param {String} [name] - text\r\n   * @return {Shape} this object\r\n   */\r\n  addTorus (position: Vector3|[number, number, number], color: Color|[number, number, number], radius: number, majorAxis: Vector3|[number, number, number], minorAxis: Vector3|[number, number, number], name: string) {\r\n    TorusPrimitive.objectToShape(\r\n      this, { position, color, radius, majorAxis, minorAxis, name }\r\n    )\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Add a cylinder\r\n   * @example\r\n   * shape.addCylinder([ 0, 2, 7 ], [ 0, 0, 9 ], [ 1, 1, 0 ], 0.5);\r\n   *\r\n   * @param {Vector3|Array} position1 - from position vector or array\r\n   * @param {Vector3|Array} position2 - to position vector or array\r\n   * @param {Color|Array} color - color object or array\r\n   * @param {Float} radius - radius value\r\n   * @param {String} [name] - text\r\n   * @return {Shape} this object\r\n   */\r\n  addCylinder (position1: Vector3|[number, number, number], position2: Vector3|[number, number, number], color: Color|[number, number, number], radius: number, name: string) {\r\n    CylinderPrimitive.objectToShape(\r\n      this, { position1, position2, color, radius, name }\r\n    )\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Add a cone\r\n   * @example\r\n   * shape.addCone([ 0, 2, 7 ], [ 0, 3, 3 ], [ 1, 1, 0 ], 1.5);\r\n   *\r\n   * @param {Vector3|Array} position1 - from position vector or array\r\n   * @param {Vector3|Array} position2 - to position vector or array\r\n   * @param {Color|Array} color - color object or array\r\n   * @param {Float} radius - radius value\r\n   * @param {String} [name] - text\r\n   * @return {Shape} this object\r\n   */\r\n  addCone (position1: Vector3|[number, number, number], position2: Vector3|[number, number, number], color: Color|[number, number, number], radius: number, name: string) {\r\n    ConePrimitive.objectToShape(\r\n      this, { position1, position2, color, radius, name }\r\n    )\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Add an arrow\r\n   * @example\r\n   * shape.addArrow([ 0, 2, 7 ], [ 0, 0, 9 ], [ 1, 1, 0 ], 0.5);\r\n   *\r\n   * @param {Vector3|Array} position1 - from position vector or array\r\n   * @param {Vector3|Array} position2 - to position vector or array\r\n   * @param {Color|Array} color - color object or array\r\n   * @param {Float} radius - radius value\r\n   * @param {String} [name] - text\r\n   * @return {Shape} this object\r\n   */\r\n  addArrow (position1: Vector3|[number, number, number], position2: Vector3|[number, number, number], color: Color|[number, number, number], radius: number, name: string) {\r\n    ArrowPrimitive.objectToShape(\r\n      this, { position1, position2, color, radius, name }\r\n    )\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Add a box\r\n   * @example\r\n   * shape.addBox([ 0, 3, 0 ], [ 1, 0, 1 ], 2, [ 0, 1, 1 ], [ 1, 0, 1 ]);\r\n   *\r\n   * @param {Vector3|Array} position - position vector or array\r\n   * @param {Color|Array} color - color object or array\r\n   * @param {Float} size - size value\r\n   * @param {Vector3|Array} heightAxis - height axis vector or array\r\n   * @param {Vector3|Array} depthAxis - depth axis vector or array\r\n   * @param {String} [name] - text\r\n   * @return {Shape} this object\r\n   */\r\n  addBox (position: Vector3|[number, number, number], color: Color|[number, number, number], size: number, heightAxis: Vector3|[number, number, number], depthAxis: Vector3|[number, number, number], name: string) {\r\n    BoxPrimitive.objectToShape(\r\n      this, { position, color, size, heightAxis, depthAxis, name }\r\n    )\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Add an octahedron\r\n   * @example\r\n   * shape.addOctahedron([ 0, 3, 0 ], [ 1, 0, 1 ], 2, [ 0, 1, 1 ], [ 1, 0, 1 ]);\r\n   *\r\n   * @param {Vector3|Array} position - position vector or array\r\n   * @param {Color|Array} color - color object or array\r\n   * @param {Float} size - size value\r\n   * @param {Vector3|Array} heightAxis - height axis vector or array\r\n   * @param {Vector3|Array} depthAxis - depth axis vector or array\r\n   * @param {String} [name] - text\r\n   * @return {Shape} this object\r\n   */\r\n  addOctahedron (position: Vector3|[number, number, number], color: Color|[number, number, number], size: number, heightAxis: Vector3|[number, number, number], depthAxis: Vector3|[number, number, number], name: string) {\r\n    OctahedronPrimitive.objectToShape(\r\n      this, { position, color, size, heightAxis, depthAxis, name }\r\n    )\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Add a tetrahedron\r\n   * @example\r\n   * shape.addTetrahedron([ 0, 3, 0 ], [ 1, 0, 1 ], 2, [ 0, 1, 1 ], [ 1, 0, 1 ]);\r\n   *\r\n   * @param {Vector3|Array} position - position vector or array\r\n   * @param {Color|Array} color - color object or array\r\n   * @param {Float} size - size value\r\n   * @param {Vector3|Array} heightAxis - height axis vector or array\r\n   * @param {Vector3|Array} depthAxis - depth axis vector or array\r\n   * @param {String} [name] - text\r\n   * @return {Shape} this object\r\n   */\r\n  addTetrahedron (position: Vector3|[number, number, number], color: Color|[number, number, number], size: number, heightAxis: Vector3|[number, number, number], depthAxis: Vector3|[number, number, number], name: string) {\r\n    TetrahedronPrimitive.objectToShape(\r\n      this, { position, color, size, heightAxis, depthAxis, name }\r\n    )\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Add text\r\n   * @example\r\n   * shape.addText([ 10, -2, 4 ], [ 0.2, 0.5, 0.8 ], 0.5, \"Hello\");\r\n   *\r\n   * @param {Vector3|Array} position - position vector or array\r\n   * @param {Color|Array} color - color object or array\r\n   * @param {Float} size - size value\r\n   * @param {String} text - text value\r\n   * @return {Shape} this object\r\n   */\r\n  addText (position: Vector3|[number, number, number], color: Color|[number, number, number], size: number, text: string) {\r\n    TextPrimitive.objectToShape(\r\n      this, { position, color, size, text }\r\n    )\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Add point\r\n   * @example\r\n   * shape.addPoint([ 10, -2, 4 ], [ 0.2, 0.5, 0.8 ]);\r\n   *\r\n   * @param {Vector3|Array} position - position vector or array\r\n   * @param {Color|Array} color - color object or array\r\n   * @param {String} [name] - text\r\n   * @return {Shape} this object\r\n   */\r\n  addPoint (position: Vector3|[number, number, number], color: Color|[number, number, number], name: string) {\r\n    PointPrimitive.objectToShape(\r\n      this, { position, color, name }\r\n    )\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Add a wideline\r\n   * @example\r\n   * shape.addWideline([ 0, 2, 7 ], [ 0, 0, 9 ], [ 1, 1, 0 ]);\r\n   *\r\n   * @param {Vector3|Array} position1 - from position vector or array\r\n   * @param {Vector3|Array} position2 - to position vector or array\r\n   * @param {Color|Array} color - color object or array\r\n   * @param {String} [name] - text\r\n   * @return {Shape} this object\r\n   */\r\n  addWideline (position1: Vector3|[number, number, number], position2: Vector3|[number, number, number], color: Color|[number, number, number], linewidth: number, name: string) {\r\n    this.parameters.linewidth = linewidth\r\n    WidelinePrimitive.objectToShape(\r\n      this, { position1, position2, color, name }\r\n    )\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Deprecated, use `.addText`\r\n   */\r\n  addLabel (position: Vector3|[number, number, number], color: Color|[number, number, number], size: number, text: string) {\r\n    console.warn('Shape.addLabel is deprecated, use .addText instead')\r\n    return this.addText(position, color, size, text)\r\n  }\r\n\r\n  getBufferList () {\r\n    const buffers: Buffer[] = []\r\n\r\n    Primitives.forEach(P => {\r\n      if (this._primitiveData[ P.getShapeKey('color') ].length) {\r\n        buffers.push(P.bufferFromShape(this, this.parameters))\r\n      }\r\n    })\r\n\r\n    return this.bufferList.concat(buffers)\r\n  }\r\n\r\n  dispose () {\r\n    this.bufferList.forEach(function (buffer) {\r\n      buffer.dispose()\r\n    })\r\n    this.bufferList.length = 0\r\n\r\n    Primitives.forEach(P => {\r\n      Object.keys(P.fields).forEach(name => {\r\n        this._primitiveData[ P.getShapeKey(name) ].length = 0\r\n      })\r\n      this._primitiveData[ P.getShapeKey('name') ].length = 0\r\n    })\r\n  }\r\n\r\n  get center () {\r\n    if (!this._center) {\r\n      this._center = this.boundingBox.getCenter(new Vector3())\r\n    }\r\n    return this._center\r\n  }\r\n\r\n  get type () { return 'Shape' }\r\n}\r\n\r\nexport default Shape\r\n","/**\r\n * @file Buffer Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Representation, { RepresentationParameters } from './representation'\r\nimport Viewer from '../viewer/viewer';\r\n\r\n/**\r\n * Representation for showing buffer objects. Good for efficiently showing\r\n * large amounts of geometric primitives e.g. spheres via {@link SphereBuffer}.\r\n * Smaller numbers of geometric primitives are more easily shown with help\r\n * from the {@link Shape} class.\r\n *\r\n * __Name:__ _buffer_\r\n *\r\n * @example\r\n * // add a single red sphere from a buffer to a shape instance\r\n * var shape = new NGL.Shape( \"shape\" );\r\n * var sphereBuffer = new NGL.SphereBuffer( {\r\n *     position: new Float32Array( [ 0, 0, 0 ] ),\r\n *     color: new Float32Array( [ 1, 0, 0 ] ),\r\n *     radius: new Float32Array( [ 1 ] )\r\n * } );\r\n * shape.addBuffer( sphereBuffer );\r\n * var shapeComp = stage.addComponentFromObject( shape );\r\n * shapeComp.addRepresentation( \"buffer\" );\r\n *\r\n * @example\r\n * // add a single red sphere from a buffer to a structure component instance\r\n * stage.loadFile( \"rcsb://1crn\" ).then( function( o ){\r\n *     var sphereBuffer = new NGL.SphereBuffer( {\r\n *         position: new Float32Array( [ 0, 0, 0 ] ),\r\n *         color: new Float32Array( [ 1, 0, 0 ] ),\r\n *         radius: new Float32Array( [ 1 ] )\r\n *     } );\r\n *     o.addBufferRepresentation( sphereBuffer, { opacity: 0.5 } );\r\n * } );\r\n */\r\nclass BufferRepresentation extends Representation {\r\n  buffer: Buffer[]\r\n  /**\r\n   * Create Buffer representation\r\n   * @param {Buffer} buffer - a buffer object\r\n   * @param {Viewer} viewer - a viewer object\r\n   * @param {RepresentationParameters} params - representation parameters\r\n   */\r\n  constructor (buffer: Buffer|Buffer[], viewer: Viewer, params: Partial<RepresentationParameters>) {\r\n    if (!Array.isArray(buffer)) {\r\n      buffer = [ buffer ]\r\n    }\r\n\r\n    super(buffer, viewer, params)\r\n\r\n    this.type = 'buffer'\r\n\r\n    this.parameters = Object.assign({\r\n\r\n    }, this.parameters, {\r\n\r\n      colorScheme: null,\r\n      colorScale: null,\r\n      colorValue: null,\r\n      colorDomain: null,\r\n      colorMode: null\r\n\r\n    })\r\n\r\n    this.buffer = buffer\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params: Partial<RepresentationParameters>) {\r\n    super.init(params)\r\n\r\n    this.build()\r\n  }\r\n\r\n  create () {\r\n    this.bufferList.push.apply(this.bufferList, this.buffer)\r\n  }\r\n\r\n  attach (callback: ()=> void) {\r\n    this.bufferList.forEach(buffer => {\r\n      this.viewer.add(buffer)\r\n      buffer.setParameters(this.getBufferParams())\r\n    })\r\n    this.setVisibility(this.visible)\r\n\r\n    callback()\r\n  }\r\n}\r\n\r\nexport default BufferRepresentation\r\n","/**\r\n * @file Geometry Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\n// @ts-ignore: unused import Vector3 required for declaration only\r\n import {  Vector3, Matrix4, Matrix3, BufferGeometry } from 'three'\r\n\r\nimport { getUintArray } from '../utils'\r\nimport { serialBlockArray } from '../math/array-utils'\r\nimport { applyMatrix3toVector3array, applyMatrix4toVector3array } from '../math/vector-utils'\r\nimport MeshBuffer from './mesh-buffer'\r\nimport { BufferParameters, BufferData } from './buffer'\r\nimport {Log} from \"../globals\";\r\n\r\nconst matrix = new Matrix4()\r\nconst normalMatrix = new Matrix3()\r\n\r\nfunction getData(data: BufferData, geo: BufferGeometry){\r\n  const geoPosition = (geo.attributes as any).position.array\r\n  const geoIndex = geo.index ? geo.index.array : undefined\r\n\r\n  const n = data.position!.length / 3\r\n  const m = geoPosition.length / 3\r\n\r\n  const size = n * m\r\n\r\n  const meshPosition = new Float32Array(size * 3)\r\n  const meshNormal = new Float32Array(size * 3)\r\n  const meshColor = new Float32Array(size * 3)\r\n\r\n  let meshIndex\r\n  if (geoIndex) {\r\n    meshIndex = getUintArray(n * geoIndex.length, size)\r\n  }\r\n\r\n  return {\r\n    position: meshPosition,\r\n    color: meshColor,\r\n    index: meshIndex,\r\n    normal: meshNormal,\r\n    primitiveId: data.primitiveId || serialBlockArray(n, m) as Float32Array,\r\n    picking: data.picking\r\n  }\r\n}\r\n\r\n/**\r\n * Geometry buffer. Base class for geometry-based buffers. Used to draw\r\n * geometry primitives given a mesh.\r\n * @interface\r\n */\r\nabstract class GeometryBuffer extends MeshBuffer {\r\n  updateNormals = false\r\n\r\n  geoPosition: Float32Array\r\n  geoNormal: Float32Array\r\n  geoIndex?: Uint32Array|Uint16Array\r\n\r\n  positionCount: number\r\n  geoPositionCount: number\r\n\r\n  transformedGeoPosition: Float32Array\r\n  transformedGeoNormal: Float32Array\r\n\r\n  meshPosition: Float32Array\r\n  meshColor: Float32Array\r\n  meshIndex: Uint32Array|Uint16Array\r\n  meshNormal: Float32Array\r\n\r\n  /**\r\n   * @param {Object} data - buffer data\r\n   * @param {Float32Array} data.position - positions\r\n   * @param {Float32Array} data.color - colors\r\n   * @param {Float32Array} data.radius - radii\r\n   * @param {Picker} [data.picking] - picking ids\r\n   * @param {BufferParameters} [params] - parameters object\r\n   * @param {BufferGeometry} geo - geometry object\r\n   */\r\n  constructor (data: BufferData, params: Partial<BufferParameters> = {}, geo: BufferGeometry) {\r\n    super(getData(data, geo), params)\r\n\r\n    const geoPosition = (geo.attributes as any).position.array\r\n    const geoNormal = (geo.attributes as any).normal.array\r\n    const geoIndex = geo.index ? (geo.index.array as Uint32Array|Uint16Array) : undefined\r\n\r\n    this.geoPosition = geoPosition\r\n    this.geoNormal = geoNormal\r\n    this.geoIndex = geoIndex\r\n\r\n    this.positionCount = data.position!.length / 3\r\n    this.geoPositionCount = geoPosition.length / 3\r\n\r\n    this.transformedGeoPosition = new Float32Array(this.geoPositionCount * 3)\r\n    this.transformedGeoNormal = new Float32Array(this.geoPositionCount * 3)\r\n\r\n    const attributes = this.geometry.attributes as any  // TODO\r\n    this.meshPosition = attributes.position.array\r\n    this.meshColor = attributes.color.array\r\n    this.meshNormal = attributes.normal.array\r\n\r\n    this.setAttributes(data)\r\n\r\n    if (geoIndex) {\r\n      const index = this.geometry.getIndex()\r\n      if (!index) { Log.error('Index is null'); return; }\r\n      this.meshIndex = index.array as Uint32Array|Uint16Array\r\n      this.makeIndex()\r\n    }\r\n  }\r\n\r\n  abstract applyPositionTransform (matrix: Matrix4, i: number, i3?: number): void\r\n\r\n  setAttributes (data: Partial<BufferData> = {}, initNormals = false) {\r\n    const attributes = this.geometry.attributes as any  // TODO\r\n\r\n    let position, color\r\n    let geoPosition, geoNormal\r\n    let transformedGeoPosition, transformedGeoNormal\r\n    let meshPosition, meshColor, meshNormal\r\n\r\n    const updateNormals = this.updateNormals\r\n\r\n    if (data.position) {\r\n      position = data.position\r\n      geoPosition = this.geoPosition\r\n      meshPosition = this.meshPosition\r\n      transformedGeoPosition = this.transformedGeoPosition\r\n      attributes.position.needsUpdate = true\r\n      if (updateNormals || initNormals) {\r\n        geoNormal = this.geoNormal\r\n        meshNormal = this.meshNormal\r\n        transformedGeoNormal = this.transformedGeoNormal\r\n        attributes.normal.needsUpdate = true\r\n      }\r\n    }\r\n\r\n    if (data.color) {\r\n      color = data.color\r\n      meshColor = this.meshColor\r\n      attributes.color.needsUpdate = true\r\n    }\r\n\r\n    const n = this.positionCount\r\n    const m = this.geoPositionCount\r\n\r\n    for (let i = 0; i < n; ++i) {\r\n      let j, l\r\n      const k = i * m * 3\r\n      const i3 = i * 3\r\n\r\n      if (position && transformedGeoPosition && meshPosition && meshNormal && geoPosition && geoNormal) {\r\n        transformedGeoPosition.set(geoPosition)\r\n        matrix.makeTranslation(\r\n          position[ i3 ], position[ i3 + 1 ], position[ i3 + 2 ]\r\n        )\r\n        this.applyPositionTransform(matrix, i, i3)\r\n        applyMatrix4toVector3array(matrix.elements as unknown as Float32Array,\r\n                                   transformedGeoPosition)\r\n\r\n        meshPosition.set(transformedGeoPosition, k)\r\n\r\n        if (updateNormals && transformedGeoNormal) {\r\n          transformedGeoNormal.set(geoNormal)\r\n          normalMatrix.getNormalMatrix(matrix)\r\n          applyMatrix3toVector3array(normalMatrix.elements as unknown as Float32Array,\r\n                                     transformedGeoNormal)\r\n\r\n          meshNormal.set(transformedGeoNormal, k)\r\n        } else if (initNormals) {\r\n          meshNormal.set(geoNormal, k)\r\n        }\r\n      }\r\n\r\n      if (color && meshColor) {\r\n        for (j = 0; j < m; ++j) {\r\n          l = k + 3 * j\r\n\r\n          meshColor[ l ] = color[ i3 ]\r\n          meshColor[ l + 1 ] = color[ i3 + 1 ]\r\n          meshColor[ l + 2 ] = color[ i3 + 2 ]\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  makeIndex () {\r\n    const geoIndex = this.geoIndex\r\n    const meshIndex = this.meshIndex\r\n\r\n    if (!geoIndex) return\r\n\r\n    const n = this.positionCount\r\n    const m = this.geoPositionCount\r\n    const o = geoIndex.length / 3\r\n\r\n    const o3 = o * 3\r\n\r\n    for (let i = 0; i < n; ++i) {\r\n      const j = i * o3\r\n      const q = j + o3\r\n\r\n      meshIndex.set(geoIndex, j)\r\n      for (let p = j; p < q; ++p) meshIndex[ p ] += i * m\r\n    }\r\n  }\r\n}\r\n\r\nexport default GeometryBuffer\r\n","/**\r\n * @file Sphere Geometry Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { IcosahedronBufferGeometry, Vector3, Matrix4 } from 'three'\r\nimport { defaults } from '../utils'\r\nimport GeometryBuffer from './geometry-buffer'\r\nimport { SphereBufferData } from './sphere-buffer'\r\nimport { BufferDefaultParameters, BufferParameters } from './buffer'\r\n\r\nconst scale = new Vector3()\r\n\r\nexport const SphereGeometryBufferDefaultParameters = Object.assign({\r\n  sphereDetail: 1\r\n}, BufferDefaultParameters)\r\nexport type SphereGeometryBufferParameters = BufferParameters & { sphereDetail: number }\r\n\r\n/**\r\n * Sphere geometry buffer.\r\n *\r\n * @example\r\n * var sphereGeometryBuffer = new SphereGeometryBuffer({\r\n *   position: new Float32Array([ 0, 0, 0 ]),\r\n *   color: new Float32Array([ 1, 0, 0 ]),\r\n *   radius: new Float32Array([ 1 ])\r\n * });\r\n */\r\nclass SphereGeometryBuffer extends GeometryBuffer {\r\n  get defaultParameters() { return SphereGeometryBufferDefaultParameters }\r\n  parameters: SphereGeometryBufferParameters\r\n\r\n  private _radius: Float32Array\r\n\r\n  /**\r\n   * @param {Object} data - attribute object\r\n   * @param {Float32Array} data.position - positions\r\n   * @param {Float32Array} data.color - colors\r\n   * @param {Float32Array} data.radius - radii\r\n   * @param {Picker} [data.picking] - picking ids\r\n   * @param {BufferParameters} params - parameter object\r\n   */\r\n  constructor (data: SphereBufferData, params: Partial<SphereGeometryBufferParameters> = {}) {\r\n    super(data, params, new IcosahedronBufferGeometry(1, defaults(params.sphereDetail, 1)))\r\n\r\n    this.setAttributes(data, true)\r\n  }\r\n\r\n  applyPositionTransform (matrix: Matrix4, i: number) {\r\n    const r = this._radius[ i ]\r\n    scale.set(r, r, r)\r\n    matrix.scale(scale)\r\n  }\r\n\r\n  setAttributes (data: Partial<SphereBufferData> = {}, initNormals?: boolean) {\r\n    if (data.radius) this._radius = data.radius\r\n\r\n    super.setAttributes(data, initNormals)\r\n  }\r\n}\r\n\r\nexport default SphereGeometryBuffer\r\n","/**\r\n * @file Mapped Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { getUintArray } from '../utils'\r\nimport { calculateCenterArray, serialArray } from '../math/array-utils'\r\nimport Buffer, { BufferParameters, BufferData } from './buffer'\r\n\r\nexport type MappingType = 'v2'|'v3'\r\n\r\n/**\r\n * Mapped buffer. Sends mapping attribute to the GPU and repeats data in\r\n * others attributes. Used to render imposters.\r\n * @interface\r\n */\r\nabstract class MappedBuffer extends Buffer {\r\n  index: Uint32Array|Uint16Array\r\n\r\n  constructor (mappingType: MappingType, data: BufferData, params: Partial<BufferParameters> = {}) {\r\n    super(data, params)\r\n\r\n    this.index = getUintArray(this.indexSize, this.attributeSize)\r\n    this.makeIndex()\r\n    this.initIndex(this.index)\r\n\r\n    this.addAttributes({\r\n      'mapping': { type: mappingType, value: null }\r\n    })\r\n\r\n    this.setAttributes({ primitiveId: serialArray(this.size) })\r\n  }\r\n\r\n  abstract get mapping (): Float32Array\r\n  abstract get mappingIndices (): Uint32Array|Uint16Array\r\n  abstract get mappingIndicesSize (): number\r\n  abstract get mappingSize (): number\r\n  abstract get mappingItemSize (): number\r\n\r\n  get attributeSize () {\r\n    return this.size * this.mappingSize\r\n  }\r\n\r\n  get indexSize () {\r\n    return this.size * this.mappingIndicesSize\r\n  }\r\n\r\n  addAttributes (attributes: any) {\r\n    const nullValueAttributes: any = {}\r\n    for (const name in attributes) {\r\n      const a = attributes[ name ]\r\n      nullValueAttributes[ name ] = {\r\n        type: a.type,\r\n        value: null\r\n      }\r\n    }\r\n\r\n    super.addAttributes(nullValueAttributes)\r\n  }\r\n\r\n  getAttributeIndex (dataIndex: number) {\r\n    return dataIndex * 3 * this.mappingSize\r\n  }\r\n\r\n  setAttributes (data: any) {  // TODO\r\n    if (data && !data.position && data.position1 && data.position2) {\r\n      data.position = calculateCenterArray(data.position1, data.position2)\r\n    }\r\n\r\n    const size = this.size\r\n    const mappingSize = this.mappingSize\r\n    const attributes = this.geometry.attributes as any  // TODO\r\n\r\n    let a, d, itemSize, array, n, i, j\r\n\r\n    for (const name in data) {\r\n      if (name === 'index' || name === 'picking') continue\r\n\r\n      d = data[ name ]\r\n      a = attributes[ name ]\r\n      itemSize = a.itemSize\r\n      array = a.array\r\n\r\n      for (let k = 0; k < size; ++k) {\r\n        n = k * itemSize\r\n        i = n * mappingSize\r\n\r\n        for (let l = 0; l < mappingSize; ++l) {\r\n          j = i + (itemSize * l)\r\n\r\n          for (let m = 0; m < itemSize; ++m) {\r\n            array[ j + m ] = d[ n + m ]\r\n          }\r\n        }\r\n      }\r\n\r\n      a.needsUpdate = true\r\n    }\r\n  }\r\n\r\n  makeMapping () {\r\n    const size = this.size\r\n    const mapping = this.mapping\r\n    const mappingSize = this.mappingSize\r\n    const mappingItemSize = this.mappingItemSize\r\n\r\n    const attributes = this.geometry.attributes as any  // TODO\r\n    const aMapping = attributes.mapping.array\r\n\r\n    for (let v = 0; v < size; v++) {\r\n      aMapping.set(mapping, v * mappingItemSize * mappingSize)\r\n    }\r\n  }\r\n\r\n  makeIndex () {\r\n    const size = this.size\r\n    const mappingSize = this.mappingSize\r\n    const mappingIndices = this.mappingIndices\r\n    const mappingIndicesSize = this.mappingIndicesSize\r\n\r\n    const index = this.index\r\n\r\n    for (let v = 0; v < size; v++) {\r\n      const ix = v * mappingIndicesSize\r\n      const it = v * mappingSize\r\n\r\n      index.set(mappingIndices, ix)\r\n\r\n      for (let s = 0; s < mappingIndicesSize; ++s) {\r\n        index[ ix + s ] += it\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default MappedBuffer\r\n","/**\r\n * @file Mapped Quad Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { BufferParameters, BufferData } from './buffer'\r\nimport MappedBuffer from './mapped-buffer'\r\n\r\nconst mapping = new Float32Array([\r\n  -1.0, 1.0,\r\n  -1.0, -1.0,\r\n  1.0, 1.0,\r\n  1.0, -1.0\r\n])\r\n\r\nconst mappingIndices = new Uint16Array([\r\n  0, 1, 2,\r\n  1, 3, 2\r\n])\r\n\r\n/**\r\n * Mapped Quad buffer. Draws screen-aligned quads. Used to render impostors.\r\n * @interface\r\n */\r\nclass MappedQuadBuffer extends MappedBuffer {\r\n  constructor(data: BufferData, params: Partial<BufferParameters> = {}) {\r\n    super('v2', data, params)\r\n  }\r\n  get mapping () { return mapping }\r\n  get mappingIndices () { return mappingIndices }\r\n  get mappingIndicesSize () { return 6 }\r\n  get mappingSize () { return 4 }\r\n  get mappingItemSize () { return 2 }\r\n}\r\n\r\nexport default MappedQuadBuffer\r\n","/**\r\n * @file Sphere Impostor Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Matrix4 } from 'three'\r\n\r\nimport '../shader/SphereImpostor.vert'\r\nimport '../shader/SphereImpostor.frag'\r\n\r\nimport MappedQuadBuffer from './mappedquad-buffer'\r\nimport { SphereBufferData } from './sphere-buffer'\r\nimport { BufferParameters } from './buffer'\r\n\r\n/**\r\n * Sphere impostor buffer.\r\n *\r\n * @example\r\n * var sphereImpostorBuffer = new SphereImpostorBuffer({\r\n *   position: new Float32Array([ 0, 0, 0 ]),\r\n *   color: new Float32Array([ 1, 0, 0 ]),\r\n *   radius: new Float32Array([ 1 ])\r\n * });\r\n */\r\nclass SphereImpostorBuffer extends MappedQuadBuffer {\r\n  isImpostor = true\r\n  vertexShader = 'SphereImpostor.vert'\r\n  fragmentShader = 'SphereImpostor.frag'\r\n\r\n  /**\r\n   * @param  {Object} data - attribute object\r\n   * @param  {Float32Array} data.position - positions\r\n   * @param  {Float32Array} data.color - colors\r\n   * @param  {Float32Array} data.radius - radii\r\n   * @param {Picker} [data.picking] - picking ids\r\n   * @param  {BufferParameters} params - parameter object\r\n   */\r\n  constructor (data: SphereBufferData, params: Partial<BufferParameters> = {}) {\r\n    super(data, params)\r\n\r\n    this.addUniforms({\r\n      'projectionMatrixInverse': { value: new Matrix4() },\r\n      'ortho': { value: 0.0 }\r\n    })\r\n\r\n    this.addAttributes({\r\n      'radius': { type: 'f', value: null }\r\n    })\r\n\r\n    this.setAttributes(data)\r\n    this.makeMapping()\r\n  }\r\n}\r\n\r\nexport default SphereImpostorBuffer\r\n","/**\r\n * @file Sphere Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\n// @ts-ignore: unused import Vector3, Matrix4 required for declaration only \r\nimport { Vector3, Matrix4 } from 'three'\r\nimport { BufferRegistry, ExtensionFragDepth } from '../globals'\r\nimport SphereGeometryBuffer, { SphereGeometryBufferDefaultParameters, SphereGeometryBufferParameters } from './spheregeometry-buffer'\r\nimport SphereImpostorBuffer from './sphereimpostor-buffer'\r\nimport { BufferData } from './buffer'\r\n\r\nexport interface SphereBufferData extends BufferData {\r\n  radius: Float32Array\r\n}\r\n\r\nexport const SphereBufferDefaultParameters = Object.assign({\r\n  disableImpostor: false\r\n}, SphereGeometryBufferDefaultParameters)\r\nexport type SphereBufferParameters = SphereGeometryBufferParameters & { disableImpostor: boolean }\r\n\r\nclass SphereBufferImpl {\r\n    /**\r\n     * @param {Object} data - buffer data\r\n     * @param {Float32Array} data.position - positions\r\n     * @param {Float32Array} data.color - colors\r\n     * @param {Float32Array} data.radius - radii\r\n     * @param {Picker} [data.picking] - picking ids\r\n     * @param {BufferParameters} params - parameters object\r\n     * @return {SphereGeometryBuffer|SphereImpostorBuffer} the buffer object\r\n     */\r\n  constructor (data: SphereBufferData, params: SphereBufferParameters) {\r\n    if (!ExtensionFragDepth || (params && params.disableImpostor)) {\r\n      return new SphereGeometryBuffer(data, params)\r\n    } else {\r\n      return new SphereImpostorBuffer(data, params)\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Sphere buffer. Depending on the value {@link ExtensionFragDepth} and\r\n * `params.disableImpostor` the constructor returns either a\r\n * {@link SphereGeometryBuffer} or a {@link SphereImpostorBuffer}\r\n * @implements {Buffer}\r\n *\r\n * @example\r\n * var sphereBuffer = new SphereBuffer( {\r\n *     position: new Float32Array( [ 0, 0, 0 ] ),\r\n *     color: new Float32Array( [ 1, 0, 0 ] ),\r\n *     radius: new Float32Array( [ 1 ] )\r\n * } );\r\n */\r\n//@ts-expect-error Incompatible constructor signatures\r\nconst SphereBuffer: {\r\n  new(data: SphereBufferData, params: SphereBufferParameters): SphereGeometryBuffer | SphereImpostorBuffer;\r\n} = SphereBufferImpl;\r\n\r\ntype SphereBuffer = SphereGeometryBuffer | SphereImpostorBuffer;\r\n\r\nBufferRegistry.add('sphere', SphereBuffer)\r\n\r\nexport default SphereBuffer\r\n","/**\r\n * @file Point Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\n// @ts-ignore: unused import Vector3, Matrix4 required for declaration only\r\nimport { DataTexture, Vector3, Matrix4 } from 'three'\r\n\r\nimport '../shader/Point.vert'\r\nimport '../shader/Point.frag'\r\n\r\nimport { BufferRegistry } from '../globals'\r\nimport { defaults } from '../utils'\r\nimport { smoothstep } from '../math/math-utils'\r\nimport Buffer, { BufferDefaultParameters, BufferParameterTypes, BufferData, BufferTypes, BufferParameters } from './buffer'\r\n\r\nfunction distance (x0: number, y0: number, x1: number, y1: number) {\r\n  const dx = x1 - x0\r\n  const dy = y1 - y0\r\n  return Math.sqrt(dx * dx + dy * dy)\r\n}\r\n\r\ninterface PointTextureParams {\r\n  width?: number\r\n  height?: number\r\n  delta?: number\r\n}\r\n\r\nfunction makePointTexture (params: PointTextureParams) {\r\n  const p = params || {}\r\n\r\n  const width = defaults(p.width, 256)\r\n  const height = defaults(p.height, 256)\r\n  const center = [ width / 2, height / 2 ]\r\n  const radius = Math.min(width / 2, height / 2)\r\n  const delta = defaults(p.delta, 1 / (radius + 1)) * radius\r\n\r\n  let x = 0\r\n  let y = 0\r\n  const data = new Uint8Array(width * height * 4)\r\n\r\n  for (let i = 0, il = data.length; i < il; i += 4) {\r\n    const dist = distance(x, y, center[ 0 ], center[ 1 ])\r\n    const value = 1 - smoothstep(radius - delta, radius, dist)\r\n\r\n    data[ i ] = value * 255\r\n    data[ i + 1 ] = value * 255\r\n    data[ i + 2 ] = value * 255\r\n    data[ i + 3 ] = value * 255\r\n\r\n    if (++x === width) {\r\n      x = 0\r\n      y++\r\n    }\r\n  }\r\n\r\n  const tex = new DataTexture(data, width, height)\r\n  tex.needsUpdate = true\r\n\r\n  return tex\r\n}\r\n\r\nexport const PointBufferDefaultParameters = Object.assign({\r\n  pointSize: 1,\r\n  sizeAttenuation: true,\r\n  sortParticles: false,\r\n  alphaTest: 0.5,\r\n  useTexture: false,\r\n  forceTransparent: false,\r\n  edgeBleach: 0.0\r\n}, BufferDefaultParameters)\r\nexport type PointBufferParameters = BufferParameters & {\r\n  pointSize: number,\r\n  sizeAttenuation: boolean,\r\n  sortParticles: boolean,\r\n  alphaTest: number,\r\n  useTexture: boolean,\r\n  forceTransparent: boolean,\r\n  edgeBleach: number\r\n}\r\n\r\nconst PointBufferParameterTypes = Object.assign({\r\n  pointSize: { uniform: 'size' },\r\n  sizeAttenuation: { updateShader: true },\r\n  sortParticles: {},\r\n  alphaTest: { updateShader: true },\r\n  useTexture: { updateShader: true },\r\n  forceTransparent: {},\r\n  edgeBleach: { uniform: true }\r\n}, BufferParameterTypes)\r\n\r\n/**\r\n * Point buffer. Draws points. Optionally textured.\r\n *\r\n * @example\r\n * var pointBuffer = new PointBuffer( {\r\n *     position: new Float32Array( [ 0, 0, 0 ] ),\r\n *     color: new Float32Array( [ 1, 0, 0 ] )\r\n * } );\r\n */\r\nclass PointBuffer extends Buffer {\r\n  parameterTypes = PointBufferParameterTypes\r\n  get defaultParameters() { return PointBufferDefaultParameters }\r\n  parameters: PointBufferParameters\r\n\r\n  vertexShader = 'Point.vert'\r\n  fragmentShader ='Point.frag'\r\n\r\n  isPoint = true\r\n  tex: DataTexture\r\n\r\n  /**\r\n   * @param  {Object} data - attribute object\r\n   * @param  {Float32Array} data.position - positions\r\n   * @param  {Float32Array} data.color - colors\r\n   * @param  {BufferParameters} params - parameter object\r\n   */\r\n  constructor (data: BufferData, params: Partial<PointBufferParameters> = {}) {\r\n    super(data, params)\r\n\r\n    this.addUniforms({\r\n      'size': { value: this.parameters.pointSize },\r\n      'canvasHeight': { value: 1.0 },\r\n      'pixelRatio': { value: 1.0 },\r\n      'map': { value: null }\r\n    })\r\n  }\r\n\r\n  makeMaterial () {\r\n    super.makeMaterial()\r\n\r\n    this.makeTexture()\r\n\r\n    const m = this.material\r\n    const wm = this.wireframeMaterial\r\n    const pm = this.pickingMaterial\r\n\r\n    m.uniforms.map.value = this.tex\r\n    m.needsUpdate = true\r\n\r\n    wm.uniforms.map.value = this.tex\r\n    wm.needsUpdate = true\r\n\r\n    pm.uniforms.map.value = this.tex\r\n    pm.needsUpdate = true\r\n  }\r\n\r\n  makeTexture () {\r\n    if (this.tex) this.tex.dispose()\r\n    this.tex = makePointTexture({ delta: this.parameters.edgeBleach })\r\n  }\r\n\r\n  getDefines (type?: BufferTypes) {\r\n    const defines = super.getDefines(type)\r\n\r\n    if (this.parameters.sizeAttenuation) {\r\n      defines.USE_SIZEATTENUATION = 1\r\n    }\r\n\r\n    if (this.parameters.useTexture) {\r\n      defines.USE_MAP = 1\r\n    }\r\n\r\n    if (this.parameters.alphaTest > 0 && this.parameters.alphaTest <= 1) {\r\n      defines.ALPHATEST = this.parameters.alphaTest.toPrecision(2)\r\n    }\r\n\r\n    return defines\r\n  }\r\n\r\n  setUniforms (data: any) {\r\n    if (data && data.edgeBleach !== undefined) {\r\n      this.makeTexture()\r\n      data.map = this.tex\r\n    }\r\n\r\n    super.setUniforms(data)\r\n  }\r\n\r\n  dispose () {\r\n    super.dispose()\r\n\r\n    if (this.tex) this.tex.dispose()\r\n  }\r\n}\r\n\r\nBufferRegistry.add('point', PointBuffer)\r\n\r\nexport default PointBuffer\r\n","/**\r\n * @file Dot Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ExtensionFragDepth } from '../globals'\r\nimport { defaults } from '../utils'\r\nimport Representation, { RepresentationParameters } from './representation'\r\nimport Volume from '../surface/volume'\r\nimport FilteredVolume from '../surface/filtered-volume'\r\nimport SphereBuffer, { SphereBufferData, SphereBufferParameters } from '../buffer/sphere-buffer'\r\nimport PointBuffer from '../buffer/point-buffer'\r\nimport Surface from '../surface/surface';\r\nimport Viewer from '../viewer/viewer';\r\nimport SphereGeometryBuffer from '../buffer/spheregeometry-buffer';\r\n\r\nexport interface DotDataFields {\r\n  color?: boolean,\r\n  radius?: boolean,\r\n  scale?: boolean\r\n}\r\n\r\n/**\r\n * Dot representation parameter object. Extends {@link RepresentationParameters}\r\n *\r\n * @typedef {Object} DotRepresentationParameters - dot representation parameters\r\n *\r\n * @property {String} thresholdType - Meaning of the threshold values. Either *value* for the literal value or *sigma* as a factor of the sigma of the data. For volume data only.\r\n * @property {Number} thresholdMin - Minimum value to be displayed. For volume data only.\r\n * @property {Number} thresholdMax - Maximum value to be displayed. For volume data only.\r\n * @property {Number} thresholdOut - Show only values falling outside of the treshold minumum and maximum. For volume data only.\r\n */\r\nexport interface DotRepresentationParameters extends RepresentationParameters {\r\n  thresholdType: 'value'|'value'|'sigma'|'sigma'\r\n  thresholdMin: number\r\n  thresholdMax: number\r\n  thresholdOut: boolean\r\n  dotType: ''|'sphere'|'point'\r\n  radiusType: ''|'value'|'abs-value'|'value-min'|'deviation'|'size'|'radius' //TODO had to add 'radius' because of test in line 333\r\n  radius: number\r\n  scale: number\r\n  sphereDetail: number\r\n  disableImpostor: boolean\r\n  pointSize: number\r\n  sizeAttenuation: boolean\r\n  sortParticles: boolean\r\n  useTexture: boolean\r\n  alphaTest: number\r\n  forceTransparent: boolean\r\n  edgeBleach: number\r\n}\r\n/**\r\n * Dot representation\r\n */\r\nclass DotRepresentation extends Representation {\r\n  protected thresholdType: 'value'|'value'|'sigma'|'sigma'\r\n  protected thresholdMin: number\r\n  protected thresholdMax: number\r\n  protected thresholdOut: boolean\r\n  protected dotType: ''|'sphere'|'point'\r\n  protected radiusType: ''|'value'|'abs-value'|'value-min'|'deviation'|'size'|'radius' //TODO had to add 'radius' because of test in line 333\r\n  protected radius: number\r\n  protected scale: number\r\n  protected sphereDetail: number\r\n  protected disableImpostor: boolean\r\n  protected pointSize: number\r\n  protected sizeAttenuation: boolean\r\n  protected sortParticles: boolean\r\n  protected useTexture: boolean\r\n  protected alphaTest: number\r\n  protected forceTransparent: boolean\r\n  protected edgeBleach: number\r\n\r\n  protected surface: Surface|undefined\r\n  protected volume: FilteredVolume|undefined\r\n  protected dotBuffer: SphereBuffer|PointBuffer\r\n  /**\r\n   * Create Dot representation object\r\n   * @param {Surface|Volume} surface - the surface or volume to be represented\r\n   * @param {Viewer} viewer - a viewer object\r\n   * @param {DotRepresentationParameters} params - dot representation parameters\r\n   */\r\n  constructor (surface: Surface, viewer: Viewer, params: Partial<DotRepresentationParameters>) {\r\n    super(surface, viewer, params)\r\n\r\n    this.type = 'dot'\r\n\r\n    this.parameters = Object.assign({\r\n\r\n      thresholdType: {\r\n        type: 'select',\r\n        rebuild: true,\r\n        options: {\r\n          'value': 'value', 'sigma': 'sigma'\r\n        }\r\n      },\r\n      thresholdMin: {\r\n        type: 'number', precision: 3, max: Infinity, min: -Infinity, rebuild: true\r\n      },\r\n      thresholdMax: {\r\n        type: 'number', precision: 3, max: Infinity, min: -Infinity, rebuild: true\r\n      },\r\n      thresholdOut: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n      dotType: {\r\n        type: 'select',\r\n        rebuild: true,\r\n        options: {\r\n          '': '',\r\n          'sphere': 'sphere',\r\n          'point': 'point'\r\n        }\r\n      },\r\n      radiusType: {\r\n        type: 'select',\r\n        options: {\r\n          '': '',\r\n          'value': 'value',\r\n          'abs-value': 'abs-value',\r\n          'value-min': 'value-min',\r\n          'deviation': 'deviation',\r\n          'size': 'size'\r\n        }\r\n      },\r\n      radius: {\r\n        type: 'number', precision: 3, max: 10.0, min: 0.001, property: 'size'\r\n      },\r\n      scale: {\r\n        type: 'number', precision: 3, max: 10.0, min: 0.001\r\n      },\r\n      sphereDetail: true,\r\n      disableImpostor: true,\r\n\r\n      pointSize: {\r\n        type: 'number', precision: 1, max: 100, min: 0, buffer: true\r\n      },\r\n      sizeAttenuation: {\r\n        type: 'boolean', buffer: true\r\n      },\r\n      sortParticles: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n      useTexture: {\r\n        type: 'boolean', buffer: true\r\n      },\r\n      alphaTest: {\r\n        type: 'range', step: 0.001, max: 1, min: 0, buffer: true\r\n      },\r\n      forceTransparent: {\r\n        type: 'boolean', buffer: true\r\n      },\r\n      edgeBleach: {\r\n        type: 'range', step: 0.001, max: 1, min: 0, buffer: true\r\n      }\r\n\r\n    }, this.parameters, {\r\n\r\n      colorScheme: {\r\n        type: 'select',\r\n        update: 'color',\r\n        options: {\r\n          '': '',\r\n          'value': 'value',\r\n          'uniform': 'uniform',\r\n          'random': 'random'\r\n        }\r\n      }\r\n\r\n    })\r\n\r\n    if (surface instanceof Volume) {\r\n      this.surface = undefined\r\n      this.volume = new FilteredVolume(surface)\r\n    } else {\r\n      this.surface = surface\r\n      this.volume = undefined\r\n    }\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params: Partial<DotRepresentationParameters>) {\r\n    var p = params || {}\r\n    p.colorScheme = defaults(p.colorScheme, 'uniform')\r\n    p.colorValue = defaults(p.colorValue, 0xDDDDDD)\r\n\r\n    this.thresholdType = defaults(p.thresholdType, 'sigma')\r\n    this.thresholdMin = defaults(p.thresholdMin, 2.0)\r\n    this.thresholdMax = defaults(p.thresholdMax, Infinity)\r\n    this.thresholdOut = defaults(p.thresholdOut, false)\r\n    this.dotType = defaults(p.dotType, 'point')\r\n    this.radius = defaults(p.radius, 0.1)\r\n    this.scale = defaults(p.scale, 1.0)\r\n\r\n    this.pointSize = defaults(p.pointSize, 1)\r\n    this.sizeAttenuation = defaults(p.sizeAttenuation, true)\r\n    this.sortParticles = defaults(p.sortParticles, false)\r\n    this.useTexture = defaults(p.useTexture, false)\r\n    this.alphaTest = defaults(p.alphaTest, 0.5)\r\n    this.forceTransparent = defaults(p.forceTransparent, false)\r\n    this.edgeBleach = defaults(p.edgeBleach, 0.0)\r\n\r\n    super.init(p)\r\n\r\n    this.build()\r\n  }\r\n\r\n  attach (callback: () => void) {\r\n    this.bufferList.forEach(buffer => {\r\n      this.viewer.add(buffer)\r\n    })\r\n    this.setVisibility(this.visible)\r\n\r\n    callback()\r\n  }\r\n\r\n  create () {\r\n    var dotData: SphereBufferData|{} = {}\r\n\r\n    if (this.volume) {\r\n      var volume = this.volume\r\n      var thresholdMin, thresholdMax\r\n\r\n      if (this.thresholdType === 'sigma') {\r\n        thresholdMin = volume.getValueForSigma(this.thresholdMin)\r\n        thresholdMax = volume.getValueForSigma(this.thresholdMax)\r\n      } else {\r\n        thresholdMin = this.thresholdMin\r\n        thresholdMax = this.thresholdMax\r\n      }\r\n      volume.setFilter(thresholdMin, thresholdMax, this.thresholdOut)\r\n\r\n      Object.assign(dotData, {\r\n        position: volume.getDataPosition(),\r\n        color: volume.getDataColor(this.getColorParams())\r\n      })\r\n      if (this.dotType === 'sphere') {\r\n        Object.assign(dotData, {\r\n          radius: volume.getDataSize(this.radius, this.scale),\r\n          picking: volume.getDataPicking()\r\n        })\r\n      }\r\n    } else {\r\n      var surface = this.surface\r\n      Object.assign(dotData, {\r\n        position: (surface as Surface).getPosition(),\r\n        color: (surface as Surface).getColor(this.getColorParams())\r\n      })\r\n      if (this.dotType === 'sphere') {\r\n        Object.assign(dotData, {\r\n          radius: (surface as Surface).getSize(this.radius, this.scale),\r\n          picking: (surface as Surface).getPicking()\r\n        })\r\n      }\r\n    }\r\n\r\n    if (this.dotType === 'sphere') {\r\n      this.dotBuffer = new SphereBuffer(\r\n        dotData as SphereBufferData,\r\n        this.getBufferParams({\r\n          sphereDetail: this.sphereDetail,\r\n          disableImpostor: this.disableImpostor,\r\n          dullInterior: false\r\n        }) as SphereBufferParameters\r\n      ) as SphereGeometryBuffer\r\n    } else {\r\n      this.dotBuffer = new PointBuffer(\r\n        dotData,\r\n        this.getBufferParams({\r\n          pointSize: this.pointSize,\r\n          sizeAttenuation: this.sizeAttenuation,\r\n          sortParticles: this.sortParticles,\r\n          useTexture: this.useTexture,\r\n          alphaTest: this.alphaTest,\r\n          forceTransparent: this.forceTransparent,\r\n          edgeBleach: this.edgeBleach\r\n        })\r\n      )\r\n    }\r\n\r\n    this.bufferList.push(this.dotBuffer as SphereGeometryBuffer)\r\n  }\r\n\r\n  update (what: DotDataFields = {}) {\r\n    if (this.bufferList.length === 0) return\r\n\r\n    const dotData: SphereBufferData|{} = {}\r\n\r\n    if (what.color) {\r\n      if (this.volume) {\r\n        Object.assign(dotData, {\r\n          color: this.volume.getDataColor(\r\n            this.getColorParams()\r\n          )\r\n        })\r\n      } else {\r\n        Object.assign(dotData, {\r\n          color: (this.surface as Surface).getColor(\r\n            this.getColorParams()\r\n          )\r\n        })\r\n      }\r\n    }\r\n\r\n    if (this.dotType === 'sphere' && (what.radius || what.scale)) {\r\n      if (this.volume) {\r\n        Object.assign(dotData, {\r\n          radius: this.volume.getDataSize(\r\n            this.radius, this.scale\r\n          )\r\n        })\r\n      } else {\r\n        Object.assign(dotData, {\r\n          radius: (this.surface as Surface).getSize(\r\n            this.radius, this.scale\r\n          )\r\n        })\r\n      }\r\n    }\r\n\r\n    (this.dotBuffer as SphereGeometryBuffer).setAttributes(dotData)\r\n  }\r\n\r\n  setParameters (params: Partial<DotRepresentationParameters>, what: DotDataFields = {}, rebuild: boolean) {\r\n    \r\n    if (params && params.thresholdType !== undefined &&\r\n        this.volume instanceof Volume\r\n    ) {\r\n      if (this.thresholdType === 'value' &&\r\n          params.thresholdType === 'sigma'\r\n      ) {\r\n        this.thresholdMin = this.volume.getSigmaForValue(\r\n          this.thresholdMin\r\n        )\r\n        this.thresholdMax = this.volume.getSigmaForValue(\r\n          this.thresholdMax\r\n        )\r\n      } else if (this.thresholdType === 'sigma' &&\r\n                 params.thresholdType === 'value'\r\n      ) {\r\n        this.thresholdMin = this.volume.getValueForSigma(\r\n          this.thresholdMin\r\n        )\r\n        this.thresholdMax = this.volume.getValueForSigma(\r\n          this.thresholdMax\r\n        )\r\n      }\r\n\r\n      this.thresholdType = params.thresholdType\r\n    }\r\n\r\n    if (params && params.radiusType !== undefined) {\r\n      if (params.radiusType === 'radius') {\r\n        this.radius = 0.1\r\n      } else {\r\n        this.radius = parseFloat(params.radiusType)\r\n      }\r\n      what.radius = true\r\n      if (this.dotType === 'sphere' &&\r\n          (!ExtensionFragDepth || this.disableImpostor)\r\n      ) {\r\n        rebuild = true\r\n      }\r\n    }\r\n\r\n    if (params && params.radius !== undefined) {\r\n      what.radius = true\r\n      if (this.dotType === 'sphere' &&\r\n          (!ExtensionFragDepth || this.disableImpostor)\r\n      ) {\r\n        rebuild = true\r\n      }\r\n    }\r\n\r\n    if (params && params.scale !== undefined) {\r\n      what.scale = true\r\n      if (this.dotType === 'sphere' &&\r\n          (!ExtensionFragDepth || this.disableImpostor)\r\n      ) {\r\n        rebuild = true\r\n      }\r\n    }\r\n\r\n    super.setParameters(params, what, rebuild)\r\n\r\n    return this\r\n  }\r\n}\r\n\r\nexport default DotRepresentation\r\n","/**\r\n * @file Image Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport {\r\n    // @ts-ignore: unused import Vector3, Matrix4 required for declaration only\r\n    Vector2, Vector3, Matrix4, BufferAttribute, DataTexture,\r\n    NormalBlending, NearestFilter, LinearFilter\r\n} from 'three'\r\n\r\nimport '../shader/Image.vert'\r\nimport '../shader/Image.frag'\r\n\r\nimport { Picker } from '../utils/picker'\r\nimport Buffer, { BufferDefaultParameters, BufferParameterTypes, BufferTypes } from './buffer'\r\n\r\n\r\nconst quadIndices = new Uint16Array([\r\n  0, 1, 2,\r\n  1, 3, 2\r\n])\r\n\r\nconst quadUvs = new Float32Array([\r\n  0, 1,\r\n  0, 0,\r\n  1, 1,\r\n  1, 0\r\n])\r\n\r\ntype ImageFilterTypes = 'nearest'|'linear'|'cubic-bspline'|'cubic-catmulrom'|'cubic-mitchell'\r\n\r\nexport interface ImageBufferData {\r\n  position: Float32Array\r\n  imageData: Uint8Array\r\n  width: number\r\n  height: number\r\n\r\n  picking?: Picker\r\n}\r\n\r\nexport const ImageBufferDefaultParameters = Object.assign({\r\n  filter: 'nearest' as ImageFilterTypes,\r\n  forceTransparent: true\r\n}, BufferDefaultParameters)\r\nexport type ImageBufferParameters = typeof ImageBufferDefaultParameters\r\n\r\nexport const ImageBufferParameterTypes = Object.assign({\r\n  filter: { updateShader: true, uniform: true }\r\n}, BufferParameterTypes)\r\n\r\n/**\r\n * Image buffer. Draw a single image. Optionally interpolate.\r\n */\r\nclass ImageBuffer extends Buffer {\r\n  parameterTypes = ImageBufferParameterTypes\r\n  get defaultParameters() { return ImageBufferDefaultParameters }\r\n  parameters: ImageBufferParameters\r\n\r\n  alwaysTransparent = true\r\n  hasWireframe = false\r\n  vertexShader = 'Image.vert'\r\n  fragmentShader = 'Image.frag'\r\n\r\n  tex: DataTexture\r\n  pickingTex: DataTexture\r\n\r\n  /**\r\n   * @param {Object} data - buffer data\r\n   * @param {Float32Array} data.position - image position\r\n   * @param {Float32Array} data.imageData - image data, rgba channels\r\n   * @param {Float32Array} data.width - image width\r\n   * @param {Float32Array} data.height - image height\r\n   * @param {Picker} [data.picking] - picking ids\r\n   * @param {BufferParameters} [params] - parameters object\r\n   */\r\n  constructor (data: ImageBufferData, params: ImageBufferParameters) {\r\n    super({\r\n      position: data.position,\r\n      index: quadIndices,\r\n      picking: data.picking\r\n    }, params)\r\n\r\n    const {imageData, width, height} = data\r\n\r\n    const tex = new DataTexture(imageData, width, height)\r\n    tex.flipY = true\r\n    this.tex = tex\r\n\r\n    const n = imageData.length\r\n    const pickingData = new Uint8Array(n)\r\n    for (let i = 0; i < n; i += 4) {\r\n      const j = i / 4\r\n      pickingData[ i ] = j >> 16 & 255\r\n      pickingData[ i + 1 ] = j >> 8 & 255\r\n      pickingData[ i + 2 ] = j & 255\r\n    }\r\n\r\n    const pickingTex = new DataTexture(pickingData, width, height)\r\n    pickingTex.flipY = true\r\n    pickingTex.minFilter = NearestFilter\r\n    pickingTex.magFilter = NearestFilter\r\n    this.pickingTex = pickingTex\r\n\r\n    this.addUniforms({\r\n      'map': { value: tex },\r\n      'pickingMap': { value: pickingTex },\r\n      'mapSize': { value: new Vector2(width, height) }\r\n    })\r\n\r\n    this.geometry.setAttribute('uv', new BufferAttribute(quadUvs, 2))\r\n  }\r\n\r\n  getDefines (type: BufferTypes) {\r\n    const defines = super.getDefines(type)\r\n    const filter = this.parameters.filter\r\n\r\n    if (filter.startsWith('cubic')) {\r\n      defines.CUBIC_INTERPOLATION = 1\r\n      if (filter.endsWith('bspline')) {\r\n        defines.BSPLINE_FILTER = 1\r\n      } else if (filter.endsWith('catmulrom')) {\r\n        defines.CATMULROM_FILTER = 1\r\n      } else if (filter.endsWith('mitchell')) {\r\n        defines.MITCHELL_FILTER = 1\r\n      }\r\n    }\r\n\r\n    return defines\r\n  }\r\n\r\n  updateTexture () {\r\n    const tex = this.tex\r\n    const filter = this.parameters.filter\r\n\r\n    if (filter.startsWith('cubic')) {\r\n      tex.minFilter = NearestFilter\r\n      tex.magFilter = NearestFilter\r\n    } else if (filter === 'linear') {\r\n      tex.minFilter = LinearFilter\r\n      tex.magFilter = LinearFilter\r\n    } else {  // filter === \"nearest\"\r\n      tex.minFilter = NearestFilter\r\n      tex.magFilter = NearestFilter\r\n    }\r\n\r\n    tex.needsUpdate = true\r\n    this.pickingTex.needsUpdate = true\r\n  }\r\n\r\n  makeMaterial () {\r\n    super.makeMaterial()\r\n    this.updateTexture()\r\n\r\n    const m = this.material\r\n    m.uniforms.map.value = this.tex\r\n    m.blending = NormalBlending\r\n    m.needsUpdate = true\r\n\r\n    const wm = this.wireframeMaterial\r\n    wm.uniforms.map.value = this.tex\r\n    wm.blending = NormalBlending\r\n    wm.needsUpdate = true\r\n\r\n    const pm = this.pickingMaterial\r\n    pm.uniforms.map.value = this.tex\r\n    pm.uniforms.pickingMap.value = this.pickingTex\r\n    pm.blending = NormalBlending\r\n    pm.needsUpdate = true\r\n  }\r\n\r\n  setUniforms (data: any) {  // TODO\r\n    if (data && data.filter !== undefined) {\r\n      this.updateTexture()\r\n      data.map = this.tex\r\n    }\r\n\r\n    super.setUniforms(data)\r\n  }\r\n}\r\n\r\nexport default ImageBuffer\r\n","/**\r\n * @file Volume Slice\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3 } from 'three'\r\n\r\nimport { ColormakerRegistry } from '../globals'\r\nimport { defaults } from '../utils'\r\nimport { SlicePicker } from '../utils/picker'\r\nimport { Volume } from '../ngl';\r\nimport { SliceRepresentationParameters } from '../representation/slice-representation';\r\n\r\nclass VolumeSlice {\r\n  dimension: 'x'|'y'|'z'\r\n  positionType: 'percent'|'coordinate'\r\n  position: number\r\n  thresholdType: 'sigma'|'value'\r\n  thresholdMin: number\r\n  thresholdMax: number\r\n  normalize: boolean\r\n  volume: Volume\r\n\r\n  constructor (volume: Volume, params: Partial<SliceRepresentationParameters>) {\r\n    const p = params || {}\r\n\r\n    this.dimension = defaults(p.dimension, 'x')\r\n    this.positionType = defaults(p.positionType, 'percent')\r\n    this.position = defaults(p.position, 30)\r\n    this.thresholdType = defaults(p.thresholdType, 'sigma')\r\n    this.thresholdMin = defaults(p.thresholdMin, -Infinity)\r\n    this.thresholdMax = defaults(p.thresholdMax, Infinity)\r\n    this.normalize = defaults(p.normalize, false)\r\n\r\n    this.volume = volume\r\n  }\r\n\r\n  getPositionFromCoordinate (coord: number) {\r\n    const dim = this.dimension\r\n    const v = this.volume\r\n    const m = v.matrix\r\n\r\n    const mp = new Vector3().setFromMatrixPosition(m)[ dim ]\r\n    const ms = new Vector3().setFromMatrixScale(m)[ dim ]\r\n\r\n    let vn\r\n    if (dim === 'x') {\r\n      vn = v.nx\r\n    } else if (dim === 'y') {\r\n      vn = v.ny\r\n    } else {\r\n      vn = v.nz\r\n    }\r\n\r\n    return Math.round((((coord - mp) / (vn / 100)) + 1) / ms)\r\n  }\r\n\r\n  getData (params: any) {\r\n    params = params || {}\r\n\r\n    const v = this.volume\r\n    const d = v.data\r\n    const m = v.matrix\r\n\r\n    let p: number\r\n    if (this.positionType === 'coordinate') {\r\n      p = this.getPositionFromCoordinate(this.position)\r\n    } else {\r\n      p = this.position\r\n    }\r\n\r\n    function pos (dimLen: number) {\r\n      return Math.round((dimLen / 100) * (p - 1))\r\n    }\r\n\r\n    function index (x: number, y: number, z: number, i: number) {\r\n      return (z * v.ny * v.nx + y * v.nx + x) * 3 + i\r\n    }\r\n\r\n    const position = new Float32Array(4 * 3)\r\n    const vec = new Vector3()\r\n\r\n    let width, height\r\n    let x\r\n    let y\r\n    let z\r\n    let x0 = 0\r\n    let y0 = 0\r\n    let z0 = 0\r\n    let nx = v.nx\r\n    let ny = v.ny\r\n    let nz = v.nz\r\n\r\n    function setVec (x: number, y: number, z: number, offset: number) {\r\n      vec.set(x, y, z).applyMatrix4(m).toArray(position as any, offset)\r\n    }\r\n\r\n    if (this.dimension === 'x') {\r\n      x = pos(v.nx)\r\n      y = v.ny - 1\r\n      z = v.nz - 1\r\n\r\n      width = v.nz\r\n      height = v.ny\r\n\r\n      x0 = x\r\n      nx = x0 + 1\r\n\r\n      setVec(x, 0, 0, 0)\r\n      setVec(x, y, 0, 3)\r\n      setVec(x, 0, z, 6)\r\n      setVec(x, y, z, 9)\r\n    } else if (this.dimension === 'y') {\r\n      x = v.nx - 1\r\n      y = pos(v.ny)\r\n      z = v.nz - 1\r\n\r\n      width = v.nz\r\n      height = v.nx\r\n\r\n      y0 = y\r\n      ny = y0 + 1\r\n\r\n      setVec(0, y, 0, 0)\r\n      setVec(x, y, 0, 3)\r\n      setVec(0, y, z, 6)\r\n      setVec(x, y, z, 9)\r\n    } else if (this.dimension === 'z') {\r\n      x = v.nx - 1\r\n      y = v.ny - 1\r\n      z = pos(v.nz)\r\n\r\n      width = v.nx\r\n      height = v.ny\r\n\r\n      z0 = z\r\n      nz = z0 + 1\r\n\r\n      setVec(0, 0, z, 0)\r\n      setVec(0, y, z, 3)\r\n      setVec(x, 0, z, 6)\r\n      setVec(x, y, z, 9)\r\n    }\r\n\r\n    let i = 0\r\n    let j = 0\r\n    const imageData = new Uint8Array(<number>width * <number>height * 4)\r\n    const pickingArray = new Float32Array(<number>width * <number>height)\r\n\r\n    let tMin, tMax\r\n    if (this.thresholdType === 'sigma') {\r\n      tMin = v.getValueForSigma(this.thresholdMin)\r\n      tMax = v.getValueForSigma(this.thresholdMax)\r\n    } else {\r\n      tMin = this.thresholdMin\r\n      tMax = this.thresholdMax\r\n    }\r\n\r\n    const cp = Object.assign({}, params.colorParams, { volume: v })\r\n    if (this.normalize) {\r\n      cp.domain = [ 0, 1 ]\r\n    }\r\n    const colormaker = ColormakerRegistry.getScheme(cp)\r\n    const tmp = new Float32Array(3)\r\n    const scale = colormaker.getScale()\r\n\r\n    let min = 0, max, diff = 0\r\n    if (this.normalize) {\r\n      min = +Infinity\r\n      max = -Infinity\r\n      for (let iy = y0; iy < ny; ++iy) {\r\n        for (let ix = x0; ix < nx; ++ix) {\r\n          for (let iz = z0; iz < nz; ++iz) {\r\n            const idx = index(ix, iy, iz, 0) / 3\r\n            const val = d[ idx ]\r\n            if (val < min) min = val\r\n            if (val > max) max = val\r\n          }\r\n        }\r\n      }\r\n      diff = max - min\r\n    }\r\n\r\n    for (let iy = y0; iy < ny; ++iy) {\r\n      for (let ix = x0; ix < nx; ++ix) {\r\n        for (let iz = z0; iz < nz; ++iz) {\r\n          const idx = index(ix, iy, iz, 0) / 3\r\n          let val = d[ idx ]\r\n          if (this.normalize) {\r\n            val = (val - min) / diff\r\n          }\r\n\r\n          colormaker.colorToArray(scale(val), tmp)\r\n          imageData[ i ] = Math.round(tmp[ 0 ] * 255)\r\n          imageData[ i + 1 ] = Math.round(tmp[ 1 ] * 255)\r\n          imageData[ i + 2 ] = Math.round(tmp[ 2 ] * 255)\r\n          imageData[ i + 3 ] = (val > tMin && val < tMax) ? 255 : 0\r\n\r\n          pickingArray[ j ] = idx\r\n\r\n          ++j\r\n          i += 4\r\n        }\r\n      }\r\n    }\r\n\r\n    const picking = new SlicePicker(pickingArray, v)\r\n\r\n    return { position, imageData, width, height, picking }\r\n  }\r\n}\r\n\r\nexport default VolumeSlice\r\n","/**\r\n * @file Slice Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { defaults } from '../utils'\r\nimport Representation, { RepresentationParameters } from './representation'\r\nimport ImageBuffer, { ImageBufferParameters, ImageBufferData } from '../buffer/image-buffer'\r\nimport VolumeSlice from '../surface/volume-slice'\r\nimport Viewer from '../viewer/viewer';\r\nimport { Volume } from '../ngl';\r\n\r\n/**\r\n * Slice representation parameter object. Extends {@link RepresentationParameters}\r\n *\r\n * @typedef {Object} SliceRepresentationParameters - slice representation parameters\r\n *\r\n * @property {String} filter - filter applied to map the volume data on the slice, one of \"nearest\", \"linear\", \"cubic-bspline\", \"cubic-catmulrom\", \"cubic-mitchell\".\r\n * @property {String} positionType - Meaning of the position value. Either \"percent\" od \"coordinate\".\r\n * @property {Number} position - position of the slice.\r\n * @property {String} dimension - one of \"x\", \"y\" or \"z\"\r\n * @property {String} thresholdType - Meaning of the threshold values. Either *value* for the literal value or *sigma* as a factor of the sigma of the data. For volume data only.\r\n * @property {Number} thresholdMin - Minimum value to be displayed. For volume data only.\r\n * @property {Number} thresholdMax - Maximum value to be displayed. For volume data only.\r\n * @property {Boolean} normalize - Flag indicating wheather to normalize the data in a slice when coloring.\r\n */\r\nexport interface SliceRepresentationParameters extends RepresentationParameters {\r\n  filter: 'nearest'|'linear'|'cubic-bspline'|'cubic-catmulrom'|'cubic-mitchell'\r\n  positionType: 'percent'|'coordinate'\r\n  position: number\r\n  dimension: 'x'|'y'|'z'\r\n  thresholdType: 'value'|'sigma'\r\n  thresholdMin: number\r\n  thresholdMax: number\r\n  normalize: boolean\r\n}\r\n/**\r\n * Slice representation\r\n */\r\nclass SliceRepresentation extends Representation {\r\n  protected filter: 'nearest'|'linear'|'cubic-bspline'|'cubic-catmulrom'|'cubic-mitchell'\r\n  protected positionType: 'percent'|'coordinate'\r\n  protected position: number\r\n  protected dimension: 'x'|'y'|'z'\r\n  protected thresholdType: 'value'|'sigma'\r\n  protected thresholdMin: number\r\n  protected thresholdMax: number\r\n  protected normalize: boolean\r\n  protected volume: Volume\r\n  /**\r\n   * Create Slice representation object\r\n   * @param {Volume} surface - the volume to be represented\r\n   * @param {Viewer} viewer - a viewer object\r\n   * @param {SliceRepresentationParameters} params - slice representation parameters\r\n   */\r\n  constructor (volume: Volume, viewer: Viewer, params: Partial<SliceRepresentationParameters>) {\r\n    super(volume, viewer, params)\r\n\r\n    this.type = 'slice'\r\n\r\n    this.parameters = Object.assign({\r\n\r\n      filter: {\r\n        type: 'select',\r\n        buffer: true,\r\n        options: {\r\n          'nearest': 'nearest',\r\n          'linear': 'linear',\r\n          'cubic-bspline': 'cubic-bspline',\r\n          'cubic-catmulrom': 'cubic-catmulrom',\r\n          'cubic-mitchell': 'cubic-mitchell'\r\n        }\r\n      },\r\n      positionType: {\r\n        type: 'select',\r\n        rebuild: true,\r\n        options: {\r\n          'percent': 'percent', 'coordinate': 'coordinate'\r\n        }\r\n      },\r\n      position: {\r\n        type: 'range',\r\n        step: 0.1,\r\n        max: 100,\r\n        min: 1,\r\n        rebuild: true\r\n      },\r\n      dimension: {\r\n        type: 'select',\r\n        rebuild: true,\r\n        options: {\r\n          'x': 'x', 'y': 'y', 'z': 'z'\r\n        }\r\n      },\r\n      thresholdType: {\r\n        type: 'select',\r\n        rebuild: true,\r\n        options: {\r\n          'value': 'value', 'sigma': 'sigma'\r\n        }\r\n      },\r\n      thresholdMin: {\r\n        type: 'number', precision: 3, max: Infinity, min: -Infinity, rebuild: true\r\n      },\r\n      thresholdMax: {\r\n        type: 'number', precision: 3, max: Infinity, min: -Infinity, rebuild: true\r\n      },\r\n      normalize: {\r\n        type: 'boolean', rebuild: true\r\n      }\r\n\r\n    }, this.parameters, {\r\n\r\n      flatShaded: null,\r\n      side: null,\r\n      wireframe: null,\r\n      linewidth: null,\r\n      colorScheme: null,\r\n\r\n      roughness: null,\r\n      metalness: null,\r\n      diffuse: null\r\n\r\n    })\r\n\r\n    this.volume = volume\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params: Partial<SliceRepresentationParameters>) {\r\n    const v = this.volume\r\n    const p = params || {}\r\n    p.colorDomain = defaults(p.colorDomain, [ v.min, v.max ])\r\n    p.colorScheme = defaults(p.colorScheme, 'value')\r\n    p.colorScale = defaults(p.colorScale, 'Spectral')\r\n\r\n    this.colorScheme = 'value'\r\n    this.dimension = defaults(p.dimension, 'x')\r\n    this.filter = defaults(p.filter, 'cubic-bspline')\r\n    this.positionType = defaults(p.positionType, 'percent')\r\n    this.position = defaults(p.position, 30)\r\n    this.thresholdType = defaults(p.thresholdType, 'sigma')\r\n    this.thresholdMin = defaults(p.thresholdMin, -Infinity)\r\n    this.thresholdMax = defaults(p.thresholdMax, Infinity)\r\n    this.normalize = defaults(p.normalize, false)\r\n\r\n    super.init(p)\r\n\r\n    this.build()\r\n  }\r\n\r\n  attach (callback: () => void) {\r\n    this.bufferList.forEach(buffer => {\r\n      this.viewer.add(buffer)\r\n    })\r\n    this.setVisibility(this.visible)\r\n\r\n    callback()\r\n  }\r\n\r\n  create () {\r\n    const volumeSlice = new VolumeSlice(this.volume, {\r\n      positionType: this.positionType,\r\n      position: this.position,\r\n      dimension: this.dimension,\r\n      thresholdType: this.thresholdType,\r\n      thresholdMin: this.thresholdMin,\r\n      thresholdMax: this.thresholdMax,\r\n      normalize: this.normalize\r\n    })\r\n\r\n    const sliceBuffer = new ImageBuffer(\r\n      volumeSlice.getData({ colorParams: this.getColorParams() }) as ImageBufferData,\r\n      this.getBufferParams({\r\n        filter: this.filter\r\n      }) as ImageBufferParameters\r\n    )\r\n\r\n    this.bufferList.push(sliceBuffer)\r\n  }\r\n}\r\n\r\nexport default SliceRepresentation\r\n","/**\r\n * @file Representation Utils\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Debug, Log, RepresentationRegistry } from '../globals'\r\n\r\nimport Viewer from '../viewer/viewer'\r\nimport Structure from '../structure/structure'\r\nimport Surface from '../surface/surface'\r\nimport Volume from '../surface/volume'\r\nimport Shape from '../geometry/shape'\r\n\r\nimport BufferRepresentation from './buffer-representation'\r\nimport SurfaceRepresentation from './surface-representation'\r\nimport DotRepresentation from './dot-representation'\r\nimport SliceRepresentation from './slice-representation'\r\n\r\nfunction logReprUnknown (type: string) {\r\n  Log.error(`makeRepresentation: representation type ${type} unknown`)\r\n}\r\n\r\nexport function makeRepresentation (type: string, object: any, viewer: Viewer, params: any) {  // TODO\r\n  if (Debug) Log.time('makeRepresentation ' + type)\r\n\r\n  var ReprClass\r\n\r\n  if (object instanceof Structure) {\r\n    ReprClass = RepresentationRegistry.get(type)\r\n\r\n    if (!ReprClass) {\r\n      logReprUnknown(type)\r\n      return\r\n    }\r\n  } else if (object instanceof Surface) {\r\n    if (type === 'surface') {\r\n      ReprClass = SurfaceRepresentation\r\n    } else if (type === 'dot') {\r\n      ReprClass = DotRepresentation\r\n    } else {\r\n      logReprUnknown(type)\r\n      return\r\n    }\r\n  } else if (object instanceof Volume) {\r\n    if (type === 'surface') {\r\n      ReprClass = SurfaceRepresentation\r\n    } else if (type === 'dot') {\r\n      ReprClass = DotRepresentation\r\n    } else if (type === 'slice') {\r\n      ReprClass = SliceRepresentation\r\n    } else {\r\n      logReprUnknown(type)\r\n      return\r\n    }\r\n  } else if (object instanceof Shape) {\r\n    ReprClass = BufferRepresentation\r\n    object = object.getBufferList()\r\n  } else if (type === 'buffer') {\r\n    ReprClass = BufferRepresentation\r\n  } else {\r\n    Log.error('makeRepresentation: object ' + object + ' unknown')\r\n    return\r\n  }\r\n\r\n  const repr = new ReprClass(object, viewer, params)\r\n\r\n  if (Debug) Log.timeEnd('makeRepresentation ' + type)\r\n\r\n  return repr\r\n}\r\n","/**\r\n * @file Element\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Signal } from 'signals'\r\n\r\nimport { createParams } from '../utils'\r\nimport { generateUUID } from '../math/math-utils'\r\nimport Stage from '../stage/stage'\r\n\r\nexport const ElementDefaultParameters = {\r\n  name: 'some element',\r\n  status: ''\r\n}\r\nexport type ElementParameters = typeof ElementDefaultParameters\r\n\r\nexport interface ElementSignals {\r\n  statusChanged: Signal  // on status change\r\n  nameChanged: Signal  // on name change\r\n  disposed: Signal  // on dispose\r\n}\r\n\r\n/**\r\n * Element base class\r\n */\r\nabstract class Element {\r\n  /**\r\n   * Events emitted by the element\r\n   */\r\n  signals: ElementSignals = {\r\n    statusChanged: new Signal(),\r\n    nameChanged: new Signal(),\r\n    disposed: new Signal()\r\n  }\r\n  readonly parameters: ElementParameters\r\n  readonly uuid: string\r\n\r\n  get defaultParameters() { return ElementDefaultParameters }\r\n\r\n  /**\r\n   * @param {Stage} stage - stage object the component belongs to\r\n   * @param {ElementParameters} params - component parameters\r\n   */\r\n  constructor (readonly stage: Stage, params: Partial<ElementParameters> = {}) {\r\n    this.parameters = createParams(params, this.defaultParameters)\r\n    this.uuid = generateUUID()\r\n  }\r\n\r\n  abstract get type (): string\r\n\r\n  get name () { return this.parameters.name }\r\n\r\n  setStatus (value: string) {\r\n    this.parameters.status = value\r\n    this.signals.statusChanged.dispatch(value)\r\n\r\n    return this\r\n  }\r\n\r\n  setName (value: string) {\r\n    this.parameters.name = value\r\n    this.signals.nameChanged.dispatch(value)\r\n\r\n    return this\r\n  }\r\n\r\n  dispose () {\r\n    this.signals.disposed.dispatch()\r\n  }\r\n}\r\n\r\nexport default Element\r\n","/**\r\n * @file Representation Element\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Signal } from 'signals'\r\nimport { Color } from 'three'\r\n\r\nimport Stage from '../stage/stage'\r\nimport Representation, { RepresentationParameters } from '../representation/representation'\r\nimport Component from './component'\r\nimport Element, { ElementDefaultParameters, ElementSignals } from './element'\r\n\r\nexport const RepresentationElementDefaultParameters = Object.assign({\r\n  visible: true\r\n}, ElementDefaultParameters)\r\nexport type RepresentationElementParameters = typeof RepresentationElementDefaultParameters\r\n\r\nexport interface RepresentationElementSignals extends ElementSignals {\r\n  visibilityChanged: Signal  // on visibility change\r\n  parametersChanged: Signal  // on parameters change\r\n}\r\n\r\n/**\r\n * Element wrapping a {@link Representation} object\r\n */\r\nclass RepresentationElement extends Element {\r\n  signals: RepresentationElementSignals\r\n  parameters: RepresentationElementParameters\r\n  get defaultParameters() { return RepresentationElementDefaultParameters }\r\n\r\n  repr: Representation\r\n\r\n  /**\r\n   * Create representation component\r\n   * @param {Stage} stage - stage object the component belongs to\r\n   * @param {Representation} repr - representation object to wrap\r\n   * @param {RepresentationParameters} [params] - component parameters\r\n   * @param {Component} [parent] - parent component\r\n   */\r\n  constructor (stage: Stage, repr: Representation, params: Partial<RepresentationElementParameters> = {}, readonly parent: Component) {\r\n    super(stage, Object.assign({ name: repr.type }, params))\r\n\r\n    this.signals = Object.assign({\r\n      visibilityChanged: new Signal(),\r\n      parametersChanged: new Signal()\r\n    }, this.signals)\r\n\r\n    this.setRepresentation(repr)\r\n  }\r\n\r\n  get visible () { return this.parameters.visible }\r\n\r\n  /**\r\n   * Component type\r\n   * @type {String}\r\n   */\r\n  get type () { return 'representation' }\r\n\r\n  getType () {\r\n    return this.repr.type\r\n  }\r\n\r\n  setRepresentation (repr: Representation) {\r\n    this._disposeRepresentation()\r\n    this.repr = repr\r\n    // this.name = repr.type;\r\n    this.stage.tasks.listen(this.repr.tasks)\r\n    this.updateVisibility()\r\n  }\r\n\r\n  _disposeRepresentation () {\r\n    if (this.repr) {\r\n      this.stage.tasks.unlisten(this.repr.tasks)\r\n      this.repr.dispose()\r\n    }\r\n  }\r\n\r\n  dispose () {\r\n    if (this.parent && this.parent.hasRepresentation(this)) {\r\n      this.parent.removeRepresentation(this)\r\n    } else {\r\n      this._disposeRepresentation()\r\n      this.signals.disposed.dispatch()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the visibility of the component, takes parent visibility into account\r\n   * @param {Boolean} value - visibility flag\r\n   * @return {RepresentationElement} this object\r\n   */\r\n  setVisibility (value: boolean) {\r\n    this.parameters.visible = value\r\n    this.updateVisibility()\r\n    this.signals.visibilityChanged.dispatch(this.parameters.visible)\r\n\r\n    return this\r\n  }\r\n\r\n  getVisibility () {\r\n    if (this.parent) {\r\n      return this.parent.parameters.visible && this.parameters.visible\r\n    } else {\r\n      return this.parameters.visible\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggle visibility of the component, takes parent visibility into account\r\n   * @return {RepresentationElement} this object\r\n   */\r\n  toggleVisibility () {\r\n    return this.setVisibility(!this.parameters.visible)\r\n  }\r\n\r\n  updateVisibility () {\r\n    this.repr.setVisibility(this.getVisibility())\r\n  }\r\n\r\n  /**\r\n   * Set selection\r\n   * @param {Object} what - flags indicating what attributes to update\r\n   * @param {Boolean} what.position - update position attribute\r\n   * @param {Boolean} what.color - update color attribute\r\n   * @param {Boolean} what.radius - update radius attribute\r\n   * @return {RepresentationElement} this object\r\n   */\r\n  update (what: any) {  // TODO\r\n    (this.repr as any).update(what)  // TODO\r\n\r\n    return this\r\n  }\r\n\r\n  build (params?: any) {  // TODO\r\n    this.repr.build(params)\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Set selection\r\n   * @param {String} string - selection string\r\n   * @return {RepresentationElement} this object\r\n   */\r\n  setSelection (string: string) {\r\n    const repr: any = this.repr  // TODO\r\n\r\n    if (repr.setSelection) {\r\n      repr.setSelection(string)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Set representation parameters\r\n   * @param {RepresentationParameters} params - parameter object\r\n   * @return {RepresentationElement} this object\r\n   */\r\n  setParameters (params: any) {  // TODO\r\n    this.repr.setParameters(params)\r\n    this.signals.parametersChanged.dispatch(\r\n      this.repr.getParameters()\r\n    )\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get representation parameters\r\n   * @return {RepresentationParameters} parameter object\r\n   */\r\n  getParameters (): Partial<RepresentationParameters> {\r\n    return this.repr.getParameters()\r\n  }\r\n\r\n  /**\r\n   * Set color\r\n   * @param {String|Color|Hex} value - color value\r\n   * @return {RepresentationElement} this object\r\n   */\r\n  setColor (value: string|number|Color) {\r\n    this.repr.setColor(value)\r\n\r\n    return this\r\n  }\r\n}\r\n\r\nexport default RepresentationElement\r\n","\r\n/**\r\n * @file Component\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3, Quaternion, Matrix4, Euler, Box3 } from 'three'\r\nimport { Signal } from 'signals'\r\n\r\nimport { defaults, createParams } from '../utils'\r\nimport { generateUUID } from '../math/math-utils'\r\nimport Annotation, { AnnotationParams } from '../component/annotation'\r\nimport ComponentControls from '../controls/component-controls'\r\nimport { makeRepresentation } from '../representation/representation-utils'\r\nimport RepresentationElement from './representation-element'\r\nimport Stage from '../stage/stage'\r\nimport Viewer from '../viewer/viewer'\r\n\r\nconst _m = new Matrix4()\r\nconst _v = new Vector3()\r\n\r\nexport const ComponentDefaultParameters = {\r\n  name: '',\r\n  status: '',\r\n  visible: true\r\n}\r\nexport type ComponentParameters = typeof ComponentDefaultParameters\r\n\r\n\r\nexport interface ComponentSignals {\r\n  representationAdded: Signal  // when a representation is added\r\n  representationRemoved: Signal  // when a representation is removed\r\n  visibilityChanged: Signal  // on visibility change\r\n  matrixChanged: Signal  // on matrix change\r\n  statusChanged: Signal  // on status change\r\n  nameChanged: Signal  // on name change\r\n  disposed: Signal  // on dispose\r\n}\r\n\r\n/**\r\n * Base class for components\r\n */\r\nabstract class Component {\r\n  /**\r\n   * Events emitted by the component\r\n   */\r\n  readonly signals: ComponentSignals = {\r\n    representationAdded: new Signal(),\r\n    representationRemoved: new Signal(),\r\n    visibilityChanged: new Signal(),\r\n    matrixChanged: new Signal(),\r\n    statusChanged: new Signal(),\r\n    nameChanged: new Signal(),\r\n    disposed: new Signal()\r\n  }\r\n\r\n  readonly parameters: ComponentParameters\r\n  get defaultParameters () { return ComponentDefaultParameters }\r\n\r\n  readonly uuid: string\r\n  readonly viewer: Viewer\r\n\r\n  reprList: RepresentationElement[] = []\r\n  annotationList: Annotation[] = []\r\n\r\n  matrix = new Matrix4()\r\n  position = new Vector3()\r\n  quaternion = new Quaternion()\r\n  scale = new Vector3(1, 1, 1)\r\n  transform = new Matrix4()\r\n\r\n  controls: ComponentControls\r\n\r\n  /**\r\n   * @param {Stage} stage - stage object the component belongs to\r\n   * @param {ComponentParameters} params - parameter object\r\n   */\r\n  constructor (readonly stage: Stage, readonly object: any, params: Partial<ComponentParameters> = {}) {\r\n    this.parameters = createParams(params, this.defaultParameters)\r\n    this.uuid = generateUUID()\r\n    this.viewer = stage.viewer\r\n\r\n    this.controls = new ComponentControls(this)\r\n  }\r\n\r\n  abstract get type (): string\r\n\r\n  get name () { return this.parameters.name }\r\n  get status () { return this.parameters.status }\r\n  get visible () { return this.parameters.visible }\r\n\r\n  /**\r\n   * Set position transform\r\n   *\r\n   * @example\r\n   * // translate by 25 angstrom along x axis\r\n   * component.setPosition([ 25, 0, 0 ]);\r\n   *\r\n   * @param {Vector3|Array} p - the coordinates\r\n   * @return {Component} this object\r\n   */\r\n  setPosition (p: [number, number, number]|Vector3) {\r\n    if (Array.isArray(p)) {\r\n      this.position.fromArray(p)\r\n    } else {\r\n      this.position.copy(p)\r\n    }\r\n    this.updateMatrix()\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Set local rotation transform\r\n   * (for global rotation use setTransform)\r\n   *\r\n   * @example\r\n   * // rotate by 2 degree radians on x axis\r\n   * component.setRotation( [ 2, 0, 0 ] );\r\n   *\r\n   * @param {Quaternion|Euler|Array} r - the rotation\r\n   * @return {Component} this object\r\n   */\r\n  setRotation (r: [number, number, number]|Euler|Quaternion) {\r\n    if (Array.isArray(r)) {\r\n      if (r.length === 3) {\r\n        const e = new Euler().fromArray(r)\r\n        this.quaternion.setFromEuler(e)\r\n      } else {\r\n        this.quaternion.fromArray(r)\r\n      }\r\n    } else if (r instanceof Euler) {\r\n      this.quaternion.setFromEuler(r)\r\n    } else {\r\n      this.quaternion.copy(r)\r\n    }\r\n    this.updateMatrix()\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Set scale transform\r\n   *\r\n   * @example\r\n   * // scale by factor of two\r\n   * component.setScale( 2 );\r\n   *\r\n   * @param {Number} s - the scale\r\n   * @return {Component} this object\r\n   */\r\n  setScale (s: number) {\r\n    this.scale.set(s, s, s)\r\n    this.updateMatrix()\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Set general transform. Is applied before and in addition\r\n   * to the position, rotation and scale transformations\r\n   *\r\n   * @example\r\n   * component.setTransform( matrix );\r\n   *\r\n   * @param {Matrix4} m - the matrix\r\n   * @return {Component} this object\r\n   */\r\n  setTransform (m: Matrix4) {\r\n    this.transform.copy(m)\r\n    this.updateMatrix()\r\n\r\n    return this\r\n  }\r\n\r\n  updateMatrix () {\r\n    const c = this.getCenterUntransformed(_v)\r\n    this.matrix.makeTranslation(-c.x, -c.y, -c.z)\r\n\r\n    _m.makeRotationFromQuaternion(this.quaternion)\r\n    this.matrix.premultiply(_m)\r\n\r\n    _m.makeScale(this.scale.x, this.scale.y, this.scale.z)\r\n    this.matrix.premultiply(_m)\r\n\r\n    const p = this.position\r\n    _m.makeTranslation(p.x + c.x, p.y + c.y, p.z + c.z)\r\n    this.matrix.premultiply(_m)\r\n\r\n    this.matrix.premultiply(this.transform)\r\n\r\n    this.updateRepresentationMatrices()\r\n\r\n    this.stage.viewer.updateBoundingBox()\r\n\r\n    this.signals.matrixChanged.dispatch(this.matrix)\r\n  }\r\n\r\n  /**\r\n   * Propogates our matrix to each representation\r\n   */\r\n  updateRepresentationMatrices () {\r\n    this.reprList.forEach(repr => {\r\n      repr.setParameters({ matrix: this.matrix })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Add an anotation object\r\n   * @param {Vector3} position - the 3d position\r\n   * @param {String|Element} content - the HTML content\r\n   * @param {Object} [params] - parameters\r\n   * @param {Integer} params.offsetX - 2d offset in x direction\r\n   * @param {Integer} params.offsetY - 2d offset in y direction\r\n   * @return {Annotation} the added annotation object\r\n   */\r\n  addAnnotation (position: Vector3, content: string|HTMLElement, params: AnnotationParams) {\r\n    const annotation = new Annotation(this, position, content, params)\r\n    this.annotationList.push(annotation)\r\n\r\n    return annotation\r\n  }\r\n\r\n  /**\r\n   * Iterator over each annotation and executing the callback\r\n   * @param  {Function} callback - function to execute\r\n   * @return {undefined}\r\n   */\r\n  eachAnnotation (callback: (a: Annotation) => void) {\r\n    this.annotationList.slice().forEach(callback)\r\n  }\r\n\r\n  /**\r\n   * Remove the give annotation from the component\r\n   * @param {Annotation} annotation - the annotation to remove\r\n   * @return {undefined}\r\n   */\r\n  removeAnnotation (annotation: Annotation) {\r\n    const idx = this.annotationList.indexOf(annotation)\r\n    if (idx !== -1) {\r\n      this.annotationList.splice(idx, 1)\r\n      annotation.dispose()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove all annotations from the component\r\n   * @return {undefined}\r\n   */\r\n  removeAllAnnotations () {\r\n    this.eachAnnotation(annotation => annotation.dispose())\r\n    this.annotationList.length = 0\r\n  }\r\n\r\n  /**\r\n   * Add a new representation to the component\r\n   * @param {String} type - the name of the representation\r\n   * @param {Object} object - the object on which the representation should be based\r\n   * @param {RepresentationParameters} [params] - representation parameters\r\n   * @return {RepresentationElement} the created representation wrapped into\r\n   *                                   a representation element object\r\n   */\r\n  protected _addRepresentation (type: string, object: any, params: any, hidden = false) {  // TODO\r\n    const p = params || {}\r\n    const sp = this.stage.getParameters() as any  // TODO\r\n    p.matrix = this.matrix.clone()\r\n    p.quality = p.quality || sp.quality\r\n    p.disableImpostor = defaults(p.disableImpostor, !sp.impostor)\r\n    p.useWorker = defaults(p.useWorker, sp.workerDefault)\r\n    p.visible = defaults(p.visible, true)\r\n\r\n    const p2 = Object.assign({}, p, { visible: this.parameters.visible && p.visible })\r\n    const repr = makeRepresentation(type, object, this.viewer, p2)\r\n    const reprElem = new RepresentationElement(this.stage, repr, p, this)\r\n\r\n    if (!hidden) {\r\n      this.reprList.push(reprElem)\r\n      this.signals.representationAdded.dispatch(reprElem)\r\n    }\r\n    return reprElem\r\n  }\r\n\r\n  abstract addRepresentation (type: any, params: any): any\r\n\r\n  addBufferRepresentation (buffer: any, params: any) {  // TODO\r\n    return this._addRepresentation.call(this, 'buffer', buffer, params)\r\n  }\r\n\r\n  hasRepresentation (repr: RepresentationElement) {\r\n    return this.reprList.indexOf(repr) !== -1\r\n  }\r\n\r\n  /**\r\n   * Iterator over each representation and executing the callback\r\n   * @param  {Function} callback - function to execute\r\n   * @return {undefined}\r\n   */\r\n  eachRepresentation (callback: (repr: RepresentationElement) => void) {\r\n    this.reprList.slice().forEach(callback)\r\n  }\r\n\r\n  /**\r\n   * Removes a representation component\r\n   * @param {RepresentationElement} repr - the representation element\r\n   * @return {undefined}\r\n   */\r\n  removeRepresentation (repr: RepresentationElement) {\r\n    const idx = this.reprList.indexOf(repr)\r\n    if (idx !== -1) {\r\n      this.reprList.splice(idx, 1)\r\n      repr.dispose()\r\n      this.signals.representationRemoved.dispatch(repr)\r\n    }\r\n  }\r\n\r\n  updateRepresentations (what: any) {  // TODO\r\n    this.reprList.forEach(repr => repr.update(what))\r\n    this.stage.viewer.requestRender()\r\n  }\r\n\r\n  /**\r\n   * Removes all representation components\r\n   * @return {undefined}\r\n   */\r\n  removeAllRepresentations () {\r\n    this.eachRepresentation(repr => repr.dispose())\r\n  }\r\n\r\n  dispose () {\r\n    this.removeAllAnnotations()\r\n    this.removeAllRepresentations()\r\n\r\n    this.reprList.length = 0\r\n\r\n    this.signals.disposed.dispatch()\r\n  }\r\n\r\n  /**\r\n   * Set the visibility of the component, including added representations\r\n   * @param {Boolean} value - visibility flag\r\n   * @return {Component} this object\r\n   */\r\n  setVisibility (value: boolean) {\r\n    this.parameters.visible = value\r\n\r\n    this.eachRepresentation((repr: RepresentationElement) => repr.updateVisibility())\r\n    this.eachAnnotation((annotation: Annotation) => annotation.updateVisibility())\r\n\r\n    this.signals.visibilityChanged.dispatch(value)\r\n\r\n    return this\r\n  }\r\n\r\n  setStatus (value: string) {\r\n    this.parameters.status = value\r\n    this.signals.statusChanged.dispatch(value)\r\n\r\n    return this\r\n  }\r\n\r\n  setName (value: string) {\r\n    this.parameters.name = value\r\n    this.signals.nameChanged.dispatch(value)\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * @return {Box3} the component's bounding box\r\n   */\r\n  getBox (...args: any[]) {\r\n    return this.getBoxUntransformed(...args)\r\n              .clone().applyMatrix4(this.matrix)\r\n  }\r\n\r\n  /**\r\n   * @return {Vector3} the component's center position\r\n   */\r\n  getCenter (...args: any[]) {\r\n    return this.getCenterUntransformed(...args)\r\n              .clone().applyMatrix4(this.matrix)\r\n  }\r\n\r\n  getZoom (...args: any[]) {\r\n    return this.stage.getZoomForBox(this.getBox(...args))\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @return {Box3} the untransformed component's bounding box\r\n   */\r\n  getBoxUntransformed (...args: any[]): Box3 {\r\n    return new Box3()\r\n  }\r\n\r\n  getCenterUntransformed (...args: any[]) {\r\n    return this.getBoxUntransformed().getCenter(new Vector3())\r\n  }\r\n\r\n  /**\r\n   * Automatically center and zoom the component\r\n   * @param  {Integer} [duration] - duration of the animation, defaults to 0\r\n   * @return {undefined}\r\n   */\r\n  autoView (duration?: number) {\r\n    this.stage.animationControls.zoomMove(\r\n      this.getCenter(),\r\n      this.getZoom(),\r\n      defaults(duration, 0)\r\n    )\r\n  }\r\n}\r\n\r\nexport default Component\r\n","/**\r\n * @file Collection\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Component from './component'\r\nimport Element from './element'\r\n\r\nclass Collection<T extends (Component|Element)> {\r\n  constructor (readonly list: T[] = []) {\r\n    // remove elements from list when they get disposed\r\n    const n = list.length\r\n\r\n    for (let i = 0; i < n; ++i) {\r\n      const elm = list[ i ]\r\n      elm.signals.disposed.add(this._remove, this)\r\n    }\r\n  }\r\n\r\n  _remove (elm: T) {\r\n    const idx = this.list.indexOf(elm)\r\n\r\n    if (idx !== -1) {\r\n      this.list.splice(idx, 1)\r\n    }\r\n  }\r\n\r\n  get first () {\r\n    return this.list.length > 0 ? this.list[0] : undefined\r\n  }\r\n\r\n  forEach (fn: (x: T) => any) {\r\n    this.list.forEach(fn)\r\n\r\n    return this\r\n  }\r\n\r\n  dispose () {\r\n    return this.forEach((elm) => elm.dispose())\r\n  }\r\n}\r\n\r\nexport default Collection\r\n","/**\r\n * @file Component Collection\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport RepresentationElement from './representation-element'\r\nimport Collection from './collection'\r\nimport { GenericColor } from '../types'\r\n\r\nclass RepresentationCollection extends Collection<RepresentationElement> {\r\n  setParameters (params: any) {\r\n    return this.forEach((repr) => repr.setParameters(params))\r\n  }\r\n\r\n  setVisibility (value: boolean) {\r\n    return this.forEach((repr) => repr.setVisibility(value))\r\n  }\r\n\r\n  setSelection (string: string) {\r\n    return this.forEach((repr) => repr.setSelection(string))\r\n  }\r\n\r\n  setColor (color: GenericColor) {\r\n    return this.forEach((repr) => repr.setColor(color))\r\n  }\r\n\r\n  update (what: any) {\r\n    return this.forEach((repr) => repr.update(what))\r\n  }\r\n\r\n  build (params?: any) {\r\n    return this.forEach((repr) => repr.build(params))\r\n  }\r\n\r\n  dispose (params?: any) {\r\n    return this.forEach((repr) => repr.dispose())\r\n  }\r\n}\r\n\r\nexport default RepresentationCollection\r\n","/**\r\n * @file Trajectory Component\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Signal } from 'signals'\r\n\r\nimport Element, { ElementSignals, ElementDefaultParameters } from './element'\r\nimport Stage from '../stage/stage'\r\nimport Trajectory, { TrajectoryParameters } from '../trajectory/trajectory'\r\nimport TrajectoryPlayer, {\r\n  TrajectoryPlayerDirection, TrajectoryPlayerMode, TrajectoryPlayerInterpolateType\r\n} from '../trajectory/trajectory-player'\r\n\r\n/**\r\n * Trajectory component parameter object.\r\n * @typedef {Object} TrajectoryComponentParameters - component parameters\r\n *\r\n * @property {String} name - component name\r\n * @property {Integer} initialFrame - initial frame the trajectory is set to\r\n * @property {Integer} defaultStep - default step size to be used by trajectory players\r\n * @property {Integer} defaultTimeout - default timeout to be used by trajectory players\r\n * @property {String} defaultInterpolateType - one of \"\" (empty string), \"linear\" or \"spline\"\r\n * @property {Integer} defaultInterpolateStep - window size used for interpolation\r\n * @property {String} defaultMode - either \"loop\" or \"once\"\r\n * @property {String} defaultDirection - either \"forward\" or \"backward\"\r\n */\r\n\r\nexport const TrajectoryElementDefaultParameters = Object.assign({\r\n  defaultStep: 1,\r\n  defaultTimeout: 50,\r\n  defaultInterpolateType: '' as TrajectoryPlayerInterpolateType,\r\n  defaultInterpolateStep: 5,\r\n  defaultMode: 'loop' as TrajectoryPlayerMode,\r\n  defaultDirection: 'forward' as TrajectoryPlayerDirection,\r\n  initialFrame: 0\r\n}, ElementDefaultParameters)\r\nexport type TrajectoryElementParameters = typeof TrajectoryElementDefaultParameters\r\n\r\nexport interface TrajectoryElementSignals extends ElementSignals {\r\n  frameChanged: Signal  // on frame change\r\n  playerChanged: Signal  // on player change\r\n  countChanged: Signal  // when frame count is available\r\n  parametersChanged: Signal  // on parameters change\r\n}\r\n\r\n/**\r\n * Component wrapping a {@link Trajectory} object\r\n */\r\nclass TrajectoryElement extends Element {\r\n  signals: TrajectoryElementSignals\r\n  parameters: TrajectoryElementParameters\r\n  get defaultParameters () { return TrajectoryElementDefaultParameters }\r\n\r\n  /**\r\n   * @param {Stage} stage - stage object the component belongs to\r\n   * @param {Trajectory} trajectory - the trajectory object\r\n   * @param {TrajectoryComponentParameters} params - component parameters\r\n   * @param {StructureComponent} parent - the parent structure\r\n   */\r\n  constructor (stage: Stage, readonly trajectory: Trajectory, params: Partial<TrajectoryElementParameters> = {}) {\r\n    super(stage, Object.assign({ name: trajectory.name }, params))\r\n\r\n    this.signals = Object.assign(this.signals, {\r\n      frameChanged: new Signal(),\r\n      playerChanged: new Signal(),\r\n      countChanged: new Signal(),\r\n      parametersChanged: new Signal()\r\n    })\r\n\r\n    // signals\r\n\r\n    trajectory.signals.frameChanged.add((i: number) => {\r\n      this.signals.frameChanged.dispatch(i)\r\n    })\r\n\r\n    trajectory.signals.playerChanged.add((player: TrajectoryPlayer) => {\r\n      this.signals.playerChanged.dispatch(player)\r\n    })\r\n\r\n    trajectory.signals.countChanged.add((n: number) => {\r\n      this.signals.countChanged.dispatch(n)\r\n    })\r\n\r\n    //\r\n\r\n    if (params.initialFrame !== undefined) {\r\n      this.setFrame(params.initialFrame)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Component type\r\n   * @type {String}\r\n   */\r\n  get type () { return 'trajectory' }\r\n\r\n  /**\r\n   * Set the frame of the trajectory\r\n   * @param {Integer} i - frame number\r\n   * @return {undefined}\r\n   */\r\n  setFrame (i: number) {\r\n    this.trajectory.setFrame(i)\r\n  }\r\n\r\n  /**\r\n   * Set trajectory parameters\r\n   * @param {TrajectoryParameters} params - trajectory parameters\r\n   * @return {undefined}\r\n   */\r\n  setParameters (params: Partial<TrajectoryParameters> = {}) {\r\n    this.trajectory.setParameters(params)\r\n    this.signals.parametersChanged.dispatch(params)\r\n  }\r\n\r\n  dispose () {\r\n    this.trajectory.dispose()\r\n    super.dispose()\r\n  }\r\n}\r\n\r\nexport default TrajectoryElement\r\n","/**\r\n * @file Frames\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nexport default class Frames {\r\n  coordinates = []\r\n  boxes = []\r\n  times = []\r\n\r\n  timeOffset = 0\r\n  deltaTime = 1\r\n\r\n  constructor (readonly name: string, readonly path: string) {}\r\n\r\n  get type () { return 'Frames' }\r\n}\r\n","/**\r\n * @file Superposition\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Matrix4 } from 'three'\r\nimport { Debug, Log } from '../globals'\r\nimport {\r\n    Matrix, svd, meanRows, subRows, transpose,\r\n    multiplyABt, invert3x3, multiply3x3, mat3x3determinant, multiply\r\n} from '../math/matrix-utils'\r\nimport Structure from '../structure/structure'\r\n\r\nclass Superposition {\r\n  coords1t: Matrix\r\n  coords2t: Matrix\r\n\r\n  transformationMatrix: Matrix4\r\n\r\n  mean1: number[]\r\n  mean2: number[]\r\n\r\n  A = new Matrix(3, 3)\r\n  W = new Matrix(1, 3)\r\n  U = new Matrix(3, 3)\r\n  V = new Matrix(3, 3)\r\n  VH = new Matrix(3, 3)\r\n  R = new Matrix(3, 3)\r\n\r\n  private tmp = new Matrix(3, 3)\r\n  private c = new Matrix(3, 3)\r\n\r\n  constructor (atoms1: Structure|Float32Array, atoms2: Structure|Float32Array) {\r\n    // allocate & init data structures\r\n\r\n    let n1\r\n    if (atoms1 instanceof Structure) {\r\n      n1 = atoms1.atomCount\r\n    } else if (atoms1 instanceof Float32Array) {\r\n      n1 = atoms1.length / 3\r\n    } else {\r\n      return\r\n    }\r\n\r\n    let n2\r\n    if (atoms2 instanceof Structure) {\r\n      n2 = atoms2.atomCount\r\n    } else if (atoms2 instanceof Float32Array) {\r\n      n2 = atoms2.length / 3\r\n    } else {\r\n      return\r\n    }\r\n\r\n    const n = Math.min(n1, n2)\r\n\r\n    const coords1 = new Matrix(3, n)\r\n    const coords2 = new Matrix(3, n)\r\n\r\n    this.coords1t = new Matrix(n, 3)\r\n    this.coords2t = new Matrix(n, 3)\r\n\r\n    this.transformationMatrix = new Matrix4()\r\n\r\n    this.c.data.set([ 1, 0, 0, 0, 1, 0, 0, 0, -1 ])\r\n\r\n    // prep coords\r\n\r\n    this.prepCoords(atoms1, coords1, n, false)\r\n    this.prepCoords(atoms2, coords2, n, false)\r\n\r\n    // superpose\r\n\r\n    this._superpose(coords1, coords2)\r\n  }\r\n\r\n  _superpose (coords1: Matrix, coords2: Matrix) {\r\n    this.mean1 = meanRows(coords1)\r\n    this.mean2 = meanRows(coords2)\r\n\r\n    subRows(coords1, this.mean1)\r\n    subRows(coords2, this.mean2)\r\n\r\n    transpose(this.coords1t, coords1)\r\n    transpose(this.coords2t, coords2)\r\n\r\n    multiplyABt(this.A, this.coords2t, this.coords1t)\r\n\r\n    svd(this.A, this.W, this.U, this.V)\r\n\r\n    invert3x3(this.V, this.VH)\r\n    multiply3x3(this.R, this.U, this.VH)\r\n\r\n    if (mat3x3determinant(this.R) < 0.0) {\r\n      if (Debug) Log.log('R not a right handed system')\r\n\r\n      multiply3x3(this.tmp, this.c, this.VH)\r\n      multiply3x3(this.R, this.U, this.tmp)\r\n    }\r\n\r\n    //get the transformation matrix\r\n\r\n    const transformMat_ = new Matrix(4,4)\r\n    const tmp_1 = new Matrix(4,4)\r\n    const tmp_2 = new Matrix(4,4)\r\n\r\n    const sub = new Matrix(4,4)\r\n    const mult = new Matrix(4,4)\r\n    const add = new Matrix(4,4)\r\n\r\n    const R = this.R.data\r\n    const M1 = this.mean1\r\n    const M2 = this.mean2\r\n\r\n    sub.data.set([ 1, 0, 0, -M1[0],\r\n                   0, 1, 0, -M1[1],\r\n                   0, 0, 1, -M1[2],\r\n                   0, 0, 0, 1 ])\r\n\r\n    mult.data.set([ R[0], R[1], R[2], 0,\r\n                    R[3], R[4], R[5], 0,\r\n                    R[6], R[7], R[8], 0,\r\n                    0, 0, 0, 1 ])\r\n\r\n    add.data.set([ 1, 0, 0, M2[0],\r\n                   0, 1, 0, M2[1],\r\n                   0, 0, 1, M2[2],\r\n                   0, 0, 0, 1 ])\r\n\r\n    transpose(tmp_1,sub)\r\n    multiplyABt(transformMat_,mult,tmp_1)\r\n    transpose(tmp_2,transformMat_)\r\n    multiplyABt(tmp_1,add,tmp_2)\r\n\r\n    transpose(transformMat_,tmp_1)\r\n    this.transformationMatrix.elements = transformMat_.data as unknown as number[]\r\n\r\n  }\r\n\r\n  prepCoords (atoms: Structure|Float32Array, coords: Matrix, n: number, is4X4: boolean) {\r\n    let i = 0\r\n    const cd = coords.data\r\n\r\n    let c = 3\r\n    let d = n * 3\r\n\r\n    if (is4X4) {\r\n      d = n * 4\r\n      c = 4\r\n    }\r\n    if (atoms instanceof Structure) {\r\n      atoms.eachAtom(function (a) {\r\n        if (i < d) {\r\n          cd[ i + 0 ] = a.x\r\n          cd[ i + 1 ] = a.y\r\n          cd[ i + 2 ] = a.z\r\n          if (is4X4) cd[ i + 3 ] = 1\r\n\r\n          i += c\r\n        }\r\n      })\r\n    } else if (atoms instanceof Float32Array) {\r\n      for (; i < d; i += c){\r\n        if (i < d) {\r\n          cd[ i ] = atoms[ i ]\r\n          cd[ i + 1 ] = atoms[ i + 1 ]\r\n          cd[ i + 2 ] = atoms[ i + 2 ]\r\n          if (is4X4) cd[ i + 3 ] = 1\r\n        }\r\n      }\r\n    } else {\r\n      Log.warn('prepCoords: input type unknown')\r\n    }\r\n  }\r\n\r\n  transform (atoms: Structure|Float32Array) {\r\n    // allocate data structures\r\n\r\n    let n\r\n    if (atoms instanceof Structure) {\r\n      n = atoms.atomCount\r\n    } else if (atoms instanceof Float32Array) {\r\n      n = atoms.length / 3\r\n    } else {\r\n      return\r\n    }\r\n\r\n    const coords = new Matrix(4, n)\r\n    const tCoords = new Matrix(n,4)\r\n\r\n    // prep coords\r\n\r\n    this.prepCoords(atoms, coords, n, true)\r\n\r\n    // check for transformation matrix correctness\r\n\r\n    const transform = this.transformationMatrix\r\n    const det = transform.determinant()\r\n    if (!det){\r\n      return det\r\n    }\r\n\r\n    // do transform\r\n\r\n    const mult = new Matrix(4,4)\r\n    mult.data = transform.elements as unknown as Float32Array\r\n    multiply(tCoords,coords,mult)\r\n\r\n    let i = 0\r\n    const cd = tCoords.data\r\n    if (atoms instanceof Structure) {\r\n        atoms.eachAtom(function (a) {\r\n          a.x = cd[ i ]\r\n          a.y = cd[ i + 1 ]\r\n          a.z = cd[ i + 2 ]\r\n          i += 4\r\n        })\r\n\r\n        //update transformation matrices for each assembly\r\n\r\n        const invertTrasform = new Matrix4()\r\n        invertTrasform.getInverse(transform)\r\n\r\n        const biomolDict = atoms.biomolDict\r\n\r\n        for (let key in biomolDict) {\r\n\r\n          if (biomolDict.hasOwnProperty(key)) {\r\n            let assembly = biomolDict[key]\r\n\r\n            assembly.partList.forEach(function(part){\r\n\r\n              part.matrixList.forEach(function(mat){\r\n\r\n                mat.premultiply(transform)\r\n                mat.multiply(invertTrasform)\r\n\r\n              })\r\n            })\r\n          }\r\n        }\r\n    } else if (atoms instanceof Float32Array) {\r\n\r\n      const n4 = n * 4\r\n      for (; i < n4; i += 4){\r\n\r\n        atoms[ i ] = cd[ i ]\r\n        atoms[ i + 1 ] = cd[ i + 1 ]\r\n        atoms[ i + 2 ] = cd[ i + 2 ]\r\n\r\n      }\r\n    } else {\r\n      Log.warn('transform: input type unknown')\r\n    }\r\n\r\n    return this.transformationMatrix\r\n  }\r\n}\r\nexport default Superposition\r\n","/**\r\n * @file Trajectory Player\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Signal } from 'signals'\r\n\r\nimport { defaults, createParams, updateParams } from '../utils'\r\nimport Trajectory from './trajectory'\r\n\r\nexport type TrajectoryPlayerInterpolateType = ''|'linear'|'spline'\r\nexport type TrajectoryPlayerMode = 'loop'|'once'\r\nexport type TrajectoryPlayerDirection = 'forward'|'backward'|'bounce'\r\n\r\nexport const TrajectoryPlayerDefaultParameters = {\r\n  step: 1,  // how many frames to advance when playing\r\n  timeout: 50,  // how many milliseconds to wait between playing frames\r\n  start: 0,  // first frame to play\r\n  end: 0,  // last frame to play\r\n  interpolateType: '' as TrajectoryPlayerInterpolateType,\r\n  interpolateStep: 5,  // window size used for interpolation\r\n  mode: 'loop' as TrajectoryPlayerMode,\r\n  direction: 'forward' as TrajectoryPlayerDirection\r\n}\r\nexport type TrajectoryPlayerParameters = typeof TrajectoryPlayerDefaultParameters\r\n\r\nexport interface TrajectoryPlayerSignals {\r\n  startedRunning: Signal\r\n  haltedRunning: Signal\r\n}\r\n\r\n/**\r\n * Trajectory player for animating coordinate frames\r\n * @example\r\n * var player = new TrajectoryPlayer(trajectory, {step: 1, timeout: 50});\r\n * player.play();\r\n */\r\nclass TrajectoryPlayer {\r\n  signals: TrajectoryPlayerSignals = {\r\n    startedRunning: new Signal(),\r\n    haltedRunning: new Signal()\r\n  }\r\n\r\n  parameters: TrajectoryPlayerParameters\r\n  traj: Trajectory\r\n\r\n  private _run = false\r\n  private _previousTime = 0\r\n  private _currentTime = 0\r\n  private _currentStep = 1\r\n  private _currentFrame: number|[number, number, number, number]\r\n  private _direction: TrajectoryPlayerDirection\r\n\r\n  /**\r\n   * make trajectory player\r\n   * @param {Trajectory} traj - the trajectory\r\n   * @param {TrajectoryPlayerParameters} [params] - parameter object\r\n   */\r\n  constructor (traj: Trajectory, params: Partial<TrajectoryPlayerParameters> = {}) {\r\n    traj.signals.playerChanged.add((player: TrajectoryPlayer) => {\r\n      if (player !== this) {\r\n        this.pause()\r\n      }\r\n    }, this)\r\n\r\n    const n = defaults(traj.frameCount, 1)\r\n\r\n    this.traj = traj\r\n    this.parameters = createParams(params, TrajectoryPlayerDefaultParameters)\r\n    this.parameters.end = Math.min(defaults(params.end, n - 1), n - 1)\r\n    this.parameters.step = defaults(params.step, Math.ceil((n + 1) / 100))\r\n\r\n    this._currentFrame = this.parameters.start\r\n    this._direction = this.parameters.direction === 'bounce' ? 'forward' : this.parameters.direction\r\n\r\n    traj.signals.countChanged.add((n: number) => {\r\n      this.parameters.end = Math.min(defaults(this.parameters.end, n - 1), n - 1)\r\n    }, this)\r\n\r\n    this._animate = this._animate.bind(this)\r\n  }\r\n\r\n  get isRunning () { return this._run }\r\n\r\n  /**\r\n   * set player parameters\r\n   * @param {TrajectoryPlayerParameters} [params] - parameter object\r\n   */\r\n  setParameters (params: Partial<TrajectoryPlayerParameters> = {}) {\r\n    updateParams(this.parameters, params)\r\n\r\n    if (params.direction !== undefined && this.parameters.direction !== 'bounce') {\r\n      this._direction = this.parameters.direction\r\n    }\r\n  }\r\n\r\n  _animate () {\r\n    if (!this._run) return\r\n\r\n    this._currentTime = window.performance.now()\r\n    const dt = this._currentTime - this._previousTime\r\n    const step = this.parameters.interpolateType ? this.parameters.interpolateStep : 1\r\n    const timeout = this.parameters.timeout / step\r\n    const traj = this.traj\r\n\r\n    if (traj && traj.frameCount && !traj.inProgress && dt >= timeout) {\r\n      if (this.parameters.interpolateType) {\r\n        if (this._currentStep > this.parameters.interpolateStep) {\r\n          this._currentStep = 1\r\n        }\r\n        if (this._currentStep === 1) {\r\n          this._currentFrame = this._nextInterpolated()\r\n        }\r\n        if (traj.hasFrame(this._currentFrame)) {\r\n          this._currentStep += 1\r\n          const t = this._currentStep / (this.parameters.interpolateStep + 1)\r\n          const [i, ip, ipp, ippp] = this._currentFrame as [number, number, number, number]\r\n          traj.setFrameInterpolated(\r\n            i, ip, ipp, ippp, t, this.parameters.interpolateType\r\n          )\r\n          this._previousTime = this._currentTime\r\n        } else {\r\n          traj.loadFrame(this._currentFrame)\r\n        }\r\n      } else {\r\n        const i = this._next()\r\n        if (traj.hasFrame(i)) {\r\n          traj.setFrame(i)\r\n          this._previousTime = this._currentTime\r\n        } else {\r\n          traj.loadFrame(i)\r\n        }\r\n      }\r\n    }\r\n\r\n    window.requestAnimationFrame(this._animate)\r\n  }\r\n\r\n  _next () {\r\n    const p = this.parameters\r\n    let i\r\n\r\n    if (this._direction === 'forward') {\r\n      i = this.traj.currentFrame + p.step\r\n    } else {\r\n      i = this.traj.currentFrame - p.step\r\n    }\r\n\r\n    if (i > p.end || i < p.start) {\r\n      if (p.direction === 'bounce') {\r\n        if (this._direction === 'forward') {\r\n          this._direction = 'backward'\r\n        } else {\r\n          this._direction = 'forward'\r\n        }\r\n      }\r\n\r\n      if (p.mode === 'once') {\r\n        this.pause()\r\n\r\n        if (p.direction === 'forward') {\r\n          i = p.end\r\n        } else if (p.direction === 'backward') {\r\n          i = p.start\r\n        } else {\r\n          if (this._direction === 'forward') {\r\n            i = p.start\r\n          } else {\r\n            i = p.end\r\n          }\r\n        }\r\n      } else {\r\n        if (this._direction === 'forward') {\r\n          i = p.start\r\n          if (p.interpolateType) {\r\n            i = Math.min(p.end, i + p.step)\r\n          }\r\n        } else {\r\n          i = p.end\r\n          if (p.interpolateType) {\r\n            i = Math.max(p.start, i - p.step)\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return i\r\n  }\r\n\r\n  _nextInterpolated () {\r\n    const p = this.parameters\r\n    const i = this._next()\r\n    let ip, ipp, ippp\r\n\r\n    if (this._direction === 'forward') {\r\n      ip = Math.max(p.start, i - p.step)\r\n      ipp = Math.max(p.start, i - 2 * p.step)\r\n      ippp = Math.max(p.start, i - 3 * p.step)\r\n    } else {\r\n      ip = Math.min(p.end, i + p.step)\r\n      ipp = Math.min(p.end, i + 2 * p.step)\r\n      ippp = Math.min(p.end, i + 3 * p.step)\r\n    }\r\n\r\n    return [i, ip, ipp, ippp] as [number, number, number, number]\r\n  }\r\n\r\n  /**\r\n   * toggle between playing and pausing the animation\r\n   * @return {undefined}\r\n   */\r\n  toggle () {\r\n    if (this._run) {\r\n      this.pause()\r\n    } else {\r\n      this.play()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * start the animation\r\n   * @return {undefined}\r\n   */\r\n  play () {\r\n    if (!this._run) {\r\n      if (this.traj.player !== this) {\r\n        this.traj.setPlayer(this)\r\n      }\r\n      this._currentStep = 1\r\n\r\n      const p = this.parameters\r\n      const frame = this.traj.currentFrame\r\n\r\n      // snap to the grid implied by this.step division and multiplication\r\n      // thus minimizing cache misses\r\n      let i = Math.ceil(frame / p.step) * p.step\r\n      // wrap when restarting from the limit (i.e. end or start)\r\n      if (p.direction === 'forward' && frame >= p.end) {\r\n        i = p.start\r\n      } else if (p.direction === 'backward' && frame <= p.start) {\r\n        i = p.end\r\n      }\r\n\r\n      this.traj.setFrame(i)\r\n\r\n      this._run = true\r\n      this._animate()\r\n      this.signals.startedRunning.dispatch()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * pause the animation\r\n   * @return {undefined}\r\n   */\r\n  pause () {\r\n    this._run = false\r\n    this.signals.haltedRunning.dispatch()\r\n  }\r\n\r\n  /**\r\n   * stop the animation (pause and go to start-frame)\r\n   * @return {undefined}\r\n   */\r\n  stop () {\r\n    this.pause()\r\n    this.traj.setFrame(this.parameters.start)\r\n  }\r\n}\r\n\r\nexport default TrajectoryPlayer\r\n","/**\r\n * @file Trajectory\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Signal } from 'signals'\r\n\r\nimport { Log } from '../globals'\r\nimport { defaults } from '../utils'\r\nimport { NumberArray } from '../types'\r\nimport { circularMean, arrayMean } from '../math/array-utils'\r\nimport { lerp, spline } from '../math/math-utils'\r\nimport Selection from '../selection/selection'\r\nimport Superposition from '../align/superposition'\r\nimport Structure from '../structure/structure'\r\nimport AtomProxy from '../proxy/atom-proxy'\r\nimport TrajectoryPlayer, { TrajectoryPlayerInterpolateType } from './trajectory-player'\r\n\r\n\r\nfunction centerPbc (coords: NumberArray, mean: number[], box: ArrayLike<number>) {\r\n  if (box[ 0 ] === 0 || box[ 8 ] === 0 || box[ 4 ] === 0) {\r\n    return\r\n  }\r\n\r\n  const n = coords.length\r\n\r\n  const bx = box[ 0 ]\r\n  const by = box[ 1 ]\r\n  const bz = box[ 2 ]\r\n  const mx = mean[ 0 ]\r\n  const my = mean[ 1 ]\r\n  const mz = mean[ 2 ]\r\n\r\n  const fx = -mx + bx + bx / 2\r\n  const fy = -my + by + by / 2\r\n  const fz = -mz + bz + bz / 2\r\n\r\n  for (let i = 0; i < n; i += 3) {\r\n    coords[ i + 0 ] = (coords[ i + 0 ] + fx) % bx\r\n    coords[ i + 1 ] = (coords[ i + 1 ] + fy) % by\r\n    coords[ i + 2 ] = (coords[ i + 2 ] + fz) % bz\r\n  }\r\n}\r\n\r\nfunction removePbc (x: NumberArray, box: ArrayLike<number>) {\r\n  if (box[ 0 ] === 0 || box[ 8 ] === 0 || box[ 4 ] === 0) {\r\n    return\r\n  }\r\n\r\n  // ported from GROMACS src/gmxlib/rmpbc.c:rm_gropbc()\r\n  // in-place\r\n\r\n  const n = x.length\r\n\r\n  for (let i = 3; i < n; i += 3) {\r\n    for (let j = 0; j < 3; ++j) {\r\n      const dist = x[ i + j ] - x[ i - 3 + j ]\r\n\r\n      if (Math.abs(dist) > 0.9 * box[ j * 3 + j ]) {\r\n        if (dist > 0) {\r\n          for (let d = 0; d < 3; ++d) {\r\n            x[ i + d ] -= box[ j * 3 + d ]\r\n          }\r\n        } else {\r\n          for (let d = 0; d < 3; ++d) {\r\n            x[ i + d ] += box[ j * 3 + d ]\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return x\r\n}\r\n\r\nfunction removePeriodicity (x: NumberArray, box: ArrayLike<number>, mean: number[]) {\r\n  if (box[ 0 ] === 0 || box[ 8 ] === 0 || box[ 4 ] === 0) {\r\n    return\r\n  }\r\n\r\n  const n = x.length\r\n  for (let i = 3; i < n; i += 3) {\r\n    for (let j = 0; j < 3; ++j) {\r\n      const f = (x[ i + j ] - mean[ j ]) / box[ j * 3 + j ]\r\n      if (Math.abs(f) > 0.5) {\r\n        x[ i + j ] -= box[ j * 3 + j ] * Math.round(f)\r\n      }\r\n    }\r\n  }\r\n\r\n  return x\r\n}\r\n\r\nfunction circularMean3 (indices: NumberArray, coords: NumberArray, box: ArrayLike<number>) {\r\n  return [\r\n    circularMean(coords, box[ 0 ], 3, 0, indices),\r\n    circularMean(coords, box[ 1 ], 3, 1, indices),\r\n    circularMean(coords, box[ 2 ], 3, 2, indices)\r\n  ]\r\n}\r\n\r\nfunction arrayMean3 (coords: NumberArray) {\r\n  return [\r\n    arrayMean(coords, 3, 0),\r\n    arrayMean(coords, 3, 1),\r\n    arrayMean(coords, 3, 2)\r\n  ]\r\n}\r\n\r\nfunction interpolateSpline (c: NumberArray, cp: NumberArray, cpp: NumberArray, cppp: NumberArray, t: number) {\r\n  const m = c.length\r\n  const coords = new Float32Array(m)\r\n\r\n  for (let j0 = 0; j0 < m; j0 += 3) {\r\n    const j1 = j0 + 1\r\n    const j2 = j0 + 2\r\n    coords[ j0 ] = spline(cppp[ j0 ], cpp[ j0 ], cp[ j0 ], c[ j0 ], t, 1)\r\n    coords[ j1 ] = spline(cppp[ j1 ], cpp[ j1 ], cp[ j1 ], c[ j1 ], t, 1)\r\n    coords[ j2 ] = spline(cppp[ j2 ], cpp[ j2 ], cp[ j2 ], c[ j2 ], t, 1)\r\n  }\r\n\r\n  return coords\r\n}\r\n\r\nfunction interpolateLerp (c: NumberArray, cp: NumberArray, t: number) {\r\n  const m = c.length\r\n  const coords = new Float32Array(m)\r\n\r\n  for (let j0 = 0; j0 < m; j0 += 3) {\r\n    const j1 = j0 + 1\r\n    const j2 = j0 + 2\r\n    coords[ j0 ] = lerp(cp[ j0 ], c[ j0 ], t)\r\n    coords[ j1 ] = lerp(cp[ j1 ], c[ j1 ], t)\r\n    coords[ j2 ] = lerp(cp[ j2 ], c[ j2 ], t)\r\n  }\r\n\r\n  return coords\r\n}\r\n\r\n/**\r\n * Trajectory parameter object.\r\n * @typedef {Object} TrajectoryParameters - parameters\r\n *\r\n * @property {Number} deltaTime - timestep between frames in picoseconds\r\n * @property {Number} timeOffset - starting time of frames in picoseconds\r\n * @property {String} sele - to restrict atoms used for superposition\r\n * @property {Boolean} centerPbc - center on initial frame\r\n * @property {Boolean} removePeriodicity - move atoms into the origin box\r\n * @property {Boolean} remo - try fixing periodic boundary discontinuities\r\n * @property {Boolean} superpose - superpose on initial frame\r\n */\r\n\r\n/**\r\n * @example\r\n * trajectory.signals.frameChanged.add( function(i){ ... } );\r\n *\r\n * @typedef {Object} TrajectorySignals\r\n * @property {Signal<Integer>} countChanged - when the frame count is changed\r\n * @property {Signal<Integer>} frameChanged - when the set frame is changed\r\n * @property {Signal<TrajectoryPlayer>} playerChanged - when the player is changed\r\n */\r\n\r\nexport interface TrajectoryParameters {\r\n  deltaTime: number  // timestep between frames in picoseconds\r\n  timeOffset: number  // starting time of frames in picoseconds\r\n  sele: string  // to restrict atoms used for superposition\r\n  centerPbc: boolean  // center on initial frame\r\n  removePbc: boolean  // move atoms into the origin box\r\n  removePeriodicity: boolean  // try fixing periodic boundary discontinuities\r\n  superpose: boolean  // superpose on initial frame\r\n}\r\n\r\nexport interface TrajectorySignals {\r\n  countChanged: Signal\r\n  frameChanged: Signal\r\n  playerChanged: Signal\r\n}\r\n\r\n/**\r\n * Base class for trajectories, tying structures and coordinates together\r\n * @interface\r\n */\r\nclass Trajectory {\r\n  signals: TrajectorySignals = {\r\n    countChanged: new Signal(),\r\n    frameChanged: new Signal(),\r\n    playerChanged: new Signal()\r\n  }\r\n\r\n  deltaTime: number\r\n  timeOffset: number\r\n  sele: string\r\n  centerPbc: boolean\r\n  removePbc: boolean\r\n  removePeriodicity: boolean\r\n  superpose: boolean\r\n\r\n  name: string\r\n  frame: number\r\n  trajPath: string\r\n\r\n  initialCoords: Float32Array\r\n  structureCoords: Float32Array\r\n  selectionIndices: NumberArray\r\n  backboneIndices: NumberArray\r\n\r\n  coords1: Float32Array\r\n  coords2: Float32Array\r\n\r\n  frameCache: { [k: number]: Float32Array } = {}\r\n  loadQueue: { [k: number]: boolean } = {}\r\n  boxCache: { [k: number]: ArrayLike<number> } = {}\r\n  pathCache = {}\r\n  frameCacheSize = 0\r\n\r\n  atomCount: number\r\n  inProgress: boolean\r\n\r\n  selection: Selection  // selection to restrict atoms used for superposition\r\n  structure: Structure\r\n  player: TrajectoryPlayer\r\n\r\n  private _frameCount = 0\r\n  private _currentFrame = -1\r\n  private _disposed = false\r\n\r\n  /**\r\n   * @param {String} trajPath - trajectory source\r\n   * @param {Structure} structure - the structure object\r\n   * @param {TrajectoryParameters} params - trajectory parameters\r\n   */\r\n  constructor (trajPath: string, structure: Structure, params: Partial<TrajectoryParameters> = {}) {\r\n    this.deltaTime = defaults(params.deltaTime, 0)\r\n    this.timeOffset = defaults(params.timeOffset, 0)\r\n    this.centerPbc = defaults(params.centerPbc, false)\r\n    this.removePbc = defaults(params.removePbc, false)\r\n    this.removePeriodicity = defaults(params.removePeriodicity, false)\r\n    this.superpose = defaults(params.superpose, false)\r\n\r\n    this.name = trajPath.replace(/^.*[\\\\/]/, '')\r\n    this.trajPath = trajPath\r\n\r\n    this.selection = new Selection(\r\n      defaults(params.sele, 'backbone and not hydrogen')\r\n    )\r\n\r\n    this.selection.signals.stringChanged.add(() => {\r\n      this.selectionIndices = this.structure.getAtomIndices(this.selection)!\r\n      this._resetCache()\r\n      this._saveInitialCoords()\r\n      this.setFrame(this._currentFrame)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Number of frames in the trajectory\r\n   */\r\n  get frameCount () {\r\n    return this._frameCount\r\n  }\r\n\r\n  /**\r\n   * Currently set frame of the trajectory\r\n   */\r\n  get currentFrame () {\r\n    return this._currentFrame\r\n  }\r\n\r\n  _init (structure: Structure) {\r\n    this.setStructure(structure)\r\n    this._loadFrameCount()\r\n    this.setPlayer(new TrajectoryPlayer(this))\r\n  }\r\n\r\n  _loadFrameCount () {}\r\n\r\n  setStructure (structure: Structure) {\r\n    this.structure = structure\r\n    this.atomCount = structure.atomCount\r\n\r\n    this.backboneIndices = this._getIndices(\r\n      new Selection('backbone and not hydrogen')\r\n    )\r\n    this._makeAtomIndices()\r\n    this._saveStructureCoords()\r\n\r\n    this.selectionIndices = this._getIndices(this.selection)\r\n    this._resetCache()\r\n    this._saveInitialCoords()\r\n    this.setFrame(this._currentFrame)\r\n  }\r\n\r\n  _saveInitialCoords () {\r\n    if (this.structure.hasCoords()) {\r\n      this.initialCoords = new Float32Array(this.structureCoords)\r\n      this._makeSuperposeCoords()\r\n    } else if (this.frameCache[0]) {\r\n      this.initialCoords = new Float32Array(this.frameCache[0])\r\n      this._makeSuperposeCoords()\r\n    } else {\r\n      this.loadFrame(0, () => this._saveInitialCoords())\r\n    }\r\n  }\r\n\r\n  _saveStructureCoords () {\r\n    const p = { what: { position: true } }\r\n    this.structureCoords = this.structure.getAtomData(p).position!\r\n  }\r\n\r\n  setSelection (string: string) {\r\n    this.selection.setString(string)\r\n    return this\r\n  }\r\n\r\n  _getIndices (selection: Selection) {\r\n    let i = 0\r\n    const test = selection.test\r\n    const indices: number[] = []\r\n\r\n    if (test) {\r\n      this.structure.eachAtom((ap: AtomProxy) => {\r\n        if (test(ap)) indices.push(i)\r\n        i += 1\r\n      })\r\n    }\r\n\r\n    return indices\r\n  }\r\n\r\n  _makeSuperposeCoords () {\r\n    const n = this.selectionIndices.length * 3\r\n\r\n    this.coords1 = new Float32Array(n)\r\n    this.coords2 = new Float32Array(n)\r\n\r\n    const y = this.initialCoords\r\n    const coords2 = this.coords2\r\n\r\n    for (let i = 0; i < n; i += 3) {\r\n      const j = this.selectionIndices[ i / 3 ] * 3\r\n\r\n      coords2[ i + 0 ] = y[ j + 0 ]\r\n      coords2[ i + 1 ] = y[ j + 1 ]\r\n      coords2[ i + 2 ] = y[ j + 2 ]\r\n    }\r\n  }\r\n\r\n  _makeAtomIndices () {\r\n    Log.error('Trajectory._makeAtomIndices not implemented')\r\n  }\r\n\r\n  _resetCache () {\r\n    this.frameCache = {}\r\n    this.loadQueue = {}\r\n    this.boxCache = {}\r\n    this.pathCache = {}\r\n    this.frameCacheSize = 0\r\n    this.initialCoords = new Float32Array(0)\r\n  }\r\n\r\n  setParameters (params: Partial<TrajectoryParameters> = {}) {\r\n    let resetCache = false\r\n\r\n    if (params.centerPbc !== undefined && params.centerPbc !== this.centerPbc) {\r\n      this.centerPbc = params.centerPbc\r\n      resetCache = true\r\n    }\r\n\r\n    if (params.removePeriodicity !== undefined && params.removePeriodicity !== this.removePeriodicity) {\r\n      this.removePeriodicity = params.removePeriodicity\r\n      resetCache = true\r\n    }\r\n\r\n    if (params.removePbc !== undefined && params.removePbc !== this.removePbc) {\r\n      this.removePbc = params.removePbc\r\n      resetCache = true\r\n    }\r\n\r\n    if (params.superpose !== undefined && params.superpose !== this.superpose) {\r\n      this.superpose = params.superpose\r\n      resetCache = true\r\n    }\r\n\r\n    this.deltaTime = defaults(params.deltaTime, this.deltaTime)\r\n    this.timeOffset = defaults(params.timeOffset, this.timeOffset)\r\n\r\n    if (resetCache) {\r\n      this._resetCache()\r\n      this.setFrame(this._currentFrame)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if a frame is available\r\n   * @param  {Integer|Integer[]} i - the frame index\r\n   * @return {Boolean} frame availability\r\n   */\r\n  hasFrame (i: number|number[]) {\r\n    if (Array.isArray(i)) {\r\n      return i.every(j => !!this.frameCache[j])\r\n    } else {\r\n      return !!this.frameCache[i]\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set trajectory to a frame index\r\n   * @param {Integer} i - the frame index\r\n   * @param {Function} [callback] - fired when the frame has been set\r\n   */\r\n  setFrame (i: number, callback?: Function) {\r\n    if (i === undefined) return this\r\n\r\n    this.inProgress = true\r\n\r\n    // i = parseInt(i)  // TODO\r\n\r\n    if (i === -1 || this.frameCache[ i ]) {\r\n      this._updateStructure(i)\r\n      if (callback) callback()\r\n    } else {\r\n      this.loadFrame(i, () => {\r\n        this._updateStructure(i)\r\n        if (callback) callback()\r\n      })\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  _interpolate (i: number, ip: number, ipp: number, ippp: number, t: number, type: TrajectoryPlayerInterpolateType) {\r\n    const fc = this.frameCache\r\n\r\n    let coords\r\n    if (type === 'spline') {\r\n      coords = interpolateSpline(fc[ i ], fc[ ip ], fc[ ipp ], fc[ ippp ], t)\r\n    } else {\r\n      coords = interpolateLerp(fc[ i ], fc[ ip ], t)\r\n    }\r\n\r\n    this.structure.updatePosition(coords)\r\n    this._currentFrame = i\r\n    this.signals.frameChanged.dispatch(i)\r\n  }\r\n\r\n  /**\r\n   * Interpolated and set trajectory to frame indices\r\n   * @param {Integer} i - the frame index\r\n   * @param {Integer} ip - one before frame index\r\n   * @param {Integer} ipp - two before frame index\r\n   * @param {Integer} ippp - three before frame index\r\n   * @param {Number} t - interpolation step [0,1]\r\n   * @param {String} type - interpolation type, '', 'spline' or 'linear'\r\n   * @param {Function} callback - fired when the frame has been set\r\n   */\r\n  setFrameInterpolated (i: number, ip: number, ipp: number, ippp: number, t: number, type: TrajectoryPlayerInterpolateType, callback?: Function) {\r\n    if (i === undefined) return this\r\n\r\n    const fc = this.frameCache\r\n    const iList: number[] = []\r\n\r\n    if (!fc[ ippp ]) iList.push(ippp)\r\n    if (!fc[ ipp ]) iList.push(ipp)\r\n    if (!fc[ ip ]) iList.push(ip)\r\n    if (!fc[ i ]) iList.push(i)\r\n\r\n    if (iList.length) {\r\n      this.loadFrame(iList, () => {\r\n        this._interpolate(i, ip, ipp, ippp, t, type)\r\n        if (callback) callback()\r\n      })\r\n    } else {\r\n      this._interpolate(i, ip, ipp, ippp, t, type)\r\n      if (callback) callback()\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Load frame index\r\n   * @param {Integer|Integer[]} i - the frame index\r\n   * @param {Function} callback - fired when the frame has been loaded\r\n   */\r\n  loadFrame (i: number|number[], callback?: Function) {\r\n    if (Array.isArray(i)) {\r\n      i.forEach(j => {\r\n        if (!this.loadQueue[j] && !this.frameCache[j]) {\r\n          this.loadQueue[j] = true\r\n          this._loadFrame(j, () => {\r\n            delete this.loadQueue[j]\r\n          })\r\n        }\r\n      })\r\n    } else {\r\n      if (!this.loadQueue[i] && !this.frameCache[i]) {\r\n        this.loadQueue[i] = true\r\n        this._loadFrame(i, () => {\r\n          delete this.loadQueue[i]\r\n          if (callback) callback()\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Load frame index\r\n   * @abstract\r\n   * @param {Integer} i - the frame index\r\n   * @param {Function} callback - fired when the frame has been loaded\r\n   */\r\n  _loadFrame (i: number, callback?: Function) {\r\n    Log.error('Trajectory._loadFrame not implemented', i, callback)\r\n  }\r\n\r\n  _updateStructure (i: number) {\r\n    if (this._disposed) {\r\n      console.error('updateStructure: traj disposed')\r\n      return\r\n    }\r\n\r\n    if (i === -1) {\r\n      if (this.structureCoords) {\r\n        this.structure.updatePosition(this.structureCoords)\r\n      }\r\n    } else {\r\n      this.structure.updatePosition(this.frameCache[ i ])\r\n    }\r\n\r\n    this.structure.trajectory = {\r\n      name: this.trajPath,\r\n      frame: i\r\n    }\r\n\r\n    this._currentFrame = i\r\n    this.inProgress = false\r\n    this.signals.frameChanged.dispatch(i)\r\n  }\r\n\r\n  _doSuperpose (x: Float32Array) {\r\n    const n = this.selectionIndices.length * 3\r\n\r\n    const coords1 = this.coords1\r\n    const coords2 = this.coords2\r\n\r\n    for (let i = 0; i < n; i += 3) {\r\n      const j = this.selectionIndices[ i / 3 ] * 3\r\n\r\n      coords1[ i + 0 ] = x[ j + 0 ]\r\n      coords1[ i + 1 ] = x[ j + 1 ]\r\n      coords1[ i + 2 ] = x[ j + 2 ]\r\n    }\r\n\r\n    // TODO re-use superposition object\r\n    const sp = new Superposition(coords1, coords2)\r\n    sp.transform(x)\r\n  }\r\n\r\n  _process (i: number, box: ArrayLike<number>, coords: Float32Array, frameCount: number) {\r\n    this._setFrameCount(frameCount)\r\n\r\n    if (box) {\r\n      if (this.backboneIndices.length > 0 && this.centerPbc) {\r\n        const box2 = [ box[ 0 ], box[ 4 ], box[ 8 ] ]\r\n        const circMean = circularMean3(this.backboneIndices, coords, box2)\r\n        centerPbc(coords, circMean, box2)\r\n      }\r\n\r\n      if (this.removePeriodicity) {\r\n        const mean = arrayMean3(coords)\r\n        removePeriodicity(coords, box, mean)\r\n      }\r\n\r\n      if (this.removePbc) {\r\n        removePbc(coords, box)\r\n      }\r\n    }\r\n\r\n    if (this.selectionIndices.length > 0 && this.coords1 && this.superpose) {\r\n      this._doSuperpose(coords)\r\n    }\r\n\r\n    this.frameCache[ i ] = coords\r\n    this.boxCache[ i ] = box\r\n    this.frameCacheSize += 1\r\n  }\r\n\r\n  _setFrameCount (n: number) {\r\n    if (n !== this._frameCount) {\r\n      this._frameCount = n\r\n      this.signals.countChanged.dispatch(n)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Dispose of the trajectory object\r\n   * @return {undefined}\r\n   */\r\n  dispose () {\r\n    this._resetCache()  // aid GC\r\n    this._disposed = true\r\n    if (this.player) this.player.stop()\r\n  }\r\n\r\n  /**\r\n   * Set player for this trajectory\r\n   * @param {TrajectoryPlayer} player - the player\r\n   */\r\n  setPlayer (player: TrajectoryPlayer) {\r\n    this.player = player\r\n    this.signals.playerChanged.dispatch(player)\r\n  }\r\n\r\n  /**\r\n   * Get time for frame\r\n   * @param  {Integer} i - frame index\r\n   * @return {Number} time in picoseconds\r\n   */\r\n  getFrameTime (i: number) {\r\n    return this.timeOffset + i * this.deltaTime\r\n  }\r\n}\r\n\r\nexport default Trajectory\r\n","/**\r\n * @file Frames Trajectory\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { defaults } from '../utils'\r\nimport Structure from '../structure/structure'\r\nimport Frames from './frames'\r\nimport Trajectory, { TrajectoryParameters } from './trajectory'\r\n\r\n/**\r\n * Frames trajectory class. Gets data from a frames object.\r\n */\r\nclass FramesTrajectory extends Trajectory {\r\n  path: string\r\n\r\n  frames: ArrayLike<number>[]\r\n  boxes: ArrayLike<number>[]\r\n\r\n  atomIndices?: ArrayLike<number>\r\n\r\n  constructor (frames: Frames, structure: Structure, params: TrajectoryParameters) {\r\n    const p = params || {}\r\n    p.timeOffset = defaults(p.timeOffset, frames.timeOffset)\r\n    p.deltaTime = defaults(p.deltaTime, frames.deltaTime)\r\n\r\n    super('', structure, p)\r\n\r\n    this.name = frames.name\r\n    this.path = frames.path\r\n\r\n    this.frames = frames.coordinates\r\n    this.boxes = frames.boxes\r\n\r\n    this._init(structure)\r\n  }\r\n\r\n  get type () { return 'frames' }\r\n\r\n  _makeAtomIndices () {\r\n    if (this.structure.type === 'StructureView') {\r\n      this.atomIndices = this.structure.getAtomIndices()\r\n    } else {\r\n      this.atomIndices = undefined\r\n    }\r\n  }\r\n\r\n  _loadFrame (i: number, callback?: Function) {\r\n    let coords\r\n    const frame = this.frames[ i ]\r\n\r\n    if (this.atomIndices) {\r\n      const indices = this.atomIndices\r\n      const m = indices.length\r\n\r\n      coords = new Float32Array(m * 3)\r\n\r\n      for (let j = 0; j < m; ++j) {\r\n        const j3 = j * 3\r\n        const idx3 = indices[ j ] * 3\r\n\r\n        coords[ j3 + 0 ] = frame[ idx3 + 0 ]\r\n        coords[ j3 + 1 ] = frame[ idx3 + 1 ]\r\n        coords[ j3 + 2 ] = frame[ idx3 + 2 ]\r\n      }\r\n    } else {\r\n      coords = new Float32Array(frame)\r\n    }\r\n\r\n    const box = this.boxes[ i ]\r\n    const frameCount = this.frames.length\r\n\r\n    this._process(i, box, coords, frameCount)\r\n\r\n    if (typeof callback === 'function') {\r\n      callback()\r\n    }\r\n  }\r\n\r\n  _loadFrameCount () {\r\n    if (this.frames) {\r\n      this._setFrameCount(this.frames.length)\r\n    }\r\n  }\r\n}\r\n\r\nexport default FramesTrajectory\r\n","/**\r\n * @file Structure Trajectory\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Structure from '../structure/structure'\r\nimport Trajectory, { TrajectoryParameters } from './trajectory'\r\n\r\n/**\r\n * Structure trajectory class. Gets data from a structure object.\r\n */\r\nclass StructureTrajectory extends Trajectory {\r\n  atomIndices?: ArrayLike<number>\r\n\r\n  constructor (trajPath: string, structure: Structure, params: TrajectoryParameters) {\r\n    super('', structure, params)\r\n    this._init(structure)\r\n  }\r\n\r\n  get type () { return 'structure' }\r\n\r\n  _makeAtomIndices () {\r\n    if (this.structure.atomSet && this.structure.atomSet.getSize() < this.structure.atomStore.count) {\r\n      this.atomIndices = this.structure.getAtomIndices()\r\n    } else {\r\n      this.atomIndices = undefined\r\n    }\r\n  }\r\n\r\n  _loadFrame (i: number, callback?: Function) {\r\n    let coords\r\n    const structure = this.structure\r\n    const frame = structure.frames[ i ]\r\n\r\n    if (this.atomIndices) {\r\n      const indices = this.atomIndices\r\n      const m = indices.length\r\n\r\n      coords = new Float32Array(m * 3)\r\n\r\n      for (let j = 0; j < m; ++j) {\r\n        const j3 = j * 3\r\n        const idx3 = indices[ j ] * 3\r\n\r\n        coords[ j3 + 0 ] = frame[ idx3 + 0 ]\r\n        coords[ j3 + 1 ] = frame[ idx3 + 1 ]\r\n        coords[ j3 + 2 ] = frame[ idx3 + 2 ]\r\n      }\r\n    } else {\r\n      coords = new Float32Array(frame)\r\n    }\r\n\r\n    const box = structure.boxes[ i ]\r\n    const frameCount = structure.frames.length\r\n\r\n    this._process(i, box, coords, frameCount)\r\n\r\n    if (typeof callback === 'function') {\r\n      callback()\r\n    }\r\n  }\r\n\r\n  _loadFrameCount () {\r\n    this._setFrameCount(this.structure.frames.length)\r\n  }\r\n}\r\n\r\nexport default StructureTrajectory\r\n","/**\r\n * @file Remote Trajectory\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Log, TrajectoryDatasource } from '../globals'\r\nimport Structure from '../structure/structure'\r\nimport Trajectory, { TrajectoryParameters } from './trajectory'\r\n\r\n/**\r\n * Remote trajectory class. Gets data from an MDsrv instance.\r\n */\r\nclass RemoteTrajectory extends Trajectory {\r\n  atomIndices: number[][]\r\n\r\n  constructor (trajPath: string, structure: Structure, params: TrajectoryParameters) {\r\n    super(trajPath, structure, params)\r\n    this._init(structure)\r\n  }\r\n\r\n  get type () { return 'remote' }\r\n\r\n  _makeAtomIndices () {\r\n    const atomIndices = []\r\n\r\n    if (this.structure.type === 'StructureView') {\r\n      const indices = this.structure.getAtomIndices()!  // TODO\r\n      const n = indices.length\r\n\r\n      let p = indices[ 0 ]\r\n      let q = indices[ 0 ]\r\n\r\n      for (let i = 1; i < n; ++i) {\r\n        const r = indices[ i ]\r\n\r\n        if (q + 1 < r) {\r\n          atomIndices.push([ p, q + 1 ])\r\n          p = r\r\n        }\r\n\r\n        q = r\r\n      }\r\n\r\n      atomIndices.push([ p, q + 1 ])\r\n    } else {\r\n      atomIndices.push([ 0, this.atomCount ])\r\n    }\r\n\r\n    this.atomIndices = atomIndices\r\n  }\r\n\r\n  _loadFrame (i: number, callback?: Function) {\r\n    // TODO implement max frameCache size, re-use arrays\r\n\r\n    const request = new XMLHttpRequest()\r\n\r\n    const url = TrajectoryDatasource.getFrameUrl(this.trajPath, i)\r\n    const params = TrajectoryDatasource.getFrameParams(this.trajPath, this.atomIndices)\r\n\r\n    request.open('POST', url, true)\r\n    request.responseType = 'arraybuffer'\r\n    request.setRequestHeader(\r\n      'Content-type', 'application/x-www-form-urlencoded'\r\n    )\r\n\r\n    request.addEventListener('load', () => {\r\n      const arrayBuffer = request.response\r\n      if (!arrayBuffer) {\r\n        Log.error(`empty arrayBuffer for '${url}'`)\r\n        return\r\n      }\r\n\r\n      const frameCount = new Int32Array(arrayBuffer, 0, 1)[ 0 ]\r\n      // const time = new Float32Array( arrayBuffer, 1 * 4, 1 )[ 0 ];\r\n      const box = new Float32Array(arrayBuffer, 2 * 4, 9)\r\n      const coords = new Float32Array(arrayBuffer, 11 * 4)\r\n\r\n      this._process(i, box, coords, frameCount)\r\n      if (typeof callback === 'function') {\r\n        callback()\r\n      }\r\n    }, false)\r\n\r\n    request.send(params)\r\n  }\r\n\r\n  _loadFrameCount () {\r\n    const request = new XMLHttpRequest()\r\n\r\n    const url = TrajectoryDatasource.getCountUrl(this.trajPath)\r\n\r\n    request.open('GET', url, true)\r\n    request.addEventListener('load', () => {\r\n      this._setFrameCount(parseInt(request.response))\r\n    }, false)\r\n    request.send()\r\n  }\r\n}\r\n\r\nexport default RemoteTrajectory\r\n","/**\r\n * @file Callback Trajectory\r\n * @author Tarn W. Burton <twburton@gmail.com>\r\n * @private\r\n */\r\n\r\nimport Structure from '../structure/structure'\r\nimport Trajectory, { TrajectoryParameters } from './trajectory'\r\n\r\ntype RequestCallback = (responseCallback: Function, i?: number, atomIndices?: number[][]) => void\r\n\r\n/**\r\n * Callback trajectory class. Gets data from an JavaScript function.\r\n */\r\nclass CallbackTrajectory extends Trajectory {\r\n  atomIndices: number[][]\r\n  requestCallback: RequestCallback\r\n\r\n  constructor (requestCallback: RequestCallback, structure: Structure, params: TrajectoryParameters) {\r\n    super('', structure, params)\r\n    this.requestCallback = requestCallback;\r\n    this._init(structure)\r\n  }\r\n\r\n  get type () { return 'callback' }\r\n\r\n  _makeAtomIndices () {\r\n    const atomIndices = []\r\n\r\n    if (this.structure.type === 'StructureView') {\r\n      const indices = this.structure.getAtomIndices()!  // TODO\r\n      const n = indices.length\r\n\r\n      let p = indices[ 0 ]\r\n      let q = indices[ 0 ]\r\n\r\n      for (let i = 1; i < n; ++i) {\r\n        const r = indices[ i ]\r\n\r\n        if (q + 1 < r) {\r\n          atomIndices.push([ p, q + 1 ])\r\n          p = r\r\n        }\r\n\r\n        q = r\r\n      }\r\n\r\n      atomIndices.push([ p, q + 1 ])\r\n    } else {\r\n      atomIndices.push([ 0, this.atomCount ])\r\n    }\r\n\r\n    this.atomIndices = atomIndices\r\n  }\r\n\r\n  _loadFrame (i: number, callback?: Function) {\r\n    this.requestCallback(\r\n      (i: number, box: ArrayLike<number>, coords: Float32Array, frameCount: number) => {\r\n        this._process(i, box, coords, frameCount)\r\n        if (typeof callback === 'function') {\r\n          callback()\r\n        }\r\n      }, i, this.atomIndices)\r\n  }\r\n\r\n  _loadFrameCount () {\r\n    this.requestCallback((count: number) => this._setFrameCount(count))\r\n  }\r\n}\r\n\r\nexport default CallbackTrajectory\r\n\r\n","/**\r\n * @file Trajectory Utils\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Structure from '../structure/structure'\r\nimport Frames from './frames'\r\nimport { TrajectoryParameters } from './trajectory'\r\nimport FramesTrajectory from './frames-trajectory'\r\nimport StructureTrajectory from './structure-trajectory'\r\nimport RemoteTrajectory from './remote-trajectory'\r\nimport CallbackTrajectory from './callback-trajectory'\r\n\r\nexport function makeTrajectory (trajSrc: string|Frames, structure: Structure, params: TrajectoryParameters) {\r\n  let traj\r\n\r\n  if (trajSrc && trajSrc instanceof Frames) {\r\n    traj = new FramesTrajectory(trajSrc, structure, params)\r\n  } else if (!trajSrc && structure.frames) {\r\n    traj = new StructureTrajectory(trajSrc, structure, params)\r\n  } else if (trajSrc && typeof trajSrc === 'function') {\r\n    traj = new CallbackTrajectory(trajSrc, structure, params)\r\n  } else {\r\n    traj = new RemoteTrajectory(trajSrc, structure, params)\r\n  }\r\n\r\n  return traj\r\n}\r\n\r\n","/**\r\n * @file Structure View\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3, Box3 } from 'three'\r\n\r\nimport { Debug, Log } from '../globals'\r\nimport Structure from './structure'\r\nimport Selection from '../selection/selection'\r\nimport BitArray from '../utils/bitarray'\r\n\r\nimport BondProxy from '../proxy/bond-proxy'\r\nimport AtomProxy from '../proxy/atom-proxy'\r\nimport ResidueProxy from '../proxy/residue-proxy'\r\nimport ChainProxy from '../proxy/chain-proxy'\r\nimport ModelProxy from '../proxy/model-proxy'\r\nimport SpatialHash from '../geometry/spatial-hash';\r\nimport BondHash from '../store/bond-hash';\r\nimport ResidueMap from '../store/residue-map';\r\nimport AtomMap from '../store/atom-map';\r\nimport ModelStore from '../store/model-store';\r\nimport ChainStore from '../store/chain-store';\r\nimport ResidueStore from '../store/residue-store';\r\nimport AtomStore from '../store/atom-store';\r\nimport BondStore from '../store/bond-store';\r\nimport Validation from './validation';\r\nimport Unitcell from '../symmetry/unitcell';\r\nimport Entity from './entity';\r\nimport Assembly from '../symmetry/assembly';\r\nimport { Data } from './data';\r\n\r\n/**\r\n * Get view on structure restricted to the selection\r\n * @param  {Selection} selection - the selection\r\n * @return {StructureView} the view on the structure\r\n */\r\nStructure.prototype.getView = function (this: Structure, selection: Selection) {\r\n  // added here to avoid cyclic import dependency\r\n  return new StructureView(this, selection)\r\n}\r\n\r\n/**\r\n * View on the structure, restricted to the selection\r\n */\r\nclass StructureView extends Structure {\r\n  structure: Structure\r\n  selection: Selection\r\n\r\n  /**\r\n   * @param {Structure} structure - the structure\r\n   * @param {Selection} selection - the selection\r\n   */\r\n  constructor (structure: Structure, selection: Selection) {\r\n    super()\r\n\r\n    this.structure = structure\r\n    this.selection = selection\r\n\r\n    this.center = new Vector3()\r\n    this.boundingBox = new Box3()\r\n\r\n    this._bp = this.getBondProxy()\r\n    this._ap = this.getAtomProxy()\r\n    this._rp = this.getResidueProxy()\r\n    this._cp = this.getChainProxy()\r\n\r\n    if (this.selection) {\r\n      this.selection.signals.stringChanged.add(this.refresh, this)\r\n    }\r\n\r\n    this.structure.signals.refreshed.add(this.refresh, this)\r\n\r\n    this.refresh()\r\n  }\r\n\r\n  init () {}\r\n\r\n  get type () { return 'StructureView' }\r\n\r\n  get name () { return this.structure.name }\r\n  get path () { return this.structure.path }\r\n  get title () { return this.structure.title }\r\n  get id () { return this.structure.id }\r\n  get data (): Data { return this.structure.data }\r\n  get atomSetDict () { return this.structure.atomSetDict }\r\n  get biomolDict (): {[k: string]: Assembly} { return this.structure.biomolDict }\r\n  get entityList (): Entity[] { return this.structure.entityList }\r\n  get unitcell (): Unitcell|undefined { return this.structure.unitcell }\r\n  get frames () { return this.structure.frames }\r\n  get boxes () { return this.structure.boxes }\r\n  get validation (): Validation|undefined { return this.structure.validation }\r\n  get bondStore () { return this.structure.bondStore }\r\n  get backboneBondStore () { return this.structure.backboneBondStore }\r\n  get rungBondStore (): BondStore { return this.structure.rungBondStore }\r\n  get atomStore (): AtomStore { return this.structure.atomStore }\r\n  get residueStore (): ResidueStore { return this.structure.residueStore }\r\n  get chainStore (): ChainStore { return this.structure.chainStore }\r\n  get modelStore (): ModelStore { return this.structure.modelStore }\r\n  get atomMap (): AtomMap { return this.structure.atomMap }\r\n  get residueMap (): ResidueMap { return this.structure.residueMap }\r\n  get bondHash (): BondHash|undefined { return this.structure.bondHash }\r\n  get spatialHash (): SpatialHash|undefined { return this.structure.spatialHash }\r\n\r\n  get _hasCoords () { return this.structure._hasCoords }\r\n  set _hasCoords (value) { this.structure._hasCoords = value }\r\n\r\n  /**\r\n   * Updates atomSet, bondSet, atomSetCache, atomCount, bondCount, boundingBox, center.\r\n   * @emits {Structure.signals.refreshed} when refreshed\r\n   * @return {undefined}\r\n   */\r\n  refresh () {\r\n    if (Debug) Log.time('StructureView.refresh')\r\n\r\n    this.atomSetCache = {}\r\n    const structure = this.structure\r\n\r\n    if (this.selection.isAllSelection() &&\r\n        structure !== this && structure.atomSet && structure.bondSet\r\n    ) {\r\n      this.atomSet = structure.atomSet.clone()\r\n      this.bondSet = structure.bondSet.clone()\r\n\r\n      for (let name in this.atomSetDict) {\r\n        const atomSet = this.atomSetDict[ name ]\r\n        this.atomSetCache[ '__' + name ] = atomSet.clone()\r\n      }\r\n\r\n      this.atomCount = structure.atomCount\r\n      this.bondCount = structure.bondCount\r\n\r\n      this.boundingBox.copy(structure.boundingBox)\r\n      this.center.copy(structure.center)\r\n    } else if (this.selection.isNoneSelection() &&\r\n        structure !== this && structure.atomSet && structure.bondSet\r\n    ) {\r\n      this.atomSet = new BitArray(structure.atomCount)\r\n      this.bondSet = new BitArray(structure.bondCount)\r\n\r\n      for (let name in this.atomSetDict) {\r\n        this.atomSetCache[ '__' + name ] = new BitArray(structure.atomCount)\r\n      }\r\n\r\n      this.atomCount = 0\r\n      this.bondCount = 0\r\n\r\n      this.boundingBox.makeEmpty()\r\n      this.center.set(0, 0, 0)\r\n    } else {\r\n      this.atomSet = this.getAtomSet(this.selection, true)\r\n      if (structure.atomSet) {\r\n        this.atomSet = this.atomSet.intersection(structure.atomSet)\r\n      }\r\n\r\n      this.bondSet = this.getBondSet()\r\n\r\n      for (let name in this.atomSetDict) {\r\n        const atomSet = this.atomSetDict[ name ]\r\n        this.atomSetCache[ '__' + name ] = atomSet.makeIntersection(this.atomSet)\r\n      }\r\n\r\n      this.atomCount = this.atomSet.getSize()\r\n      this.bondCount = this.bondSet.getSize()\r\n\r\n      this.boundingBox = this.getBoundingBox()\r\n      this.center = this.boundingBox.getCenter(new Vector3())\r\n    }\r\n\r\n    if (Debug) Log.timeEnd('StructureView.refresh')\r\n\r\n    this.signals.refreshed.dispatch()\r\n  }\r\n\r\n  //\r\n\r\n  setSelection (selection: Selection) {\r\n    this.selection = selection\r\n\r\n    this.refresh()\r\n  }\r\n\r\n  getSelection (selection?: Selection) {\r\n    const seleList: string[] = []\r\n\r\n    if (selection && selection.string) {\r\n      seleList.push(selection.string)\r\n    }\r\n\r\n    const parentSelection = this.structure.getSelection()\r\n    if (parentSelection && parentSelection.string) {\r\n      seleList.push(parentSelection.string)\r\n    }\r\n\r\n    if (this.selection && this.selection.string) {\r\n      seleList.push(this.selection.string)\r\n    }\r\n\r\n    let sele = ''\r\n    if (seleList.length > 0) {\r\n      sele = `( ${seleList.join(' ) AND ( ')} )`\r\n    }\r\n\r\n    return new Selection(sele)\r\n  }\r\n\r\n  getStructure () {\r\n    return this.structure.getStructure()\r\n  }\r\n\r\n  //\r\n\r\n  eachBond (callback: (entity: BondProxy) => any, selection?: Selection) {\r\n    this.structure.eachBond(callback, this.getSelection(selection))\r\n  }\r\n\r\n  eachAtom (callback: (entity: AtomProxy) => any, selection?: Selection) {\r\n    const ap = this.getAtomProxy()\r\n    const atomSet = this.getAtomSet(selection)\r\n    const n = this.atomStore.count\r\n\r\n    if (atomSet.getSize() < n) {\r\n      atomSet.forEach(function (index) {\r\n        ap.index = index\r\n        callback(ap)\r\n      })\r\n    } else {\r\n      for (let i = 0; i < n; ++i) {\r\n        ap.index = i\r\n        callback(ap)\r\n      }\r\n    }\r\n  }\r\n\r\n  eachResidue (callback: (entity: ResidueProxy) => any, selection?: Selection) {\r\n    this.structure.eachResidue(callback, this.getSelection(selection))\r\n  }\r\n\r\n  /**\r\n   * Not implemented\r\n   * @alias StructureView#eachResidueN\r\n   * @return {undefined}\r\n   */\r\n  eachResidueN (n: number, callback: (entity: ResidueProxy) => any) {\r\n    console.error('StructureView.eachResidueN() not implemented')\r\n  }\r\n\r\n  eachChain (callback: (entity: ChainProxy) => any, selection?: Selection) {\r\n    this.structure.eachChain(callback, this.getSelection(selection))\r\n  }\r\n\r\n  eachModel (callback: (entity: ModelProxy) => any, selection?: Selection) {\r\n    this.structure.eachModel(callback, this.getSelection(selection))\r\n  }\r\n\r\n    //\r\n\r\n  getAtomSet (selection?: boolean|Selection|BitArray, ignoreView = false) {\r\n    let atomSet = this.structure.getAtomSet(selection)\r\n    if (!ignoreView && this.atomSet) {\r\n      atomSet = atomSet.makeIntersection(this.atomSet)\r\n    }\r\n\r\n    return atomSet\r\n  }\r\n\r\n  //\r\n\r\n  getAtomIndices (selection?: Selection) {\r\n    return this.structure.getAtomIndices(this.getSelection(selection))\r\n  }\r\n\r\n  refreshPosition () {\r\n    return this.structure.refreshPosition()\r\n  }\r\n\r\n  //\r\n\r\n  dispose () {\r\n    if (this.selection) {\r\n      this.selection.signals.stringChanged.remove(this.refresh, this)\r\n    }\r\n\r\n    this.structure.signals.refreshed.remove(this.refresh, this)\r\n\r\n    this.structure = new Structure() // delete old data\r\n\r\n    delete this.atomSet\r\n    delete this.bondSet\r\n\r\n  }\r\n}\r\n\r\nexport default StructureView\r\n","/**\r\n * @file Alignment\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Debug, Log } from '../globals'\r\n\r\n// const nucleotides = 'ACTG';\r\nconst aminoacidsX = 'ACDEFGHIKLMNPQRSTVWY'\r\nconst aminoacids = 'ARNDCQEGHILKMFPSTWYVBZ?'\r\n\r\nconst blosum62x = [\r\n  [4, 0, -2, -1, -2, 0, -2, -1, -1, -1, -1, -2, -1, -1, -1, 1, 0, 0, -3, -2],        // A\r\n  [0, 9, -3, -4, -2, -3, -3, -1, -3, -1, -1, -3, -3, -3, -3, -1, -1, -1, -2, -2],    // C\r\n  [-2, -3, 6, 2, -3, -1, -1, -3, -1, -4, -3, 1, -1, 0, -2, 0, -1, -3, -4, -3],       // D\r\n  [-1, -4, 2, 5, -3, -2, 0, -3, 1, -3, -2, 0, -1, 2, 0, 0, -1, -2, -3, -2],          // E\r\n  [-2, -2, -3, -3, 6, -3, -1, 0, -3, 0, 0, -3, -4, -3, -3, -2, -2, -1, 1, 3],        // F\r\n  [0, -3, -1, -2, -3, 6, -2, -4, -2, -4, -3, 0, -2, -2, -2, 0, -2, -3, -2, -3],      // G\r\n  [-2, -3, -1, 0, -1, -2, 8, -3, -1, -3, -2, 1, -2, 0, 0, -1, -2, -3, -2, 2],        // H\r\n  [-1, -1, -3, -3, 0, -4, -3, 4, -3, 2, 1, -3, -3, -3, -3, -2, -1, 3, -3, -1],       // I\r\n  [-1, -3, -1, 1, -3, -2, -1, -3, 5, -2, -1, 0, -1, 1, 2, 0, -1, -2, -3, -2],        // K\r\n  [-1, -1, -4, -3, 0, -4, -3, 2, -2, 4, 2, -3, -3, -2, -2, -2, -1, 1, -2, -1],       // L\r\n  [-1, -1, -3, -2, 0, -3, -2, 1, -1, 2, 5, -2, -2, 0, -1, -1, -1, 1, -1, -1],        // M\r\n  [-2, -3, 1, 0, -3, 0, 1, -3, 0, -3, -2, 6, -2, 0, 0, 1, 0, -3, -4, -2],            // N\r\n  [-1, -3, -1, -1, -4, -2, -2, -3, -1, -3, -2, -2, 7, -1, -2, -1, -1, -2, -4, -3],   // P\r\n  [-1, -3, 0, 2, -3, -2, 0, -3, 1, -2, 0, 0, -1, 5, 1, 0, -1, -2, -2, -1],           // Q\r\n  [-1, -3, -2, 0, -3, -2, 0, -3, 2, -2, -1, 0, -2, 1, 5, -1, -1, -3, -3, -2],        // R\r\n  [1, -1, 0, 0, -2, 0, -1, -2, 0, -2, -1, 1, -1, 0, -1, 4, 1, -2, -3, -2],           // S\r\n  [0, -1, -1, -1, -2, -2, -2, -1, -1, -1, -1, 0, -1, -1, -1, 1, 5, 0, -2, -2],       // T\r\n  [0, -1, -3, -2, -1, -3, -3, 3, -2, 1, 1, -3, -2, -2, -3, -2, 0, 4, -3, -1],        // V\r\n  [-3, -2, -4, -3, 1, -2, -2, -3, -3, -2, -1, -4, -4, -2, -3, -3, -2, -3, 11, 2],    // W\r\n  [-2, -2, -3, -2, 3, -3, 2, -1, -2, -1, -1, -2, -3, -1, -2, -2, -2, -1, 2, 7]       // Y\r\n]\r\n\r\nconst blosum62 = [\r\n  // A  R  N  D  C  Q  E  G  H  I  L  K  M  F  P  S  T  W  Y  V  B  Z  X\r\n  [4, -1, -2, -2, 0, -1, -1, 0, -2, -1, -1, -1, -1, -2, -1, 1, 0, -3, -2, 0, -2, -1, 0], // A\r\n  [-1, 5, 0, -2, -3, 1, 0, -2, 0, -3, -2, 2, -1, -3, -2, -1, -1, -3, -2, -3, -1, 0, -1], // R\r\n  [-2, 0, 6, 1, -3, 0, 0, 0, 1, -3, -3, 0, -2, -3, -2, 1, 0, -4, -2, -3, 3, 0, -1], // N\r\n  [-2, -2, 1, 6, -3, 0, 2, -1, -1, -3, -4, -1, -3, -3, -1, 0, -1, -4, -3, -3, 4, 1, -1], // D\r\n  [0, -3, -3, -3, 9, -3, -4, -3, -3, -1, -1, -3, -1, -2, -3, -1, -1, -2, -2, -1, -3, -3, -2], // C\r\n  [-1, 1, 0, 0, -3, 5, 2, -2, 0, -3, -2, 1, 0, -3, -1, 0, -1, -2, -1, -2, 0, 3, -1], // Q\r\n  [-1, 0, 0, 2, -4, 2, 5, -2, 0, -3, -3, 1, -2, -3, -1, 0, -1, -3, -2, -2, 1, 4, -1], // E\r\n  [0, -2, 0, -1, -3, -2, -2, 6, -2, -4, -4, -2, -3, -3, -2, 0, -2, -2, -3, -3, -1, -2, -1], // G\r\n  [-2, 0, 1, -1, -3, 0, 0, -2, 8, -3, -3, -1, -2, -1, -2, -1, -2, -2, 2, -3, 0, 0, -1], // H\r\n  [-1, -3, -3, -3, -1, -3, -3, -4, -3, 4, 2, -3, 1, 0, -3, -2, -1, -3, -1, 3, -3, -3, -1], // I\r\n  [-1, -2, -3, -4, -1, -2, -3, -4, -3, 2, 4, -2, 2, 0, -3, -2, -1, -2, -1, 1, -4, -3, -1], // L\r\n  [-1, 2, 0, -1, -3, 1, 1, -2, -1, -3, -2, 5, -1, -3, -1, 0, -1, -3, -2, -2, 0, 1, -1], // K\r\n  [-1, -1, -2, -3, -1, 0, -2, -3, -2, 1, 2, -1, 5, 0, -2, -1, -1, -1, -1, 1, -3, -1, -1], // M\r\n  [-2, -3, -3, -3, -2, -3, -3, -3, -1, 0, 0, -3, 0, 6, -4, -2, -2, 1, 3, -1, -3, -3, -1], // F\r\n  [-1, -2, -2, -1, -3, -1, -1, -2, -2, -3, -3, -1, -2, -4, 7, -1, -1, -4, -3, -2, -2, -1, -2], // P\r\n  [1, -1, 1, 0, -1, 0, 0, 0, -1, -2, -2, 0, -1, -2, -1, 4, 1, -3, -2, -2, 0, 0, 0], // S\r\n  [0, -1, 0, -1, -1, -1, -1, -2, -2, -1, -1, -1, -1, -2, -1, 1, 5, -2, -2, 0, -1, -1, 0], // T\r\n  [-3, -3, -4, -4, -2, -2, -3, -2, -2, -3, -2, -3, -1, 1, -4, -3, -2, 11, 2, -3, -4, -3, -2], // W\r\n  [-2, -2, -2, -3, -2, -1, -2, -3, 2, -1, -1, -2, -1, 3, -3, -2, -2, 2, 7, -1, -3, -2, -1], // Y\r\n  [0, -3, -3, -3, -1, -2, -2, -3, -3, 3, 1, -2, 1, -1, -2, -2, 0, -3, -1, 4, -3, -2, -1], // V\r\n  [-2, -1, 3, 4, -3, 0, 1, -1, 0, -3, -4, 0, -3, -3, -2, 0, -1, -4, -3, -3, 4, 1, -1], // B\r\n  [-1, 0, 0, 1, -3, 3, 4, -2, 0, -3, -3, 1, -1, -3, -1, 0, -1, -3, -2, -2, 1, 4, -1], // Z\r\n  [0, -1, -1, -1, -2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -2, 0, 0, -2, -1, -1, -1, -1, -1]  // X\r\n]\r\n\r\nfunction prepareMatrix (cellNames: string, mat: number[][]) {\r\n  let j: number\r\n  let i = 0\r\n  const matDict: { [k: string]: { [k: string]: number } } = {}\r\n  mat.forEach(function (row) {\r\n    j = 0\r\n    const rowDict: { [k: string]: number } = {}\r\n    row.forEach(function (elm) {\r\n      rowDict[ cellNames[ j++ ] ] = elm\r\n    })\r\n    matDict[ cellNames[ i++ ] ] = rowDict\r\n  })\r\n  return matDict\r\n}\r\n\r\nconst SubstitutionMatrices = (function () {\r\n  return {\r\n    blosum62: prepareMatrix(aminoacids, blosum62),\r\n    blosum62x: prepareMatrix(aminoacidsX, blosum62x)\r\n  }\r\n}())\r\nexport type SubstitutionMatrix = ''|'blosum62'|'blosum62x'\r\n\r\nclass Alignment {\r\n  substMatrix: { [k: string]: { [k: string]: number } }\r\n\r\n  n: number\r\n  m: number\r\n  score?: number\r\n  ali: string\r\n\r\n  S: number[][]\r\n  V: number[][]\r\n  H: number[][]\r\n\r\n  ali1: string\r\n  ali2: string\r\n\r\n  constructor (readonly seq1: string, readonly seq2: string, readonly gapPenalty = -10, readonly gapExtensionPenalty = -1, substMatrix: SubstitutionMatrix = 'blosum62') {\r\n    // TODO try encoding seqs as integers and use array subst matrix, maybe faster\r\n\r\n    if (substMatrix) {\r\n      this.substMatrix = SubstitutionMatrices[ substMatrix ]\r\n    }\r\n  }\r\n\r\n  initMatrices () {\r\n    this.n = this.seq1.length\r\n    this.m = this.seq2.length\r\n\r\n    // Log.log(this.n, this.m);\r\n\r\n    this.score = undefined\r\n    this.ali = ''\r\n\r\n    this.S = []\r\n    this.V = []\r\n    this.H = []\r\n\r\n    for (let i = 0; i <= this.n; ++i) {\r\n      this.S[ i ] = []\r\n      this.V[ i ] = []\r\n      this.H[ i ] = []\r\n\r\n      for (let j = 0; j <= this.m; ++j) {\r\n        this.S[ i ][ j ] = 0\r\n        this.V[ i ][ j ] = 0\r\n        this.H[ i ][ j ] = 0\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i <= this.n; ++i) {\r\n      this.S[ i ][ 0 ] = this.gap(0)\r\n      this.H[ i ][ 0 ] = -Infinity\r\n    }\r\n\r\n    for (let j = 0; j <= this.m; ++j) {\r\n      this.S[ 0 ][ j ] = this.gap(0)\r\n      this.V[ 0 ][ j ] = -Infinity\r\n    }\r\n\r\n    this.S[ 0 ][ 0 ] = 0\r\n\r\n    // Log.log(this.S, this.V, this.H);\r\n  }\r\n\r\n  gap (len: number) {\r\n    return this.gapPenalty + len * this.gapExtensionPenalty\r\n  }\r\n\r\n  makeScoreFn () {\r\n    const seq1 = this.seq1\r\n    const seq2 = this.seq2\r\n\r\n    const substMatrix = this.substMatrix\r\n\r\n    if (substMatrix) {\r\n      return function score (i: number, j: number) {\r\n        const c1 = seq1[ i ]\r\n        const c2 = seq2[ j ]\r\n\r\n        try {\r\n          return substMatrix[ c1 ][ c2 ]\r\n        } catch (e) {\r\n          return -4\r\n        }\r\n      }\r\n    } else {\r\n      Log.warn('Alignment: no subst matrix')\r\n\r\n      return function scoreNoSubstMat (i: number, j: number) {\r\n        const c1 = seq1[ i ]\r\n        const c2 = seq2[ j ]\r\n\r\n        return c1 === c2 ? 5 : -3\r\n      }\r\n    }\r\n  }\r\n\r\n  calc () {\r\n    if (Debug) Log.time('Alignment.calc')\r\n\r\n    this.initMatrices()\r\n\r\n    const gap0 = this.gap(0)\r\n    const scoreFn = this.makeScoreFn()\r\n    const gapExtensionPenalty = this.gapExtensionPenalty\r\n\r\n    const V = this.V\r\n    const H = this.H\r\n    const S = this.S\r\n\r\n    const n = this.n\r\n    const m = this.m\r\n\r\n    let Vi1, Si1, Vi, Hi, Si\r\n\r\n    for (let i = 1; i <= n; ++i) {\r\n      Si1 = S[ i - 1 ]\r\n      Vi1 = V[ i - 1 ]\r\n\r\n      Vi = V[ i ]\r\n      Hi = H[ i ]\r\n      Si = S[ i ]\r\n\r\n      for (let j = 1; j <= m; ++j) {\r\n        Vi[j] = Math.max(\r\n          Si1[ j ] + gap0,\r\n          Vi1[ j ] + gapExtensionPenalty\r\n        )\r\n\r\n        Hi[j] = Math.max(\r\n          Si[ j - 1 ] + gap0,\r\n          Hi[ j - 1 ] + gapExtensionPenalty\r\n        )\r\n\r\n        Si[j] = Math.max(\r\n          Si1[ j - 1 ] + scoreFn(i - 1, j - 1), // match\r\n          Vi[ j ], // del\r\n          Hi[ j ]  // ins\r\n        )\r\n      }\r\n    }\r\n\r\n    if (Debug) Log.timeEnd('Alignment.calc')\r\n\r\n    if (Debug) Log.log(this.S, this.V, this.H)\r\n  }\r\n\r\n  trace () {\r\n    if (Debug) Log.time('Alignment.trace')\r\n\r\n    this.ali1 = ''\r\n    this.ali2 = ''\r\n\r\n    const scoreFn = this.makeScoreFn()\r\n\r\n    let i = this.n\r\n    let j = this.m\r\n    let mat\r\n\r\n    if (this.S[i][j] >= this.V[i][j]) {\r\n      mat = 'S'\r\n      this.score = this.S[i][j]\r\n    } else if (this.V[i][j] >= this.H[i][j]) {\r\n      mat = 'V'\r\n      this.score = this.V[i][j]\r\n    } else {\r\n      mat = 'H'\r\n      this.score = this.H[i][j]\r\n    }\r\n\r\n    if (Debug) Log.log('Alignment: SCORE', this.score)\r\n    if (Debug) Log.log('Alignment: S, V, H', this.S[i][j], this.V[i][j], this.H[i][j])\r\n\r\n    while (i > 0 && j > 0) {\r\n      if (mat === 'S') {\r\n        if (this.S[i][j] === this.S[i - 1][j - 1] + scoreFn(i - 1, j - 1)) {\r\n          this.ali1 = this.seq1[i - 1] + this.ali1\r\n          this.ali2 = this.seq2[j - 1] + this.ali2\r\n          --i\r\n          --j\r\n          mat = 'S'\r\n        } else if (this.S[i][j] === this.V[i][j]) {\r\n          mat = 'V'\r\n        } else if (this.S[i][j] === this.H[i][j]) {\r\n          mat = 'H'\r\n        } else {\r\n          // Log.debug('Alignment: S');\r\n          --i\r\n          --j\r\n        }\r\n      } else if (mat === 'V') {\r\n        if (this.V[i][j] === this.V[i - 1][j] + this.gapExtensionPenalty) {\r\n          this.ali1 = this.seq1[i - 1] + this.ali1\r\n          this.ali2 = '-' + this.ali2\r\n          --i\r\n          mat = 'V'\r\n        } else if (this.V[i][j] === this.S[i - 1][j] + this.gap(0)) {\r\n          this.ali1 = this.seq1[i - 1] + this.ali1\r\n          this.ali2 = '-' + this.ali2\r\n          --i\r\n          mat = 'S'\r\n        } else {\r\n          // Log.debug('Alignment: V');\r\n          --i\r\n        }\r\n      } else if (mat === 'H') {\r\n        if (this.H[i][j] === this.H[i][j - 1] + this.gapExtensionPenalty) {\r\n          this.ali1 = '-' + this.ali1\r\n          this.ali2 = this.seq2[j - 1] + this.ali2\r\n          --j\r\n          mat = 'H'\r\n        } else if (this.H[i][j] === this.S[i][j - 1] + this.gap(0)) {\r\n          this.ali1 = '-' + this.ali1\r\n          this.ali2 = this.seq2[j - 1] + this.ali2\r\n          --j\r\n          mat = 'S'\r\n        } else {\r\n          // Log.debug('Alignment: H');\r\n          --j\r\n        }\r\n      } else {\r\n        Log.error('Alignment: no matrix')\r\n      }\r\n    }\r\n\r\n    while (i > 0) {\r\n      this.ali1 = this.seq1[ i - 1 ] + this.ali1\r\n      this.ali2 = '-' + this.ali2\r\n      --i\r\n    }\r\n\r\n    while (j > 0) {\r\n      this.ali1 = '-' + this.ali1\r\n      this.ali2 = this.seq2[ j - 1 ] + this.ali2\r\n      --j\r\n    }\r\n\r\n    if (Debug) Log.timeEnd('Alignment.trace')\r\n\r\n    if (Debug) Log.log([this.ali1, this.ali2])\r\n  }\r\n}\r\n\r\nexport default Alignment\r\n","/**\r\n * @file Align Utils\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Structure from '../structure/structure'\r\nimport Selection from '../selection/selection'\r\nimport Alignment from './alignment'\r\nimport Superposition from './superposition'\r\n\r\n/**\r\n * Perform structural superposition of two structures,\r\n * optionally guided by a sequence alignment\r\n * @param  {Structure|StructureView} s1 - structure 1 which is superposed onto structure 2\r\n * @param  {Structure|StructureView} s2 - structure 2 onto which structure 1 is superposed\r\n * @param  {Boolean} [align] - guide the superposition by a sequence alignment\r\n * @param  {String} [sele1] - selection string for structure 1\r\n * @param  {String} [sele2] - selection string for structure 2\r\n * @return {undefined}\r\n */\r\nfunction superpose (s1: Structure, s2: Structure, align = false, sele1 = '', sele2 = '') {\r\n  let i: number\r\n  let j: number\r\n  let n: number\r\n  let atoms1\r\n  let atoms2\r\n\r\n  if (align) {\r\n    let _s1 = s1\r\n    let _s2 = s2\r\n\r\n    if (sele1 && sele2) {\r\n      _s1 = s1.getView(new Selection(sele1))\r\n      _s2 = s2.getView(new Selection(sele2))\r\n    }\r\n\r\n    const seq1 = _s1.getSequence()\r\n    const seq2 = _s2.getSequence()\r\n\r\n    // Log.log( seq1.join(\"\") );\r\n    // Log.log( seq2.join(\"\") );\r\n\r\n    const ali = new Alignment(seq1.join(''), seq2.join(''))\r\n\r\n    ali.calc()\r\n    ali.trace()\r\n\r\n    // Log.log( \"superpose alignment score\", ali.score );\r\n\r\n    // Log.log( ali.ali1 );\r\n    // Log.log( ali.ali2 );\r\n\r\n    let _i, _j\r\n    i = 0\r\n    j = 0\r\n    n = ali.ali1.length\r\n    const aliIdx1: boolean[] = []\r\n    const aliIdx2: boolean[] = []\r\n\r\n    for (let l = 0; l < n; ++l) {\r\n      const x = ali.ali1[ l ]\r\n      const y = ali.ali2[ l ]\r\n\r\n      _i = 0\r\n      _j = 0\r\n\r\n      if (x === '-') {\r\n        aliIdx2[ j ] = false\r\n      } else {\r\n        aliIdx2[ j ] = true\r\n        _i = 1\r\n      }\r\n\r\n      if (y === '-') {\r\n        aliIdx1[ i ] = false\r\n      } else {\r\n        aliIdx1[ i ] = true\r\n        _j = 1\r\n      }\r\n\r\n      i += _i\r\n      j += _j\r\n    }\r\n\r\n    // Log.log( i, j );\r\n\r\n    // Log.log( aliIdx1 );\r\n    // Log.log( aliIdx2 );\r\n\r\n    const _atoms1: number[] = []\r\n    const _atoms2: number[] = []\r\n    const ap1 = _s1.getAtomProxy()\r\n    const ap2 = _s2.getAtomProxy()\r\n\r\n    i = 0\r\n    _s1.eachResidue(function (r) {\r\n      if (r.traceAtomIndex === undefined ||\r\n            r.traceAtomIndex !== r.getAtomIndexByName('CA')) return\r\n\r\n      if (aliIdx1[ i ]) {\r\n        ap1.index = r.getAtomIndexByName('CA')!  // TODO\r\n        _atoms1.push(ap1.x, ap1.y, ap1.z)\r\n      }\r\n      i += 1\r\n    })\r\n\r\n    i = 0\r\n    _s2.eachResidue(function (r) {\r\n      if (r.traceAtomIndex === undefined ||\r\n            r.traceAtomIndex !== r.getAtomIndexByName('CA')) return\r\n\r\n      if (aliIdx2[ i ]) {\r\n        ap2.index = r.getAtomIndexByName('CA')!  // TODO\r\n        _atoms2.push(ap2.x, ap2.y, ap2.z)\r\n      }\r\n      i += 1\r\n    })\r\n\r\n    atoms1 = new Float32Array(_atoms1)\r\n    atoms2 = new Float32Array(_atoms2)\r\n  } else {\r\n    const sviewCa1 = s1.getView(new Selection(`${sele1} and .CA`))\r\n    const sviewCa2 = s2.getView(new Selection(`${sele2} and .CA`))\r\n\r\n    atoms1 = sviewCa1\r\n    atoms2 = sviewCa2\r\n  }\r\n\r\n  const superpose = new Superposition(atoms1, atoms2)\r\n  const result = superpose.transform(s1)\r\n  s1.refreshPosition()\r\n  return result\r\n}\r\n\r\nexport {\r\n  superpose\r\n}\r\n","/**\r\n * @file Sturucture Component\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Signal } from 'signals'\r\n\r\nimport { ComponentRegistry, MeasurementDefaultParams } from '../globals'\r\nimport {\r\n  defaults, /*deepEqual, */createRingBuffer, RingBuffer, createSimpleDict, SimpleDict\r\n} from '../utils'\r\nimport { smoothstep } from '../math/math-utils'\r\nimport Component, { ComponentSignals, ComponentDefaultParameters } from './component'\r\nimport RepresentationCollection from './representation-collection'\r\nimport TrajectoryElement from './trajectory-element'\r\nimport RepresentationElement from './representation-element'\r\nimport { makeTrajectory } from '../trajectory/trajectory-utils'\r\nimport { TrajectoryParameters } from '../trajectory/trajectory'\r\nimport Selection from '../selection/selection'\r\nimport Structure from '../structure/structure'\r\nimport StructureView from '../structure/structure-view'\r\nimport { superpose } from '../align/align-utils'\r\nimport Stage from '../stage/stage'\r\nimport StructureRepresentation, { StructureRepresentationParameters } from '../representation/structure-representation'\r\nimport AtomProxy from '../proxy/atom-proxy'\r\nimport { Vector3, Box3 } from 'three';\r\nimport { AngleRepresentationParameters } from '../representation/angle-representation';\r\nimport { AxesRepresentationParameters } from '../representation/axes-representation';\r\nimport { BallAndStickRepresentationParameters } from '../representation/ballandstick-representation';\r\nimport { CartoonRepresentationParameters } from '../representation/cartoon-representation';\r\nimport { ContactRepresentationParameters } from '../representation/contact-representation';\r\nimport { DihedralRepresentationParameters } from '../representation/dihedral-representation';\r\nimport { DihedralHistogramRepresentationParameters } from '../representation/dihedral-histogram-representation';\r\nimport { DistanceRepresentationParameters } from '../representation/distance-representation';\r\nimport { HyperballRepresentationParameters } from '../representation/hyperball-representation';\r\nimport { LabelRepresentationParameters } from '../representation/label-representation';\r\nimport { LineRepresentationParameters } from '../representation/line-representation';\r\nimport { PointRepresentationParameters } from '../representation/point-representation';\r\nimport { SurfaceRepresentationParameters } from '../representation/surface-representation';\r\nimport { RibbonRepresentationParameters } from '../representation/ribbon-representation';\r\nimport { RocketRepresentationParameters } from '../representation/rocket-representation';\r\nimport { TraceRepresentationParameters } from '../representation/trace-representation';\r\nimport { UnitcellRepresentationParameters } from '../representation/unitcell-representation';\r\nimport { SliceRepresentationParameters } from '../representation/slice-representation'\r\nimport { MolecularSurfaceRepresentationParameters } from '../representation/molecularsurface-representation'\r\nimport { DotRepresentationParameters } from '../representation/dot-representation'\r\n\r\nexport type StructureRepresentationType = keyof StructureRepresentationParametersMap\r\n\r\ninterface StructureRepresentationParametersMap {\r\n  'angle':  AngleRepresentationParameters,\r\n  'axes' :  AxesRepresentationParameters,\r\n  'backbone': BallAndStickRepresentationParameters,\r\n  'ball+stick': BallAndStickRepresentationParameters,\r\n  'base': BallAndStickRepresentationParameters,\r\n  'cartoon': CartoonRepresentationParameters,\r\n  'contact': ContactRepresentationParameters,\r\n  'dihedral': DihedralRepresentationParameters,\r\n  'dihedral-histogram': DihedralHistogramRepresentationParameters,\r\n  'distance': DistanceRepresentationParameters,\r\n  'dot': DotRepresentationParameters,\r\n  'helixorient': StructureRepresentationParameters,\r\n  'hyperball': HyperballRepresentationParameters,\r\n  'label': LabelRepresentationParameters,\r\n  'licorice': BallAndStickRepresentationParameters,\r\n  'line': LineRepresentationParameters,\r\n  'molecularsurface': MolecularSurfaceRepresentationParameters,\r\n  'point': PointRepresentationParameters,\r\n  'ribbon': RibbonRepresentationParameters,\r\n  'rocket': RocketRepresentationParameters,\r\n  'rope': CartoonRepresentationParameters,\r\n  'slice': SliceRepresentationParameters,\r\n  'spacefill': BallAndStickRepresentationParameters,\r\n  'surface': SurfaceRepresentationParameters,\r\n  'trace': TraceRepresentationParameters,\r\n  'tube': CartoonRepresentationParameters,\r\n  'unitcell': UnitcellRepresentationParameters,\r\n  'validation': StructureRepresentationParameters\r\n}\r\n\r\nexport const StructureComponentDefaultParameters = Object.assign({\r\n  sele: '',\r\n  defaultAssembly: ''\r\n}, ComponentDefaultParameters)\r\nexport type StructureComponentParameters = typeof StructureComponentDefaultParameters\r\n\r\nexport interface StructureComponentSignals extends ComponentSignals {\r\n  trajectoryAdded: Signal  // when a trajectory is added\r\n  trajectoryRemoved: Signal  // when a trajectory is removed\r\n  defaultAssemblyChanged: Signal  // on default assembly change\r\n}\r\n\r\n/**\r\n * Component wrapping a {@link Structure} object\r\n *\r\n * @example\r\n * // get a structure component by loading a structure file into the stage\r\n * stage.loadFile( \"rcsb://4opj\" ).then( function( structureComponent ){\r\n *     structureComponent.addRepresentation( \"cartoon\" );\r\n *     structureComponent.autoView();\r\n * } );\r\n */\r\nclass StructureComponent extends Component {\r\n  readonly signals: StructureComponentSignals\r\n  readonly parameters: StructureComponentParameters\r\n  get defaultParameters () { return StructureComponentDefaultParameters }\r\n\r\n  selection: Selection\r\n  structureView: StructureView\r\n  readonly trajList: TrajectoryElement[] = []\r\n\r\n  pickBuffer: RingBuffer<number>\r\n  pickDict: SimpleDict<number[], number[]>\r\n  lastPick?: number\r\n\r\n  spacefillRepresentation: RepresentationElement\r\n  distanceRepresentation: RepresentationElement\r\n  angleRepresentation: RepresentationElement\r\n  dihedralRepresentation: RepresentationElement\r\n\r\n  measureRepresentations: RepresentationCollection\r\n\r\n  constructor (stage: Stage, readonly structure: Structure, params: Partial<StructureComponentParameters> = {}) {\r\n    super(stage, structure, Object.assign({ name: structure.name }, params))\r\n\r\n    this.signals = Object.assign(this.signals, {\r\n      trajectoryAdded: new Signal(),\r\n      trajectoryRemoved: new Signal(),\r\n      defaultAssemblyChanged: new Signal()\r\n    })\r\n\r\n    this.initSelection(this.parameters.sele)\r\n\r\n    //\r\n\r\n    this.pickBuffer = createRingBuffer(4)\r\n    this.pickDict = createSimpleDict()\r\n\r\n    this.spacefillRepresentation = this.addRepresentation('spacefill', {\r\n      sele: 'none',\r\n      opacity: MeasurementDefaultParams.opacity,\r\n      color: MeasurementDefaultParams.color,\r\n      disablePicking: true,\r\n      radiusType: 'data'\r\n    }, true)\r\n\r\n    this.distanceRepresentation = this.addRepresentation(\r\n      'distance', MeasurementDefaultParams, true\r\n    )\r\n    this.angleRepresentation = this.addRepresentation(\r\n      'angle', MeasurementDefaultParams, true\r\n    )\r\n    this.dihedralRepresentation = this.addRepresentation(\r\n      'dihedral', MeasurementDefaultParams, true\r\n    )\r\n\r\n    this.measureRepresentations = new RepresentationCollection([\r\n      this.spacefillRepresentation,\r\n      this.distanceRepresentation,\r\n      this.angleRepresentation,\r\n      this.dihedralRepresentation\r\n    ])\r\n\r\n    //\r\n\r\n    this.setDefaultAssembly(this.parameters.defaultAssembly)\r\n\r\n    this.structure.signals.refreshed.add(() => {\r\n      this.updateRepresentations({ position: true })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Component type\r\n   * @type {String}\r\n   */\r\n  get type () { return 'structure' }\r\n\r\n  /**\r\n   * Initialize selection\r\n   * @private\r\n   * @param {String} sele - selection string\r\n   * @return {undefined}\r\n   */\r\n  initSelection (sele: string) {\r\n    /**\r\n     * Selection for {@link StructureComponent#structureView}\r\n     * @private\r\n     * @type {Selection}\r\n     */\r\n    this.selection = new Selection(sele)\r\n\r\n    /**\r\n     * View on {@link StructureComponent#structure}.\r\n     * Change its selection via {@link StructureComponent#setSelection}.\r\n     * @type {StructureView}\r\n     */\r\n    this.structureView = new StructureView(\r\n      this.structure, this.selection\r\n    )\r\n\r\n    this.selection.signals.stringChanged.add(() => {\r\n      this.structureView.setSelection(this.selection)\r\n\r\n      this.rebuildRepresentations()\r\n      this.rebuildTrajectories()\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Set selection of {@link StructureComponent#structureView}\r\n   * @param {String} string - selection string\r\n   * @return {StructureComponent} this object\r\n   */\r\n  setSelection (string: string) {\r\n    this.parameters.sele = string\r\n    this.selection.setString(string)\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Set the default assembly\r\n   * @param {String} value - assembly name\r\n   * @return {undefined}\r\n   */\r\n  setDefaultAssembly (value:string) {\r\n    // filter out non-exsisting assemblies\r\n    if (this.structure.biomolDict[value] === undefined) value = ''\r\n    // only set default assembly when changed\r\n    if (this.parameters.defaultAssembly !== value) {\r\n      const reprParams = { defaultAssembly: value }\r\n      this.reprList.forEach(repr => repr.setParameters(reprParams))\r\n      this.measureRepresentations.setParameters(reprParams)\r\n      this.parameters.defaultAssembly = value\r\n      this.signals.defaultAssemblyChanged.dispatch(value)\r\n    }\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Rebuild all representations\r\n   * @return {undefined}\r\n   */\r\n  rebuildRepresentations () {\r\n    this.reprList.forEach((repr: RepresentationElement) => {\r\n      repr.build()\r\n    })\r\n    this.measureRepresentations.build()\r\n  }\r\n\r\n  /**\r\n   * Rebuild all trajectories\r\n   * @return {undefined}\r\n   */\r\n  rebuildTrajectories () {\r\n    this.trajList.forEach(trajComp => {\r\n      trajComp.trajectory.setStructure(this.structureView)\r\n    })\r\n  }\r\n\r\n  updateRepresentations (what: any) {\r\n    super.updateRepresentations(what)\r\n    this.measureRepresentations.update(what)\r\n  }\r\n\r\n  /**\r\n   * Overrides {@link Component.updateRepresentationMatrices} \r\n   * to also update matrix for measureRepresentations \r\n   */\r\n  updateRepresentationMatrices () {\r\n    super.updateRepresentationMatrices()\r\n    this.measureRepresentations.setParameters({ matrix: this.matrix })\r\n  }\r\n\r\n  addRepresentation <K extends keyof StructureRepresentationParametersMap>(\r\n    type: K,\r\n    params: Partial<StructureRepresentationParametersMap[K]>|{defaultAssembly: string} = {},\r\n    hidden = false\r\n  ) {\r\n    params.defaultAssembly = this.parameters.defaultAssembly\r\n\r\n    const reprComp = this._addRepresentation(type, this.structureView, params, hidden)\r\n    if (!hidden) {\r\n      reprComp.signals.parametersChanged.add(() => this.measureUpdate())\r\n    }\r\n    return reprComp\r\n  }\r\n\r\n  /**\r\n   * Add a new trajectory component to the structure\r\n   */\r\n  addTrajectory (trajPath = '', params: { [k: string]: any } = {}) {\r\n    const traj = makeTrajectory(trajPath, this.structureView, params as TrajectoryParameters)\r\n\r\n    const trajComp = new TrajectoryElement(this.stage, traj, params)\r\n    this.trajList.push(trajComp)\r\n    this.signals.trajectoryAdded.dispatch(trajComp)\r\n\r\n    return trajComp\r\n  }\r\n\r\n  removeTrajectory (traj: TrajectoryElement) {\r\n    const idx = this.trajList.indexOf(traj)\r\n    if (idx !== -1) {\r\n      this.trajList.splice(idx, 1)\r\n    }\r\n\r\n    traj.dispose()\r\n\r\n    this.signals.trajectoryRemoved.dispatch(traj)\r\n  }\r\n\r\n  dispose () {\r\n    // copy via .slice because side effects may change trajList\r\n    this.trajList.slice().forEach(traj => traj.dispose())\r\n\r\n    this.trajList.length = 0\r\n    this.structure.dispose()\r\n    this.measureRepresentations.dispose()\r\n\r\n    super.dispose()\r\n  }\r\n\r\n  /**\r\n   * Automatically center and zoom the component\r\n   * @param  {String|Integer} [sele] - selection string or duration if integer\r\n   * @param  {Integer} [duration] - duration of the animation, defaults to 0\r\n   * @return {undefined}\r\n   */\r\n  autoView (sele?: string|number, duration?: number) {\r\n    if (typeof sele === 'number') {\r\n      duration = sele\r\n      sele = ''\r\n    }\r\n\r\n    this.stage.animationControls.zoomMove(\r\n      this.getCenter(sele),\r\n      this.getZoom(sele),\r\n      defaults(duration, 0)\r\n    )\r\n  }\r\n\r\n  getBoxUntransformed (sele: string): Box3 {\r\n    let bb\r\n\r\n    if (sele) {\r\n      bb = this.structureView.getBoundingBox(new Selection(sele))\r\n    } else {\r\n      bb = this.structureView.boundingBox\r\n    }\r\n\r\n    return bb\r\n  }\r\n\r\n  getCenterUntransformed (sele: string): Vector3 {\r\n    if (sele && typeof sele === 'string') {\r\n      return this.structure.atomCenter(new Selection(sele))\r\n    } else {\r\n      return this.structure.center\r\n    }\r\n  }\r\n\r\n  superpose (component: StructureComponent, align: boolean, sele1: string, sele2: string) {\r\n    superpose(\r\n      this.structureView, component.structureView, align, sele1, sele2\r\n    )\r\n\r\n    this.updateRepresentations({ 'position': true })\r\n\r\n    return this\r\n  }\r\n\r\n  getMaxRepresentationRadius (atomIndex: number) {\r\n    let maxRadius = 0\r\n    const atom = this.structure.getAtomProxy(atomIndex)\r\n    this.eachRepresentation(reprElem => {\r\n      if (reprElem.getVisibility()) {\r\n        const repr: StructureRepresentation = reprElem.repr as any  // TODO\r\n        maxRadius = Math.max(repr.getAtomRadius(atom), maxRadius)\r\n      }\r\n    })\r\n    return maxRadius\r\n  }\r\n\r\n  measurePick (atom: AtomProxy) {\r\n    const pickCount = this.pickBuffer.count\r\n\r\n    if (this.lastPick === atom.index && pickCount >= 1) {\r\n      if (pickCount > 1) {\r\n        const atomList = this.pickBuffer.data\r\n        const atomListSorted = this.pickBuffer.data.sort()\r\n        if (this.pickDict.has(atomListSorted)) {\r\n          this.pickDict.del(atomListSorted)\r\n        } else {\r\n          this.pickDict.add(atomListSorted, atomList)\r\n        }\r\n        if (pickCount === 2) {\r\n          this.distanceRepresentation.setParameters({\r\n            atomPair: this.pickDict.values.filter(l => l.length === 2)\r\n          })\r\n        } else if (pickCount === 3) {\r\n          this.angleRepresentation.setParameters({\r\n            atomTriple: this.pickDict.values.filter(l => l.length === 3)\r\n          })\r\n        } else if (pickCount === 4) {\r\n          this.dihedralRepresentation.setParameters({\r\n            atomQuad: this.pickDict.values.filter(l => l.length === 4)\r\n          })\r\n        }\r\n      }\r\n      this.pickBuffer.clear()\r\n      this.lastPick = undefined\r\n    } else {\r\n      if (!this.pickBuffer.has(atom.index)) {\r\n        this.pickBuffer.push(atom.index)\r\n      }\r\n      this.lastPick = atom.index\r\n    }\r\n\r\n    this.measureUpdate()\r\n  }\r\n\r\n  measureClear () {\r\n    this.pickBuffer.clear()\r\n    this.lastPick = undefined\r\n    this.spacefillRepresentation.setSelection('none')\r\n  }\r\n\r\n  measureBuild () {\r\n    const md = this.measureData()\r\n    this.distanceRepresentation.setParameters({ atomPair: md.distance })\r\n    this.angleRepresentation.setParameters({ atomTriple: md.angle })\r\n    this.dihedralRepresentation.setParameters({ atomQuad: md.dihedral })\r\n  }\r\n\r\n  measureUpdate () {\r\n    const pickData = this.pickBuffer.data\r\n    const radiusData: { [k: number]: number } = {}\r\n    pickData.forEach(ai => {\r\n      const r = Math.max(0.1, this.getMaxRepresentationRadius(ai))\r\n      radiusData[ ai ] = r * (2.3 - smoothstep(0.1, 2, r))\r\n    })\r\n    this.spacefillRepresentation.setSelection(\r\n      pickData.length ? ( '@' + pickData.join(',') ) : 'none'\r\n    )\r\n    if (pickData.length)\r\n      this.spacefillRepresentation.setParameters({ radiusData })\r\n  }\r\n\r\n  measureData () {\r\n    const pv = this.pickDict.values\r\n    return {\r\n      distance: pv.filter(l => l.length === 2),\r\n      angle: pv.filter(l => l.length === 3),\r\n      dihedral: pv.filter(l => l.length === 4)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove all measurements, optionally limit to distance, angle or dihedral\r\n   */\r\n  removeAllMeasurements (type?: MeasurementFlags) {\r\n    const pd = this.pickDict\r\n    const pv = pd.values\r\n    const remove = function (len: number) {\r\n      pv.filter(l => l.length === len).forEach(l => pd.del(l.slice().sort()))\r\n    }\r\n    if (!type || type & MeasurementFlags.Distance) remove(2)\r\n    if (!type || type & MeasurementFlags.Angle) remove(3)\r\n    if (!type || type & MeasurementFlags.Dihedral) remove(4)\r\n    this.measureBuild()\r\n  }\r\n\r\n  /**\r\n   * Remove a measurement given as a pair, triple, quad of atom indices\r\n   */\r\n  removeMeasurement (atomList: number[]) {\r\n    this.pickDict.del(atomList.slice().sort())\r\n    this.measureBuild()\r\n  }\r\n\r\n  /**\r\n   * Add a measurement given as a pair, triple, quad of atom indices\r\n   */\r\n  addMeasurement (atomList: number[]) {\r\n    if (atomList.length < 2 || atomList.length > 4) return\r\n    const atomListSorted = atomList.slice().sort()\r\n    if (!this.pickDict.has(atomListSorted)) {\r\n      this.pickDict.add(atomListSorted, atomList)\r\n    }\r\n    this.measureBuild()\r\n  }\r\n}\r\n\r\nexport const enum MeasurementFlags {\r\n  Distance = 0x1,\r\n  Angle = 0x2,\r\n  Dihedral = 0x4\r\n}\r\n\r\nComponentRegistry.add('structure', StructureComponent)\r\nComponentRegistry.add('structureview', StructureComponent)\r\n\r\nexport default StructureComponent\r\n","/**\r\n * @file Surface Component\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ComponentRegistry } from '../globals'\r\nimport Component, { ComponentParameters } from './component'\r\nimport Stage from '../stage/stage'\r\nimport Surface from '../surface/surface'\r\nimport { Vector3, Box3 } from 'three';\r\nimport RepresentationElement from './representation-element';\r\n\r\nexport type SurfaceRepresentationType = 'surface'|'dot'\r\n\r\n/**\r\n * Component wrapping a {@link Surface} object\r\n *\r\n * @example\r\n * // get a surface component by loading a surface file into the stage\r\n * stage.loadFile( \"url/for/surface\" ).then( function( surfaceComponent ){\r\n *     surfaceComponent.addRepresentation( \"surface\" );\r\n *     surfaceComponent.autoView();\r\n * } );\r\n */\r\nclass SurfaceComponent extends Component {\r\n  /**\r\n   * @param {Stage} stage - stage object the component belongs to\r\n   * @param {Surface} surface - surface object to wrap\r\n   * @param {ComponentParameters} params - component parameters\r\n   */\r\n  constructor (stage: Stage, readonly surface: Surface, params: Partial<ComponentParameters> = {}) {\r\n    super(stage, surface, Object.assign({ name: surface.name }, params))\r\n  }\r\n\r\n  /**\r\n   * Component type\r\n   * @type {String}\r\n   */\r\n  get type () { return 'surface' }\r\n\r\n  /**\r\n   * Add a new surface representation to the component\r\n   * @param {String} type - the name of the representation, one of:\r\n   *                        surface, dot.\r\n   * @param {SurfaceRepresentationParameters} params - representation parameters\r\n   * @return {RepresentationComponent} the created representation wrapped into\r\n   *                                   a representation component object\r\n   */\r\n  addRepresentation (type: SurfaceRepresentationType, params: { [k: string]: any } = {}): RepresentationElement {\r\n    return this._addRepresentation(type, this.surface, params)\r\n  }\r\n\r\n  getBoxUntransformed (): Box3 {\r\n    return this.surface.boundingBox\r\n  }\r\n\r\n  getCenterUntransformed (): Vector3 {\r\n    return this.surface.center\r\n  }\r\n\r\n  dispose () {\r\n    this.surface.dispose()\r\n    super.dispose()\r\n  }\r\n}\r\n\r\nComponentRegistry.add('surface', SurfaceComponent)\r\n\r\nexport default SurfaceComponent\r\n","/**\r\n * @file Volume Component\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ComponentRegistry } from '../globals'\r\nimport Component, { ComponentParameters } from './component'\r\nimport Stage from '../stage/stage'\r\nimport Volume from '../surface/volume'\r\nimport { Box3, Vector3 } from 'three';\r\nimport RepresentationElement from './representation-element';\r\n\r\nexport type VolumeRepresentationType = 'surface'|'slice'|'dot'\r\n\r\n/**\r\n * Component wrapping a {@link Volume} object\r\n *\r\n * @example\r\n * // get a volume component by loading a volume file into the stage\r\n * stage.loadFile( \"url/for/volume\" ).then(function(volumeComponent){\r\n *   volumeComponent.addRepresentation('surface');\r\n *   volumeComponent.autoView();\r\n * });\r\n */\r\nclass VolumeComponent extends Component {\r\n  /**\r\n   * @param {Stage} stage - stage object the component belongs to\r\n   * @param {Volume} volume - volume object to wrap\r\n   * @param {ComponentParameters} params - component parameters\r\n   */\r\n  constructor (stage: Stage, readonly volume: Volume, params: Partial<ComponentParameters> = {}) {\r\n    super(stage, volume, Object.assign({ name: volume.name }, params))\r\n  }\r\n\r\n  /**\r\n   * Component type\r\n   * @type {String}\r\n   */\r\n  get type () { return 'volume' }\r\n\r\n  /**\r\n   * Add a new volume representation to the component\r\n   */\r\n  addRepresentation (type: VolumeRepresentationType, params: { [k: string]: any } = {}): RepresentationElement {\r\n    return this._addRepresentation(type, this.volume, params)\r\n  }\r\n\r\n  getBoxUntransformed (): Box3 {\r\n    return this.volume.boundingBox\r\n  }\r\n\r\n  getCenterUntransformed (): Vector3 {\r\n    return this.volume.center\r\n  }\r\n\r\n  dispose () {\r\n    this.volume.dispose()\r\n\r\n    super.dispose()\r\n  }\r\n}\r\n\r\nComponentRegistry.add('volume', VolumeComponent)\r\n\r\nexport default VolumeComponent\r\n","/**\r\n * @file Component Collection\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Component from './component'\r\nimport Collection from './collection'\r\n\r\nclass ComponentCollection extends Collection<Component> {\r\n  addRepresentation (name: string, params: any) {\r\n  \treturn this.forEach((comp) => comp.addRepresentation(name, params))\r\n  }\r\n\r\n  autoView (duration: number) {\r\n    return this.forEach((comp) => comp.autoView(duration))\r\n  }\r\n}\r\n\r\nexport default ComponentCollection\r\n","/**\r\n * @file Stage\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3, Box3 } from 'three'\r\nimport { Signal } from 'signals'\r\n\r\nimport {\r\n  Debug, Log, Mobile, ComponentRegistry, ParserRegistry\r\n} from '../globals'\r\nimport { defaults, createParams, updateParams } from '../utils'\r\nimport { degToRad, clamp, pclamp } from '../math/math-utils'\r\nimport Counter from '../utils/counter'\r\nimport Viewer from '../viewer/viewer'\r\nimport { ImageParameters } from '../viewer/viewer-utils'\r\nimport MouseObserver from './mouse-observer'\r\n\r\nimport TrackballControls from '../controls/trackball-controls'\r\nimport PickingControls from '../controls/picking-controls'\r\nimport ViewerControls from '../controls/viewer-controls'\r\nimport AnimationControls from '../controls/animation-controls'\r\nimport MouseControls, { MouseControlPreset } from '../controls/mouse-controls'\r\nimport KeyControls from '../controls/key-controls'\r\n\r\nimport PickingBehavior from './picking-behavior'\r\nimport MouseBehavior from './mouse-behavior'\r\nimport AnimationBehavior from './animation-behavior'\r\nimport KeyBehavior from './key-behavior'\r\n\r\nimport Component, { ComponentParameters } from '../component/component'\r\nimport RepresentationElement from '../component/representation-element'\r\nimport StructureComponent from '../component/structure-component'\r\nimport SurfaceComponent from '../component/surface-component'\r\nimport VolumeComponent from '../component/volume-component'\r\nimport ComponentCollection from '../component/component-collection'\r\nimport RepresentationCollection from '../component/representation-collection'\r\nimport { autoLoad, getFileInfo, LoaderParameters } from '../loader/loader-utils'\r\nimport { ParserParams } from '../loader/parser-loader'\r\nimport AtomProxy from '../proxy/atom-proxy'\r\nimport Animation from '../animation/animation'\r\nimport Selection from '../selection/selection'\r\n\r\nimport Structure from '../structure/structure'\r\nimport Surface from '../surface/surface'\r\nimport Volume from '../surface/volume'\r\nimport Shape from '../geometry/shape'\r\nimport Script from '../script'\r\n\r\nfunction matchName (name: string|RegExp, object: { name: string }) {\r\n  if (name instanceof RegExp) {\r\n    return object.name.match(name) !== null\r\n  } else {\r\n    return object.name === name\r\n  }\r\n}\r\n\r\nconst tmpZoomVector = new Vector3()\r\n\r\ndeclare global {\r\n  interface Document {\r\n    mozFullScreen: boolean\r\n    mozFullScreenEnabled: boolean\r\n    mozFullScreenElement: Element\r\n    mozCancelFullScreen(): void\r\n\r\n    msFullscreenEnabled: boolean\r\n    msFullscreenElement: Element\r\n    msExitFullscreen(): void\r\n  }\r\n\r\n  interface Element {\r\n    mozRequestFullScreen(): void\r\n    msRequestFullscreen(): void\r\n  }\r\n}\r\n\r\n/**\r\n * Stage parameter object.\r\n * @typedef {Object} StageParameters - stage parameters\r\n * @property {Color} backgroundColor - background color\r\n * @property {Integer} sampleLevel - sampling level for antialiasing, between -1 and 5;\r\n *                                   -1: no sampling, 0: only sampling when not moving\r\n * @property {Boolean} workerDefault - default value for useWorker parameter of representations\r\n * @property {Float} rotateSpeed - camera-controls rotation speed, between 0 and 10\r\n * @property {Float} zoomSpeed - camera-controls zoom speed, between 0 and 10\r\n * @property {Float} panSpeed - camera-controls pan speed, between 0 and 10\r\n * @property {Float} clipNear - position of camera near/front clipping plane\r\n *                                in percent of scene bounding box\r\n * @property {Float} clipFar - position of camera far/back clipping plane\r\n *                               in percent of scene bounding box\r\n * @property {Float} clipDist - camera clipping distance in Angstrom\r\n * @property {String} clipMode - how to interpret clipNear/Far and fogNear/Far values: \"scene\" for scene-relative, \"camera\" for camera-relative\r\n * @property {String} clipScale - \"relative\" or \"absolute\": interpret clipNear/Far and fogNear/Far as percentage of bounding box or absolute Angstroms (ignored when clipMode==camera)\r\n * @property {Float} fogNear - position of the start of the fog effect\r\n *                               in percent of scene bounding box\r\n * @property {Float} fogFar - position where the fog is in full effect\r\n *                              in percent of scene bounding box\r\n * @property {String} cameraType - type of camera, either 'persepective' or 'orthographic'\r\n * @property {Float} cameraFov - perspective camera field of view in degree, between 15 and 120\r\n * @property {Float} cameraEyeSep - stereo camera eye seperation\r\n * @property {Color} lightColor - point light color\r\n * @property {Float} lightIntensity - point light intensity\r\n * @property {Color} ambientColor - ambient light color\r\n * @property {Float} ambientIntensity - ambient light intensity\r\n * @property {Integer} hoverTimeout - timeout for hovering\r\n */\r\n\r\nexport interface StageSignals {\r\n  parametersChanged: Signal\r\n  fullscreenChanged: Signal\r\n  componentAdded: Signal\r\n  componentRemoved: Signal\r\n  clicked: Signal\r\n  hovered: Signal\r\n}\r\n\r\nexport type RenderQualityType = 'auto'|'low'|'medium'|'high'\r\n\r\nexport const StageDefaultParameters = {\r\n  impostor: true,\r\n  quality: 'medium' as RenderQualityType,\r\n  workerDefault: true,\r\n  sampleLevel: 0,\r\n  backgroundColor: 'black' as string|number,\r\n  rotateSpeed: 2.0,\r\n  zoomSpeed: 1.2,\r\n  panSpeed: 1.0,\r\n  clipNear: 0,\r\n  clipFar: 100,\r\n  clipDist: 10,\r\n  clipMode: 'scene',\r\n  clipScale: 'relative',\r\n  fogNear: 50,\r\n  fogFar: 100,\r\n  cameraFov: 40,\r\n  cameraEyeSep: 0.3,\r\n  cameraType: 'perspective' as 'perspective'|'orthographic'|'stereo',\r\n  lightColor: 0xdddddd as string|number,\r\n  lightIntensity: 1.0,\r\n  ambientColor: 0xdddddd as string|number,\r\n  ambientIntensity: 0.2,\r\n  hoverTimeout: 0,\r\n  tooltip: true,\r\n  mousePreset: 'default' as MouseControlPreset\r\n}\r\nexport type StageParameters = typeof StageDefaultParameters\r\n\r\nexport interface StageLoadFileParams extends LoaderParameters {\r\n  defaultRepresentation: boolean,\r\n  assembly: string\r\n}\r\n\r\n/**\r\n * Stage class, central for creating molecular scenes with NGL.\r\n *\r\n * @example\r\n * var stage = new Stage( \"elementId\", { backgroundColor: \"white\" } );\r\n */\r\nclass Stage {\r\n  signals: StageSignals = {\r\n    parametersChanged: new Signal(),\r\n    fullscreenChanged: new Signal(),\r\n    componentAdded: new Signal(),\r\n    componentRemoved: new Signal(),\r\n    clicked: new Signal(),\r\n    hovered: new Signal()\r\n  }\r\n  parameters: StageParameters\r\n\r\n  /**\r\n   * Counter that keeps track of various potentially long-running tasks,\r\n   * including file loading and surface calculation.\r\n   */\r\n  tasks = new Counter()\r\n  compList: Component[] = []\r\n  defaultFileParams = {}\r\n  logList: string[] = []\r\n\r\n  transformComponent?: Component\r\n  transformAtom?: AtomProxy\r\n\r\n  viewer: Viewer\r\n  tooltip: HTMLElement\r\n  lastFullscreenElement: HTMLElement\r\n\r\n  mouseObserver: MouseObserver\r\n  viewerControls: ViewerControls\r\n  trackballControls: TrackballControls\r\n  pickingControls: PickingControls\r\n  animationControls: AnimationControls\r\n  mouseControls: MouseControls\r\n  keyControls: KeyControls\r\n\r\n  pickingBehavior: PickingBehavior\r\n  mouseBehavior: MouseBehavior\r\n  animationBehavior: AnimationBehavior\r\n  keyBehavior: KeyBehavior\r\n\r\n  spinAnimation: Animation\r\n  rockAnimation: Animation\r\n\r\n  constructor (idOrElement: string|HTMLElement, params: Partial<StageParameters> = {}) {\r\n    this.viewer = new Viewer(idOrElement)\r\n    if (!this.viewer.renderer) return\r\n\r\n    this.tooltip = document.createElement('div')\r\n    Object.assign(this.tooltip.style, {\r\n      display: 'none',\r\n      position: 'fixed',\r\n      zIndex: '1000000',\r\n      pointerEvents: 'none',\r\n      backgroundColor: 'rgba( 0, 0, 0, 0.6 )',\r\n      color: 'lightgrey',\r\n      padding: '8px',\r\n      fontFamily: 'sans-serif'\r\n    })\r\n    this.viewer.container.appendChild(this.tooltip)\r\n\r\n    this.mouseObserver = new MouseObserver(this.viewer.renderer.domElement)\r\n    this.viewerControls = new ViewerControls(this)\r\n    this.trackballControls = new TrackballControls(this)\r\n    this.pickingControls = new PickingControls(this)\r\n    this.animationControls = new AnimationControls(this)\r\n    this.mouseControls = new MouseControls(this)\r\n    this.keyControls = new KeyControls(this)\r\n\r\n    this.pickingBehavior = new PickingBehavior(this)\r\n    this.mouseBehavior = new MouseBehavior(this)\r\n    this.animationBehavior = new AnimationBehavior(this)\r\n    this.keyBehavior = new KeyBehavior(this)\r\n\r\n    this.spinAnimation = this.animationControls.spin([ 0, 1, 0 ], 0.005)\r\n    this.spinAnimation.pause(true)\r\n    this.rockAnimation = this.animationControls.rock([ 0, 1, 0 ], 0.005)\r\n    this.rockAnimation.pause(true)\r\n\r\n    // must come after the viewer has been instantiated\r\n    this.parameters = createParams(params, StageDefaultParameters)\r\n    this.setParameters(this.parameters)\r\n\r\n    this.viewer.animate()\r\n  }\r\n\r\n  /**\r\n   * Set stage parameters\r\n   */\r\n  setParameters (params: Partial<StageParameters> = {}) {\r\n    updateParams(this.parameters, params)\r\n\r\n    const p = params\r\n    const tp = this.parameters\r\n\r\n    const viewer = this.viewer\r\n    const controls = this.trackballControls\r\n\r\n    // apply parameters\r\n    if (p.quality !== undefined) this.setQuality(tp.quality)\r\n    if (p.impostor !== undefined) this.setImpostor(tp.impostor)\r\n    if (p.rotateSpeed !== undefined) controls.rotateSpeed = tp.rotateSpeed\r\n    if (p.zoomSpeed !== undefined) controls.zoomSpeed = tp.zoomSpeed\r\n    if (p.panSpeed !== undefined) controls.panSpeed = tp.panSpeed\r\n    if (p.mousePreset !== undefined) this.mouseControls.preset(tp.mousePreset)\r\n    this.mouseObserver.setParameters({ hoverTimeout: tp.hoverTimeout })\r\n    viewer.setClip(tp.clipNear, tp.clipFar, tp.clipDist, tp.clipMode, tp.clipScale)\r\n    viewer.setFog(undefined, tp.fogNear, tp.fogFar)\r\n    viewer.setCamera(tp.cameraType, tp.cameraFov, tp.cameraEyeSep)\r\n    viewer.setSampling(tp.sampleLevel)\r\n    viewer.setBackground(tp.backgroundColor)\r\n    viewer.setLight(tp.lightColor, tp.lightIntensity, tp.ambientColor, tp.ambientIntensity)\r\n\r\n    this.signals.parametersChanged.dispatch(this.getParameters())\r\n\r\n    return this\r\n  }\r\n\r\n  log (msg: string) {\r\n    console.log('STAGE LOG', msg)\r\n    this.logList.push(msg)\r\n  }\r\n\r\n  /**\r\n   * Get stage parameters\r\n   */\r\n  getParameters () {\r\n    return Object.assign({}, this.parameters)\r\n  }\r\n\r\n  /**\r\n   * Create default representations for the given component\r\n   * @param  {StructureComponent|SurfaceComponent} object - component to create the representations for\r\n   * @return {undefined}\r\n   */\r\n  defaultFileRepresentation (component: Component) {\r\n    if (component instanceof StructureComponent) {\r\n      component.setSelection('/0')\r\n\r\n      let atomCount, residueCount, instanceCount\r\n      const structure = component.structure\r\n\r\n      if (structure.biomolDict.BU1) {\r\n        const assembly = structure.biomolDict.BU1\r\n        atomCount = assembly.getAtomCount(structure)\r\n        residueCount = assembly.getResidueCount(structure)\r\n        instanceCount = assembly.getInstanceCount()\r\n        component.setDefaultAssembly('BU1')\r\n      } else {\r\n        atomCount = structure.getModelProxy(0).atomCount\r\n        residueCount = structure.getModelProxy(0).residueCount\r\n        instanceCount = 1\r\n      }\r\n\r\n      let sizeScore = atomCount\r\n\r\n      if (Mobile) {\r\n        sizeScore *= 4\r\n      }\r\n\r\n      const backboneOnly = structure.atomStore.count / structure.residueStore.count < 2\r\n      if (backboneOnly) {\r\n        sizeScore *= 10\r\n      }\r\n\r\n      let colorScheme = 'chainname'\r\n      let colorScale = 'RdYlBu'\r\n      let colorReverse = false\r\n      if (structure.getChainnameCount(new Selection('polymer and /0')) === 1) {\r\n        colorScheme = 'residueindex'\r\n        colorScale = 'Spectral'\r\n        colorReverse = true\r\n      }\r\n\r\n      if (Debug) console.log(sizeScore, atomCount, instanceCount, backboneOnly)\r\n\r\n      if (residueCount / instanceCount < 4) {\r\n        component.addRepresentation('ball+stick', {\r\n          colorScheme: 'element',\r\n          radiusScale: 2.0,\r\n          aspectRatio: 1.5,\r\n          bondScale: 0.3,\r\n          bondSpacing: 0.75,\r\n          quality: 'auto'\r\n        })\r\n      } else if ((instanceCount > 5 && sizeScore > 15000) || sizeScore > 700000) {\r\n        let scaleFactor = (\r\n          Math.min(\r\n            2.0,\r\n            Math.max(\r\n              0.1,\r\n              6000 / (sizeScore / instanceCount)\r\n            )\r\n          )\r\n        )\r\n        if (backboneOnly) scaleFactor = Math.min(scaleFactor, 0.5)\r\n\r\n        component.addRepresentation('surface', {\r\n          colorScheme, colorScale, colorReverse,\r\n          sele: 'polymer',\r\n          surfaceType: 'av',\r\n          probeRadius: 1.4,\r\n          scaleFactor: scaleFactor,\r\n          useWorker: false\r\n        })\r\n      } else if (sizeScore > 250000) {\r\n        component.addRepresentation('backbone', {\r\n          colorScheme, colorScale, colorReverse,\r\n          lineOnly: true\r\n        })\r\n      } else if (sizeScore > 100000) {\r\n        component.addRepresentation('backbone', {\r\n          colorScheme, colorScale, colorReverse,\r\n          quality: 'low',\r\n          disableImpostor: true,\r\n          radiusScale: 2.0\r\n        })\r\n      } else if (sizeScore > 80000) {\r\n        component.addRepresentation('backbone', {\r\n          colorScheme, colorScale, colorReverse,\r\n          radiusScale: 2.0\r\n        })\r\n      } else {\r\n        component.addRepresentation('cartoon', {\r\n          colorScheme, colorScale, colorReverse,\r\n          radiusScale: 0.7,\r\n          aspectRatio: 5,\r\n          quality: 'auto'\r\n        })\r\n        if (sizeScore < 50000) {\r\n          component.addRepresentation('base', {\r\n            colorScheme, colorScale, colorReverse,\r\n            quality: 'auto'\r\n          })\r\n        }\r\n        component.addRepresentation('ball+stick', {\r\n          sele: 'ligand',\r\n          colorScheme: 'element',\r\n          radiusScale: 2.0,\r\n          aspectRatio: 1.5,\r\n          bondScale: 0.3,\r\n          bondSpacing: 0.75,\r\n          quality: 'auto'\r\n        })\r\n      }\r\n\r\n      // add frames as trajectory\r\n      if (component.structure.frames.length) {\r\n        component.addTrajectory()\r\n      }\r\n    } else if (component instanceof SurfaceComponent) {\r\n      component.addRepresentation('surface')\r\n    } else if (component instanceof VolumeComponent) {\r\n      component.addRepresentation('surface')\r\n    }\r\n\r\n    this.tasks.onZeroOnce(this.autoView, this)\r\n  }\r\n\r\n  /**\r\n   * Load a file onto the stage\r\n   *\r\n   * @example\r\n   * // load from URL\r\n   * stage.loadFile( \"http://files.rcsb.org/download/5IOS.cif\" );\r\n   *\r\n   * @example\r\n   * // load binary data in CCP4 format via a Blob\r\n   * var binaryBlob = new Blob( [ ccp4Data ], { type: 'application/octet-binary'} );\r\n   * stage.loadFile( binaryBlob, { ext: \"ccp4\" } );\r\n   *\r\n   * @example\r\n   * // load string data in PDB format via a Blob\r\n   * var stringBlob = new Blob( [ pdbData ], { type: 'text/plain'} );\r\n   * stage.loadFile( stringBlob, { ext: \"pdb\" } );\r\n   *\r\n   * @example\r\n   * // load a File object\r\n   * stage.loadFile( file );\r\n   *\r\n   * @example\r\n   * // load from URL and add a 'ball+stick' representation with double/triple bonds\r\n   * stage.loadFile( \"http://files.rcsb.org/download/1crn.cif\" ).then( function( comp ){\r\n   *     comp.addRepresentation( \"ball+stick\", { multipleBond: true } );\r\n   * } );\r\n   *\r\n   * @param  {String|File|Blob} path - either a URL or an object containing the file data\r\n   * @param  {LoaderParameters} params - loading parameters\r\n   * @param  {Boolean} params.asTrajectory - load multi-model structures as a trajectory\r\n   * @return {Promise} A Promise object that resolves to a {@link StructureComponent},\r\n   *                   a {@link SurfaceComponent} or a {@link ScriptComponent} object,\r\n   *                   depending on the type of the loaded file.\r\n   */\r\n  loadFile (path: string|File|Blob, params: Partial<StageLoadFileParams & ParserParams> = {}) {\r\n    const p = Object.assign({}, this.defaultFileParams, params)\r\n    const name = getFileInfo(path).name\r\n\r\n    this.tasks.increment()\r\n    this.log(`loading file '${name}'`)\r\n\r\n    const onLoadFn = (object: Structure|Surface|Volume) => {\r\n      this.log(`loaded '${name}'`)\r\n\r\n      const component = this.addComponentFromObject(object, p)\r\n      if (p.defaultRepresentation) {\r\n        this.defaultFileRepresentation(component as Component)\r\n      }\r\n      this.tasks.decrement()\r\n\r\n      return component\r\n    }\r\n\r\n    const onErrorFn = (e: Error|string) => {\r\n      this.tasks.decrement()\r\n      const errorMsg = `error loading file: '${e}'`\r\n      this.log(errorMsg)\r\n      throw errorMsg  // throw so it can be catched\r\n    }\r\n\r\n    const ext = defaults(p.ext, getFileInfo(path).ext)\r\n    let promise: Promise<any>\r\n\r\n    if (ParserRegistry.isTrajectory(ext)) {\r\n      promise = Promise.reject(\r\n        new Error(`loadFile: ext '${ext}' is a trajectory and must be loaded into a structure component`)\r\n      )\r\n    } else {\r\n      promise = autoLoad(path, p)\r\n    }\r\n\r\n    return promise.then(onLoadFn, onErrorFn)\r\n  }\r\n\r\n  loadScript (path: string|File|Blob) {\r\n    const name = getFileInfo(path).name\r\n\r\n    this.log(`loading script '${name}'`)\r\n\r\n    return autoLoad(path).then(\r\n      (script: Script) => {\r\n        this.tasks.increment()\r\n        this.log(`running script '${name}'`)\r\n        script.run(this).then(() => {\r\n          this.tasks.decrement()\r\n          this.log(`finished script '${name}'`)\r\n        })\r\n        this.log(`called script '${name}'`)\r\n      },\r\n      (error: Error|string) => {\r\n        this.tasks.decrement()\r\n        const errorMsg = `errored script '${name}' \"${error}\"`\r\n        this.log(errorMsg)\r\n        throw errorMsg  // throw so it can be catched\r\n      }\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Add the given component to the stage\r\n   * @param {Component} component - the component to add\r\n   * @return {undefined}\r\n   */\r\n  addComponent (component: Component) {\r\n    if (!component) {\r\n      Log.warn('Stage.addComponent: no component given')\r\n      return\r\n    }\r\n\r\n    this.compList.push(component)\r\n    this.signals.componentAdded.dispatch(component)\r\n  }\r\n\r\n  /**\r\n   * Create a component from the given object and add to the stage\r\n   */\r\n  addComponentFromObject (object: Structure|Surface|Volume|Shape, params: Partial<ComponentParameters> = {}): void|Component {\r\n    const CompClass = ComponentRegistry.get(object.type)\r\n\r\n    if (CompClass) {\r\n      const component = new CompClass(this, object, params)\r\n      this.addComponent(component)\r\n      return component\r\n    }\r\n\r\n    Log.warn('no component for object type', object.type)\r\n  }\r\n\r\n  /**\r\n   * Remove the given component\r\n   * @param  {Component} component - the component to remove\r\n   * @return {undefined}\r\n   */\r\n  removeComponent (component: Component) {\r\n    const idx = this.compList.indexOf(component)\r\n    if (idx !== -1) {\r\n      this.compList.splice(idx, 1)\r\n      component.dispose()\r\n      this.signals.componentRemoved.dispatch(component)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove all components from the stage\r\n   */\r\n  removeAllComponents () {\r\n    this.compList.slice().forEach(o => this.removeComponent(o))\r\n  }\r\n\r\n  /**\r\n   * Handle any size-changes of the container element\r\n   * @return {undefined}\r\n   */\r\n  handleResize () {\r\n    this.viewer.handleResize()\r\n  }\r\n\r\n  /**\r\n   * Set width and height\r\n   * @param {String} width - CSS width value\r\n   * @param {String} height - CSS height value\r\n   * @return {undefined}\r\n   */\r\n  setSize (width: string, height: string) {\r\n    const container = this.viewer.container\r\n\r\n    if (container !== document.body) {\r\n      if (width !== undefined) container.style.width = width\r\n      if (height !== undefined) container.style.height = height\r\n      this.handleResize()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggle fullscreen\r\n   * @param  {Element} [element] - document element to put into fullscreen,\r\n   *                               defaults to the viewer container\r\n   * @return {undefined}\r\n   */\r\n  toggleFullscreen (element: HTMLElement) {\r\n    if (!document.fullscreenEnabled && !document.mozFullScreenEnabled &&\r\n        !(document as any).webkitFullscreenEnabled && !document.msFullscreenEnabled\r\n    ) {\r\n      Log.log('fullscreen mode (currently) not possible')\r\n      return\r\n    }\r\n\r\n    const self = this\r\n    element = element || this.viewer.container\r\n    this.lastFullscreenElement = element\r\n\r\n    //\r\n\r\n    function getFullscreenElement () {\r\n      return document.fullscreenElement || document.mozFullScreenElement ||\r\n        (document as any).webkitFullscreenElement || document.msFullscreenElement\r\n    }\r\n\r\n    function resizeElement () {\r\n      if (!getFullscreenElement() && self.lastFullscreenElement) {\r\n        const element = self.lastFullscreenElement\r\n        element.style.width = element.dataset.normalWidth || ''\r\n        element.style.height = element.dataset.normalHeight || ''\r\n\r\n        document.removeEventListener('fullscreenchange', resizeElement)\r\n        document.removeEventListener('mozfullscreenchange', resizeElement)\r\n        document.removeEventListener('webkitfullscreenchange', resizeElement)\r\n        document.removeEventListener('MSFullscreenChange', resizeElement)\r\n\r\n        self.handleResize()\r\n        self.signals.fullscreenChanged.dispatch(false)\r\n      }\r\n    }\r\n\r\n    //\r\n\r\n    if (!getFullscreenElement()) {\r\n      element.dataset.normalWidth = element.style.width || ''\r\n      element.dataset.normalHeight = element.style.height || ''\r\n      element.style.width = window.screen.width + 'px'\r\n      element.style.height = window.screen.height + 'px'\r\n\r\n      if (element.requestFullscreen) {\r\n        element.requestFullscreen()\r\n      } else if (element.msRequestFullscreen) {\r\n        element.msRequestFullscreen()\r\n      } else if (element.mozRequestFullScreen) {\r\n        element.mozRequestFullScreen()\r\n      } else if ((element as any).webkitRequestFullscreen) {\r\n        (element as any).webkitRequestFullscreen()\r\n      }\r\n\r\n      document.addEventListener('fullscreenchange', resizeElement)\r\n      document.addEventListener('mozfullscreenchange', resizeElement)\r\n      document.addEventListener('webkitfullscreenchange', resizeElement)\r\n      document.addEventListener('MSFullscreenChange', resizeElement)\r\n\r\n      this.handleResize()\r\n      this.signals.fullscreenChanged.dispatch(true)\r\n\r\n      // workaround for Safari\r\n      setTimeout(function () { self.handleResize() }, 100)\r\n    } else {\r\n      if (document.exitFullscreen) {\r\n        document.exitFullscreen()\r\n      } else if (document.msExitFullscreen) {\r\n        document.msExitFullscreen()\r\n      } else if (document.mozCancelFullScreen) {\r\n        document.mozCancelFullScreen()\r\n      } else if ((document as any).webkitExitFullscreen) {\r\n        (document as any).webkitExitFullscreen()\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set spin\r\n   * @param {Boolean} flag - if true start rocking and stop spinning\r\n   * @return {undefined}\r\n   */\r\n  setSpin (flag: boolean) {\r\n    if (flag) {\r\n      this.spinAnimation.resume(true)\r\n      this.rockAnimation.pause(true)\r\n    } else {\r\n      this.spinAnimation.pause(true)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set rock\r\n   * @param {Boolean} flag - if true start rocking and stop spinning\r\n   * @return {undefined}\r\n   */\r\n  setRock (flag: boolean) {\r\n    if (flag) {\r\n      this.rockAnimation.resume(true)\r\n      this.spinAnimation.pause(true)\r\n    } else {\r\n      this.rockAnimation.pause(true)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggle spin\r\n   * @return {undefined}\r\n   */\r\n  toggleSpin () {\r\n    this.setSpin(this.spinAnimation.paused)\r\n  }\r\n\r\n  /**\r\n   * Toggle rock\r\n   * @return {undefined}\r\n   */\r\n  toggleRock () {\r\n    this.setRock(this.rockAnimation.paused)\r\n  }\r\n\r\n  /**\r\n   * Get the current focus from the current clipNear value expressed\r\n   * as 0 (full view) to 100 (completely clipped)\r\n   * Negative values may be returned in some cases.\r\n   *\r\n   * In 'camera' clipMode focus isn't applicable, this method returns 0.0\r\n   *\r\n   * @return {number} focus\r\n   */\r\n  getFocus () : number {\r\n    const p = this.parameters\r\n    if (p.clipMode !== 'scene') return 0.0\r\n\r\n    let clipNear = p.clipNear\r\n    if (p.clipScale === 'absolute') {\r\n      clipNear = this.viewer.absoluteToRelative(clipNear)\r\n    }\r\n    return clipNear * 2\r\n  }\r\n\r\n\r\n  /**\r\n   * Set the focus, a value of 0 sets clipping planes to show full scene,\r\n   * while a value of 100 will compltely clip the scene.\r\n   *\r\n   * @param {number} value focus\r\n   */\r\n  setFocus (value: number) {\r\n    if (this.parameters.clipMode !== 'scene') return\r\n\r\n    let clipNear\r\n    let clipFar\r\n    let fogNear\r\n    let fogFar\r\n\r\n    if (this.parameters.clipScale === 'relative') {\r\n      clipNear = clamp(value / 2.0, 0.0, 49.9)\r\n      clipFar = 100 - clipNear\r\n      fogNear = 50\r\n      fogFar = pclamp(2 * clipFar - 50)\r\n\r\n    } else {\r\n      clipNear = this.viewer.relativeToAbsolute(value / 2.0)\r\n      clipFar = clipNear\r\n      fogNear = 0\r\n      fogFar = 2 * clipFar\r\n    }\r\n\r\n    this.setParameters({ clipNear, clipFar, fogNear, fogFar })\r\n  }\r\n\r\n  getZoomForBox (boundingBox: Box3) {\r\n    const bbSize = boundingBox.getSize(tmpZoomVector)\r\n    const maxSize = Math.max(bbSize.x, bbSize.y, bbSize.z)\r\n    const minSize = Math.min(bbSize.x, bbSize.y, bbSize.z)\r\n    let distance = maxSize + Math.sqrt(minSize)\r\n\r\n    const fov = degToRad(this.viewer.perspectiveCamera.fov)\r\n    const width = this.viewer.width\r\n    const height = this.viewer.height\r\n    const aspect = width / height\r\n    const aspectFactor = (height < width ? 1 : aspect)\r\n\r\n    distance = Math.abs(\r\n      ((distance * 0.5) / aspectFactor) / Math.sin(fov / 2)\r\n    )\r\n    distance += this.parameters.clipDist\r\n    return -distance\r\n  }\r\n\r\n  getBox () {\r\n    return this.viewer.boundingBox\r\n  }\r\n\r\n  getZoom () {\r\n    return this.getZoomForBox(this.getBox())\r\n  }\r\n\r\n  getCenter (optionalTarget?: Vector3) {\r\n    return this.getBox().getCenter(optionalTarget || new Vector3())\r\n  }\r\n\r\n  /**\r\n   * Add a zoom and a move animation with automatic targets\r\n   * @param  {Integer} duration - animation time in milliseconds\r\n   * @return {undefined}\r\n   */\r\n  autoView (duration?: number) {\r\n    this.animationControls.zoomMove(\r\n      this.getCenter(),\r\n      this.getZoom(),\r\n      defaults(duration, 0)\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Make image from what is shown in a viewer canvas\r\n   */\r\n  makeImage (params: Partial<ImageParameters> = {}) {\r\n    return new Promise<Blob>((resolve, reject) => {\r\n      this.tasks.onZeroOnce(() => {\r\n        this.tasks.increment()\r\n        this.viewer.makeImage(params).then(blob => {\r\n          this.tasks.decrement()\r\n          resolve(blob)\r\n        }).catch(e => {\r\n          this.tasks.decrement()\r\n          reject(e)\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  setImpostor (value: boolean) {\r\n    this.parameters.impostor = value\r\n\r\n    const types = [\r\n      'spacefill', 'ball+stick', 'licorice', 'hyperball',\r\n      'backbone', 'rocket', 'helixorient', 'contact', 'distance',\r\n      'dot'\r\n    ]\r\n\r\n    this.eachRepresentation(function (reprElem) {\r\n      if (!types.includes(reprElem.getType())) return\r\n\r\n      const p = reprElem.getParameters() as any  // TODO\r\n      p.disableImpostor = !value\r\n      reprElem.build(p)\r\n    })\r\n  }\r\n\r\n  setQuality (value: RenderQualityType) {\r\n    this.parameters.quality = value\r\n\r\n    const types = [\r\n      'tube', 'cartoon', 'ribbon', 'trace', 'rope'\r\n    ]\r\n\r\n    const impostorTypes = [\r\n      'spacefill', 'ball+stick', 'licorice', 'hyperball',\r\n      'backbone', 'rocket', 'helixorient', 'contact', 'distance',\r\n      'dot'\r\n    ]\r\n\r\n    this.eachRepresentation(function (repr) {\r\n      const p = repr.getParameters() as any  // TODO\r\n\r\n      if (!types.includes(repr.getType())) {\r\n        if (!impostorTypes.includes(repr.getType())) return\r\n\r\n        if (!p.disableImpostor) {\r\n          (repr.repr as any).quality = value  // TODO\r\n          return\r\n        }\r\n      }\r\n\r\n      p.quality = value\r\n      repr.build(p)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Iterator over each component and executing the callback\r\n   */\r\n  eachComponent (callback: (comp: Component) => void, type?: string) {\r\n    this.compList.slice().forEach(comp => {\r\n      if (type === undefined || type === comp.type) callback(comp)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Iterator over each representation and executing the callback\r\n   */\r\n  eachRepresentation (callback: (reprElem: RepresentationElement, comp: Component) => void, type?: string) {\r\n    this.eachComponent(comp => {\r\n      comp.reprList.slice().forEach(reprElem => {\r\n        if (type === undefined || type === reprElem.getType()) callback(reprElem, comp)\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Get collection of components by name\r\n   */\r\n  getComponentsByName (name: string|RegExp) {\r\n    const compList: Component[] = []\r\n\r\n    this.eachComponent(comp => {\r\n      if (name === undefined || matchName(name, comp)) compList.push(comp)\r\n    })\r\n\r\n    return new ComponentCollection(compList)\r\n  }\r\n\r\n  /**\r\n   * Get collection of components by object\r\n   */\r\n  getComponentsByObject (object: Structure|Surface|Volume|Shape) {\r\n    const compList: Component[] = []\r\n\r\n    this.eachComponent(comp => {\r\n      if (comp.object === object) compList.push(comp)\r\n    })\r\n\r\n    return new ComponentCollection(compList)\r\n  }\r\n\r\n  /**\r\n   * Get collection of representations by name\r\n   */\r\n  getRepresentationsByName (name: string|RegExp) {\r\n    const reprList: RepresentationElement[] = []\r\n\r\n    this.eachRepresentation((repr, comp) => {\r\n      if (name === undefined || matchName(name, repr)) reprList.push(repr)\r\n    })\r\n\r\n    return new RepresentationCollection(reprList)\r\n  }\r\n\r\n  measureClear () {\r\n    this.eachComponent((sc: StructureComponent) => sc.measureClear(), 'structure')\r\n  }\r\n\r\n  measureUpdate () {\r\n    this.eachComponent((sc: StructureComponent) => sc.measureUpdate(), 'structure')\r\n  }\r\n\r\n  /**\r\n   * Cleanup when disposing of a stage object\r\n   */\r\n  dispose () {\r\n    this.tasks.dispose()\r\n    this.viewer.dispose()\r\n    this.mouseObserver.dispose()\r\n  }\r\n}\r\n\r\nexport default Stage\r\n","/**\r\n * @file Shape Component\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ComponentRegistry } from '../globals'\r\nimport Component, { ComponentParameters } from './component'\r\nimport Stage from '../stage/stage'\r\nimport Shape from '../geometry/shape'\r\nimport { Vector3, Box3 } from 'three';\r\nimport RepresentationElement from './representation-element';\r\n\r\nexport type ShapeRepresentationType = 'buffer'\r\n\r\n/**\r\n * Component wrapping a {@link Shape} object\r\n *\r\n * @example\r\n * // get a shape component by adding a shape object to the stage\r\n * var shape = new NGL.Shape( \"shape\" );\r\n * shape.addSphere( [ 0, 0, 0 ], [ 1, 0, 0 ], 1.5 );\r\n * var shapeComponent = stage.addComponentFromObject( shape );\r\n * shapeComponent.addRepresentation( \"buffer\" );\r\n */\r\nclass ShapeComponent extends Component {\r\n  constructor (stage: Stage, readonly shape: Shape, params: Partial<ComponentParameters> = {}) {\r\n    super(stage, shape, Object.assign({ name: shape.name }, params))\r\n  }\r\n\r\n  /**\r\n   * Component type\r\n   * @type {String}\r\n   */\r\n  get type () { return 'shape' }\r\n\r\n  /**\r\n   * Add a new shape representation to the component\r\n   * @param {String} type - the name of the representation, one of:\r\n   *                        buffer.\r\n   * @param {BufferRepresentationParameters} params - representation parameters\r\n   * @return {RepresentationComponent} the created representation wrapped into\r\n   *                                   a representation component object\r\n   */\r\n  addRepresentation (type: ShapeRepresentationType, params: { [k: string]: any } = {}): RepresentationElement {\r\n    return this._addRepresentation(type, this.shape, params)\r\n  }\r\n\r\n  getBoxUntransformed (): Box3 {\r\n    return this.shape.boundingBox\r\n  }\r\n\r\n  getCenterUntransformed (): Vector3 {\r\n    return this.shape.center\r\n  }\r\n\r\n  dispose () {\r\n    this.shape.dispose()\r\n    super.dispose()\r\n  }\r\n}\r\n\r\nComponentRegistry.add('shape', ShapeComponent)\r\n\r\nexport default ShapeComponent\r\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","/**\r\n * @file Atomindex Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ColormakerRegistry } from '../globals'\r\nimport { defaults } from '../utils'\r\nimport Colormaker, { StuctureColormakerParams, ColormakerScale, manageColor } from './colormaker'\r\nimport AtomProxy from '../proxy/atom-proxy'\r\nimport ModelProxy from '../proxy/model-proxy'\r\n\r\n/**\r\n * Color by atom index. The {@link AtomProxy.index} property is used for coloring.\r\n * Each {@link ModelProxy} of a {@link Structure} is colored seperately. The\r\n * `params.domain` parameter is ignored.\r\n *\r\n * __Name:__ _atomindex_\r\n *\r\n * @example\r\n * stage.loadFile( \"rcsb://1crn\" ).then( function( o ){\r\n *     o.addRepresentation( \"ball+stick\", { colorScheme: \"atomindex\" } );\r\n *     o.autoView();\r\n * } );\r\n */\r\nclass AtomindexColormaker extends Colormaker {\r\n  scalePerModel: { [k: number]: ColormakerScale }\r\n\r\n  constructor (params: StuctureColormakerParams) {\r\n    super(params)\r\n\r\n    if (!params.scale) {\r\n      this.parameters.scale = 'rainbow'\r\n      this.parameters.reverse = defaults(params.reverse, true)\r\n    }\r\n\r\n    this.scalePerModel = {}\r\n\r\n    params.structure.eachModel((mp: ModelProxy) => {\r\n      this.parameters.domain = [ mp.atomOffset, mp.atomEnd ]\r\n      this.scalePerModel[ mp.index ] = this.getScale()  // TODO\r\n    })\r\n  }\r\n\r\n  /**\r\n   * get color for an atom\r\n   * @param  {AtomProxy} atom - atom to get color for\r\n   * @return {Integer} hex atom color\r\n   */\r\n  @manageColor\r\n  atomColor (atom: AtomProxy) {\r\n    return this.scalePerModel[ atom.modelIndex ](atom.index)\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('atomindex', AtomindexColormaker)\r\n\r\nexport default AtomindexColormaker\r\n","/**\r\n * @file Bfactor Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ColormakerRegistry } from '../globals'\r\nimport Colormaker, { StuctureColormakerParams, ColormakerScale, manageColor } from './colormaker'\r\nimport AtomProxy from '../proxy/atom-proxy'\r\nimport Selection from '../selection/selection'\r\n\r\n/**\r\n * Color by b-factor. The {@link AtomProxy.bfactor} property is used for coloring.\r\n * By default the min and max b-factor values are used for the scale`s domain.\r\n *\r\n * __Name:__ _bfactor_\r\n *\r\n * @example\r\n * stage.loadFile( \"rcsb://1crn\" ).then( function( o ){\r\n *     o.addRepresentation( \"ball+stick\", { colorScheme: \"bfactor\" } );\r\n *     o.autoView();\r\n * } );\r\n */\r\nclass BfactorColormaker extends Colormaker {\r\n  bfactorScale: ColormakerScale\r\n\r\n  constructor (params: { sele?: string } & StuctureColormakerParams) {\r\n    super(params)\r\n\r\n    if (!params.scale) {\r\n      this.parameters.scale = 'OrRd'\r\n    }\r\n\r\n    if (!params.domain) {\r\n      let selection\r\n      let min = Infinity\r\n      let max = -Infinity\r\n\r\n      if (params.sele) {\r\n        selection = new Selection(params.sele)\r\n      }\r\n\r\n      params.structure.eachAtom(function (a) {\r\n        const bfactor = a.bfactor\r\n        min = Math.min(min, bfactor)\r\n        max = Math.max(max, bfactor)\r\n      }, selection)\r\n\r\n      this.parameters.domain = [ min, max ]\r\n    }\r\n\r\n    this.bfactorScale = this.getScale()\r\n  }\r\n\r\n  @manageColor\r\n  atomColor (a: AtomProxy) {\r\n    return this.bfactorScale(a.bfactor)\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('bfactor', BfactorColormaker)\r\n\r\nexport default BfactorColormaker\r\n","/**\r\n * @file Chainid Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ColormakerRegistry } from '../globals'\r\nimport Colormaker, { StuctureColormakerParams, ColormakerScale, manageColor } from './colormaker'\r\nimport AtomProxy from '../proxy/atom-proxy'\r\nimport ChainProxy from '../proxy/chain-proxy'\r\nimport ModelProxy from '../proxy/model-proxy'\r\n\r\nexport type ChainidDict = { [k: string]: number }\r\n\r\n/**\r\n * Color by chain id\r\n */\r\nclass ChainidColormaker extends Colormaker {\r\n  chainidDictPerModel: { [k: number]: ChainidDict } = {}\r\n  scalePerModel: { [k: number]: ColormakerScale } = {}\r\n\r\n  constructor (params: StuctureColormakerParams) {\r\n    super(params)\r\n\r\n    if (!params.scale) {\r\n      this.parameters.scale = 'Spectral'\r\n    }\r\n\r\n    params.structure.eachModel((mp: ModelProxy) => {\r\n      let i = 0\r\n      const chainidDict: ChainidDict = {}\r\n      mp.eachChain(function (cp: ChainProxy) {\r\n        if (chainidDict[ cp.chainid ] === undefined) {\r\n          chainidDict[ cp.chainid ] = i\r\n          i += 1\r\n        }\r\n      })\r\n      this.parameters.domain = [ 0, i - 1 ]\r\n      this.chainidDictPerModel[ mp.index ] = chainidDict\r\n      this.scalePerModel[ mp.index ] = this.getScale()\r\n    })\r\n  }\r\n\r\n  @manageColor\r\n  atomColor (a: AtomProxy) {\r\n    const chainidDict = this.chainidDictPerModel[ a.modelIndex ]\r\n    return this.scalePerModel[ a.modelIndex ](chainidDict[ a.chainid ])\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('chainid', ChainidColormaker)\r\n\r\nexport default ChainidColormaker\r\n","/**\r\n * @file Chainindex Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ColormakerRegistry } from '../globals'\r\nimport Colormaker, { StuctureColormakerParams, ColormakerScale, manageColor } from './colormaker'\r\nimport AtomProxy from '../proxy/atom-proxy'\r\nimport ModelProxy from '../proxy/model-proxy'\r\n\r\n/**\r\n * Color by chain index\r\n */\r\nclass ChainindexColormaker extends Colormaker {\r\n  scalePerModel: { [k: number]: ColormakerScale } = {}\r\n\r\n  constructor (params: StuctureColormakerParams) {\r\n    super(params)\r\n\r\n    if (!params.scale) {\r\n      this.parameters.scale = 'Spectral'\r\n    }\r\n\r\n    params.structure.eachModel((mp: ModelProxy) => {\r\n      this.parameters.domain = [ mp.chainOffset, mp.chainEnd ]\r\n      this.scalePerModel[ mp.index ] = this.getScale()\r\n    })\r\n  }\r\n\r\n  @manageColor\r\n  atomColor (a: AtomProxy) {\r\n    return this.scalePerModel[ a.modelIndex ](a.chainIndex)\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('chainindex', ChainindexColormaker)\r\n\r\nexport default ChainindexColormaker\r\n","/**\r\n * @file Chainname Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ColormakerRegistry } from '../globals'\r\nimport Colormaker, { StuctureColormakerParams, ColormakerScale, manageColor } from './colormaker'\r\nimport AtomProxy from '../proxy/atom-proxy'\r\nimport ChainProxy from '../proxy/chain-proxy'\r\nimport ModelProxy from '../proxy/model-proxy'\r\n\r\nexport type ChainnameDict = { [k: string]: number }\r\n\r\n/**\r\n * Color by chain name\r\n */\r\nclass ChainnameColormaker extends Colormaker {\r\n  chainnameDictPerModel: { [k: number]: ChainnameDict } = {}\r\n  scalePerModel: { [k: number]: ColormakerScale } = {}\r\n\r\n  constructor (params: StuctureColormakerParams) {\r\n    super(params)\r\n\r\n    if (!params.scale) {\r\n      this.parameters.scale = 'Spectral'\r\n    }\r\n\r\n    params.structure.eachModel((mp: ModelProxy) => {\r\n      let i = 0\r\n      const chainnameDict: ChainnameDict = {}\r\n      mp.eachChain(function (cp: ChainProxy) {\r\n        if (chainnameDict[ cp.chainname ] === undefined) {\r\n          chainnameDict[ cp.chainname ] = i\r\n          i += 1\r\n        }\r\n      })\r\n      this.parameters.domain = [ 0, i - 1 ]\r\n      this.chainnameDictPerModel[ mp.index ] = chainnameDict\r\n      this.scalePerModel[ mp.index ] = this.getScale()\r\n    })\r\n  }\r\n\r\n  @manageColor\r\n  atomColor (a: AtomProxy) {\r\n    const chainnameDict = this.chainnameDictPerModel[ a.modelIndex ]\r\n    return this.scalePerModel[ a.modelIndex ](chainnameDict[ a.chainname ])\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('chainname', ChainnameColormaker)\r\n\r\nexport default ChainnameColormaker\r\n","/**\r\n * @file Densityfit Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ColormakerRegistry } from '../globals'\r\nimport Colormaker, { StuctureColormakerParams, ColormakerScale, manageColor } from './colormaker'\r\nimport AtomProxy from '../proxy/atom-proxy'\r\n\r\n/**\r\n * Color by validation density fit\r\n */\r\nclass DensityfitColormaker extends Colormaker {\r\n  rsrzScale: ColormakerScale\r\n  rsccScale: ColormakerScale\r\n\r\n  rsrzDict: { [k: string]: number|undefined } = {}\r\n  rsccDict: { [k: string]: number|undefined } = {}\r\n\r\n  constructor (params: StuctureColormakerParams) {\r\n    super(params)\r\n\r\n    if (!params.scale) {\r\n      this.parameters.scale = 'RdYlBu'\r\n    }\r\n\r\n    this.rsrzScale = this.getScale({ domain: [ 2, 0 ] })\r\n    this.rsccScale = this.getScale({ domain: [ 0.678, 1.0 ] })\r\n\r\n    const val = params.structure.validation\r\n    if (val) {\r\n      this.rsrzDict = val.rsrzDict\r\n      this.rsccDict = val.rsccDict\r\n    }\r\n\r\n  }\r\n\r\n  @manageColor\r\n  atomColor (atom: AtomProxy) {\r\n    let sele = atom.resno + ''\r\n    if (atom.inscode) sele += '^' + atom.inscode\r\n    if (atom.chainname) sele += ':' + atom.chainname\r\n    sele += '/' + atom.modelIndex\r\n\r\n    const rsrz = this.rsrzDict[ sele ]\r\n    if (rsrz !== undefined) {\r\n      return this.rsrzScale(rsrz)\r\n    }\r\n\r\n    const rscc = this.rsccDict[ sele ]\r\n    if (rscc !== undefined) {\r\n      return this.rsccScale(rscc)\r\n    }\r\n\r\n    return 0x909090\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('densityfit', DensityfitColormaker)\r\n\r\nexport default DensityfitColormaker\r\n","/**\r\n * @file Atomindex Colormaker\r\n * @author Fred Ludlow <Fred.Ludlow@astx.com>\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3 } from 'three'\r\n\r\nimport { ColormakerRegistry } from '../globals'\r\nimport Colormaker, { StuctureColormakerParams, ColormakerScale, manageColor } from './colormaker'\r\nimport AtomProxy from '../proxy/atom-proxy'\r\nimport SpatialHash from '../geometry/spatial-hash'\r\n\r\n// from CHARMM\r\nconst partialCharges: { [k: string]: { [k: string]: number } } = {\r\n  'ARG': {\r\n    'CD': 0.1,\r\n    'CZ': 0.5,\r\n    'NE': -0.1\r\n  },\r\n  'ASN': {\r\n    'CG': 0.55,\r\n    'OD1': -0.55\r\n  },\r\n  'ASP': {\r\n    'CB': -0.16,\r\n    'CG': 0.36,\r\n    'OD1': -0.6,\r\n    'OD2': -0.6\r\n  },\r\n  'CYS': {\r\n    'CB': 0.19,\r\n    'SG': -0.19\r\n  },\r\n  'GLN': {\r\n    'CD': 0.55,\r\n    'OE1': -0.55\r\n  },\r\n  'GLU': {\r\n    'CD': 0.36,\r\n    'CG': -0.16,\r\n    'OE1': -0.6,\r\n    'OE2': -0.6\r\n  },\r\n  'HIS': {\r\n    'CB': 0.1,\r\n    'CD2': 0.2,\r\n    'CE1': 0.45,\r\n    'CG': 0.15,\r\n    'ND1': 0.05,\r\n    'NE2': 0.05\r\n  },\r\n  'LYS': {\r\n    'CE': 0.25,\r\n    'NZ': 0.75\r\n  },\r\n  'MET': {\r\n    'CE': 0.06,\r\n    'CG': 0.06,\r\n    'SD': -0.12\r\n  },\r\n  'PTR': {\r\n    'C': 0.55,\r\n    'CA': 0.1,\r\n    'CZ': 0.25,\r\n    'N': -0.35,\r\n    'O': -0.55,\r\n    'O1P': -0.85,\r\n    'O2P': -0.85,\r\n    'O3P': -0.85,\r\n    'OG1': -1.1,\r\n    'P': 1.4\r\n  },\r\n  'SEP': {\r\n    'C': 0.55,\r\n    'CA': 0.1,\r\n    'CB': 0.25,\r\n    'N': -0.35,\r\n    'O': -0.55,\r\n    'O1P': -0.85,\r\n    'O2P': -0.85,\r\n    'O3P': -0.85,\r\n    'OG1': -1.1,\r\n    'P': 1.4\r\n  },\r\n  'SER': {\r\n    'CB': 0.25,\r\n    'OG': -0.25\r\n  },\r\n  'THR': {\r\n    'CB': 0.25,\r\n    'OG1': -0.25\r\n  },\r\n  'TPO': {\r\n    'C': 0.55,\r\n    'CA': 0.1,\r\n    'CB': 0.25,\r\n    'N': -0.35,\r\n    'O': -0.55,\r\n    'OG1': -1.1,\r\n    'O1P': -0.85,\r\n    'O2P': -0.85,\r\n    'O3P': -0.85,\r\n    'P': 1.4\r\n  },\r\n  'TRP': {\r\n    'CD1': 0.06,\r\n    'CD2': 0.1,\r\n    'CE2': -0.04,\r\n    'CE3': -0.03,\r\n    'CG': -0.03,\r\n    'NE1': -0.06\r\n  },\r\n  'TYR': {\r\n    'CZ': 0.25,\r\n    'OH': -0.25\r\n  },\r\n  'backbone': {\r\n    'C': 0.55,\r\n    'O': -0.55,\r\n    'N': -0.35,\r\n    'CA': 0.1\r\n  }\r\n}\r\n\r\nconst maxRadius = 12.0\r\nconst nHBondDistance = 1.04\r\nconst nHCharge = 0.25\r\n\r\n/**\r\n * Populates position vector with location of implicit or explicit H\r\n * Returns position or undefined if not able to locate H\r\n *\r\n * @param {AtomProxy} ap - the nitrogen atom\r\n * @param {Vector3} [position] - optional target\r\n * @return {Vectors|undefined} the hydrogen atom position\r\n */\r\nfunction backboneNHPosition (ap: AtomProxy, position = new Vector3()) {\r\n  let h = false\r\n  let ca = false\r\n  let c = false\r\n  position.set(2 * ap.x, 2 * ap.y, 2 * ap.z)\r\n\r\n  ap.eachBondedAtom(function (a2: AtomProxy) {\r\n    // Any time we detect H, reset position and skip\r\n    // future tests\r\n    if (h) return\r\n    if (a2.atomname === 'H') {\r\n      position.set(a2.x, a2.y, a2.z)\r\n      h = true\r\n      return\r\n    }\r\n    if (!ca && a2.atomname === 'CA') {\r\n      position.sub(a2 as any)  // TODO\r\n      ca = true\r\n    } else if (!c && a2.atomname === 'C') {\r\n      c = true\r\n      position.sub(a2 as any)  // TODO\r\n    }\r\n  })\r\n\r\n  if (h) { return position }\r\n\r\n  if (ca && c) {\r\n    position.normalize()\r\n    position.multiplyScalar(nHBondDistance)\r\n    position.add(ap as any)\r\n    return position\r\n  }\r\n}\r\n\r\n/**\r\n * Takes an array of Vector3 objects and\r\n * converts to an object that looks like an AtomStore\r\n *\r\n * @param {Vector3[]} positions - array of positions\r\n * @return {Object} AtomStore-like object\r\n */\r\nfunction buildStoreLike (positions: Vector3[]) {\r\n  const n = positions.length\r\n  const x = new Float32Array(n)\r\n  const y = new Float32Array(n)\r\n  const z = new Float32Array(n)\r\n\r\n  for (let i = 0; i < positions.length; i++) {\r\n    const v = positions[ i ]\r\n    x[ i ] = v.x\r\n    y[ i ] = v.y\r\n    z[ i ] = v.z\r\n  }\r\n\r\n  return { x: x, y: y, z: z, count: n }\r\n}\r\n\r\nfunction chargeForAtom (a: AtomProxy): number {\r\n  if (a.partialCharge !== null) return a.partialCharge\r\n  if (!a.isProtein()) { return 0.0 }\r\n  return (\r\n    (partialCharges[ a.resname ] &&\r\n        partialCharges[ a.resname ][ a.atomname ]) ||\r\n    partialCharges[ 'backbone' ][ a.atomname ] || 0.0\r\n  )\r\n}\r\n\r\n/**\r\n * Color a surface by electrostatic charge. This is a highly approximate\r\n * calculation! The partial charges are CHARMM with hydrogens added to heavy\r\n * atoms and hydrogen positions generated for amides.\r\n *\r\n * __Name:__ _electrostatic_\r\n *\r\n * @example\r\n * stage.loadFile( \"rcsb://3dqb\" ).then( function( o ){\r\n *     o.addRepresentation( \"surface\", { colorScheme: \"electrostatic\" } );\r\n *     o.autoView();\r\n * } );\r\n */\r\nclass ElectrostaticColormaker extends Colormaker {\r\n  scale: ColormakerScale\r\n  hHash: SpatialHash\r\n  hash: SpatialHash\r\n  charges: Float32Array\r\n  hStore: { x: Float32Array, y: Float32Array, z: Float32Array, count: number }\r\n  atomProxy: AtomProxy\r\n\r\n  delta = new Vector3()\r\n  hCharges: number[] = []\r\n\r\n  constructor (params: StuctureColormakerParams) {\r\n    super(params)\r\n\r\n    if (!params.scale) {\r\n      this.parameters.scale = 'rwb'\r\n    }\r\n    if (!params.domain) {\r\n      this.parameters.domain = [ -50, 50 ]\r\n    }\r\n\r\n    this.scale = this.getScale()\r\n\r\n    this.charges = new Float32Array(params.structure.atomCount)\r\n    const hPositions: Vector3[] = []\r\n\r\n    params.structure.eachAtom((ap: AtomProxy) => {\r\n      this.charges[ ap.index ] = chargeForAtom(ap) * ap.occupancy\r\n      if (ap.atomname === 'N') {\r\n\r\n        // In the specific case where N forms two bonds to\r\n        // CA and C, try and place a dummy hydrogen\r\n\r\n        if (ap.bondCount >= 3) return; // Skip if 3 bonds already (e.g. PRO)\r\n\r\n        if (ap.bondToElementCount(1)) return; // Skip if any H specificed\r\n\r\n        const hPos = backboneNHPosition(ap)\r\n        if (hPos !== undefined) {\r\n          hPositions.push(hPos)\r\n          this.hCharges.push(nHCharge * ap.occupancy)\r\n        }\r\n      }\r\n    })\r\n\r\n    const bbox = params.structure.getBoundingBox()\r\n    bbox.expandByScalar(nHBondDistance) // Worst case\r\n\r\n    // SpatialHash requires x,y,z and count\r\n    this.hStore = buildStoreLike(hPositions)\r\n    this.hHash = new SpatialHash(this.hStore as any, bbox)  // TODO\r\n    this.hash = new SpatialHash(params.structure.atomStore, bbox)\r\n  }\r\n\r\n  @manageColor\r\n  positionColor (v: Vector3) {\r\n\r\n    const charges = this.charges\r\n    const hCharges = this.hCharges\r\n\r\n    let p = 0.0\r\n    this.hash.eachWithin(v.x, v.y, v.z, maxRadius, (atomIndex, dSq) => {\r\n      const charge = charges[atomIndex]\r\n      if (charge === 0.0) return\r\n      p += charge / dSq\r\n    })\r\n\r\n    this.hHash.eachWithin(v.x, v.y, v.z, maxRadius, (atomIndex, dSq) => {\r\n      const charge = hCharges[atomIndex]\r\n      if (charge === 0.0) return\r\n      p += charge / dSq\r\n    })\r\n\r\n    return this.scale(p * 332) // 332 to convert to kcal/mol\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('electrostatic', ElectrostaticColormaker)\r\n\r\nexport default ElectrostaticColormaker\r\n","/**\r\n * @file Element Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ColormakerRegistry } from '../globals'\r\nimport { defaults } from '../utils'\r\nimport Colormaker, { ColormakerParameters, manageColor } from './colormaker'\r\nimport AtomProxy from '../proxy/atom-proxy'\r\n\r\n// from Jmol http://jmol.sourceforge.net/jscolors/ (or 0xFFFFFF)\r\nconst ElementColors: { [k: string]: number } = {\r\n  'H': 0xFFFFFF,\r\n  'HE': 0xD9FFFF,\r\n  'LI': 0xCC80FF,\r\n  'BE': 0xC2FF00,\r\n  'B': 0xFFB5B5,\r\n  'C': 0x909090,\r\n  'N': 0x3050F8,\r\n  'O': 0xFF0D0D,\r\n  'F': 0x90E050,\r\n  'NE': 0xB3E3F5,\r\n  'NA': 0xAB5CF2,\r\n  'MG': 0x8AFF00,\r\n  'AL': 0xBFA6A6,\r\n  'SI': 0xF0C8A0,\r\n  'P': 0xFF8000,\r\n  'S': 0xFFFF30,\r\n  'CL': 0x1FF01F,\r\n  'AR': 0x80D1E3,\r\n  'K': 0x8F40D4,\r\n  'CA': 0x3DFF00,\r\n  'SC': 0xE6E6E6,\r\n  'TI': 0xBFC2C7,\r\n  'V': 0xA6A6AB,\r\n  'CR': 0x8A99C7,\r\n  'MN': 0x9C7AC7,\r\n  'FE': 0xE06633,\r\n  'CO': 0xF090A0,\r\n  'NI': 0x50D050,\r\n  'CU': 0xC88033,\r\n  'ZN': 0x7D80B0,\r\n  'GA': 0xC28F8F,\r\n  'GE': 0x668F8F,\r\n  'AS': 0xBD80E3,\r\n  'SE': 0xFFA100,\r\n  'BR': 0xA62929,\r\n  'KR': 0x5CB8D1,\r\n  'RB': 0x702EB0,\r\n  'SR': 0x00FF00,\r\n  'Y': 0x94FFFF,\r\n  'ZR': 0x94E0E0,\r\n  'NB': 0x73C2C9,\r\n  'MO': 0x54B5B5,\r\n  'TC': 0x3B9E9E,\r\n  'RU': 0x248F8F,\r\n  'RH': 0x0A7D8C,\r\n  'PD': 0x006985,\r\n  'AG': 0xC0C0C0,\r\n  'CD': 0xFFD98F,\r\n  'IN': 0xA67573,\r\n  'SN': 0x668080,\r\n  'SB': 0x9E63B5,\r\n  'TE': 0xD47A00,\r\n  'I': 0x940094,\r\n  'XE': 0x940094,\r\n  'CS': 0x57178F,\r\n  'BA': 0x00C900,\r\n  'LA': 0x70D4FF,\r\n  'CE': 0xFFFFC7,\r\n  'PR': 0xD9FFC7,\r\n  'ND': 0xC7FFC7,\r\n  'PM': 0xA3FFC7,\r\n  'SM': 0x8FFFC7,\r\n  'EU': 0x61FFC7,\r\n  'GD': 0x45FFC7,\r\n  'TB': 0x30FFC7,\r\n  'DY': 0x1FFFC7,\r\n  'HO': 0x00FF9C,\r\n  'ER': 0x00E675,\r\n  'TM': 0x00D452,\r\n  'YB': 0x00BF38,\r\n  'LU': 0x00AB24,\r\n  'HF': 0x4DC2FF,\r\n  'TA': 0x4DA6FF,\r\n  'W': 0x2194D6,\r\n  'RE': 0x267DAB,\r\n  'OS': 0x266696,\r\n  'IR': 0x175487,\r\n  'PT': 0xD0D0E0,\r\n  'AU': 0xFFD123,\r\n  'HG': 0xB8B8D0,\r\n  'TL': 0xA6544D,\r\n  'PB': 0x575961,\r\n  'BI': 0x9E4FB5,\r\n  'PO': 0xAB5C00,\r\n  'AT': 0x754F45,\r\n  'RN': 0x428296,\r\n  'FR': 0x420066,\r\n  'RA': 0x007D00,\r\n  'AC': 0x70ABFA,\r\n  'TH': 0x00BAFF,\r\n  'PA': 0x00A1FF,\r\n  'U': 0x008FFF,\r\n  'NP': 0x0080FF,\r\n  'PU': 0x006BFF,\r\n  'AM': 0x545CF2,\r\n  'CM': 0x785CE3,\r\n  'BK': 0x8A4FE3,\r\n  'CF': 0xA136D4,\r\n  'ES': 0xB31FD4,\r\n  'FM': 0xB31FBA,\r\n  'MD': 0xB30DA6,\r\n  'NO': 0xBD0D87,\r\n  'LR': 0xC70066,\r\n  'RF': 0xCC0059,\r\n  'DB': 0xD1004F,\r\n  'SG': 0xD90045,\r\n  'BH': 0xE00038,\r\n  'HS': 0xE6002E,\r\n  'MT': 0xEB0026,\r\n  'DS': 0xFFFFFF,\r\n  'RG': 0xFFFFFF,\r\n  'CN': 0xFFFFFF,\r\n  'UUT': 0xFFFFFF,\r\n  'FL': 0xFFFFFF,\r\n  'UUP': 0xFFFFFF,\r\n  'LV': 0xFFFFFF,\r\n  'UUH': 0xFFFFFF,\r\n\r\n  'D': 0xFFFFC0,\r\n  'T': 0xFFFFA0\r\n}\r\nconst DefaultElementColor = 0xFFFFFF\r\n\r\n/**\r\n * Color by element\r\n */\r\nclass ElementColormaker extends Colormaker {\r\n  constructor (params: ColormakerParameters) {\r\n    params.value = defaults(params.value, ElementColors.C)\r\n\r\n    super(params)\r\n  }\r\n\r\n\r\n  @manageColor\r\n  atomColor (a: AtomProxy) {\r\n    const element = a.element\r\n\r\n    if (element === 'C') {\r\n      return this.parameters.value\r\n    } else {\r\n      return ElementColors[ element ] || DefaultElementColor\r\n    }\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('element', ElementColormaker)\r\n\r\nexport default ElementColormaker\r\n","/**\r\n * @file Entityindex Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ColormakerRegistry } from '../globals'\r\nimport Colormaker, { StuctureColormakerParams, ColormakerScale, manageColor } from './colormaker'\r\nimport AtomProxy from '../proxy/atom-proxy'\r\n\r\n/**\r\n * Color by entity index\r\n */\r\nclass EntityindexColormaker extends Colormaker {\r\n  entityindexScale: ColormakerScale\r\n\r\n  constructor (params: StuctureColormakerParams) {\r\n    super(params)\r\n\r\n    if (!params.scale) {\r\n      this.parameters.scale = 'Spectral'\r\n    }\r\n    if (!params.domain) {\r\n      this.parameters.domain = [ 0, params.structure.entityList.length - 1 ]\r\n    }\r\n\r\n    this.entityindexScale = this.getScale()\r\n  }\r\n\r\n  @manageColor\r\n  atomColor (a: AtomProxy) {\r\n    return this.entityindexScale(a.entityIndex)\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('entityindex', EntityindexColormaker)\r\n\r\nexport default EntityindexColormaker\r\n","/**\r\n * @file Entitytype Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ColormakerRegistry } from '../globals'\r\nimport Colormaker, { manageColor } from './colormaker'\r\nimport AtomProxy from '../proxy/atom-proxy'\r\n\r\nimport {\r\n    PolymerEntity, NonPolymerEntity, MacrolideEntity, WaterEntity\r\n} from '../structure/structure-constants'\r\n\r\n/**\r\n * Color by entity type\r\n */\r\nclass EntitytypeColormaker extends Colormaker {\r\n  @manageColor\r\n  atomColor (a: AtomProxy) {\r\n    const e = a.entity\r\n    const et = e ? e.entityType : undefined\r\n    switch (et) {\r\n      case PolymerEntity:\r\n        return 0x7fc97f\r\n      case NonPolymerEntity:\r\n        return 0xfdc086\r\n      case MacrolideEntity:\r\n        return 0xbeaed4\r\n      case WaterEntity:\r\n        return 0x386cb0\r\n      default:\r\n        return 0xffff99\r\n    }\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('entitytype', EntitytypeColormaker)\r\n\r\nexport default EntitytypeColormaker\r\n","/**\r\n * @file Geoquality Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ColormakerRegistry } from '../globals'\r\nimport Colormaker, { StuctureColormakerParams, manageColor } from './colormaker'\r\nimport AtomProxy from '../proxy/atom-proxy'\r\nimport { countSetBits } from '../math/math-utils'\r\n\r\n/**\r\n * Color by validation gometry quality\r\n */\r\nclass GeoqualityColormaker extends Colormaker {\r\n  geoAtomDict: { [k: string]: { [k: string]: number } } = {}\r\n  geoDict: { [k: string]: number|undefined } = {}\r\n\r\n  constructor (params: StuctureColormakerParams) {\r\n    super(params)\r\n\r\n    const val = params.structure.validation\r\n    if (val) {\r\n      this.geoAtomDict = val.geoAtomDict\r\n      this.geoDict = val.geoDict\r\n    }\r\n  }\r\n\r\n  @manageColor\r\n  atomColor (atom: AtomProxy) {\r\n    let sele = atom.resno + ''\r\n    if (atom.inscode) sele += '^' + atom.inscode\r\n    if (atom.chainname) sele += ':' + atom.chainname\r\n    sele += '/' + atom.modelIndex\r\n\r\n    let geoProblemCount\r\n    const geoAtom = this.geoAtomDict[ sele ]\r\n    if (geoAtom !== undefined) {\r\n      const atomProblems: number = geoAtom[ atom.atomname ] || 0\r\n      geoProblemCount = countSetBits(atomProblems)\r\n    } else {\r\n      geoProblemCount = this.geoDict[ sele ] || 0\r\n    }\r\n\r\n    if (geoProblemCount === 0) {\r\n      return 0x2166ac\r\n    } else if (geoProblemCount === 1) {\r\n      return 0xfee08b\r\n    } else if (geoProblemCount === 2) {\r\n      return 0xf46d43\r\n    } else if (geoProblemCount >= 3) {\r\n      return 0xa50026\r\n    }\r\n    return 0x909090\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('geoquality', GeoqualityColormaker)\r\n\r\nexport default GeoqualityColormaker\r\n","/**\r\n * @file Hydrophobicity Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ColormakerRegistry } from '../globals'\r\nimport Colormaker, { ColormakerParameters, ColormakerScale, manageColor } from './colormaker'\r\nimport AtomProxy from '../proxy/atom-proxy'\r\n\r\nimport {\r\n    ResidueHydrophobicity, DefaultResidueHydrophobicity\r\n} from '../structure/structure-constants'\r\n\r\n/**\r\n * Color by hydrophobicity\r\n */\r\nclass HydrophobicityColormaker extends Colormaker {\r\n  hfScale: ColormakerScale\r\n  resHF: { [k: string]: number } = {}\r\n  defaultResidueHydrophobicity: number\r\n\r\n  constructor (params: ColormakerParameters) {\r\n    super(params)\r\n\r\n    if (!params.scale) {\r\n      this.parameters.scale = 'RdYlGn'\r\n    }\r\n\r\n    const idx = 0  // 0: DGwif, 1: DGwoct, 2: Oct-IF\r\n\r\n    for (const name in ResidueHydrophobicity) {\r\n      this.resHF[ name ] = ResidueHydrophobicity[ name ][ idx ]\r\n    }\r\n    this.defaultResidueHydrophobicity = DefaultResidueHydrophobicity[idx]\r\n\r\n    if (!params.domain) {\r\n      let min = Infinity\r\n      let max = -Infinity\r\n\r\n      for (const name in this.resHF) {\r\n        const val = this.resHF[ name ]\r\n        min = Math.min(min, val)\r\n        max = Math.max(max, val)\r\n      }\r\n\r\n      this.parameters.domain = [ min, 0, max ]\r\n    }\r\n\r\n    this.hfScale = this.getScale()\r\n  }\r\n\r\n  @manageColor\r\n  atomColor (a: AtomProxy) {\r\n    return this.hfScale(this.resHF[ a.resname ] || this.defaultResidueHydrophobicity)\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('hydrophobicity', HydrophobicityColormaker)\r\n\r\nexport default HydrophobicityColormaker\r\n","/**\r\n * @file Modelindex Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ColormakerRegistry } from '../globals'\r\nimport Colormaker, { StuctureColormakerParams, ColormakerScale, manageColor } from './colormaker'\r\nimport AtomProxy from '../proxy/atom-proxy'\r\n\r\n/**\r\n * Color by model index\r\n */\r\nclass ModelindexColormaker extends Colormaker {\r\n  modelindexScale: ColormakerScale\r\n\r\n  constructor (params: StuctureColormakerParams) {\r\n    super(params)\r\n\r\n    if (!params.scale) {\r\n      this.parameters.scale = 'rainbow'\r\n    }\r\n    if (!params.domain) {\r\n      this.parameters.domain = [ 0, params.structure.modelStore.count ]\r\n    }\r\n\r\n    this.modelindexScale = this.getScale()\r\n  }\r\n\r\n  @manageColor\r\n  atomColor (a: AtomProxy) {\r\n    return this.modelindexScale(a.modelIndex)\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('modelindex', ModelindexColormaker)\r\n\r\nexport default ModelindexColormaker\r\n","/**\r\n * @file Moleculetype Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ColormakerRegistry } from '../globals'\r\nimport Colormaker, { manageColor } from './colormaker'\r\nimport AtomProxy from '../proxy/atom-proxy'\r\n\r\nimport {\r\n    WaterType, IonType, ProteinType, RnaType, DnaType, SaccharideType\r\n} from '../structure/structure-constants'\r\n\r\n/**\r\n * Color by molecule type\r\n */\r\nclass MoleculetypeColormaker extends Colormaker {\r\n  @manageColor\r\n  atomColor (a: AtomProxy) {\r\n    switch (a.residueType.moleculeType) {\r\n      case WaterType:\r\n        return 0x386cb0\r\n      case IonType:\r\n        return 0xf0027f\r\n      case ProteinType:\r\n        return 0xbeaed4\r\n      case RnaType:\r\n        return 0xfdc086\r\n      case DnaType:\r\n        return 0xbf5b17\r\n      case SaccharideType:\r\n        return 0x7fc97f\r\n      default:\r\n        return 0xffff99\r\n    }\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('moleculetype', MoleculetypeColormaker)\r\n\r\nexport default MoleculetypeColormaker\r\n","/**\r\n * @file Occupancy Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ColormakerRegistry } from '../globals'\r\nimport Colormaker, { ColormakerParameters, ColormakerScale, manageColor } from './colormaker'\r\nimport AtomProxy from '../proxy/atom-proxy'\r\n\r\n/**\r\n * Color by occupancy\r\n */\r\nclass OccupancyColormaker extends Colormaker {\r\n  occupancyScale: ColormakerScale\r\n\r\n  constructor (params: ColormakerParameters) {\r\n    super(params)\r\n\r\n    if (!params.scale) {\r\n      this.parameters.scale = 'PuBu'\r\n    }\r\n\r\n    if (!params.domain) {\r\n      this.parameters.domain = [ 0.0, 1.0 ]\r\n    }\r\n\r\n    this.occupancyScale = this.getScale()\r\n  }\r\n\r\n  @manageColor\r\n  atomColor (a: AtomProxy) {\r\n    return this.occupancyScale(a.occupancy)\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('occupancy', OccupancyColormaker)\r\n\r\nexport default OccupancyColormaker\r\n","/**\r\n * @file Partialcharge Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ColormakerRegistry } from '../globals'\r\nimport Colormaker, { ColormakerParameters, ColormakerScale, manageColor } from './colormaker'\r\nimport AtomProxy from '../proxy/atom-proxy'\r\n\r\n/**\r\n * Color by partial charge. The {@link AtomProxy.partialCharge} property is used for coloring.\r\n * The default domain is [-1, 1].\r\n *\r\n * __Name:__ _partialCharge_\r\n *\r\n * @example\r\n * stage.loadFile(\"rcsb://1crn\").then(function (o) {\r\n *   o.addRepresentation(\"ball+stick\", {colorScheme: \"partialCharge\"});\r\n *   o.autoView();\r\n * });\r\n */\r\nclass PartialchargeColormaker extends Colormaker {\r\n  partialchargeScale: ColormakerScale\r\n\r\n  constructor (params: ColormakerParameters) {\r\n    super(params)\r\n\r\n    if (!params.scale) {\r\n      this.parameters.scale = 'rwb'\r\n    }\r\n\r\n    if (!params.domain) {\r\n      this.parameters.domain = [-1, 1]\r\n    }\r\n\r\n    this.partialchargeScale = this.getScale()\r\n  }\r\n\r\n  @manageColor\r\n  atomColor (a: AtomProxy) {\r\n    return this.partialchargeScale(a.partialCharge || 0)\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('partialcharge', PartialchargeColormaker)\r\n\r\nexport default PartialchargeColormaker\r\n","/**\r\n * @file Random Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ColormakerRegistry } from '../globals'\r\nimport Colormaker, { manageColor } from './colormaker'\r\n\r\nfunction randomColor () {\r\n  return Math.random() * 0xFFFFFF\r\n}\r\n\r\n/**\r\n * Class by random color\r\n */\r\nclass RandomColormaker extends Colormaker {\r\n  /**\r\n   * get color for an atom\r\n   * @return {Integer} random hex color\r\n   */\r\n  @manageColor\r\n  atomColor () {\r\n    return randomColor()\r\n  }\r\n\r\n  /**\r\n   * get color for volume cell\r\n   * @return {Integer} random hex color\r\n   */\r\n  @manageColor\r\n  volumeColor () {\r\n    return randomColor()\r\n  }\r\n\r\n  /**\r\n   * get color for coordinates in space\r\n   * @return {Integer} random hex color\r\n   */\r\n  @manageColor\r\n  positionColor () {\r\n    return randomColor()\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('random', RandomColormaker)\r\n\r\nexport default RandomColormaker\r\n","/**\r\n * @file Randomcoilindex Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ColormakerRegistry } from '../globals'\r\nimport Colormaker, { StuctureColormakerParams, ColormakerScale, manageColor } from './colormaker'\r\nimport AtomProxy from '../proxy/atom-proxy'\r\n\r\n/**\r\n * Color by random coil index\r\n */\r\nclass RandomcoilindexColormaker extends Colormaker {\r\n  rciScale: ColormakerScale\r\n  rciDict: { [k: string]: number|undefined } = {}\r\n\r\n  constructor (params: StuctureColormakerParams) {\r\n    super(params)\r\n\r\n    if (!params.scale) {\r\n      this.parameters.scale = 'RdYlBu'\r\n    }\r\n\r\n    this.rciScale = this.getScale({ domain: [ 0.6, 0 ] })\r\n\r\n    const val = params.structure.validation\r\n    if (val) this.rciDict = val.rciDict\r\n\r\n  }\r\n\r\n  @manageColor\r\n  atomColor (atom: AtomProxy) {\r\n    let sele = `[${atom.resname}]${atom.resno}`\r\n    if (atom.chainname) sele += ':' + atom.chainname\r\n\r\n    const rci = this.rciDict[ sele ]\r\n    return rci !== undefined ? this.rciScale(rci) : 0x909090\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('randomcoilindex', RandomcoilindexColormaker)\r\n\r\nexport default RandomcoilindexColormaker\r\n","/**\r\n * @file Residueindex Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ColormakerRegistry } from '../globals'\r\nimport { defaults } from '../utils'\r\nimport Colormaker, { StuctureColormakerParams, ColormakerScale, manageColor } from './colormaker'\r\nimport AtomProxy from '../proxy/atom-proxy'\r\nimport ChainProxy from '../proxy/chain-proxy'\r\n\r\n/**\r\n * Color by residue index\r\n */\r\nclass ResidueindexColormaker extends Colormaker {\r\n  scalePerChain: { [k: number]: ColormakerScale } = {}\r\n\r\n  constructor (params: StuctureColormakerParams) {\r\n    super(params)\r\n\r\n    if (!params.scale) {\r\n      this.parameters.scale = 'rainbow'\r\n      this.parameters.reverse = defaults(params.reverse, true)\r\n    }\r\n\r\n    params.structure.eachChain((cp: ChainProxy) => {\r\n      this.parameters.domain = [ cp.residueOffset, cp.residueEnd ]\r\n      this.scalePerChain[ cp.index ] = this.getScale()\r\n    })\r\n  }\r\n\r\n  @manageColor\r\n  atomColor (a: AtomProxy) {\r\n    return this.scalePerChain[ a.chainIndex ](a.residueIndex)\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('residueindex', ResidueindexColormaker)\r\n\r\nexport default ResidueindexColormaker\r\n","/**\r\n * @file Resname Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ColormakerRegistry } from '../globals'\r\nimport Colormaker, { manageColor } from './colormaker'\r\nimport AtomProxy from '../proxy/atom-proxy'\r\n\r\n// protein colors from Jmol http://jmol.sourceforge.net/jscolors/\r\nconst ResidueColors: { [k: string]: number } = {\r\n  'ALA': 0x8CFF8C,\r\n  'ARG': 0x00007C,\r\n  'ASN': 0xFF7C70,\r\n  'ASP': 0xA00042,\r\n  'CYS': 0xFFFF70,\r\n  'GLN': 0xFF4C4C,\r\n  'GLU': 0x660000,\r\n  'GLY': 0xFFFFFF,\r\n  'HIS': 0x7070FF,\r\n  'ILE': 0x004C00,\r\n  'LEU': 0x455E45,\r\n  'LYS': 0x4747B8,\r\n  'MET': 0xB8A042,\r\n  'PHE': 0x534C52,\r\n  'PRO': 0x525252,\r\n  'SER': 0xFF7042,\r\n  'THR': 0xB84C00,\r\n  'TRP': 0x4F4600,\r\n  'TYR': 0x8C704C,\r\n  'VAL': 0xFF8CFF,\r\n\r\n  'ASX': 0xFF00FF,\r\n  'GLX': 0xFF00FF,\r\n  'ASH': 0xFF00FF,\r\n  'GLH': 0xFF00FF,\r\n\r\n  'A': 0xDC143C,  // Crimson Red\r\n  'G': 0x32CD32,  // Lime Green\r\n  'I': 0x9ACD32,  // Yellow Green\r\n  'X': 0x7CFC00,  // Lawn Green\r\n  'C': 0xFFD700,  // Gold Yellow\r\n  'T': 0x4169E1,  // Royal Blue\r\n  'U': 0x40E0D0,  // Turquoise Cyan\r\n  'D': 0x008B8B,  // Dark Cyan\r\n\r\n  'DA': 0xDC143C,\r\n  'DG': 0x32CD32,\r\n  'DI': 0x9ACD32,\r\n  'DX': 0x7CFC00,\r\n  'DC': 0xFFD700,\r\n  'DT': 0x4169E1,\r\n  'DU': 0x40E0D0,\r\n  'DD': 0x008B8B\r\n}\r\nconst DefaultResidueColor = 0xFF00FF\r\n\r\n/**\r\n * Color by residue name\r\n */\r\nclass ResnameColormaker extends Colormaker {\r\n  @manageColor\r\n  atomColor (a: AtomProxy) {\r\n    return ResidueColors[ a.resname ] || DefaultResidueColor\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('resname', ResnameColormaker)\r\n\r\nexport default ResnameColormaker\r\n","/**\r\n * @file Sstruc Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ColormakerRegistry } from '../globals'\r\nimport Colormaker, { StuctureColormakerParams, manageColor } from './colormaker'\r\nimport AtomProxy from '../proxy/atom-proxy'\r\nimport ResidueProxy from '../proxy/residue-proxy'\r\n\r\n// from Jmol http://jmol.sourceforge.net/jscolors/ (shapely)\r\nconst StructureColors = {\r\n  'alphaHelix': 0xFF0080,\r\n  'threeTenHelix': 0xA00080,\r\n  'piHelix': 0x600080,\r\n  'betaStrand': 0xFFC800,\r\n  'betaTurn': 0x6080FF,\r\n  'coil': 0xFFFFFF,\r\n\r\n  'dna': 0xAE00FE,\r\n  'rna': 0xFD0162,\r\n\r\n  'carbohydrate': 0xA6A6FA\r\n}\r\nconst DefaultStructureColor = 0x808080\r\n\r\n/**\r\n * Color by secondary structure\r\n */\r\nclass SstrucColormaker extends Colormaker {\r\n  residueProxy: ResidueProxy\r\n\r\n  constructor (params: StuctureColormakerParams) {\r\n    super(params)\r\n\r\n    this.residueProxy = params.structure.getResidueProxy()\r\n  }\r\n\r\n  @manageColor\r\n  atomColor (ap: AtomProxy) {\r\n    const sstruc = ap.sstruc\r\n    const rp = this.residueProxy\r\n\r\n    if (sstruc === 'h') {\r\n      return StructureColors.alphaHelix\r\n    } else if (sstruc === 'g') {\r\n      return StructureColors.threeTenHelix\r\n    } else if (sstruc === 'i') {\r\n      return StructureColors.piHelix\r\n    } else if (sstruc === 'e' || sstruc === 'b') {\r\n      return StructureColors.betaStrand\r\n    } else if (sstruc === 't') {\r\n      return StructureColors.betaTurn\r\n    } else {\r\n      rp.index = ap.residueIndex\r\n      if (rp.isDna()) {\r\n        return StructureColors.dna\r\n      } else if (rp.isRna()) {\r\n        return StructureColors.rna\r\n      } else if (rp.isSaccharide()) {\r\n        return StructureColors.carbohydrate\r\n      } else if (rp.isProtein() || sstruc === 's' || sstruc === 'l') {\r\n        return StructureColors.coil\r\n      } else {\r\n        return DefaultStructureColor\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('sstruc', SstrucColormaker)\r\n\r\nexport default SstrucColormaker\r\n","/**\r\n * @file Colordata Colormaker\r\n * @author Fred Ludlow <fred.ludlow@gmail.com>\r\n * @private\r\n */\r\n\r\nimport { ColormakerRegistry } from '../globals'\r\nimport Colormaker, { ColorData, ColormakerScale, manageColor, StuctureColormakerParams } from './colormaker'\r\nimport AtomProxy from '../proxy/atom-proxy'\r\nimport BondProxy from '../proxy/bond-proxy'\r\n\r\n\r\nclass StructuredataColormaker extends Colormaker {\r\n  atomData?: ColorData['atomData']\r\n  bondData?: ColorData['bondData']\r\n  scale: ColormakerScale\r\n\r\n  constructor(params: StuctureColormakerParams) {\r\n    super(params)\r\n    if (!params.scale) {\r\n      this.parameters.scale = 'rwb'\r\n    }\r\n    this.atomData = this.parameters.data?.atomData\r\n    this.bondData = this.parameters.data?.bondData\r\n    this.scale = this.getScale(this.parameters)\r\n  }\r\n\r\n  @manageColor\r\n  atomColor(a: AtomProxy) {\r\n    const val = this.atomData?.[a.index]\r\n    return  (val !== undefined) ? this.scale(val) : this.parameters.value\r\n  }\r\n\r\n  @manageColor\r\n  bondColor(bond: BondProxy, fromTo: boolean) {\r\n      const val = this.bondData?.[bond.index]\r\n      \r\n      // Explicit bond data?\r\n      if (val !== undefined) return this.scale(val)\r\n      \r\n      \r\n      if (this.atomProxy) {\r\n        this.atomProxy.index = fromTo ? bond.atomIndex1 : bond.atomIndex2\r\n        return this.atomColor(this.atomProxy)\r\n      } \r\n      \r\n      // Fallback\r\n      return this.parameters.value\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('structuredata', StructuredataColormaker)\r\n\r\nexport default StructuredataColormaker","/**\r\n * @file Uniform Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ColormakerRegistry } from '../globals'\r\nimport Colormaker, { manageColor } from './colormaker'\r\n\r\n/**\r\n * Color by uniform color\r\n */\r\nclass UniformColormaker extends Colormaker {\r\n  @manageColor\r\n  atomColor () {\r\n    return this.parameters.value\r\n  }\r\n\r\n  @manageColor\r\n  bondColor () {\r\n    return this.parameters.value\r\n  }\r\n\r\n  @manageColor\r\n  valueColor () {\r\n    return this.parameters.value\r\n  }\r\n\r\n  @manageColor\r\n  volumeColor () {\r\n    return this.parameters.value\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('uniform', UniformColormaker)\r\n\r\nexport default UniformColormaker\r\n","/**\r\n * @file Value Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ColormakerRegistry } from '../globals'\r\nimport Colormaker, { VolumeColormakerParams, ColormakerScale, manageColor } from './colormaker'\r\n\r\n/**\r\n * Color by volume value\r\n */\r\nclass ValueColormaker extends Colormaker {\r\n  valueScale: ColormakerScale\r\n\r\n  constructor (params: VolumeColormakerParams) {\r\n    super(params)\r\n    this.valueScale = this.getScale()\r\n  }\r\n\r\n  /**\r\n   * return the color for a volume cell\r\n   * @param  {Integer} index - volume cell index\r\n   * @return {Integer} hex cell color\r\n   */\r\n  @manageColor\r\n  volumeColor (index: number) {\r\n    return this.valueScale((this.parameters.volume! as any).data[ index ])  // TODO\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('value', ValueColormaker)\r\n\r\nexport default ValueColormaker\r\n","/**\r\n * @file Volume Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3 } from 'three'\r\nimport { lerp } from '../math/math-utils'\r\n\r\nimport { ColormakerRegistry } from '../globals'\r\nimport Colormaker, { VolumeColormakerParams, ColormakerScale, manageColor } from './colormaker'\r\n\r\n/**\r\n * Color by volume position\r\n */\r\nclass VolumeColormaker extends Colormaker {\r\n  valueScale: ColormakerScale\r\n  vec = new Vector3()\r\n\r\n  constructor (params: VolumeColormakerParams) {\r\n    super(params)\r\n    this.valueScale = this.getScale()\r\n  }\r\n\r\n  /**\r\n   * return the color for coordinates in space\r\n   * @param  {Vector3} coords - xyz coordinates\r\n   * @return {Integer} hex coords color\r\n   */\r\n  @manageColor\r\n  positionColor (coords: Vector3) {\r\n    const volume = this.parameters.volume as any  // TODO\r\n\r\n    if (!volume || !volume.inverseMatrix) {\r\n      return this.parameters.value\r\n    }\r\n\r\n    const vec = this.vec\r\n    const data = volume.data\r\n    const nx = volume.nx\r\n    const ny = volume.ny\r\n    const nxy = nx * ny\r\n\r\n    vec.copy(coords)\r\n    vec.applyMatrix4(volume.inverseMatrix)\r\n\r\n    // position of grid cell\r\n    const x0 = Math.floor(vec.x)\r\n    const y0 = Math.floor(vec.y)\r\n    const z0 = Math.floor(vec.z)\r\n\r\n    // Indices\r\n    const i = ((((z0 * ny) + y0) * nx) + x0)\r\n    const i1 = i + 1\r\n    const iy = i + nx\r\n    const iz = i + nxy\r\n    const i1y = iy + 1\r\n    const i1z = iz + 1\r\n    const iyz = iy + nxy\r\n    const i1yz = iyz + 1\r\n\r\n    // Values\r\n    const v = data[ i ]\r\n    const v1 = data[ i1 ]\r\n    const vy = data[ iy ]\r\n    const vz = data[ iz ]\r\n    const v1y = data[ i1y ]\r\n    const v1z = data[ i1z ]\r\n    const vyz = data[ iyz ]\r\n    const v1yz = data[ i1yz ]\r\n\r\n    // Position of point in fraction of grid\r\n    const xd = vec.x - x0\r\n    const yd = vec.y - y0\r\n    const zd = vec.z - z0\r\n\r\n    // 1st Dimension\r\n    const c00 = lerp(v, v1, xd)\r\n    const c01 = lerp(vz, v1z, xd)\r\n    const c10 = lerp(vy, v1y, xd)\r\n    const c11 = lerp(vyz, v1yz, xd)\r\n\r\n    // 2nd Dimension\r\n    const c0 = lerp(c00, c10, yd)\r\n    const c1 = lerp(c01, c11, yd)\r\n\r\n    // 3rd Dimension\r\n    const c = lerp(c0, c1, zd)\r\n\r\n    return this.valueScale(c)\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('volume', VolumeColormaker)\r\n\r\nexport default VolumeColormaker\r\n","/**\r\n * @file Structure Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ExtensionFragDepth, Mobile } from '../globals'\r\nimport { defaults } from '../utils'\r\nimport { RepresentationParameters, default as Representation } from './representation'\r\nimport Selection from '../selection/selection'\r\nimport RadiusFactory, { RadiusFactoryTypes, RadiusType } from '../utils/radius-factory'\r\nimport Structure from '../structure/structure'\r\nimport Viewer from '../viewer/viewer'\r\n// @ts-ignore: unused import Volume required for declaration only\r\nimport { Assembly, Volume } from '../ngl';\r\nimport StructureView from '../structure/structure-view';\r\nimport AtomProxy from '../proxy/atom-proxy';\r\nimport Polymer from '../proxy/polymer';\r\nimport Buffer from '../buffer/buffer';\r\nimport { AtomDataFields, BondDataFields, AtomDataParams, BondDataParams } from '../structure/structure-data';\r\n// @ts-ignore: unused import Surface required for declaration only\r\nimport Surface from '../surface/surface'\r\n\r\n/**\r\n * Structure representation parameter object.\r\n * @typedef {Object} StructureRepresentationParameters - structure representation parameters\r\n * @mixes RepresentationParameters\r\n *\r\n * @property {String} radiusType - A list of possible sources of the radius used for rendering the representation. The radius can be based on the *vdW radius*, the *covalent radius* or the *B-factor* value of the corresponding atom. Additionally the radius can be based on the *secondary structure*. Alternatively, when set to *size*, the value from the *radius* parameter is used for all atoms.\r\n * @property {Float} radius - A number providing a fixed radius used for rendering the representation.\r\n * @property {Float} scale - A number that scales the value defined by the *radius* or the *radiusType* parameter.\r\n * @property {String} assembly - name of an assembly object. Included are the asymmetric unit (*AU*) corresponding to the coordinates given in the structure file, biological assemblies from *PDB*, *mmCIF* or *MMTF* files (*BU1*, *BU2*, ...), a filled (crystallographic) unitcell of a given space group (*UNITCELL*), a supercell consisting of a center unitcell and its 26 direct neighbors (*SUPERCELL*). Set to *default* to use the default asemmbly of the structure object.\r\n */\r\nexport interface StructureRepresentationParameters extends RepresentationParameters {\r\n  radiusType: string\r\n  radius: number\r\n  scale: number\r\n  assembly: string\r\n}\r\nexport interface StructureRepresentationData {\r\n  bufferList: Buffer[]\r\n  polymerList?: Polymer[]\r\n  sview?: StructureView | Structure\r\n  [k: string]: any\r\n}\r\n/**\r\n * Structure representation\r\n * @interface\r\n */\r\nabstract class StructureRepresentation extends Representation {\r\n\r\n  protected selection: Selection\r\n  protected dataList: StructureRepresentationData[]\r\n  structure: Structure\r\n  structureView: StructureView\r\n\r\n  protected radiusType: RadiusType\r\n  protected radiusData: {[k: number]: number}\r\n  protected radiusSize: number\r\n  protected radiusScale: number\r\n  protected assembly: string\r\n  protected defaultAssembly: string\r\n  protected needsBuild: boolean\r\n\r\n  /**\r\n   * Create Structure representation object\r\n   * @param {Structure} structure - the structure to be represented\r\n   * @param {Viewer} viewer - a viewer object\r\n   * @param {StructureRepresentationParameters} params - structure representation parameters\r\n   */\r\n  constructor (structure: Structure, viewer: Viewer, params: Partial<StructureRepresentationParameters>) {\r\n    const p = params || {}\r\n\r\n    super(structure, viewer, p)\r\n\r\n    this.type = 'structure'\r\n\r\n    this.parameters = Object.assign({\r\n      radiusType: {\r\n        type: 'select', options: RadiusFactory.types\r\n      },\r\n      radiusData: {\r\n        type: 'hidden'\r\n      },\r\n      radiusSize: {\r\n        type: 'number', precision: 3, max: 10.0, min: 0.001\r\n      },\r\n      radiusScale: {\r\n        type: 'number', precision: 3, max: 10.0, min: 0.001\r\n      },\r\n      assembly: null,\r\n      defaultAssembly: {\r\n        type: 'hidden'\r\n      }\r\n    }, this.parameters)\r\n\r\n    /**\r\n     * @type {Selection}\r\n     * @private\r\n     */\r\n    this.selection = new Selection(p.sele)\r\n\r\n    /**\r\n     * @type {Array}\r\n     * @private\r\n     */\r\n    this.dataList = []\r\n\r\n    /**\r\n     * @type {Structure}\r\n     */\r\n    this.structure = structure\r\n\r\n    /**\r\n     * @type {StructureView}\r\n     */\r\n    this.structureView = this.structure.getView(this.selection)\r\n\r\n    if (structure.biomolDict) {\r\n      const biomolOptions:{[key: string]: string} = {\r\n        'default': 'default',\r\n        '': (structure.unitcell ? 'AU' : 'FULL')\r\n      }\r\n      Object.keys(structure.biomolDict).forEach(function (k) {\r\n        biomolOptions[ k ] = k\r\n      })\r\n      this.parameters.assembly = {\r\n        type: 'select',\r\n        options: biomolOptions,\r\n        rebuild: true\r\n      }\r\n    } else {\r\n      this.parameters.assembly = null\r\n    }\r\n  }\r\n\r\n  get defaultScale () {\r\n    return {\r\n      'vdw': 1.0,\r\n      'covalent': 1.0,\r\n      'bfactor': 0.01,\r\n      'sstruc': 1.0\r\n    }\r\n  }\r\n\r\n  init (params: Partial<StructureRepresentationParameters>) {\r\n    const p = params || {}\r\n    p.colorScheme = defaults(p.colorScheme, 'element')\r\n\r\n    this.setRadius(p.radius, p)\r\n\r\n    this.radiusType = defaults(p.radiusType, 'vdw')\r\n    this.radiusData = defaults(p.radiusData, {})\r\n    this.radiusSize = defaults(p.radiusSize, 1.0)\r\n    this.radiusScale = defaults(p.radiusScale, 1.0)\r\n    this.assembly = defaults(p.assembly, 'default')\r\n    this.defaultAssembly = defaults(p.defaultAssembly, '')\r\n\r\n    if (p.quality === 'auto') {\r\n      p.quality = this.getQuality()\r\n    }\r\n\r\n    super.init(p)\r\n\r\n    this.selection.signals.stringChanged.add((/* sele */) => {\r\n      this.build()\r\n    })\r\n\r\n    this.build()\r\n  }\r\n\r\n  setRadius (value: string | number | undefined, p: Partial<StructureRepresentationParameters>) {\r\n    const types = Object.keys(RadiusFactoryTypes)\r\n\r\n    if (typeof value === 'string' && types.includes(value.toLowerCase())) {\r\n      p.radiusType = value\r\n    } else if (value !== undefined) {\r\n      p.radiusType = 'size'\r\n      p.radiusSize = value\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  getAssembly (): Assembly {\r\n    const name = this.assembly === 'default' ? this.defaultAssembly : this.assembly\r\n    return this.structure.biomolDict[ name ]\r\n  }\r\n\r\n  getQuality () {\r\n    let atomCount\r\n    const s = this.structureView\r\n    const assembly = this.getAssembly()\r\n    if (assembly) {\r\n      atomCount = assembly.getAtomCount(s)\r\n    } else {\r\n      atomCount = s.atomCount\r\n    }\r\n    if (Mobile) {\r\n      atomCount *= 4\r\n    }\r\n    const backboneOnly = s.atomStore.count / s.residueStore.count < 2\r\n    if (backboneOnly) {\r\n      atomCount *= 10\r\n    }\r\n\r\n    if (atomCount < 15000) {\r\n      return 'high'\r\n    } else if (atomCount < 80000) {\r\n      return 'medium'\r\n    } else {\r\n      return 'low'\r\n    }\r\n  }\r\n\r\n  create () {\r\n    if (this.structureView.atomCount === 0) return\r\n\r\n    if (!this.structureView.hasCoords()) {\r\n      this.needsBuild = true\r\n      return\r\n    } else {\r\n      this.needsBuild = false\r\n    }\r\n\r\n    const assembly = this.getAssembly()\r\n\r\n    if (assembly) {\r\n      assembly.partList.forEach((part, i) => {\r\n        const sview = <StructureView>part.getView(this.structureView)\r\n        if (sview.atomCount === 0) return\r\n        const data = this.createData(sview, i)\r\n        if (data) {\r\n          data.sview = sview\r\n          data.instanceList = part.getInstanceList()\r\n          this.dataList.push(data)\r\n        }\r\n      })\r\n    } else {\r\n      const data = this.createData(this.structureView, 0)\r\n      if (data) {\r\n        data.sview = this.structureView\r\n        this.dataList.push(data)\r\n      }\r\n    }\r\n  }\r\n\r\n  abstract createData (sview: StructureView, k?: number): StructureRepresentationData|undefined\r\n\r\n  update (what: AtomDataFields|BondDataFields) {\r\n    if (this.lazy && !this.visible) {\r\n      Object.assign(this.lazyProps.what, what)\r\n      return\r\n    }\r\n\r\n    if (this.needsBuild) {\r\n      this.build()\r\n      return\r\n    }\r\n\r\n    this.dataList.forEach((data) => {\r\n      if (data.bufferList.length > 0) {\r\n        this.updateData(what, data)\r\n      }\r\n    }, this)\r\n  }\r\n\r\n  updateData (what?: AtomDataFields|BondDataFields, data?: any) {\r\n    this.build()\r\n  }\r\n\r\n  getColorParams () {\r\n    return {\r\n      ...super.getColorParams(),\r\n      structure: this.structure\r\n    }\r\n  }\r\n\r\n  getRadiusParams (param?: any) {\r\n    return {\r\n      type: this.radiusType,\r\n      scale: this.radiusScale,\r\n      size: this.radiusSize,\r\n      data: this.radiusData\r\n    }\r\n  }\r\n\r\n  getAtomParams (what?: AtomDataFields, params?: AtomDataParams) {\r\n    return Object.assign({\r\n      what: what,\r\n      colorParams: this.getColorParams(),\r\n      radiusParams: this.getRadiusParams()\r\n    }, params)\r\n  }\r\n\r\n  getBondParams (what?: BondDataFields, params?: BondDataParams) {\r\n    return Object.assign({\r\n      what: what,\r\n      colorParams: this.getColorParams(),\r\n      radiusParams: this.getRadiusParams()\r\n    }, params)\r\n  }\r\n\r\n  getAtomRadius (atom: AtomProxy) {\r\n    if (this.structureView.atomSet!.isSet(atom.index)) {\r\n      const radiusFactory = new RadiusFactory(this.getRadiusParams())\r\n      return radiusFactory.atomRadius(atom)\r\n    }\r\n    return 0\r\n  }\r\n\r\n  /**\r\n   * Set representation parameters\r\n   * @alias StructureRepresentation#setSelection\r\n   * @param {String} string - selection string, see {@tutorial selection-language}\r\n   * @param {Boolean} [silent] - don't trigger a change event in the selection\r\n   * @return {StructureRepresentation} this object\r\n   */\r\n  setSelection (string: string, silent?: boolean) {\r\n    this.selection.setString(string, silent)\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Set representation parameters\r\n   * @alias StructureRepresentation#setParameters\r\n   * @param {StructureRepresentationParameters} params - structure parameter object\r\n   * @param {Object} [what] - buffer data attributes to be updated,\r\n   *                        note that this needs to be implemented in the\r\n   *                        derived classes. Generally it allows more\r\n   *                        fine-grained control over updating than\r\n   *                        forcing a rebuild.\r\n   * @param {Boolean} what.position - update position data\r\n   * @param {Boolean} what.color - update color data\r\n   * @param {Boolean} [rebuild] - whether or not to rebuild the representation\r\n   * @return {StructureRepresentation} this object\r\n   */\r\n  setParameters (params: Partial<StructureRepresentationParameters>, what: AtomDataFields = {}, rebuild = false) {\r\n    const p = params || {}\r\n\r\n    this.setRadius(p.radius, p)\r\n\r\n    if (p.radiusType !== undefined || p.radiusData !== undefined || p.radiusSize !== undefined || p.radiusScale !== undefined) {\r\n      what.radius = true\r\n      if (!ExtensionFragDepth || this.disableImpostor) {\r\n        rebuild = true\r\n      }\r\n    }\r\n\r\n    if (p.defaultAssembly !== undefined &&\r\n        p.defaultAssembly !== this.defaultAssembly &&\r\n        ((this.assembly === 'default' && p.assembly === undefined) ||\r\n          p.assembly === 'default')\r\n    ) {\r\n      rebuild = true\r\n    }\r\n\r\n    super.setParameters(p, what, rebuild)\r\n\r\n    return this\r\n  }\r\n\r\n  getParameters () {\r\n    const params = Object.assign(\r\n      super.getParameters(),\r\n      {\r\n        sele: this.selection ? this.selection.string : undefined,\r\n        defaultAssembly: this.defaultAssembly\r\n      }\r\n    )\r\n\r\n    return params\r\n  }\r\n\r\n  attach (callback: ()=> void) {\r\n    const viewer = this.viewer\r\n    const bufferList = this.bufferList\r\n\r\n    this.dataList.forEach(function (data) {\r\n      data.bufferList.forEach(function (buffer) {\r\n        bufferList.push(buffer)\r\n        viewer.add(buffer, data.instanceList)\r\n      })\r\n    })\r\n\r\n    this.setVisibility(this.visible)\r\n    callback()\r\n  }\r\n\r\n  clear () {\r\n    this.dataList.length = 0\r\n\r\n    super.clear()\r\n  }\r\n\r\n  dispose () {\r\n    this.structureView.dispose()\r\n\r\n    super.dispose()\r\n  }\r\n}\r\n\r\nexport default StructureRepresentation\r\n","/**\r\n * @file Measurement Representation\r\n * @author Fred Ludlow <fred.ludlow@gmail.com>\r\n * @private\r\n */\r\n\r\n// @ts-ignore: unused import Vector3, Matrix4 required for declaration only\r\nimport { Color, Vector3, Matrix4 } from 'three'\r\n\r\nimport Selection from '../selection/selection'\r\nimport { Browser } from '../globals'\r\nimport { defaults } from '../utils'\r\nimport StructureRepresentation, { StructureRepresentationParameters } from './structure-representation'\r\nimport { uniformArray, uniformArray3 } from '../math/array-utils'\r\nimport { Structure } from '../ngl';\r\nimport Viewer from '../viewer/viewer';\r\nimport StructureView from '../structure/structure-view';\r\nimport { LabelRepresentationParameters } from './label-representation';\r\nimport TextBuffer, { TextBufferData } from '../buffer/text-buffer';\r\nimport { GenericColor } from '../types'\r\n\r\nexport interface LabelDataField {\r\n  position?: boolean\r\n  labelColor?: boolean\r\n  labelSize?: boolean\r\n  radius?: boolean\r\n  labelText?: boolean\r\n}\r\n\r\n/**\r\n * Measurement representation parameter object.\r\n * @typedef {Object} MeasurementRepresentationParameters - measurement representation parameters\r\n * @mixes RepresentationParameters\r\n * @mixes StructureRepresentationParameters\r\n *\r\n * @property {Float} labelSize - size of the distance label\r\n * @property {Color} labelColor - color of the distance label\r\n * @property {Boolean} labelVisible - visibility of the distance label\r\n * @property {Float} labelZOffset - offset in z-direction (i.e. in camera direction)\r\n */\r\nexport interface MeasurementRepresentationParameters extends StructureRepresentationParameters {\r\n  labelVisible: boolean\r\n  labelSize: number\r\n  labelColor: GenericColor\r\n  labelType: 'atomname'|'atomindex'|'occupancy'|'bfactor'|'serial'|'element'|'atom'|'resname'|'resno'|'res'|'text'|'qualified'\r\n  labelText: string\r\n  labelFormat: string\r\n  labelGrouping: 'atom'|'residue'\r\n  labelFontFamily: 'sans-serif'|'monospace'|'serif'\r\n  labelFontStyle: 'normal'|'italic'\r\n  labelFontWeight: 'normal'|'bold'\r\n  labelsdf: boolean\r\n  labelXOffset: number\r\n  labelYOffset: number\r\n  labelZOffset: number\r\n  labelAttachment: 'bottom-left'|'bottom-center'|'bottom-right'|'middle-left'|'middle-center'|'middle-right'|'top-left'|'top-center'|'top-right'\r\n  labelBorder: boolean\r\n  labelBorderColor: GenericColor\r\n  labelBorderWidth: number\r\n  labelBackground: boolean\r\n  labelBackgroundColor: GenericColor\r\n  labelBackgroundMargin: number\r\n  labelBackgroundOpacity: number\r\n  labelFixedSize: boolean\r\n  lineOpacity: number\r\n  linewidth: number\r\n}\r\n\r\n/**\r\n * Measurement representation\r\n * @interface\r\n */\r\nabstract class MeasurementRepresentation extends StructureRepresentation {\r\n  protected n: number\r\n  protected labelVisible: boolean\r\n  protected labelSize: number\r\n  protected labelColor: GenericColor\r\n  protected labelType: 'atomname'|'atomindex'|'occupancy'|'bfactor'|'serial'|'element'|'atom'|'resname'|'resno'|'res'|'text'|'qualified'\r\n  protected labelText: string\r\n  protected labelFormat: string\r\n  protected labelGrouping: 'atom'|'residue'\r\n  protected labelFontFamily: 'sans-serif'|'monospace'|'serif'\r\n  protected labelFontStyle: 'normal'|'italic'\r\n  protected labelFontWeight: 'normal'|'bold'\r\n  protected labelsdf: boolean\r\n  protected labelXOffset: number\r\n  protected labelYOffset: number\r\n  protected labelZOffset: number\r\n  protected labelAttachment: 'bottom-left'|'bottom-center'|'bottom-right'|'middle-left'|'middle-center'|'middle-right'|'top-left'|'top-center'|'top-right'\r\n  protected labelBorder: boolean\r\n  protected labelBorderColor: GenericColor\r\n  protected labelBorderWidth: number\r\n  protected labelBackground: boolean\r\n  protected labelBackgroundColor: GenericColor\r\n  protected labelBackgroundMargin: number\r\n  protected labelBackgroundOpacity: number\r\n  protected labelFixedSize: boolean\r\n  protected lineOpacity: number\r\n  protected linewidth: number\r\n  protected lineVisible: boolean\r\n\r\n  protected textBuffer: TextBuffer\r\n  /**\r\n   * Handles common label settings and position logic for\r\n   * distance, angle and dihedral representations\r\n   */\r\n  constructor (structure: Structure, viewer: Viewer, params: Partial<MeasurementRepresentationParameters>) {\r\n    super(structure, viewer, params)\r\n\r\n    this.n = 0 // Subclass create sets value\r\n    this.parameters = Object.assign({\r\n      labelVisible: {\r\n        type: 'boolean'\r\n      },\r\n      labelSize: {\r\n        type: 'number', precision: 3, max: 10.0, min: 0.001\r\n      },\r\n      labelColor: {\r\n        type: 'color'\r\n      },\r\n      labelFontFamily: {\r\n        type: 'select',\r\n        options: {\r\n          'sans-serif': 'sans-serif',\r\n          'monospace': 'monospace',\r\n          'serif': 'serif'\r\n        },\r\n        buffer: 'fontFamily'\r\n      },\r\n      labelFontStyle: {\r\n        type: 'select',\r\n        options: {\r\n          'normal': 'normal',\r\n          'italic': 'italic'\r\n        },\r\n        buffer: 'fontStyle'\r\n      },\r\n      labelFontWeight: {\r\n        type: 'select',\r\n        options: {\r\n          'normal': 'normal',\r\n          'bold': 'bold'\r\n        },\r\n        buffer: 'fontWeight'\r\n      },\r\n      labelsdf: {\r\n        type: 'boolean', buffer: 'sdf'\r\n      },\r\n      labelXOffset: {\r\n        type: 'number', precision: 1, max: 20, min: -20, buffer: 'xOffset'\r\n      },\r\n      labelYOffset: {\r\n        type: 'number', precision: 1, max: 20, min: -20, buffer: 'yOffset'\r\n      },\r\n      labelZOffset: {\r\n        type: 'number', precision: 1, max: 20, min: -20, buffer: 'zOffset'\r\n      },\r\n      labelAttachment: {\r\n        type: 'select',\r\n        options: {\r\n          'bottom-left': 'bottom-left',\r\n          'bottom-center': 'bottom-center',\r\n          'bottom-right': 'bottom-right',\r\n          'middle-left': 'middle-left',\r\n          'middle-center': 'middle-center',\r\n          'middle-right': 'middle-right',\r\n          'top-left': 'top-left',\r\n          'top-center': 'top-center',\r\n          'top-right': 'top-right'\r\n        },\r\n        rebuild: true\r\n      },\r\n      labelBorder: {\r\n        type: 'boolean', buffer: 'showBorder'\r\n      },\r\n      labelBorderColor: {\r\n        type: 'color', buffer: 'borderColor'\r\n      },\r\n      labelBorderWidth: {\r\n        type: 'number', precision: 2, max: 0.3, min: 0, buffer: 'borderWidth'\r\n      },\r\n      labelBackground: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n      labelBackgroundColor: {\r\n        type: 'color', buffer: 'backgroundColor'\r\n      },\r\n      labelBackgroundMargin: {\r\n        type: 'number', precision: 2, max: 2, min: 0, rebuild: true\r\n      },\r\n      labelBackgroundOpacity: {\r\n        type: 'range', step: 0.01, max: 1, min: 0, buffer: 'backgroundOpacity'\r\n      },\r\n      labelFixedSize: {\r\n        type: 'boolean', buffer: 'fixedSize'\r\n      },\r\n      lineOpacity: {\r\n        type: 'range', min: 0.0, max: 1.0, step: 0.01\r\n      },\r\n      linewidth: {\r\n        type: 'integer', max: 50, min: 1, buffer: true\r\n      }\r\n    }, this.parameters, {\r\n      flatShaded: null\r\n    })\r\n  }\r\n\r\n  init (params: Partial<MeasurementRepresentationParameters>) {\r\n    const p = params || {}\r\n    this.labelVisible = defaults(p.labelVisible, true)\r\n    this.labelSize = defaults(p.labelSize, 2.0)\r\n    this.labelColor = defaults(p.labelColor, 0xFFFFFF)\r\n    this.labelFontFamily = defaults(p.labelFontFamily, 'sans-serif')\r\n    this.labelFontStyle = defaults(p.labelFontstyle, 'normal')\r\n    this.labelFontWeight = defaults(p.labelFontWeight, 'bold')\r\n    this.labelsdf = defaults(p.labelsdf, Browser === 'Chrome')\r\n    this.labelXOffset = defaults(p.labelXOffset, 0.0)\r\n    this.labelYOffset = defaults(p.labelYOffset, 0.0)\r\n    this.labelZOffset = defaults(p.labelZOffset, 0.5)\r\n    this.labelAttachment = defaults(p.labelAttachment, 'bottom-left')\r\n    this.labelBorder = defaults(p.labelBorder, false)\r\n    this.labelBorderColor = defaults(p.labelBorderColor, 'lightgrey')\r\n    this.labelBorderWidth = defaults(p.labelBorderWidth, 0.15)\r\n    this.labelBackground = defaults(p.labelBackground, false)\r\n    this.labelBackgroundColor = defaults(p.labelBackgroundColor, 'lightgrey')\r\n    this.labelBackgroundMargin = defaults(p.labelBackgroundMargin, 0.5)\r\n    this.labelBackgroundOpacity = defaults(p.labelBackgroundOpacity, 1.0)\r\n    this.labelFixedSize = defaults(p.labelFixedSize, false)\r\n    this.lineOpacity = defaults(p.lineOpacity, 1.0)\r\n    this.linewidth = defaults(p.linewidth, 2)\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  // All measurements need to rebuild on position change\r\n  update (what: LabelDataField) {\r\n    if (what.position) {\r\n      this.build()\r\n    } else {\r\n      super.update(what)\r\n    }\r\n  }\r\n\r\n  updateData (what: LabelDataField & {[k: string]: any}, data: any) {\r\n    const textData: TextBufferData | {} = {}\r\n    if (!what || what.labelSize) {\r\n      Object.assign(textData, {size: uniformArray(this.n, this.labelSize)})\r\n    }\r\n\r\n    if (!what || what.labelColor) {\r\n      const c = new Color(this.labelColor)\r\n      Object.assign(textData, {color: uniformArray3(this.n, c.r, c.g, c.b)})\r\n    }\r\n\r\n    this.textBuffer.setAttributes(textData as TextBufferData)\r\n  }\r\n\r\n  setParameters (params: Partial<MeasurementRepresentationParameters>, what: LabelDataField = {}, rebuild = false) {\r\n    if (params && params.labelSize) {\r\n      what.labelSize = true\r\n    }\r\n\r\n    if (params && (params.labelColor || params.labelColor === 0x000000)) {\r\n      what.labelColor = true\r\n      rebuild = true\r\n    }\r\n\r\n    super.setParameters(params, what, rebuild)\r\n\r\n    if (params && params.opacity !== undefined) {\r\n      this.textBuffer.setParameters({ opacity: 1.0 }) // only opaque labels\r\n    }\r\n\r\n    if (params && params.labelVisible !== undefined) {\r\n      this.setVisibility(this.visible)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  setVisibility (value: boolean, noRenderRequest?: boolean) {\r\n    super.setVisibility(value, true)\r\n    if (this.textBuffer) {\r\n      this.textBuffer.setVisibility(\r\n        this.labelVisible && this.visible\r\n      )\r\n    }\r\n\r\n    if (!noRenderRequest) this.viewer.requestRender()\r\n\r\n    return this\r\n  }\r\n\r\n  getLabelBufferParams (params: Partial<LabelRepresentationParameters> = {}) {\r\n    return super.getBufferParams(Object.assign({\r\n      fontFamily: this.labelFontFamily,\r\n      fontStyle: this.labelFontStyle,\r\n      fontWeight: this.labelFontWeight,\r\n      sdf: this.labelsdf,\r\n      xOffset: this.labelXOffset,\r\n      yOffset: this.labelYOffset,\r\n      zOffset: this.labelZOffset,\r\n      attachment: this.labelAttachment,\r\n      showBorder: this.labelBorder,\r\n      borderColor: this.labelBorderColor,\r\n      borderWidth: this.labelBorderWidth,\r\n      showBackground: this.labelBackground,\r\n      backgroundColor: this.labelBackgroundColor,\r\n      backgroundMargin: this.labelBackgroundMargin,\r\n      backgroundOpacity: this.labelBackgroundOpacity,\r\n      fixedSize: this.labelFixedSize,\r\n      disablePicking: true,\r\n      visible: this.labelVisible\r\n    }, params, {\r\n      opacity: 1.0 // only opaque labels\r\n    }))\r\n  }\r\n\r\n  getAtomRadius () {\r\n    return 0\r\n  }\r\n}\r\n\r\n/**\r\n * MeasurementRepresentations take atom[Pair|Triple|Quad] parameters.\r\n *\r\n * Parses nested array of either integer atom indices or selection\r\n * expressions into a flat array of coordinates.\r\n *\r\n * @param  {Structure} sview The structure to which the atoms refer\r\n * @param  {Array} atoms Nested array of atom pairs|triples|quads as\r\n *   Integer indices or selection expressions\r\n * @return {Float32Array} Flattened array of position coordinates\r\n */\r\nfunction parseNestedAtoms (sview: StructureView, atoms: (number|string)[][]) {\r\n  const ap = sview.getAtomProxy()\r\n  const sele = new Selection()\r\n\r\n  const nSets = atoms.length\r\n  if (nSets === 0) return new Float32Array(0)\r\n\r\n  // Peek-ahead at first item to determine order and parse mode\r\n  const order = atoms[ 0 ].length\r\n  const selected = sview.getAtomSet()\r\n\r\n  const a = new Float32Array(nSets * order * 3)\r\n\r\n  let p = 0\r\n  atoms.forEach(function (group) {\r\n    let _break = false\r\n    for (let j = 0; j < order; j++) {\r\n      const value = group[ j ]\r\n      if (typeof (value) === 'number' && Number.isInteger(value)) {\r\n        if (selected.get(value)) {\r\n          ap.index = value\r\n        } else {\r\n          _break = true\r\n          break\r\n        }\r\n      } else {\r\n        sele.setString(value as string)\r\n        const atomIndices = sview.getAtomIndices(sele)\r\n        if (atomIndices!.length) {\r\n          ap.index = atomIndices![ 0 ]\r\n        } else {\r\n          _break = true\r\n          break\r\n        }\r\n      }\r\n\r\n      let offset = p + j * 3\r\n      a[ offset++ ] = ap.x\r\n      a[ offset++ ] = ap.y\r\n      a[ offset++ ] = ap.z\r\n    }\r\n    if (!_break) p += 3 * order\r\n  })\r\n\r\n  return a.subarray(0, p)\r\n}\r\n\r\n/* out = v1 * cos(angle) + v2 * sin(angle) */\r\nfunction calcArcPoint (out: Float32Array, center: Float32Array, v1: Float32Array, v2: Float32Array, angle: number) {\r\n  const x = Math.cos(angle)\r\n  const y = Math.sin(angle)\r\n  out[ 0 ] = center[ 0 ] + v1[ 0 ] * x + v2[ 0 ] * y\r\n  out[ 1 ] = center[ 1 ] + v1[ 1 ] * x + v2[ 1 ] * y\r\n  out[ 2 ] = center[ 2 ] + v1[ 2 ] * x + v2[ 2 ] * y\r\n}\r\n\r\nexport {\r\n  MeasurementRepresentation as default,\r\n  calcArcPoint,\r\n  parseNestedAtoms\r\n}\r\n","/**\r\n * @file Edt\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { NumberArray } from '../types'\r\n\r\n// 2D Euclidean distance transform by Felzenszwalb & Huttenlocher https://cs.brown.edu/~pff/papers/dt-final.pdf\r\nexport function edt(data: NumberArray, width: number, height: number, f: NumberArray, d: NumberArray, v: NumberArray, z: NumberArray) {\r\n    for (let x = 0; x < width; x++) {\r\n        for (let y = 0; y < height; y++) {\r\n            f[y] = data[y * width + x]\r\n        }\r\n        edt1d(f, d, v, z, height)\r\n        for (let y = 0; y < height; y++) {\r\n            data[y * width + x] = d[y]\r\n        }\r\n    }\r\n    for (let y = 0; y < height; y++) {\r\n        for (let x = 0; x < width; x++) {\r\n            f[x] = data[y * width + x]\r\n        }\r\n        edt1d(f, d, v, z, width)\r\n        for (let x = 0; x < width; x++) {\r\n            data[y * width + x] = Math.sqrt(d[x])\r\n        }\r\n    }\r\n}\r\n\r\n// 1D squared distance transform\r\nfunction edt1d(f: NumberArray, d: NumberArray, v: NumberArray, z: NumberArray, n: number) {\r\n    v[0] = 0\r\n    z[0] = Number.MIN_SAFE_INTEGER\r\n    z[1] = Number.MAX_SAFE_INTEGER\r\n\r\n    for (let q = 1, k = 0; q < n; q++) {\r\n        let s = ((f[q] + q * q) - (f[v[k]] + v[k] * v[k])) / (2 * q - 2 * v[k])\r\n        while (s <= z[k]) {\r\n            k--\r\n            s = ((f[q] + q * q) - (f[v[k]] + v[k] * v[k])) / (2 * q - 2 * v[k])\r\n        }\r\n        k++\r\n        v[k] = q\r\n        z[k] = s\r\n        z[k + 1] = Number.MAX_SAFE_INTEGER\r\n    }\r\n\r\n    for (let q = 0, k = 0; q < n; q++) {\r\n        while (z[k + 1] < q) k++\r\n        d[q] = (q - v[k]) * (q - v[k]) + f[v[k]]\r\n    }\r\n}\r\n","/**\r\n * @file Text Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\n// @ts-ignore: unused import Vector3, Matrix4 required for declaration only\r\nimport { Color, CanvasTexture, Vector3, Matrix4 } from 'three'\r\n\r\nimport '../shader/SDFFont.vert'\r\nimport '../shader/SDFFont.frag'\r\n\r\nimport { BufferRegistry } from '../globals'\r\nimport { createParams } from '../utils'\r\nimport MappedQuadBuffer from './mappedquad-buffer'\r\nimport { IgnorePicker } from '../utils/picker'\r\nimport { edt } from '../utils/edt'\r\nimport { BufferDefaultParameters, BufferParameterTypes, BufferData, BufferTypes, BufferParameters } from './buffer'\r\nimport { GenericColor } from '../types'\r\n\r\nconst TextAtlasCache: { [k: string]: TextAtlas } = {}\r\n\r\nfunction getTextAtlas (params: Partial<TextAtlasParams>) {\r\n  const hash = JSON.stringify(params)\r\n  if (TextAtlasCache[ hash ] === undefined) {\r\n    TextAtlasCache[ hash ] = new TextAtlas(params)\r\n  }\r\n  return TextAtlasCache[ hash ]\r\n}\r\n\r\ntype TextFonts = 'sans-serif'|'monospace'|'serif'\r\ntype TextStyles = 'normal'|'italic'\r\ntype TextVariants = 'normal'\r\ntype TextWeights = 'normal'|'bold'\r\n\r\nexport const TextAtlasDefaultParams = {\r\n  font: 'sans-serif' as TextFonts,\r\n  size: 36,\r\n  style: 'normal' as TextStyles,\r\n  variant: 'normal' as TextVariants,\r\n  weight: 'normal' as TextWeights,\r\n  outline: 3,\r\n  width: 1024,\r\n  height: 1024\r\n}\r\nexport type TextAtlasParams = typeof TextAtlasDefaultParams\r\n\r\nexport type TextAtlasMap = { x: number, y: number, w: number, h: number }\r\n\r\nexport class TextAtlas {\r\n  parameters: TextAtlasParams\r\n\r\n  gamma = 1\r\n  mapped: { [k: string]: TextAtlasMap } = {}\r\n  scratchW = 0\r\n  scratchH = 0\r\n  currentX = 0\r\n  currentY = 0\r\n\r\n  cutoff = 0.25\r\n  padding: number\r\n  radius: number\r\n\r\n  gridOuter: Float64Array\r\n  gridInner: Float64Array\r\n  f: Float64Array\r\n  d: Float64Array\r\n  z: Float64Array\r\n  v: Int16Array\r\n\r\n  paddedSize: number\r\n  middle: number\r\n\r\n  texture: CanvasTexture\r\n  canvas: HTMLCanvasElement\r\n  context: CanvasRenderingContext2D\r\n\r\n  lineHeight: number\r\n  maxWidth: number\r\n  colors: string[]\r\n  scratch: Uint8Array\r\n  canvas2: HTMLCanvasElement\r\n  context2: CanvasRenderingContext2D\r\n  data: Uint8Array\r\n\r\n  placeholder: TextAtlasMap\r\n\r\n  constructor (params: Partial<TextAtlasParams> = {}) {\r\n    this.parameters = createParams(params, TextAtlasDefaultParams)\r\n    const p = this.parameters\r\n\r\n    this.radius = p.size / 8\r\n    this.padding = p.size / 3\r\n\r\n    // Prepare line-height with room for outline and descenders/ascenders\r\n    const lineHeight = this.lineHeight = p.size + 2 * p.outline + Math.round(p.size / 4)\r\n    const maxWidth = this.maxWidth = p.width / 4\r\n\r\n    // Prepare scratch canvas\r\n    const canvas = this.canvas = document.createElement('canvas')\r\n    canvas.width = maxWidth\r\n    canvas.height = lineHeight\r\n\r\n    const ctx = this.context = this.canvas.getContext('2d')!\r\n    ctx.font = `${p.style} ${p.variant} ${p.weight} ${p.size}px ${p.font}`\r\n    ctx.fillStyle = 'black'\r\n    ctx.textAlign = 'left'\r\n    ctx.textBaseline = 'bottom'\r\n    ctx.lineJoin = 'round'\r\n\r\n    // temporary arrays for the distance transform\r\n    this.gridOuter = new Float64Array(lineHeight * maxWidth)\r\n    this.gridInner = new Float64Array(lineHeight * maxWidth)\r\n    this.f = new Float64Array(Math.max(lineHeight, maxWidth))\r\n    this.d = new Float64Array(Math.max(lineHeight, maxWidth))\r\n    this.z = new Float64Array(Math.max(lineHeight, maxWidth) + 1)\r\n    this.v = new Int16Array(Math.max(lineHeight, maxWidth))\r\n\r\n    //\r\n    this.data = new Uint8Array(p.width * p.height * 4)\r\n    this.canvas2 = document.createElement('canvas')\r\n    this.canvas2.width = p.width\r\n    this.canvas2.height = p.height\r\n    this.context2 = this.canvas2.getContext('2d')!\r\n\r\n    // Replacement Character\r\n    this.placeholder = this.map(String.fromCharCode(0xFFFD))\r\n\r\n    // Basic Latin (subset)\r\n    for (let i = 0x0020; i <= 0x007E; ++i) {\r\n      this.map(String.fromCharCode(i))\r\n    }\r\n\r\n    // TODO: to slow to always prepare them\r\n    // // Latin-1 Supplement (subset)\r\n    // for (let i = 0x00A1; i <= 0x00FF; ++i) {\r\n    //   this.map(String.fromCharCode(i))\r\n    // }\r\n\r\n    // Degree sign\r\n    this.map(String.fromCharCode(0x00B0))\r\n\r\n    // // Greek and Coptic (subset)\r\n    // for (let i = 0x0391; i <= 0x03C9; ++i) {\r\n    //   this.map(String.fromCharCode(i))\r\n    // }\r\n\r\n    // // Cyrillic (subset)\r\n    // for (let i = 0x0400; i <= 0x044F; ++i) {\r\n    //   this.map(String.fromCharCode(i))\r\n    // }\r\n\r\n    // Angstrom Sign\r\n    this.map(String.fromCharCode(0x212B))\r\n\r\n    this.texture = new CanvasTexture(this.canvas2)\r\n    this.texture.flipY = false\r\n    this.texture.needsUpdate = true\r\n  }\r\n\r\n  map (text: string) {\r\n    const p = this.parameters\r\n\r\n    if (this.mapped[ text ] === undefined) {\r\n      this.draw(text)\r\n\r\n      if (this.currentX + this.scratchW > p.width) {\r\n        this.currentX = 0\r\n        this.currentY += this.scratchH\r\n      }\r\n      if (this.currentY + this.scratchH > p.height) {\r\n        console.warn('canvas to small')\r\n      }\r\n\r\n      this.mapped[ text ] = {\r\n        x: this.currentX,\r\n        y: this.currentY,\r\n        w: this.scratchW,\r\n        h: this.scratchH\r\n      }\r\n\r\n      this.context2.drawImage(\r\n        this.canvas,\r\n        0, 0,\r\n        this.scratchW, this.scratchH,\r\n        this.currentX, this.currentY,\r\n        this.scratchW, this.scratchH\r\n      )\r\n\r\n      this.currentX += this.scratchW\r\n    }\r\n\r\n    return this.mapped[ text ]\r\n  }\r\n\r\n  get (text: string) {\r\n    return this.mapped[ text ] || this.placeholder\r\n  }\r\n\r\n  draw (text: string) {\r\n    const p = this.parameters\r\n\r\n    const h = this.lineHeight\r\n    const o = p.outline\r\n    const ctx = this.context\r\n    // const dst = this.scratch\r\n    const max = this.maxWidth\r\n    // const colors = this.colors\r\n\r\n    // Bottom aligned, take outline into account\r\n    const x = o\r\n    const y = h - p.outline\r\n\r\n    // Measure text\r\n    const m = ctx.measureText(text)\r\n    const w = Math.min(max, Math.ceil(m.width + 2 * x + 1))\r\n\r\n    const n = w * h\r\n\r\n    // Clear scratch area\r\n    ctx.clearRect(0, 0, w, h)\r\n\r\n    // Draw text\r\n    ctx.fillText(text, x, y)\r\n\r\n    const imageData = ctx.getImageData(0, 0, w, h)\r\n    const data = imageData.data\r\n\r\n    for (let i = 0; i < n; i++) {\r\n        const a = imageData.data[i * 4 + 3] / 255; // alpha value\r\n        this.gridOuter[i] = a === 1 ? 0 : a === 0 ? Number.MAX_SAFE_INTEGER : Math.pow(Math.max(0, 0.5 - a), 2);\r\n        this.gridInner[i] = a === 1 ? Number.MAX_SAFE_INTEGER : a === 0 ? 0 : Math.pow(Math.max(0, a - 0.5), 2);\r\n    }\r\n\r\n    edt(this.gridOuter, w, h, this.f, this.d, this.v, this.z);\r\n    edt(this.gridInner, w, h, this.f, this.d, this.v, this.z);\r\n\r\n    for (let i = 0; i < n; i++) {\r\n        const d = this.gridOuter[i] - this.gridInner[i];\r\n        data[i * 4 + 3] = Math.max(0, Math.min(255, Math.round(255 - 255 * (d / this.radius + this.cutoff))));\r\n    }\r\n\r\n    ctx.putImageData(imageData, 0, 0)\r\n    this.scratchW = w\r\n    this.scratchH = h\r\n  }\r\n}\r\n\r\n/**\r\n * Text buffer parameter object.\r\n * @typedef {Object} TextBufferParameters - text buffer parameters\r\n *\r\n * @property {Float} opacity - translucency: 1 is fully opaque, 0 is fully transparent\r\n * @property {Integer} clipNear - position of camera near/front clipping plane\r\n *                                in percent of scene bounding box\r\n * @property {String} labelType - type of the label, one of:\r\n *                                 \"atomname\", \"atomindex\", \"occupancy\", \"bfactor\",\r\n *                                 \"serial\", \"element\", \"atom\", \"resname\", \"resno\",\r\n *                                 \"res\", \"text\", \"qualified\". When set to \"text\", the\r\n *                                 `labelText` list is used.\r\n * @property {String[]} labelText - list of label strings, must set `labelType` to \"text\"\r\n *                                   to take effect\r\n * @property {String} fontFamily - font family, one of: \"sans-serif\", \"monospace\", \"serif\"\r\n * @property {String} fontStyle - font style, \"normal\" or \"italic\"\r\n * @property {String} fontWeight - font weight, \"normal\" or \"bold\"\r\n * @property {Float} xOffset - offset in x-direction\r\n * @property {Float} yOffset - offset in y-direction\r\n * @property {Float} zOffset - offset in z-direction (i.e. in camera direction)\r\n * @property {String} attachment - attachment of the label, one of:\r\n *                                 \"bottom-left\", \"bottom-center\", \"bottom-right\",\r\n *                                 \"middle-left\", \"middle-center\", \"middle-right\",\r\n *                                 \"top-left\", \"top-center\", \"top-right\"\r\n * @property {Boolean} showBorder - show border/outline\r\n * @property {Color} borderColor - color of the border/outline\r\n * @property {Float} borderWidth - width of the border/outline\r\n * @property {Boolean} showBackground - show background rectangle\r\n * @property {Color} backgroundColor - color of the background\r\n * @property {Float} backgroundMargin - width of the background\r\n * @property {Float} backgroundOpacity - opacity of the background\r\n * @property {Boolean} fixedSize - show text with a fixed pixel size\r\n */\r\n\r\nexport interface TextBufferData extends BufferData {\r\n  size: Float32Array\r\n  text: string[]\r\n}\r\n\r\ntype TextAttachments = 'bottom-left'|'bottom-center'|'bottom-right'|'middle-left'|'middle-center'|'middle-right'|'top-left'|'top-center'|'top-right'\r\n\r\nexport const TextBufferDefaultParameters = Object.assign({\r\n  fontFamily: 'sans-serif' as TextFonts,\r\n  fontStyle: 'normal' as TextStyles,\r\n  fontWeight: 'bold' as TextWeights,\r\n  fontSize: 36,\r\n  xOffset: 0.0,\r\n  yOffset: 0.0,\r\n  zOffset: 0.5,\r\n  attachment: 'bottom-left' as TextAttachments,\r\n  showBorder: false,\r\n  borderColor: 'lightgrey' as number|string,\r\n  borderWidth: 0.15,\r\n  showBackground: false,\r\n  backgroundColor: 'lightgrey' as number|string,\r\n  backgroundMargin: 0.5,\r\n  backgroundOpacity: 1.0,\r\n  forceTransparent: true,\r\n  fixedSize: false\r\n}, BufferDefaultParameters)\r\nexport type TextBufferParameters = BufferParameters & {\r\n  fontFamily: TextFonts,\r\n  fontStyle: TextStyles,\r\n  fontWeight: TextWeights,\r\n  fontSize: number,\r\n  xOffset: number,\r\n  yOffset: number,\r\n  zOffset: number,\r\n  attachment: TextAttachments,\r\n  showBorder: boolean,\r\n  borderColor: GenericColor,\r\n  borderWidth: number,\r\n  showBackground: boolean,\r\n  backgroundColor: GenericColor,\r\n  backgroundMargin: number,\r\n  backgroundOpacity: number,\r\n  forceTransparent: boolean,\r\n  fixedSize: boolean\r\n}\r\n\r\nconst TextBufferParameterTypes = Object.assign({\r\n  fontFamily: { uniform: true },\r\n  fontStyle: { uniform: true },\r\n  fontWeight: { uniform: true },\r\n  fontSize: { uniform: true },\r\n  xOffset: { uniform: true },\r\n  yOffset: { uniform: true },\r\n  zOffset: { uniform: true },\r\n  showBorder: { uniform: true },\r\n  borderColor: { uniform: true },\r\n  borderWidth: { uniform: true },\r\n  backgroundColor: { uniform: true },\r\n  backgroundOpacity: { uniform: true },\r\n  fixedSize: { updateShader: true }\r\n}, BufferParameterTypes)\r\n\r\nfunction getCharCount (data: TextBufferData, params: Partial<TextBufferParameters>) {\r\n  const n = data.position!.length / 3\r\n  let charCount = 0\r\n  for (let i = 0; i < n; ++i) {\r\n    charCount += data.text[ i ].length\r\n  }\r\n  if (params.showBackground) charCount += n\r\n\r\n  return charCount\r\n}\r\n\r\n/**\r\n * Text buffer. Renders screen-aligned text strings.\r\n *\r\n * @example\r\n * var textBuffer = new TextBuffer({\r\n *   position: new Float32Array([ 0, 0, 0 ]),\r\n *   color: new Float32Array([ 1, 0, 0 ]),\r\n *   size: new Float32Array([ 2 ]),\r\n *   text: [ \"Hello\" ]\r\n * });\r\n */\r\nclass TextBuffer extends MappedQuadBuffer {\r\n  parameterTypes = TextBufferParameterTypes\r\n  get defaultParameters() { return TextBufferDefaultParameters }\r\n  parameters: TextBufferParameters\r\n\r\n  alwaysTransparent = true\r\n  hasWireframe = false\r\n  isText = true\r\n  vertexShader = 'SDFFont.vert'\r\n  fragmentShader = 'SDFFont.frag'\r\n\r\n  text: string[]\r\n  positionCount: number\r\n  texture: CanvasTexture\r\n  textAtlas: TextAtlas\r\n\r\n  /**\r\n   * @param  {Object} data - attribute object\r\n   * @param  {Float32Array} data.position - positions\r\n   * @param  {Float32Array} data.color - colors\r\n   * @param  {Float32Array} data.size - sizes\r\n   * @param  {String[]} data.text - text strings\r\n   * @param  {TextBufferParameters} params - parameters object\r\n   */\r\n  constructor (data: TextBufferData, params: Partial<TextBufferParameters> = {}) {\r\n    super({\r\n      position: new Float32Array(getCharCount(data, params) * 3),\r\n      color: new Float32Array(getCharCount(data, params) * 3),\r\n      picking: new IgnorePicker()\r\n    }, params)\r\n\r\n    this.text = data.text\r\n    this.positionCount = data.position!.length / 3\r\n\r\n    this.addUniforms({\r\n      'fontTexture': { value: null },\r\n      'xOffset': { value: this.parameters.xOffset },\r\n      'yOffset': { value: this.parameters.yOffset },\r\n      'zOffset': { value: this.parameters.zOffset },\r\n      'ortho': { value: false },\r\n      'showBorder': { value: this.parameters.showBorder },\r\n      'borderColor': { value: new Color(this.parameters.borderColor as number) },\r\n      'borderWidth': { value: this.parameters.borderWidth },\r\n      'backgroundColor': { value: new Color(this.parameters.backgroundColor as number) },\r\n      'backgroundOpacity': { value: this.parameters.backgroundOpacity },\r\n      'canvasHeight': { value: 1.0 },\r\n      'pixelRatio': { value: 1.0 }\r\n    })\r\n\r\n    this.addAttributes({\r\n      'inputTexCoord': { type: 'v2', value: null },\r\n      'inputSize': { type: 'f', value: null }\r\n    })\r\n\r\n    this.setAttributes(data)\r\n\r\n    this.makeTexture()\r\n    this.makeMapping()\r\n  }\r\n\r\n  makeMaterial () {\r\n    super.makeMaterial()\r\n\r\n    const tex = this.texture\r\n\r\n    const m = this.material\r\n    m.transparent = true\r\n    m.extensions.derivatives = true\r\n    m.lights = false\r\n    m.uniforms.fontTexture.value = tex\r\n    m.needsUpdate = true\r\n\r\n    const wm = this.wireframeMaterial\r\n    wm.transparent = true\r\n    wm.extensions.derivatives = true\r\n    wm.lights = false\r\n    wm.uniforms.fontTexture.value = tex\r\n    wm.needsUpdate = true\r\n\r\n    const pm = this.pickingMaterial\r\n    pm.extensions.derivatives = true\r\n    pm.lights = false\r\n    pm.uniforms.fontTexture.value = tex\r\n    pm.needsUpdate = true\r\n  }\r\n\r\n  setAttributes (data: Partial<TextBufferData> = {}) {\r\n    let position, size, color\r\n    let aPosition, inputSize, aColor\r\n\r\n    const text = this.text\r\n    const attributes = this.geometry.attributes as any  // TODO\r\n\r\n    if (data.position) {\r\n      position = data.position\r\n      aPosition = attributes.position.array\r\n      attributes.position.needsUpdate = true\r\n    }\r\n\r\n    if (data.size) {\r\n      size = data.size\r\n      inputSize = attributes.inputSize.array\r\n      attributes.inputSize.needsUpdate = true\r\n    }\r\n\r\n    if (data.color) {\r\n      color = data.color\r\n      aColor = attributes.color.array\r\n      attributes.color.needsUpdate = true\r\n    }\r\n\r\n    const n = this.positionCount\r\n\r\n    let j, o\r\n    let iCharAll = 0\r\n    let txt, iChar, nChar\r\n\r\n    for (let v = 0; v < n; ++v) {\r\n      o = 3 * v\r\n      txt = text[ v ]\r\n      nChar = txt.length\r\n      if (this.parameters.showBackground) nChar += 1\r\n\r\n      for (iChar = 0; iChar < nChar; ++iChar, ++iCharAll) {\r\n        for (let m = 0; m < 4; m++) {\r\n          j = iCharAll * 4 * 3 + (3 * m)\r\n\r\n          if (position) {\r\n            aPosition[ j ] = position[ o ]\r\n            aPosition[ j + 1 ] = position[ o + 1 ]\r\n            aPosition[ j + 2 ] = position[ o + 2 ]\r\n          }\r\n\r\n          if (size) {\r\n            inputSize[ (iCharAll * 4) + m ] = size[ v ]\r\n          }\r\n\r\n          if (color) {\r\n            aColor[ j ] = color[ o ]\r\n            aColor[ j + 1 ] = color[ o + 1 ]\r\n            aColor[ j + 2 ] = color[ o + 2 ]\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  makeTexture () {\r\n    this.textAtlas = getTextAtlas({\r\n      font: this.parameters.fontFamily,\r\n      style: this.parameters.fontStyle,\r\n      weight: this.parameters.fontWeight,\r\n      size: this.parameters.fontSize\r\n    })\r\n\r\n    this.texture = this.textAtlas.texture\r\n  }\r\n\r\n  makeMapping () {\r\n    const ta = this.textAtlas\r\n    const text = this.text\r\n    const attachment = this.parameters.attachment\r\n    const margin = (ta.lineHeight * this.parameters.backgroundMargin * 0.1) - 10\r\n\r\n    const attribs = this.geometry.attributes as any  // TODO\r\n    const inputTexCoord = attribs.inputTexCoord.array\r\n    const inputMapping = attribs.mapping.array\r\n\r\n    const n = this.positionCount\r\n    let iCharAll = 0\r\n    let c, i, txt, xadvance, iChar, nChar, xShift, yShift\r\n\r\n    for (let v = 0; v < n; ++v) {\r\n      txt = text[ v ]\r\n      xadvance = 0\r\n      nChar = txt.length\r\n\r\n      // calculate width\r\n      for (iChar = 0; iChar < nChar; ++iChar) {\r\n        c = ta.get(txt[ iChar ])\r\n        xadvance += c.w - 2 * ta.parameters.outline\r\n      }\r\n\r\n      // attachment\r\n      if (attachment.startsWith('top')) {\r\n        yShift = ta.lineHeight / 1.25\r\n      } else if (attachment.startsWith('middle')) {\r\n        yShift = ta.lineHeight / 2.5\r\n      } else {\r\n        yShift = 0  // \"bottom\"\r\n      }\r\n      if (attachment.endsWith('right')) {\r\n        xShift = xadvance\r\n      } else if (attachment.endsWith('center')) {\r\n        xShift = xadvance / 2\r\n      } else {\r\n        xShift = 0  // \"left\"\r\n      }\r\n      xShift += ta.parameters.outline\r\n      yShift += ta.parameters.outline\r\n\r\n      // background\r\n      if (this.parameters.showBackground) {\r\n        i = iCharAll * 2 * 4\r\n        inputMapping[ i + 0 ] = -ta.lineHeight / 6 - xShift - margin  // top left\r\n        inputMapping[ i + 1 ] = ta.lineHeight - yShift + margin\r\n        inputMapping[ i + 2 ] = -ta.lineHeight / 6 - xShift - margin  // bottom left\r\n        inputMapping[ i + 3 ] = 0 - yShift - margin\r\n        inputMapping[ i + 4 ] = xadvance + ta.lineHeight / 6 - xShift + 2 * ta.parameters.outline + margin  // top right\r\n        inputMapping[ i + 5 ] = ta.lineHeight - yShift + margin\r\n        inputMapping[ i + 6 ] = xadvance + ta.lineHeight / 6 - xShift + 2 * ta.parameters.outline + margin  // bottom right\r\n        inputMapping[ i + 7 ] = 0 - yShift - margin\r\n        inputTexCoord[ i + 0 ] = 10\r\n        inputTexCoord[ i + 2 ] = 10\r\n        inputTexCoord[ i + 4 ] = 10\r\n        inputTexCoord[ i + 6 ] = 10\r\n        iCharAll += 1\r\n      }\r\n\r\n      xadvance = 0\r\n\r\n      for (iChar = 0; iChar < nChar; ++iChar, ++iCharAll) {\r\n        c = ta.get(txt[ iChar ])\r\n        i = iCharAll * 2 * 4\r\n\r\n        inputMapping[ i + 0 ] = xadvance - xShift  // top left\r\n        inputMapping[ i + 1 ] = c.h - yShift\r\n        inputMapping[ i + 2 ] = xadvance - xShift  // bottom left\r\n        inputMapping[ i + 3 ] = 0 - yShift\r\n        inputMapping[ i + 4 ] = xadvance + c.w - xShift  // top right\r\n        inputMapping[ i + 5 ] = c.h - yShift\r\n        inputMapping[ i + 6 ] = xadvance + c.w - xShift  // bottom right\r\n        inputMapping[ i + 7 ] = 0 - yShift\r\n\r\n        const texWidth = ta.parameters.width\r\n        const texHeight = ta.parameters.height\r\n\r\n        const texCoords = [\r\n          c.x / texWidth, c.y / texHeight,             // top left\r\n          c.x / texWidth, (c.y + c.h) / texHeight,       // bottom left\r\n          (c.x + c.w) / texWidth, c.y / texHeight,       // top right\r\n          (c.x + c.w) / texWidth, (c.y + c.h) / texHeight  // bottom right\r\n        ]\r\n        inputTexCoord.set(texCoords, i)\r\n\r\n        xadvance += c.w - 2 * ta.parameters.outline\r\n      }\r\n    }\r\n\r\n    attribs.inputTexCoord.needsUpdate = true\r\n    attribs.mapping.needsUpdate = true\r\n  }\r\n\r\n  getDefines (type: BufferTypes) {\r\n    const defines = super.getDefines(type)\r\n\r\n    if (this.parameters.fixedSize) {\r\n      defines.FIXED_SIZE = 1\r\n    }\r\n\r\n    return defines\r\n  }\r\n\r\n  setUniforms (data: any) {  // TODO\r\n    if (data && (\r\n      data.fontFamily !== undefined ||\r\n      data.fontStyle !== undefined ||\r\n      data.fontWeight !== undefined ||\r\n      data.fontSize !== undefined\r\n    )) {\r\n      this.makeTexture()\r\n      this.makeMapping()\r\n      this.texture.needsUpdate = true\r\n      data.fontTexture = this.texture\r\n    }\r\n\r\n    super.setUniforms(data)\r\n  }\r\n}\r\n\r\nBufferRegistry.add('text', TextBuffer)\r\n\r\nexport default TextBuffer\r\n","/**\r\n * @file Wide Line Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\n// @ts-ignore: unused import Vector3 required for declaration only\r\nimport { Vector2, Vector3, Matrix4 } from 'three'\r\n\r\nimport '../shader/WideLine.vert'\r\nimport '../shader/WideLine.frag'\r\n\r\nimport { BufferRegistry } from '../globals'\r\nimport MappedQuadBuffer from './mappedquad-buffer'\r\nimport { BufferDefaultParameters, BufferParameterTypes, BufferData, BufferParameters } from './buffer'\r\n\r\nexport interface WideLineBufferData extends BufferData {\r\n  position1: Float32Array\r\n  position2: Float32Array\r\n  color2: Float32Array\r\n}\r\n\r\nexport const WideLineBufferDefaultParameters = Object.assign({\r\n  linewidth: 2\r\n}, BufferDefaultParameters)\r\nexport type WideLineBufferParameters = BufferParameters & { linewidth: number }\r\n\r\nconst WideLineBufferParameterTypes = Object.assign({\r\n  linewidth: { uniform: true }\r\n}, BufferParameterTypes)\r\n\r\n/**\r\n * Wide Line buffer. Draws lines with a fixed width in pixels.\r\n *\r\n * @example\r\n * var lineBuffer = new WideLineBuffer({\r\n *   position1: new Float32Array([ 0, 0, 0 ]),\r\n *   position2: new Float32Array([ 1, 1, 1 ]),\r\n *   color: new Float32Array([ 1, 0, 0 ]),\r\n *   color2: new Float32Array([ 0, 1, 0 ])\r\n * });\r\n */\r\nclass WideLineBuffer extends MappedQuadBuffer {\r\n  parameterTypes = WideLineBufferParameterTypes\r\n  get defaultParameters() { return WideLineBufferDefaultParameters }\r\n  parameters: WideLineBufferParameters\r\n\r\n  vertexShader = 'WideLine.vert'\r\n  fragmentShader ='WideLine.frag'\r\n\r\n  constructor (data: Partial<WideLineBufferData>, params: Partial<WideLineBufferParameters> = {}) {\r\n    super(data, params)\r\n\r\n    if (!data.color2 && data.color) data.color2 = data.color\r\n\r\n    this.addUniforms({\r\n      'linewidth': { value: this.parameters.linewidth },\r\n      'resolution': { value: new Vector2() },\r\n      'projectionMatrixInverse': { value: new Matrix4() }\r\n    })\r\n\r\n    this.addAttributes({\r\n      'position1': { type: 'v3', value: null },\r\n      'position2': { type: 'v3', value: null },\r\n      'color2': { type: 'c', value: null }\r\n    })\r\n\r\n    this.setAttributes(data)\r\n    this.makeMapping()\r\n  }\r\n\r\n  setParameters (params: Partial<WideLineBufferParameters>) {\r\n    super.setParameters(params)\r\n  }\r\n}\r\n\r\nBufferRegistry.add('wideline', WideLineBuffer)\r\n\r\nexport default WideLineBuffer\r\n","/**\r\n * @file Angle Representation\r\n * @author Fred Ludlow <fred.ludlow@gmail.com>\r\n * @private\r\n */\r\nimport { Color } from 'three'\r\n\r\nimport { RepresentationRegistry } from '../globals'\r\nimport MeasurementRepresentation, { parseNestedAtoms, calcArcPoint, MeasurementRepresentationParameters, LabelDataField } from './measurement-representation'\r\nimport { defaults } from '../utils'\r\n\r\nimport MeshBuffer from '../buffer/mesh-buffer'\r\nimport TextBuffer, { TextBufferData, TextBufferParameters } from '../buffer/text-buffer'\r\nimport WideLineBuffer, { WideLineBufferData } from '../buffer/wideline-buffer'\r\n\r\nimport { v3add, v3cross, v3dot, v3fromArray, v3length, v3new,\r\n  v3normalize, v3sub, v3toArray } from '../math/vector-utils'\r\nimport { copyArray, uniformArray, uniformArray3 } from '../math/array-utils'\r\nimport { RAD2DEG } from '../math/math-constants'\r\nimport { getFixedLengthWrappedDashData } from '../geometry/dash'\r\nimport { Structure } from '../ngl';\r\nimport Viewer from '../viewer/viewer';\r\nimport StructureView from '../structure/structure-view';\r\nimport { BufferData } from '../buffer/buffer';\r\nimport { StructureRepresentationData, StructureRepresentationParameters } from './structure-representation';\r\n\r\n/**\r\n * @typedef {Object} AngleRepresentationParameters - angle representation parameters\r\n * @mixes RepresentationParameters\r\n * @mixes StructureRepresentationParameters\r\n * @mixes MeasurementRepresentationParameters\r\n *\r\n * @property {String} atomTriple - list of triplets of selection strings\r\n *                                 or atom indices\r\n * @property {Boolean} vectorVisible - Indicate the 3 points for each angle by drawing lines 1-2-3\r\n * @property {Boolean} arcVisible - Show the arc outline for each angle\r\n * @property {Number}  lineOpacity - opacity for the line part of the representation\r\n * @property {Number} linewidth - width for line part of representation\r\n * @property {Boolean} sectorVisible - Show the filled arc for each angle\r\n */\r\n\r\nexport interface AngleRepresentationParameters extends MeasurementRepresentationParameters {\r\n  atomTriple: (number|string)[][]\r\n  vectorVisible: boolean\r\n  arcVisible: boolean\r\n  lineOpacity: number\r\n  lineWidth: number\r\n  sectorVisible: boolean\r\n}\r\n\r\n/**\r\n * Angle representation object\r\n *\r\n * Reperesentation consists of four parts, visibility can be set for each\r\n * label - the text label with the angle size\r\n * vectors - lines joining the three points\r\n * sector - triangles representing the angle\r\n * arc - line bordering the sector\r\n *\r\n * @param {Structure} structure - the structure to measure angles in\r\n * @param {Viewer} viewer - a viewer object\r\n * @param {AngleRepresentationParameters} params - angle representation parameters\r\n */\r\nclass AngleRepresentation extends MeasurementRepresentation {\r\n  protected atomTriple: (number|string)[][]\r\n  protected vectorVisible: boolean\r\n  protected arcVisible: boolean\r\n  protected lineOpacity: number\r\n  protected lineWidth: number\r\n  protected sectorVisible: boolean\r\n  protected vectorBuffer: WideLineBuffer\r\n  arcLength: number\r\n  sectorLength: number\r\n  arcBuffer: WideLineBuffer\r\n  sectorBuffer: MeshBuffer\r\n\r\n  constructor (structure: Structure, viewer: Viewer, params: Partial<AngleRepresentationParameters>) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'angle'\r\n\r\n    this.parameters = Object.assign({\r\n      atomTriple: {\r\n        type: 'hidden', rebuild: true\r\n      },\r\n      vectorVisible: {\r\n        type: 'boolean', default: true\r\n      },\r\n      arcVisible: {\r\n        type: 'boolean', default: true\r\n      },\r\n      sectorVisible: {\r\n        type: 'boolean', default: true\r\n      }\r\n    }, this.parameters)\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params: Partial<AngleRepresentationParameters>) {\r\n    const p = params || {}\r\n    p.side = defaults(p.side, 'double')\r\n    p.opacity = defaults(p.opacity, 0.5)\r\n\r\n    this.atomTriple = defaults(p.atomTriple, [])\r\n    this.arcVisible = defaults(p.arcVisible, true)\r\n    this.sectorVisible = defaults(p.sectorVisible, true)\r\n    this.vectorVisible = defaults(p.vectorVisible, true)\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  createData (sview: StructureView) {\r\n    if (!sview.atomCount || !this.atomTriple.length) return\r\n\r\n    const atomPosition = atomTriplePositions(sview, this.atomTriple)\r\n    const angleData = getAngleData(atomPosition)\r\n    const n = this.n = angleData.labelPosition.length / 3\r\n\r\n    const labelColor = new Color(this.labelColor)\r\n\r\n    // Create buffers\r\n    this.textBuffer = new TextBuffer({\r\n      position: angleData.labelPosition,\r\n      size: uniformArray(n, this.labelSize),\r\n      color: uniformArray3(n, labelColor.r, labelColor.g, labelColor.b),\r\n      text: angleData.labelText\r\n    } as TextBufferData, this.getLabelBufferParams() as TextBufferParameters)\r\n\r\n    const c = new Color(this.colorValue)\r\n\r\n    this.vectorBuffer = new WideLineBuffer(\r\n      getFixedLengthWrappedDashData({\r\n        position1: angleData.vectorPosition1,\r\n        position2: angleData.vectorPosition2,\r\n        color: uniformArray3(2 * n, c.r, c.g, c.b),\r\n        color2: uniformArray3(2 * n, c.r, c.g, c.b)\r\n      } as WideLineBufferData),\r\n      this.getBufferParams({\r\n        linewidth: this.linewidth,\r\n        visible: this.vectorVisible,\r\n        opacity: this.lineOpacity\r\n      })\r\n    )\r\n\r\n    this.arcLength = angleData.arcPosition1.length / 3\r\n\r\n    this.arcBuffer = new WideLineBuffer(\r\n      getFixedLengthWrappedDashData({\r\n        position1: angleData.arcPosition1,\r\n        position2: angleData.arcPosition2,\r\n        color: uniformArray3(this.arcLength, c.r, c.g, c.b),\r\n        color2: uniformArray3(this.arcLength, c.r, c.g, c.b)\r\n      } as WideLineBufferData), this.getBufferParams({\r\n        linewidth: this.linewidth,\r\n        visible: this.arcVisible,\r\n        opacity: this.lineOpacity\r\n      }))\r\n\r\n    this.sectorLength = angleData.sectorPosition.length / 3\r\n\r\n    this.sectorBuffer = new MeshBuffer({\r\n      position: angleData.sectorPosition,\r\n      color: uniformArray3(this.sectorLength, c.r, c.g, c.b)\r\n    } as BufferData, this.getBufferParams({\r\n      visible: this.sectorVisible\r\n    }))\r\n\r\n    return {\r\n      bufferList: [\r\n        this.textBuffer,\r\n        this.vectorBuffer,\r\n        this.arcBuffer,\r\n        this.sectorBuffer\r\n      ]\r\n    }\r\n  }\r\n\r\n  updateData (what: LabelDataField & {color?: boolean}, data: StructureRepresentationData) {\r\n    super.updateData(what, data)\r\n    const vectorData = {}\r\n    const arcData = {}\r\n    const sectorData = {}\r\n\r\n    if (what.color) {\r\n      const c = new Color(this.colorValue)\r\n      Object.assign(vectorData, {\r\n        color: uniformArray3(this.n * 2, c.r, c.g, c.b),\r\n        color2: uniformArray3(this.n * 2, c.r, c.g, c.b)\r\n      })\r\n      Object.assign(arcData, {\r\n        color: uniformArray3(this.arcLength, c.r, c.g, c.b),\r\n        color2: uniformArray3(this.arcLength, c.r, c.g, c.b)\r\n      })\r\n      Object.assign(sectorData, {\r\n        color: uniformArray3(this.sectorLength, c.r, c.g, c.b)\r\n      })\r\n    }\r\n\r\n    // if (what.sectorOpacity) {\r\n    //   this.sectorBuffer.opacity = what.sectorOpacity\r\n    // }\r\n\r\n    this.vectorBuffer.setAttributes(vectorData)\r\n    this.arcBuffer.setAttributes(arcData)\r\n    this.sectorBuffer.setAttributes(sectorData)\r\n  }\r\n\r\n  setParameters (params: Partial<AngleRepresentationParameters>) {\r\n    var rebuild = false\r\n    var what = {}\r\n\r\n    super.setParameters(params, what, rebuild)\r\n\r\n    if (params && (\r\n      params.vectorVisible !== undefined ||\r\n      params.arcVisible !== undefined ||\r\n      params.sectorVisible !== undefined)) {\r\n      this.setVisibility(this.visible)\r\n    }\r\n\r\n    if (params && params.lineOpacity) {\r\n      this.vectorBuffer.setParameters({ opacity: params.lineOpacity })\r\n      this.arcBuffer.setParameters({ opacity: params.lineOpacity })\r\n    }\r\n\r\n    if (params && params.opacity !== undefined) {\r\n      this.vectorBuffer.setParameters({ opacity: this.lineOpacity })\r\n      this.arcBuffer.setParameters({ opacity: this.lineOpacity })\r\n    }\r\n\r\n    if (params && params.linewidth) {\r\n      this.vectorBuffer.setParameters({ linewidth: params.linewidth })\r\n      this.arcBuffer.setParameters({ linewidth: params.linewidth })\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  setVisibility (value: boolean, noRenderRequest?: boolean) {\r\n    super.setVisibility(value, true)\r\n\r\n    if (this.vectorBuffer) {\r\n      this.vectorBuffer.setVisibility(this.vectorVisible && this.visible)\r\n    }\r\n\r\n    if (this.arcBuffer) {\r\n      this.arcBuffer.setVisibility(this.arcVisible && this.visible)\r\n    }\r\n\r\n    if (this.sectorBuffer) {\r\n      this.sectorBuffer.setVisibility(this.sectorVisible && this.visible)\r\n    }\r\n\r\n    if (!noRenderRequest) this.viewer.requestRender()\r\n\r\n    return this\r\n  }\r\n}\r\n\r\n/**\r\n * Ensure mid point does not coincide with first or second\r\n * @param  {Float32Array} position 9*nAngle array of coordinates\r\n * @return {Float32Array}          Filtered position array, may be shorter\r\n */\r\nfunction validatePositions (position: Float32Array) {\r\n  const include = []\r\n  const n = position.length / 9\r\n  for (let i = 0; i < n; i++) {\r\n    // Check that first point not same as second and that second not same as third\r\n    let okay = true\r\n    for (let j = i; j < i + 3; j += 3) {\r\n      if (position[j] === position[j + 3] &&\r\n        position[j + 1] === position[j + 4] &&\r\n        position[j + 2] === position[j + 5]) {\r\n        okay = false\r\n      }\r\n    }\r\n    if (okay) include.push(i)\r\n  }\r\n  const outPosition = new Float32Array(include.length * 9)\r\n  let outIdx = 0\r\n  include.forEach(function (i) {\r\n    copyArray(position, outPosition, i * 9, outIdx * 9, 9)\r\n    outIdx++\r\n  })\r\n  return outPosition\r\n}\r\n\r\nfunction atomTriplePositions (sview: StructureView, atomTriple: (number|string)[][]) {\r\n  return validatePositions(parseNestedAtoms(sview, atomTriple))\r\n}\r\n\r\n/**\r\n * Converts triple positions into data required to build various buffers.\r\n */\r\nfunction getAngleData (position: Float32Array, params: Partial<StructureRepresentationParameters> = {}) {\r\n  const angleStep = defaults(params.angleStep, Math.PI / 90)\r\n  const n = position.length / 9\r\n  const angles = new Float32Array(n)\r\n  const labelPosition = new Float32Array(n * 3)\r\n  const labelText = new Array(n)\r\n\r\n  const vectorPosition1 = new Float32Array(n * 6) // Two lines per angle\r\n  const vectorPosition2 = new Float32Array(n * 6)\r\n\r\n  const arcPositionTmp1 = new Array(n) // Start points for arc lines\r\n  const arcPositionTmp2 = new Array(n) // End points for arc lines\r\n  const sectorPositionTmp = new Array(n) // Triangle points\r\n\r\n  let totalSegments = 0\r\n\r\n  // Re-used vectors etc\r\n  const p1 = v3new() // Positions of points for each angel\r\n  const p2 = v3new()\r\n  const p3 = v3new()\r\n  const v21 = v3new() // Vectors\r\n  const v23 = v3new()\r\n  const cross = v3new() // Cross product v21xv23\r\n  const cross2 = v3new() // In-plane cross product v21 x (v21 x v23)\r\n  const labelTmp = v3new()\r\n  const arcPoint = v3new()\r\n\r\n  for (var i = 0; i < n; i++) {\r\n    let p = 9 * i\r\n    v3fromArray(p1, position, p)\r\n    v3fromArray(p2, position, p + 3)\r\n    v3fromArray(p3, position, p + 6)\r\n\r\n    let v = 6 * i\r\n    v3toArray(p1, vectorPosition1, v)\r\n    v3toArray(p2, vectorPosition2, v)\r\n    v3toArray(p2, vectorPosition1, v + 3)\r\n    v3toArray(p3, vectorPosition2, v + 3)\r\n\r\n    v3sub(v21, p1, p2)\r\n    v3sub(v23, p3, p2)\r\n\r\n    v3normalize(v21, v21) // validatePositions ensures valid\r\n    v3normalize(v23, v23)\r\n\r\n    v3cross(cross, v21, v23)\r\n    const crossLength = v3length(cross)\r\n    const dot = v3dot(v21, v23)\r\n\r\n    const angle = angles[i] = Math.atan2(crossLength, dot)\r\n    labelText[i] = (RAD2DEG * angle).toFixed(1) + String.fromCharCode(0x00B0)\r\n\r\n    if (v3length(cross) === 0.0) {\r\n      // Angle exactly 0/180, pick an arbitrary direction\r\n      cross[ 0 ] = 1.0\r\n      cross[ 1 ] = 0.0\r\n      cross[ 2 ] = 0.0\r\n    }\r\n    v3cross(cross2, cross, v21)\r\n    v3normalize(cross2, cross2)\r\n\r\n    calcArcPoint(labelTmp, p2, v21, cross2, angle / 2.0)\r\n    // TODO: Scale label position?\r\n    v3toArray(labelTmp, labelPosition, 3 * i)\r\n\r\n    // Build the arc and sector\r\n\r\n    const nSegments = Math.ceil(angle / angleStep)\r\n    const sectorVertices = new Float32Array(nSegments * 9)\r\n    sectorPositionTmp[ i ] = sectorVertices\r\n    const arcVertices1 = new Float32Array(nSegments * 3)\r\n    const arcVertices2 = new Float32Array(nSegments * 3)\r\n    arcPositionTmp1[ i ] = arcVertices1\r\n    arcPositionTmp2[ i ] = arcVertices2\r\n\r\n    v3add(arcPoint, p2, v21) // Our initial arc point\r\n\r\n    const appendArcSection = function (a: number, j: number) {\r\n      const si = j * 9\r\n      const ai = j * 3\r\n      v3toArray(p2, sectorVertices, si)\r\n      v3toArray(arcPoint, sectorVertices, si + 3)\r\n      v3toArray(arcPoint, arcVertices1, ai)\r\n\r\n      calcArcPoint(arcPoint, p2, v21, cross2, a)\r\n\r\n      v3toArray(arcPoint, sectorVertices, si + 6)\r\n      v3toArray(arcPoint, arcVertices2, ai)\r\n    }\r\n\r\n    let j = 0\r\n    for (let a = angleStep; a < angle; a += angleStep) {\r\n      appendArcSection(a, j)\r\n      j++\r\n    }\r\n    appendArcSection(angle, j)\r\n    totalSegments += nSegments\r\n  }\r\n\r\n  // Flatten nested arrays of arc/segment points\r\n  const arcSize = totalSegments * 3\r\n  const sectorSize = totalSegments * 9\r\n  const arcPosition1 = new Float32Array(arcSize)\r\n  const arcPosition2 = new Float32Array(arcSize)\r\n  const sectorPosition = new Float32Array(sectorSize)\r\n\r\n  let sectorOffset = 0\r\n  let arcOffset = 0\r\n  for (let i = 0; i < n; i++) {\r\n    const ap1 = arcPositionTmp1[ i ]\r\n    const ap2 = arcPositionTmp2[ i ]\r\n    copyArray(ap1, arcPosition1, 0, arcOffset, ap1.length)\r\n    copyArray(ap2, arcPosition2, 0, arcOffset, ap2.length)\r\n    arcOffset += ap1.length // === ap2.length\r\n\r\n    const sp = sectorPositionTmp[ i ]\r\n    copyArray(sp, sectorPosition, 0, sectorOffset, sp.length)\r\n    sectorOffset += sp.length\r\n  }\r\n\r\n  return {\r\n    labelPosition,\r\n    labelText,\r\n    vectorPosition1,\r\n    vectorPosition2,\r\n    arcPosition1,\r\n    arcPosition2,\r\n    sectorPosition\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('angle', AngleRepresentation)\r\n\r\nexport default AngleRepresentation\r\n","/**\r\n * @file Cylinder Geometry Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Matrix4, Vector3, CylinderBufferGeometry } from 'three'\r\n\r\nimport { defaults } from '../utils'\r\nimport { calculateCenterArray, serialBlockArray } from '../math/array-utils'\r\nimport GeometryBuffer from './geometry-buffer'\r\nimport { CylinderBufferData } from './cylinder-buffer'\r\nimport { BufferDefaultParameters, BufferParameters } from './buffer'\r\n\r\nconst scale = new Vector3()\r\nconst eye = new Vector3()\r\nconst target = new Vector3()\r\nconst up = new Vector3(0, 1, 0)\r\n\r\nexport const CylinderGeometryBufferDefaultParameters = Object.assign({\r\n  radialSegments: 1,\r\n  openEnded: true\r\n}, BufferDefaultParameters)\r\nexport type CylinderGeometryBufferParameters = BufferParameters & {radialSegments: number, openEnded: boolean}\r\n\r\nfunction getData (data: CylinderBufferData, params: Partial<CylinderGeometryBufferParameters> = {}) {\r\n  const geo = getGeo(params)\r\n\r\n  const n = data.position1.length\r\n\r\n  const geoLength = (geo.attributes as any).position.array.length / 3\r\n  const count = n / 3\r\n  const primitiveId = new Float32Array(count * 2 * geoLength)\r\n  serialBlockArray(count, geoLength, 0, primitiveId)\r\n  serialBlockArray(count, geoLength, count * geoLength, primitiveId)\r\n\r\n  const position = new Float32Array(n * 2)\r\n  const color = new Float32Array(n * 2)\r\n\r\n  return {\r\n    position, color, primitiveId, picking: data.picking\r\n  }\r\n}\r\n\r\nfunction getGeo (params: Partial<CylinderGeometryBufferParameters> = {}) {\r\n  const radialSegments = defaults(params.radialSegments, 10)\r\n  const openEnded = defaults(params.openEnded, true)\r\n  const matrix = new Matrix4().makeRotationX(Math.PI / 2)\r\n\r\n  const geo = new CylinderBufferGeometry(\r\n    1,  // radiusTop,\r\n    1,  // radiusBottom,\r\n    1,  // height,\r\n    radialSegments,  // radialSegments,\r\n    1,  // heightSegments,\r\n    openEnded  // openEnded\r\n  )\r\n  geo.applyMatrix4(matrix)\r\n\r\n  return geo\r\n}\r\n\r\n/**\r\n * Cylinder geometry buffer.\r\n *\r\n * @example\r\n * var cylinderGeometryBuffer = new CylinderGeometryBuffer({\r\n *   position1: new Float32Array([ 0, 0, 0 ]),\r\n *   position2: new Float32Array([ 1, 1, 1 ]),\r\n *   color: new Float32Array([ 1, 0, 0 ]),\r\n *   color2: new Float32Array([ 0, 1, 0 ]),\r\n *   radius: new Float32Array([ 1 ])\r\n * });\r\n */\r\nclass CylinderGeometryBuffer extends GeometryBuffer {\r\n  updateNormals = true\r\n\r\n  get defaultParameters() { return CylinderGeometryBufferDefaultParameters }\r\n  parameters: CylinderGeometryBufferParameters\r\n\r\n  __center: Float32Array\r\n  _position: Float32Array\r\n  _color: Float32Array\r\n  _from: Float32Array\r\n  _to: Float32Array\r\n  _radius: Float32Array\r\n\r\n  /**\r\n   * @param {Object} data - buffer data\r\n   * @param {Float32Array} data.position1 - from positions\r\n   * @param {Float32Array} data.position2 - to positions\r\n   * @param {Float32Array} data.color - from colors\r\n   * @param {Float32Array} data.color2 - to colors\r\n   * @param {Float32Array} data.radius - radii\r\n   * @param {Picker} [data.picking] - picking ids\r\n   * @param {BufferParameters} [params] - parameters object\r\n   */\r\n  constructor (data: CylinderBufferData, params: Partial<CylinderGeometryBufferParameters> = {}) {\r\n    super(getData(data, params), params, getGeo(params))\r\n\r\n    const n = data.position1.length\r\n    const m = data.radius.length\r\n\r\n    this.__center = new Float32Array(n)\r\n    this._position = new Float32Array(n * 2)\r\n    this._color = new Float32Array(n * 2)\r\n    this._from = new Float32Array(n * 2)\r\n    this._to = new Float32Array(n * 2)\r\n    this._radius = new Float32Array(m * 2)\r\n\r\n    this.setAttributes(data, true)\r\n  }\r\n\r\n  applyPositionTransform (matrix: Matrix4, i: number, i3: number) {\r\n    eye.fromArray(this._from as any, i3)\r\n    target.fromArray(this._to as any, i3)\r\n    matrix.lookAt(eye, target, up)\r\n\r\n    const r = this._radius[ i ]\r\n    scale.set(r, r, eye.distanceTo(target))\r\n    matrix.scale(scale)\r\n  }\r\n\r\n  setAttributes (data: Partial<CylinderBufferData> = {}, initNormals?: boolean) {\r\n    const meshData: Partial<CylinderBufferData> = {}\r\n\r\n    if (data.position1 && data.position2) {\r\n      calculateCenterArray(\r\n        data.position1, data.position2, this.__center\r\n      )\r\n      calculateCenterArray(\r\n        data.position1, this.__center, this._position\r\n      )\r\n      calculateCenterArray(\r\n        this.__center, data.position2, this._position, data.position1.length\r\n      )\r\n      this._from.set(data.position1)\r\n      this._from.set(this.__center, data.position1.length)\r\n      this._to.set(this.__center)\r\n      this._to.set(data.position2, this.__center.length)\r\n      meshData.position = this._position\r\n    }\r\n\r\n    if (data.color && data.color2) {\r\n      this._color.set(data.color)\r\n      this._color.set(data.color2, data.color.length)\r\n      meshData.color = this._color\r\n    }\r\n\r\n    if (data.radius) {\r\n      this._radius.set(data.radius)\r\n      this._radius.set(data.radius, data.radius.length)\r\n      meshData.radius = this._radius\r\n    }\r\n\r\n    super.setAttributes(meshData, initNormals)\r\n  }\r\n}\r\n\r\nexport default CylinderGeometryBuffer\r\n","/**\r\n * @file Mapped Aligned Box Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { BufferParameters, BufferData } from './buffer'\r\nimport MappedBuffer from './mapped-buffer'\r\n\r\n//       +Y   /\r\n//    0**********2\r\n//    *   | /   **\r\n//    *   |/   * *\r\n// -----------3---- +X\r\n//    *  /|   *  *\r\n//    * / |   *  *\r\n//    1/**|******4\r\n//    /   |   * *\r\n//   /    |   **  \r\n//  +Z    |   5 \r\nconst mapping = new Float32Array([\r\n  -1.0, 1.0, -1.0,\r\n  -1.0, -1.0, -1.0,\r\n  1.0, 1.0, -1.0,\r\n  1.0, 1.0, 1.0,\r\n  1.0, -1.0, -1.0,\r\n  1.0, -1.0, 1.0\r\n])\r\n\r\nconst mappingIndices = new Uint16Array([\r\n  0, 1, 2,\r\n  1, 4, 2,\r\n  2, 4, 3,\r\n  4, 5, 3\r\n])\r\n\r\n/**\r\n * Mapped Aligned box buffer. Draws boxes where one side is always screen-space aligned.\r\n * Used to render cylinder imposters.\r\n * @interface\r\n */\r\nclass MappedAlignedBoxBuffer extends MappedBuffer {\r\n  constructor(data: BufferData, params: Partial<BufferParameters> = {}) {\r\n    super('v3', data, params)\r\n  }\r\n  get mapping () { return mapping }\r\n  get mappingIndices () { return mappingIndices }\r\n  get mappingIndicesSize () { return 12 }\r\n  get mappingSize () { return 6 }\r\n  get mappingItemSize () { return 3 }\r\n}\r\n\r\nexport default MappedAlignedBoxBuffer\r\n","/**\r\n * @file Cylinder Impostor Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\n// @ts-ignore: unused import Vector3 required for declaration only\r\nimport { Matrix4, Vector3 } from 'three'\r\n\r\nimport '../shader/CylinderImpostor.vert'\r\nimport '../shader/CylinderImpostor.frag'\r\n\r\nimport MappedAlignedBoxBuffer from './mappedalignedbox-buffer'\r\nimport { BufferDefaultParameters, BufferParameters, BufferParameterTypes, BufferTypes } from './buffer'\r\nimport { CylinderBufferData } from './cylinder-buffer'\r\n\r\nexport const CylinderImpostorBufferDefaultParameters = Object.assign({\r\n  openEnded: false\r\n}, BufferDefaultParameters)\r\nexport type CylinderImpostorBufferParameters = BufferParameters & { openEnded: boolean }\r\n\r\nconst CylinderImpostorBufferParameterTypes = Object.assign({\r\n  openEnded: { updateShader: true }\r\n}, BufferParameterTypes)\r\n\r\n/**\r\n * Cylinder impostor buffer.\r\n *\r\n * @example\r\n * var cylinderimpostorBuffer = new CylinderImpostorBuffer({\r\n *     position1: new Float32Array([ 0, 0, 0 ]),\r\n *     position2: new Float32Array([ 1, 1, 1 ]),\r\n *     color: new Float32Array([ 1, 0, 0 ]),\r\n *     color2: new Float32Array([ 0, 1, 0 ]),\r\n *     radius: new Float32Array([ 1 ])\r\n * });\r\n */\r\nclass CylinderImpostorBuffer extends MappedAlignedBoxBuffer {\r\n  parameterTypes = CylinderImpostorBufferParameterTypes\r\n  get defaultParameters() { return CylinderImpostorBufferDefaultParameters }\r\n  parameters: CylinderImpostorBufferParameters\r\n\r\n  isImpostor = true\r\n  vertexShader = 'CylinderImpostor.vert'\r\n  fragmentShader = 'CylinderImpostor.frag'\r\n\r\n  /**\r\n   * make cylinder impostor buffer\r\n   * @param  {Object} data - attribute object\r\n   * @param  {Float32Array} data.position1 - from positions\r\n   * @param  {Float32Array} data.position2 - to positions\r\n   * @param  {Float32Array} data.color - from colors\r\n   * @param  {Float32Array} data.color2 - to colors\r\n   * @param  {Float32Array} data.radius - radii\r\n   * @param  {Picker} data.picking - picking ids\r\n   * @param  {BufferParameters} params - parameter object\r\n   */\r\n  constructor (data: CylinderBufferData, params: Partial<CylinderImpostorBufferParameters> = {}) {\r\n    super(data, params)\r\n\r\n    this.addUniforms({\r\n      'modelViewMatrixInverse': { value: new Matrix4() },\r\n      'ortho': { value: 0.0 }\r\n    })\r\n\r\n    this.addAttributes({\r\n      'position1': { type: 'v3', value: null },\r\n      'position2': { type: 'v3', value: null },\r\n      'color2': { type: 'c', value: null },\r\n      'radius': { type: 'f', value: null }\r\n    })\r\n\r\n    this.setAttributes(data)\r\n    this.makeMapping()\r\n  }\r\n\r\n  getDefines (type?: BufferTypes) {\r\n    const defines = MappedAlignedBoxBuffer.prototype.getDefines.call(this, type)\r\n\r\n    if (!this.parameters.openEnded) {\r\n      defines.CAP = 1\r\n    }\r\n\r\n    return defines\r\n  }\r\n}\r\n\r\nexport default CylinderImpostorBuffer\r\n","/**\r\n * @file Cylinder Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\n// @ts-ignore: unused import required for declaration only\r\nimport { Vector3, Matrix4 } from 'three'\r\nimport { BufferRegistry, ExtensionFragDepth } from '../globals'\r\nimport CylinderGeometryBuffer, { CylinderGeometryBufferDefaultParameters, CylinderGeometryBufferParameters } from './cylindergeometry-buffer'\r\nimport CylinderImpostorBuffer, { CylinderImpostorBufferDefaultParameters, CylinderImpostorBufferParameters } from './cylinderimpostor-buffer'\r\nimport { BufferData } from './buffer'\r\n\r\nexport interface CylinderBufferData extends BufferData {\r\n  position1: Float32Array\r\n  position2: Float32Array\r\n  color2: Float32Array\r\n  radius: Float32Array\r\n}\r\n\r\nexport const CylinderBufferDefaultParameters = Object.assign({\r\n  disableImpostor: false\r\n}, CylinderGeometryBufferDefaultParameters, CylinderImpostorBufferDefaultParameters)\r\nexport type CylinderBufferParameters = (CylinderGeometryBufferParameters & {disableImpostor: boolean}) | (CylinderImpostorBufferParameters & {disableImpostor: boolean})\r\n\r\nclass CylinderBufferImpl {\r\n  constructor (data: CylinderBufferData, params: Partial<CylinderBufferParameters> = {}) {\r\n    if (!data.color2 && data.color) data.color2 = data.color\r\n    if (!ExtensionFragDepth || (params && params.disableImpostor)) {\r\n      return new CylinderGeometryBuffer(data, params)\r\n    } else {\r\n      return new CylinderImpostorBuffer(data, params)\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Cylinder buffer. Depending on the value {@link ExtensionFragDepth} and\r\n * `params.disableImpostor` the constructor returns either a\r\n * {@link CylinderGeometryBuffer} or a {@link CylinderImpostorBuffer}\r\n * @implements {Buffer}\r\n *\r\n * @example\r\n * var cylinderBuffer = new CylinderBuffer({\r\n *   position1: new Float32Array([ 0, 0, 0 ]),\r\n *   position2: new Float32Array([ 1, 1, 1 ]),\r\n *   color: new Float32Array([ 1, 0, 0 ]),\r\n *   color2: new Float32Array([ 0, 1, 0 ]),\r\n *   radius: new Float32Array([ 1 ])\r\n * });\r\n */\r\n//@ts-expect-error Incompatible constructor signatures\r\nconst CylinderBuffer: {\r\n  new(data: CylinderBufferData, params: Partial<CylinderBufferParameters>): CylinderGeometryBuffer | CylinderImpostorBuffer;\r\n} = CylinderBufferImpl;\r\n\r\ntype CylinderBuffer = CylinderGeometryBuffer | CylinderImpostorBuffer;\r\n\r\nBufferRegistry.add('cylinder', CylinderBuffer)\r\n\r\nexport default CylinderBuffer\r\n","/**\r\n * @file Axes Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Color, Vector3 } from 'three'\r\n\r\nimport { RepresentationRegistry } from '../globals'\r\nimport { defaults } from '../utils'\r\nimport { AxesPicker } from '../utils/picker'\r\nimport { uniformArray, uniformArray3 } from '../math/array-utils'\r\nimport StructureRepresentation, { StructureRepresentationParameters, StructureRepresentationData } from './structure-representation'\r\nimport SphereBuffer, { SphereBufferData, SphereBufferParameters } from '../buffer/sphere-buffer'\r\nimport CylinderBuffer, { CylinderBufferData } from '../buffer/cylinder-buffer'\r\nimport StructureView from '../structure/structure-view';\r\nimport Viewer from '../viewer/viewer';\r\nimport { Structure } from '../ngl';\r\nimport { AtomDataFields } from '../structure/structure-data';\r\nimport SphereGeometryBuffer from '../buffer/spheregeometry-buffer';\r\nimport CylinderGeometryBuffer from '../buffer/cylindergeometry-buffer';\r\nimport PrincipalAxes from '../math/principal-axes';\r\n\r\nexport interface AxesRepresentationParameters extends StructureRepresentationParameters {\r\n  showAxes: boolean\r\n  showBox: boolean\r\n}\r\n\r\n/**\r\n * Axes representation. Show principal axes and/or a box aligned with them\r\n * that fits the structure or selection.\r\n *\r\n * __Name:__ _axes_\r\n *\r\n * @example\r\n * stage.loadFile( \"rcsb://3pqr\", {\r\n *     assembly: \"BU1\"\r\n * } ).then( function( o ){\r\n *     o.addRepresentation( \"cartoon\" );\r\n *     o.addRepresentation( \"axes\", {\r\n *         sele: \"RET\", showAxes: false, showBox: true, radius: 0.2\r\n *     } );\r\n *     o.addRepresentation( \"ball+stick\", { sele: \"RET\" } );\r\n *     o.addRepresentation( \"axes\", {\r\n *         sele: \":B and backbone\", showAxes: false, showBox: true, radius: 0.2\r\n *     } );\r\n *     stage.autoView();\r\n *     var pa = o.structure.getPrincipalAxes();\r\n *     stage.animationControls.rotate( pa.getRotationQuaternion(), 1500 );\r\n * } );\r\n */\r\nclass AxesRepresentation extends StructureRepresentation {\r\n  \r\n  protected showAxes: boolean\r\n  protected showBox: boolean\r\n  protected sphereBuffer: SphereBuffer\r\n  protected cylinderBuffer: CylinderBuffer\r\n  /**\r\n   * @param  {Structure} structure - the structure object\r\n   * @param  {Viewer} viewer - the viewer object\r\n   * @param  {StructureRepresentationParameters} params - parameters object\r\n   */\r\n  constructor (structure: Structure, viewer: Viewer, params: Partial<AxesRepresentationParameters>) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'axes'\r\n\r\n    this.parameters = Object.assign({\r\n\r\n      radiusSize: {\r\n        type: 'number', precision: 3, max: 10.0, min: 0.001\r\n      },\r\n      sphereDetail: true,\r\n      radialSegments: true,\r\n      disableImpostor: true,\r\n      showAxes: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n      showBox: {\r\n        type: 'boolean', rebuild: true\r\n      }\r\n\r\n    }, this.parameters, {\r\n      assembly: null\r\n    })\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params: Partial<AxesRepresentationParameters>) {\r\n    const p = params || {}\r\n    p.radiusSize = defaults(p.radiusSize, 0.5)\r\n    p.colorValue = defaults(p.colorValue, 'lightgreen')\r\n    p.useInteriorColor = defaults(p.useInteriorColor, true)\r\n\r\n    this.showAxes = defaults(p.showAxes, true)\r\n    this.showBox = defaults(p.showBox, false)\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  getPrincipalAxes (): PrincipalAxes {\r\n    let selection\r\n    const assembly = this.getAssembly()\r\n\r\n    if (assembly) {\r\n      selection = assembly.partList[ 0 ].getSelection()\r\n    }\r\n\r\n    return this.structureView.getPrincipalAxes(selection)\r\n  }\r\n\r\n  getAxesData (sview: StructureView) {\r\n    const pa = this.getPrincipalAxes()\r\n    const c = new Color(this.colorValue)\r\n\r\n    let vn = 0\r\n    let en = 0\r\n\r\n    if (this.showAxes) {\r\n      vn += 6\r\n      en += 3\r\n    }\r\n\r\n    if (this.showBox) {\r\n      vn += 8\r\n      en += 12\r\n    }\r\n\r\n    const vertexPosition = new Float32Array(3 * vn)\r\n    const vertexColor = uniformArray3(vn, c.r, c.g, c.b)\r\n    const vertexRadius = uniformArray(vn, this.radiusSize)\r\n\r\n    const edgePosition1 = new Float32Array(3 * en)\r\n    const edgePosition2 = new Float32Array(3 * en)\r\n    const edgeColor = uniformArray3(en, c.r, c.g, c.b)\r\n    const edgeRadius = uniformArray(en, this.radiusSize)\r\n\r\n    let offset = 0\r\n\r\n    if (this.showAxes) {\r\n      const addAxis = function (v1: Vector3, v2: Vector3) {\r\n        v1.toArray(vertexPosition as any, offset * 2)\r\n        v2.toArray(vertexPosition as any, offset * 2 + 3)\r\n        v1.toArray(edgePosition1 as any, offset)\r\n        v2.toArray(edgePosition2 as any, offset)\r\n        offset += 3\r\n      }\r\n\r\n      addAxis(pa.begA, pa.endA)\r\n      addAxis(pa.begB, pa.endB)\r\n      addAxis(pa.begC, pa.endC)\r\n    }\r\n\r\n    if (this.showBox) {\r\n      const v = new Vector3()\r\n      const { d1a, d2a, d3a, d1b, d2b, d3b } = pa.getProjectedScaleForAtoms(sview)\r\n\r\n      // console.log(d1a, d2a, d3a, d1b, d2b, d3b)\r\n\r\n      let offset2 = offset * 2\r\n      const addCorner = function (d1: number, d2: number, d3: number) {\r\n        v.copy(pa.center)\r\n          .addScaledVector(pa.normVecA, d1)\r\n          .addScaledVector(pa.normVecB, d2)\r\n          .addScaledVector(pa.normVecC, d3)\r\n        v.toArray(vertexPosition as any, offset2)\r\n        offset2 += 3\r\n      }\r\n      addCorner(d1a, d2a, d3a)\r\n      addCorner(d1a, d2a, d3b)\r\n      addCorner(d1a, d2b, d3b)\r\n      addCorner(d1a, d2b, d3a)\r\n      addCorner(d1b, d2b, d3b)\r\n      addCorner(d1b, d2b, d3a)\r\n      addCorner(d1b, d2a, d3a)\r\n      addCorner(d1b, d2a, d3b)\r\n\r\n      let edgeOffset = offset\r\n      const addEdge = function (a: number, b: number) {\r\n        v.fromArray(vertexPosition as any, offset * 2 + a * 3)\r\n          .toArray(edgePosition1 as any, edgeOffset)\r\n        v.fromArray(vertexPosition as any, offset * 2 + b * 3)\r\n          .toArray(edgePosition2 as any, edgeOffset)\r\n        edgeOffset += 3\r\n      }\r\n      addEdge(0, 1)\r\n      addEdge(0, 3)\r\n      addEdge(0, 6)\r\n      addEdge(1, 2)\r\n      addEdge(1, 7)\r\n      addEdge(2, 3)\r\n      addEdge(2, 4)\r\n      addEdge(3, 5)\r\n      addEdge(4, 5)\r\n      addEdge(4, 7)\r\n      addEdge(5, 6)\r\n      addEdge(6, 7)\r\n    }\r\n\r\n    const picker = new AxesPicker(pa)\r\n\r\n    return {\r\n      vertex: {\r\n        position: vertexPosition,\r\n        color: vertexColor,\r\n        radius: vertexRadius,\r\n        picking: picker\r\n      },\r\n      edge: {\r\n        position1: edgePosition1,\r\n        position2: edgePosition2,\r\n        color: edgeColor,\r\n        color2: edgeColor,\r\n        radius: edgeRadius,\r\n        picking: picker\r\n      }\r\n    }\r\n  }\r\n\r\n  create () {\r\n    const axesData = this.getAxesData(this.structureView)\r\n\r\n    this.sphereBuffer = new SphereBuffer(\r\n      axesData.vertex as SphereBufferData,\r\n      this.getBufferParams({\r\n        sphereDetail: this.sphereDetail,\r\n        disableImpostor: this.disableImpostor,\r\n        dullInterior: true\r\n      }) as SphereBufferParameters\r\n    )\r\n\r\n    this.cylinderBuffer = new CylinderBuffer(\r\n      axesData.edge as CylinderBufferData,\r\n      this.getBufferParams({\r\n        openEnded: true,\r\n        radialSegments: this.radialSegments,\r\n        disableImpostor: this.disableImpostor,\r\n        dullInterior: true\r\n      })\r\n    )\r\n\r\n    this.dataList.push({\r\n      sview: this.structureView,\r\n      bufferList: [ this.sphereBuffer as SphereGeometryBuffer, this.cylinderBuffer as CylinderGeometryBuffer]\r\n    })\r\n  }\r\n\r\n  createData (sview: StructureView): undefined {\r\n    return\r\n  }\r\n\r\n  updateData (what: AtomDataFields, data: StructureRepresentationData) {\r\n    const axesData = this.getAxesData(data.sview as StructureView)\r\n    const sphereData = {}\r\n    const cylinderData = {}\r\n\r\n    if (!what || what.position) {\r\n      Object.assign(sphereData, {\r\n        position: axesData.vertex.position\r\n      })\r\n      Object.assign(cylinderData, {\r\n        position1: axesData.edge.position1,\r\n        position2: axesData.edge.position2\r\n      })\r\n    }\r\n\r\n    if (!what || what.color) {\r\n      Object.assign(sphereData, {\r\n        color: axesData.vertex.color as Float32Array\r\n      })\r\n      Object.assign(cylinderData, {\r\n        color: axesData.edge.color as Float32Array,\r\n        color2: axesData.edge.color as Float32Array\r\n      })\r\n    }\r\n\r\n    if (!what || what.radius) {\r\n      Object.assign(sphereData, {\r\n        radius: axesData.vertex.radius as Float32Array\r\n      })\r\n      Object.assign(cylinderData, {\r\n        radius: axesData.edge.radius as Float32Array\r\n      })\r\n    }\r\n\r\n    (this.sphereBuffer as SphereGeometryBuffer).setAttributes(sphereData);\r\n    (this.cylinderBuffer as CylinderGeometryBuffer).setAttributes(cylinderData)\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('axes', AxesRepresentation)\r\n\r\nexport default AxesRepresentation\r\n","/**\r\n * @file Ball And Stick Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { defaults } from '../utils'\r\nimport { ExtensionFragDepth, RepresentationRegistry } from '../globals'\r\nimport StructureRepresentation, { StructureRepresentationParameters, StructureRepresentationData } from './structure-representation'\r\nimport SphereBuffer, { SphereBufferData, SphereBufferParameters } from '../buffer/sphere-buffer'\r\nimport CylinderBuffer, { CylinderBufferData } from '../buffer/cylinder-buffer'\r\nimport WideLineBuffer from '../buffer/wideline-buffer'\r\nimport Viewer from '../viewer/viewer';\r\n// @ts-ignore: unused import Volume required for declaration only\r\nimport { Structure, Volume } from '../ngl';\r\nimport AtomProxy from '../proxy/atom-proxy';\r\nimport { AtomDataParams, BondDataParams, BondDataFields, AtomDataFields, BondData, AtomData } from '../structure/structure-data';\r\nimport StructureView from '../structure/structure-view';\r\nimport CylinderGeometryBuffer from '../buffer/cylindergeometry-buffer';\r\nimport SphereGeometryBuffer from '../buffer/spheregeometry-buffer';\r\n// @ts-ignore: unused import Surface required for declaration only\r\nimport Surface from '../surface/surface';\r\n\r\nexport interface BallAndStickRepresentationParameters extends StructureRepresentationParameters {\r\n  sphereDetail: number\r\n  radialSegments: number\r\n  openEnded: boolean\r\n  disableImpostor: boolean\r\n  aspectRatio: number\r\n  lineOnly: boolean\r\n  lineWidth: number\r\n  cylinderOnly: boolean\r\n  multipleBond: 'off' | 'symmetric' | 'offset'\r\n  bondSpacing: number\r\n  bondScale: number\r\n  linewidth: number\r\n}\r\n\r\n/**\r\n * Ball And Stick representation parameter object. Extends {@link RepresentationParameters} and\r\n * {@link StructureRepresentationParameters}.\r\n *\r\n * @typedef {Object} BallAndStickRepresentationParameters - ball and stick representation parameters\r\n *\r\n * @property {Integer} sphereDetail - sphere quality (icosahedron subdivisions)\r\n * @property {Integer} radialSegments - cylinder quality (number of segments)\r\n * @property {Boolean} openEnded - capped or not\r\n * @property {Boolean} disableImpostor - disable use of raycasted impostors for rendering\r\n * @property {Float} aspectRatio - size difference between atom and bond radii\r\n * @property {Boolean} lineOnly - render only bonds, and only as lines\r\n * @property {Integer} linewidth - width of lines\r\n * @property {Boolean} cylinderOnly - render only bonds (no atoms)\r\n * @property {String} multipleBond - one off \"off\", \"symmetric\", \"offset\"\r\n * @property {Float} bondSpacing - spacing for multiple bond rendering\r\n * @property {Float} bondScale - scale/radius for multiple bond rendering\r\n */\r\n\r\n/**\r\n * Ball And Stick representation. Show atoms as spheres and bonds as cylinders.\r\n *\r\n * __Name:__ _ball+stick_\r\n *\r\n * @example\r\n * stage.loadFile( \"rcsb://1crn\" ).then( function( o ){\r\n *     o.addRepresentation( \"ball+stick\" );\r\n *     o.autoView();\r\n * } );\r\n */\r\nclass BallAndStickRepresentation extends StructureRepresentation {\r\n  protected sphereDetail: number\r\n  protected radialSegments: number\r\n  protected openEnded: boolean\r\n  protected disableImpostor: boolean\r\n  protected aspectRatio: number\r\n  protected lineOnly: boolean\r\n  protected lineWidth: number\r\n  protected cylinderOnly: boolean\r\n  protected multipleBond: 'off' | 'symmetric' | 'offset'\r\n  protected bondSpacing: number\r\n  protected bondScale: number\r\n  protected linewidth: number\r\n\r\n  protected lineBuffer: WideLineBuffer\r\n  /**\r\n   * Create Ball And Stick representation object\r\n   * @param {Structure} structure - the structure to be represented\r\n   * @param {Viewer} viewer - a viewer object\r\n   * @param {BallAndStickRepresentationParameters} params - ball and stick representation parameters\r\n   */\r\n  constructor (structure: Structure, viewer: Viewer, params: Partial<BallAndStickRepresentationParameters>) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'ball+stick'\r\n\r\n    this.parameters = Object.assign({\r\n\r\n      sphereDetail: true,\r\n      radialSegments: true,\r\n      openEnded: true,\r\n      disableImpostor: true,\r\n      aspectRatio: {\r\n        type: 'number', precision: 1, max: 10.0, min: 1.0\r\n      },\r\n      lineOnly: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n      cylinderOnly: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n      multipleBond: {\r\n        type: 'select',\r\n        rebuild: true,\r\n        options: {\r\n          'off': 'off',\r\n          'symmetric': 'symmetric',\r\n          'offset': 'offset'\r\n        }\r\n      },\r\n      bondScale: {\r\n        type: 'number', precision: 2, max: 1.0, min: 0.01\r\n      },\r\n      bondSpacing: {\r\n        type: 'number', precision: 2, max: 2.0, min: 0.5\r\n      },\r\n      linewidth: {\r\n        type: 'integer', max: 50, min: 1, buffer: true\r\n      }\r\n\r\n    }, this.parameters)\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params: Partial<BallAndStickRepresentationParameters>) {\r\n    var p = params || {}\r\n    p.radiusType = defaults(p.radiusType, 'size')\r\n    p.radiusSize = defaults(p.radiusSize, 0.15)\r\n    p.useInteriorColor = defaults(p.useInteriorColor, true)\r\n\r\n    this.aspectRatio = defaults(p.aspectRatio, 2.0)\r\n    this.lineOnly = defaults(p.lineOnly, false)\r\n    this.cylinderOnly = defaults(p.cylinderOnly, false)\r\n    this.multipleBond = defaults(p.multipleBond, 'off')\r\n    this.bondSpacing = defaults(p.bondSpacing, 1.0)\r\n    this.bondScale = defaults(p.bondScale, 0.4)\r\n    this.linewidth = defaults(p.linewidth, 2)\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  getAtomRadius (atom: AtomProxy) {\r\n    return this.aspectRatio * super.getAtomRadius(atom)\r\n  }\r\n\r\n  getAtomParams (what?: AtomDataFields, params?: Partial<AtomDataParams>) {\r\n    var p = super.getAtomParams(what, params)\r\n    p.radiusParams.scale *= this.aspectRatio\r\n\r\n    return p\r\n  }\r\n\r\n  getAtomData (sview: StructureView, what?: AtomDataFields, params?: Partial<AtomDataParams>): AtomData {\r\n    return sview.getAtomData(this.getAtomParams(what, params))\r\n  }\r\n\r\n  getBondParams (what?: BondDataFields, params?: Partial<BondDataParams>) {\r\n    params = Object.assign({\r\n      multipleBond: this.multipleBond,\r\n      bondSpacing: this.bondSpacing,\r\n      bondScale: this.bondScale\r\n    }, params)\r\n\r\n    return super.getBondParams(what, params)\r\n  }\r\n\r\n  getBondData (sview: StructureView, what?: BondDataFields, params?: Partial<BondDataParams>): BondData {\r\n    return sview.getBondData(this.getBondParams(what, params))\r\n  }\r\n\r\n  createData (sview: StructureView) {\r\n    const bufferList: any[] = []\r\n\r\n    if (this.lineOnly) {\r\n      this.lineBuffer = new WideLineBuffer(\r\n        this.getBondData(sview, { position: true, color: true, picking: true }),\r\n        this.getBufferParams({ linewidth: this.linewidth })\r\n      )\r\n\r\n      bufferList.push(this.lineBuffer)\r\n    } else {\r\n      const cylinderBuffer = new CylinderBuffer(\r\n        (this.getBondData(sview) as CylinderBufferData),\r\n        this.getBufferParams({\r\n          openEnded: this.openEnded,\r\n          radialSegments: this.radialSegments,\r\n          disableImpostor: this.disableImpostor,\r\n          dullInterior: true\r\n        })\r\n      )\r\n\r\n      bufferList.push(cylinderBuffer as CylinderGeometryBuffer)\r\n\r\n      if (!this.cylinderOnly) {\r\n        const sphereBuffer = new SphereBuffer(\r\n          (this.getAtomData(sview) as SphereBufferData),\r\n          (this.getBufferParams({\r\n            sphereDetail: this.sphereDetail,\r\n            disableImpostor: this.disableImpostor,\r\n            dullInterior: true\r\n          }) as SphereBufferParameters)\r\n        )\r\n\r\n        bufferList.push(sphereBuffer as SphereGeometryBuffer)\r\n      }\r\n    }\r\n\r\n    return {\r\n      bufferList: bufferList\r\n    }\r\n  }\r\n\r\n  updateData (what: BondDataFields | AtomDataFields, data: StructureRepresentationData) {\r\n    if (this.multipleBond !== 'off' && what && what.radius) {\r\n      what.position = true\r\n    }\r\n\r\n    const bondData = this.getBondData(data.sview as StructureView, what)\r\n\r\n    if (this.lineOnly) {\r\n      const lineData:Partial<CylinderBufferData> = {}\r\n\r\n      if (!what || what.position) {\r\n        Object.assign(lineData, {\r\n          position1: bondData.position1,\r\n          position2: bondData.position2\r\n        })\r\n      }\r\n\r\n      if (!what || what.color) {\r\n        Object.assign(lineData, {\r\n          color: bondData.color,\r\n          color2: bondData.color2\r\n        })\r\n      }\r\n\r\n      data.bufferList[ 0 ].setAttributes(lineData)\r\n    } else {\r\n      var cylinderData: Partial<CylinderBufferData> = {}\r\n\r\n      if (!what || what.position) {\r\n        Object.assign(cylinderData, {\r\n          position1: bondData.position1,\r\n          position2: bondData.position2\r\n        })\r\n      }\r\n\r\n      if (!what || what.color) {\r\n        Object.assign(cylinderData, {\r\n          color: bondData.color,\r\n          color2: bondData.color2\r\n        })\r\n      }\r\n\r\n      if (!what || what.radius) {\r\n        Object.assign(cylinderData, {\r\n          radius: bondData.radius\r\n        })\r\n      }\r\n\r\n      data.bufferList[ 0 ].setAttributes(cylinderData)\r\n\r\n      if (!this.cylinderOnly) {\r\n        var atomData = this.getAtomData(data.sview as StructureView, what)\r\n\r\n        var sphereData: Partial<SphereBufferData> = {}\r\n\r\n        if (!what || what.position) {\r\n          Object.assign(sphereData, {\r\n            position: atomData.position\r\n          })\r\n        }\r\n\r\n        if (!what || what.color) {\r\n          Object.assign(sphereData, {\r\n            color: atomData.color\r\n          })\r\n        }\r\n\r\n        if (!what || what.radius) {\r\n          Object.assign(sphereData, {\r\n            radius: atomData.radius\r\n          })\r\n        }\r\n\r\n        data.bufferList[ 1 ].setAttributes(sphereData)\r\n      }\r\n    }\r\n  }\r\n\r\n  setParameters (params: Partial<BallAndStickRepresentationParameters> = {}) {\r\n    let rebuild = false\r\n    const what: AtomDataFields = {}\r\n\r\n    if (params.aspectRatio || params.bondSpacing || params.bondScale) {\r\n      Object.assign(what, {radius: true})\r\n      if (!ExtensionFragDepth || this.disableImpostor) {\r\n        rebuild = true\r\n      }\r\n    }\r\n\r\n    super.setParameters(params, what, rebuild)\r\n\r\n    return this\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('ball+stick', BallAndStickRepresentation)\r\n\r\nexport default BallAndStickRepresentation\r\n","/**\r\n * @file Backbone Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { RepresentationRegistry } from '../globals'\r\nimport { defaults } from '../utils'\r\nimport BallAndStickRepresentation, { BallAndStickRepresentationParameters } from './ballandstick-representation'\r\nimport { Structure } from '../ngl';\r\nimport Viewer from '../viewer/viewer';\r\nimport AtomProxy from '../proxy/atom-proxy';\r\nimport StructureView from '../structure/structure-view';\r\nimport { AtomDataFields, AtomDataParams, BondDataFields, BondDataParams, BondData, AtomData } from '../structure/structure-data';\r\n\r\n/**\r\n * Backbone representation. Show cylinders (or lines) connecting .CA (protein)\r\n * or .C4'/.C3' (RNA/DNA) of polymers.\r\n *\r\n * __Name:__ _backbone_\r\n *\r\n * @example\r\n * stage.loadFile( \"rcsb://1sfi\" ).then( function( o ){\r\n *     o.addRepresentation( \"backbone\" );\r\n *     o.autoView();\r\n * } );\r\n */\r\nclass BackboneRepresentation extends BallAndStickRepresentation {\r\n  /**\r\n   * @param  {Structure} structure - the structure object\r\n   * @param  {Viewer} viewer - the viewer object\r\n   * @param  {BallAndStickRepresentationParameters} params - parameters object\r\n   */\r\n  constructor (structure: Structure, viewer: Viewer, params: Partial<BallAndStickRepresentationParameters>) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'backbone'\r\n\r\n    this.parameters = Object.assign({\r\n\r\n    }, this.parameters, {\r\n\r\n      multipleBond: null,\r\n      bondSpacing: null\r\n\r\n    })\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params: Partial<BallAndStickRepresentationParameters>) {\r\n    var p = params || {}\r\n    p.aspectRatio = defaults(p.aspectRatio, 1.0)\r\n    p.radiusSize = defaults(p.radiusSize, 0.25)\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  getAtomRadius (atom: AtomProxy) {\r\n    return atom.isTrace() ? super.getAtomRadius(atom) : 0\r\n  }\r\n\r\n  getAtomData (sview: StructureView, what?: AtomDataFields, params?: Partial<AtomDataParams>): AtomData {\r\n    return sview.getBackboneAtomData(this.getAtomParams(what, params))\r\n  }\r\n\r\n  getBondData (sview: StructureView, what?: BondDataFields, params?: Partial<BondDataParams>): BondData {\r\n    return sview.getBackboneBondData(this.getBondParams(what, params))\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('backbone', BackboneRepresentation)\r\n\r\nexport default BackboneRepresentation\r\n","/**\r\n * @file Base Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { RepresentationRegistry } from '../globals'\r\nimport { defaults } from '../utils'\r\nimport BallAndStickRepresentation, { BallAndStickRepresentationParameters } from './ballandstick-representation'\r\nimport { Structure } from '../ngl';\r\nimport Viewer from '../viewer/viewer';\r\nimport StructureView from '../structure/structure-view';\r\nimport { AtomDataFields, AtomDataParams, BondDataFields, BondDataParams, BondData, AtomData } from '../structure/structure-data';\r\n\r\n/**\r\n * Base representation. Show cylinders for RNA/DNA ladders.\r\n *\r\n * __Name:__ _base_\r\n *\r\n * @example\r\n * stage.loadFile( \"rcsb://1d66\" ).then( function( o ){\r\n *     o.addRepresentation( \"cartoon\", { sele: \"nucleic\" } );\r\n *     o.addRepresentation( \"base\", { color: \"resname\" } );\r\n *     o.autoView( \"nucleic\" );\r\n * } );\r\n */\r\nclass BaseRepresentation extends BallAndStickRepresentation {\r\n  /**\r\n   * @param  {Structure} structure - the structure object\r\n   * @param  {Viewer} viewer - the viewer object\r\n   * @param  {BallAndStickRepresentationParameters} params - parameters object\r\n   */\r\n  constructor (structure: Structure, viewer: Viewer, params: Partial<BallAndStickRepresentationParameters>) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'base'\r\n\r\n    this.parameters = Object.assign({\r\n\r\n    }, this.parameters, {\r\n\r\n      multipleBond: null,\r\n      bondSpacing: null\r\n\r\n    })\r\n  }\r\n\r\n  init (params: Partial<BallAndStickRepresentationParameters>) {\r\n    let p = params || {}\r\n    p.aspectRatio = defaults(p.aspectRatio, 1.0)\r\n    p.radiusSize = defaults(p.radiusSize, 0.3)\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  getAtomData (sview: StructureView, what?: AtomDataFields, params?: AtomDataParams): AtomData {\r\n    return sview.getRungAtomData(this.getAtomParams(what, params))\r\n  }\r\n\r\n  getBondData (sview: StructureView, what?: BondDataFields, params?: BondDataParams): BondData {\r\n    let p = this.getBondParams(what, params)\r\n    Object.assign(p.colorParams, {rung: true})\r\n\r\n    return sview.getRungBondData(p)\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('base', BaseRepresentation)\r\n\r\nexport default BaseRepresentation\r\n","/**\r\n * @file Spline\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3 } from 'three'\r\n\r\nimport { ColormakerRegistry } from '../globals'\r\nimport { AtomPicker } from '../utils/picker'\r\nimport RadiusFactory, { RadiusParams } from '../utils/radius-factory'\r\nimport { copyArray } from '../math/array-utils'\r\nimport { spline } from '../math/math-utils'\r\nimport Polymer from '../proxy/polymer';\r\nimport AtomProxy from '../proxy/atom-proxy';\r\nimport { ColormakerParameters } from '../color/colormaker';\r\nimport { NumberArray } from '../types';\r\n\r\nexport class Interpolator {\r\n  \r\n  m: number\r\n  tension: number\r\n  dt: number\r\n  delta: number\r\n  vec1: Vector3\r\n  vec2: Vector3\r\n  vDir: Vector3 \r\n  vTan: Vector3\r\n  vNorm: Vector3\r\n  vBin: Vector3\r\n  m2: number\r\n\r\n  constructor (m: number, tension: number) {\r\n    this.m = m\r\n    this.tension = tension\r\n    this.dt = 1.0 / this.m\r\n    this.delta = 0.0001\r\n\r\n    this.vec1 = new Vector3()\r\n    this.vec2 = new Vector3()\r\n\r\n    this.vDir = new Vector3()\r\n    this.vTan = new Vector3()\r\n    this.vNorm = new Vector3()\r\n    this.vBin = new Vector3()\r\n  \r\n    this.m2 = Math.ceil(this.m / 2)\r\n  }\r\n\r\n  private interpolateToArr (v0: Vector3, v1: Vector3, v2: Vector3, v3: Vector3, t: number, arr: Float32Array, offset: number) {\r\n    arr[ offset + 0 ] = spline(v0.x, v1.x, v2.x, v3.x, t, this.tension)\r\n    arr[ offset + 1 ] = spline(v0.y, v1.y, v2.y, v3.y, t, this.tension)\r\n    arr[ offset + 2 ] = spline(v0.z, v1.z, v2.z, v3.z, t, this.tension)\r\n  }\r\n\r\n  private interpolateToVec (v0: Vector3, v1: Vector3, v2: Vector3, v3: Vector3, t: number, vec: Vector3) {\r\n    vec.x = spline(v0.x, v1.x, v2.x, v3.x, t, this.tension)\r\n    vec.y = spline(v0.y, v1.y, v2.y, v3.y, t, this.tension)\r\n    vec.z = spline(v0.z, v1.z, v2.z, v3.z, t, this.tension)\r\n  }\r\n\r\n  private interpolatePosition (v0: Vector3, v1: Vector3, v2: Vector3, v3: Vector3, pos: Float32Array, offset: number) {\r\n    for (var j = 0; j < this.m; ++j) {\r\n      var l = offset + j * 3\r\n      var d = this.dt * j\r\n      this.interpolateToArr(v0, v1, v2, v3, d, pos, l)\r\n    }\r\n  }\r\n\r\n  private interpolateTangent (v0: Vector3, v1: Vector3, v2: Vector3, v3: Vector3, tan: Float32Array, offset: number) {\r\n    for (var j = 0; j < this.m; ++j) {\r\n      var d = this.dt * j\r\n      var d1 = d - this.delta\r\n      var d2 = d + this.delta\r\n      var l = offset + j * 3\r\n      // capping as a precaution\r\n      if (d1 < 0) d1 = 0\r\n      if (d2 > 1) d2 = 1\r\n      //\r\n      this.interpolateToVec(v0, v1, v2, v3, d1, this.vec1)\r\n      this.interpolateToVec(v0, v1, v2, v3, d2, this.vec2)\r\n      //\r\n      this.vec2.sub(this.vec1).normalize()\r\n      this.vec2.toArray(tan as any, l)\r\n    }\r\n  }\r\n\r\n  private vectorSubdivide (interpolationFn: (v0: Vector3, v1: Vector3, v2: Vector3, v3: Vector3, array: Float32Array, offset: number) => void,\r\n                            iterator: AtomIterator, array: Float32Array, offset: number, isCyclic: boolean) {\r\n    let v0: Vector3\r\n    let v1 = <Vector3>iterator.next()\r\n    let v2 = <Vector3>iterator.next()\r\n    let v3 = <Vector3>iterator.next()\r\n    //\r\n    const n = iterator.size\r\n    const n1 = n - 1\r\n    let k = offset || 0\r\n    for (let i = 0; i < n1; ++i) {\r\n      v0 = v1\r\n      v1 = v2\r\n      v2 = v3\r\n      v3 = <Vector3>iterator.next()\r\n      interpolationFn.apply(this, [v0, v1, v2, v3, array, k])\r\n      k += 3 * this.m\r\n    }\r\n    if (isCyclic) {\r\n      v0 = <Vector3>iterator.get(n - 2)\r\n      v1 = <Vector3>iterator.get(n - 1)\r\n      v2 = <Vector3>iterator.get(0)\r\n      v3 = <Vector3>iterator.get(1)\r\n      interpolationFn.apply(this, [v0, v1, v2, v3, array, k])\r\n      k += 3 * this.m\r\n    }\r\n  }\r\n\r\n  //\r\n\r\n  public getPosition (iterator: AtomIterator, array: Float32Array, offset: number, isCyclic: boolean) {\r\n    iterator.reset()\r\n    this.vectorSubdivide(this.interpolatePosition, iterator, array, offset, isCyclic)\r\n    var n1 = iterator.size - 1\r\n    var k = n1 * this.m * 3\r\n    if (isCyclic) k += this.m * 3\r\n    var v = iterator.get(isCyclic ? 0 : n1)\r\n    array[ k ] = v.x\r\n    array[ k + 1 ] = v.y\r\n    array[ k + 2 ] = v.z\r\n  }\r\n\r\n  public getTangent (iterator: AtomIterator, array: Float32Array, offset: number, isCyclic: boolean) {\r\n    iterator.reset()\r\n    this.vectorSubdivide(this.interpolateTangent, iterator, array, offset, isCyclic)\r\n    const n1 = iterator.size - 1\r\n    let k = n1 * this.m * 3\r\n    if (isCyclic) k += this.m * 3\r\n    copyArray(array, array, k - 3, k, 3)\r\n  }\r\n\r\n  private interpolateNormalDir (u0: Vector3, u1: Vector3, u2: Vector3, u3: Vector3,\r\n                                v0: Vector3, v1: Vector3, v2: Vector3, v3: Vector3,\r\n                                tan: Float32Array, norm: Float32Array, bin: Float32Array,\r\n                                offset: number, shift: boolean) {\r\n    for (let j = 0; j < this.m; ++j) {\r\n      let l = offset + j * 3\r\n      if (shift) l += this.m2 * 3\r\n      const d = this.dt * j\r\n      this.interpolateToVec(u0, u1, u2, u3, d, this.vec1)\r\n      this.interpolateToVec(v0, v1, v2, v3, d, this.vec2)\r\n      this.vDir.subVectors(this.vec2, this.vec1).normalize()\r\n      this.vTan.fromArray(tan as any, l)\r\n      this.vBin.crossVectors(this.vDir, this.vTan).normalize()\r\n      this.vBin.toArray(bin as any, l)\r\n      this.vNorm.crossVectors(this.vTan, this.vBin).normalize()\r\n      this.vNorm.toArray(norm as any, l)\r\n    }\r\n  }\r\n\r\n  private interpolateNormal (vDir: Vector3, tan: Float32Array, norm: Float32Array, bin: Float32Array, offset: number) {\r\n    for (var j = 0; j < this.m; ++j) {\r\n      var l = offset + j * 3\r\n      vDir.copy(this.vNorm)\r\n      this.vTan.fromArray(tan as any, l)\r\n      this.vBin.crossVectors(vDir, this.vTan).normalize()\r\n      this.vBin.toArray(bin as any, l)\r\n      this.vNorm.crossVectors(this.vTan, this.vBin).normalize()\r\n      this.vNorm.toArray(norm as any, l)\r\n    }\r\n  }\r\n\r\n  public getNormal (size: number, tan: Float32Array, norm: Float32Array, bin: Float32Array, offset: number, isCyclic: boolean) {\r\n    this.vNorm.set(0, 0, 1)\r\n    const n = size\r\n    const n1 = n - 1\r\n    let k = offset || 0\r\n    for (var i = 0; i < n1; ++i) {\r\n      this.interpolateNormal(this.vDir, tan, norm, bin, k)\r\n      k += 3 * this.m\r\n    }\r\n    if (isCyclic) {\r\n      this.interpolateNormal(this.vDir, tan, norm, bin, k)\r\n      k += 3 * this.m\r\n    }\r\n    this.vBin.toArray(bin as any, k)\r\n    this.vNorm.toArray(norm as any, k)\r\n  }\r\n\r\n  public getNormalDir (iterDir1: AtomIterator, iterDir2: AtomIterator, tan: Float32Array, norm: Float32Array, bin: Float32Array, offset: number, isCyclic: boolean, shift: boolean) {\r\n    iterDir1.reset()\r\n    iterDir2.reset()\r\n    //\r\n    const vSub1 = new Vector3()\r\n    const vSub2 = new Vector3()\r\n    const vSub3 = new Vector3()\r\n    const vSub4 = new Vector3()\r\n    //\r\n    const d1v1 = new Vector3()\r\n    const d1v2 = new Vector3().copy(<Vector3>iterDir1.next())\r\n    const d1v3 = new Vector3().copy(<Vector3>iterDir1.next())\r\n    const d1v4 = new Vector3().copy(<Vector3>iterDir1.next())\r\n    const d2v1 = new Vector3()\r\n    const d2v2 = new Vector3().copy(<Vector3>iterDir2.next())\r\n    const d2v3 = new Vector3().copy(<Vector3>iterDir2.next())\r\n    const d2v4 = new Vector3().copy(<Vector3>iterDir2.next())\r\n    //\r\n    this.vNorm.set(0, 0, 1)\r\n    let n = iterDir1.size\r\n    let n1 = n - 1\r\n    let k = offset || 0\r\n    for (var i = 0; i < n1; ++i) {\r\n      d1v1.copy(d1v2)\r\n      d1v2.copy(d1v3)\r\n      d1v3.copy(d1v4)\r\n      d1v4.copy(<Vector3>iterDir1.next())\r\n      d2v1.copy(d2v2)\r\n      d2v2.copy(d2v3)\r\n      d2v3.copy(d2v4)\r\n      d2v4.copy(<Vector3>iterDir2.next())\r\n      //\r\n      if (i === 0) {\r\n        vSub1.subVectors(d2v1, d1v1)\r\n        vSub2.subVectors(d2v2, d1v2)\r\n        if (vSub1.dot(vSub2) < 0) {\r\n          vSub2.multiplyScalar(-1)\r\n          d2v2.addVectors(d1v2, vSub2)\r\n        }\r\n        vSub3.subVectors(d2v3, d1v3)\r\n        if (vSub2.dot(vSub3) < 0) {\r\n          vSub3.multiplyScalar(-1)\r\n          d2v3.addVectors(d1v3, vSub3)\r\n        }\r\n      } else {\r\n        vSub3.copy(vSub4)\r\n      }\r\n      vSub4.subVectors(d2v4, d1v4)\r\n      if (vSub3.dot(vSub4) < 0) {\r\n        vSub4.multiplyScalar(-1)\r\n        d2v4.addVectors(d1v4, vSub4)\r\n      }\r\n      this.interpolateNormalDir(\r\n        d1v1, d1v2, d1v3, d1v4,\r\n        d2v1, d2v2, d2v3, d2v4,\r\n        tan, norm, bin, k, shift\r\n      )\r\n      k += 3 * this.m\r\n    }\r\n    if (isCyclic) {\r\n      d1v1.copy(<Vector3>iterDir1.get(n - 2))\r\n      d1v2.copy(<Vector3>iterDir1.get(n - 1))\r\n      d1v3.copy(<Vector3>iterDir1.get(0))\r\n      d1v4.copy(<Vector3>iterDir1.get(1))\r\n      d2v1.copy(<Vector3>iterDir2.get(n - 2))\r\n      d2v2.copy(<Vector3>iterDir2.get(n - 1))\r\n      d2v3.copy(<Vector3>iterDir2.get(0))\r\n      d2v4.copy(<Vector3>iterDir2.get(1))\r\n      //\r\n      vSub3.copy(vSub4)\r\n      vSub4.subVectors(d2v4, d1v4)\r\n      if (vSub3.dot(vSub4) < 0) {\r\n        vSub4.multiplyScalar(-1)\r\n        d2v4.addVectors(d1v4, vSub4)\r\n      }\r\n      this.interpolateNormalDir(\r\n        d1v1, d1v2, d1v3, d1v4,\r\n        d2v1, d2v2, d2v3, d2v4,\r\n        tan, norm, bin, k, shift\r\n      )\r\n      k += 3 * this.m\r\n    }\r\n    if (shift) {\r\n      // FIXME shift requires data from one this.more preceeding residue\r\n      this.vBin.fromArray(bin as any, this.m2 * 3)\r\n      this.vNorm.fromArray(norm as any, this.m2 * 3)\r\n      for (var j = 0; j < this.m2; ++j) {\r\n        this.vBin.toArray(bin as any, j * 3)\r\n        this.vNorm.toArray(norm as any, j * 3)\r\n      }\r\n    } else {\r\n      this.vBin.toArray(bin as any, k)\r\n      this.vNorm.toArray(norm as any, k)\r\n    }\r\n  }\r\n\r\n  //\r\n\r\n  private interpolateColor (item1: AtomProxy, item2: AtomProxy, colFn: (...arg: any[]) => void, col: any, offset: number) {\r\n    var j, l\r\n    for (j = 0; j < this.m2; ++j) {\r\n      l = offset + j * 3\r\n      colFn.apply(this, [item1, col, l]) // itemColorToArray\r\n    }\r\n    for (j = this.m2; j < this.m; ++j) {\r\n      l = offset + j * 3\r\n      colFn.apply(this, [item2, col, l]) // itemColorToArray\r\n    }\r\n  }\r\n\r\n  public getColor (iterator: AtomIterator, colFn: (...arg: any[]) => void, col: any, offset: number, isCyclic: boolean) {\r\n    iterator.reset()\r\n    iterator.next() // first element not needed\r\n    let i0: AtomProxy\r\n    let i1 = <AtomProxy>iterator.next()\r\n    //\r\n    var n = iterator.size\r\n    var n1 = n - 1\r\n    var k = offset || 0\r\n    for (var i = 0; i < n1; ++i) {\r\n      i0 = i1\r\n      i1 = <AtomProxy>iterator.next()\r\n      this.interpolateColor(i0, i1, colFn, col, k)\r\n      k += 3 * this.m\r\n    }\r\n    if (isCyclic) {\r\n      i0 = <AtomProxy>iterator.get(n - 1)\r\n      i1 = <AtomProxy>iterator.get(0)\r\n      this.interpolateColor(i0, i1, colFn, col, k)\r\n      k += 3 * this.m\r\n    }\r\n    //\r\n    col[ k ] = col[ k - 3 ]\r\n    col[ k + 1 ] = col[ k - 2 ]\r\n    col[ k + 2 ] = col[ k - 1 ]\r\n  }\r\n\r\n  //\r\n\r\n  private interpolatePicking (item1: AtomProxy, item2: AtomProxy, pickFn: (item: AtomProxy) => number, pick: Float32Array, offset: number) {\r\n    var j\r\n    for (j = 0; j < this.m2; ++j) {\r\n      pick[ offset + j ] = pickFn.apply(this, [item1])\r\n    }\r\n    for (j = this.m2; j < this.m; ++j) {\r\n      pick[ offset + j ] = pickFn.apply(this, [item2])\r\n    }\r\n  }\r\n\r\n  public getPicking (iterator: AtomIterator, pickFn: (item: AtomProxy) => number, pick: Float32Array, offset: number, isCyclic: boolean) {\r\n    iterator.reset()\r\n    iterator.next() // first element not needed\r\n    let i0: AtomProxy\r\n    let i1 = <AtomProxy>iterator.next()\r\n    //\r\n    const n = iterator.size\r\n    const n1 = n - 1\r\n    let k = offset || 0\r\n    for (var i = 0; i < n1; ++i) {\r\n      i0 = i1\r\n      i1 = <AtomProxy>iterator.next()\r\n      this.interpolatePicking(i0, i1, pickFn, pick, k)\r\n      k += this.m\r\n    }\r\n    if (isCyclic) {\r\n      i0 = <AtomProxy>iterator.get(n - 1)\r\n      i1 = <AtomProxy>iterator.get(0)\r\n      this.interpolatePicking(i0, i1, pickFn, pick, k)\r\n      k += this.m\r\n    }\r\n    //\r\n    pick[ k ] = pick[ k - 1 ]\r\n  }\r\n\r\n  //\r\n\r\n  private interpolateSize (item1: AtomProxy, item2: AtomProxy, sizeFn: (item: AtomProxy) => number, size: Float32Array, offset: number) {\r\n    const s1: number = sizeFn.apply(this, [item1])\r\n    const s2: number = sizeFn.apply(this, [item2])\r\n    for (let j = 0; j < this.m; ++j) {\r\n      // linear interpolation\r\n      let t = j / this.m\r\n      size[ offset + j ] = (1 - t) * s1 + t * s2\r\n    }\r\n  }\r\n\r\n  public getSize (iterator: AtomIterator, sizeFn: (item: AtomProxy) => number, size: Float32Array, offset: number, isCyclic: boolean) {\r\n    iterator.reset()\r\n    iterator.next() // first element not needed\r\n    let i0: AtomProxy\r\n    let i1: AtomProxy = <AtomProxy>iterator.next()\r\n    //\r\n    const n = iterator.size\r\n    const n1 = n - 1\r\n    let k = offset || 0\r\n    for (var i = 0; i < n1; ++i) {\r\n      i0 = i1\r\n      i1 = <AtomProxy>iterator.next()\r\n      this.interpolateSize(i0, i1, sizeFn, size, k)\r\n      k += this.m\r\n    }\r\n    if (isCyclic) {\r\n      i0 = <AtomProxy>iterator.get(n - 1)\r\n      i1 = <AtomProxy>iterator.get(0)\r\n      this.interpolateSize(i0, i1, sizeFn, size, k)\r\n      k += this.m\r\n    }\r\n    //\r\n    size[ k ] = size[ k - 1 ]\r\n  }\r\n}\r\n\r\nexport interface SplineParameters {\r\n  directional?: boolean\r\n  positionIterator?: boolean\r\n  subdiv?: number\r\n  smoothSheet?: boolean\r\n  tension?: number\r\n}\r\nexport interface AtomIterator {\r\n  size: number,\r\n  next: () => AtomProxy | Vector3,\r\n  get: (idx: number) => AtomProxy | Vector3,\r\n  reset: () => void\r\n}\r\nclass Spline {\r\n\r\n  polymer: Polymer\r\n  size: number\r\n  directional: boolean\r\n  positionIterator: any\r\n  subdiv: number\r\n  smoothSheet: boolean\r\n  tension: number\r\n  interpolator: Interpolator\r\n\r\n  constructor (polymer: Polymer, params?: SplineParameters) {\r\n    this.polymer = polymer\r\n      this.size = polymer.residueCount\r\n\r\n      var p = params || {}\r\n      this.directional = p.directional || false\r\n      this.positionIterator = p.positionIterator || false\r\n      this.subdiv = p.subdiv || 1\r\n      this.smoothSheet = p.smoothSheet || false\r\n\r\n      if (!p.tension) {\r\n        this.tension = this.polymer.isNucleic() ? 0.5 : 0.9\r\n      } else {\r\n        this.tension = p.tension\r\n      }\r\n\r\n      this.interpolator = new Interpolator(this.subdiv, this.tension)\r\n  }\r\n\r\n  getAtomIterator (type: string, smooth?: boolean): AtomIterator {\r\n    const polymer = this.polymer\r\n    const structure = polymer.structure\r\n    const n = polymer.residueCount\r\n\r\n    let i = 0\r\n    let j = -1\r\n\r\n    const cache = [\r\n      structure.getAtomProxy(),\r\n      structure.getAtomProxy(),\r\n      structure.getAtomProxy(),\r\n      structure.getAtomProxy()\r\n    ]\r\n\r\n    const cache2 = [\r\n      new Vector3(),\r\n      new Vector3(),\r\n      new Vector3(),\r\n      new Vector3()\r\n    ]\r\n\r\n    function next () {\r\n      var atomProxy = get(j)\r\n      j += 1\r\n      return atomProxy\r\n    }\r\n\r\n    var apPrev = structure.getAtomProxy()\r\n    var apNext = structure.getAtomProxy()\r\n\r\n    function get (idx: number) {\r\n      var atomProxy = cache[ i % 4 ]\r\n      atomProxy.index = polymer.getAtomIndexByType(idx, type) as number\r\n      if (smooth && idx > 0 && idx < n && atomProxy.sstruc === 'e') {\r\n        var vec = cache2[ i % 4 ]\r\n        apPrev.index = polymer.getAtomIndexByType(idx + 1, type) as number\r\n        apNext.index = polymer.getAtomIndexByType(idx - 1, type) as number\r\n        vec.addVectors(apPrev as any, apNext as any)\r\n          .add(atomProxy as any).add(atomProxy as any)\r\n          .multiplyScalar(0.25)\r\n        i += 1\r\n        return vec\r\n      }\r\n      i += 1\r\n      return atomProxy\r\n    }\r\n\r\n    function reset () {\r\n      i = 0\r\n      j = -1\r\n    }\r\n\r\n    return {\r\n      size: n,\r\n      next: next,\r\n      get: get,\r\n      reset: reset\r\n    }\r\n  }\r\n\r\n  getSubdividedColor (params: {scheme: string, [k: string]: any } & ColormakerParameters) {\r\n    var m = this.subdiv\r\n    var polymer = this.polymer\r\n    var n = polymer.residueCount\r\n    var n1 = n - 1\r\n    var nCol = n1 * m * 3 + 3\r\n    if (polymer.isCyclic) nCol += m * 3\r\n\r\n    var col = new Float32Array(nCol)\r\n    var iterator = this.getAtomIterator('trace')\r\n\r\n    var p = params || {}\r\n    p.structure = polymer.structure\r\n\r\n    var colormaker = ColormakerRegistry.getScheme(p)\r\n\r\n    function colFn (item: AtomProxy, array: NumberArray, offset: number) {\r\n      colormaker.atomColorToArray(item, array, offset)\r\n    }\r\n\r\n    this.interpolator.getColor(\r\n      iterator, colFn, col, 0, polymer.isCyclic\r\n    )\r\n\r\n    return {\r\n      'color': col\r\n    }\r\n  }\r\n  \r\n  getSubdividedPicking () {\r\n    var m = this.subdiv\r\n    var polymer = this.polymer\r\n    var n = polymer.residueCount\r\n    var n1 = n - 1\r\n    var nCol = n1 * m + 1\r\n    if (polymer.isCyclic) nCol += m\r\n\r\n    var structure = polymer.structure\r\n    var iterator = this.getAtomIterator('trace')\r\n    var pick = new Float32Array(nCol)\r\n\r\n    function pickFn (item: AtomProxy) {\r\n      return item.index\r\n    }\r\n\r\n    this.interpolator.getPicking(\r\n      iterator, pickFn, pick, 0, polymer.isCyclic\r\n    )\r\n\r\n    return {\r\n      'picking': new AtomPicker(pick, structure)\r\n    }\r\n  }\r\n\r\n  getSubdividedPosition () {\r\n    var pos = this.getPosition()\r\n\r\n    return {\r\n      'position': pos\r\n    }\r\n  }\r\n  \r\n  getSubdividedOrientation () {\r\n    const tan = this.getTangent()\r\n    const normals = this.getNormals(tan)\r\n\r\n    return {\r\n      'tangent': tan,\r\n      'normal': normals.normal,\r\n      'binormal': normals.binormal\r\n    }\r\n  }\r\n\r\n  getSubdividedSize (params: RadiusParams) {\r\n    var m = this.subdiv\r\n    var polymer = this.polymer\r\n    var n = polymer.residueCount\r\n    var n1 = n - 1\r\n    var nSize = n1 * m + 1\r\n    if (polymer.isCyclic) nSize += m\r\n\r\n    var size = new Float32Array(nSize)\r\n    var iterator = this.getAtomIterator('trace')\r\n\r\n    var radiusFactory = new RadiusFactory(params)\r\n\r\n    function sizeFn (item: AtomProxy) {\r\n      return radiusFactory.atomRadius(item)\r\n    }\r\n\r\n    this.interpolator.getSize(\r\n      iterator, sizeFn, size, 0, polymer.isCyclic\r\n    )\r\n\r\n    return {\r\n      'size': size\r\n    }\r\n  }\r\n\r\n  getPosition () {\r\n    const m = this.subdiv\r\n    const polymer = this.polymer\r\n    const n = polymer.residueCount\r\n    const n1 = n - 1\r\n    let nPos = n1 * m * 3 + 3\r\n    if (polymer.isCyclic) nPos += m * 3\r\n\r\n    const pos = new Float32Array(nPos)\r\n    const iterator = this.positionIterator || this.getAtomIterator('trace', this.smoothSheet)\r\n\r\n    this.interpolator.getPosition(iterator, pos, 0, polymer.isCyclic)\r\n\r\n    return pos\r\n  }\r\n\r\n  getTangent () {\r\n    const m = this.subdiv\r\n    const polymer = this.polymer\r\n    const n = this.size\r\n    const n1 = n - 1\r\n    let nTan = n1 * m * 3 + 3\r\n    if (polymer.isCyclic) nTan += m * 3\r\n\r\n    const tan = new Float32Array(nTan)\r\n    const iterator = this.positionIterator || this.getAtomIterator('trace', this.smoothSheet)\r\n\r\n    this.interpolator.getTangent(iterator, tan, 0, polymer.isCyclic)\r\n\r\n    return tan\r\n  }\r\n\r\n  getNormals (tan: Float32Array) {\r\n    const m = this.subdiv\r\n    const polymer = this.polymer\r\n    const isProtein = polymer.isProtein()\r\n    const n = this.size\r\n    const n1 = n - 1\r\n    let nNorm = n1 * m * 3 + 3\r\n    if (polymer.isCyclic) nNorm += m * 3\r\n\r\n    const norm = new Float32Array(nNorm)\r\n    const bin = new Float32Array(nNorm)\r\n\r\n    if (this.directional && !this.polymer.isCg()) {\r\n      const iterDir1 = this.getAtomIterator('direction1')\r\n      const iterDir2 = this.getAtomIterator('direction2')\r\n      this.interpolator.getNormalDir(\r\n        iterDir1, iterDir2, tan, norm, bin, 0, polymer.isCyclic, isProtein\r\n      )\r\n    } else {\r\n      this.interpolator.getNormal(\r\n        n, tan, norm, bin, 0, polymer.isCyclic\r\n      )\r\n    }\r\n\r\n    return {\r\n      'normal': norm,\r\n      'binormal': bin\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default Spline\r\n","/**\r\n * @file Tube Mesh Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\n// @ts-ignore: unused import Matrix4 required for declaration only\r\nimport { Vector3, Matrix4 } from 'three'\r\n\r\nimport { defaults, getUintArray } from '../utils'\r\nimport { serialArray } from '../math/array-utils'\r\nimport MeshBuffer from './mesh-buffer'\r\nimport { BufferDefaultParameters, BufferData, BufferParameters } from './buffer'\r\nimport {Log} from \"../globals\";\r\n\r\nconst vTangent = new Vector3()\r\nconst vMeshNormal = new Vector3()\r\n\r\nexport interface TubeMeshBufferData extends BufferData {\r\n  binormal: Float32Array\r\n  tangent: Float32Array\r\n  size: Float32Array\r\n}\r\n\r\nexport const TubeMeshBufferDefaultParameters = Object.assign({\r\n  radialSegments: 4,\r\n  capped: false,\r\n  aspectRatio: 1.0\r\n}, BufferDefaultParameters)\r\nexport type TubeMeshBufferParameters = BufferParameters & {\r\n  radialSegments: number,\r\n  capped: boolean,\r\n  aspectRatio: number\r\n}\r\n\r\nfunction getData (data: TubeMeshBufferData, params: Partial<TubeMeshBufferParameters> = {}) {\r\n  const radialSegments = defaults(params.radialSegments, 4)\r\n  const capped = defaults(params.capped, false)\r\n\r\n  const capVertices = capped ? radialSegments : 0\r\n  const capTriangles = capped ? radialSegments - 2 : 0\r\n\r\n  const n = data.position!.length / 3\r\n  const n1 = n - 1\r\n  const x = n * radialSegments * 3 + 2 * capVertices * 3\r\n  const xi = n1 * 2 * radialSegments * 3 + 2 * capTriangles * 3\r\n\r\n  return {\r\n    position: new Float32Array(x),\r\n    color: new Float32Array(x),\r\n    index: getUintArray(xi, x / 3),\r\n    normal: new Float32Array(x),\r\n    picking: data.picking\r\n  }\r\n}\r\n\r\n/**\r\n * Tube mesh buffer. Draws a tube.\r\n */\r\nclass TubeMeshBuffer extends MeshBuffer {\r\n  get defaultParameters() { return TubeMeshBufferDefaultParameters }\r\n  parameters: TubeMeshBufferParameters\r\n\r\n  capVertices: number\r\n  capTriangles: number\r\n  size2: number\r\n\r\n  /**\r\n   * @param  {Object} data - attribute object\r\n   * @param  {Float32Array} data.position - positions\r\n   * @param  {Float32Array} data.normal - normals\r\n   * @param  {Float32Array} data.binormal - binormals\r\n   * @param  {Float32Array} data.tangent - tangents\r\n   * @param  {Float32Array} data.color - colors\r\n   * @param  {Float32Array} data.size - sizes\r\n   * @param  {Picker} data.picking - picking ids\r\n   * @param  {BufferParameters} params - parameter object\r\n   */\r\n  constructor (data: TubeMeshBufferData, params: Partial<TubeMeshBufferParameters> = {}) {\r\n    super(getData(data, params), params)\r\n\r\n    this.capVertices = this.parameters.capped ? this.parameters.radialSegments : 0\r\n    this.capTriangles = this.parameters.capped ? this.parameters.radialSegments - 2 : 0\r\n\r\n    this.size2 = data.position!.length / 3\r\n    data.primitiveId = serialArray(this.size2)\r\n\r\n    this.setAttributes(data)\r\n    this.makeIndex()\r\n  }\r\n\r\n  setAttributes (data: Partial<TubeMeshBufferData> = {}) {\r\n    const aspectRatio = this.parameters.aspectRatio\r\n\r\n    const n = this.size2\r\n    const n1 = n - 1\r\n    const radialSegments = this.parameters.radialSegments\r\n\r\n    const attributes = this.geometry.attributes as any\r\n\r\n    let position, normal, binormal, tangent, color, size, primitiveId\r\n    let meshPosition, meshColor, meshNormal, meshPrimitiveId\r\n\r\n    if (data.position) {\r\n      position = data.position\r\n      normal = data.normal\r\n      binormal = data.binormal\r\n      tangent = data.tangent\r\n      size = data.size\r\n\r\n      meshPosition = attributes.position.array\r\n      meshNormal = attributes.normal.array\r\n\r\n      attributes.position.needsUpdate = true\r\n      attributes.normal.needsUpdate = true\r\n    }\r\n\r\n    if (data.color) {\r\n      color = data.color\r\n      meshColor = attributes.color.array\r\n      attributes.color.needsUpdate = true\r\n    }\r\n\r\n    if (data.primitiveId) {\r\n      primitiveId = data.primitiveId\r\n      meshPrimitiveId = attributes.primitiveId.array\r\n      attributes.primitiveId.needsUpdate = true\r\n    }\r\n\r\n    let k, l\r\n    let radius = 0\r\n\r\n    let normX = 0\r\n    let normY = 0\r\n    let normZ = 0\r\n    let biX = 0\r\n    let biY = 0\r\n    let biZ = 0\r\n    let posX = 0\r\n    let posY = 0\r\n    let posZ = 0\r\n\r\n    const cxArr = []\r\n    const cyArr = []\r\n    const cx1Arr = []\r\n    const cy1Arr = []\r\n    const cx2Arr = []\r\n    const cy2Arr = []\r\n\r\n    if (position) {\r\n      for (let j = 0; j < radialSegments; ++j) {\r\n        const v = (j / radialSegments) * 2 * Math.PI\r\n\r\n        cxArr[ j ] = aspectRatio * Math.cos(v)\r\n        cyArr[ j ] = Math.sin(v)\r\n\r\n        cx1Arr[ j ] = aspectRatio * Math.cos(v - 0.01)\r\n        cy1Arr[ j ] = Math.sin(v - 0.01)\r\n        cx2Arr[ j ] = aspectRatio * Math.cos(v + 0.01)\r\n        cy2Arr[ j ] = Math.sin(v + 0.01)\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < n; ++i) {\r\n      k = i * 3\r\n      l = k * radialSegments\r\n\r\n      if (position && tangent && normal && binormal && size) {\r\n        vTangent.set(\r\n          tangent[ k ], tangent[ k + 1 ], tangent[ k + 2 ]\r\n        )\r\n\r\n        normX = normal[ k ]\r\n        normY = normal[ k + 1 ]\r\n        normZ = normal[ k + 2 ]\r\n\r\n        biX = binormal[ k ]\r\n        biY = binormal[ k + 1 ]\r\n        biZ = binormal[ k + 2 ]\r\n\r\n        posX = position[ k ]\r\n        posY = position[ k + 1 ]\r\n        posZ = position[ k + 2 ]\r\n\r\n        radius = size[ i ]\r\n      }\r\n\r\n      for (let j = 0; j < radialSegments; ++j) {\r\n        const s = l + j * 3\r\n\r\n        if (position) {\r\n          const cx = -radius * cxArr[ j ] // TODO: Hack: Negating it so it faces outside.\r\n          const cy = radius * cyArr[ j ]\r\n\r\n          const cx1 = -radius * cx1Arr[ j ]\r\n          const cy1 = radius * cy1Arr[ j ]\r\n          const cx2 = -radius * cx2Arr[ j ]\r\n          const cy2 = radius * cy2Arr[ j ]\r\n\r\n          meshPosition[ s ] = posX + cx * normX + cy * biX\r\n          meshPosition[ s + 1 ] = posY + cx * normY + cy * biY\r\n          meshPosition[ s + 2 ] = posZ + cx * normZ + cy * biZ\r\n\r\n                    // TODO half of these are symmetric\r\n          vMeshNormal.set(\r\n            // ellipse tangent approximated as vector from/to adjacent points\r\n            (cx2 * normX + cy2 * biX) - (cx1 * normX + cy1 * biX),\r\n            (cx2 * normY + cy2 * biY) - (cx1 * normY + cy1 * biY),\r\n            (cx2 * normZ + cy2 * biZ) - (cx1 * normZ + cy1 * biZ)\r\n          ).cross(vTangent)\r\n\r\n          meshNormal[ s ] = vMeshNormal.x\r\n          meshNormal[ s + 1 ] = vMeshNormal.y\r\n          meshNormal[ s + 2 ] = vMeshNormal.z\r\n        }\r\n\r\n        if (color) {\r\n          meshColor[ s ] = color[ k ]\r\n          meshColor[ s + 1 ] = color[ k + 1 ]\r\n          meshColor[ s + 2 ] = color[ k + 2 ]\r\n        }\r\n\r\n        if (primitiveId) {\r\n          meshPrimitiveId[ i * radialSegments + j ] = primitiveId[ i ]\r\n        }\r\n      }\r\n    }\r\n\r\n        // front cap\r\n\r\n    k = 0\r\n    l = n * 3 * radialSegments\r\n\r\n    for (let j = 0; j < radialSegments; ++j) {\r\n      const s = k + j * 3\r\n      const t = l + j * 3\r\n\r\n      if (position && tangent) {\r\n        meshPosition[ t ] = meshPosition[ s ]\r\n        meshPosition[ t + 1 ] = meshPosition[ s + 1 ]\r\n        meshPosition[ t + 2 ] = meshPosition[ s + 2 ]\r\n\r\n        meshNormal[ t ] = tangent[ k ]\r\n        meshNormal[ t + 1 ] = tangent[ k + 1 ]\r\n        meshNormal[ t + 2 ] = tangent[ k + 2 ]\r\n      }\r\n\r\n      if (color) {\r\n        meshColor[ t ] = meshColor[ s ]\r\n        meshColor[ t + 1 ] = meshColor[ s + 1 ]\r\n        meshColor[ t + 2 ] = meshColor[ s + 2 ]\r\n      }\r\n\r\n      if (primitiveId) {\r\n        meshPrimitiveId[ n * radialSegments + j ] = meshPrimitiveId[ 0 + j ]\r\n      }\r\n    }\r\n\r\n        // back cap\r\n\r\n    k = (n - 1) * 3 * radialSegments\r\n    l = (n + 1) * 3 * radialSegments\r\n\r\n    for (let j = 0; j < radialSegments; ++j) {\r\n      const s = k + j * 3\r\n      const t = l + j * 3\r\n\r\n      if (position && tangent) {\r\n        meshPosition[ t ] = meshPosition[ s ]\r\n        meshPosition[ t + 1 ] = meshPosition[ s + 1 ]\r\n        meshPosition[ t + 2 ] = meshPosition[ s + 2 ]\r\n\r\n        meshNormal[ t ] = tangent[ n1 * 3 ]\r\n        meshNormal[ t + 1 ] = tangent[ n1 * 3 + 1 ]\r\n        meshNormal[ t + 2 ] = tangent[ n1 * 3 + 2 ]\r\n      }\r\n\r\n      if (color) {\r\n        meshColor[ t ] = meshColor[ s ]\r\n        meshColor[ t + 1 ] = meshColor[ s + 1 ]\r\n        meshColor[ t + 2 ] = meshColor[ s + 2 ]\r\n      }\r\n\r\n      if (primitiveId) {\r\n        meshPrimitiveId[ (n + 1) * radialSegments + j ] = meshPrimitiveId[ (n - 1) * radialSegments + j ]\r\n      }\r\n    }\r\n  }\r\n\r\n  makeIndex () {\r\n    const index = this.geometry.getIndex()\r\n    if (!index) { Log.error('Index is null'); return; }\r\n    const meshIndex = index.array as Uint32Array|Uint16Array\r\n\r\n    const n = this.size2\r\n    const n1 = n - 1\r\n    const capTriangles = this.capTriangles\r\n    const radialSegments = this.parameters.radialSegments\r\n    const radialSegments1 = this.parameters.radialSegments + 1\r\n\r\n    let k, l\r\n\r\n    for (let i = 0; i < n1; ++i) {\r\n      const k = i * radialSegments * 3 * 2\r\n\r\n      const irs = i * radialSegments\r\n      const irs1 = (i + 1) * radialSegments\r\n\r\n      for (let j = 0; j < radialSegments; ++j) {\r\n        l = k + j * 3 * 2\r\n\r\n        // meshIndex[ l + 0 ] = irs + ( ( j + 0 ) % radialSegments );\r\n        meshIndex[ l ] = irs + j\r\n        meshIndex[ l + 1 ] = irs + ((j + 1) % radialSegments)\r\n        // meshIndex[ l + 2 ] = irs1 + ( ( j + 0 ) % radialSegments );\r\n        meshIndex[ l + 2 ] = irs1 + j\r\n\r\n        // meshIndex[ l + 3 ] = irs1 + ( ( j + 0 ) % radialSegments );\r\n        meshIndex[ l + 3 ] = irs1 + j\r\n        meshIndex[ l + 4 ] = irs + ((j + 1) % radialSegments)\r\n        meshIndex[ l + 5 ] = irs1 + ((j + 1) % radialSegments)\r\n      }\r\n    }\r\n\r\n    // capping\r\n\r\n    const strip = [ 0 ]\r\n\r\n    for (let j = 1; j < radialSegments1 / 2; ++j) {\r\n      strip.push(j)\r\n      if (radialSegments - j !== j) {\r\n        strip.push(radialSegments - j)\r\n      }\r\n    }\r\n\r\n    // front cap\r\n\r\n    l = n1 * radialSegments * 3 * 2\r\n    k = n * radialSegments\r\n\r\n    for (let j = 0; j < strip.length - 2; ++j) {\r\n      if (j % 2 === 0) {\r\n        meshIndex[ l + j * 3 + 0 ] = k + strip[ j + 0 ]\r\n        meshIndex[ l + j * 3 + 1 ] = k + strip[ j + 1 ]\r\n        meshIndex[ l + j * 3 + 2 ] = k + strip[ j + 2 ]\r\n      } else {\r\n        meshIndex[ l + j * 3 + 0 ] = k + strip[ j + 2 ]\r\n        meshIndex[ l + j * 3 + 1 ] = k + strip[ j + 1 ]\r\n        meshIndex[ l + j * 3 + 2 ] = k + strip[ j + 0 ]\r\n      }\r\n    }\r\n\r\n    // back cap\r\n\r\n    l = n1 * radialSegments * 3 * 2 + 3 * capTriangles\r\n    k = n * radialSegments + radialSegments\r\n\r\n    for (let j = 0; j < strip.length - 2; ++j) {\r\n      if (j % 2 === 0) {\r\n        meshIndex[ l + j * 3 + 0 ] = k + strip[ j + 0 ]\r\n        meshIndex[ l + j * 3 + 1 ] = k + strip[ j + 1 ]\r\n        meshIndex[ l + j * 3 + 2 ] = k + strip[ j + 2 ]\r\n      } else {\r\n        meshIndex[ l + j * 3 + 0 ] = k + strip[ j + 2 ]\r\n        meshIndex[ l + j * 3 + 1 ] = k + strip[ j + 1 ]\r\n        meshIndex[ l + j * 3 + 2 ] = k + strip[ j + 0 ]\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default TubeMeshBuffer\r\n","/**\r\n * @file Cartoon Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { defaults } from '../utils'\r\nimport { Debug, Log, RepresentationRegistry } from '../globals'\r\nimport Spline from '../geometry/spline'\r\nimport StructureRepresentation, { StructureRepresentationParameters, StructureRepresentationData } from './structure-representation'\r\nimport TubeMeshBuffer from '../buffer/tubemesh-buffer'\r\nimport { Structure } from '../ngl';\r\nimport Viewer from '../viewer/viewer';\r\nimport Polymer from '../proxy/polymer';\r\nimport AtomProxy from '../proxy/atom-proxy';\r\nimport StructureView from '../structure/structure-view';\r\nimport Buffer from '../buffer/buffer';\r\n\r\nexport interface CartoonRepresentationParameters extends StructureRepresentationParameters {\r\n  aspectRatio: number\r\n  subdiv: number\r\n  radialSegments: number\r\n  tension: number\r\n  capped: boolean\r\n  smoothSheet: boolean\r\n}\r\n\r\n/**\r\n * Cartoon representation. Show a thick ribbon that\r\n * smoothly connecting backbone atoms in polymers.\r\n *\r\n * __Name:__ _cartoon_\r\n *\r\n * @example\r\n * stage.loadFile( \"rcsb://1crn\" ).then( function( o ){\r\n *     o.addRepresentation( \"cartoon\" );\r\n *     o.autoView();\r\n * } );\r\n */\r\nclass CartoonRepresentation extends StructureRepresentation {\r\n  protected aspectRatio: number\r\n  protected tension: number\r\n  protected capped: boolean\r\n  protected smoothSheet: boolean\r\n  protected subdiv: number\r\n  \r\n  /**\r\n   * Create Cartoon representation object\r\n   * @param {Structure} structure - the structure to be represented\r\n   * @param {Viewer} viewer - a viewer object\r\n   * @param {StructureRepresentationParameters} params - representation parameters\r\n   */\r\n  constructor (structure: Structure, viewer: Viewer, params: Partial<CartoonRepresentationParameters>) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'cartoon'\r\n\r\n    this.parameters = Object.assign({\r\n\r\n      aspectRatio: {\r\n        type: 'number', precision: 1, max: 10.0, min: 1.0, rebuild: true\r\n      },\r\n      subdiv: {\r\n        type: 'integer', max: 50, min: 1, rebuild: true\r\n      },\r\n      radialSegments: {\r\n        type: 'integer', max: 50, min: 1, rebuild: true\r\n      },\r\n      tension: {\r\n        type: 'number', precision: 1, max: 1.0, min: 0.1\r\n      },\r\n      capped: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n      smoothSheet: {\r\n        type: 'boolean', rebuild: true\r\n      }\r\n\r\n    }, this.parameters)\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params: Partial<CartoonRepresentationParameters>) {\r\n    var p = params || {}\r\n    p.colorScheme = defaults(p.colorScheme, 'chainname')\r\n    p.colorScale = defaults(p.colorScale, 'RdYlBu')\r\n    p.radiusType = defaults(p.radiusType, 'sstruc')\r\n    p.radiusScale = defaults(p.radiusScale, 0.7)\r\n    p.useInteriorColor = defaults(p.useInteriorColor, true)\r\n\r\n    this.aspectRatio = defaults(p.aspectRatio, 5.0)\r\n    this.tension = defaults(p.tension, NaN)\r\n    this.capped = defaults(p.capped, true)\r\n    this.smoothSheet = defaults(p.smoothSheet, false)\r\n\r\n    if (p.quality === 'low') {\r\n      this.subdiv = 3\r\n      this.radialSegments = 6\r\n    } else if (p.quality === 'medium') {\r\n      this.subdiv = 6\r\n    } else if (p.quality === 'high') {\r\n      this.subdiv = 12\r\n    } else {\r\n      this.subdiv = defaults(p.subdiv, 6)\r\n    }\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  getSplineParams (params?: Partial<CartoonRepresentationParameters>) {\r\n    return Object.assign({\r\n      subdiv: this.subdiv,\r\n      tension: this.tension,\r\n      directional: this.aspectRatio !== 1.0,\r\n      smoothSheet: this.smoothSheet\r\n    }, params)\r\n  }\r\n\r\n  getSpline (polymer: Polymer): Spline {\r\n    return new Spline(polymer, this.getSplineParams())\r\n  }\r\n\r\n  getAspectRatio (polymer: Polymer): number {\r\n    return polymer.isCg() ? 1.0 : this.aspectRatio\r\n  }\r\n\r\n  getAtomRadius (atom: AtomProxy): number {\r\n    return atom.isTrace() ? super.getAtomRadius(atom) : 0\r\n  }\r\n\r\n  createData (sview: StructureView) {\r\n    let bufferList: Buffer[] = []\r\n    let polymerList: Polymer[] = []\r\n\r\n    this.structure.eachPolymer(polymer => {\r\n      if (polymer.residueCount < 4) return\r\n      polymerList.push(polymer)\r\n\r\n      const spline = this.getSpline(polymer)\r\n      const aspectRatio = this.getAspectRatio(polymer)\r\n\r\n      const subPos = spline.getSubdividedPosition()\r\n      const subOri = spline.getSubdividedOrientation()\r\n      const subCol = spline.getSubdividedColor(this.getColorParams())\r\n      const subPick = spline.getSubdividedPicking()\r\n      const subSize = spline.getSubdividedSize(this.getRadiusParams())\r\n\r\n      bufferList.push(\r\n        new TubeMeshBuffer(\r\n          Object.assign({}, subPos, subOri, subCol, subPick, subSize),\r\n          this.getBufferParams({\r\n            radialSegments: this.radialSegments,\r\n            aspectRatio: aspectRatio,\r\n            capped: this.capped\r\n          })\r\n        )\r\n      )\r\n    }, sview.getSelection())\r\n\r\n    return {\r\n      bufferList: bufferList,\r\n      polymerList: polymerList\r\n    }\r\n  }\r\n\r\n  updateData (what: any, data: StructureRepresentationData) {\r\n    if (Debug) Log.time(this.type + ' repr update')\r\n\r\n    what = what || {}\r\n\r\n    for (var i = 0, il = data.polymerList!.length; i < il; ++i) {\r\n      var bufferData: {[key: string]: any} = {}\r\n      var polymer = data.polymerList![ i ]\r\n      var spline = this.getSpline(polymer)\r\n      var aspectRatio = this.getAspectRatio(polymer)\r\n\r\n      Object.assign(data.bufferList[ i ], {aspectRatio: aspectRatio})\r\n\r\n      if (what.position || what.radius) {\r\n        var subPos = spline.getSubdividedPosition()\r\n        var subOri = spline.getSubdividedOrientation()\r\n        var subSize = spline.getSubdividedSize(this.getRadiusParams(aspectRatio))\r\n\r\n        bufferData.position = subPos.position\r\n        bufferData.normal = subOri.normal\r\n        bufferData.binormal = subOri.binormal\r\n        bufferData.tangent = subOri.tangent\r\n        bufferData.size = subSize.size\r\n      }\r\n\r\n      if (what.color) {\r\n        var subCol = spline.getSubdividedColor(this.getColorParams())\r\n        bufferData.color = subCol.color\r\n      }\r\n\r\n      if (what.picking) {\r\n        var subPick = spline.getSubdividedPicking()\r\n        bufferData.picking = subPick.picking\r\n      }\r\n\r\n      data.bufferList[ i ].setAttributes(bufferData)\r\n    }\r\n\r\n    if (Debug) Log.timeEnd(this.type + ' repr update')\r\n  }\r\n\r\n  setParameters (params: Partial<CartoonRepresentationParameters>) {\r\n    const rebuild = false\r\n    var what: {[k: string]: any} = {}\r\n\r\n    if (params && params.aspectRatio) {\r\n      what.radius = true\r\n    }\r\n\r\n    if (params && params.tension) {\r\n      what.position = true\r\n    }\r\n\r\n    super.setParameters(params, what, rebuild)\r\n\r\n    return this\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('cartoon', CartoonRepresentation)\r\n\r\nexport default CartoonRepresentation\r\n","/**\r\n * @file Contact Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { defaults } from '../utils'\r\nimport { RepresentationRegistry } from '../globals'\r\nimport StructureRepresentation, { StructureRepresentationParameters } from './structure-representation'\r\nimport { calculateContacts, getContactData, getLabelData } from '../chemistry/interactions/contact'\r\nimport CylinderBuffer from '../buffer/cylinder-buffer'\r\nimport TextBuffer from '../buffer/text-buffer'\r\nimport { getFixedCountDashData } from '../geometry/dash'\r\nimport Viewer from '../viewer/viewer';\r\nimport { Structure } from '../ngl';\r\nimport StructureView from '../structure/structure-view';\r\nimport CylinderGeometryBuffer from '../buffer/cylindergeometry-buffer';\r\nimport CylinderImpostorBuffer from '../buffer/cylinderimpostor-buffer';\r\n// @ts-ignore: unused import ContactPicker required for declaration only\r\nimport { ContactPicker } from '../utils/picker';\r\n\r\nexport interface ContactRepresentationParameters extends StructureRepresentationParameters {\r\n  hydrogenBond: boolean\r\n  weakHydrogenBond: boolean\r\n  waterHydrogenBond: boolean\r\n  backboneHydrogenBond: boolean\r\n  hydrophobic: boolean\r\n  halogenBond: boolean\r\n  ionicInteraction: boolean\r\n  metalCoordination: boolean\r\n  cationPi: boolean\r\n  piStacking: boolean\r\n  filterSele: string|[string, string]\r\n  maxHydrophobicDist: number\r\n  maxHbondDist: number\r\n  maxHbondSulfurDist: number\r\n  maxHbondAccAngle: number\r\n  maxHbondDonAngle: number\r\n  maxHbondAccPlaneAngle: number\r\n  maxHbondDonPlaneAngle: number\r\n  maxPiStackingDist: number\r\n  maxPiStackingOffset: number\r\n  maxPiStackingAngle: number\r\n  maxCationPiDist: number\r\n  maxCationPiOffset: number\r\n  maxIonicDist: number\r\n  maxHalogenBondDist: number\r\n  maxHalogenBondAngle: number\r\n  maxMetalDist: number\r\n  refineSaltBridges: boolean\r\n  masterModelIndex: number\r\n  lineOfSightDistFactor: number\r\n}\r\n\r\n/**\r\n * Contact representation.\r\n */\r\nclass ContactRepresentation extends StructureRepresentation {\r\n  protected hydrogenBond: boolean\r\n  protected weakHydrogenBond: boolean\r\n  protected waterHydrogenBond: boolean\r\n  protected backboneHydrogenBond: boolean\r\n  protected hydrophobic: boolean\r\n  protected halogenBond: boolean\r\n  protected ionicInteraction: boolean\r\n  protected metalCoordination: boolean\r\n  protected cationPi: boolean\r\n  protected piStacking: boolean\r\n  protected filterSele: string|[string, string]\r\n  protected maxHydrophobicDist: number\r\n  protected maxHbondDist: number\r\n  protected maxHbondSulfurDist: number\r\n  protected maxHbondAccAngle: number\r\n  protected maxHbondDonAngle: number\r\n  protected maxHbondAccPlaneAngle: number\r\n  protected maxHbondDonPlaneAngle: number\r\n  protected maxPiStackingDist: number\r\n  protected maxPiStackingOffset: number\r\n  protected maxPiStackingAngle: number\r\n  protected maxCationPiDist: number\r\n  protected maxCationPiOffset: number\r\n  protected maxIonicDist: number\r\n  protected maxHalogenBondDist: number\r\n  protected maxHalogenBondAngle: number\r\n  protected maxMetalDist: number\r\n  protected refineSaltBridges: boolean\r\n  protected masterModelIndex: number\r\n  protected lineOfSightDistFactor: number\r\n\r\n  constructor (structure: Structure, viewer: Viewer, params: Partial<ContactRepresentationParameters>) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'contact'\r\n\r\n    this.parameters = Object.assign({\r\n      hydrogenBond: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n      weakHydrogenBond: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n      waterHydrogenBond: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n      backboneHydrogenBond: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n      hydrophobic: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n      halogenBond: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n      ionicInteraction: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n      metalCoordination: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n      cationPi: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n      piStacking: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n\r\n      filterSele: {\r\n        type: 'text', rebuild: true\r\n      },\r\n\r\n      labelVisible: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n\r\n      labelFixedSize: {\r\n        type: 'boolean', buffer: 'fixedSize'\r\n      },\r\n\r\n      labelSize: {\r\n        type: 'number', precision: 3, max: 10.0, min: 0.001, rebuild: true\r\n      },\r\n\r\n      labelUnit: {\r\n        type: 'select',\r\n        rebuild: true,\r\n        options: { '': '', angstrom: 'angstrom', nm: 'nm' }\r\n      },\r\n\r\n      maxHydrophobicDist: {\r\n        type: 'number', precision: 1, max: 10, min: 0.1, rebuild: true\r\n      },\r\n      maxHbondDist: {\r\n        type: 'number', precision: 1, max: 10, min: 0.1, rebuild: true\r\n      },\r\n      maxHbondSulfurDist: {\r\n        type: 'number', precision: 1, max: 10, min: 0.1, rebuild: true\r\n      },\r\n      maxHbondAccAngle: {\r\n        type: 'integer', max: 180, min: 0, rebuild: true\r\n      },\r\n      maxHbondDonAngle: {\r\n        type: 'integer', max: 180, min: 0, rebuild: true\r\n      },\r\n      maxHbondAccPlaneAngle: {\r\n        type: 'integer', max: 90, min: 0, rebuild: true\r\n      },\r\n      maxHbondDonPlaneAngle: {\r\n        type: 'integer', max: 90, min: 0, rebuild: true\r\n      },\r\n      maxPiStackingDist: {\r\n        type: 'number', precision: 1, max: 10, min: 0.1, rebuild: true\r\n      },\r\n      maxPiStackingOffset: {\r\n        type: 'number', precision: 1, max: 10, min: 0.1, rebuild: true\r\n      },\r\n      maxPiStackingAngle: {\r\n        type: 'integer', max: 180, min: 0, rebuild: true\r\n      },\r\n      maxCationPiDist: {\r\n        type: 'number', precision: 1, max: 10, min: 0.1, rebuild: true\r\n      },\r\n      maxCationPiOffset: {\r\n        type: 'number', precision: 1, max: 10, min: 0.1, rebuild: true\r\n      },\r\n      maxIonicDist: {\r\n        type: 'number', precision: 1, max: 10, min: 0.1, rebuild: true\r\n      },\r\n      maxHalogenBondDist: {\r\n        type: 'number', precision: 1, max: 10, min: 0.1, rebuild: true\r\n      },\r\n      maxHalogenBondAngle: {\r\n        type: 'integer', max: 180, min: 0, rebuild: true\r\n      },\r\n      maxMetalDist: {\r\n        type: 'number', precision: 1, max: 10, min: 0.1, rebuild: true\r\n      },\r\n      refineSaltBridges: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n      masterModelIndex: {\r\n        type: 'integer', max: 1000, min: -1, rebuild: true\r\n      },\r\n      lineOfSightDistFactor: {\r\n        type: 'number', precision: 1, max: 10, min: 0.0, rebuild: true\r\n      },\r\n\r\n      radialSegments: true,\r\n      disableImpostor: true\r\n    }, this.parameters)\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params: Partial<ContactRepresentationParameters>) {\r\n    var p = params || {}\r\n    p.radiusSize = defaults(p.radiusSize, 0.05)\r\n    p.useInteriorColor = defaults(p.useInteriorColor, true)\r\n\r\n    this.hydrogenBond = defaults(p.hydrogenBond, true)\r\n    this.weakHydrogenBond = defaults(p.weakHydrogenBond, false)\r\n    this.waterHydrogenBond = defaults(p.waterHydrogenBond, false)\r\n    this.backboneHydrogenBond = defaults(p.backboneHydrogenBond, false)\r\n    this.hydrophobic = defaults(p.hydrophobic, false)\r\n    this.halogenBond = defaults(p.halogenBond, true)\r\n    this.ionicInteraction = defaults(p.ionicInteraction, true)\r\n    this.metalCoordination = defaults(p.metalCoordination, true)\r\n    this.cationPi = defaults(p.cationPi, true)\r\n    this.piStacking = defaults(p.piStacking, true)\r\n\r\n    this.filterSele = defaults(p.filterSele, '')\r\n    this.labelVisible = defaults(p.labelVisible, false)\r\n    this.labelFixedSize = defaults(p.labelFixedSize, false)\r\n    this.labelSize = defaults(p.labelSize, 2.0)\r\n    this.labelUnit = defaults(p.labelUnit, '')\r\n\r\n    this.maxHydrophobicDist = defaults(p.maxHydrophobicDist, 4.0)\r\n    this.maxHbondDist = defaults(p.maxHbondDist, 3.5)\r\n    this.maxHbondSulfurDist = defaults(p.maxHbondSulfurDist, 4.1)\r\n    this.maxHbondAccAngle = defaults(p.maxHbondAccAngle, 45)\r\n    this.maxHbondDonAngle = defaults(p.maxHbondDonAngle, 45)\r\n    this.maxHbondAccPlaneAngle = defaults(p.maxHbondAccPlaneAngle, 90)\r\n    this.maxHbondDonPlaneAngle = defaults(p.maxHbondDonPlaneAngle, 30)\r\n    this.maxPiStackingDist = defaults(p.maxPiStackingDist, 5.5)\r\n    this.maxPiStackingOffset = defaults(p.maxPiStackingOffset, 2.0)\r\n    this.maxPiStackingAngle = defaults(p.maxPiStackingAngle, 30)\r\n    this.maxCationPiDist = defaults(p.maxCationPiDist, 6.0)\r\n    this.maxCationPiOffset = defaults(p.maxCationPiOffset, 2.0)\r\n    this.maxIonicDist = defaults(p.maxIonicDist, 5.0)\r\n    this.maxHalogenBondDist = defaults(p.maxHalogenBondDist, 3.5)\r\n    this.maxHalogenBondAngle = defaults(p.maxHalogenBondAngle, 30)\r\n    this.maxMetalDist = defaults(p.maxMetalDist, 3.0)\r\n    this.refineSaltBridges = defaults(p.refineSaltBridges, true)\r\n    this.masterModelIndex = defaults(p.masterModelIndex, -1)\r\n    this.lineOfSightDistFactor = defaults(p.lineOfSightDistFactor, 1.0)\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  getAtomRadius () {\r\n    return 0\r\n  }\r\n\r\n  getContactData (sview: StructureView) {\r\n    const params = {\r\n      maxHydrophobicDist: this.maxHydrophobicDist,\r\n      maxHbondDist: this.maxHbondDist,\r\n      maxHbondSulfurDist: this.maxHbondSulfurDist,\r\n      maxHbondAccAngle: this.maxHbondAccAngle,\r\n      maxHbondDonAngle: this.maxHbondDonAngle,\r\n      maxHbondAccPlaneAngle: this.maxHbondAccPlaneAngle,\r\n      maxHbondDonPlaneAngle: this.maxHbondDonPlaneAngle,\r\n      maxPiStackingDist: this.maxPiStackingDist,\r\n      maxPiStackingOffset: this.maxPiStackingOffset,\r\n      maxPiStackingAngle: this.maxPiStackingAngle,\r\n      maxCationPiDist: this.maxCationPiDist,\r\n      maxCationPiOffset: this.maxCationPiOffset,\r\n      maxIonicDist: this.maxIonicDist,\r\n      maxHalogenBondDist: this.maxHalogenBondDist,\r\n      maxHalogenBondAngle: this.maxHalogenBondAngle,\r\n      maxMetalDist: this.maxMetalDist,\r\n      refineSaltBridges: this.refineSaltBridges,\r\n      masterModelIndex: this.masterModelIndex,\r\n      lineOfSightDistFactor: this.lineOfSightDistFactor\r\n    }\r\n\r\n    const dataParams = {\r\n      hydrogenBond: this.hydrogenBond,\r\n      weakHydrogenBond: this.weakHydrogenBond,\r\n      waterHydrogenBond: this.waterHydrogenBond,\r\n      backboneHydrogenBond: this.backboneHydrogenBond,\r\n      hydrophobic: this.hydrophobic,\r\n      halogenBond: this.halogenBond,\r\n      ionicInteraction: this.ionicInteraction,\r\n      metalCoordination: this.metalCoordination,\r\n      cationPi: this.cationPi,\r\n      piStacking: this.piStacking,\r\n      radius: this.radiusSize * this.radiusScale,\r\n      filterSele: this.filterSele\r\n    }\r\n\r\n    const contacts = calculateContacts(sview, params)\r\n    return getContactData(contacts, sview, dataParams)\r\n  }\r\n\r\n  createData (sview: StructureView) {\r\n    const contactData = this.getContactData(sview)\r\n\r\n    const bufferList = [\r\n      new CylinderBuffer(\r\n        getFixedCountDashData(contactData),\r\n        this.getBufferParams({\r\n          sphereDetail: 1,\r\n          dullInterior: true,\r\n          disableImpostor: this.disableImpostor\r\n        })\r\n      ) as (CylinderGeometryBuffer | CylinderImpostorBuffer | TextBuffer)\r\n    ]\r\n\r\n    if (this.labelVisible) {\r\n      const labelParams = {\r\n        size: this.labelSize,\r\n        unit: this.labelUnit\r\n      }\r\n      bufferList.push(new TextBuffer(\r\n        getLabelData(contactData, labelParams),\r\n        this.getBufferParams({fixedSize: this.labelFixedSize})\r\n      ))\r\n    }\r\n\r\n    return { bufferList }\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('contact', ContactRepresentation)\r\n\r\nexport default ContactRepresentation\r\n","/**\r\n * @file Dihedral Representation\r\n * @author Fred Ludlow <fred.ludlow@gmail.com>\r\n * @private\r\n */\r\nimport { Color } from 'three'\r\n\r\nimport { RepresentationRegistry } from '../globals'\r\nimport MeasurementRepresentation, { calcArcPoint, parseNestedAtoms, MeasurementRepresentationParameters, LabelDataField } from './measurement-representation'\r\nimport { defaults } from '../utils'\r\n\r\nimport MeshBuffer from '../buffer/mesh-buffer'\r\nimport TextBuffer, { TextBufferData } from '../buffer/text-buffer'\r\nimport WideLineBuffer from '../buffer/wideline-buffer'\r\n\r\nimport { copyArray, uniformArray, uniformArray3 } from '../math/array-utils'\r\nimport { v3add, v3angle, v3cross, v3dot, v3multiplyScalar, v3fromArray, v3length,\r\n  v3negate, v3new, v3normalize, v3sub, v3toArray } from '../math/vector-utils'\r\nimport { RAD2DEG } from '../math/math-constants'\r\nimport { getFixedLengthWrappedDashData } from '../geometry/dash'\r\nimport { Structure } from '../ngl';\r\nimport Viewer from '../viewer/viewer';\r\nimport StructureView from '../structure/structure-view';\r\nimport { CylinderBufferData } from '../buffer/cylinder-buffer';\r\nimport { BufferData } from '../buffer/buffer';\r\nimport { StructureRepresentationData } from './structure-representation';\r\n\r\n/**\r\n * @typedef {Object} DihedralRepresentationParameters - dihedral representation parameters\r\n * @mixes RepresentationParameters\r\n * @mixes StructureRepresentationParameters\r\n * @mixes MeasurementRepresentationParameters\r\n *\r\n * @property {String} atomQuad - list of quadruplets of selection strings\r\n *                               or atom indices\r\n * @property {Boolean} extendLine - Extend lines in planes\r\n * @property {Number} lineOpacity - Opacity for the line part of the representation\r\n * @property {Boolean} lineVisible - Display the line part of the representation\r\n * @property {Number} linewidth - width for line part of representation\r\n * @property {Boolean} planeVisible - Display the two planes corresponding to dihedral\r\n * @property {Boolean} sectorVisible - Display the filled arc for each angle\r\n */\r\n\r\nexport interface DihedralRepresentationParameters extends MeasurementRepresentationParameters {\r\n  atomQuad: (number|string)[][]\r\n  extendLine: boolean\r\n  lineOpacity: number\r\n  lineVisible: boolean\r\n  linewidth: number\r\n  planeVisible: boolean\r\n  sectorVisible: boolean\r\n}\r\n\r\n/**\r\n * Dihedral representation object\r\n *\r\n * Reperesentation consists of three parts, visibility can be set for each\r\n * label - text label indicating dihedral angle\r\n * line - line indicating four positions that define the dihedral\r\n * sector - filled arc section\r\n *\r\n * @param {Structure} structure - the structure to measure angles in\r\n * @param {Viewer} viewer - a viewer object\r\n * @param {AngleRepresentationParameters} params - angle representation parameters\r\n */\r\nclass DihedralRepresentation extends MeasurementRepresentation {\r\n  protected atomQuad: (number|string)[][]\r\n  protected extendLine: boolean\r\n  protected lineOpacity: number\r\n  protected lineVisible: boolean\r\n  protected linewidth: number\r\n  protected planeVisible: boolean\r\n  protected sectorVisible: boolean\r\n\r\n  protected lineLength: number\r\n  protected planeLength: number\r\n  protected sectorLength: number\r\n\r\n  protected lineBuffer: WideLineBuffer\r\n  protected planeBuffer: MeshBuffer\r\n  protected sectorBuffer: MeshBuffer\r\n\r\n  constructor (structure: Structure, viewer: Viewer, params: Partial<DihedralRepresentationParameters>) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'dihedral'\r\n\r\n    this.parameters = Object.assign({\r\n      atomQuad: {\r\n        type: 'hidden', rebuild: true\r\n      },\r\n      extendLine: {\r\n        type: 'boolean', rebuild: true, default: true\r\n      },\r\n      lineVisible: {\r\n        type: 'boolean', default: true\r\n      },\r\n      planeVisible: {\r\n        type: 'boolean', default: true\r\n      },\r\n      sectorVisible: {\r\n        type: 'boolean', default: true\r\n      }\r\n    }, this.parameters)\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params: Partial<DihedralRepresentationParameters>) {\r\n    const p = params || {}\r\n    p.side = defaults(p.side, 'double')\r\n    p.opacity = defaults(p.opacity, 0.5)\r\n\r\n    this.atomQuad = defaults(p.atomQuad, [])\r\n    this.extendLine = defaults(p.extendLine, true)\r\n    this.lineVisible = defaults(p.lineVisible, true)\r\n    this.planeVisible = defaults(p.planeVisible, true)\r\n    this.sectorVisible = defaults(p.sectorVisible, true)\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  createData (sview: StructureView) {\r\n    if (!sview.atomCount || !this.atomQuad.length) return\r\n\r\n    const atomPosition = parseNestedAtoms(sview, this.atomQuad)\r\n    const dihedralData = getDihedralData(\r\n      atomPosition, {\r\n        extendLine: this.extendLine\r\n      }\r\n    )\r\n\r\n    const n = this.n = dihedralData.labelText.length\r\n    const labelColor = new Color(this.labelColor)\r\n\r\n    this.textBuffer = new TextBuffer({\r\n      position: dihedralData.labelPosition,\r\n      size: uniformArray(n, this.labelSize),\r\n      color: uniformArray3(n, labelColor.r, labelColor.g, labelColor.b),\r\n      text: dihedralData.labelText\r\n    } as TextBufferData, this.getLabelBufferParams())\r\n\r\n    const c = new Color(this.colorValue)\r\n    this.lineLength = dihedralData.linePosition1.length / 3\r\n    const lineColor = uniformArray3(this.lineLength, c.r, c.g, c.b)\r\n\r\n    this.lineBuffer = new WideLineBuffer(\r\n      getFixedLengthWrappedDashData({\r\n        position1: dihedralData.linePosition1,\r\n        position2: dihedralData.linePosition2,\r\n        color: lineColor,\r\n        color2: lineColor\r\n      } as CylinderBufferData) ,\r\n      this.getBufferParams({\r\n        linewidth: this.linewidth,\r\n        visible: this.lineVisible,\r\n        opacity: this.lineOpacity\r\n      })\r\n    )\r\n\r\n    this.planeLength = dihedralData.planePosition.length / 3\r\n    this.planeBuffer = new MeshBuffer({\r\n      position: dihedralData.planePosition,\r\n      color: uniformArray3(this.planeLength, c.r, c.g, c.b)\r\n    } as BufferData, this.getBufferParams({\r\n      visible: this.planeVisible\r\n    }))\r\n\r\n    this.sectorLength = dihedralData.sectorPosition.length / 3\r\n    this.sectorBuffer = new MeshBuffer({\r\n      position: dihedralData.sectorPosition,\r\n      color: uniformArray3(this.sectorLength, c.r, c.g, c.b)\r\n    } as BufferData, this.getBufferParams({\r\n      visible: this.sectorVisible\r\n    }))\r\n\r\n    return {\r\n      bufferList: [\r\n        this.textBuffer,\r\n        this.lineBuffer,\r\n        this.planeBuffer,\r\n        this.sectorBuffer\r\n      ]\r\n    }\r\n  }\r\n\r\n  updateData (what: LabelDataField & {color?: boolean}, data: StructureRepresentationData) {\r\n    super.updateData(what, data)\r\n    const lineData = {}\r\n    const planeData = {}\r\n    const sectorData = {}\r\n\r\n    if (what.color) {\r\n      const c = new Color(this.colorValue)\r\n      Object.assign(lineData, {\r\n        color: uniformArray3(this.lineLength, c.r, c.g, c.b),\r\n        color2: uniformArray3(this.lineLength, c.r, c.g, c.b)\r\n      })\r\n      Object.assign(planeData, {\r\n        color: uniformArray3(this.planeLength, c.r, c.g, c.b)\r\n      })\r\n      Object.assign(sectorData, {\r\n        color: uniformArray3(this.sectorLength, c.r, c.g, c.b)\r\n      })\r\n    }\r\n\r\n    this.lineBuffer.setAttributes(lineData)\r\n    this.planeBuffer.setAttributes(planeData)\r\n    this.sectorBuffer.setAttributes(sectorData)\r\n  }\r\n\r\n  setParameters (params: Partial<DihedralRepresentationParameters>) {\r\n    var rebuild = false\r\n    var what = {}\r\n\r\n    super.setParameters(params, what, rebuild)\r\n\r\n    if (params && (\r\n      params.lineVisible !== undefined ||\r\n      params.sectorVisible !== undefined ||\r\n      params.planeVisible !== undefined)) {\r\n      this.setVisibility(this.visible)\r\n    }\r\n\r\n    if (params && params.lineOpacity) {\r\n      this.lineBuffer.setParameters({ opacity: params.lineOpacity })\r\n    }\r\n\r\n    if (params && params.opacity !== undefined) {\r\n      this.lineBuffer.setParameters({ opacity: this.lineOpacity })\r\n    }\r\n\r\n    if (params && params.linewidth) {\r\n      this.lineBuffer.setParameters({ linewidth: params.linewidth })\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  setVisibility (value: boolean, noRenderRequest?: boolean) {\r\n    super.setVisibility(value, true)\r\n\r\n    if (this.lineBuffer) {\r\n      this.lineBuffer.setVisibility(this.lineVisible && this.visible)\r\n    }\r\n\r\n    if (this.planeBuffer) {\r\n      this.planeBuffer.setVisibility(this.planeVisible && this.visible)\r\n    }\r\n\r\n    if (this.sectorBuffer) {\r\n      this.sectorBuffer.setVisibility(this.sectorVisible && this.visible)\r\n    }\r\n\r\n    if (!noRenderRequest) this.viewer.requestRender()\r\n\r\n    return this\r\n  }\r\n}\r\n\r\n/**\r\n * Build the data required to create {Buffer} objects, given positions\r\n * @param  {Float32Array} atomPosition 3*4*nDihedral array of coordinates\r\n * @return {Object}              Arrays for building buffers\r\n */\r\nfunction getDihedralData (position: Float32Array, params: Partial<DihedralRepresentationParameters> = {}) {\r\n  const angleStep = defaults(params.angleStep, Math.PI / 90)\r\n  const nPos = position.length\r\n  const n = position.length / 12\r\n  const angles = new Float32Array(n)\r\n  const labelPosition = new Float32Array(n * 3)\r\n  const labelText = new Array(n)\r\n\r\n  // Temporary arrays as don't know output length yet\r\n  const lineTmp1 = new Array(n)\r\n  const lineTmp2 = new Array(n)\r\n  const sectorTmp = new Array(n)\r\n  const planeTmp = new Array(n)\r\n\r\n  // Eventual sizes of output arrays\r\n  let totalLines = 0\r\n  let totalSegments = 0\r\n  let totalPlanes = 0\r\n\r\n  const p1 = v3new()\r\n  const p2 = v3new()\r\n  const p3 = v3new()\r\n  const p4 = v3new()\r\n\r\n  const v21 = v3new()\r\n  const v23 = v3new()\r\n  const v34 = v3new()\r\n\r\n  const tmp = v3new()\r\n  const mid = v3new()\r\n  const inPlane1 = v3new()\r\n  const inPlane2 = v3new()\r\n  const start = v3new()\r\n  const end = v3new()\r\n\r\n  const cross = v3new()\r\n  const arcPoint = v3new()\r\n\r\n  let i = 0 // Actual output index (after skipping inappropriate)\r\n\r\n  for (var p = 0; p < nPos; p += 12) {\r\n    // Set Positions\r\n    v3fromArray(p1, position, p)\r\n    v3fromArray(p2, position, p + 3)\r\n    v3fromArray(p3, position, p + 6)\r\n    v3fromArray(p4, position, p + 9)\r\n\r\n    // Vectors between points\r\n    v3sub(v21, p1, p2)\r\n    v3sub(v23, p3, p2)\r\n    if (v3length(v23) === 0.0) {\r\n      continue // Can't define axis\r\n    }\r\n\r\n    v3sub(v34, p4, p3)\r\n\r\n    v3multiplyScalar(tmp, v23, 0.5)\r\n    v3add(mid, p2, tmp)\r\n\r\n    v3normalize(v21, v21)\r\n    v3normalize(v23, v23)\r\n    v3normalize(v34, v34)\r\n\r\n    // Which side of plane are p1, p4 (are we measuring something that\r\n    // looks more like an improper? e.g. C, CA, CB, N)\r\n    v3sub(tmp, p1, mid)\r\n    const improperStart = v3dot(tmp, v23) > 0.0\r\n    v3sub(tmp, p4, mid)\r\n    const improperEnd = v3dot(tmp, v23) < 0.0\r\n\r\n    // Calculate vectors perp to v23 (lying in plane (1,2,3) and (2,3,4))\r\n    v3multiplyScalar(tmp, v23, v3dot(v23, v21))\r\n    v3sub(inPlane1, v21, tmp)\r\n\r\n    v3multiplyScalar(tmp, v23, v3dot(v23, v34))\r\n    v3sub(inPlane2, v34, tmp)\r\n\r\n    if (v3length(inPlane1) === 0.0 || v3length(inPlane2) === 0.0) {\r\n      continue // Indeterminate angle\r\n    }\r\n\r\n    v3normalize(inPlane1, inPlane1)\r\n    v3normalize(inPlane2, inPlane2)\r\n\r\n    const angle = angles[ i ] = v3angle(inPlane1, inPlane2)\r\n    labelText[ i ] = (RAD2DEG * angle).toFixed(1) + String.fromCharCode(0x00B0)\r\n\r\n    v3cross(cross, inPlane1, v23)\r\n    v3normalize(cross, cross)\r\n    if (v3dot(cross, inPlane2) < 0.0) {\r\n      v3negate(cross, cross) // Ensure cp faces correct way\r\n    }\r\n\r\n    calcArcPoint(tmp, mid, inPlane1, cross, angle / 2.0)\r\n    v3toArray(tmp, labelPosition, 3 * i)\r\n\r\n    const nSegments = Math.ceil(angle / angleStep)\r\n    // For extended display mode, 4 straight lines plus arc/segment edge\r\n    // For non-extended, 2 straight lines plus segment edge\r\n    const nLines = nSegments + ((params.extendLine) ? 4 : 2)\r\n\r\n    // Don't draw planes if not extending lines\r\n    const nPlanes = params.extendLine ? 36 : 0\r\n\r\n    const line1 = new Float32Array(nLines * 3)\r\n    const line2 = new Float32Array(nLines * 3)\r\n    const sector = new Float32Array(nSegments * 9)\r\n    // 2 planes, 2 triangles each per dihedral (2*2*9)\r\n    const plane = new Float32Array(nPlanes)\r\n\r\n    lineTmp1[ i ] = line1\r\n    lineTmp2[ i ] = line2\r\n    sectorTmp[ i ] = sector\r\n    planeTmp[ i ] = plane\r\n\r\n    // Start points for lines/planes, only required\r\n    // if extending lines\r\n    if (params.extendLine) {\r\n      if (improperStart) { // We'll start on the v3->1 line (tmp)\r\n        v3sub(tmp, p1, p3)\r\n        v3normalize(tmp, tmp)\r\n        v3multiplyScalar(start, tmp, 1.0 / v3dot(inPlane1, tmp))\r\n        v3add(start, start, p3)\r\n      } else { // start on the 2->1 line\r\n        v3multiplyScalar(start, v21, 1.0 / v3dot(inPlane1, v21))\r\n        v3add(start, start, p2)\r\n      }\r\n\r\n      if (improperEnd) { // Finish on 2->4 line\r\n        v3sub(tmp, p4, p2)\r\n        v3normalize(tmp, tmp)\r\n        v3multiplyScalar(end, tmp, 1.0 / v3dot(inPlane2, tmp))\r\n        v3add(end, end, p2)\r\n      } else { // end on the 3->4 line\r\n        v3multiplyScalar(end, v34, 1.0 / v3dot(inPlane2, v34))\r\n        v3add(end, end, p3)\r\n      }\r\n    }\r\n\r\n    v3add(arcPoint, mid, inPlane1)\r\n\r\n    // index into line1, line2\r\n    let li = 0\r\n    // If extending lines, there's a bit of stuff to do here\r\n    // figuring out start and end positions\r\n    if (params.extendLine) {\r\n      v3toArray(p1, line1, li)\r\n      v3toArray(start, line2, li)\r\n      li += 3\r\n      v3toArray(start, line1, li)\r\n      v3toArray(arcPoint, line2, li)\r\n      li += 3\r\n\r\n      // Construct plane at start, if not extening lines\r\n      // this is skipped\r\n      v3toArray(start, plane, 0)\r\n      v3toArray(arcPoint, plane, 3)\r\n      v3toArray(improperStart ? p3 : p2, plane, 6)\r\n      v3toArray(improperStart ? p3 : p2, plane, 9)\r\n      v3toArray(arcPoint, plane, 12)\r\n      v3toArray(mid, plane, 15)\r\n    } else {\r\n      // Not extending lines\r\n      v3toArray(mid, line1, li)\r\n      v3toArray(arcPoint, line2, li)\r\n      li += 3\r\n    }\r\n\r\n    const appendArcSection = function (a: number, j: number) {\r\n      const si = j * 9\r\n\r\n      v3toArray(mid, sector, si)\r\n      v3toArray(arcPoint, sector, si + 3)\r\n      v3toArray(arcPoint, line1, li)\r\n\r\n      calcArcPoint(arcPoint, mid, inPlane1, cross, a)\r\n\r\n      v3toArray(arcPoint, sector, si + 6)\r\n      v3toArray(arcPoint, line2, li)\r\n      li += 3\r\n    }\r\n\r\n    let j = 0\r\n    for (let a = angleStep; a < angle; a += angleStep) {\r\n      appendArcSection(a, j++)\r\n    }\r\n    appendArcSection(angle, j++)\r\n\r\n    if (params.extendLine) {\r\n      v3toArray(arcPoint, line1, (nLines - 2) * 3)\r\n      v3toArray(end, line2, (nLines - 2) * 3)\r\n      v3toArray(end, line1, (nLines - 1) * 3)\r\n      v3toArray(p4, line2, (nLines - 1) * 3)\r\n\r\n      // Construct plane at end\r\n      v3toArray(end, plane, 18)\r\n      v3toArray(arcPoint, plane, 21)\r\n      v3toArray(improperEnd ? p2 : p3, plane, 24)\r\n      v3toArray(improperEnd ? p2 : p3, plane, 27)\r\n      v3toArray(arcPoint, plane, 30)\r\n      v3toArray(mid, plane, 33)\r\n    } else {\r\n      v3toArray(arcPoint, line1, li)\r\n      v3toArray(mid, line2, li)\r\n      li += 3\r\n    }\r\n\r\n    totalLines += nLines * 3\r\n    totalSegments += nSegments * 9\r\n    totalPlanes += nPlanes\r\n    i += 1\r\n  }\r\n\r\n  const nSuccess = i\r\n\r\n  const linePosition1 = new Float32Array(totalLines)\r\n  const linePosition2 = new Float32Array(totalLines)\r\n  const sectorPosition = new Float32Array(totalSegments)\r\n  const planePosition = new Float32Array(totalPlanes)\r\n\r\n  let lineOffset = 0\r\n  let sectorOffset = 0\r\n  let planeOffset = 0\r\n\r\n  for (let i = 0; i < nSuccess; i++) {\r\n    const lp1 = lineTmp1[ i ]\r\n    const lp2 = lineTmp2[ i ]\r\n    const sp = sectorTmp[ i ]\r\n    const pp = planeTmp[ i ]\r\n\r\n    copyArray(lp1, linePosition1, 0, lineOffset, lp1.length)\r\n    copyArray(lp2, linePosition2, 0, lineOffset, lp2.length)\r\n    copyArray(sp, sectorPosition, 0, sectorOffset, sp.length)\r\n    copyArray(pp, planePosition, 0, planeOffset, pp.length)\r\n\r\n    lineOffset += lp1.length\r\n    sectorOffset += sp.length\r\n    planeOffset += pp.length\r\n  }\r\n\r\n  return {\r\n    labelPosition: labelPosition.subarray(0, nSuccess * 3),\r\n    labelText: labelText.slice(0, nSuccess),\r\n    linePosition1,\r\n    linePosition2,\r\n    planePosition,\r\n    sectorPosition\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('dihedral', DihedralRepresentation)\r\n\r\nexport default DihedralRepresentation\r\n","/**\r\n * @file Dihedral Histogram Representation\r\n * @author Rudolfs Petrovs <rudolfs.petrovs@astx.com>\r\n * @private\r\n */\r\nimport { Color } from 'three'\r\n\r\nimport { calcArcPoint, parseNestedAtoms } from './measurement-representation'\r\nimport StructureRepresentation, { StructureRepresentationParameters } from './structure-representation'\r\n\r\nimport { RepresentationRegistry } from '../globals'\r\nimport { Structure } from '../ngl'\r\nimport { defaults } from '../utils'\r\n\r\nimport { BufferData } from '../buffer/buffer'\r\nimport MeshBuffer from '../buffer/mesh-buffer'\r\nimport WideLineBuffer, { WideLineBufferData } from '../buffer/wideline-buffer'\r\n\r\nimport { copyArray, uniformArray3, arraySum } from '../math/array-utils'\r\nimport {\r\n  v3add, v3cross, v3dot, v3multiplyScalar, v3fromArray,\r\n  v3negate, v3new, v3normalize, v3sub, v3toArray, v3length\r\n} from '../math/vector-utils'\r\n\r\nimport StructureView from '../structure/structure-view'\r\n\r\nimport Viewer from '../viewer/viewer'\r\n\r\n\r\nconst pointLength = 3 // One Point Length (number of coordinates of one point in 3D)\r\nconst pointsInTriangle = 3\r\n\r\ntype ColorDefinition = Color | string | number | undefined\r\n\r\ninterface HistogramColorParameters {\r\n  histogramBinBorderColor: ColorDefinition\r\n  adjacentBondArrowColor: ColorDefinition\r\n  distantBondArrowColor: ColorDefinition\r\n  frontHistogramColor: ColorDefinition\r\n  backHistogramColor: ColorDefinition\r\n  opaqueMiddleDiscColor: ColorDefinition\r\n}\r\n\r\ninterface HistogramInputData extends Partial<HistogramColorParameters> {\r\n  atomQuad: (number | string)[]\r\n  histogram360: number[]\r\n}\r\n\r\ninterface HistogramData extends HistogramInputData {\r\n  atomPositions: Float32Array\r\n  histogram360Scaled: number[]\r\n}\r\n\r\ninterface WideLineData {\r\n  startPoints: Float32Array\r\n  endPoints: Float32Array\r\n  startColors: Float32Array\r\n  endColors: Float32Array\r\n}\r\n\r\ninterface MeshData {\r\n  triangles: Float32Array\r\n  triangleColors: Float32Array\r\n}\r\n\r\nfunction createUpdatedObject(o: Object, updateSource: Object) {\r\n  function hasKey<O>(obj: O, key: keyof any): key is keyof O {\r\n    return key in obj\r\n  }\r\n\r\n  const result = { ...o } // Shallow copy\r\n  for (const key in result) {\r\n    if (hasKey(result, key) && hasKey(updateSource, key)) {\r\n      result[key] = defaults(updateSource[key], result[key])\r\n    }\r\n  }\r\n  return result\r\n}\r\n\r\nfunction createColorArray(color: ColorDefinition, arrayLength: number) {\r\n  const colorValue = new Color(color)\r\n  const targetArray = new Float32Array(arrayLength * 3)\r\n  uniformArray3(arrayLength, colorValue.r, colorValue.g, colorValue.b, targetArray)\r\n  return targetArray\r\n}\r\n\r\n/**\r\n * @typedef {Object} DihedralHistogramRepresentationParameters - dihedral representation parameters\r\n * @mixes RepresentationParameters\r\n * @mixes StructureRepresentationParameters\r\n *\r\n * @property {HistogramInputData[]} histogramsData\r\n * List of HistogramInputData objects, which properties specifies each particular\r\n * histogram, and can contain particular histogram-specific parameters.\r\n * Obligatory properties are:\r\n * atomQuad - Quadruplet of selection strings or atom indices\r\n * histogram360 - List of values, representing histogram from 0 to 360 degrees.\r\n * @property {Boolean} histogramBinBorderVisible - Display the lines that separate circular histogram bins\r\n * @property {Boolean} scaleBinToSectorArea - Should sector-based histogram bins'\r\n * area be proportional to the bins' value\r\n */\r\n\r\nexport interface DihedralHistogramRepresentationParameters extends StructureRepresentationParameters {\r\n  histogramsData: HistogramInputData[]\r\n\r\n  histogramBinBorderVisible: boolean\r\n  scaleBinToSectorArea: boolean\r\n}\r\n\r\n/**\r\n * Dihedral Histogram representation object\r\n *\r\n * Reperesentation consists of several parts:\r\n * opaqueMiddleDisc - opaque disc in the middle of the dihedral between front and back histograms\r\n * frontHistogram - circular histogram from the adjacent bond viewpoint\r\n * backHistogram - circular histogram from the distant bond viewpoint\r\n * histogramBinBorder - lines, which separate histogram bins\r\n * bondArrows - lines, which show the actual angle on the histogram disc\r\n *\r\n * @param {Structure} structure - the structure to measure angles in\r\n * @param {Viewer} viewer - a viewer object\r\n * @param {DihedralHistogramRepresentationParameters} params - Dihedral histogram representation parameters\r\n */\r\nclass DihedralHistogramRepresentation extends StructureRepresentation {\r\n  protected histogramsData: HistogramData[]\r\n\r\n  protected histogramBinBorderVisible: boolean\r\n  protected histogramBinBorderWidth: number\r\n  protected histogramBinBorderColor: ColorDefinition\r\n  protected histogramBinBorderOpacity: number\r\n\r\n  protected bondArrowVisible: boolean\r\n  protected bondArrowWidth: number\r\n  protected bondArrowOpacity: number\r\n\r\n  protected adjacentBondArrowColor: ColorDefinition\r\n  protected distantBondArrowColor: ColorDefinition\r\n\r\n  protected histogramOpacity: number\r\n  protected frontHistogramColor: ColorDefinition\r\n  protected backHistogramColor: ColorDefinition\r\n\r\n  protected opaqueMiddleDiscVisible: boolean\r\n  protected opaqueMiddleDiscColor: ColorDefinition\r\n  protected opaqueMiddleDiscOpacity: number\r\n\r\n  protected scaleBinToSectorArea: boolean\r\n\r\n  constructor(structure: Structure, viewer: Viewer, params: DihedralHistogramRepresentationParameters) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'dihedral-histogram'\r\n\r\n    this.parameters = Object.assign({\r\n      histogramsData: {\r\n        type: 'hidden', rebuild: true\r\n      },\r\n      histogramBinBorderVisible: {\r\n        type: 'boolean', default: true\r\n      },\r\n      scaleBinToSectorArea: {\r\n        type: 'boolean',\r\n        rebuild: true,\r\n        default: false\r\n      }\r\n    }, this.parameters)\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init(params: Partial<DihedralHistogramRepresentationParameters>) {\r\n    const p = params || {}\r\n\r\n    const defaultColorData = {\r\n      histogramBinBorderColor: 'grey',\r\n      adjacentBondArrowColor: 'black',\r\n      distantBondArrowColor: 'magenta',\r\n      frontHistogramColor: 'green',\r\n      backHistogramColor: 'blue',\r\n      opaqueMiddleDiscColor: 'white'\r\n    }\r\n\r\n    const colorData = createUpdatedObject(defaultColorData, p)\r\n    Object.assign(this, colorData)\r\n\r\n    const defaultParameters = {\r\n      histogramsData: [],\r\n      histogramOpacity: 1.0,\r\n\r\n      opaqueMiddleDiscVisible: true,\r\n      opaqueMiddleDiscOpacity: 1.0,\r\n\r\n      histogramBinBorderVisible: true,\r\n      histogramBinBorderWidth: 1,\r\n      histogramBinBorderOpacity: 0.5,\r\n\r\n      bondArrowVisible: true,\r\n      bondArrowWidth: 2,\r\n      bondArrowOpacity: 1.0,\r\n\r\n      scaleBinToSectorArea: false,\r\n    }\r\n    const parameters = createUpdatedObject(defaultParameters, p)\r\n    Object.assign(this, parameters)\r\n\r\n    this.histogramsData.forEach(x => {\r\n      const specificColorData = createUpdatedObject(colorData, x)\r\n      Object.assign(x, specificColorData)\r\n    })\r\n\r\n    p.side = defaults(p.side, 'double')\r\n    p.opacity = defaults(p.opacity, 0.5)\r\n    p.radiusType = defaults(p.radiusType, 'size')\r\n    p.radiusSize = defaults(p.radiusSize, 0.15)\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  getHistogramBinBorderBufferParameters() {\r\n    return this.getBufferParams({\r\n      linewidth: this.histogramBinBorderWidth,\r\n      visible: this.histogramBinBorderVisible,\r\n      opacity: this.histogramBinBorderOpacity,\r\n    })\r\n  }\r\n\r\n  getBondArrowsBufferParameters() {\r\n    return this.getBufferParams({\r\n      linewidth: this.bondArrowWidth,\r\n      visible: this.bondArrowVisible,\r\n      opacity: this.bondArrowOpacity,\r\n    })\r\n  }\r\n\r\n  getOpaqueMiddleDiscBufferParameters() {\r\n    return this.getBufferParams({\r\n      visible: this.opaqueMiddleDiscVisible,\r\n      opacity: this.opaqueMiddleDiscOpacity\r\n    })\r\n  }\r\n\r\n  getHistogramBufferParameters() {\r\n    return this.getBufferParams({\r\n      visible: true,\r\n      opacity: this.histogramOpacity,\r\n      side: \"double\"\r\n    })\r\n  }\r\n\r\n  createData(sview: StructureView) {\r\n    if (!sview.atomCount || !this.histogramsData.length) return\r\n    this.histogramsData.forEach(x => x.atomPositions = parseNestedAtoms(sview, [x.atomQuad]))\r\n    const scaleData = this.scaleBinToSectorArea ? function (y: number) { return Math.sqrt(y) } : function (y: number) { return y }\r\n    this.histogramsData.forEach(x => x.histogram360Scaled = x.histogram360.map(scaleData))\r\n    function Float32Concat(arrays: Float32Array[]) {\r\n      const lengths = arrays.map(x => x.length)\r\n      const result = new Float32Array(arraySum(lengths))\r\n      let accumulatedOffset = 0\r\n      for (let i = 0; i < arrays.length; i++) {\r\n        result.set(arrays[i], accumulatedOffset)\r\n        accumulatedOffset += arrays[i].length\r\n      }\r\n      return result\r\n    }\r\n\r\n    function createWideLineBuffer(linesList: WideLineData[], params: {}) {\r\n      return new WideLineBuffer(\r\n        {\r\n          position1: Float32Concat(linesList.map(x => x.startPoints)),\r\n          position2: Float32Concat(linesList.map(x => x.endPoints)),\r\n          color: Float32Concat(linesList.map(x => x.startColors)),\r\n          color2: Float32Concat(linesList.map(x => x.endColors)),\r\n        } as WideLineBufferData,\r\n        params)\r\n    }\r\n\r\n    function createMeshBuffer(mesh: MeshData[], params: {}) {\r\n      return new MeshBuffer(\r\n        {\r\n          position: Float32Concat(mesh.map(x => x.triangles)),\r\n          color: Float32Concat(mesh.map(x => x.triangleColors))\r\n        } as BufferData,\r\n        params)\r\n    }\r\n\r\n    const dihedralDataArray = []\r\n\r\n    for (let i = 0; i < this.histogramsData.length; i++) {\r\n      let dihedralData = undefined\r\n      let currentHistogramData = this.histogramsData[i]\r\n      let currentHistogram360 = currentHistogramData.histogram360\r\n      if (currentHistogram360.length >= 3) {\r\n        dihedralData = calculateDihedralHistogram(currentHistogramData)\r\n      }\r\n      if (typeof dihedralData === \"undefined\") continue\r\n      dihedralDataArray.push(dihedralData)\r\n    }\r\n\r\n    this.frontHistogramBinBordersBuffer = createWideLineBuffer(\r\n      dihedralDataArray.map(x => x.frontHistogramBinBorders),\r\n      this.getHistogramBinBorderBufferParameters()\r\n    )\r\n\r\n    this.backHistogramBinBordersBuffer = createWideLineBuffer(\r\n      dihedralDataArray.map(x => x.backHistogramBinBorders),\r\n      this.getHistogramBinBorderBufferParameters()\r\n    )\r\n\r\n    this.adjacentBondArrowsBuffer = createWideLineBuffer(\r\n      dihedralDataArray.map(x => x.adjacentBondArrows),\r\n      this.getBondArrowsBufferParameters()\r\n    )\r\n\r\n    this.distantBondArrowsBuffer = createWideLineBuffer(\r\n      dihedralDataArray.map(x => x.distantBondArrows),\r\n      this.getBondArrowsBufferParameters()\r\n    )\r\n\r\n    this.opaqueMiddleDiscBuffer = createMeshBuffer(\r\n      dihedralDataArray.map(x => x.opaqueMiddleDisc),\r\n      this.getOpaqueMiddleDiscBufferParameters()\r\n    )\r\n\r\n    this.frontHistogramBuffer = createMeshBuffer(\r\n      dihedralDataArray.map(x => x.frontHistogram),\r\n      this.getHistogramBufferParameters()\r\n    )\r\n\r\n    this.backHistogramBuffer = createMeshBuffer(\r\n      dihedralDataArray.map(x => x.backHistogram),\r\n      this.getHistogramBufferParameters()\r\n    )\r\n\r\n    return {\r\n      bufferList: [].concat(\r\n        this.frontHistogramBinBordersBuffer,\r\n        this.backHistogramBinBordersBuffer,\r\n        this.adjacentBondArrowsBuffer,\r\n        this.distantBondArrowsBuffer,\r\n        this.opaqueMiddleDiscBuffer,\r\n        this.frontHistogramBuffer,\r\n        this.backHistogramBuffer\r\n      )\r\n    }\r\n  }\r\n\r\n  setParameters(params: Partial<DihedralHistogramRepresentationParameters>) {\r\n    const rebuild = false\r\n    const what = {}\r\n    super.setParameters(params, what, rebuild)\r\n\r\n    if (params && (params.histogramBinBorderVisible !== undefined)) {\r\n      this.setVisibility(this.visible)\r\n    }\r\n    return this\r\n  }\r\n\r\n  setVisibility(value: boolean, noRenderRequest?: boolean) {\r\n    super.setVisibility(value, true)\r\n    if (this.frontHistogramBinBordersBuffer) {\r\n      this.frontHistogramBinBordersBuffer.setVisibility(this.histogramBinBorderVisible)\r\n    }\r\n    if (this.backHistogramBinBordersBuffer) {\r\n      this.backHistogramBinBordersBuffer.setVisibility(this.histogramBinBorderVisible)\r\n    }\r\n    if (!noRenderRequest) this.viewer.requestRender()\r\n    return this\r\n  }\r\n}\r\n\r\n/**\r\n * Calculates the data required to create {Buffer} objects for one histogram, given positions\r\n * @param  Float32Array positionOfDihedralAtoms 3*4 array of coordinates\r\n * @param  NumberArray histogram array of coordinates\r\n * @return Arrays for building buffers\r\n */\r\nfunction calculateDihedralHistogram(histogramData: HistogramData) {\r\n  const positionOfDihedralAtoms = histogramData.atomPositions\r\n  const histogram = histogramData.histogram360Scaled;\r\n  const totalSectorTrianglesInOpaqueMiddleDisc = histogram.length <= 180 ? 360 : histogram.length * 2\r\n  const frontAndBack = 2\r\n\r\n  const opaqueMiddleDisc = {\r\n    triangles: new Float32Array(totalSectorTrianglesInOpaqueMiddleDisc * pointsInTriangle * pointLength),\r\n    triangleColors: createColorArray(histogramData.opaqueMiddleDiscColor, totalSectorTrianglesInOpaqueMiddleDisc * pointsInTriangle)\r\n  }\r\n\r\n  const frontHistogram = {\r\n    triangles: new Float32Array(histogram.length * pointsInTriangle * pointLength),\r\n    triangleColors: createColorArray(histogramData.frontHistogramColor, histogram.length * pointsInTriangle)\r\n  }\r\n\r\n  const backHistogram = {\r\n    triangles: new Float32Array(histogram.length * pointsInTriangle * pointLength),\r\n    triangleColors: createColorArray(histogramData.backHistogramColor, histogram.length * pointsInTriangle)\r\n  }\r\n\r\n  const frontHistogramBinBorders = {\r\n    startPoints: new Float32Array(histogram.length * pointLength),\r\n    endPoints: new Float32Array(histogram.length * pointLength),\r\n    startColors: createColorArray(histogramData.histogramBinBorderColor, histogram.length),\r\n    endColors: createColorArray(histogramData.histogramBinBorderColor, histogram.length)\r\n  }\r\n\r\n  const backHistogramBinBorders = {\r\n    startPoints: new Float32Array(histogram.length * pointLength),\r\n    endPoints: new Float32Array(histogram.length * pointLength),\r\n    startColors: createColorArray(histogramData.histogramBinBorderColor, histogram.length),\r\n    endColors: createColorArray(histogramData.histogramBinBorderColor, histogram.length)\r\n  }\r\n\r\n  const adjacentBondArrows = {\r\n    startPoints: new Float32Array(frontAndBack * pointLength),\r\n    endPoints: new Float32Array(frontAndBack * pointLength),\r\n    startColors: createColorArray(histogramData.adjacentBondArrowColor, histogram.length),\r\n    endColors: createColorArray(histogramData.adjacentBondArrowColor, histogram.length)\r\n  }\r\n  const distantBondArrows = {\r\n    startPoints: new Float32Array(frontAndBack * pointLength),\r\n    endPoints: new Float32Array(frontAndBack * pointLength),\r\n    startColors: createColorArray(histogramData.distantBondArrowColor, histogram.length),\r\n    endColors: createColorArray(histogramData.distantBondArrowColor, histogram.length)\r\n  }\r\n\r\n  const p1 = v3new()\r\n  const p2 = v3new()\r\n  const p3 = v3new()\r\n  const p4 = v3new()\r\n\r\n  const v21 = v3new()\r\n  const v23 = v3new()\r\n  const v32 = v3new()\r\n  const v34 = v3new()\r\n\r\n  const mid = v3new()\r\n  const inPlane1 = v3new()\r\n  const inPlane2 = v3new()\r\n\r\n  const cross1 = v3new()\r\n  const cross2 = v3new()\r\n\r\n  const arcPoint = v3new()\r\n  const tmp = v3new()\r\n  const tmp2 = v3new()\r\n\r\n  // Set Atom Coordinates\r\n  const dihedralAtomVectors = [p1, p2, p3, p4]\r\n\r\n  for (let i = 0; i < dihedralAtomVectors.length; i++) {\r\n    v3fromArray(dihedralAtomVectors[i], positionOfDihedralAtoms, i * pointLength)\r\n  }\r\n\r\n  // Vectors between points\r\n  v3sub(v21, p1, p2)\r\n  v3sub(v23, p3, p2)\r\n  v3sub(v34, p4, p3)\r\n  if (v3length(v23) === 0.0) {\r\n    return // Can't define axis\r\n  }\r\n\r\n  v3multiplyScalar(tmp, v23, 0.5)\r\n  v3add(mid, p2, tmp)\r\n\r\n  v3normalize(v21, v21)\r\n  v3normalize(v23, v23)\r\n  v3normalize(v34, v34)\r\n\r\n  v3negate(v32, v23)\r\n  // Calculate vectors perp to v23 (lying in plane (1,2,3) and (2,3,4))\r\n  v3multiplyScalar(tmp, v32, v3dot(v32, v21))\r\n  v3sub(inPlane1, v21, tmp)\r\n\r\n  v3multiplyScalar(tmp, v23, v3dot(v23, v34))\r\n  v3sub(inPlane2, v34, tmp)\r\n\r\n  if (v3length(inPlane1) === 0.0 || v3length(inPlane2) === 0.0) {\r\n    return // Indeterminate angle\r\n  }\r\n\r\n  v3normalize(inPlane1, inPlane1)\r\n  v3normalize(inPlane2, inPlane2)\r\n\r\n  // Can use acos as normalized and non-zero\r\n  const absAngle = Math.acos(v3dot(inPlane1, inPlane2))\r\n\r\n  v3cross(cross1, v32, inPlane1)\r\n  v3cross(cross2, v23, inPlane2)\r\n  v3normalize(cross1, cross1)\r\n  v3normalize(cross2, cross2)\r\n\r\n  let angle = absAngle\r\n  if (v3dot(cross1, inPlane2) < 0.0) {\r\n    angle = -absAngle\r\n  }\r\n\r\n  v3add(arcPoint, mid, inPlane1)\r\n\r\n  // Calculate necessary constants\r\n  const maxHist = Math.max.apply(null, histogram)\r\n  const histBinAngleStep = (Math.PI * 2) / histogram.length\r\n\r\n  function setHistogramBinCoordinates(out: Float32Array, ind: number, zeroDegreeVector: Float32Array, crossVector: Float32Array, histBinAngleStep: number) {\r\n    const startOffset = ind * pointsInTriangle * pointLength\r\n    v3toArray(mid, out, startOffset)\r\n    const scalingFactor = Number(histogram[ind]) / maxHist\r\n    v3multiplyScalar(tmp, zeroDegreeVector, scalingFactor)\r\n    v3multiplyScalar(tmp2, crossVector, scalingFactor)\r\n    calcArcPoint(arcPoint, mid, tmp, tmp2, ind * histBinAngleStep)\r\n    v3toArray(arcPoint, out, startOffset + 1 * pointLength)\r\n    calcArcPoint(arcPoint, mid, tmp, tmp2, (ind + 1) * histBinAngleStep)\r\n    v3toArray(arcPoint, out, startOffset + 2 * pointLength)\r\n  }\r\n\r\n  function setOneSideHistogram(discHistogram: MeshData, binBorders: { startPoints: Float32Array, endPoints: Float32Array }, ind: number, zeroDegreeVector: Float32Array, crossVector: Float32Array) {\r\n    // Set Bond Arrows\r\n\r\n    copyArray(mid, adjacentBondArrows.startPoints, 0, ind * pointLength, mid.length)\r\n    calcArcPoint(tmp, mid, zeroDegreeVector, crossVector, 0 + histBinAngleStep * 0)\r\n    copyArray(tmp, adjacentBondArrows.endPoints, 0, ind * pointLength, mid.length)\r\n\r\n    copyArray(mid, distantBondArrows.startPoints, 0, ind * pointLength, mid.length)\r\n    calcArcPoint(tmp, mid, zeroDegreeVector, crossVector, angle)\r\n    copyArray(tmp, distantBondArrows.endPoints, 0, ind * pointLength, mid.length)\r\n\r\n    // Set Histogram Bin Borders\r\n\r\n    for (let i = 0; i < histogram.length; i++) {\r\n      copyArray(mid, binBorders.startPoints, 0, i * 3, mid.length)\r\n      calcArcPoint(tmp, mid, zeroDegreeVector, crossVector, 0 + histBinAngleStep * i)\r\n      copyArray(tmp, binBorders.endPoints, 0, i * 3, tmp.length)\r\n    }\r\n\r\n    // Set Histogram Bins\r\n\r\n    for (let sectionIndex = 0; sectionIndex < histogram.length; sectionIndex++) {\r\n      setHistogramBinCoordinates(discHistogram.triangles, sectionIndex, zeroDegreeVector, crossVector, histBinAngleStep)\r\n    }\r\n  }\r\n\r\n  // Opaque disc\r\n  const opaqueCircleSectorAngleStep = Math.PI * 2 / totalSectorTrianglesInOpaqueMiddleDisc\r\n\r\n  for (let sectionIndex = 0; sectionIndex < totalSectorTrianglesInOpaqueMiddleDisc; sectionIndex++) {\r\n    const startOffset = sectionIndex * pointsInTriangle * pointLength\r\n    v3toArray(mid, opaqueMiddleDisc.triangles, startOffset)\r\n    calcArcPoint(arcPoint, mid, inPlane1, cross1, sectionIndex * opaqueCircleSectorAngleStep)\r\n    v3toArray(arcPoint, opaqueMiddleDisc.triangles, startOffset + 1 * pointLength)\r\n    calcArcPoint(arcPoint, mid, inPlane1, cross1, (sectionIndex + 1) * opaqueCircleSectorAngleStep)\r\n    v3toArray(arcPoint, opaqueMiddleDisc.triangles, startOffset + 2 * pointLength)\r\n  }\r\n\r\n  // Front Histogram\r\n  const distanceToOpaqueDisc = 0.01\r\n  v3multiplyScalar(tmp, v23, -distanceToOpaqueDisc) // Get a vector to move \"mid\" just a bit from opaque disc\r\n  v3add(mid, mid, tmp)\r\n  setOneSideHistogram(frontHistogram, frontHistogramBinBorders, 0, inPlane1, cross1)\r\n\r\n  // Back Histogram\r\n  v3multiplyScalar(tmp, v23, 2 * distanceToOpaqueDisc) // Get a vector to move \"mid\" back and plus just a bit from opaque disc the other way\r\n  v3add(mid, mid, tmp)\r\n  setOneSideHistogram(backHistogram, backHistogramBinBorders, 1, inPlane2, cross2)\r\n\r\n  return {\r\n    opaqueMiddleDisc,\r\n    frontHistogram,\r\n    backHistogram,\r\n    frontHistogramBinBorders,\r\n    backHistogramBinBorders,\r\n    adjacentBondArrows,\r\n    distantBondArrows\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('dihedral-histogram', DihedralHistogramRepresentation)\r\n\r\nexport default DihedralHistogramRepresentation\r\n","/**\r\n * @file Distance Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @author Fred Ludlow <fred.ludlow@gmail.com>\r\n * @private\r\n */\r\n\r\nimport { Color } from 'three'\r\n\r\nimport { RepresentationRegistry } from '../globals'\r\nimport { defaults } from '../utils'\r\nimport { DistancePicker } from '../utils/picker'\r\nimport { uniformArray, uniformArray3 } from '../math/array-utils'\r\nimport BitArray from '../utils/bitarray'\r\nimport MeasurementRepresentation, { MeasurementRepresentationParameters } from './measurement-representation'\r\nimport Selection from '../selection/selection'\r\nimport BondStore from '../store/bond-store'\r\nimport TextBuffer, { TextBufferData, TextBufferParameters } from '../buffer/text-buffer'\r\nimport WideLineBuffer from '../buffer/wideline-buffer'\r\nimport CylinderBuffer, { CylinderBufferData } from '../buffer/cylinder-buffer'\r\nimport { getFixedLengthDashData } from '../geometry/dash'\r\nimport Viewer from '../viewer/viewer';\r\nimport { Structure } from '../ngl';\r\nimport StructureView from '../structure/structure-view';\r\nimport { BondDataFields, BondDataParams, BondData } from '../structure/structure-data';\r\nimport { StructureRepresentationData } from './structure-representation';\r\nimport CylinderGeometryBuffer from '../buffer/cylindergeometry-buffer';\r\n\r\n/**\r\n * Distance representation parameter object.\r\n * @typedef {Object} DistanceRepresentationParameters - distance representation parameters\r\n * @mixes RepresentationParameters\r\n * @mixes StructureRepresentationParameters\r\n * @mixes MeasurementRepresentationParameters\r\n *\r\n * @property {String} labelUnit - distance unit (e.g. \"angstrom\" or \"nm\"). If set, a distance\r\n *                                symbol is appended to the label (i.e. 'nm' or '\\u00C5'). In case of 'nm', the\r\n *                                distance value is computed in nanometers instead of Angstroms.\r\n * @property {Array[]} atomPair - list of pairs of selection strings (see {@link Selection})\r\n *                                or pairs of atom indices. Using atom indices is much more\r\n *                                efficient when the representation is updated often, e.g. by\r\n *                                changing the selection or the atom positions, as there\r\n *                                are no selection strings to be evaluated.\r\n */\r\nexport interface DistanceRepresentationParameters extends MeasurementRepresentationParameters {\r\n  labelUnit: string\r\n  atomPair: AtomPair\r\n  useCylinder: boolean\r\n}\r\nexport type AtomPair = (number|string)[][]\r\n/**\r\n * Distance representation\r\n */\r\nclass DistanceRepresentation extends MeasurementRepresentation {\r\n  protected labelUnit: string\r\n  protected atomPair: AtomPair\r\n  protected useCylinder: boolean\r\n  protected distanceBuffer: WideLineBuffer|CylinderGeometryBuffer\r\n  /**\r\n   * Create Distance representation object\r\n   * @example\r\n   * stage.loadFile( \"rcsb://1crn\" ).then( function( o ){\r\n   *     o.addRepresentation( \"cartoon\" );\r\n   *     // either give selections (uses first selected atom) ...\r\n   *     var atomPair = [ [ \"1.CA\", \"4.CA\" ], [ \"7.CA\", \"13.CA\" ] ];\r\n   *     // or atom indices\r\n   *     var atomPair = [ [ 8, 28 ], [ 173, 121 ] ];\r\n   *     o.addRepresentation( \"distance\", { atomPair: atomPair } );\r\n   *     stage.autoView();\r\n   * } );\r\n   * @param {Structure} structure - the structure to be represented\r\n   * @param {Viewer} viewer - a viewer object\r\n   * @param {DistanceRepresentationParameters} params - distance representation parameters\r\n   */\r\n  constructor (structure: Structure, viewer: Viewer, params: Partial<DistanceRepresentationParameters>) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'distance'\r\n\r\n    this.parameters = Object.assign({\r\n      radialSegments: true,\r\n      openEnded: true,\r\n      disableImpostor: true,\r\n      labelUnit: {\r\n        type: 'select',\r\n        rebuild: true,\r\n        options: { '': '', angstrom: 'angstrom', nm: 'nm' }\r\n      },\r\n      useCylinder: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n      atomPair: {\r\n        type: 'hidden', rebuild: true\r\n      }\r\n    }, this.parameters)\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params: Partial<DistanceRepresentationParameters>) {\r\n    const p = params || {}\r\n    p.linewidth = defaults(p.linewidth, 5.0)\r\n    p.radiusType = defaults(p.radiusType, 'size')\r\n    p.radiusSize = defaults(p.radiusSize, 0.2)\r\n\r\n    this.labelUnit = defaults(p.labelUnit, '')\r\n    this.useCylinder = defaults(p.useCylinder, false)\r\n    this.atomPair = defaults(p.atomPair, [])\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  getDistanceData (sview: StructureView, atomPair: AtomPair) {\r\n    let n = atomPair.length\r\n    const text = new Array(n)\r\n    let position = new Float32Array(n * 3)\r\n    const sele1 = new Selection()\r\n    const sele2 = new Selection()\r\n\r\n    const bondStore = new BondStore()\r\n\r\n    const ap1 = sview.getAtomProxy()\r\n    const ap2 = sview.getAtomProxy()\r\n\r\n    let j = 0 // Skipped pairs\r\n    const selected = sview.getAtomSet()\r\n\r\n    atomPair.forEach((pair, i) => {\r\n      let v1 = pair[ 0 ]\r\n      let v2 = pair[ 1 ]\r\n\r\n      if (typeof(v1) === 'number' && Number.isInteger(v1) && typeof(v2) === 'number' && Number.isInteger(v2)) {\r\n        if (selected.get(v1) && selected.get(v2)) {\r\n          ap1.index = v1\r\n          ap2.index = v2\r\n        } else {\r\n          j += 1\r\n          return\r\n        }\r\n      } else {\r\n        sele1.setString(v1 as string)\r\n        sele2.setString(v2 as string)\r\n\r\n        var atomIndices1 = sview.getAtomIndices(sele1)\r\n        var atomIndices2 = sview.getAtomIndices(sele2)\r\n\r\n        if (atomIndices1!.length && atomIndices2!.length) {\r\n          ap1.index = atomIndices1![ 0 ]\r\n          ap2.index = atomIndices2![ 0 ]\r\n        } else {\r\n          j += 1\r\n          return\r\n        }\r\n      }\r\n\r\n      bondStore.addBond(ap1, ap2, 1)\r\n\r\n      i -= j\r\n      var d = ap1.distanceTo(ap2)\r\n      switch (this.labelUnit) {\r\n        case 'angstrom':\r\n          text[ i ] = d.toFixed(2) + ' ' + String.fromCharCode(0x212B)\r\n          break\r\n        case 'nm':\r\n          text[ i ] = (d / 10).toFixed(2) + ' nm'\r\n          break\r\n        default:\r\n          text[ i ] = d.toFixed(2)\r\n          break\r\n      }\r\n\r\n      var i3 = i * 3\r\n      position[ i3 + 0 ] = (ap1.x + ap2.x) / 2\r\n      position[ i3 + 1 ] = (ap1.y + ap2.y) / 2\r\n      position[ i3 + 2 ] = (ap1.z + ap2.z) / 2\r\n    })\r\n\r\n    if (j > 0) {\r\n      n -= j\r\n      position = position.subarray(0, n * 3)\r\n    }\r\n\r\n    var bondSet = new BitArray(bondStore.count, true)\r\n\r\n    return {\r\n      text: text,\r\n      position: position,\r\n      bondSet: bondSet,\r\n      bondStore: bondStore\r\n    }\r\n  }\r\n\r\n  getBondData (sview: StructureView, what: BondDataFields, params: BondDataParams): BondData {\r\n    const bondData = sview.getBondData(this.getBondParams(what, params))\r\n    if (bondData.picking) {\r\n      bondData.picking = new DistancePicker(\r\n        bondData.picking.array,\r\n        bondData.picking.structure,\r\n        params.bondStore!\r\n      ) as any\r\n    }\r\n    return bondData\r\n  }\r\n\r\n  createData (sview: StructureView) {\r\n    if (!sview.atomCount || !this.atomPair.length) return\r\n\r\n    const n = this.atomPair.length\r\n    const c = new Color(this.labelColor)\r\n    const distanceData = this.getDistanceData(sview, this.atomPair)\r\n\r\n    this.textBuffer = new TextBuffer({\r\n      position: distanceData.position,\r\n      size: uniformArray(n, this.labelSize),\r\n      color: uniformArray3(n, c.r, c.g, c.b),\r\n      text: distanceData.text\r\n    } as TextBufferData, this.getLabelBufferParams() as TextBufferParameters)\r\n\r\n    const bondParams = {\r\n      bondSet: distanceData.bondSet,\r\n      bondStore: distanceData.bondStore\r\n    }\r\n\r\n    const bondData = this.getBondData(\r\n      sview,\r\n      { position: true, color: true, picking: true, radius: this.useCylinder },\r\n      bondParams\r\n    )\r\n\r\n    if (this.useCylinder) {\r\n      this.distanceBuffer = new CylinderBuffer(\r\n        bondData as CylinderBufferData,\r\n        this.getBufferParams({\r\n          openEnded: this.openEnded,\r\n          radialSegments: this.radialSegments,\r\n          disableImpostor: this.disableImpostor,\r\n          dullInterior: true\r\n        }) \r\n      ) as CylinderGeometryBuffer\r\n    } else {\r\n      this.distanceBuffer = new WideLineBuffer(\r\n        getFixedLengthDashData(bondData as CylinderBufferData),\r\n        this.getBufferParams({\r\n          linewidth: this.linewidth,\r\n          visible: this.lineVisible,\r\n          opacity: this.lineOpacity\r\n        })\r\n      )\r\n    }\r\n\r\n    return {\r\n      bondSet: distanceData.bondSet,\r\n      bondStore: distanceData.bondStore,\r\n      position: distanceData.position,\r\n      bufferList: [ this.textBuffer, this.distanceBuffer ]\r\n    }\r\n  }\r\n\r\n  updateData (what: BondDataFields, data: StructureRepresentationData) {\r\n    super.updateData(what, data)\r\n\r\n    const bondParams = {\r\n      bondSet: data.bondSet,\r\n      bondStore: data.bondStore\r\n    }\r\n\r\n    const bondData = this.getBondData(data.sview as StructureView, what, bondParams)\r\n    const distanceData = {}\r\n\r\n    if (!what || what.color) {\r\n      Object.assign( distanceData, {\r\n        color: bondData.color,\r\n        color2: bondData.color2\r\n      })\r\n    }\r\n\r\n    if (!what || what.radius) {\r\n      Object.assign( distanceData, {radius: bondData.radius})\r\n    }\r\n\r\n    (this.distanceBuffer as CylinderGeometryBuffer).setAttributes(distanceData)\r\n  }\r\n\r\n  setParameters (params: Partial<DistanceRepresentationParameters>) {\r\n    let rebuild = false\r\n    const what = {}\r\n\r\n    super.setParameters(params, what, rebuild)\r\n\r\n    if (!this.useCylinder) {\r\n      if (params && params.lineOpacity) {\r\n        (this.distanceBuffer as WideLineBuffer).setParameters({ opacity: params.lineOpacity })\r\n      }\r\n      if (params && params.opacity !== undefined) {\r\n        (this.distanceBuffer as WideLineBuffer).setParameters({ opacity: this.lineOpacity })\r\n      }\r\n      if (params && params.linewidth) {\r\n        (this.distanceBuffer as WideLineBuffer).setParameters({ linewidth: params.linewidth })\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('distance', DistanceRepresentation)\r\n\r\nexport default DistanceRepresentation\r\n","/**\r\n * @file Vector Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\n// @ts-ignore: unused import Vector3, Matrix4 required for declaration only\r\nimport { Color, Matrix4, Vector3 } from 'three'\r\n\r\nimport '../shader/Line.vert'\r\nimport '../shader/Line.frag'\r\n\r\nimport { uniformArray3 } from '../math/array-utils'\r\nimport Buffer, { BufferDefaultParameters, BufferData, BufferParameters } from './buffer'\r\nimport { GenericColor } from '../types'\r\n\r\nfunction getSize(data: BufferData){\r\n  const n = data.position!.length / 3\r\n  return n * 2 * 3\r\n}\r\n\r\nexport interface VectorBufferData extends BufferData {\r\n  vector: Float32Array\r\n}\r\n\r\nexport const VectorBufferDefaultParameters = Object.assign({\r\n  scale: 1,\r\n  color: 'grey'\r\n}, BufferDefaultParameters)\r\nexport type VectorBufferParameters = BufferParameters & { scale: number, color: GenericColor }\r\n\r\n/**\r\n * Vector buffer. Draws vectors as lines.\r\n */\r\nclass VectorBuffer extends Buffer {\r\n  get defaultParameters() { return VectorBufferDefaultParameters }\r\n  parameters: VectorBufferParameters\r\n\r\n  isLine = true\r\n  vertexShader = 'Line.vert'\r\n  fragmentShader = 'Line.frag'\r\n\r\n  /**\r\n   * @param  {Object} data - attribute object\r\n   * @param  {Float32Array} data.position - positions\r\n   * @param  {Float32Array} data.vector - vectors\r\n   * @param  {BufferParameters} params - parameter object\r\n   */\r\n  constructor (data: VectorBufferData, params: Partial<VectorBufferParameters> = {}) {\r\n    super({\r\n      position: new Float32Array(getSize(data)),\r\n      color: new Float32Array(getSize(data))\r\n    }, params)\r\n\r\n    const color = new Color(this.parameters.color)\r\n    const attributes = this.geometry.attributes as any  // TODO\r\n    uniformArray3(getSize(data) / 3, color.r, color.g, color.b, attributes.color.array)\r\n\r\n    this.setAttributes(data)\r\n  }\r\n\r\n  setAttributes (data: Partial<VectorBufferData> = {}) {\r\n    const attributes = this.geometry.attributes as any  // TODO\r\n\r\n    let position, vector\r\n    let aPosition\r\n\r\n    if (data.position && data.vector) {\r\n      position = data.position\r\n      vector = data.vector\r\n      aPosition = attributes.position.array\r\n      attributes.position.needsUpdate = true\r\n    }\r\n\r\n    const n = this.size / 2\r\n    const scale = this.parameters.scale\r\n\r\n    if (position && vector) {\r\n      for (let v = 0; v < n; v++) {\r\n        const i = v * 2 * 3\r\n        const j = v * 3\r\n\r\n        aPosition[ i + 0 ] = position[ j + 0 ]\r\n        aPosition[ i + 1 ] = position[ j + 1 ]\r\n        aPosition[ i + 2 ] = position[ j + 2 ]\r\n        aPosition[ i + 3 ] = position[ j + 0 ] + vector[ j + 0 ] * scale\r\n        aPosition[ i + 4 ] = position[ j + 1 ] + vector[ j + 1 ] * scale\r\n        aPosition[ i + 5 ] = position[ j + 2 ] + vector[ j + 2 ] * scale\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default VectorBuffer\r\n","/**\r\n * @file Helixorient Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Debug, Log, RepresentationRegistry } from '../globals'\r\nimport { defaults } from '../utils'\r\nimport Helixorient from '../geometry/helixorient'\r\nimport StructureRepresentation, { StructureRepresentationParameters, StructureRepresentationData } from './structure-representation'\r\nimport SphereBuffer, { SphereBufferParameters } from '../buffer/sphere-buffer'\r\nimport VectorBuffer from '../buffer/vector-buffer'\r\nimport Viewer from '../viewer/viewer';\r\nimport { Structure } from '../ngl';\r\nimport StructureView from '../structure/structure-view';\r\nimport Polymer from '../proxy/polymer';\r\nimport { AtomDataFields } from '../structure/structure-data';\r\nimport SphereGeometryBuffer from '../buffer/spheregeometry-buffer';\r\nimport SphereImpostorBuffer from '../buffer/sphereimpostor-buffer';\r\nimport { BufferData } from '../buffer/buffer';\r\n\r\n/**\r\n * Helixorient Representation\r\n */\r\nclass HelixorientRepresentation extends StructureRepresentation {\r\n  constructor (structure: Structure, viewer: Viewer, params: Partial<StructureRepresentationParameters>) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'helixorient'\r\n\r\n    this.parameters = Object.assign({\r\n      sphereDetail: true,\r\n      disableImpostor: true\r\n    }, this.parameters)\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params: Partial<StructureRepresentationParameters>) {\r\n    const p = params || {}\r\n    p.colorScheme = defaults(p.colorScheme, 'sstruc')\r\n    p.radiusType = defaults(p.radiusType, 'size')\r\n    p.radiusSize = defaults(p.radiusSize, 0.15)\r\n    p.radiusScale = defaults(p.radiusScale, 1.0)\r\n    p.useInteriorColor = defaults(p.useInteriorColor, true)\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  createData (sview: StructureView) {\r\n    const bufferList: (SphereBuffer|VectorBuffer)[] = []\r\n    const polymerList: Polymer[] = []\r\n\r\n    this.structure.eachPolymer(polymer => {\r\n      if (polymer.residueCount < 4) return\r\n      polymerList.push(polymer)\r\n\r\n      const helixorient = new Helixorient(polymer)\r\n      const position = helixorient.getPosition()\r\n      const color = helixorient.getColor(this.getColorParams())\r\n      const size = helixorient.getSize(this.getRadiusParams())\r\n      const picking = helixorient.getPicking()\r\n\r\n      bufferList.push(\r\n        new SphereBuffer(\r\n          {\r\n            position: position.center,\r\n            color: color.color,\r\n            radius: size.size,\r\n            picking: picking.picking\r\n          },\r\n          this.getBufferParams({\r\n            sphereDetail: this.sphereDetail,\r\n            disableImpostor: this.disableImpostor,\r\n            dullInterior: true\r\n          }) as SphereBufferParameters\r\n        ),\r\n        new VectorBuffer(\r\n          {\r\n            position: position.center,\r\n            vector: position.axis\r\n          },\r\n          this.getBufferParams({\r\n            color: 'skyblue',\r\n            scale: 1\r\n          })\r\n        ),\r\n        new VectorBuffer(\r\n          {\r\n            position: position.center,\r\n            vector: position.resdir\r\n          },\r\n          this.getBufferParams({\r\n            color: 'lightgreen',\r\n            scale: 1\r\n          })\r\n        )\r\n      )\r\n    }, sview.getSelection())\r\n\r\n    return {\r\n      bufferList: bufferList as (SphereGeometryBuffer|SphereImpostorBuffer|VectorBuffer)[],\r\n      polymerList: polymerList\r\n    }\r\n  }\r\n\r\n  updateData (what: AtomDataFields, data: StructureRepresentationData) {\r\n    if (Debug) Log.time(this.type + ' repr update')\r\n\r\n    what = what || {}\r\n\r\n    for (let i = 0, il = data.polymerList!.length; i < il; ++i) {\r\n      const j = i * 3\r\n\r\n      const bufferData: Partial<BufferData> = {}\r\n      const polymer = data.polymerList![ i ]\r\n      const helixorient = new Helixorient(polymer)\r\n\r\n      if (what.position) {\r\n        const position = helixorient.getPosition()\r\n\r\n        Object.assign(bufferData, {position: position.center})\r\n\r\n        data.bufferList[ j + 1 ].setAttributes({\r\n          'position': position.center,\r\n          'vector': position.axis\r\n        })\r\n        data.bufferList[ j + 2 ].setAttributes({\r\n          'position': position.center,\r\n          'vector': position.resdir\r\n        })\r\n      }\r\n\r\n      data.bufferList[ j ].setAttributes(bufferData)\r\n    }\r\n\r\n    if (Debug) Log.timeEnd(this.type + ' repr update')\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('helixorient', HelixorientRepresentation)\r\n\r\nexport default HelixorientRepresentation\r\n","/**\r\n * @file Licorice Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { RepresentationRegistry } from '../globals'\r\nimport BallAndStickRepresentation, { BallAndStickRepresentationParameters } from './ballandstick-representation'\r\nimport { Structure } from '../ngl';\r\nimport Viewer from '../viewer/viewer';\r\n\r\n/**\r\n * Licorice representation object ({@link BallAndStickRepresentation} with `aspectRatio` fixed at 1.0)\r\n */\r\nclass LicoriceRepresentation extends BallAndStickRepresentation {\r\n  /**\r\n   * Create Licorice representation object\r\n   * @param {Structure} structure - the structure to be represented\r\n   * @param {Viewer} viewer - a viewer object\r\n   * @param {BallAndStickRepresentationParameters} params - ball and stick representation parameters\r\n   */\r\n  constructor (structure: Structure, viewer: Viewer, params: Partial<BallAndStickRepresentationParameters>) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'licorice'\r\n\r\n    this.parameters = Object.assign(\r\n      {}, this.parameters, { aspectRatio: null }\r\n    )\r\n  }\r\n\r\n  init (params: Partial<BallAndStickRepresentationParameters>) {\r\n    var p = params || {}\r\n    p.aspectRatio = 1.0\r\n\r\n    super.init(p)\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('licorice', LicoriceRepresentation)\r\n\r\nexport default LicoriceRepresentation\r\n","/**\r\n * @file Mapped Box Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { BufferParameters, BufferData } from './buffer'\r\nimport MappedBuffer from './mapped-buffer'\r\n\r\nconst mapping = new Float32Array([\r\n  -1.0, -1.0, -1.0,\r\n  1.0, -1.0, -1.0,\r\n  1.0, -1.0, 1.0,\r\n  -1.0, -1.0, 1.0,\r\n  -1.0, 1.0, -1.0,\r\n  1.0, 1.0, -1.0,\r\n  1.0, 1.0, 1.0,\r\n  -1.0, 1.0, 1.0\r\n])\r\n\r\nconst mappingIndices = new Uint16Array([\r\n  0, 1, 2,\r\n  0, 2, 3,\r\n  1, 5, 6,\r\n  1, 6, 2,\r\n  4, 6, 5,\r\n  4, 7, 6,\r\n  0, 7, 4,\r\n  0, 3, 7,\r\n  0, 5, 1,\r\n  0, 4, 5,\r\n  3, 2, 6,\r\n  3, 6, 7\r\n])\r\n\r\n/**\r\n * Mapped Box buffer. Draws boxes. Used to render general imposters.\r\n * @interface\r\n */\r\nclass MappedBoxBuffer extends MappedBuffer {\r\n  constructor(data: BufferData, params: Partial<BufferParameters> = {}) {\r\n    super('v3', data, params)\r\n  }\r\n  get mapping () { return mapping }\r\n  get mappingIndices () { return mappingIndices }\r\n  get mappingIndicesSize () { return 36 }\r\n  get mappingSize () { return 8 }\r\n  get mappingItemSize () { return 3 }\r\n}\r\n\r\nexport default MappedBoxBuffer\r\n","/**\r\n * @file Hyperball Stick Impostor Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\n// @ts-ignore: unused import Vector3 required for declaration only\r\nimport { Matrix4, Vector3 } from 'three'\r\n\r\nimport '../shader/HyperballStickImpostor.vert'\r\nimport '../shader/HyperballStickImpostor.frag'\r\n\r\nimport MappedBoxBuffer from './mappedbox-buffer'\r\nimport { BufferDefaultParameters, BufferParameterTypes, BufferData, BufferParameters } from './buffer'\r\n\r\nexport interface HyperballStickImpostorBufferData extends BufferData {\r\n  position1: Float32Array\r\n  position2: Float32Array\r\n  color2: Float32Array\r\n  radius: Float32Array\r\n  radius2: Float32Array\r\n}\r\n\r\nexport const HyperballStickImpostorBufferDefaultParameters = Object.assign({\r\n  shrink: 0.14\r\n}, BufferDefaultParameters)\r\nexport type HyperballStickImpostorBufferParameters = BufferParameters & { shrink: number }\r\n\r\nconst HyperballStickImpostorBufferParameterTypes = Object.assign({\r\n  shrink: { uniform: true }\r\n}, BufferParameterTypes)\r\n\r\n/**\r\n * Hyperball stick impostor buffer.\r\n *\r\n * @example\r\n * var hyperballStickImpostorBuffer = new HyperballStickImpostorBuffer({\r\n *   position1: new Float32Array([ 0, 0, 0 ]),\r\n *   position2: new Float32Array([ 2, 2, 2 ]),\r\n *   color: new Float32Array([ 1, 0, 0 ]),\r\n *   color2: new Float32Array([ 0, 1, 0 ]),\r\n *   radius: new Float32Array([ 1 ]),\r\n *   radius2: new Float32Array([ 2 ])\r\n * });\r\n */\r\nclass HyperballStickImpostorBuffer extends MappedBoxBuffer {\r\n  parameterTypes = HyperballStickImpostorBufferParameterTypes\r\n  get defaultParameters() { return HyperballStickImpostorBufferDefaultParameters }\r\n  parameters: HyperballStickImpostorBufferParameters\r\n\r\n  isImpostor = true\r\n  vertexShader = 'HyperballStickImpostor.vert'\r\n  fragmentShader = 'HyperballStickImpostor.frag'\r\n\r\n  constructor (data: HyperballStickImpostorBufferData, params: Partial<HyperballStickImpostorBufferParameters> = {}) {\r\n    super(data, params)\r\n\r\n    this.addUniforms({\r\n      'modelViewProjectionMatrix': { value: new Matrix4() },\r\n      'modelViewProjectionMatrixInverse': { value: new Matrix4() },\r\n      'modelViewMatrixInverseTranspose': { value: new Matrix4() },\r\n      'shrink': { value: this.parameters.shrink }\r\n    })\r\n\r\n    this.addAttributes({\r\n      'position1': { type: 'v3', value: null },\r\n      'position2': { type: 'v3', value: null },\r\n      'color2': { type: 'c', value: null },\r\n      'radius': { type: 'f', value: null },\r\n      'radius2': { type: 'f', value: null }\r\n    })\r\n\r\n    this.setAttributes(data)\r\n    this.makeMapping()\r\n  }\r\n}\r\n\r\nexport default HyperballStickImpostorBuffer\r\n","/**\r\n * @file Hyperball Stick Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\n// @ts-ignore: unused import required for declaration only\r\nimport { Vector3, Matrix4 } from 'three'\r\nimport { ExtensionFragDepth } from '../globals'\r\nimport { calculateMinArray } from '../math/array-utils'\r\nimport CylinderGeometryBuffer, { CylinderGeometryBufferDefaultParameters, CylinderGeometryBufferParameters } from './cylindergeometry-buffer'\r\nimport HyperballStickImpostorBuffer, { HyperballStickImpostorBufferDefaultParameters, HyperballStickImpostorBufferParameters } from './hyperballstickimpostor-buffer'\r\nimport { BufferData } from './buffer'\r\n\r\nexport interface HyperballStickBufferData extends BufferData {\r\n  position1: Float32Array\r\n  position2: Float32Array\r\n  color2: Float32Array\r\n  radius: Float32Array\r\n  radius2: Float32Array\r\n}\r\n\r\nexport const HyperballStickBufferDefaultParameters = Object.assign({\r\n  disableImpostor: false\r\n}, CylinderGeometryBufferDefaultParameters, HyperballStickImpostorBufferDefaultParameters)\r\nexport type HyperballStickBufferParameters = HyperballStickImpostorBufferParameters & CylinderGeometryBufferParameters & { disableImpostor: boolean }\r\n\r\nclass HyperballStickBufferImpl {\r\n  /**\r\n   * @param  {Object} data - attribute object\r\n   * @param  {Float32Array} data.position1 - from positions\r\n   * @param  {Float32Array} data.position2 - to positions\r\n   * @param  {Float32Array} data.color - from colors\r\n   * @param  {Float32Array} data.color2 - to colors\r\n   * @param  {Float32Array} data.radius - from radii\r\n   * @param  {Float32Array} data.radius2 - to radii\r\n   * @param  {Float32Array} data.picking - picking ids\r\n   * @param  {BufferParameters} params - parameter object\r\n   */\r\n  constructor (data: HyperballStickBufferData, params: Partial<HyperballStickBufferParameters> = {}) {\r\n    if (!ExtensionFragDepth || (params && params.disableImpostor)) {\r\n      data.radius = calculateMinArray(data.radius, data.radius2)\r\n      return new CylinderGeometryBuffer(data, params)\r\n    } else {\r\n      return new HyperballStickImpostorBuffer(data, params)\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Hyperball stick buffer. Depending on the value {@link ExtensionFragDepth} and\r\n * `params.disableImpostor` the constructor returns either a\r\n * {@link CylinderGeometryBuffer} or a {@link HyperballStickImpostorBuffer}\r\n * @implements {Buffer}\r\n *\r\n * @example\r\n * var hyperballStickBuffer = new HyperballStickBuffer({\r\n *   position1: new Float32Array([ 0, 0, 0 ]),\r\n *   position2: new Float32Array([ 2, 2, 2 ]),\r\n *   color: new Float32Array([ 1, 0, 0 ]),\r\n *   color2: new Float32Array([ 0, 1, 0 ]),\r\n *   radius: new Float32Array([ 1 ]),\r\n *   radius2: new Float32Array([ 2 ])\r\n * });\r\n */\r\n//@ts-expect-error Incompatible constructor signatures\r\nconst HyperballStickBuffer: {\r\n  new(data: HyperballStickBufferData, params: Partial<HyperballStickBufferParameters>): CylinderGeometryBuffer | HyperballStickImpostorBuffer;\r\n} = HyperballStickBufferImpl;\r\n\r\ntype HyperballStickBuffer = CylinderGeometryBuffer | HyperballStickImpostorBuffer;\r\n\r\nexport default HyperballStickBuffer\r\n","/**\r\n * @file Hyperball Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { RepresentationRegistry } from '../globals'\r\nimport { defaults } from '../utils'\r\nimport { calculateCenterArray } from '../math/array-utils'\r\nimport LicoriceRepresentation from './licorice-representation'\r\nimport SphereBuffer, { SphereBufferData, SphereBufferParameters } from '../buffer/sphere-buffer'\r\nimport HyperballStickBuffer, { HyperballStickBufferData } from '../buffer/hyperballstick-buffer'\r\nimport { BallAndStickRepresentationParameters } from './ballandstick-representation';\r\n// @ts-ignore: unused import Volume required for declaration only\r\nimport { Structure, Volume } from '../ngl';\r\nimport Viewer from '../viewer/viewer';\r\nimport { BondDataParams, BondDataFields, AtomDataFields } from '../structure/structure-data';\r\nimport StructureView from '../structure/structure-view';\r\nimport { StructureRepresentationData } from './structure-representation';\r\nimport SphereGeometryBuffer from '../buffer/spheregeometry-buffer';\r\n// @ts-ignore: unused import Surface required for declaration only\r\nimport Surface from '../surface/surface';\r\n\r\nexport interface HyperballRepresentationParameters extends BallAndStickRepresentationParameters {\r\n  shrink: number\r\n}\r\n\r\n/**\r\n * Hyperball Representation\r\n */\r\nclass HyperballRepresentation extends LicoriceRepresentation {\r\n  protected shrink: number\r\n  protected __center: Float32Array\r\n  \r\n  constructor (structure: Structure, viewer: Viewer, params: Partial<HyperballRepresentationParameters>) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'hyperball'\r\n\r\n    this.parameters = Object.assign({\r\n\r\n      shrink: {\r\n        type: 'number', precision: 3, max: 1.0, min: 0.001, buffer: true\r\n      }\r\n\r\n    }, this.parameters, {\r\n\r\n      multipleBond: null,\r\n      bondSpacing: null\r\n\r\n    })\r\n  }\r\n\r\n  init (params: Partial<HyperballRepresentationParameters>) {\r\n    var p = params || {}\r\n    p.radiusScale = defaults(p.radiusScale, 0.2)\r\n    p.radiusType = defaults(p.radiusType, 'vdw')\r\n    p.useInteriorColor = defaults(p.useInteriorColor, true)\r\n\r\n    this.shrink = defaults(p.shrink, 0.12)\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  getBondParams (what?: BondDataFields, params?: BondDataParams) {\r\n    if (!what || what.radius) {\r\n      params = Object.assign({ radius2: true }, params)\r\n    }\r\n\r\n    return super.getBondParams(what, params)\r\n  }\r\n\r\n  createData (sview: StructureView) {\r\n    var sphereBuffer = new SphereBuffer(\r\n      (sview.getAtomData(this.getAtomParams()) as SphereBufferData),\r\n      this.getBufferParams({\r\n        sphereDetail: this.sphereDetail,\r\n        disableImpostor: this.disableImpostor,\r\n        dullInterior: true\r\n      }) as SphereBufferParameters\r\n    ) as SphereGeometryBuffer\r\n\r\n    this.__center = new Float32Array(sview.bondCount * 3)\r\n\r\n    var stickBuffer = new HyperballStickBuffer(\r\n      sview.getBondData(this.getBondParams()) as HyperballStickBufferData,\r\n      this.getBufferParams({\r\n        shrink: this.shrink,\r\n        radialSegments: this.radialSegments,\r\n        disableImpostor: this.disableImpostor,\r\n        dullInterior: true\r\n      })\r\n    )\r\n\r\n    return {\r\n      bufferList: [ sphereBuffer, stickBuffer ]\r\n    }\r\n  }\r\n\r\n  updateData (what: AtomDataFields, data: StructureRepresentationData) {\r\n    var atomData = data.sview!.getAtomData(this.getAtomParams())\r\n    var bondData = data.sview!.getBondData(this.getBondParams())\r\n    var sphereData = {}\r\n    var stickData = {}\r\n\r\n    if (!what || what.position) {\r\n      Object.assign(sphereData, {position: atomData.position})\r\n      var from = bondData.position1\r\n      var to = bondData.position2\r\n      Object.assign(stickData, {\r\n        position: calculateCenterArray(from!, to!, this.__center),\r\n        position1: from,\r\n        position2: to\r\n      })\r\n    }\r\n\r\n    if (!what || what.color) {\r\n      Object.assign(sphereData, {color: atomData.color})\r\n      Object.assign(stickData, {\r\n        color: bondData.color,\r\n        color2: bondData.color2\r\n      })\r\n    }\r\n\r\n    if (!what || what.radius) {\r\n      Object.assign(sphereData, {radius: atomData.radius})\r\n      Object.assign(stickData, {\r\n        radius: bondData.radius,\r\n        radius2: bondData.radius2\r\n      })\r\n    }\r\n\r\n    data.bufferList[ 0 ].setAttributes(sphereData)\r\n    data.bufferList[ 1 ].setAttributes(stickData)\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('hyperball', HyperballRepresentation)\r\n\r\nexport default HyperballRepresentation\r\n","/**\r\n * @file Label Factory\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { AA1 } from '../structure/structure-constants'\r\nimport AtomProxy from '../proxy/atom-proxy'\r\nimport { sprintf } from 'sprintf-js'\r\n\r\nexport const LabelFactoryTypes = {\r\n  '': '',\r\n  'atomname': 'atom name',\r\n  'atomindex': 'atom index',\r\n  'occupancy': 'occupancy',\r\n  'bfactor': 'b-factor',\r\n  'serial': 'serial',\r\n  'element': 'element',\r\n  'atom': 'atom name + index',\r\n  'resname': 'residue name',\r\n  'resno': 'residue no',\r\n  'res': 'one letter code + no',\r\n  'residue': '[residue name] + no + inscode',\r\n  'text': 'text',\r\n  'format': 'format',\r\n  'qualified': 'qualified name'\r\n}\r\nexport type LabelType = keyof typeof LabelFactoryTypes\r\n\r\nclass LabelFactory {\r\n\r\n  static types = LabelFactoryTypes\r\n  errorLogged: boolean = false\r\n\r\n  constructor(readonly type: LabelType, readonly text: { [k: number]: string } = {},\r\n    readonly format: string = '') {}\r\n\r\n  atomLabel (a: AtomProxy) {\r\n    const type = this.type\r\n\r\n    let l\r\n\r\n    switch (type) {\r\n      case 'atomname':\r\n        l = a.atomname\r\n        break\r\n\r\n      case 'atomindex':\r\n        l = `${a.index}`\r\n        break\r\n\r\n      case 'occupancy':\r\n        l = a.occupancy.toFixed(2)\r\n        break\r\n\r\n      case 'bfactor':\r\n        l = a.bfactor.toFixed(2)\r\n        break\r\n\r\n      case 'serial':\r\n        l = `${a.serial}`\r\n        break\r\n\r\n      case 'element':\r\n        l = a.element\r\n        break\r\n\r\n      case 'atom':\r\n        l = `${a.atomname}|${a.index}`\r\n        break\r\n\r\n      case 'resname':\r\n        l = a.resname\r\n        break\r\n\r\n      case 'resno':\r\n        l = `${a.resno}`\r\n        break\r\n\r\n      case 'res':\r\n        l = `${(AA1[ a.resname.toUpperCase() ] || a.resname)}${a.resno}`\r\n        break\r\n\r\n      case 'residue':\r\n        const aa1 = AA1[ a.resname.toUpperCase() ]\r\n        if (aa1 && !a.inscode) {\r\n          l = `${aa1}${a.resno}`\r\n        } else {\r\n          l = `[${a.resname}]${a.resno}${a.inscode}`\r\n        }\r\n        break\r\n\r\n      case 'text':\r\n        l = this.text[ a.index ]\r\n        break\r\n\r\n      case 'format':\r\n        try {\r\n          l = sprintf(this.format, a)\r\n        } catch (e) {\r\n          if (!this.errorLogged) {\r\n            this.errorLogged = true\r\n            console.log(e.message)\r\n          }\r\n        }\r\n        break\r\n\r\n      // case \"qualified\":\r\n      default:\r\n        l = a.qualifiedName()\r\n        break\r\n    }\r\n\r\n    return l === undefined ? '' : l\r\n  }\r\n}\r\n\r\nexport default LabelFactory\r\n","/**\r\n * @file Label Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { RepresentationRegistry, ColormakerRegistry } from '../globals'\r\nimport { defaults } from '../utils'\r\nimport LabelFactory, { LabelType } from '../utils/label-factory'\r\nimport RadiusFactory from '../utils/radius-factory'\r\nimport StructureRepresentation, { StructureRepresentationData } from './structure-representation'\r\nimport TextBuffer, { TextBufferData } from '../buffer/text-buffer'\r\nimport { RepresentationParameters } from './representation';\r\nimport { Structure } from '../ngl';\r\nimport Viewer from '../viewer/viewer';\r\nimport StructureView from '../structure/structure-view';\r\nimport { GenericColor } from '../types'\r\n\r\nexport interface TextDataField {\r\n  position?: boolean\r\n  color?: boolean\r\n  radius?: boolean\r\n  text?: boolean\r\n}\r\n\r\n/**\r\n * Label representation parameter object. Extends {@link RepresentationParameters} and\r\n * {@link StructureRepresentationParameters}.\r\n *\r\n * @typedef {Object} LabelRepresentationParameters - label representation parameters\r\n *\r\n * @property {Integer} clipNear - position of camera near/front clipping plane\r\n *                                in percent of scene bounding box\r\n * @property {Float} opacity - translucency: 1 is fully opaque, 0 is fully transparent\r\n * @property {String} labelType - type of the label, one of:\r\n *                                 \"atomname\", \"atomindex\", \"occupancy\", \"bfactor\",\r\n *                                 \"serial\", \"element\", \"atom\", \"resname\", \"resno\",\r\n *                                 \"res\", \"text\", \"qualified\". When set to \"text\", the\r\n *                                 `labelText` list is used.\r\n * @property {String[]} labelText - list of label strings, must set `labelType` to \"text\"\r\n *                                   to take effect\r\n * @property {String} labelFormat - sprintf-js format string, any attribute of\r\n *                                  {@link  AtomProxy} can be used\r\n * @property {String} labelGrouping - grouping of the label, one of:\r\n *                                 \"atom\", \"residue\".\r\n * @property {String} fontFamily - font family, one of: \"sans-serif\", \"monospace\", \"serif\"\r\n * @property {String} fontStyle - font style, \"normal\" or \"italic\"\r\n * @property {String} fontWeight - font weight, \"normal\" or \"bold\"\r\n * @property {Float} xOffset - offset in x-direction\r\n * @property {Float} yOffset - offset in y-direction\r\n * @property {Float} zOffset - offset in z-direction (i.e. in camera direction)\r\n * @property {String} attachment - attachment of the label, one of:\r\n *                                 \"bottom-left\", \"bottom-center\", \"bottom-right\",\r\n *                                 \"middle-left\", \"middle-center\", \"middle-right\",\r\n *                                 \"top-left\", \"top-center\", \"top-right\"\r\n * @property {Boolean} showBorder - show border/outline\r\n * @property {Color} borderColor - color of the border/outline\r\n * @property {Float} borderWidth - width of the border/outline\r\n * @property {Boolean} showBackground - show background rectangle\r\n * @property {Color} backgroundColor - color of the background\r\n * @property {Float} backgroundMargin - width of the background\r\n * @property {Float} backgroundOpacity - opacity of the background\r\n * @property {Boolean} fixedSize - show text with a fixed pixel size\r\n */\r\nexport interface LabelRepresentationParameters extends RepresentationParameters {\r\n  labelType: LabelType\r\n  labelText: string[]\r\n  labelFormat: string\r\n  labelGrouping: 'atom'|'residue'\r\n  fontFamily: 'sans-serif'|'monospace'|'serif'\r\n  fontStyle: 'normal'|'italic'\r\n  fontWeight: 'normal'|'bold'\r\n  xOffset: number\r\n  yOffset: number\r\n  zOffset: number\r\n  attachment: 'bottom-left'|'bottom-center'|'bottom-right'|'middle-left'|'middle-center'|'middle-right'|'top-left'|'top-center'|'top-right'\r\n  showBorder: boolean\r\n  borderColor: GenericColor\r\n  borderWidth: number\r\n  showBackground: boolean\r\n  backgroundColor: GenericColor\r\n  backgroundMargin: number\r\n  backgroundOpacity: number\r\n  fixedSize: boolean\r\n}\r\n/**\r\n * Label representation\r\n */\r\nclass LabelRepresentation extends StructureRepresentation {\r\n\r\n  protected labelType: LabelType\r\n  protected labelText: string[]\r\n  protected labelFormat: string\r\n  protected labelGrouping: 'atom'|'residue'\r\n  protected fontFamily: 'sans-serif'|'monospace'|'serif'\r\n  protected fontStyle: 'normal'|'italic'\r\n  protected fontWeight: 'normal'|'bold'\r\n  protected xOffset: number\r\n  protected yOffset: number\r\n  protected zOffset: number\r\n  protected attachment: 'bottom-left'|'bottom-center'|'bottom-right'|'middle-left'|'middle-center'|'middle-right'|'top-left'|'top-center'|'top-right'\r\n  protected showBorder: boolean\r\n  protected borderColor: GenericColor\r\n  protected borderWidth: number\r\n  protected showBackground: boolean\r\n  protected backgroundColor: GenericColor\r\n  protected backgroundMargin: number\r\n  protected backgroundOpacity: number\r\n  protected fixedSize: boolean\r\n\r\n  /**\r\n   * Create Label representation object\r\n   * @param {Structure} structure - the structure to be represented\r\n   * @param {Viewer} viewer - a viewer object\r\n   * @param {LabelRepresentationParameters} params - label representation parameters\r\n   */\r\n  constructor (structure: Structure, viewer: Viewer, params: Partial<LabelRepresentationParameters>) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'label'\r\n\r\n    this.parameters = Object.assign({\r\n\r\n      labelType: {\r\n        type: 'select', options: LabelFactory.types, rebuild: true\r\n      },\r\n      labelText: {\r\n        type: 'hidden', rebuild: true\r\n      },\r\n      labelFormat: {\r\n        type: 'text', rebuild: true\r\n      },\r\n      labelGrouping: {\r\n        type: 'select',\r\n        options: {\r\n          'atom': 'atom',\r\n          'residue': 'residue'\r\n        },\r\n        rebuild: true\r\n      },\r\n      fontFamily: {\r\n        type: 'select',\r\n        options: {\r\n          'sans-serif': 'sans-serif',\r\n          'monospace': 'monospace',\r\n          'serif': 'serif'\r\n        },\r\n        buffer: true\r\n      },\r\n      fontStyle: {\r\n        type: 'select',\r\n        options: {\r\n          'normal': 'normal',\r\n          'italic': 'italic'\r\n        },\r\n        buffer: true\r\n      },\r\n      fontWeight: {\r\n        type: 'select',\r\n        options: {\r\n          'normal': 'normal',\r\n          'bold': 'bold'\r\n        },\r\n        buffer: true\r\n      },\r\n      xOffset: {\r\n        type: 'number', precision: 1, max: 20, min: -20, buffer: true\r\n      },\r\n      yOffset: {\r\n        type: 'number', precision: 1, max: 20, min: -20, buffer: true\r\n      },\r\n      zOffset: {\r\n        type: 'number', precision: 1, max: 20, min: -20, buffer: true\r\n      },\r\n      attachment: {\r\n        type: 'select',\r\n        options: {\r\n          'bottom-left': 'bottom-left',\r\n          'bottom-center': 'bottom-center',\r\n          'bottom-right': 'bottom-right',\r\n          'middle-left': 'middle-left',\r\n          'middle-center': 'middle-center',\r\n          'middle-right': 'middle-right',\r\n          'top-left': 'top-left',\r\n          'top-center': 'top-center',\r\n          'top-right': 'top-right'\r\n        },\r\n        rebuild: true\r\n      },\r\n      showBorder: {\r\n        type: 'boolean', buffer: true\r\n      },\r\n      borderColor: {\r\n        type: 'color', buffer: true\r\n      },\r\n      borderWidth: {\r\n        type: 'number', precision: 2, max: 0.3, min: 0, buffer: true\r\n      },\r\n      showBackground: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n      backgroundColor: {\r\n        type: 'color', buffer: true\r\n      },\r\n      backgroundMargin: {\r\n        type: 'number', precision: 2, max: 2, min: 0, rebuild: true\r\n      },\r\n      backgroundOpacity: {\r\n        type: 'range', step: 0.01, max: 1, min: 0, buffer: true\r\n      },\r\n      fixedSize: {\r\n        type: 'boolean', buffer: true\r\n      }\r\n\r\n    }, this.parameters, {\r\n\r\n      side: null,\r\n      flatShaded: null,\r\n      wireframe: null,\r\n      linewidth: null,\r\n\r\n      roughness: null,\r\n      metalness: null,\r\n      diffuse: null\r\n\r\n    })\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params: Partial<LabelRepresentationParameters>) {\r\n    const p = params || {}\r\n\r\n    this.labelType = defaults(p.labelType, 'res')\r\n    this.labelText = defaults(p.labelText, {})\r\n    this.labelFormat = defaults(p.labelFormat, '')\r\n    this.labelGrouping = defaults(p.labelGrouping, 'atom')\r\n    this.fontFamily = defaults(p.fontFamily, 'sans-serif')\r\n    this.fontStyle = defaults(p.fontStyle, 'normal')\r\n    this.fontWeight = defaults(p.fontWeight, 'bold')\r\n    this.xOffset = defaults(p.xOffset, 0.0)\r\n    this.yOffset = defaults(p.yOffset, 0.0)\r\n    this.zOffset = defaults(p.zOffset, 0.5)\r\n    this.attachment = defaults(p.attachment, 'bottom-left')\r\n    this.showBorder = defaults(p.showBorder, false)\r\n    this.borderColor = defaults(p.borderColor, 'lightgrey')\r\n    this.borderWidth = defaults(p.borderWidth, 0.15)\r\n    this.showBackground = defaults(p.showBackground, false)\r\n    this.backgroundColor = defaults(p.backgroundColor, 'lightgrey')\r\n    this.backgroundMargin = defaults(p.backgroundMargin, 0.5)\r\n    this.backgroundOpacity = defaults(p.backgroundOpacity, 1.0)\r\n    this.fixedSize = defaults(p.fixedSize, false)\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  getTextData (sview: StructureView, what?: TextDataField) {\r\n    const p = this.getAtomParams(what)\r\n    const labelFactory = new LabelFactory(this.labelType, this.labelText, this.labelFormat)\r\n    let position: Float32Array, size: Float32Array, color: Float32Array, text: string[],\r\n      positionN: number[], sizeN: number[], colorN: number[]\r\n    if (this.labelGrouping === 'atom') {\r\n      const atomData = sview.getAtomData(p)\r\n      position = atomData.position as Float32Array\r\n      size = atomData.radius as Float32Array\r\n      color = atomData.color as Float32Array\r\n      if (!what || what.text) {\r\n        text = []\r\n        sview.eachAtom(ap => text.push(labelFactory.atomLabel(ap)))\r\n      }\r\n    } else if (this.labelGrouping === 'residue') {\r\n      if (!what || what.position) positionN = []\r\n      if (!what || what.color) colorN = []\r\n      if (!what || what.radius) sizeN = []\r\n      if (!what || what.text) text = []\r\n      if (p.colorParams) p.colorParams.structure = sview.getStructure()\r\n      const colormaker = ColormakerRegistry.getScheme(p.colorParams)\r\n      const radiusFactory = new RadiusFactory(p.radiusParams)\r\n      const ap1 = sview.getAtomProxy()\r\n\r\n      let i = 0\r\n      sview.eachResidue(rp => {\r\n        const i3 = i * 3\r\n        if (rp.isProtein() || rp.isNucleic()) {\r\n          ap1.index = rp.traceAtomIndex\r\n          if (!what || what.position) {\r\n            ap1.positionToArray(positionN, i3)\r\n          }\r\n        } else {\r\n          ap1.index = rp.atomOffset\r\n          if (!what || what.position) {\r\n            rp.positionToArray(positionN, i3)\r\n          }\r\n        }\r\n        if (!what || what.color) {\r\n          colormaker.atomColorToArray(ap1, colorN, i3)\r\n        }\r\n        if (!what || what.radius) {\r\n          sizeN[ i ] = radiusFactory.atomRadius(ap1)\r\n        }\r\n        if (!what || what.text) {\r\n          text.push(labelFactory.atomLabel(ap1))\r\n        }\r\n        ++i\r\n      })\r\n\r\n      if (!what || what.position) position = new Float32Array(positionN!)\r\n      if (!what || what.color) color = new Float32Array(colorN!)\r\n      if (!what || what.radius) size = new Float32Array(sizeN!)\r\n    }\r\n\r\n    return { position: position!, size: size!, color: color!, text: text! }\r\n  }\r\n\r\n  createData (sview: StructureView) {\r\n    const what: TextDataField = { position: true, color: true, radius: true, text: true }\r\n\r\n    const textBuffer = new TextBuffer(\r\n      this.getTextData(sview, what) as TextBufferData,\r\n      this.getBufferParams({\r\n        fontFamily: this.fontFamily,\r\n        fontStyle: this.fontStyle,\r\n        fontWeight: this.fontWeight,\r\n        xOffset: this.xOffset,\r\n        yOffset: this.yOffset,\r\n        zOffset: this.zOffset,\r\n        attachment: this.attachment,\r\n        showBorder: this.showBorder,\r\n        borderColor: this.borderColor,\r\n        borderWidth: this.borderWidth,\r\n        showBackground: this.showBackground,\r\n        backgroundColor: this.backgroundColor,\r\n        backgroundMargin: this.backgroundMargin,\r\n        backgroundOpacity: this.backgroundOpacity,\r\n        fixedSize: this.fixedSize\r\n      })\r\n    )\r\n\r\n    return { bufferList: [ textBuffer ] }\r\n  }\r\n\r\n  updateData (what: TextDataField, data: StructureRepresentationData) {\r\n    data.bufferList[ 0 ].setAttributes(this.getTextData(data.sview as StructureView, what))\r\n  }\r\n\r\n  getAtomRadius () {\r\n    return 0\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('label', LabelRepresentation)\r\n\r\nexport default LabelRepresentation\r\n","/**\r\n * @file Line Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { defaults } from '../utils'\r\nimport { RepresentationRegistry } from '../globals'\r\nimport StructureRepresentation, { StructureRepresentationParameters, StructureRepresentationData } from './structure-representation'\r\nimport WideLineBuffer from '../buffer/wideline-buffer'\r\nimport { AtomPicker } from '../utils/picker'\r\n// @ts-ignore: unused import Volume required for declaration only\r\nimport { Structure, Volume } from '../ngl';\r\nimport StructureView from '../structure/structure-view';\r\nimport Viewer from '../viewer/viewer';\r\nimport AtomProxy from '../proxy/atom-proxy';\r\n// @ts-ignore: unused import Surface required for declaration only\r\nimport Surface from '../surface/surface';\r\n// @ts-ignore: unused import BondDataFields, BondDataParams required for declaration only\r\nimport { BondDataFields, BondDataParams } from '../structure/structure-data';\r\n\r\n/**\r\n * Determine which atoms in  a Structure[View] form no bonds to any other atoms\r\n * in that Structure.\r\n *\r\n * This differs from setting the selection to \"nonbonded\" as it finds atoms\r\n * that have no bonds within the current selection.\r\n * @param  {Structure} structure - The Structure or StructureView object\r\n * @return {AtomSet} AtomSet of lone atoms\r\n */\r\nfunction getLoneAtomSet (structure: Structure | StructureView) {\r\n  const atomSet = structure.getAtomSet()\r\n  const bondSet = structure.getBondSet()\r\n  const bp = structure.getBondProxy()\r\n  bondSet.forEach(function (idx) {\r\n    bp.index = idx\r\n    atomSet.clear(bp.atomIndex1)\r\n    atomSet.clear(bp.atomIndex2)\r\n  })\r\n  return atomSet\r\n}\r\n\r\nexport interface LineRepresentationParameters extends StructureRepresentationParameters {\r\n  multipleBond: 'off' | 'symmetric' | 'offset'\r\n  bondSpacing: number\r\n  linewidth: number\r\n  lines: boolean\r\n  crosses: 'off' | 'all' | 'lone'\r\n  crossSize: number\r\n}\r\n\r\nexport interface CrossData {\r\n  position1?: Float32Array\r\n  position2?: Float32Array\r\n  color?: Float32Array\r\n  color2?: Float32Array\r\n  picking?: AtomPicker\r\n}\r\n\r\n/**\r\n * Line representation\r\n */\r\nclass LineRepresentation extends StructureRepresentation {\r\n  protected multipleBond: 'off' | 'symmetric' | 'offset'\r\n  protected bondSpacing: number\r\n  protected linewidth: number\r\n  protected lines: boolean\r\n  protected crosses: 'off' | 'all' | 'lone'\r\n  protected crossSize: number\r\n  /**\r\n   * Create Line representation object\r\n   * @param {Structure} structure - the structure to be represented\r\n   * @param {Viewer} viewer - a viewer object\r\n   * @param {RepresentationParameters} params - representation parameters, plus the properties listed below\r\n   * @property {String} multipleBond - one off \"off\", \"symmetric\", \"offset\"\r\n   * @param {Float} params.bondSpacing - spacing for multiple bond rendering\r\n   * @param {Integer} params.linewidth - width of lines\r\n   * @param {Boolean} params.lines - render bonds as lines\r\n   * @param {String} params.crosses - render atoms as crosses: \"off\", \"all\" or \"lone\" (default)\r\n   * @param {Float} params.crossSize - size of cross\r\n   * @param {null} params.flatShaded - not available\r\n   * @param {null} params.side - not available\r\n   * @param {null} params.wireframe - not available\r\n   * @param {null} params.roughness - not available\r\n   * @param {null} params.metalness - not available\r\n   * @param {null} params.diffuse - not available\r\n   */\r\n  constructor (structure: Structure, viewer: Viewer, params: Partial<LineRepresentationParameters>) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'line'\r\n\r\n    this.parameters = Object.assign({\r\n\r\n      multipleBond: {\r\n        type: 'select',\r\n        rebuild: true,\r\n        options: {\r\n          'off': 'off',\r\n          'symmetric': 'symmetric',\r\n          'offset': 'offset'\r\n        }\r\n      },\r\n      bondSpacing: {\r\n        type: 'number', precision: 2, max: 2.0, min: 0.5\r\n      },\r\n      linewidth: {\r\n        type: 'integer', max: 50, min: 1, buffer: true\r\n      },\r\n      lines: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n      crosses: {\r\n        type: 'select',\r\n        rebuild: true,\r\n        options: {\r\n          'off': 'off',\r\n          'lone': 'lone',\r\n          'all': 'all'\r\n        }\r\n      },\r\n      crossSize: {\r\n        type: 'number', precision: 2, max: 2.0, min: 0.1\r\n      }\r\n\r\n    }, this.parameters, {\r\n\r\n      flatShaded: null,\r\n      side: null,\r\n      wireframe: null,\r\n\r\n      roughness: null,\r\n      metalness: null\r\n\r\n    })\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params: Partial<LineRepresentationParameters>) {\r\n    var p = params || {}\r\n\r\n    this.multipleBond = defaults(p.multipleBond, 'off')\r\n    this.bondSpacing = defaults(p.bondSpacing, 1.0)\r\n    this.linewidth = defaults(p.linewidth, 2)\r\n    this.lines = defaults(p.lines, true)\r\n    this.crosses = defaults(p.crosses, 'lone')\r\n    this.crossSize = defaults(p.crossSize, 0.4)\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  getAtomRadius (atom:AtomProxy) {\r\n    return 0.1\r\n  }\r\n\r\n  getBondParams (what: any, params?: Partial<LineRepresentationParameters>) {\r\n    params = Object.assign({\r\n      multipleBond: this.multipleBond,\r\n      bondSpacing: this.bondSpacing,\r\n      radiusParams: { 'type': 'size', 'size': 0.1, 'scale': 1 }\r\n    }, params)\r\n\r\n    return super.getBondParams(what, params)\r\n  }\r\n\r\n  _crossData (what: any, sview: StructureView) {\r\n    if (what) {\r\n      if (!what.position && !what.color) return\r\n    }\r\n\r\n    const p = {}\r\n    if (this.crosses === 'lone') {\r\n      Object.assign(p, {atomSet : getLoneAtomSet(sview)})\r\n    }\r\n\r\n    const atomData = sview.getAtomData(this.getAtomParams(what, p))\r\n    const crossData: CrossData = {}\r\n    const position = atomData.position\r\n    const color = atomData.color\r\n    const picking = atomData.picking\r\n\r\n    const size = (position! || color).length\r\n    const attrSize = size * 3\r\n\r\n    let cPosition1 = new Float32Array(0)\r\n    let cPosition2 = new Float32Array(0)\r\n    let cColor = new Float32Array(0)\r\n    let cColor2 = new Float32Array(0)\r\n    let cOffset: number = 0\r\n\r\n    let pickingArray = new Float32Array(0)\r\n\r\n    if (!what || what.position) {\r\n      cPosition1 = crossData.position1 = new Float32Array(attrSize)\r\n      cPosition2 = crossData.position2 = new Float32Array(attrSize)\r\n      cOffset = this.crossSize / 2\r\n    }\r\n    if (!what || what.color) {\r\n      cColor = crossData.color = new Float32Array(attrSize)\r\n      cColor2 = crossData.color2 = new Float32Array(attrSize)\r\n    }\r\n    if (!what || what.picking) {\r\n      pickingArray = new Float32Array(atomData.picking!.array!.length * 3) // Needs padding??\r\n    }\r\n\r\n    for (let v = 0; v < size; v++) {\r\n      const j = v * 3\r\n      const i = j * 3\r\n\r\n      if (!what || what.position) {\r\n        const x = position![ j ]\r\n        const y = position![ j + 1 ]\r\n        const z = position![ j + 2 ]\r\n\r\n        cPosition1[ i ] = x - cOffset!\r\n        cPosition1[ i + 1 ] = y\r\n        cPosition1[ i + 2 ] = z\r\n        cPosition2[ i ] = x + cOffset\r\n        cPosition2[ i + 1 ] = y\r\n        cPosition2[ i + 2 ] = z\r\n\r\n        cPosition1[ i + 3 ] = x\r\n        cPosition1[ i + 4 ] = y - cOffset\r\n        cPosition1[ i + 5 ] = z\r\n        cPosition2[ i + 3 ] = x\r\n        cPosition2[ i + 4 ] = y + cOffset\r\n        cPosition2[ i + 5 ] = z\r\n\r\n        cPosition1[ i + 6 ] = x\r\n        cPosition1[ i + 7 ] = y\r\n        cPosition1[ i + 8 ] = z - cOffset\r\n        cPosition2[ i + 6 ] = x\r\n        cPosition2[ i + 7 ] = y\r\n        cPosition2[ i + 8 ] = z + cOffset\r\n      }\r\n\r\n      if (!what || what.color) {\r\n        const cimax = i + 9\r\n        for (let ci = i; ci < cimax; ci += 3) {\r\n          cColor[ ci ] = cColor2[ ci ] = color![ j ]\r\n          cColor[ ci + 1 ] = cColor2[ ci + 1 ] = color![ j + 1 ]\r\n          cColor[ ci + 2 ] = cColor2[ ci + 2 ] = color![ j + 2 ]\r\n        }\r\n      }\r\n\r\n      if (!what || what.picking) {\r\n        pickingArray[ j ] =\r\n        pickingArray[ j + 1 ] =\r\n        pickingArray[ j + 2 ] = picking!.array![ v ]\r\n      }\r\n    }\r\n\r\n    if (!what || what.picking) {\r\n      crossData.picking = new AtomPicker(\r\n        pickingArray, picking!.structure\r\n      )\r\n    }\r\n\r\n    return crossData\r\n  }\r\n\r\n  createData (sview: StructureView) {\r\n    const what = { position: true, color: true, picking: true }\r\n\r\n    const bufferList = []\r\n\r\n    if (this.lines) {\r\n      const bondData = sview.getBondData(this.getBondParams(what))\r\n\r\n      const lineBuffer = new WideLineBuffer(\r\n        bondData, this.getBufferParams({ linewidth: this.linewidth })\r\n      )\r\n\r\n      bufferList.push(lineBuffer)\r\n    }\r\n\r\n    if (this.crosses !== 'off') {\r\n      const crossBuffer = new WideLineBuffer(\r\n        (this._crossData(what, sview) as CrossData),\r\n        this.getBufferParams({linewidth: this.linewidth})\r\n      )\r\n      bufferList.push(crossBuffer)\r\n    }\r\n\r\n    return {\r\n      bufferList: bufferList\r\n    }\r\n  }\r\n\r\n  updateData (what: any, data: StructureRepresentationData) {\r\n    let bufferIdx = 0\r\n\r\n    if (this.lines) {\r\n      const bondData = data.sview!.getBondData(this.getBondParams(what))\r\n      const lineAttributes = {}\r\n\r\n      if (!what || what.position) {\r\n        Object.assign(lineAttributes, {\r\n          position1: bondData.position1,\r\n          position2: bondData.position2\r\n        })\r\n      }\r\n\r\n      if (!what || what.color) {\r\n        Object.assign(lineAttributes, {\r\n          color: bondData.color,\r\n          color2: bondData.color2\r\n        })\r\n      }\r\n\r\n      data.bufferList[ bufferIdx++ ].setAttributes(lineAttributes)\r\n    }\r\n\r\n    if (this.crosses !== 'off') {\r\n      const crossData = this._crossData(what, (data.sview as StructureView))\r\n      const crossAttributes = {}\r\n\r\n      if (!what || what.position) {\r\n        Object.assign(crossAttributes, {\r\n          position1: crossData!.position1,\r\n          position2: crossData!.position2\r\n        })\r\n      }\r\n      if (!what || what.color) {\r\n        Object.assign(crossAttributes, {\r\n          color: crossData!.color,\r\n          color2: crossData!.color2\r\n        })\r\n      }\r\n\r\n      data.bufferList[ bufferIdx++ ].setAttributes(crossAttributes)\r\n    }\r\n  }\r\n\r\n  setParameters (params: Partial<LineRepresentationParameters>) {\r\n    var rebuild = false\r\n    var what = {}\r\n\r\n    if (params && (params.bondSpacing || params.crossSize)) {\r\n      Object.assign(what, { position: true })\r\n    }\r\n\r\n    super.setParameters(params, what, rebuild)\r\n\r\n    return this\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('line', LineRepresentation)\r\n\r\nexport default LineRepresentation\r\n","import { NumberArray, TypedArray } from \"../types\";\r\n\r\n/**\r\n * @file Grid\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\nexport interface iGrid {\r\n  data: TypedArray\r\n  index: (x: number, y: number, z: number) => number\r\n  set: (x: number, y: number, z: number, ...arg: number[]) => void\r\n  toArray: (x: number, y: number, z: number, array?: NumberArray, offset?: number) => void\r\n  fromArray: (x: number, y: number, z: number, array: NumberArray, offset?: number) => void\r\n  copy: (grid: iGrid) => void\r\n  // clone: () => iGrid\r\n}\r\n\r\nfunction makeGrid (length: number, width: number, height: number, DataCtor: any, elemSize: number) : iGrid {\r\n  DataCtor = DataCtor || Int32Array\r\n  elemSize = elemSize || 1\r\n\r\n  const data = new DataCtor(length * width * height * elemSize)\r\n\r\n  function index (x: number, y: number, z: number) {\r\n    return ((((x * width) + y) * height) + z) * elemSize\r\n  }\r\n\r\n  function set (x: number, y: number, z: number, ...args: number[]) {\r\n    const i = index(x, y, z)\r\n\r\n    for (let j = 0; j < elemSize; ++j) {\r\n      data[ i + j ] = args[ j ]\r\n    }\r\n  }\r\n\r\n  function toArray (x: number, y: number, z: number, array: NumberArray = [], offset: number = 0) {\r\n    const i = index(x, y, z)\r\n\r\n    for (let j = 0; j < elemSize; ++j) {\r\n      array[ offset + j ] = data[ i + j ]\r\n    }\r\n  }\r\n\r\n  function fromArray(x: number, y: number, z: number, array: NumberArray, offset: number = 0) {\r\n    const i = index(x, y, z)\r\n\r\n    for (let j = 0; j < elemSize; ++j) {\r\n      data[ i + j ] = array[ offset + j ]\r\n    }\r\n  }\r\n\r\n  function copy(grid: iGrid) {\r\n    data.set(grid.data)\r\n  }\r\n\r\n  // function clone() {\r\n  //   return makeGrid(\r\n  //     length, width, height, DataCtor, elemSize\r\n  //   ).copy(this)\r\n  // }\r\n  return { data, index, set, toArray, fromArray, copy }\r\n}\r\n\r\nexport { makeGrid }","/**\r\n * @file EDT Surface\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { VolumeSurface } from './volume'\r\nimport { iGrid, makeGrid } from '../geometry/grid'\r\nimport { computeBoundingBox } from '../math/vector-utils'\r\nimport { getRadiusDict, getSurfaceGrid } from './surface-utils'\r\nimport { TypedArray } from '../types';\r\n\r\ninterface EDTSurface {\r\n  getVolume: (type: string, probeRadius: number, scaleFactor: number, cutoff: number, setAtomID: boolean) => {\r\n    data: TypedArray\r\n    nx: number\r\n    ny: number\r\n    nz: number\r\n    atomindex: TypedArray\r\n  }\r\n  getSurface: (type: string, probeRadius: number, scaleFactor: number, cutoff: number, setAtomID: boolean, smooth: number, contour: boolean) => any\r\n}\r\n\r\nfunction EDTSurface (this: EDTSurface, coordList: Float32Array, radiusList: Float32Array, indexList: Uint16Array|Uint32Array) {\r\n  // based on D. Xu, Y. Zhang (2009) Generating Triangulated Macromolecular\r\n  // Surfaces by Euclidean Distance Transform. PLoS ONE 4(12): e8140.\r\n  //\r\n  // Permission to use, copy, modify, and distribute this program for\r\n  // any purpose, with or without fee, is hereby granted, provided that\r\n  // the notices on the head, the reference information, and this\r\n  // copyright notice appear in all copies or substantial portions of\r\n  // the Software. It is provided \"as is\" without express or implied\r\n  // warranty.\r\n  //\r\n  // ported to JavaScript by biochem_fan (http://webglmol.sourceforge.jp/)\r\n  // refactored by dkoes (https://github.com/dkoes)\r\n  //\r\n  // adapted to NGL by Alexander Rose\r\n\r\n  var radiusDict = getRadiusDict(radiusList as any)\r\n  var bbox = computeBoundingBox(coordList)\r\n  if (coordList.length === 0) {\r\n    bbox[ 0 ].set([ 0, 0, 0 ])\r\n    bbox[ 1 ].set([ 0, 0, 0 ])\r\n  }\r\n  var min = bbox[ 0 ]\r\n  var max = bbox[ 1 ]\r\n\r\n  var probeRadius: number, scaleFactor: number, cutoff: number\r\n  var pLength: number, pWidth: number, pHeight: number\r\n  var matrix: Float32Array, ptran: Float32Array\r\n  var depty: {[k: string]: TypedArray}, widxz: {[k: string]: number}\r\n  var cutRadius: number\r\n  var setAtomID: boolean\r\n  var vpBits: TypedArray, vpDistance: TypedArray, vpAtomID: TypedArray\r\n\r\n  function init (btype: boolean, _probeRadius: number, _scaleFactor: number, _cutoff: number, _setAtomID: boolean) {\r\n    probeRadius = _probeRadius || 1.4\r\n    scaleFactor = _scaleFactor || 2.0\r\n    setAtomID = _setAtomID || true\r\n\r\n    var maxRadius = 0\r\n    for (var radius in radiusDict) {\r\n      maxRadius = Math.max(maxRadius, radius as any)\r\n    }\r\n\r\n    var grid = getSurfaceGrid(\r\n      min, max, maxRadius, scaleFactor, btype ? probeRadius : 0\r\n    )\r\n\r\n    pLength = grid.dim[0]\r\n    pWidth = grid.dim[1]\r\n    pHeight = grid.dim[2]\r\n\r\n    matrix = grid.matrix\r\n    ptran = grid.tran\r\n    scaleFactor = grid.scaleFactor\r\n\r\n    // boundingatom caches\r\n    depty = {}\r\n    widxz = {}\r\n    boundingatom(btype)\r\n\r\n    cutRadius = probeRadius * scaleFactor\r\n\r\n    if (_cutoff) {\r\n      cutoff = _cutoff\r\n    } else {\r\n      // cutoff = Math.max( 0.1, -1.2 + scaleFactor * probeRadius );\r\n      cutoff = probeRadius / scaleFactor\r\n    }\r\n\r\n    vpBits = new Uint8Array(pLength * pWidth * pHeight)\r\n    if (btype) {\r\n      vpDistance = new Float64Array(pLength * pWidth * pHeight)\r\n    }\r\n    if (setAtomID) {\r\n      vpAtomID = new Int32Array(pLength * pWidth * pHeight)\r\n    }\r\n  }\r\n\r\n  // constants for vpBits bitmasks\r\n  var INOUT = 1\r\n  var ISDONE = 2\r\n  var ISBOUND = 4\r\n\r\n  var nb = [\r\n    new Int32Array([ 1, 0, 0 ]), new Int32Array([ -1, 0, 0 ]),\r\n    new Int32Array([ 0, 1, 0 ]), new Int32Array([ 0, -1, 0 ]),\r\n    new Int32Array([ 0, 0, 1 ]), new Int32Array([ 0, 0, -1 ]),\r\n    new Int32Array([ 1, 1, 0 ]), new Int32Array([ 1, -1, 0 ]),\r\n    new Int32Array([ -1, 1, 0 ]), new Int32Array([ -1, -1, 0 ]),\r\n    new Int32Array([ 1, 0, 1 ]), new Int32Array([ 1, 0, -1 ]),\r\n    new Int32Array([ -1, 0, 1 ]), new Int32Array([ -1, 0, -1 ]),\r\n    new Int32Array([ 0, 1, 1 ]), new Int32Array([ 0, 1, -1 ]),\r\n    new Int32Array([ 0, -1, 1 ]), new Int32Array([ 0, -1, -1 ]),\r\n    new Int32Array([ 1, 1, 1 ]), new Int32Array([ 1, 1, -1 ]),\r\n    new Int32Array([ 1, -1, 1 ]), new Int32Array([ -1, 1, 1 ]),\r\n    new Int32Array([ 1, -1, -1 ]), new Int32Array([ -1, -1, 1 ]),\r\n    new Int32Array([ -1, 1, -1 ]), new Int32Array([ -1, -1, -1 ])\r\n  ]\r\n\r\n  //\r\n\r\n  this.getVolume = function (type: string, probeRadius: number, scaleFactor: number, cutoff: number, setAtomID: boolean) {\r\n    console.time('EDTSurface.getVolume')\r\n\r\n    var btype = type !== 'vws'\r\n\r\n    init(btype, probeRadius, scaleFactor, cutoff, setAtomID)\r\n\r\n    fillvoxels(btype)\r\n    buildboundary()\r\n\r\n    if (type === 'ms' || type === 'ses') {\r\n      fastdistancemap()\r\n    }\r\n\r\n    if (type === 'ses') {\r\n      boundingatom(false)\r\n      fillvoxelswaals()\r\n    }\r\n\r\n    marchingcubeinit(type)\r\n\r\n    // set atomindex in the volume data\r\n    for (var i = 0, il = vpAtomID.length; i < il; ++i) {\r\n      vpAtomID[ i ] = indexList[ vpAtomID[ i ] ]\r\n    }\r\n\r\n    console.timeEnd('EDTSurface.getVolume')\r\n\r\n    return {\r\n      data: vpBits,\r\n      nx: pHeight,\r\n      ny: pWidth,\r\n      nz: pLength,\r\n      atomindex: vpAtomID\r\n    }\r\n  }\r\n\r\n  this.getSurface = function (type: string, probeRadius: number, scaleFactor: number, cutoff: number, setAtomID: boolean, smooth: number, contour: boolean) {\r\n    var vd = this.getVolume(\r\n      type, probeRadius, scaleFactor, cutoff, setAtomID\r\n    )\r\n\r\n    var volsurf = new (VolumeSurface as any)(\r\n      vd.data, vd.nx, vd.ny, vd.nz, vd.atomindex\r\n    ) as VolumeSurface\r\n\r\n    return (volsurf!.getSurface as any)(1, smooth, undefined, matrix, contour)\r\n  }\r\n\r\n  function boundingatom (btype: boolean) {\r\n    var r\r\n    var j\r\n    var k\r\n    var txz\r\n    var tdept\r\n    var sradius\r\n    var tradius\r\n    var widxzR\r\n    var deptyName\r\n    var indx\r\n\r\n    for (var name in radiusDict) {\r\n      r = parseFloat(name)\r\n\r\n      if (depty[ name ]) continue\r\n\r\n      if (!btype) {\r\n        tradius = r * scaleFactor + 0.5\r\n      } else {\r\n        tradius = (r + probeRadius) * scaleFactor + 0.5\r\n      }\r\n\r\n      sradius = tradius * tradius\r\n      widxzR = Math.floor(tradius) + 1\r\n      deptyName = new Int32Array(widxzR * widxzR)\r\n      indx = 0\r\n\r\n      for (j = 0; j < widxzR; ++j) {\r\n        for (k = 0; k < widxzR; ++k) {\r\n          txz = j * j + k * k\r\n\r\n          if (txz > sradius) {\r\n            deptyName[ indx ] = -1\r\n          } else {\r\n            tdept = Math.sqrt(sradius - txz)\r\n            deptyName[ indx ] = Math.floor(tdept)\r\n          }\r\n\r\n          ++indx\r\n        }\r\n      }\r\n\r\n      widxz[ name ] = widxzR\r\n      depty[ name ] = deptyName\r\n    }\r\n  }\r\n\r\n  function fillatom (idx: number) {\r\n    var ci = idx * 3\r\n    var ri = idx\r\n\r\n    var cx, cy, cz, ox, oy, oz, mi, mj, mk, i, j, k, si, sj, sk\r\n    var ii, jj, kk\r\n\r\n    cx = Math.floor(0.5 + scaleFactor * (coordList[ ci ] + ptran[0]))\r\n    cy = Math.floor(0.5 + scaleFactor * (coordList[ ci + 1 ] + ptran[1]))\r\n    cz = Math.floor(0.5 + scaleFactor * (coordList[ ci + 2 ] + ptran[2]))\r\n\r\n    var at = radiusList[ ri ]\r\n    var deptyAt = depty[ at ]\r\n    var nind = 0\r\n    var pWH = pWidth * pHeight\r\n    var n = widxz[ at ]\r\n\r\n    var deptyAtNind\r\n\r\n    for (i = 0; i < n; ++i) {\r\n      for (j = 0; j < n; ++j) {\r\n        deptyAtNind = deptyAt[ nind ]\r\n\r\n        if (deptyAtNind !== -1) {\r\n          for (ii = -1; ii < 2; ++ii) {\r\n            for (jj = -1; jj < 2; ++jj) {\r\n              for (kk = -1; kk < 2; ++kk) {\r\n                if (ii !== 0 && jj !== 0 && kk !== 0) {\r\n                  mi = ii * i\r\n                  mk = kk * j\r\n\r\n                  for (k = 0; k <= deptyAtNind; ++k) {\r\n                    mj = k * jj\r\n                    si = cx + mi\r\n                    sj = cy + mj\r\n                    sk = cz + mk\r\n\r\n                    if (si < 0 || sj < 0 || sk < 0 ||\r\n                      si >= pLength || sj >= pWidth || sk >= pHeight\r\n                    ) {\r\n                      continue\r\n                    }\r\n\r\n                    var index = si * pWH + sj * pHeight + sk\r\n\r\n                    if (!setAtomID) {\r\n                      vpBits[ index ] |= INOUT\r\n                    } else {\r\n                      if (!(vpBits[ index ] & INOUT)) {\r\n                        vpBits[ index ] |= INOUT\r\n                        vpAtomID[ index ] = idx\r\n                      } else if (vpBits[ index ] & INOUT) {\r\n                        var ci2 = vpAtomID[ index ]\r\n\r\n                        if (ci2 !== ci) {\r\n                          ox = cx + mi - Math.floor(0.5 + scaleFactor * (coordList[ci2] + ptran[0]))\r\n                          oy = cy + mj - Math.floor(0.5 + scaleFactor * (coordList[ci2 + 1] + ptran[1]))\r\n                          oz = cz + mk - Math.floor(0.5 + scaleFactor * (coordList[ci2 + 2] + ptran[2]))\r\n\r\n                          if (mi * mi + mj * mj + mk * mk < ox * ox + oy * oy + oz * oz) {\r\n                            vpAtomID[ index ] = idx\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                  } // k\r\n                } // if\r\n              } // kk\r\n            } // jj\r\n          } // ii\r\n        } // if\r\n\r\n        nind++\r\n      } // j\r\n    } // i\r\n  }\r\n\r\n  function fillvoxels (btype: boolean) {\r\n    console.time('EDTSurface fillvoxels')\r\n\r\n    var i, il\r\n\r\n    for (i = 0, il = vpBits.length; i < il; ++i) {\r\n      vpBits[ i ] = 0\r\n      if (btype) vpDistance[ i ] = -1.0\r\n      if (setAtomID) vpAtomID[ i ] = -1\r\n    }\r\n\r\n    for (i = 0, il = coordList.length / 3; i < il; ++i) {\r\n      fillatom(i)\r\n    }\r\n\r\n    for (i = 0, il = vpBits.length; i < il; ++i) {\r\n      if (vpBits[ i ] & INOUT) {\r\n        vpBits[ i ] |= ISDONE\r\n      }\r\n    }\r\n\r\n    console.timeEnd('EDTSurface fillvoxels')\r\n  }\r\n\r\n  function fillAtomWaals (idx: number) {\r\n    var ci = idx * 3\r\n    var ri = idx\r\n\r\n    var cx\r\n    var cy\r\n    var cz\r\n    var ox\r\n    var oy\r\n    var oz\r\n    var nind = 0\r\n\r\n    var mi\r\n    var mj\r\n    var mk\r\n    var si\r\n    var sj\r\n    var sk\r\n    var i\r\n    var j\r\n    var k\r\n    var ii\r\n    var jj\r\n    var kk\r\n    var n\r\n\r\n    cx = Math.floor(0.5 + scaleFactor * (coordList[ ci ] + ptran[0]))\r\n    cy = Math.floor(0.5 + scaleFactor * (coordList[ ci + 1 ] + ptran[1]))\r\n    cz = Math.floor(0.5 + scaleFactor * (coordList[ ci + 2 ] + ptran[2]))\r\n\r\n    var at = radiusList[ ri ]\r\n    var pWH = pWidth * pHeight\r\n\r\n    for (i = 0, n = widxz[at]; i < n; ++i) {\r\n      for (j = 0; j < n; ++j) {\r\n        if (depty[ at ][ nind ] !== -1) {\r\n          for (ii = -1; ii < 2; ++ii) {\r\n            for (jj = -1; jj < 2; ++jj) {\r\n              for (kk = -1; kk < 2; ++kk) {\r\n                if (ii !== 0 && jj !== 0 && kk !== 0) {\r\n                  mi = ii * i\r\n                  mk = kk * j\r\n\r\n                  for (k = 0; k <= depty[ at ][ nind ]; ++k) {\r\n                    mj = k * jj\r\n                    si = cx + mi\r\n                    sj = cy + mj\r\n                    sk = cz + mk\r\n\r\n                    if (si < 0 || sj < 0 || sk < 0 ||\r\n                      si >= pLength || sj >= pWidth || sk >= pHeight\r\n                    ) {\r\n                      continue\r\n                    }\r\n\r\n                    var index = si * pWH + sj * pHeight + sk\r\n\r\n                    if (!(vpBits[ index ] & ISDONE)) {\r\n                      vpBits[ index ] |= ISDONE\r\n                      if (setAtomID) vpAtomID[ index ] = idx\r\n                    } else if (setAtomID) {\r\n                      var ci2 = vpAtomID[ index ]\r\n\r\n                      ox = Math.floor(0.5 + scaleFactor * (coordList[ ci2 ] + ptran[0]))\r\n                      oy = Math.floor(0.5 + scaleFactor * (coordList[ ci2 + 1 ] + ptran[1]))\r\n                      oz = Math.floor(0.5 + scaleFactor * (coordList[ ci2 + 2 ] + ptran[2]))\r\n\r\n                      if (mi * mi + mj * mj + mk * mk < ox * ox + oy * oy + oz * oz) {\r\n                        vpAtomID[ index ] = idx\r\n                      }\r\n                    }\r\n                  } // k\r\n                } // if\r\n              } // kk\r\n            } // jj\r\n          } // ii\r\n        } // if\r\n\r\n        nind++\r\n      } // j\r\n    } // i\r\n  }\r\n\r\n  function fillvoxelswaals () {\r\n    var i, il\r\n\r\n    for (i = 0, il = vpBits.length; i < il; ++i) {\r\n      vpBits[ i ] &= ~ISDONE // not isdone\r\n    }\r\n\r\n    for (i = 0, il = coordList.length / 3; i < il; ++i) {\r\n      fillAtomWaals(i)\r\n    }\r\n  }\r\n\r\n  function buildboundary () {\r\n    var i, j, k\r\n    var pWH = pWidth * pHeight\r\n\r\n    for (i = 0; i < pLength; ++i) {\r\n      for (j = 0; j < pHeight; ++j) {\r\n        for (k = 0; k < pWidth; ++k) {\r\n          var index = i * pWH + k * pHeight + j\r\n\r\n          if (vpBits[ index ] & INOUT) {\r\n            // var flagbound = false;\r\n            var ii = 0\r\n\r\n            // while( !flagbound && ii < 26 ){\r\n            while (ii < 26) {\r\n              var ti = i + nb[ ii ][ 0 ]\r\n              var tj = j + nb[ ii ][ 2 ]\r\n              var tk = k + nb[ ii ][ 1 ]\r\n\r\n              if (ti > -1 && ti < pLength &&\r\n                        tk > -1 && tk < pWidth &&\r\n                        tj > -1 && tj < pHeight &&\r\n                        !(vpBits[ ti * pWH + tk * pHeight + tj ] & INOUT)\r\n              ) {\r\n                vpBits[ index ] |= ISBOUND\r\n                // flagbound = true;\r\n                break\r\n              } else {\r\n                ii++\r\n              }\r\n            }\r\n          }\r\n        } // k\r\n      } // j\r\n    } // i\r\n  }\r\n\r\n  function fastdistancemap () {\r\n    console.time('EDTSurface fastdistancemap')\r\n\r\n    var i, j, k, n\r\n\r\n    var boundPoint = makeGrid(\r\n      pLength, pWidth, pHeight, Uint16Array, 3\r\n    )\r\n    var pWH = pWidth * pHeight\r\n    var cutRSq = cutRadius * cutRadius\r\n\r\n    var totalsurfacevox = 0\r\n    // var totalinnervox = 0;\r\n\r\n    var index\r\n\r\n    for (i = 0; i < pLength; ++i) {\r\n      for (j = 0; j < pWidth; ++j) {\r\n        for (k = 0; k < pHeight; ++k) {\r\n          index = i * pWH + j * pHeight + k\r\n\r\n          vpBits[ index ] &= ~ISDONE\r\n\r\n          if (vpBits[ index ] & INOUT) {\r\n            if (vpBits[ index ] & ISBOUND) {\r\n              boundPoint.set(\r\n                i, j, k,\r\n                i, j, k\r\n              )\r\n\r\n              vpDistance[ index ] = 0\r\n              vpBits[ index ] |= ISDONE\r\n\r\n              totalsurfacevox += 1\r\n            }/* else{\r\n                totalinnervox += 1;\r\n            } */\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    var inarray = new Int32Array(3 * totalsurfacevox)\r\n    var positin = 0\r\n    var outarray = new Int32Array(3 * totalsurfacevox)\r\n    var positout = 0\r\n\r\n    for (i = 0; i < pLength; ++i) {\r\n      for (j = 0; j < pWidth; ++j) {\r\n        for (k = 0; k < pHeight; ++k) {\r\n          index = i * pWH + j * pHeight + k\r\n\r\n          if (vpBits[ index ] & ISBOUND) {\r\n            inarray[ positin ] = i\r\n            inarray[ positin + 1 ] = j\r\n            inarray[ positin + 2 ] = k\r\n            positin += 3\r\n\r\n            vpBits[ index ] &= ~ISBOUND\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    do {\r\n      positout = fastoneshell(inarray, boundPoint, positin, outarray)\r\n      positin = 0\r\n\r\n      for (i = 0, n = positout; i < n; i += 3) {\r\n        index = pWH * outarray[ i ] + pHeight * outarray[ i + 1 ] + outarray[ i + 2 ]\r\n        vpBits[ index ] &= ~ISBOUND\r\n\r\n        if (vpDistance[ index ] <= 1.0404 * cutRSq) {\r\n          // if( vpDistance[ index ] <= 1.02 * cutRadius ){\r\n\r\n          inarray[ positin ] = outarray[ i ]\r\n          inarray[ positin + 1 ] = outarray[ i + 1 ]\r\n          inarray[ positin + 2 ] = outarray[ i + 2 ]\r\n          positin += 3\r\n        }\r\n      }\r\n    } while (positin > 0)\r\n\r\n    // var cutsf = Math.max( 0, scaleFactor - 0.5 );\r\n    // cutoff = cutRadius - 0.5 / ( 0.1 + cutsf );\r\n    var cutoffSq = cutoff * cutoff\r\n\r\n    var index2\r\n    var bp = new Uint16Array(3)\r\n\r\n    for (i = 0; i < pLength; ++i) {\r\n      for (j = 0; j < pWidth; ++j) {\r\n        for (k = 0; k < pHeight; ++k) {\r\n          index = i * pWH + j * pHeight + k\r\n          vpBits[ index ] &= ~ISBOUND\r\n\r\n          // ses solid\r\n\r\n          if (vpBits[ index ] & INOUT) {\r\n            if (!(vpBits[ index ] & ISDONE) ||\r\n              ((vpBits[ index ] & ISDONE) && vpDistance[ index ] >= cutoffSq)\r\n            ) {\r\n              vpBits[ index ] |= ISBOUND\r\n\r\n              if (setAtomID && (vpBits[ index ] & ISDONE)) {\r\n                boundPoint.toArray(i, j, k, bp)\r\n                index2 = bp[ 0 ] * pWH + bp[ 1 ] * pHeight + bp[ 2 ]\r\n\r\n                vpAtomID[ index ] = vpAtomID[ index2 ]\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    console.timeEnd('EDTSurface fastdistancemap')\r\n  }\r\n\r\n  function fastoneshell (inarray: Int32Array, boundPoint: iGrid, positin: number, outarray: Int32Array) {\r\n    // *allocout,voxel2\r\n    // ***boundPoint, int*\r\n    // outnum, int *elimi)\r\n    var tx, ty, tz\r\n    var dx, dy, dz\r\n    var i, j, n\r\n    var square\r\n    var index\r\n    var nbj\r\n    var bp = new Uint16Array(3)\r\n    var positout = 0\r\n\r\n    if (positin === 0) {\r\n      return positout\r\n    }\r\n\r\n    var tnvix = -1\r\n    var tnviy = -1\r\n    var tnviz = -1\r\n\r\n    var pWH = pWidth * pHeight\r\n\r\n    for (i = 0, n = positin; i < n; i += 3) {\r\n      tx = inarray[ i ]\r\n      ty = inarray[ i + 1 ]\r\n      tz = inarray[ i + 2 ]\r\n      boundPoint.toArray(tx, ty, tz, bp)\r\n\r\n      for (j = 0; j < 6; ++j) {\r\n        nbj = nb[ j ]\r\n        tnvix = tx + nbj[ 0 ]\r\n        tnviy = ty + nbj[ 1 ]\r\n        tnviz = tz + nbj[ 2 ]\r\n\r\n        if (tnvix < pLength && tnvix > -1 &&\r\n          tnviy < pWidth && tnviy > -1 &&\r\n          tnviz < pHeight && tnviz > -1\r\n        ) {\r\n          index = tnvix * pWH + pHeight * tnviy + tnviz\r\n\r\n          if ((vpBits[ index ] & INOUT) && !(vpBits[ index ] & ISDONE)) {\r\n            boundPoint.fromArray(tnvix, tnviy, tnviz, bp)\r\n            dx = tnvix - bp[ 0 ]\r\n            dy = tnviy - bp[ 1 ]\r\n            dz = tnviz - bp[ 2 ]\r\n            square = dx * dx + dy * dy + dz * dz\r\n            // square = Math.sqrt( square );\r\n\r\n            vpDistance[ index ] = square\r\n            vpBits[ index ] |= ISDONE\r\n            vpBits[ index ] |= ISBOUND\r\n\r\n            outarray[ positout ] = tnvix\r\n            outarray[ positout + 1 ] = tnviy\r\n            outarray[ positout + 2 ] = tnviz\r\n            positout += 3\r\n          } else if ((vpBits[ index ] & INOUT) && (vpBits[ index ] & ISDONE)) {\r\n            dx = tnvix - bp[ 0 ]\r\n            dy = tnviy - bp[ 1 ]\r\n            dz = tnviz - bp[ 2 ]\r\n            square = dx * dx + dy * dy + dz * dz\r\n            // square = Math.sqrt( square );\r\n\r\n            if (square < vpDistance[ index ]) {\r\n              boundPoint.fromArray(tnvix, tnviy, tnviz, bp)\r\n              vpDistance[ index ] = square\r\n\r\n              if (!(vpBits[ index ] & ISBOUND)) {\r\n                vpBits[ index ] |= ISBOUND\r\n\r\n                outarray[ positout ] = tnvix\r\n                outarray[ positout + 1 ] = tnviy\r\n                outarray[ positout + 2 ] = tnviz\r\n                positout += 3\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    for (i = 0, n = positin; i < n; i += 3) {\r\n      tx = inarray[ i ]\r\n      ty = inarray[ i + 1 ]\r\n      tz = inarray[ i + 2 ]\r\n      boundPoint.toArray(tx, ty, tz, bp)\r\n\r\n      for (j = 6; j < 18; j++) {\r\n        nbj = nb[ j ]\r\n        tnvix = tx + nbj[ 0 ]\r\n        tnviy = ty + nbj[ 1 ]\r\n        tnviz = tz + nbj[ 2 ]\r\n\r\n        if (tnvix < pLength && tnvix > -1 &&\r\n          tnviy < pWidth && tnviy > -1 &&\r\n          tnviz < pHeight && tnviz > -1\r\n        ) {\r\n          index = tnvix * pWH + pHeight * tnviy + tnviz\r\n\r\n          if ((vpBits[index] & INOUT) && !(vpBits[index] & ISDONE)) {\r\n            boundPoint.fromArray(tnvix, tnviy, tnviz, bp)\r\n            dx = tnvix - bp[ 0 ]\r\n            dy = tnviy - bp[ 1 ]\r\n            dz = tnviz - bp[ 2 ]\r\n            square = dx * dx + dy * dy + dz * dz\r\n            // square = Math.sqrt( square );\r\n\r\n            vpDistance[index] = square\r\n            vpBits[index] |= ISDONE\r\n            vpBits[index] |= ISBOUND\r\n\r\n            outarray[ positout ] = tnvix\r\n            outarray[ positout + 1 ] = tnviy\r\n            outarray[ positout + 2 ] = tnviz\r\n            positout += 3\r\n          } else if ((vpBits[index] & INOUT) && (vpBits[index] & ISDONE)) {\r\n            dx = tnvix - bp[ 0 ]\r\n            dy = tnviy - bp[ 1 ]\r\n            dz = tnviz - bp[ 2 ]\r\n            square = dx * dx + dy * dy + dz * dz\r\n            // square = Math.sqrt( square );\r\n\r\n            if (square < vpDistance[index]) {\r\n              boundPoint.fromArray(tnvix, tnviy, tnviz, bp)\r\n              vpDistance[index] = square\r\n\r\n              if (!(vpBits[index] & ISBOUND)) {\r\n                vpBits[index] |= ISBOUND\r\n\r\n                outarray[ positout ] = tnvix\r\n                outarray[ positout + 1 ] = tnviy\r\n                outarray[ positout + 2 ] = tnviz\r\n                positout += 3\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    for (i = 0, n = positin; i < n; i += 3) {\r\n      tx = inarray[ i ]\r\n      ty = inarray[ i + 1 ]\r\n      tz = inarray[ i + 2 ]\r\n      boundPoint.toArray(tx, ty, tz, bp)\r\n\r\n      for (j = 18; j < 26; j++) {\r\n        nbj = nb[ j ]\r\n        tnvix = tx + nbj[ 0 ]\r\n        tnviy = ty + nbj[ 1 ]\r\n        tnviz = tz + nbj[ 2 ]\r\n\r\n        if (tnvix < pLength && tnvix > -1 &&\r\n          tnviy < pWidth && tnviy > -1 &&\r\n          tnviz < pHeight && tnviz > -1\r\n        ) {\r\n          index = tnvix * pWH + pHeight * tnviy + tnviz\r\n\r\n          if ((vpBits[index] & INOUT) && !(vpBits[index] & ISDONE)) {\r\n            boundPoint.fromArray(tnvix, tnviy, tnviz, bp)\r\n            dx = tnvix - bp[ 0 ]\r\n            dy = tnviy - bp[ 1 ]\r\n            dz = tnviz - bp[ 2 ]\r\n            square = dx * dx + dy * dy + dz * dz\r\n            // square = Math.sqrt( square );\r\n\r\n            vpDistance[index] = square\r\n            vpBits[index] |= ISDONE\r\n            vpBits[index] |= ISBOUND\r\n\r\n            outarray[ positout ] = tnvix\r\n            outarray[ positout + 1 ] = tnviy\r\n            outarray[ positout + 2 ] = tnviz\r\n            positout += 3\r\n          } else if ((vpBits[index] & INOUT) && (vpBits[index] & ISDONE)) {\r\n            dx = tnvix - bp[ 0 ]\r\n            dy = tnviy - bp[ 1 ]\r\n            dz = tnviz - bp[ 2 ]\r\n            square = dx * dx + dy * dy + dz * dz\r\n            // square = Math.sqrt( square );\r\n\r\n            if (square < vpDistance[index]) {\r\n              boundPoint.fromArray(tnvix, tnviy, tnviz, bp)\r\n              vpDistance[index] = square\r\n\r\n              if (!(vpBits[index] & ISBOUND)) {\r\n                vpBits[index] |= ISBOUND\r\n\r\n                outarray[ positout ] = tnvix\r\n                outarray[ positout + 1 ] = tnviy\r\n                outarray[ positout + 2 ] = tnviz\r\n                positout += 3\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return positout\r\n  }\r\n\r\n  function marchingcubeinit (stype: string) {\r\n    var i\r\n    var n = vpBits.length\r\n\r\n    if (stype === 'vws') {\r\n      for (i = 0; i < n; ++i) {\r\n        vpBits[ i ] &= ~ISBOUND\r\n        vpBits[ i ] = (vpBits[ i ] & ISDONE) ? 1 : 0\r\n      }\r\n    } else if (stype === 'ms') { // ses without vdw => ms\r\n      for (i = 0; i < n; ++i) {\r\n        vpBits[ i ] &= ~ISDONE\r\n        if (vpBits[ i ] & ISBOUND) {\r\n          vpBits[ i ] |= ISDONE\r\n        }\r\n        vpBits[ i ] &= ~ISBOUND\r\n        vpBits[ i ] = (vpBits[ i ] & ISDONE) ? 1 : 0\r\n      }\r\n    } else if (stype === 'ses') {\r\n      for (i = 0; i < n; ++i) {\r\n        if ((vpBits[ i ] & ISBOUND) && (vpBits[ i ] & ISDONE)) {\r\n          vpBits[ i ] &= ~ISBOUND\r\n        } else if ((vpBits[ i ] & ISBOUND) && !(vpBits[ i ] & ISDONE)) {\r\n          vpBits[ i ] |= ISDONE\r\n        }\r\n        vpBits[ i ] = (vpBits[ i ] & ISDONE) ? 1 : 0\r\n      }\r\n    } else if (stype === 'sas') {\r\n      for (i = 0; i < n; ++i) {\r\n        vpBits[ i ] &= ~ISBOUND\r\n        vpBits[ i ] = (vpBits[ i ] & ISDONE) ? 1 : 0\r\n      }\r\n    }\r\n  }\r\n}\r\nObject.assign(EDTSurface, {__deps: [\r\n  getSurfaceGrid, getRadiusDict, VolumeSurface, computeBoundingBox, makeGrid\r\n]})\r\n\r\nexport default EDTSurface\r\n","/**\r\n * @file AV Surface\r\n * @author Fred Ludlow <fred.ludlow@gmail.com>\r\n * @private\r\n */\r\n\r\nimport { getSurfaceGrid } from './surface-utils'\r\nimport { VolumeSurface } from './volume'\r\nimport { uniformArray } from '../math/array-utils'\r\nimport {\r\n  computeBoundingBox, v3multiplyScalar, v3cross, v3normalize\r\n} from '../math/vector-utils'\r\nimport { defaults } from '../utils'\r\nimport { NumberArray } from '../types';\r\n\r\n\r\n/**\r\n * Modifed from SpatialHash\r\n *\r\n * Main differences are:\r\n * - Optimized grid size to ensure we only ever need to look +/-1 cell\r\n * - Aware of atomic radii and will only output atoms within rAtom + rExtra\r\n *   (see withinRadii method)\r\n *\r\n * (Uses rounding rather than bitshifting as consequence of arbitrary grid size)\r\n * @class\r\n * @param {Float32Array} atomsX - x coordinates\r\n * @param {Float32Array} atomsY - y coordinates\r\n * @param {Float32Array} atomsZ - z coordinates\r\n * @param {Float32Array} atomsR - atom radii\r\n * @param {Float32Array} min - xyz min coordinates\r\n * @param {Float32Array} max - xyz max coordinates\r\n * @param {Float} maxDistance - max distance\r\n */\r\nexport interface iAVHash {\r\n  neighbourListLength: number\r\n  withinRadii: (x: number, y: number, z: number, rExtra: number, out: Int32Array) => void\r\n}\r\n\r\n\r\nfunction makeAVHash (atomsX: Float32Array, atomsY: Float32Array, atomsZ: Float32Array, atomsR: Float32Array, min: Float32Array, max: Float32Array, maxDistance: number): iAVHash {\r\n  maxDistance = Math.max(0.1, maxDistance) // Avoid maxDistance of zero, see #802\r\n  var nAtoms = atomsX.length\r\n\r\n  var minX = min[ 0 ]\r\n  var minY = min[ 1 ]\r\n  var minZ = min[ 2 ]\r\n\r\n  var maxX = max[ 0 ]\r\n  var maxY = max[ 1 ]\r\n  var maxZ = max[ 2 ]\r\n\r\n  function hashFunc (w: number, minW: number) {\r\n    return Math.floor((w - minW) / maxDistance)\r\n  }\r\n\r\n  var iDim = hashFunc(maxX, minX) + 1\r\n  var jDim = hashFunc(maxY, minY) + 1\r\n  var kDim = hashFunc(maxZ, minZ) + 1\r\n\r\n  var nCells = iDim * jDim * kDim\r\n\r\n  var jkDim = jDim * kDim\r\n\r\n  /* Get cellID for cartesian x,y,z */\r\n  var cellID = function (x: number, y: number, z: number) {\r\n    return (((hashFunc(x, minX) * jDim) + hashFunc(y, minY)) * kDim) + hashFunc(z, minZ)\r\n  }\r\n\r\n  /* Initial building, could probably be optimized further */\r\n  var preHash = [] // preHash[ cellID ] = [ atomId1, atomId2 ];\r\n\r\n  for (var i = 0; i < nAtoms; i++) {\r\n    var cid = cellID(atomsX[ i ], atomsY[ i ], atomsZ[ i ])\r\n\r\n    if (preHash[ cid ] === undefined) {\r\n      preHash[ cid ] = [ i ]\r\n    } else {\r\n      preHash[ cid ].push(i)\r\n    }\r\n  }\r\n\r\n  var cellOffsets = new Uint32Array(nCells)\r\n  var cellLengths = new Uint16Array(nCells)\r\n  var data = new Uint32Array(nAtoms)\r\n\r\n  var offset = 0\r\n  var maxCellLength = 0\r\n\r\n  for (i = 0; i < nCells; i++) {\r\n    var start = cellOffsets[ i ] = offset\r\n\r\n    var subArray = preHash[ i ]\r\n\r\n    if (subArray !== undefined) {\r\n      for (var j = 0; j < subArray.length; j++) {\r\n        data[ offset ] = subArray[ j ]\r\n        offset++\r\n      }\r\n    }\r\n\r\n    var cellLength = offset - start\r\n    cellLengths[ i ] = cellLength\r\n\r\n    if (cellLength > maxCellLength) { maxCellLength = cellLength }\r\n  }\r\n\r\n  // Maximum number of neighbours we could ever produce (27 adjacent cells of equal population)\r\n  const neighbourListLength = (27 * maxCellLength) + 1\r\n\r\n  /**\r\n   * Populate the supplied out array with atom indices that are within rAtom + rExtra\r\n   * of x,y,z\r\n   *\r\n   * -1 in out array indicates the end of the list\r\n   *\r\n   * @param  {Float} x - x coordinate\r\n   * @param  {Float} y - y coordinate\r\n   * @param  {Float} z - z coordinate\r\n   * @param  {Float} rExtra - additional radius\r\n   * @param  {Float32Array} out - pre-allocated output array\r\n   * @return {undefined}\r\n   */\r\n  const withinRadii = function (x: number, y: number, z: number, rExtra: number, out: Int32Array) {\r\n    var outIdx = 0\r\n\r\n    var nearI = hashFunc(x, minX)\r\n    var nearJ = hashFunc(y, minY)\r\n    var nearK = hashFunc(z, minZ)\r\n\r\n    var loI = Math.max(0, nearI - 1)\r\n    var loJ = Math.max(0, nearJ - 1)\r\n    var loK = Math.max(0, nearK - 1)\r\n\r\n    var hiI = Math.min(iDim, nearI + 2)\r\n    var hiJ = Math.min(jDim, nearJ + 2)\r\n    var hiK = Math.min(kDim, nearK + 2)\r\n\r\n    for (var i = loI; i < hiI; ++i) {\r\n      var iOffset = i * jkDim\r\n\r\n      for (var j = loJ; j < hiJ; ++j) {\r\n        var jOffset = j * kDim\r\n\r\n        for (var k = loK; k < hiK; ++k) {\r\n          var cid = iOffset + jOffset + k\r\n\r\n          var cellStart = cellOffsets[ cid ]\r\n          var cellEnd = cellStart + cellLengths[ cid ]\r\n\r\n          for (var dataIndex = cellStart; dataIndex < cellEnd; dataIndex++) {\r\n            var atomIndex = data[ dataIndex ]\r\n            var dx = atomsX[ atomIndex ] - x\r\n            var dy = atomsY[ atomIndex ] - y\r\n            var dz = atomsZ[ atomIndex ] - z\r\n            var rSum = atomsR[ atomIndex ] + rExtra\r\n\r\n            if ((dx * dx + dy * dy + dz * dz) <= (rSum * rSum)) {\r\n              out[ outIdx++ ] = data[ dataIndex ]\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // Add terminator\r\n    out[ outIdx ] = -1\r\n  }\r\n  return {\r\n    neighbourListLength: neighbourListLength,\r\n    withinRadii: withinRadii\r\n  }\r\n}\r\n\r\ninterface AVSurface {\r\n  getSurface: (type: string, probeRadius: number, scaleFactor: number, cutoff: number, setAtomID: boolean, smooth: number, contour: boolean) => any\r\n}\r\nfunction AVSurface (this: AVSurface, coordList: Float32Array, radiusList: Float32Array, indexList: Uint16Array|Uint32Array) {\r\n  // Field generation method adapted from AstexViewer (Mike Hartshorn)\r\n  // by Fred Ludlow.\r\n  // Other parts based heavily on NGL (Alexander Rose) EDT Surface class\r\n  //\r\n  // Should work as a drop-in alternative to EDTSurface (though some of\r\n  // the EDT paramters are not relevant in this method).\r\n\r\n  const nAtoms = radiusList.length\r\n\r\n  const x = new Float32Array(nAtoms)\r\n  const y = new Float32Array(nAtoms)\r\n  const z = new Float32Array(nAtoms)\r\n\r\n  for (let i = 0; i < nAtoms; i++) {\r\n    const ci = 3 * i\r\n    x[ i ] = coordList[ ci ]\r\n    y[ i ] = coordList[ ci + 1 ]\r\n    z[ i ] = coordList[ ci + 2 ]\r\n  }\r\n\r\n  let bbox = computeBoundingBox(coordList)\r\n  if (coordList.length === 0) {\r\n    bbox[ 0 ].set([ 0, 0, 0 ])\r\n    bbox[ 1 ].set([ 0, 0, 0 ])\r\n  }\r\n  const min = bbox[0]\r\n  const max = bbox[1]\r\n\r\n  let r: Float32Array, r2: Float32Array // Atom positions, expanded radii (squared)\r\n  let maxRadius: number\r\n\r\n  // Parameters\r\n  let probeRadius: number, scaleFactor: number, setAtomID: boolean, probePositions: number\r\n\r\n  // Cache last value for obscured test\r\n  let lastClip = -1\r\n\r\n  // Grid params\r\n  let dim: Float32Array, matrix: Float32Array, grid: NumberArray, atomIndex: Int32Array\r\n\r\n  // grid indices -> xyz coords\r\n  let gridx: Float32Array, gridy: Float32Array, gridz: Float32Array\r\n\r\n  // Lookup tables:\r\n  let sinTable: Float32Array, cosTable: Float32Array\r\n\r\n  // Spatial Hash\r\n  let hash: iAVHash\r\n\r\n  // Neighbour array to be filled by hash\r\n  let neighbours: Int32Array\r\n\r\n  // Vectors for Torus Projection\r\n  const atob = new Float32Array([ 0.0, 0.0, 0.0 ])\r\n  const mid = new Float32Array([ 0.0, 0.0, 0.0 ])\r\n  const n1 = new Float32Array([ 0.0, 0.0, 0.0 ])\r\n  const n2 = new Float32Array([ 0.0, 0.0, 0.0 ])\r\n\r\n  let ngTorus: number\r\n\r\n  function init (_probeRadius?: number, _scaleFactor?: number, _setAtomID?: boolean, _probePositions?: number) {\r\n    probeRadius = defaults(_probeRadius, 1.4)\r\n    scaleFactor = defaults(_scaleFactor, 2.0)\r\n    setAtomID = defaults(_setAtomID, true)\r\n    probePositions = defaults(_probePositions, 30)\r\n\r\n    r = new Float32Array(nAtoms)\r\n    r2 = new Float32Array(nAtoms)\r\n\r\n    for (let i = 0; i < r.length; ++i) {\r\n      var rExt = radiusList[ i ] + probeRadius\r\n      r[ i ] = rExt\r\n      r2[ i ] = rExt * rExt\r\n    }\r\n\r\n    maxRadius = 0\r\n    for (let j = 0; j < r.length; ++j) {\r\n      if (r[ j ] > maxRadius) maxRadius = r[ j ]\r\n    }\r\n\r\n    initializeGrid()\r\n    initializeAngleTables()\r\n    initializeHash()\r\n\r\n    lastClip = -1\r\n  }\r\n\r\n  function fillGridDim (a: Float32Array, start: number, step: number) {\r\n    for (let i = 0; i < a.length; i++) {\r\n      a[i] = start + (step * i)\r\n    }\r\n  }\r\n\r\n  function initializeGrid () {\r\n    const surfGrid = getSurfaceGrid(\r\n      min, max, maxRadius, scaleFactor, 0.0\r\n    )\r\n\r\n    scaleFactor = surfGrid.scaleFactor\r\n    dim = surfGrid.dim\r\n    matrix = surfGrid.matrix\r\n\r\n    ngTorus = Math.max(5, 2 + Math.floor(probeRadius * scaleFactor))\r\n\r\n    grid = uniformArray(dim[0] * dim[1] * dim[2], -1001.0)\r\n\r\n    atomIndex = new Int32Array(grid.length)\r\n\r\n    gridx = new Float32Array(dim[0])\r\n    gridy = new Float32Array(dim[1])\r\n    gridz = new Float32Array(dim[2])\r\n\r\n    fillGridDim(gridx, min[0], 1 / scaleFactor)\r\n    fillGridDim(gridy, min[1], 1 / scaleFactor)\r\n    fillGridDim(gridz, min[2], 1 / scaleFactor)\r\n  }\r\n\r\n  function initializeAngleTables () {\r\n    var theta = 0.0\r\n    var step = 2 * Math.PI / probePositions\r\n\r\n    cosTable = new Float32Array(probePositions)\r\n    sinTable = new Float32Array(probePositions)\r\n    for (var i = 0; i < probePositions; i++) {\r\n      cosTable[ i ] = Math.cos(theta)\r\n      sinTable[ i ] = Math.sin(theta)\r\n      theta += step\r\n    }\r\n  }\r\n\r\n  function initializeHash () {\r\n    hash = makeAVHash(x, y, z, r, min, max, 2.01 * maxRadius)\r\n    neighbours = new Int32Array(hash.neighbourListLength)\r\n  }\r\n\r\n  function obscured (x: number, y: number, z: number, a: number, b: number) {\r\n    // Is the point at x,y,z obscured by any of the atoms\r\n    // specifeid by indices in neighbours. Ignore indices\r\n    // a and b (these are the relevant atoms in projectPoints/Torii)\r\n\r\n    // Cache the last clipped atom (as very often the same one in\r\n    // subsequent calls)\r\n    let ai: number\r\n\r\n    if (lastClip !== -1) {\r\n      ai = lastClip\r\n      if (ai !== a && ai !== b && singleAtomObscures(ai, x, y, z)) {\r\n        return ai\r\n      } else {\r\n        lastClip = -1\r\n      }\r\n    }\r\n\r\n    var ni = 0\r\n    ai = neighbours[ ni ]\r\n    while (ai >= 0) {\r\n      if (ai !== a && ai !== b && singleAtomObscures(ai, x, y, z)) {\r\n        lastClip = ai\r\n        return ai\r\n      }\r\n      ai = neighbours[ ++ni ]\r\n    }\r\n\r\n    lastClip = -1\r\n\r\n    return -1\r\n  }\r\n\r\n  function singleAtomObscures (ai: number, x: number, y: number, z: number) {\r\n    var ci = 3 * ai\r\n    var ra2 = r2[ ai ]\r\n    var dx = coordList[ ci ] - x\r\n    var dy = coordList[ ci + 1 ] - y\r\n    var dz = coordList[ ci + 2 ] - z\r\n    var d2 = dx * dx + dy * dy + dz * dz\r\n\r\n    return d2 < ra2\r\n  }\r\n\r\n  function projectPoints () {\r\n    // For each atom:\r\n    //     Iterate over a subsection of the grid, for each point:\r\n    //         If current value < 0.0, unvisited, set positive\r\n    //\r\n    //         In any case: Project this point onto surface of the atomic sphere\r\n    //         If this projected point is not obscured by any other atom\r\n    //             Calcualte delta distance and set grid value to minimum of\r\n    //             itself and delta\r\n\r\n    // Should we alias frequently accessed closure variables??\r\n    // Assume JS engine capable of optimizing this\r\n    // anyway...\r\n\r\n    for (var i = 0; i < nAtoms; i++) {\r\n      var ax = x[ i ]\r\n      var ay = y[ i ]\r\n      var az = z[ i ]\r\n      var ar = r[ i ]\r\n      var ar2 = r2[ i ]\r\n\r\n      hash.withinRadii(ax, ay, az, ar, neighbours)\r\n\r\n      // Number of grid points, round this up...\r\n      var ng = Math.ceil(ar * scaleFactor)\r\n\r\n      // Center of the atom, mapped to grid points (take floor)\r\n      var iax = Math.floor(scaleFactor * (ax - min[ 0 ]))\r\n      var iay = Math.floor(scaleFactor * (ay - min[ 1 ]))\r\n      var iaz = Math.floor(scaleFactor * (az - min[ 2 ]))\r\n\r\n      // Extents of grid to consider for this atom\r\n      var minx = Math.max(0, iax - ng)\r\n      var miny = Math.max(0, iay - ng)\r\n      var minz = Math.max(0, iaz - ng)\r\n\r\n      // Add two to these points:\r\n      // - iax are floor'd values so this ensures coverage\r\n      // - these are loop limits (exclusive)\r\n      var maxx = Math.min(dim[ 0 ], iax + ng + 2)\r\n      var maxy = Math.min(dim[ 1 ], iay + ng + 2)\r\n      var maxz = Math.min(dim[ 2 ], iaz + ng + 2)\r\n\r\n      for (var ix = minx; ix < maxx; ix++) {\r\n        var dx = gridx[ ix ] - ax\r\n        var xoffset = dim[ 1 ] * dim[ 2 ] * ix\r\n\r\n        for (var iy = miny; iy < maxy; iy++) {\r\n          var dy = gridy[ iy ] - ay\r\n          var dxy2 = dx * dx + dy * dy\r\n          var xyoffset = xoffset + dim[ 2 ] * iy\r\n\r\n          for (var iz = minz; iz < maxz; iz++) {\r\n            var dz = gridz[ iz ] - az\r\n            var d2 = dxy2 + dz * dz\r\n\r\n            if (d2 < ar2) {\r\n              var idx = iz + xyoffset\r\n\r\n              if (grid[idx] < 0.0) {\r\n                // Unvisited, make positive\r\n                grid[ idx ] = -grid[ idx ]\r\n              }\r\n              // Project on to the surface of the sphere\r\n              // sp is the projected point ( dx, dy, dz ) * ( ra / d )\r\n              var d = Math.sqrt(d2)\r\n              var ap = ar / d\r\n              var spx = dx * ap\r\n              var spy = dy * ap\r\n              var spz = dz * ap\r\n\r\n              spx += ax\r\n              spy += ay\r\n              spz += az\r\n\r\n              if (obscured(spx, spy, spz, i, -1) === -1) {\r\n                var dd = ar - d\r\n                if (dd < grid[ idx ]) {\r\n                  grid[ idx ] = dd\r\n                  if (setAtomID) atomIndex[ idx ] = i\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function projectTorii () {\r\n    for (var i = 0; i < nAtoms; i++) {\r\n      hash.withinRadii(x[ i ], y[ i ], z[ i ], r[ i ], neighbours)\r\n      var ia = 0\r\n      var ni = neighbours[ ia ]\r\n      while (ni >= 0) {\r\n        if (i < ni) {\r\n          projectTorus(i, ni)\r\n        }\r\n        ni = neighbours[ ++ia ]\r\n      }\r\n    }\r\n  }\r\n\r\n  function projectTorus (a: number, b: number) {\r\n    var r1 = r[ a ]\r\n    var r2 = r[ b ]\r\n    var dx = atob[ 0 ] = x[ b ] - x[ a ]\r\n    var dy = atob[ 1 ] = y[ b ] - y[ a ]\r\n    var dz = atob[ 2 ] = z[ b ] - z[ a ]\r\n    var d2 = dx * dx + dy * dy + dz * dz\r\n\r\n    // This check now redundant as already done in AVHash.withinRadii\r\n    // if( d2 > (( r1 + r2 ) * ( r1 + r2 )) ){ return; }\r\n\r\n    var d = Math.sqrt(d2)\r\n\r\n    // Find angle between a->b vector and the circle\r\n    // of their intersection by cosine rule\r\n    var cosA = (r1 * r1 + d * d - r2 * r2) / (2.0 * r1 * d)\r\n\r\n    // distance along a->b at intersection\r\n    var dmp = r1 * cosA\r\n\r\n    v3normalize(atob, atob)\r\n\r\n    // Create normal to line\r\n    normalToLine(n1 as any, atob)\r\n    v3normalize(n1, n1)\r\n\r\n    // Cross together for second normal vector\r\n    v3cross(n2, atob, n1)\r\n    v3normalize(n2, n2)\r\n\r\n    // r is radius of circle of intersection\r\n    var rInt = Math.sqrt(r1 * r1 - dmp * dmp)\r\n\r\n    v3multiplyScalar(n1, n1, rInt)\r\n    v3multiplyScalar(n2, n2, rInt)\r\n    v3multiplyScalar(atob, atob, dmp)\r\n\r\n    mid[ 0 ] = atob[ 0 ] + x[ a ]\r\n    mid[ 1 ] = atob[ 1 ] + y[ a ]\r\n    mid[ 2 ] = atob[ 2 ] + z[ a ]\r\n\r\n    lastClip = -1\r\n\r\n    var ng = ngTorus\r\n\r\n    for (var i = 0; i < probePositions; i++) {\r\n      var cost = cosTable[ i ]\r\n      var sint = sinTable[ i ]\r\n\r\n      var px = mid[ 0 ] + cost * n1[ 0 ] + sint * n2[ 0 ]\r\n      var py = mid[ 1 ] + cost * n1[ 1 ] + sint * n2[ 1 ]\r\n      var pz = mid[ 2 ] + cost * n1[ 2 ] + sint * n2[ 2 ]\r\n\r\n      if (obscured(px, py, pz, a, b) === -1) {\r\n        // As above, iterate over our grid...\r\n        // px, py, pz in grid coords\r\n        var iax = Math.floor(scaleFactor * (px - min[ 0 ]))\r\n        var iay = Math.floor(scaleFactor * (py - min[ 1 ]))\r\n        var iaz = Math.floor(scaleFactor * (pz - min[ 2 ]))\r\n\r\n        var minx = Math.max(0, iax - ng)\r\n        var miny = Math.max(0, iay - ng)\r\n        var minz = Math.max(0, iaz - ng)\r\n\r\n        var maxx = Math.min(dim[ 0 ], iax + ng + 2)\r\n        var maxy = Math.min(dim[ 1 ], iay + ng + 2)\r\n        var maxz = Math.min(dim[ 2 ], iaz + ng + 2)\r\n\r\n        for (var ix = minx; ix < maxx; ix++) {\r\n          dx = px - gridx[ ix ]\r\n          var xoffset = dim[ 1 ] * dim[ 2 ] * ix\r\n\r\n          for (var iy = miny; iy < maxy; iy++) {\r\n            dy = py - gridy[ iy ]\r\n            var dxy2 = dx * dx + dy * dy\r\n            var xyoffset = xoffset + dim[ 2 ] * iy\r\n\r\n            for (var iz = minz; iz < maxz; iz++) {\r\n              dz = pz - gridz[ iz ]\r\n              d2 = dxy2 + dz * dz\r\n              var idx = iz + xyoffset\r\n              var current = grid[ idx ]\r\n\r\n              if (current > 0.0 && d2 < (current * current)) {\r\n                grid[ idx ] = Math.sqrt(d2)\r\n                if (setAtomID) {\r\n                  // Is this grid point closer to a or b?\r\n                  // Take dot product of atob and gridpoint->p (dx, dy, dz)\r\n                  const dp = dx * atob[ 0 ] + dy * atob [ 1 ] + dz * atob[ 2 ]\r\n                  atomIndex[ idx ] = dp < 0.0 ? b : a\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function normalToLine (out: Int32Array, p: Float32Array) {\r\n    out[ 0 ] = out[ 1 ] = out[ 2 ] = 1.0\r\n    if (p[ 0 ] !== 0) {\r\n      out[ 0 ] = (p[ 1 ] + p[ 2 ]) / -p[ 0 ]\r\n    } else if (p[ 1 ] !== 0) {\r\n      out[ 1 ] = (p[ 0 ] + p[ 2 ]) / -p[ 1 ]\r\n    } else if (p[ 2 ] !== 0) {\r\n      out[ 2 ] = (p[ 0 ] + p[ 1 ]) / -p[ 2 ]\r\n    }\r\n    return out\r\n  }\r\n\r\n  function fixNegatives () {\r\n    for (var i = 0; i < grid.length; i++) {\r\n      if (grid[ i ] < 0) grid[ i ] = 0\r\n    }\r\n  }\r\n\r\n  function fixAtomIDs () {\r\n    for (var i = 0; i < atomIndex.length; i++) {\r\n      atomIndex[ i ] = indexList[ atomIndex[ i ] ]\r\n    }\r\n  }\r\n\r\n  function getVolume (probeRadius: number, scaleFactor: number, setAtomID: boolean) {\r\n    // Basic steps are:\r\n    // 1) Initialize\r\n    // 2) Project points\r\n    // 3) Project torii\r\n\r\n    console.time('AVSurface.getVolume')\r\n\r\n    console.time('AVSurface.init')\r\n    init(probeRadius, scaleFactor, setAtomID)\r\n    console.timeEnd('AVSurface.init')\r\n\r\n    console.time('AVSurface.projectPoints')\r\n    projectPoints()\r\n    console.timeEnd('AVSurface.projectPoints')\r\n\r\n    console.time('AVSurface.projectTorii')\r\n    projectTorii()\r\n    console.timeEnd('AVSurface.projectTorii')\r\n    fixNegatives()\r\n    fixAtomIDs()\r\n\r\n    console.timeEnd('AVSurface.getVolume')\r\n  }\r\n\r\n  this.getSurface = function (type: string, probeRadius: number, scaleFactor: number, cutoff: number, setAtomID: boolean, smooth: number, contour: boolean) {\r\n    // type and cutoff left in for compatibility with EDTSurface.getSurface\r\n    // function signature\r\n\r\n    getVolume(probeRadius, scaleFactor, setAtomID)\r\n\r\n    var volsurf = new (VolumeSurface as any)(\r\n      grid, dim[ 2 ], dim[ 1 ], dim[ 0 ], atomIndex\r\n    ) as VolumeSurface\r\n\r\n    return volsurf.getSurface!(probeRadius, false, undefined, matrix, contour)\r\n  }\r\n}\r\nObject.assign(AVSurface, {__deps: [\r\n  getSurfaceGrid, VolumeSurface, uniformArray, computeBoundingBox,\r\n  v3multiplyScalar, v3cross, v3normalize,\r\n  makeAVHash,\r\n  defaults\r\n]})\r\n\r\nexport { AVSurface, makeAVHash }\r\n","/**\r\n * @file Molecular Surface\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { WorkerRegistry } from '../globals'\r\nimport { defaults } from '../utils'\r\nimport Worker from '../worker/worker'\r\nimport EDTSurface from './edt-surface'\r\nimport { AVSurface } from './av-surface'\r\nimport Surface, { SurfaceData } from './surface'\r\nimport { Structure } from '../ngl';\r\nimport { AtomData, RadiusParams } from '../structure/structure-data';\r\n\r\nWorkerRegistry.add('molsurf', function func (e: any, callback: (data: any, buffers: any[])=> void) {\r\n  const a = e.data.args\r\n  const p = e.data.params\r\n  if (a && p) {\r\n    const SurfClass = (p.type === 'av') ? AVSurface : EDTSurface\r\n    const surf = new (SurfClass as any)(a.coordList, a.radiusList, a.indexList) as AVSurface|EDTSurface\r\n    const sd = surf.getSurface(\r\n      p.type, p.probeRadius, p.scaleFactor, p.cutoff, true, p.smooth, p.contour\r\n    ) as SurfaceData\r\n    const transferList = [ sd.position.buffer, sd.index!.buffer ]\r\n    if (sd.normal) transferList.push(sd.normal.buffer)\r\n    if (sd.atomindex) transferList.push(sd.atomindex.buffer)\r\n    const data = {\r\n      sd: sd,\r\n      p: p\r\n    }\r\n    callback(data, transferList)\r\n  }\r\n}, [ EDTSurface, AVSurface ])\r\n\r\n/**\r\n * Molecular surface parameter object.\r\n * @typedef {Object} MolecularSurfaceParameters - stage parameters\r\n * @property {String} type - \"av\" or \"edt\"\r\n * @property {Number} probeRadius - probe radius\r\n * @property {Number} scaleFactor - higher for better quality\r\n * @property {Integer} smooth - number of smoothing cycles to apply\r\n * @property {String} name - name for created surface\r\n */\r\nexport interface MolecularSurfaceParameters {\r\n  type: 'av'|'edt'\r\n  probeRadius: number\r\n  scaleFactor: number\r\n  smooth: number\r\n  name: string\r\n  cutoff: number\r\n  contour: boolean,\r\n  radiusParams: RadiusParams\r\n}\r\n/**\r\n * Create Molecular surfaces\r\n */\r\nclass MolecularSurface {\r\n  structure: Structure\r\n  worker: Worker|undefined\r\n\r\n  constructor (structure: Structure) {\r\n    this.structure = structure\r\n  }\r\n\r\n  _getAtomData (params: Partial<MolecularSurfaceParameters>): AtomData {\r\n    return this.structure.getAtomData({\r\n      what: { position: true, radius: true, index: true },\r\n      radiusParams: defaults(params.radiusParams, {\r\n        type: 'vdw', scale: 1.0\r\n      })\r\n    })\r\n  }\r\n\r\n  _makeSurface (sd: SurfaceData, p: Partial<MolecularSurfaceParameters>) {\r\n    var surface = new Surface(p.name!, '', sd)\r\n\r\n    surface.info.type = p.type\r\n    surface.info.probeRadius = p.probeRadius\r\n    surface.info.scaleFactor = p.scaleFactor\r\n    surface.info.smooth = p.smooth\r\n    surface.info.cutoff = p.cutoff\r\n\r\n    return surface\r\n  }\r\n\r\n  /**\r\n   * Get molecular surface\r\n   * @param {MolecularSurfaceParameters} params - parameters for surface creation\r\n   * @return {Surface} the surface\r\n   */\r\n  getSurface (params: Partial<MolecularSurfaceParameters>) {\r\n    const p = params || {}\r\n\r\n    const atomData = this._getAtomData(params)\r\n    const coordList = atomData.position\r\n    const radiusList = atomData.radius\r\n    const indexList = atomData.index\r\n\r\n    const SurfClass = (p.type === 'av') ? AVSurface : EDTSurface\r\n    const surf = new (SurfClass as any)(coordList, radiusList, indexList) as AVSurface|EDTSurface\r\n    const sd = surf.getSurface(\r\n      p.type!, p.probeRadius!, p.scaleFactor!, p.cutoff!, true, p.smooth!, p.contour!\r\n    )\r\n\r\n    return this._makeSurface(sd, p)\r\n  }\r\n\r\n  /**\r\n   * Get molecular surface asynchronous\r\n   * @param {MolecularSurfaceParameters} params - parameters for surface creation\r\n   * @param {function(surface: Surface)} callback - function to be called after surface is created\r\n   * @return {undefined}\r\n   */\r\n  getSurfaceWorker (params: MolecularSurfaceParameters, callback: (s: Surface) => void) {\r\n    const p = Object.assign({}, params)\r\n\r\n    if (window.hasOwnProperty('Worker')) {\r\n      if (this.worker === undefined) {\r\n        this.worker = new Worker('molsurf')\r\n      }\r\n\r\n      const atomData = this._getAtomData(params)\r\n      const coordList = atomData.position\r\n      const radiusList = atomData.radius\r\n      const indexList = atomData.index\r\n\r\n      const msg = {\r\n        args: {\r\n          coordList: coordList,\r\n          radiusList: radiusList,\r\n          indexList: indexList\r\n        },\r\n        params: p\r\n      }\r\n\r\n      const transferList = [\r\n        coordList!.buffer, radiusList!.buffer, indexList!.buffer\r\n      ]\r\n\r\n      this.worker.post(msg, transferList,\r\n\r\n        (e: any) => {\r\n          callback(this._makeSurface(e.data.sd, p))\r\n        },\r\n\r\n        (e: string) => {\r\n          console.warn(\r\n            'MolecularSurface.getSurfaceWorker error - trying without worker', e\r\n          )\r\n          this.worker!.terminate()\r\n          this.worker = undefined\r\n          const surface = this.getSurface(p)\r\n          callback(surface)\r\n        }\r\n\r\n      )\r\n    } else {\r\n      const surface = this.getSurface(p)\r\n      callback(surface)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cleanup\r\n   * @return {undefined}\r\n   */\r\n  dispose () {\r\n    if (this.worker) this.worker.terminate()\r\n  }\r\n}\r\n\r\nexport default MolecularSurface\r\n","/**\r\n * @file Molecular Surface Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { RepresentationRegistry } from '../globals'\r\nimport { defaults } from '../utils'\r\nimport StructureRepresentation, { StructureRepresentationParameters, StructureRepresentationData } from './structure-representation'\r\nimport MolecularSurface, { MolecularSurfaceParameters } from '../surface/molecular-surface'\r\nimport SurfaceBuffer from '../buffer/surface-buffer'\r\nimport ContourBuffer from '../buffer/contour-buffer'\r\nimport DoubleSidedBuffer from '../buffer/doublesided-buffer'\r\nimport Selection from '../selection/selection'\r\nimport Viewer from '../viewer/viewer';\r\n// @ts-ignore: unused import Volume required for declaration only\r\nimport { Structure, Vector3, Volume } from '../ngl';\r\nimport StructureView from '../structure/structure-view';\r\nimport { SurfaceDataFields } from './surface-representation';\r\nimport Surface, {SurfaceData} from '../surface/surface';\r\n\r\nexport interface MolecularSurfaceRepresentationParameters extends StructureRepresentationParameters {\r\n  surfaceType: 'vws'|'sas'|'ms'|'ses'|'av'\r\n  probeRadius: number\r\n  smooth: number\r\n  scaleFactor: number\r\n  cutoff: number\r\n  contour: boolean\r\n  background: boolean\r\n  opaqueBack: boolean\r\n  filterSele: string\r\n  colorVolume: any\r\n  useWorker: boolean\r\n}\r\n\r\nexport interface MolecularSurfaceInfo {\r\n  molsurf?: MolecularSurface\r\n  sele?: string\r\n  surface?: Surface\r\n}\r\n\r\n/**\r\n * Molecular Surface Representation\r\n */\r\nclass MolecularSurfaceRepresentation extends StructureRepresentation {\r\n  protected surfaceType: 'vws'|'sas'|'ms'|'ses'|'av'\r\n  protected probeRadius: number\r\n  protected smooth: number\r\n  protected scaleFactor: number\r\n  protected cutoff: number\r\n  protected contour: boolean\r\n  protected background: boolean\r\n  protected opaqueBack: boolean\r\n  protected filterSele: string\r\n  protected colorVolume: any\r\n  protected useWorker: boolean\r\n\r\n  protected __infoList: MolecularSurfaceInfo[]\r\n  protected __forceNewMolsurf: boolean\r\n  protected __sele: string\r\n  protected __surfaceParams: string\r\n\r\n  constructor (structure: Structure, viewer: Viewer, params: Partial<MolecularSurfaceRepresentationParameters>) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'surface'\r\n\r\n    this.parameters = Object.assign({\r\n\r\n      surfaceType: {\r\n        type: 'select',\r\n        rebuild: true,\r\n        options: {\r\n          'vws': 'vws',\r\n          'sas': 'sas',\r\n          'ms': 'ms',\r\n          'ses': 'ses',\r\n          'av': 'av'\r\n        }\r\n      },\r\n      probeRadius: {\r\n        type: 'number',\r\n        precision: 1,\r\n        max: 20,\r\n        min: 0,\r\n        rebuild: true\r\n      },\r\n      smooth: {\r\n        type: 'integer',\r\n        precision: 1,\r\n        max: 10,\r\n        min: 0,\r\n        rebuild: true\r\n      },\r\n      scaleFactor: {\r\n        type: 'number',\r\n        precision: 1,\r\n        max: 5,\r\n        min: 0,\r\n        rebuild: true\r\n      },\r\n      cutoff: {\r\n        type: 'number',\r\n        precision: 2,\r\n        max: 50,\r\n        min: 0,\r\n        rebuild: true\r\n      },\r\n      contour: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n      background: {\r\n        type: 'boolean', rebuild: true // FIXME\r\n      },\r\n      opaqueBack: {\r\n        type: 'boolean', buffer: true\r\n      },\r\n      filterSele: {\r\n        type: 'text', rebuild: true\r\n      },\r\n      colorVolume: {\r\n        type: 'hidden'\r\n      },\r\n      useWorker: {\r\n        type: 'boolean', rebuild: true\r\n      }\r\n\r\n    }, this.parameters, {\r\n\r\n      radius: null,\r\n      scale: null\r\n\r\n    })\r\n\r\n    this.__infoList = []\r\n\r\n    // TODO find a more direct way\r\n    this.structure.signals.refreshed.add(() => {\r\n      this.__forceNewMolsurf = true\r\n    })\r\n\r\n    this.toBePrepared = true\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params: Partial<MolecularSurfaceRepresentationParameters>) {\r\n    const p = params || {}\r\n    p.colorScheme = defaults(p.colorScheme, 'uniform')\r\n    p.colorValue = defaults(p.colorValue, 0xDDDDDD)\r\n    p.disablePicking = defaults(p.disablePicking, true)\r\n\r\n    this.surfaceType = defaults(p.surfaceType, 'ms')\r\n    this.probeRadius = defaults(p.probeRadius, 1.4)\r\n    this.smooth = defaults(p.smooth, 2)\r\n    this.scaleFactor = defaults(p.scaleFactor, 2.0)\r\n    this.cutoff = defaults(p.cutoff, 0.0)\r\n    this.contour = defaults(p.contour, false)\r\n    this.background = defaults(p.background, false)\r\n    this.opaqueBack = defaults(p.opaqueBack, true)\r\n    this.filterSele = defaults(p.filterSele, '')\r\n    this.colorVolume = defaults(p.colorVolume, undefined)\r\n    this.useWorker = defaults(p.useWorker, true)\r\n\r\n    super.init(params)\r\n  }\r\n\r\n  prepareData (sview: StructureView, i: number, callback: (i: number) => void) {\r\n    let info: MolecularSurfaceInfo = this.__infoList[ i ]\r\n    if (!info) {\r\n      info = {}\r\n      this.__infoList[ i ] = info\r\n    }\r\n\r\n    if (!info.molsurf || info.sele !== sview.selection.string) {\r\n      if (this.filterSele) {\r\n        const sviewFilter = sview.structure.getView(new Selection(this.filterSele))\r\n        const bbSize = sviewFilter.boundingBox.getSize(new Vector3())\r\n        const maxDim = Math.max(bbSize.x, bbSize.y, bbSize.z)\r\n        const asWithin = sview.getAtomSetWithinPoint(sviewFilter.center, (maxDim / 2) + 6.0)\r\n        sview = sview.getView(\r\n          new Selection(sview.getAtomSetWithinSelection(asWithin, 3).toSeleString())\r\n        )\r\n        if (sview.atomCount === 0) {\r\n          callback(i)\r\n          return\r\n        }\r\n      }\r\n\r\n      info.sele = sview.selection.string\r\n      info.molsurf = new MolecularSurface(sview)\r\n\r\n      const p = this.getSurfaceParams()\r\n      const onSurfaceFinish = (surface: Surface) => {\r\n        info.surface = surface\r\n        callback(i)\r\n      }\r\n\r\n      if (this.useWorker) {\r\n        info.molsurf.getSurfaceWorker(p as MolecularSurfaceParameters, onSurfaceFinish)\r\n      } else {\r\n        onSurfaceFinish(info.molsurf.getSurface(p as {name: string, type: 'av'|'edt' } & MolecularSurfaceRepresentationParameters))\r\n      }\r\n    } else {\r\n      callback(i)\r\n    }\r\n  }\r\n\r\n  prepare (callback: () => void) {\r\n    if (this.__forceNewMolsurf || this.__sele !== this.selection.string ||\r\n          this.__surfaceParams !== JSON.stringify(this.getSurfaceParams())) {\r\n      this.__infoList.forEach((info: MolecularSurfaceInfo) => {\r\n        if (info && info.molsurf) {\r\n          info.molsurf.dispose()\r\n        }\r\n      })\r\n      this.__infoList.length = 0\r\n    }\r\n\r\n    if (this.structureView.atomCount === 0) {\r\n      callback()\r\n      return\r\n    }\r\n\r\n    const after = () => {\r\n      this.__sele = this.selection.string\r\n      this.__surfaceParams = JSON.stringify(this.getSurfaceParams())\r\n      this.__forceNewMolsurf = false\r\n      callback()\r\n    }\r\n\r\n    const name = this.assembly === 'default' ? this.defaultAssembly : this.assembly\r\n    const assembly = this.structure.biomolDict[ name ]\r\n\r\n    if (assembly) {\r\n      assembly.partList.forEach((part, i) => {\r\n        const sview = part.getView(this.structureView)\r\n        this.prepareData(sview as StructureView, i, (_i) => {\r\n          if (_i === assembly.partList.length - 1) after()\r\n        })\r\n      })\r\n    } else {\r\n      this.prepareData(this.structureView, 0, after)\r\n    }\r\n  }\r\n\r\n  createData (sview: StructureView, i: number) {\r\n    const info = this.__infoList[ i ]\r\n    const surface = info.surface\r\n\r\n    if (!surface) {\r\n      // Surface creation bailed (no surface generated for this sview)\r\n      return\r\n    }\r\n\r\n    const surfaceData = {\r\n      position: surface!.getPosition(),\r\n      color: surface!.getColor(this.getColorParams()),\r\n      index: surface!.getFilteredIndex(this.filterSele, sview)\r\n    }\r\n\r\n    const bufferList = []\r\n\r\n    if (surface.contour) {\r\n      const contourBuffer = new ContourBuffer(\r\n        surfaceData,\r\n        this.getBufferParams({\r\n          wireframe: false\r\n        })\r\n      )\r\n\r\n      bufferList.push(contourBuffer)\r\n    } else {\r\n      Object.assign(surfaceData, {\r\n        normal: surface.getNormal(),\r\n        picking: surface.getPicking(sview.getStructure())\r\n      })\r\n\r\n      const surfaceBuffer = new SurfaceBuffer(\r\n        surfaceData,\r\n        this.getBufferParams({\r\n          background: this.background,\r\n          opaqueBack: this.opaqueBack,\r\n          dullInterior: false\r\n        })\r\n      )\r\n\r\n      if (this.getBufferParams().side == 'double') {\r\n        const doubleSidedBuffer = new DoubleSidedBuffer(surfaceBuffer)\r\n        bufferList.push(doubleSidedBuffer)\r\n      }\r\n      else {\r\n        bufferList.push(surfaceBuffer)\r\n      }\r\n    }\r\n\r\n    return { bufferList, info } as StructureRepresentationData\r\n  }\r\n\r\n  updateData (what: SurfaceDataFields, data: StructureRepresentationData) {\r\n    const surfaceData: Partial<SurfaceData> = {}\r\n\r\n    if (what.position || what.radius) {\r\n      this.__forceNewMolsurf = true\r\n      this.build()\r\n      return\r\n    }\r\n\r\n    if (what.color) {\r\n      surfaceData.color = data.info.surface.getColor(this.getColorParams())\r\n    }\r\n\r\n    if (what.index) {\r\n      surfaceData.index = data.info.surface.getFilteredIndex(this.filterSele, data.sview)\r\n    }\r\n\r\n    data.bufferList[ 0 ].setAttributes(surfaceData)\r\n  }\r\n\r\n  setParameters (params: Partial<MolecularSurfaceRepresentationParameters>, what: Partial<SurfaceDataFields> = {}, rebuild?: boolean) {\r\n    if (params && params.filterSele) {\r\n      what.index = true\r\n    }\r\n\r\n    if (params && params.colorVolume !== undefined) {\r\n      what.color = true\r\n    }\r\n\r\n    // forbid setting wireframe to true when contour is true\r\n    if (params && params.wireframe && (\r\n      params.contour || (params.contour === undefined && this.contour)\r\n    )\r\n    ) {\r\n      params.wireframe = false\r\n    }\r\n\r\n    super.setParameters(params, what, rebuild)\r\n\r\n    return this\r\n  }\r\n\r\n  getSurfaceParams (params: Partial<MolecularSurfaceRepresentationParameters> = {}) {\r\n    const p = Object.assign({\r\n      type: this.surfaceType as string,\r\n      probeRadius: this.probeRadius as number,\r\n      scaleFactor: this.scaleFactor as number,\r\n      smooth: this.smooth && !this.contour,\r\n      cutoff: this.cutoff as number,\r\n      contour: this.contour as boolean,\r\n      useWorker: this.useWorker as boolean,\r\n      radiusParams: this.getRadiusParams()\r\n    }, params)\r\n\r\n    return p\r\n  }\r\n\r\n  getColorParams () {\r\n    const p = super.getColorParams()\r\n\r\n    p.volume = this.colorVolume\r\n\r\n    return p\r\n  }\r\n\r\n  getAtomRadius () {\r\n    return 0\r\n  }\r\n\r\n  clear () {\r\n    super.clear()\r\n  }\r\n\r\n  dispose () {\r\n    this.__infoList.forEach((info: MolecularSurfaceInfo) => {\r\n      if (info && info.molsurf) {\r\n        info.molsurf.dispose()\r\n      }\r\n    })\r\n    this.__infoList.length = 0\r\n\r\n    super.dispose()\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('surface', MolecularSurfaceRepresentation)\r\n\r\nexport default MolecularSurfaceRepresentation\r\n","/**\r\n * @file Point Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { RepresentationRegistry } from '../globals'\r\nimport { defaults } from '../utils'\r\nimport StructureRepresentation, { StructureRepresentationParameters, StructureRepresentationData } from './structure-representation'\r\nimport PointBuffer from '../buffer/point-buffer'\r\nimport { Structure } from '../ngl';\r\nimport Viewer from '../viewer/viewer';\r\nimport StructureView from '../structure/structure-view';\r\nimport { AtomDataFields } from '../structure/structure-data';\r\n\r\nexport interface PointRepresentationParameters extends StructureRepresentationParameters {\r\n  pointSize: number\r\n  sizeAttenuation: boolean\r\n  sortParticles: boolean\r\n  useTexture: boolean\r\n  alphaTest: number\r\n  forceTransparent: boolean\r\n  edgeBleach: number\r\n}\r\n\r\n/**\r\n * Point Representation\r\n */\r\nclass PointRepresentation extends StructureRepresentation {\r\n  protected pointSize: number\r\n  protected sizeAttenuation: boolean\r\n  protected sortParticles: boolean\r\n  protected useTexture: boolean\r\n  protected alphaTest: number\r\n  protected forceTransparent: boolean\r\n  protected edgeBleach: number\r\n\r\n  constructor (structure: Structure, viewer: Viewer, params: Partial<PointRepresentationParameters>) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'point'\r\n\r\n    this.parameters = Object.assign({\r\n\r\n      pointSize: {\r\n        type: 'number', precision: 1, max: 100, min: 0, buffer: true\r\n      },\r\n      sizeAttenuation: {\r\n        type: 'boolean', buffer: true\r\n      },\r\n      sortParticles: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n      useTexture: {\r\n        type: 'boolean', buffer: true\r\n      },\r\n      alphaTest: {\r\n        type: 'range', step: 0.001, max: 1, min: 0, buffer: true\r\n      },\r\n      forceTransparent: {\r\n        type: 'boolean', buffer: true\r\n      },\r\n      edgeBleach: {\r\n        type: 'range', step: 0.001, max: 1, min: 0, buffer: true\r\n      }\r\n\r\n    }, this.parameters, {\r\n\r\n      flatShaded: null,\r\n      wireframe: null,\r\n      linewidth: null,\r\n      side: null,\r\n\r\n      roughness: null,\r\n      metalness: null\r\n\r\n    })\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params: Partial<PointRepresentationParameters>) {\r\n    var p = params || {}\r\n\r\n    this.pointSize = defaults(p.pointSize, 1)\r\n    this.sizeAttenuation = defaults(p.sizeAttenuation, true)\r\n    this.sortParticles = defaults(p.sortParticles, false)\r\n    this.useTexture = defaults(p.useTexture, false)\r\n    this.alphaTest = defaults(p.alphaTest, 0.5)\r\n    this.forceTransparent = defaults(p.forceTransparent, false)\r\n    this.edgeBleach = defaults(p.edgeBleach, 0.0)\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  createData (sview: StructureView) {\r\n    var what = { position: true, color: true, picking: true }\r\n    var atomData = sview.getAtomData(this.getAtomParams(what))\r\n\r\n    var pointBuffer = new PointBuffer(\r\n      atomData,\r\n      this.getBufferParams({\r\n        pointSize: this.pointSize,\r\n        sizeAttenuation: this.sizeAttenuation,\r\n        sortParticles: this.sortParticles,\r\n        useTexture: this.useTexture,\r\n        alphaTest: this.alphaTest,\r\n        forceTransparent: this.forceTransparent,\r\n        edgeBleach: this.edgeBleach\r\n      })\r\n    )\r\n\r\n    return {\r\n      bufferList: [ pointBuffer ]\r\n    }\r\n  }\r\n\r\n  updateData (what: AtomDataFields, data: StructureRepresentationData) {\r\n    var atomData = data.sview!.getAtomData(this.getAtomParams(what))\r\n    var pointData = {}\r\n\r\n    if (!what || what.position) {\r\n      Object.assign(pointData, {position: atomData.position})\r\n    }\r\n\r\n    if (!what || what.color) {\r\n      Object.assign(pointData, {color: atomData.color})\r\n    }\r\n\r\n    data.bufferList[ 0 ].setAttributes(pointData)\r\n  }\r\n\r\n  getAtomRadius () {\r\n    return 0.1\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('point', PointRepresentation)\r\n\r\nexport default PointRepresentation\r\n","/**\r\n * @file Ribbon Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport '../shader/Ribbon.vert'\r\n\r\nimport { getUintArray } from '../utils'\r\nimport { serialArray } from '../math/array-utils'\r\nimport MeshBuffer from './mesh-buffer'\r\nimport { BufferParameters, BufferData } from './buffer'\r\nimport {Log} from \"../globals\";\r\n\r\nconst quadIndices = new Uint16Array([\r\n  0, 1, 2,\r\n  1, 3, 2\r\n])\r\n\r\nexport interface RibbonBufferData extends BufferData {\r\n  normal: Float32Array\r\n  dir: Float32Array\r\n  size: Float32Array\r\n}\r\n\r\nfunction getSize(data: RibbonBufferData){\r\n  const n = (data.position!.length / 3) - 1\r\n  const n4 = n * 4\r\n  const x = n4 * 3\r\n  return x\r\n}\r\n\r\n/**\r\n * Ribbon buffer. Draws a thin ribbon.\r\n */\r\nclass RibbonBuffer extends MeshBuffer {\r\n  vertexShader = 'Ribbon.vert'\r\n\r\n  /**\r\n   * @param  {Object} data - attribute object\r\n   * @param  {Float32Array} data.position - positions\r\n   * @param  {Float32Array} data.normal - normals\r\n   * @param  {Float32Array} data.dir - binormals\r\n   * @param  {Float32Array} data.color - colors\r\n   * @param  {Float32Array} data.size - sizes\r\n   * @param  {Picker} data.picking - picking ids\r\n   * @param  {BufferParameters} params - parameter object\r\n   */\r\n  constructor (data: RibbonBufferData, params: Partial<BufferParameters> = {}) {\r\n    super({\r\n      position: new Float32Array(getSize(data)),\r\n      color: new Float32Array(getSize(data)),\r\n      index: getUintArray(getSize(data), getSize(data) / 3),\r\n      normal: new Float32Array(getSize(data)),\r\n      picking: data.picking\r\n    }, params)\r\n\r\n    const n = (data.position!.length / 3) - 1\r\n    const n4 = n * 4\r\n    const x = n4 * 3\r\n\r\n    this.addAttributes({\r\n      'dir': { type: 'v3', value: new Float32Array(x) }\r\n    })\r\n    this.addAttributes({\r\n      'size': { type: 'f', value: new Float32Array(n4) }\r\n    })\r\n\r\n    data.primitiveId = serialArray(n)\r\n    this.setAttributes(data)\r\n\r\n    this.makeIndex()\r\n  }\r\n\r\n  setAttributes (data: Partial<RibbonBufferData> = {}) {\r\n    const n4 = this.size\r\n    const n = n4 / 4\r\n\r\n    const attributes = this.geometry.attributes as any  // TODO\r\n\r\n    let position, normal, size, dir, color, primitiveId\r\n    let aPosition, aNormal, aSize, aDir, aColor, aPrimitiveId\r\n\r\n    if (data.position) {\r\n      position = data.position\r\n      aPosition = attributes.position.array\r\n      attributes.position.needsUpdate = true\r\n    }\r\n\r\n    if (data.normal) {\r\n      normal = data.normal\r\n      aNormal = attributes.normal.array\r\n      attributes.normal.needsUpdate = true\r\n    }\r\n\r\n    if (data.size) {\r\n      size = data.size\r\n      aSize = attributes.size.array\r\n      attributes.size.needsUpdate = true\r\n    }\r\n\r\n    if (data.dir) {\r\n      dir = data.dir\r\n      aDir = attributes.dir.array\r\n      attributes.dir.needsUpdate = true\r\n    }\r\n\r\n    if (data.color) {\r\n      color = data.color\r\n      aColor = attributes.color.array\r\n      attributes.color.needsUpdate = true\r\n    }\r\n\r\n    if (data.primitiveId) {\r\n      primitiveId = data.primitiveId\r\n      aPrimitiveId = attributes.primitiveId.array\r\n      attributes.primitiveId.needsUpdate = true\r\n    }\r\n\r\n    let v, i, k, p, l, v3\r\n    let currSize\r\n    let prevSize = size ? size[ 0 ] : null\r\n\r\n    for (v = 0; v < n; ++v) {\r\n      v3 = v * 3\r\n      k = v * 3 * 4\r\n      l = v * 4\r\n\r\n      if (position) {\r\n        aPosition[ k ] = aPosition[ k + 3 ] = position[ v3 ]\r\n        aPosition[ k + 1 ] = aPosition[ k + 4 ] = position[ v3 + 1 ]\r\n        aPosition[ k + 2 ] = aPosition[ k + 5 ] = position[ v3 + 2 ]\r\n\r\n        aPosition[ k + 6 ] = aPosition[ k + 9 ] = position[ v3 + 3 ]\r\n        aPosition[ k + 7 ] = aPosition[ k + 10 ] = position[ v3 + 4 ]\r\n        aPosition[ k + 8 ] = aPosition[ k + 11 ] = position[ v3 + 5 ]\r\n      }\r\n\r\n      if (normal) {\r\n        aNormal[ k ] = aNormal[ k + 3 ] = -normal[ v3 ]\r\n        aNormal[ k + 1 ] = aNormal[ k + 4 ] = -normal[ v3 + 1 ]\r\n        aNormal[ k + 2 ] = aNormal[ k + 5 ] = -normal[ v3 + 2 ]\r\n\r\n        aNormal[ k + 6 ] = aNormal[ k + 9 ] = -normal[ v3 + 3 ]\r\n        aNormal[ k + 7 ] = aNormal[ k + 10 ] = -normal[ v3 + 4 ]\r\n        aNormal[ k + 8 ] = aNormal[ k + 11 ] = -normal[ v3 + 5 ]\r\n      }\r\n\r\n      for (i = 0; i < 4; ++i) {\r\n        p = k + 3 * i\r\n\r\n        if (color) {\r\n          aColor[ p ] = color[ v3 ]\r\n          aColor[ p + 1 ] = color[ v3 + 1 ]\r\n          aColor[ p + 2 ] = color[ v3 + 2 ]\r\n        }\r\n\r\n        if (primitiveId) {\r\n          aPrimitiveId[ l + i ] = primitiveId[ v ]\r\n        }\r\n      }\r\n\r\n      if (size) {\r\n        currSize = size[ v ]\r\n\r\n        if (prevSize !== size[ v ]) {\r\n          aSize[ l ] = prevSize\r\n          aSize[ l + 1 ] = prevSize\r\n          aSize[ l + 2 ] = currSize\r\n          aSize[ l + 3 ] = currSize\r\n        } else {\r\n          aSize[ l ] = currSize\r\n          aSize[ l + 1 ] = currSize\r\n          aSize[ l + 2 ] = currSize\r\n          aSize[ l + 3 ] = currSize\r\n        }\r\n\r\n        prevSize = currSize\r\n      }\r\n\r\n      if (dir) {\r\n        aDir[ k ] = dir[ v3 ]\r\n        aDir[ k + 1 ] = dir[ v3 + 1 ]\r\n        aDir[ k + 2 ] = dir[ v3 + 2 ]\r\n\r\n        aDir[ k + 3 ] = -dir[ v3 ]\r\n        aDir[ k + 4 ] = -dir[ v3 + 1 ]\r\n        aDir[ k + 5 ] = -dir[ v3 + 2 ]\r\n\r\n        aDir[ k + 6 ] = dir[ v3 + 3 ]\r\n        aDir[ k + 7 ] = dir[ v3 + 4 ]\r\n        aDir[ k + 8 ] = dir[ v3 + 5 ]\r\n\r\n        aDir[ k + 9 ] = -dir[ v3 + 3 ]\r\n        aDir[ k + 10 ] = -dir[ v3 + 4 ]\r\n        aDir[ k + 11 ] = -dir[ v3 + 5 ]\r\n      }\r\n    }\r\n  }\r\n\r\n  makeIndex () {\r\n    const index = this.geometry.getIndex()\r\n    if (!index) { Log.error('Index is null'); return; }\r\n    const meshIndex = index.array as Uint32Array|Uint16Array\r\n    const n = meshIndex.length / 4 / 3\r\n\r\n    for (let v = 0; v < n; ++v) {\r\n      const ix = v * 6\r\n      const it = v * 4\r\n\r\n      meshIndex.set(quadIndices, ix)\r\n      for (let s = 0; s < 6; ++s) {\r\n        meshIndex[ ix + s ] += it\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default RibbonBuffer\r\n","/**\r\n * @file Ribbon Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { RepresentationRegistry } from '../globals'\r\nimport { defaults } from '../utils'\r\nimport Spline, { SplineParameters } from '../geometry/spline'\r\nimport StructureRepresentation, { StructureRepresentationParameters } from './structure-representation'\r\nimport RibbonBuffer from '../buffer/ribbon-buffer'\r\nimport { Structure } from '../ngl';\r\nimport Viewer from '../viewer/viewer';\r\nimport AtomProxy from '../proxy/atom-proxy';\r\nimport StructureView from '../structure/structure-view';\r\nimport Polymer from '../proxy/polymer';\r\n\r\nexport interface RibbonRepresentationParameters extends StructureRepresentationParameters {\r\n  subdiv: number\r\n  tension: number\r\n  smoothSheet: boolean\r\n}\r\n\r\n/**\r\n * Ribbon Representation\r\n */\r\nclass RibbonRepresentation extends StructureRepresentation {\r\n  protected subdiv: number\r\n  protected tension: number\r\n  protected smoothSheet: boolean\r\n  \r\n  constructor (structure: Structure, viewer: Viewer, params: Partial<RibbonRepresentationParameters>) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'ribbon'\r\n\r\n    this.parameters = Object.assign({\r\n\r\n      subdiv: {\r\n        type: 'integer', max: 50, min: 1, rebuild: true\r\n      },\r\n      tension: {\r\n        type: 'number', precision: 1, max: 1.0, min: 0.1\r\n      },\r\n      smoothSheet: {\r\n        type: 'boolean', rebuild: true\r\n      }\r\n\r\n    }, this.parameters, {\r\n\r\n      side: null,\r\n      wireframe: null,\r\n      linewidth: null\r\n\r\n    })\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params: Partial<RibbonRepresentationParameters>) {\r\n    var p = params || {}\r\n    p.colorScheme = defaults(p.colorScheme, 'chainname')\r\n    p.colorScale = defaults(p.colorScale, 'RdYlBu')\r\n    p.radiusType = defaults(p.radiusType, 'sstruc')\r\n    p.radiusScale = defaults(p.radiusScale, 4.0)\r\n\r\n    if (p.quality === 'low') {\r\n      this.subdiv = 3\r\n    } else if (p.quality === 'medium') {\r\n      this.subdiv = 6\r\n    } else if (p.quality === 'high') {\r\n      this.subdiv = 12\r\n    } else {\r\n      this.subdiv = defaults(p.subdiv, 6)\r\n    }\r\n\r\n    this.tension = defaults(p.tension, NaN)\r\n    this.smoothSheet = defaults(p.smoothSheet, false)\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  getSplineParams (params?: Partial<SplineParameters>) {\r\n    return Object.assign({\r\n      subdiv: this.subdiv,\r\n      tension: this.tension,\r\n      directional: true,\r\n      smoothSheet: this.smoothSheet\r\n    }, params)\r\n  }\r\n\r\n  getAtomRadius (atom: AtomProxy) {\r\n    return atom.isTrace() ? super.getAtomRadius(atom) : 0\r\n  }\r\n\r\n  createData (sview: StructureView) {\r\n    var bufferList: RibbonBuffer[] = []\r\n    var polymerList: Polymer[] = []\r\n\r\n    this.structure.eachPolymer(polymer => {\r\n      if (polymer.residueCount < 4) return\r\n      polymerList.push(polymer)\r\n\r\n      var spline = new Spline(polymer, this.getSplineParams())\r\n      var subPos = spline.getSubdividedPosition()\r\n      var subOri = spline.getSubdividedOrientation()\r\n      var subCol = spline.getSubdividedColor(this.getColorParams())\r\n      var subPick = spline.getSubdividedPicking()\r\n      var subSize = spline.getSubdividedSize(this.getRadiusParams())\r\n\r\n      bufferList.push(\r\n        new RibbonBuffer(\r\n          ({\r\n            position: subPos.position,\r\n            normal: subOri.binormal,\r\n            dir: subOri.normal,\r\n            color: subCol.color,\r\n            size: subSize.size,\r\n            picking: subPick.picking\r\n          }),\r\n          this.getBufferParams()\r\n        )\r\n      )\r\n    }, sview.getSelection())\r\n\r\n    return {\r\n      bufferList: bufferList,\r\n      polymerList: polymerList\r\n    }\r\n  }\r\n\r\n  updateData (what: {position?: boolean, radius?: boolean, scale?: boolean, color?: boolean}, data: {polymerList: Polymer[], bufferList: RibbonBuffer[]}) {\r\n    what = what || {}\r\n\r\n    var i = 0\r\n    var n = data.polymerList.length\r\n\r\n    for (i = 0; i < n; ++i) {\r\n      var bufferData = {}\r\n      var spline = new Spline(data.polymerList[ i ], this.getSplineParams())\r\n\r\n      if (what.position) {\r\n        var subPos = spline.getSubdividedPosition()\r\n        var subOri = spline.getSubdividedOrientation()\r\n        Object.assign(bufferData, {\r\n          position: subPos.position,\r\n          normal: subOri.binormal,\r\n          dir: subOri.normal\r\n        })\r\n      }\r\n\r\n      if (what.radius || what.scale) {\r\n        var subSize = spline.getSubdividedSize(this.getRadiusParams())\r\n        Object.assign(bufferData, {size: subSize.size})\r\n      }\r\n\r\n      if (what.color) {\r\n        var subCol = spline.getSubdividedColor(this.getColorParams())\r\n        Object.assign(bufferData, {color: subCol.color})\r\n      }\r\n\r\n      data.bufferList[ i ].setAttributes(bufferData)\r\n    }\r\n  }\r\n\r\n  setParameters (params: Partial<RibbonRepresentationParameters>) {\r\n    var rebuild = false\r\n    var what = {}\r\n\r\n    if (params && params.tension) {\r\n      Object.assign(what, {position: true})\r\n    }\r\n\r\n    super.setParameters(params, what, rebuild)\r\n\r\n    return this\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('ribbon', RibbonRepresentation)\r\n\r\nexport default RibbonRepresentation\r\n","/**\r\n * @file Rocket Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { RepresentationRegistry } from '../globals'\r\nimport { defaults } from '../utils'\r\nimport { AtomPicker } from '../utils/picker'\r\nimport StructureRepresentation, { StructureRepresentationParameters } from './structure-representation'\r\nimport Helixbundle, { Axis } from '../geometry/helixbundle'\r\nimport CylinderBuffer from '../buffer/cylinder-buffer'\r\nimport { Structure } from '../ngl';\r\nimport Viewer from '../viewer/viewer';\r\nimport StructureView from '../structure/structure-view';\r\nimport CylinderGeometryBuffer from '../buffer/cylindergeometry-buffer';\r\nimport CylinderImpostorBuffer from '../buffer/cylinderimpostor-buffer';\r\n\r\nexport interface RocketRepresentationParameters extends StructureRepresentationParameters {\r\n  localAngle: number\r\n  centerDist: number\r\n  ssBorder: boolean\r\n  radialSegments: number\r\n  openEnded: boolean\r\n  disableImpostor: boolean\r\n}\r\n\r\nexport interface AxisData {\r\n  begin: Float32Array\r\n  end: Float32Array\r\n  size: Float32Array\r\n  color: Float32Array\r\n  picking: AtomPicker\r\n}\r\n\r\n/**\r\n * Rocket Representation\r\n */\r\nclass RocketRepresentation extends StructureRepresentation {\r\n\r\n  protected localAngle: number\r\n  protected centerDist: number\r\n  protected ssBorder: boolean\r\n  protected radialSegments: number\r\n  protected openEnded: boolean\r\n  protected disableImpostor: boolean\r\n  // protected helixbundleList: Helixbundle[]\r\n\r\n  constructor (structure: Structure, viewer: Viewer, params: Partial<RocketRepresentationParameters>) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'rocket'\r\n\r\n    this.parameters = Object.assign({\r\n\r\n      localAngle: {\r\n        type: 'integer', max: 180, min: 0, rebuild: true\r\n      },\r\n      centerDist: {\r\n        type: 'number', precision: 1, max: 10, min: 0, rebuild: true\r\n      },\r\n      ssBorder: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n      radialSegments: true,\r\n      openEnded: true,\r\n      disableImpostor: true\r\n\r\n    }, this.parameters)\r\n\r\n    // this.helixbundleList = []\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params: Partial<RocketRepresentationParameters>) {\r\n    let p = params || {}\r\n    p.colorScheme = defaults(p.colorScheme, 'sstruc')\r\n    p.radiusSize = defaults(p.radiusSize, 1.5)\r\n    p.radiusScale = defaults(p.radiusScale, 1.0)\r\n    p.openEnded = defaults(p.openEnded, false)\r\n    p.useInteriorColor = defaults(p.useInteriorColor, true)\r\n\r\n    this.localAngle = defaults(p.localAngle, 30)\r\n    this.centerDist = defaults(p.centerDist, 2.5)\r\n    this.ssBorder = defaults(p.ssBorder, false)\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  createData (sview: StructureView) {\r\n    let length = 0\r\n    const axisList:Axis[] = []\r\n    const helixbundleList:Helixbundle[] = []\r\n\r\n    this.structure.eachPolymer(polymer => {\r\n      if (polymer.residueCount < 4 || polymer.isNucleic()) return\r\n\r\n      const helixbundle = new Helixbundle(polymer)\r\n      const axis = helixbundle.getAxis(\r\n        this.localAngle, this.centerDist, this.ssBorder,\r\n        this.getColorParams(), this.getRadiusParams()\r\n      )\r\n\r\n      length += axis.size.length\r\n      axisList.push(axis)\r\n      helixbundleList.push(helixbundle)\r\n    }, sview.getSelection())\r\n\r\n    const axisData = {\r\n      begin: new Float32Array(length * 3),\r\n      end: new Float32Array(length * 3),\r\n      size: new Float32Array(length),\r\n      color: new Float32Array(length * 3),\r\n      picking: <AtomPicker>{}\r\n    }\r\n\r\n    let picking = new Float32Array(length)\r\n\r\n    let offset = 0\r\n\r\n    axisList.forEach(function (axis) {\r\n      axisData.begin.set(axis.begin, offset * 3)\r\n      axisData.end.set(axis.end, offset * 3)\r\n      axisData.size.set(axis.size, offset)\r\n      axisData.color.set(axis.color, offset * 3)\r\n      picking.set(axis.picking.array!, offset)\r\n      offset += axis.size.length\r\n    })\r\n\r\n    if (length) {\r\n      axisData.picking = new AtomPicker(\r\n        picking, sview.getStructure()\r\n      )\r\n    }\r\n\r\n    const cylinderBuffer = new CylinderBuffer(\r\n      {\r\n        position1: axisData.begin,\r\n        position2: axisData.end,\r\n        color: axisData.color,\r\n        color2: axisData.color,\r\n        radius: axisData.size,\r\n        picking: axisData.picking\r\n      },\r\n      this.getBufferParams({\r\n        openEnded: this.openEnded,\r\n        radialSegments: this.radialSegments,\r\n        disableImpostor: this.disableImpostor,\r\n        dullInterior: true\r\n      })\r\n    )\r\n\r\n    return {\r\n      bufferList: [ cylinderBuffer as CylinderGeometryBuffer|CylinderImpostorBuffer ],\r\n      axisList: axisList,\r\n      helixbundleList: helixbundleList,\r\n      axisData: axisData\r\n    }\r\n  }\r\n\r\n  \r\n  updateData (what: any, data: {bufferList: CylinderBuffer[], helixbundleList: Helixbundle[], axisList: Axis[], axisData: AxisData}) {\r\n    what = what || {}\r\n\r\n    if (what.position) {\r\n      this.build()\r\n      return\r\n    }\r\n\r\n    var cylinderData = {}\r\n\r\n    if (what.color || what.radius) {\r\n      var offset = 0\r\n\r\n      data.helixbundleList.forEach((helixbundle) => {\r\n        var axis = helixbundle.getAxis(\r\n          this.localAngle, this.centerDist, this.ssBorder,\r\n          this.getColorParams(), this.getRadiusParams()\r\n        )\r\n        if (what.color) {\r\n          data.axisData.color.set(axis.color, offset * 3)\r\n        }\r\n        if (what.radius || what.scale) {\r\n          data.axisData.size.set(axis.size, offset)\r\n        }\r\n        offset += axis.size.length\r\n      })\r\n\r\n      if (what.color) {\r\n        Object.assign(cylinderData, {\r\n          color: data.axisData.color,\r\n          color2: data.axisData.color\r\n        })\r\n      }\r\n\r\n      if (what.radius || what.scale) {\r\n        Object.assign(cylinderData, {\r\n          radius: data.axisData.size\r\n        })\r\n      }\r\n    }\r\n\r\n    (data.bufferList[ 0 ] as CylinderGeometryBuffer).setAttributes(cylinderData)\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('rocket', RocketRepresentation)\r\n\r\nexport default RocketRepresentation\r\n","/**\r\n * @file Rope Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { RepresentationRegistry } from '../globals'\r\nimport { defaults } from '../utils'\r\nimport CartoonRepresentation, { CartoonRepresentationParameters } from './cartoon-representation'\r\nimport Helixorient from '../geometry/helixorient'\r\nimport Spline from '../geometry/spline'\r\nimport { Structure } from '../ngl';\r\nimport Viewer from '../viewer/viewer';\r\nimport Polymer from '../proxy/polymer';\r\n\r\n/**\r\n * Rope Representation\r\n */\r\nclass RopeRepresentation extends CartoonRepresentation {\r\n  protected smooth: number\r\n  \r\n  constructor (structure: Structure, viewer: Viewer, params: Partial<CartoonRepresentationParameters>&{smooth: number}) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'rope'\r\n\r\n    this.parameters = Object.assign({\r\n\r\n      smooth: {\r\n        type: 'integer', max: 15, min: 0, rebuild: true\r\n      }\r\n\r\n    }, this.parameters, {\r\n      aspectRatio: null,\r\n      smoothSheet: null\r\n    })\r\n  }\r\n\r\n  init (params: Partial<CartoonRepresentationParameters>) {\r\n    var p = params || {}\r\n    p.aspectRatio = 1.0\r\n    p.tension = defaults(p.tension, 0.5)\r\n    p.radiusScale = defaults(p.radiusScale, 5.0)\r\n    p.smoothSheet = false\r\n\r\n    this.smooth = defaults(p.smooth, 2)\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  getSpline (polymer: Polymer) {\r\n    var helixorient = new Helixorient(polymer)\r\n\r\n    return new Spline(polymer, this.getSplineParams({\r\n      directional: false,\r\n      positionIterator: helixorient.getCenterIterator(this.smooth)\r\n    }))\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('rope', RopeRepresentation)\r\n\r\nexport default RopeRepresentation\r\n","/**\r\n * @file Spacefill Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { defaults } from '../utils'\r\nimport { RepresentationRegistry } from '../globals'\r\nimport StructureRepresentation, { StructureRepresentationParameters, StructureRepresentationData } from './structure-representation'\r\nimport SphereBuffer, { SphereBufferData, SphereBufferParameters } from '../buffer/sphere-buffer'\r\nimport { Structure } from '../ngl';\r\nimport Viewer from '../viewer/viewer';\r\nimport StructureView from '../structure/structure-view';\r\nimport SphereGeometryBuffer from '../buffer/spheregeometry-buffer';\r\nimport { AtomDataFields } from '../structure/structure-data';\r\nimport SphereImpostorBuffer from '../buffer/sphereimpostor-buffer';\r\n\r\n/**\r\n * Spacefill Representation\r\n */\r\nclass SpacefillRepresentation extends StructureRepresentation {\r\n  constructor (structure: Structure, viewer: Viewer, params: Partial<StructureRepresentationParameters>) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'spacefill'\r\n\r\n    this.parameters = Object.assign({\r\n      sphereDetail: true,\r\n      disableImpostor: true\r\n    }, this.parameters)\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params: Partial<StructureRepresentationParameters>) {\r\n    var p = params || {}\r\n    p.useInteriorColor = defaults(p.useInteriorColor, true)\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  createData (sview: StructureView) {\r\n    var sphereBuffer = new SphereBuffer(\r\n      (sview.getAtomData(this.getAtomParams()) as SphereBufferData),\r\n      (this.getBufferParams({\r\n        sphereDetail: this.sphereDetail,\r\n        dullInterior: true,\r\n        disableImpostor: this.disableImpostor\r\n      }) as SphereBufferParameters)\r\n    )\r\n\r\n    return {\r\n      bufferList: [ sphereBuffer as SphereGeometryBuffer|SphereImpostorBuffer ]\r\n    }\r\n  }\r\n\r\n  updateData (what: AtomDataFields, data: StructureRepresentationData) {\r\n    var atomData = data.sview!.getAtomData(this.getAtomParams(what))\r\n    var sphereData: Partial<SphereBufferData> = {}\r\n\r\n    if (!what || what.position) {\r\n      Object.assign(sphereData, {position: atomData.position})\r\n    }\r\n\r\n    if (!what || what.color) {\r\n      Object.assign(sphereData, {color: atomData.color})\r\n    }\r\n\r\n    if (!what || what.radius) {\r\n      Object.assign(sphereData, {radius: atomData.radius})\r\n    }\r\n\r\n    data.bufferList[ 0 ].setAttributes(sphereData)\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('spacefill', SpacefillRepresentation)\r\n\r\nexport default SpacefillRepresentation\r\n","/**\r\n * @file Trace Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport '../shader/Line.vert'\r\nimport '../shader/Line.frag'\r\n\r\nimport { Log } from '../globals'\r\nimport Buffer, { BufferParameters, BufferData } from './buffer'\r\n\r\nfunction getSize(data: BufferData){\r\n  const n = data.position!.length / 3\r\n  const n1 = n - 1\r\n  return n1 * 3 * 2\r\n}\r\n\r\n/**\r\n * Trace buffer. Draws a series of lines.\r\n */\r\nclass TraceBuffer extends Buffer {\r\n  isLine = true\r\n  vertexShader = 'Line.vert'\r\n  fragmentShader = 'Line.frag'\r\n\r\n  /**\r\n   * @param  {Object} data - attribute object\r\n   * @param  {Float32Array} data.position - positions\r\n   * @param  {Float32Array} data.color - colors\r\n   * @param  {BufferParameters} params - parameter object\r\n   */\r\n  constructor (data: BufferData, params: Partial<BufferParameters> = {}) {\r\n    super({\r\n      position: new Float32Array(getSize(data)),\r\n      color: new Float32Array(getSize(data))\r\n    }, params)\r\n\r\n    this.setAttributes(data)\r\n  }\r\n\r\n  setAttributes (data: Partial<BufferData>) {\r\n    let position, color\r\n    let linePosition, lineColor\r\n\r\n    const attributes = this.geometry.attributes as any  // TODO\r\n\r\n    if (data.position) {\r\n      position = data.position\r\n      linePosition = attributes.position.array\r\n      attributes.position.needsUpdate = true\r\n    }\r\n\r\n    if (data.color) {\r\n      color = data.color\r\n      lineColor = attributes.color.array\r\n      attributes.color.needsUpdate = true\r\n    }\r\n\r\n    if (!position && !color) {\r\n      Log.warn('TraceBuffer.prototype.setAttributes no data')\r\n      return\r\n    }\r\n\r\n    let v, v2\r\n    const n = this.size\r\n    const n1 = n - 1\r\n\r\n    for (let i = 0; i < n1; ++i) {\r\n      v = 3 * i\r\n      v2 = 3 * i * 2\r\n\r\n      if (position) {\r\n        linePosition[ v2 ] = position[ v ]\r\n        linePosition[ v2 + 1 ] = position[ v + 1 ]\r\n        linePosition[ v2 + 2 ] = position[ v + 2 ]\r\n\r\n        linePosition[ v2 + 3 ] = position[ v + 3 ]\r\n        linePosition[ v2 + 4 ] = position[ v + 4 ]\r\n        linePosition[ v2 + 5 ] = position[ v + 5 ]\r\n      }\r\n\r\n      if (color) {\r\n        lineColor[ v2 ] = color[ v ]\r\n        lineColor[ v2 + 1 ] = color[ v + 1 ]\r\n        lineColor[ v2 + 2 ] = color[ v + 2 ]\r\n\r\n        lineColor[ v2 + 3 ] = color[ v + 3 ]\r\n        lineColor[ v2 + 4 ] = color[ v + 4 ]\r\n        lineColor[ v2 + 5 ] = color[ v + 5 ]\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default TraceBuffer\r\n","/**\r\n * @file Trace Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { RepresentationRegistry } from '../globals'\r\nimport { defaults } from '../utils'\r\nimport Spline from '../geometry/spline'\r\nimport StructureRepresentation, { StructureRepresentationParameters, StructureRepresentationData } from './structure-representation'\r\nimport TraceBuffer from '../buffer/trace-buffer'\r\nimport { Structure } from '../ngl';\r\nimport Viewer from '../viewer/viewer';\r\nimport AtomProxy from '../proxy/atom-proxy';\r\nimport StructureView from '../structure/structure-view';\r\nimport Polymer from '../proxy/polymer';\r\n\r\nexport interface TraceRepresentationParameters extends StructureRepresentationParameters {\r\n  subdiv: number\r\n  tension: number\r\n  smoothSheet: boolean\r\n}\r\n/**\r\n * Trace Representation\r\n */\r\nclass TraceRepresentation extends StructureRepresentation {\r\n  protected subdiv: number\r\n  protected tension: number\r\n  protected smoothSheet: boolean\r\n  \r\n  constructor (structure: Structure, viewer: Viewer, params: Partial<TraceRepresentationParameters>) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'trace'\r\n\r\n    this.parameters = Object.assign({\r\n\r\n      subdiv: {\r\n        type: 'integer', max: 50, min: 1, rebuild: true\r\n      },\r\n      tension: {\r\n        type: 'number', precision: 1, max: 1.0, min: 0.1\r\n      },\r\n      smoothSheet: {\r\n        type: 'boolean', rebuild: true\r\n      }\r\n\r\n    }, this.parameters, {\r\n\r\n      flatShaded: null,\r\n      side: null,\r\n      wireframe: null\r\n\r\n    })\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params: Partial<TraceRepresentationParameters>) {\r\n    var p = params || {}\r\n    p.colorScheme = defaults(p.colorScheme, 'chainname')\r\n    p.colorScale = defaults(p.colorScale, 'RdYlBu')\r\n\r\n    if (p.quality === 'low') {\r\n      this.subdiv = 3\r\n    } else if (p.quality === 'medium') {\r\n      this.subdiv = 6\r\n    } else if (p.quality === 'high') {\r\n      this.subdiv = 12\r\n    } else {\r\n      this.subdiv = defaults(p.subdiv, 6)\r\n    }\r\n\r\n    this.tension = defaults(p.tension, NaN)\r\n    this.smoothSheet = defaults(p.smoothSheet, false)\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  getSplineParams (params?: {[k:string]: any}) {\r\n    return Object.assign({\r\n      subdiv: this.subdiv,\r\n      tension: this.tension,\r\n      directional: false,\r\n      smoothSheet: this.smoothSheet\r\n    }, params)\r\n  }\r\n\r\n  getAtomRadius (atom: AtomProxy) {\r\n    return atom.isTrace() ? 0.1 : 0\r\n  }\r\n\r\n  createData (sview: StructureView) {\r\n    var bufferList: TraceBuffer[] = []\r\n    var polymerList: Polymer[] = []\r\n\r\n    this.structure.eachPolymer(polymer => {\r\n      if (polymer.residueCount < 4) return\r\n      polymerList.push(polymer)\r\n\r\n      var spline = new Spline(polymer, this.getSplineParams())\r\n      var subPos = spline.getSubdividedPosition()\r\n      var subCol = spline.getSubdividedColor(this.getColorParams())\r\n\r\n      bufferList.push(\r\n        new TraceBuffer(\r\n          Object.assign({}, subPos, subCol),\r\n          this.getBufferParams()\r\n        )\r\n      )\r\n    }, sview.getSelection())\r\n\r\n    return {\r\n      bufferList: bufferList,\r\n      polymerList: polymerList\r\n    }\r\n  }\r\n\r\n  updateData (what: any, data: StructureRepresentationData) {\r\n    what = what || {}\r\n\r\n    var i = 0\r\n    var n = data.polymerList!.length\r\n\r\n    for (i = 0; i < n; ++i) {\r\n      var bufferData = {}\r\n      var spline = new Spline(data.polymerList![ i ], this.getSplineParams())\r\n\r\n      if (what.position) {\r\n        var subPos = spline.getSubdividedPosition()\r\n        Object.assign(bufferData, { position: subPos.position })\r\n      }\r\n\r\n      if (what.color) {\r\n        var subCol = spline.getSubdividedColor(this.getColorParams())\r\n        Object.assign(bufferData, { color: subCol.color })\r\n      }\r\n\r\n      data.bufferList[ i ].setAttributes(bufferData)\r\n    }\r\n  }\r\n\r\n  setParameters (params: Partial<TraceRepresentationParameters>) {\r\n    var rebuild = false\r\n    var what = {}\r\n\r\n    if (params && params.tension) {\r\n      Object.assign(what, {position: true})\r\n    }\r\n\r\n    super.setParameters(params, what, rebuild)\r\n\r\n    return this\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('trace', TraceRepresentation)\r\n\r\nexport default TraceRepresentation\r\n","/**\r\n * @file Tube Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { RepresentationRegistry } from '../globals'\r\nimport { defaults } from '../utils'\r\nimport CartoonRepresentation, {CartoonRepresentationParameters} from './cartoon-representation'\r\nimport { Structure } from '../ngl';\r\nimport Viewer from '../viewer/viewer';\r\n\r\n/**\r\n * Tube Representation\r\n */\r\nclass TubeRepresentation extends CartoonRepresentation {\r\n  constructor (structure: Structure, viewer: Viewer, params: Partial<CartoonRepresentationParameters>) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'tube'\r\n\r\n    this.parameters = Object.assign(\r\n      {}, this.parameters, { aspectRatio: null }\r\n    )\r\n  }\r\n\r\n  init (params: Partial<CartoonRepresentationParameters>) {\r\n    var p = params || {}\r\n    p.aspectRatio = 1.0\r\n    p.radiusScale = defaults(p.radiusScale, 2.0)\r\n\r\n    if (p.quality === 'low') {\r\n      this.radialSegments = 5\r\n    }\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  getSplineParams (/* params */) {\r\n    return super.getSplineParams({\r\n      directional: false\r\n    })\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('tube', TubeRepresentation)\r\n\r\nexport default TubeRepresentation\r\n","/**\r\n * @file Unitcell Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { RepresentationRegistry } from '../globals'\r\nimport { defaults } from '../utils'\r\nimport StructureRepresentation, { StructureRepresentationParameters, StructureRepresentationData } from './structure-representation'\r\nimport SphereBuffer, { SphereBufferData, SphereBufferParameters } from '../buffer/sphere-buffer'\r\nimport CylinderBuffer, { CylinderBufferData } from '../buffer/cylinder-buffer'\r\nimport { Structure } from '../ngl';\r\nimport Viewer from '../viewer/viewer';\r\nimport { AtomDataFields } from '../structure/structure-data';\r\nimport StructureView from '../structure/structure-view';\r\nimport SphereGeometryBuffer from '../buffer/spheregeometry-buffer';\r\nimport CylinderGeometryBuffer from '../buffer/cylindergeometry-buffer';\r\n// @ts-ignore: unused import UnitcellPicker required for declaration only\r\nimport { UnitcellPicker } from '../utils/picker';\r\n\r\nexport interface UnitcellRepresentationParameters extends StructureRepresentationParameters {\r\n  radiusSize: number\r\n  sphereDetail: number\r\n  radialSegments: number\r\n  disableImpostor: boolean\r\n}\r\n\r\n/**\r\n * Unitcell Representation\r\n */\r\nclass UnitcellRepresentation extends StructureRepresentation {\r\n  sphereBuffer: SphereBuffer\r\n  cylinderBuffer: CylinderBuffer\r\n\r\n  constructor (structure: Structure, viewer: Viewer, params: Partial<UnitcellRepresentationParameters>) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'unitcell'\r\n\r\n    this.parameters = Object.assign({\r\n\r\n      radiusSize: {\r\n        type: 'number', precision: 3, max: 10.0, min: 0.001\r\n      },\r\n      sphereDetail: true,\r\n      radialSegments: true,\r\n      disableImpostor: true\r\n\r\n    }, this.parameters, {\r\n      assembly: null\r\n    })\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params: Partial<UnitcellRepresentationParameters>) {\r\n    const p = params || {}\r\n\r\n    let defaultRadius = 0.5\r\n    if (this.structure.unitcell) {\r\n      defaultRadius = Math.cbrt(this.structure.unitcell.volume) / 200\r\n    }\r\n\r\n    p.radiusSize = defaults(p.radiusSize, defaultRadius)\r\n    p.colorValue = defaults(p.colorValue, 'orange')\r\n    p.useInteriorColor = defaults(p.useInteriorColor, true)\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  getUnitcellData (structure: Structure) {\r\n    return structure.unitcell!.getData(structure)\r\n  }\r\n\r\n  create () {\r\n    const structure = this.structureView.getStructure()\r\n    if (!structure.unitcell) return\r\n    const unitcellData = this.getUnitcellData(structure)\r\n\r\n    this.sphereBuffer = new SphereBuffer(\r\n      unitcellData.vertex as SphereBufferData,\r\n      this.getBufferParams({\r\n        sphereDetail: this.sphereDetail,\r\n        disableImpostor: this.disableImpostor,\r\n        dullInterior: true\r\n      }) as SphereBufferParameters\r\n    )\r\n\r\n    this.cylinderBuffer = new CylinderBuffer(\r\n      unitcellData.edge as CylinderBufferData,\r\n      this.getBufferParams({\r\n        openEnded: true,\r\n        radialSegments: this.radialSegments,\r\n        disableImpostor: this.disableImpostor,\r\n        dullInterior: true\r\n      })\r\n    )\r\n\r\n    this.dataList.push({\r\n      sview: this.structureView,\r\n      bufferList: [ this.sphereBuffer as SphereGeometryBuffer, this.cylinderBuffer as CylinderGeometryBuffer ]\r\n    })\r\n  }\r\n\r\n  createData (sview: StructureView): undefined {\r\n    return\r\n  }\r\n\r\n  updateData (what: AtomDataFields, data: StructureRepresentationData) {\r\n    const structure = data.sview!.getStructure()\r\n    if (!structure.unitcell) return\r\n    const unitcellData = this.getUnitcellData(structure)\r\n    const sphereData: Partial<SphereBufferData> = {}\r\n    const cylinderData: Partial<CylinderBufferData> = {}\r\n\r\n    if (!what || what.position) {\r\n      Object.assign(sphereData, {position: unitcellData.vertex.position})\r\n      Object.assign(cylinderData, {\r\n        position1: unitcellData.edge.position1,\r\n        position2: unitcellData.edge.position2\r\n      })\r\n    }\r\n\r\n    if (!what || what.color) {\r\n      Object.assign(sphereData, {color: unitcellData.vertex.color})\r\n      Object.assign(cylinderData, {\r\n        color: unitcellData.edge.color,\r\n        color2: unitcellData.edge.color2\r\n      })\r\n    }\r\n\r\n    if (!what || what.radius) {\r\n      Object.assign(sphereData, {radius: unitcellData.vertex.radius})\r\n      Object.assign(cylinderData, {radius: unitcellData.edge.radius})\r\n    }\r\n\r\n    (this.sphereBuffer as SphereGeometryBuffer).setAttributes(sphereData);\r\n    (this.cylinderBuffer as CylinderGeometryBuffer).setAttributes(cylinderData)\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('unitcell', UnitcellRepresentation)\r\n\r\nexport default UnitcellRepresentation\r\n","/**\r\n * @file Validation Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { RepresentationRegistry } from '../globals'\r\nimport { defaults } from '../utils'\r\nimport StructureRepresentation, { StructureRepresentationParameters } from './structure-representation'\r\nimport CylinderBuffer from '../buffer/cylinder-buffer'\r\nimport { Structure } from '../ngl';\r\nimport Viewer from '../viewer/viewer';\r\nimport StructureView from '../structure/structure-view';\r\nimport CylinderGeometryBuffer from '../buffer/cylindergeometry-buffer';\r\nimport CylinderImpostorBuffer from '../buffer/cylinderimpostor-buffer';\r\n\r\n/**\r\n * Validation representation\r\n */\r\nclass ValidationRepresentation extends StructureRepresentation {\r\n  constructor (structure: Structure, viewer: Viewer, params: Partial<StructureRepresentationParameters>) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'validation'\r\n\r\n    this.parameters = Object.assign({\r\n\r\n    }, this.parameters, {\r\n      radiusType: null,\r\n      radiusSize: null,\r\n      radiusScale: null\r\n    })\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params: Partial<StructureRepresentationParameters>) {\r\n    const p = params || {}\r\n    p.colorValue = defaults(p.colorValue, '#f0027f')\r\n    p.useInteriorColor = defaults(p.useInteriorColor, true)\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  createData (sview: StructureView) {\r\n    if (!sview.validation) return\r\n\r\n    const clashData = sview.validation.getClashData({\r\n      structure: sview,\r\n      color: this.colorValue\r\n    })\r\n\r\n    const cylinderBuffer = new CylinderBuffer(\r\n      clashData, this.getBufferParams({ openEnded: false })\r\n    )\r\n\r\n    return {\r\n      bufferList: [ cylinderBuffer as CylinderGeometryBuffer|CylinderImpostorBuffer ]\r\n    }\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('validation', ValidationRepresentation)\r\n\r\nexport default ValidationRepresentation\r\n","/**\r\n * @file Cone Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Matrix4, Vector3, ConeBufferGeometry } from 'three'\r\n\r\nimport { BufferRegistry } from '../globals'\r\nimport { defaults } from '../utils'\r\nimport { calculateCenterArray } from '../math/array-utils'\r\nimport GeometryBuffer from './geometry-buffer'\r\nimport { BufferData, BufferDefaultParameters } from './buffer'\r\n\r\nconst scale = new Vector3()\r\nconst eye = new Vector3()\r\nconst target = new Vector3()\r\nconst up = new Vector3(0, 1, 0)\r\n\r\nfunction getGeo (params: Partial<ConeBufferParameters> = {}) {\r\n  const geo = new ConeBufferGeometry(\r\n    1,  // radius\r\n    1,  // height\r\n    defaults(params.radialSegments, 60),  // radialSegments\r\n    1,  // heightSegments\r\n    defaults(params.openEnded, false)  // openEnded\r\n  )\r\n  geo.applyMatrix4(new Matrix4().makeRotationX(-Math.PI / 2))\r\n\r\n  return geo\r\n}\r\n\r\nexport interface ConeBufferData extends BufferData {\r\n  position1: Float32Array\r\n  position2: Float32Array\r\n  radius: Float32Array\r\n}\r\n\r\nexport const ConeBufferDefaultParameters = Object.assign({\r\n  radialSegments: 60,\r\n  openEnded: false\r\n}, BufferDefaultParameters)\r\nexport type ConeBufferParameters = typeof ConeBufferDefaultParameters\r\n\r\n\r\n/**\r\n * Cone geometry buffer.\r\n *\r\n * @example\r\n * var coneBuffer = new ConeBuffer({\r\n *   position1: new Float32Array([ 0, 0, 0 ]),\r\n *   position2: new Float32Array([ 1, 1, 1 ]),\r\n *   color: new Float32Array([ 1, 0, 0 ]),\r\n *   color2: new Float32Array([ 0, 1, 0 ]),\r\n *   radius: new Float32Array([ 1 ])\r\n * });\r\n */\r\nclass ConeBuffer extends GeometryBuffer {\r\n  updateNormals = true\r\n\r\n  get defaultParameters() { return ConeBufferDefaultParameters }\r\n  parameters: ConeBufferParameters\r\n\r\n  _position: Float32Array\r\n  _position1: Float32Array\r\n  _position2: Float32Array\r\n  _radius: Float32Array\r\n\r\n  /**\r\n   * @param {Object} data - buffer data\r\n   * @param {Float32Array} data.position1 - from positions\r\n   * @param {Float32Array} data.position2 - to positions\r\n   * @param {Float32Array} data.color - colors\r\n   * @param {Float32Array} data.radius - radii\r\n   * @param {Picker} [data.picking] - picking ids\r\n   * @param {BufferParameters} [params] - parameters object\r\n   */\r\n  constructor (data: ConeBufferData, params: Partial<ConeBufferParameters> = {}) {\r\n    super({\r\n      position: new Float32Array(data.position1.length),\r\n      color: data.color,\r\n      picking: data.picking\r\n    }, params, getGeo(params))\r\n\r\n    this._position = new Float32Array(data.position1.length)\r\n\r\n    this.setAttributes(data, true)\r\n  }\r\n\r\n  applyPositionTransform (matrix: Matrix4, i: number, i3: number) {\r\n    eye.fromArray(this._position1 as any, i3)\r\n    target.fromArray(this._position2 as any, i3)\r\n    matrix.lookAt(eye, target, up)\r\n\r\n    const r = this._radius[ i ]\r\n    scale.set(r, r, eye.distanceTo(target))\r\n    matrix.scale(scale)\r\n  }\r\n\r\n  setAttributes (data: Partial<ConeBufferData> = {}, initNormals?: boolean) {\r\n    if (data.position1 && data.position2) {\r\n      calculateCenterArray(data.position1, data.position2, this._position)\r\n      this._position1 = data.position1\r\n      this._position2 = data.position2\r\n      data.position = this._position\r\n    }\r\n    if (data.radius) this._radius = data.radius\r\n\r\n    super.setAttributes(data, initNormals)\r\n  }\r\n}\r\n\r\nBufferRegistry.add('cone', ConeBuffer)\r\n\r\nexport default ConeBuffer\r\n","/**\r\n * @file Geometry Group\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Box3, BufferGeometry } from 'three'\r\n\r\nclass GeometryGroup {\r\n  geometryList: BufferGeometry[]\r\n  boundingBox: Box3\r\n\r\n  constructor (geometryList: BufferGeometry[] = []) {\r\n    this.geometryList = geometryList\r\n  }\r\n\r\n  computeBoundingBox () {\r\n    if (!this.boundingBox) {\r\n      this.boundingBox = new Box3()\r\n    } else {\r\n      this.boundingBox.empty()\r\n    }\r\n\r\n    this.geometryList.forEach(geo => {\r\n      if (!geo.boundingBox) geo.computeBoundingBox()\r\n      this.boundingBox.union(geo.boundingBox as Box3)\r\n    })\r\n  }\r\n}\r\n\r\nexport default GeometryGroup\r\n","/**\r\n * @file Arrow Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Matrix4, Vector3, Group } from 'three'\r\n\r\nimport { BufferRegistry } from '../globals'\r\nimport { createParams, defaults } from '../utils'\r\nimport { Picker } from '../utils/picker'\r\nimport Buffer from './buffer'\r\nimport CylinderBuffer, { CylinderBufferData } from './cylinder-buffer'\r\nimport CylinderGeometryBuffer from './cylindergeometry-buffer'\r\nimport ConeBuffer, { ConeBufferData } from './cone-buffer'\r\nimport GeometryGroup from '../viewer/geometry-group'\r\nimport { BufferData, BufferDefaultParameters } from './buffer'\r\n\r\nexport interface ArrowBufferData extends BufferData {\r\n  position1: Float32Array\r\n  position2: Float32Array\r\n  radius: Float32Array\r\n}\r\n\r\nexport const ArrowBufferDefaultParameters = Object.assign({\r\n  aspectRatio: 1.5,\r\n  radialSegments: 50,\r\n  openEnded: false,\r\n  disableImpostor: false\r\n}, BufferDefaultParameters)\r\nexport type ArrowBufferParameters = typeof ArrowBufferDefaultParameters\r\n\r\n/**\r\n * Arrow buffer. Draws arrows made from a cylinder and a cone.\r\n * @implements {Buffer}\r\n *\r\n * @example\r\n * var arrowBuffer = new ArrowBuffer({\r\n *   position1: new Float32Array([ 0, 0, 0 ]),\r\n *   position2: new Float32Array([ 10, 1, 1 ]),\r\n *   color: new Float32Array([ 1, 0, 0 ]),\r\n *   radius: new Float32Array([ 1 ])\r\n * });\r\n */\r\nclass ArrowBuffer {\r\n  parameters: ArrowBufferParameters\r\n  get defaultParameters() { return ArrowBufferDefaultParameters }\r\n\r\n  cylinderBuffer: CylinderGeometryBuffer\r\n  coneBuffer: ConeBuffer\r\n\r\n  splitPosition: Float32Array\r\n  cylinderRadius: Float32Array\r\n\r\n  geometry: GeometryGroup\r\n  picking?: Picker\r\n\r\n  group = new Group()\r\n  wireframeGroup = new Group()\r\n  pickingGroup = new Group()\r\n\r\n  visible = true\r\n\r\n  /**\r\n   * @param {Object} data - buffer data\r\n   * @param {Float32Array} data.position1 - from positions\r\n   * @param {Float32Array} data.position2 - to positions\r\n   * @param {Float32Array} data.color - colors\r\n   * @param {Float32Array} data.radius - radii\r\n   * @param {Picker} [data.picking] - picking ids\r\n   * @param {BufferParameters} [params] - parameters object\r\n   */\r\n  constructor (data: ArrowBufferData, params: Partial<ArrowBufferParameters> = {}) {\r\n    this.parameters = createParams(params, this.defaultParameters)\r\n\r\n    this.splitPosition = new Float32Array(data.position1.length)\r\n    this.cylinderRadius = new Float32Array(data.radius.length)\r\n\r\n    const attr = this.makeAttributes(data)\r\n    const bufferParams = {\r\n      radialSegments: this.parameters.radialSegments,\r\n      openEnded: this.parameters.openEnded,\r\n      disableImpostor: this.parameters.disableImpostor\r\n    }\r\n\r\n    this.cylinderBuffer = new CylinderBuffer(\r\n      attr.cylinder as CylinderBufferData, bufferParams\r\n    ) as CylinderGeometryBuffer\r\n    this.coneBuffer = new ConeBuffer(\r\n      attr.cone as ConeBufferData, bufferParams\r\n    )\r\n\r\n    this.geometry = new GeometryGroup([\r\n      this.cylinderBuffer.geometry,\r\n      this.coneBuffer.geometry\r\n    ])\r\n\r\n    // requires Group objects to be present\r\n    this.matrix = defaults(params.matrix, new Matrix4())\r\n\r\n    this.picking = data.picking\r\n  }\r\n\r\n  set matrix (m) {\r\n    Buffer.prototype.setMatrix.call(this, m)\r\n  }\r\n  get matrix () {\r\n    return this.group.matrix.clone()\r\n  }\r\n\r\n  get pickable () {\r\n    return !!this.picking\r\n  }\r\n\r\n  makeAttributes (data: Partial<ArrowBufferData> = {}) {\r\n    const splitPosition = this.splitPosition\r\n    const cylinderRadius = this.cylinderRadius\r\n\r\n    const aspectRatio = this.parameters.aspectRatio\r\n\r\n    let i, il\r\n    const cylinder: Partial<CylinderBufferData> = {}\r\n    const cone: Partial<ConeBufferData> = {}\r\n\r\n    if (data.radius) {\r\n      for (i = 0, il = cylinderRadius.length; i < il; ++i) {\r\n        cylinderRadius[ i ] = data.radius[ i ] / aspectRatio\r\n      }\r\n      cylinder.radius = cylinderRadius\r\n      cone.radius = data.radius\r\n    }\r\n\r\n    if (data.position1 && data.position2) {\r\n      const vFrom = new Vector3()\r\n      const vTo = new Vector3()\r\n      const vDir = new Vector3()\r\n      const vSplit = new Vector3()\r\n      for (i = 0, il = splitPosition.length; i < il; i += 3) {\r\n        vFrom.fromArray(data.position1 as any, i)\r\n        vTo.fromArray(data.position2 as any, i)\r\n        vDir.subVectors(vFrom, vTo)\r\n        const fullLength = vDir.length()\r\n        const coneLength = cylinderRadius[ i / 3 ] * aspectRatio * 2\r\n        const length = Math.min(fullLength, coneLength)\r\n        vDir.setLength(length)\r\n        vSplit.copy(vTo).add(vDir)\r\n        vSplit.toArray(splitPosition as any, i)\r\n      }\r\n      cylinder.position1 = data.position1\r\n      cylinder.position2 = splitPosition\r\n      cone.position1 = splitPosition\r\n      cone.position2 = data.position2\r\n    }\r\n\r\n    if (data.color) {\r\n      cylinder.color = data.color\r\n      cylinder.color2 = data.color\r\n      cone.color = data.color\r\n    }\r\n\r\n    return {\r\n      cylinder: cylinder,\r\n      cone: cone\r\n    }\r\n  }\r\n\r\n  getMesh () {\r\n    return new Group().add(\r\n      this.cylinderBuffer.getMesh(),\r\n      this.coneBuffer.getMesh()\r\n    )\r\n  }\r\n\r\n  getWireframeMesh () {\r\n    return new Group().add(\r\n      this.cylinderBuffer.getWireframeMesh(),\r\n      this.coneBuffer.getWireframeMesh()\r\n    )\r\n  }\r\n\r\n  getPickingMesh () {\r\n    return new Group().add(\r\n      this.cylinderBuffer.getPickingMesh(),\r\n      this.coneBuffer.getPickingMesh()\r\n    )\r\n  }\r\n\r\n  setAttributes (data: Partial<ArrowBufferData> = {}) {\r\n    const attr = this.makeAttributes(data)\r\n\r\n    this.cylinderBuffer.setAttributes(attr.cylinder)\r\n    this.coneBuffer.setAttributes(attr.cone)\r\n  }\r\n\r\n  /**\r\n   * Set buffer parameters\r\n   * @param {BufferParameters} params - buffer parameters object\r\n   * @return {undefined}\r\n   */\r\n  setParameters (params: Partial<ArrowBufferParameters> = {}) {\r\n    params = Object.assign({}, params)\r\n\r\n    if (params && params.matrix !== undefined) {\r\n      this.matrix = params.matrix\r\n    }\r\n    delete params.matrix\r\n\r\n    if (params && params.wireframe !== undefined) {\r\n      this.parameters.wireframe = params.wireframe\r\n      this.setVisibility(this.visible)\r\n    }\r\n\r\n    this.cylinderBuffer.setParameters(params)\r\n    this.coneBuffer.setParameters(params)\r\n  }\r\n\r\n  setVisibility (value: boolean) {\r\n    Buffer.prototype.setVisibility.call(this, value)\r\n  }\r\n\r\n  dispose () {\r\n    this.cylinderBuffer.dispose()\r\n    this.coneBuffer.dispose()\r\n  }\r\n}\r\n\r\nBufferRegistry.add('arrow', ArrowBuffer)\r\n\r\nexport default ArrowBuffer\r\n","/**\r\n * @file Box Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { BoxBufferGeometry, Vector3, Matrix4 } from 'three'\r\n\r\nimport { BufferRegistry } from '../globals'\r\nimport GeometryBuffer from './geometry-buffer'\r\nimport { BufferData, BufferParameters } from './buffer'\r\n\r\nconst scale = new Vector3()\r\nconst target = new Vector3()\r\nconst up = new Vector3()\r\nconst eye = new Vector3(0, 0, 0)\r\n\r\nexport interface BoxBufferData extends BufferData {\r\n  heightAxis: Float32Array\r\n  depthAxis: Float32Array\r\n  size: Float32Array\r\n}\r\n\r\n/**\r\n * Box buffer. Draws boxes.\r\n *\r\n * @example\r\n * var boxBuffer = new BoxBuffer({\r\n *   position: new Float32Array([ 0, 3, 0, -2, 0, 0 ]),\r\n *   color: new Float32Array([ 1, 0, 1, 0, 1, 0 ]),\r\n *   size: new Float32Array([ 2, 1.5 ]),\r\n *   heightAxis: new Float32Array([ 0, 1, 1, 0, 2, 0 ]),\r\n *   depthAxis: new Float32Array([ 1, 0, 1, 0, 0, 2 ])\r\n * })\r\n */\r\nclass BoxBuffer extends GeometryBuffer {\r\n  updateNormals = true\r\n\r\n  _heightAxis: Float32Array\r\n  _depthAxis: Float32Array\r\n  _size: Float32Array\r\n\r\n  constructor (data: BoxBufferData, params: Partial<BufferParameters> = {}) {\r\n    super(data, params, new BoxBufferGeometry(1, 1, 1))\r\n\r\n    this.setAttributes(data, true)\r\n  }\r\n\r\n  applyPositionTransform (matrix: Matrix4, i: number, i3: number) {\r\n    target.fromArray(this._heightAxis as any, i3)\r\n    up.fromArray(this._depthAxis as any, i3)\r\n    matrix.lookAt(eye, target, up)\r\n\r\n    scale.set(this._size[ i ], up.length(), target.length())\r\n    matrix.scale(scale)\r\n  }\r\n\r\n  setAttributes (data: Partial<BoxBufferData> = {}, initNormals?: boolean) {\r\n    if (data.size) this._size = data.size\r\n    if (data.heightAxis) this._heightAxis = data.heightAxis\r\n    if (data.depthAxis) this._depthAxis = data.depthAxis\r\n\r\n    super.setAttributes(data, initNormals)\r\n  }\r\n}\r\n\r\nBufferRegistry.add('box', BoxBuffer)\r\n\r\nexport default BoxBuffer\r\n","/**\r\n * @file Ellipsoid Geometry Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { IcosahedronBufferGeometry, Vector3, Matrix4 } from 'three'\r\n\r\nimport { BufferRegistry } from '../globals'\r\nimport { defaults } from '../utils'\r\nimport GeometryBuffer from './geometry-buffer'\r\nimport { BufferData, BufferDefaultParameters } from './buffer'\r\n\r\nconst scale = new Vector3()\r\nconst target = new Vector3()\r\nconst up = new Vector3()\r\nconst eye = new Vector3(0, 0, 0)\r\n\r\nexport interface EllipsoidBufferData extends BufferData {\r\n  majorAxis: Float32Array\r\n  minorAxis: Float32Array\r\n  radius: Float32Array\r\n}\r\n\r\nexport const EllipsoidBufferDefaultParameters = Object.assign({\r\n  sphereDetail: 2,\r\n}, BufferDefaultParameters)\r\nexport type EllipsoidBufferParameters = typeof EllipsoidBufferDefaultParameters\r\n\r\n/**\r\n * Ellipsoid buffer. Draws ellipsoids.\r\n *\r\n * @example\r\n * var ellipsoidBuffer = new EllipsoidBuffer({\r\n *   position: new Float32Array([ 0, 0, 0 ]),\r\n *   color: new Float32Array([ 1, 0, 0 ]),\r\n *   radius: new Float32Array([ 1 ]),\r\n *   majorAxis: new Float32Array([ 1, 1, 0 ]),\r\n *   minorAxis: new Float32Array([ 0.5, 0, 0.5 ]),\r\n * });\r\n */\r\nclass EllipsoidBuffer extends GeometryBuffer {\r\n  updateNormals = true\r\n\r\n  get defaultParameters() { return EllipsoidBufferDefaultParameters }\r\n  parameters: EllipsoidBufferParameters\r\n\r\n  _majorAxis: Float32Array\r\n  _minorAxis: Float32Array\r\n  _radius: Float32Array\r\n\r\n  constructor (data: EllipsoidBufferData, params: Partial<EllipsoidBufferParameters> = {}) {\r\n    super(data, params, new IcosahedronBufferGeometry(1, defaults(params.sphereDetail, 2)))\r\n\r\n    this.setAttributes(data, true)\r\n  }\r\n\r\n  applyPositionTransform (matrix: Matrix4, i: number, i3: number) {\r\n    target.fromArray(this._majorAxis as any, i3)\r\n    up.fromArray(this._minorAxis as any, i3)\r\n    matrix.lookAt(eye, target, up)\r\n\r\n    scale.set(this._radius[ i ], up.length(), target.length())\r\n    matrix.scale(scale)\r\n  }\r\n\r\n  setAttributes (data: Partial<EllipsoidBufferData> = {}, initNormals?: boolean) {\r\n    if (data.radius) this._radius = data.radius\r\n    if (data.majorAxis) this._majorAxis = data.majorAxis\r\n    if (data.minorAxis) this._minorAxis = data.minorAxis\r\n\r\n    super.setAttributes(data, initNormals)\r\n  }\r\n}\r\n\r\nBufferRegistry.add('ellipsoid', EllipsoidBuffer)\r\n\r\nexport default EllipsoidBuffer\r\n","/**\r\n * @file Octahedron Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { OctahedronBufferGeometry, Vector3, Matrix4 } from 'three'\r\nimport { BufferRegistry } from '../globals'\r\nimport GeometryBuffer from './geometry-buffer'\r\nimport { BufferData, BufferParameters } from './buffer'\r\n\r\nconst scale = new Vector3()\r\nconst target = new Vector3()\r\nconst up = new Vector3()\r\nconst eye = new Vector3(0, 0, 0)\r\n\r\nexport interface OctahedronBufferData extends BufferData {\r\n  heightAxis: Float32Array\r\n  depthAxis: Float32Array\r\n  size: Float32Array\r\n}\r\n\r\n/**\r\n * Octahedron buffer. Draws octahedrons.\r\n *\r\n * @example\r\n * var octahedronBuffer = new OctahedronBuffer({\r\n *   position: new Float32Array([ 0, 3, 0, -2, 0, 0 ]),\r\n *   color: new Float32Array([ 1, 0, 1, 0, 1, 0 ]),\r\n *   size: new Float32Array([ 2, 1.5 ]),\r\n *   heightAxis: new Float32Array([ 0, 1, 1, 0, 2, 0 ]),\r\n *   depthAxis: new Float32Array([ 1, 0, 1, 0, 0, 2 ])\r\n * })\r\n */\r\nclass OctahedronBuffer extends GeometryBuffer {\r\n  updateNormals = true\r\n\r\n  _heightAxis: Float32Array\r\n  _depthAxis: Float32Array\r\n  _size: Float32Array\r\n\r\n  constructor (data: OctahedronBufferData, params: Partial<BufferParameters> = {}) {\r\n    super(data, params, new OctahedronBufferGeometry(1, 0))\r\n\r\n    this.setAttributes(data, true)\r\n  }\r\n\r\n  applyPositionTransform (matrix: Matrix4, i: number, i3: number) {\r\n    target.fromArray(this._heightAxis as any, i3)\r\n    up.fromArray(this._depthAxis as any, i3)\r\n    matrix.lookAt(eye, target, up)\r\n\r\n    scale.set(this._size[ i ], up.length(), target.length())\r\n    matrix.scale(scale)\r\n  }\r\n\r\n  setAttributes (data: Partial<OctahedronBufferData> = {}, initNormals?: boolean) {\r\n    if (data.size) this._size = data.size\r\n    if (data.heightAxis) this._heightAxis = data.heightAxis\r\n    if (data.depthAxis) this._depthAxis = data.depthAxis\r\n\r\n    super.setAttributes(data, initNormals)\r\n  }\r\n}\r\n\r\nBufferRegistry.add('octahedron', OctahedronBuffer)\r\n\r\nexport default OctahedronBuffer\r\n","/**\r\n * @file Tetrahedron Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { TetrahedronBufferGeometry, Vector3, Matrix4 } from 'three'\r\nimport { BufferRegistry } from '../globals'\r\nimport GeometryBuffer from './geometry-buffer'\r\nimport { BufferData, BufferParameters } from './buffer'\r\n\r\nconst scale = new Vector3()\r\nconst target = new Vector3()\r\nconst up = new Vector3()\r\nconst eye = new Vector3(0, 0, 0)\r\n\r\nexport interface TetrahedronBufferData extends BufferData {\r\n  heightAxis: Float32Array\r\n  depthAxis: Float32Array\r\n  size: Float32Array\r\n}\r\n\r\n/**\r\n * Tetrahedron buffer. Draws tetrahedrons.\r\n *\r\n * @example\r\n * var tetrahedronBuffer = new TetrahedronBuffer({\r\n *   position: new Float32Array([ 0, 3, 0, -2, 0, 0 ]),\r\n *   color: new Float32Array([ 1, 0, 1, 0, 1, 0 ]),\r\n *   size: new Float32Array([ 2, 1.5 ]),\r\n *   heightAxis: new Float32Array([ 0, 1, 1, 0, 2, 0 ]),\r\n *   depthAxis: new Float32Array([ 1, 0, 1, 0, 0, 2 ])\r\n * })\r\n */\r\nclass TetrahedronBuffer extends GeometryBuffer {\r\n  updateNormals = true\r\n\r\n  _heightAxis: Float32Array\r\n  _depthAxis: Float32Array\r\n  _size: Float32Array\r\n\r\n  constructor (data: TetrahedronBufferData, params: Partial<BufferParameters> = {}) {\r\n    super(data, params, new TetrahedronBufferGeometry(1, 0))\r\n\r\n    this.setAttributes(data, true)\r\n  }\r\n\r\n  applyPositionTransform (matrix: Matrix4, i: number, i3: number) {\r\n    target.fromArray(this._heightAxis as any, i3)\r\n    up.fromArray(this._depthAxis as any, i3)\r\n    matrix.lookAt(eye, target, up)\r\n\r\n    scale.set(this._size[ i ], up.length(), target.length())\r\n    matrix.scale(scale)\r\n  }\r\n\r\n  setAttributes (data: Partial<TetrahedronBufferData> = {}, initNormals?: boolean) {\r\n    if (data.size) this._size = data.size\r\n    if (data.heightAxis) this._heightAxis = data.heightAxis\r\n    if (data.depthAxis) this._depthAxis = data.depthAxis\r\n\r\n    super.setAttributes(data, initNormals)\r\n  }\r\n}\r\n\r\nBufferRegistry.add('tetrahedron', TetrahedronBuffer)\r\n\r\nexport default TetrahedronBuffer\r\n","/**\r\n * @file Tetrahedron Geometry Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { TorusBufferGeometry, Vector3, Matrix4 } from 'three'\r\n\r\nimport { BufferRegistry } from '../globals'\r\nimport { defaults } from '../utils'\r\nimport GeometryBuffer from './geometry-buffer'\r\nimport { BufferDefaultParameters, BufferData } from './buffer'\r\n\r\nconst scale = new Vector3()\r\nconst target = new Vector3()\r\nconst up = new Vector3()\r\nconst eye = new Vector3(0, 0, 0)\r\n\r\nexport interface TorusBufferData extends BufferData {\r\n  majorAxis: Float32Array\r\n  minorAxis: Float32Array\r\n  radius: Float32Array\r\n}\r\n\r\nexport const TorusBufferDefaultParameters = Object.assign({\r\n  radiusRatio: 0.2,\r\n  radialSegments: 16,\r\n  tubularSegments: 32\r\n}, BufferDefaultParameters)\r\nexport type TorusBufferParameters = typeof TorusBufferDefaultParameters\r\n\r\n/**\r\n * Torus geometry buffer. Draws torii.\r\n *\r\n * @example\r\n * var torusBuffer = new TorusBuffer({\r\n *   position: new Float32Array([ 0, 0, 0 ]),\r\n *   color: new Float32Array([ 1, 0, 0 ]),\r\n *   radius: new Float32Array([ 1 ]),\r\n *   majorAxis: new Float32Array([ 1, 1, 0 ]),\r\n *   minorAxis: new Float32Array([ 0.5, 0, 0.5 ]),\r\n * });\r\n */\r\nclass TorusBuffer extends GeometryBuffer {\r\n  updateNormals = true\r\n\r\n  get defaultParameters() { return TorusBufferDefaultParameters }\r\n  parameters: TorusBufferParameters\r\n\r\n  _majorAxis: Float32Array\r\n  _minorAxis: Float32Array\r\n  _radius: Float32Array\r\n\r\n  constructor (data: TorusBufferData, params: Partial<TorusBufferParameters> = {}) {\r\n    super(data, params, new TorusBufferGeometry(\r\n      1,\r\n      defaults(params.radiusRatio, 0.2),\r\n      defaults(params.radialSegments, 16),\r\n      defaults(params.tubularSegments, 32)\r\n    ))\r\n\r\n    this.setAttributes(data, true)\r\n  }\r\n\r\n  applyPositionTransform (matrix: Matrix4, i: number, i3: number) {\r\n    target.fromArray(this._majorAxis as any, i3)\r\n    up.fromArray(this._minorAxis as any, i3)\r\n    matrix.lookAt(eye, target, up)\r\n\r\n    const r = this._radius[ i ]\r\n    scale.set(r, r, r)\r\n    matrix.scale(scale)\r\n  }\r\n\r\n  setAttributes (data: Partial<TorusBufferData> = {}, initNormals?: boolean) {\r\n    if (data.radius) this._radius = data.radius\r\n    if (data.majorAxis) this._majorAxis = data.majorAxis\r\n    if (data.minorAxis) this._minorAxis = data.minorAxis\r\n\r\n    super.setAttributes(data, initNormals)\r\n  }\r\n}\r\n\r\nBufferRegistry.add('torus', TorusBuffer)\r\n\r\nexport default TorusBuffer\r\n","/**\r\n * @file Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Debug, Log } from '../globals'\r\nimport { defaults } from '../utils'\r\nimport Streamer from '../streamer/streamer';\r\n\r\nexport interface ParserParameters {\r\n  name: string\r\n  path: string\r\n}\r\n\r\nclass Parser {\r\n  streamer: Streamer\r\n  name: string\r\n  path: string\r\n  [k: string]: any\r\n  \r\n  constructor (streamer: Streamer, params?: Partial<ParserParameters>) {\r\n    var p = params || {}\r\n\r\n    this.streamer = streamer\r\n\r\n    this.name = defaults(p.name, '')\r\n    this.path = defaults(p.path, '')\r\n  }\r\n\r\n  get type () { return '' }\r\n  get __objName () { return '' }\r\n  get isBinary () { return false }\r\n  get isJson () { return false }\r\n  get isXml () { return false }\r\n\r\n  parse () {\r\n    return this.streamer.read().then(() => {\r\n      this._beforeParse()\r\n      this._parse()\r\n      this._afterParse()\r\n      return this[ this.__objName ]\r\n    })\r\n  }\r\n\r\n  _parse () {}\r\n\r\n  _beforeParse () {}\r\n\r\n  _afterParse () {\r\n    if (Debug) Log.log(this[ this.__objName ])\r\n  }\r\n}\r\n\r\nexport default Parser\r\n","/**\r\n * @file Structure Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { defaults } from '../utils'\r\nimport Parser, { ParserParameters } from './parser'\r\nimport Structure from '../structure/structure'\r\nimport StructureBuilder from '../structure/structure-builder'\r\nimport Streamer from '../streamer/streamer';\r\n\r\nexport interface StructureParserParameters extends ParserParameters {\r\n  firstModelOnly: boolean\r\n  asTrajectory: boolean\r\n  cAlphaOnly: boolean\r\n}\r\nclass StructureParser extends Parser {\r\n\r\n  structureBuilder: StructureBuilder\r\n\r\n  constructor (streamer: Streamer, params?: Partial<StructureParserParameters>) {\r\n    var p = params || {}\r\n\r\n    super(streamer, p)\r\n\r\n    this.firstModelOnly = defaults(p.firstModelOnly, false)\r\n    this.asTrajectory = defaults(p.asTrajectory, false)\r\n    this.cAlphaOnly = defaults(p.cAlphaOnly, false)\r\n\r\n    this.structure = new Structure(this.name, this.path)\r\n    this.structureBuilder = new StructureBuilder(this.structure)\r\n  }\r\n\r\n  get type () { return 'structure' }\r\n  get __objName () { return 'structure' }\r\n}\r\n\r\nexport default StructureParser\r\n","/**\r\n * @file Entity\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Structure from './structure'\r\nimport {\r\n    UnknownEntity, PolymerEntity, NonPolymerEntity, MacrolideEntity, WaterEntity\r\n} from './structure-constants'\r\nimport ChainProxy from '../proxy/chain-proxy'\r\n\r\nfunction entityTypeFromString (string: string) {\r\n  string = string.toLowerCase()\r\n  switch (string) {\r\n    case 'polymer':\r\n      return PolymerEntity\r\n    case 'non-polymer':\r\n      return NonPolymerEntity\r\n    case 'macrolide':\r\n      return MacrolideEntity\r\n    case 'water':\r\n      return WaterEntity\r\n    default:\r\n      return UnknownEntity\r\n  }\r\n}\r\n\r\nfunction entityFromType (type: number) {\r\n  switch (type) {\r\n    case PolymerEntity:\r\n      return 'polymer'\r\n    case NonPolymerEntity:\r\n      return 'non-polymer'\r\n    case MacrolideEntity:\r\n      return 'macrolide'\r\n    case WaterEntity:\r\n      return 'water'\r\n    default:\r\n      return undefined\r\n  }\r\n}\r\n\r\nexport const EntityTypeString = {\r\n  'polymer': PolymerEntity,\r\n  'non-polymer': NonPolymerEntity,\r\n  'macrolide': MacrolideEntity,\r\n  'water': WaterEntity,\r\n}\r\nexport type EntityTypeString = keyof typeof EntityTypeString\r\n\r\n/**\r\n * Entity of a {@link Structure}\r\n */\r\nexport default class Entity {\r\n  structure: Structure\r\n  index: number\r\n  description: string\r\n  entityType: number\r\n  chainIndexList: number[]\r\n\r\n  /**\r\n   * @param {Structure} structure - structure the entity belongs to\r\n   * @param {Integer} index - index within structure.entityList\r\n   * @param {String} description - entity description\r\n   * @param {String} type - entity type\r\n   * @param {Array} chainIndexList - entity chainIndexList\r\n   */\r\n  constructor (structure: Structure, index: number, description = '', type?: EntityTypeString, chainIndexList: number[] = []) {\r\n    this.structure = structure\r\n    this.index = index\r\n    this.description = description\r\n    this.entityType = entityTypeFromString(type || '')\r\n    this.chainIndexList = chainIndexList\r\n\r\n    chainIndexList.forEach(function (ci: number) {\r\n      structure.chainStore.entityIndex[ ci ] = index\r\n    })\r\n  }\r\n\r\n  get type () { return entityFromType(this.entityType) }\r\n\r\n  getEntityType () {\r\n    return this.entityType\r\n  }\r\n\r\n  isPolymer () {\r\n    return this.entityType === PolymerEntity\r\n  }\r\n\r\n  isNonPolymer () {\r\n    return this.entityType === NonPolymerEntity\r\n  }\r\n\r\n  isMacrolide () {\r\n    return this.entityType === MacrolideEntity\r\n  }\r\n\r\n  isWater () {\r\n    return this.entityType === WaterEntity\r\n  }\r\n\r\n  eachChain (callback: (cp: ChainProxy) => any) {\r\n    const cp = this.structure.getChainProxy()\r\n\r\n    this.chainIndexList.forEach(function (index) {\r\n      cp.index = index\r\n      callback(cp)\r\n    })\r\n  }\r\n}","/**\r\n * @file Unitcell\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Color, Vector3, Matrix4 } from 'three'\r\n\r\nimport { defaults } from '../utils'\r\nimport { degToRad } from '../math/math-utils'\r\nimport {\r\n  uniformArray, uniformArray3, centerArray3\r\n} from '../math/array-utils'\r\nimport { UnitcellPicker } from '../utils/picker'\r\nimport Structure from '../structure/structure'\r\n\r\nexport interface UnitcellParams {\r\n  a: number\r\n  b: number\r\n  c: number\r\n  alpha: number\r\n  beta: number\r\n  gamma: number\r\n  spacegroup: string\r\n  cartToFrac?: Matrix4\r\n}\r\n\r\nconst DefaultBoxParams = {\r\n  a: 1,\r\n  b: 1,\r\n  c: 1,\r\n  alpha: 90,\r\n  beta: 90,\r\n  gamma: 90,\r\n  spacegroup: 'P 1'\r\n}\r\n\r\nexport interface UnitcellDataParams {\r\n  colorValue?: string|number,\r\n  radius?: number\r\n}\r\n\r\n/**\r\n * Unitcell class\r\n */\r\nclass Unitcell {\r\n  a: number\r\n  b: number\r\n  c: number\r\n  alpha: number\r\n  beta: number\r\n  gamma: number\r\n\r\n  spacegroup: string\r\n\r\n  cartToFrac = new Matrix4()\r\n  fracToCart = new Matrix4()\r\n\r\n  volume: number\r\n\r\n  /**\r\n   * @param  {Object} params - unitcell parameters\r\n   * @param  {Number} params.a - length a\r\n   * @param  {Number} params.b - length b\r\n   * @param  {Number} params.c - length c\r\n   * @param  {Number} params.alpha - angle alpha\r\n   * @param  {Number} params.beta - angle beta\r\n   * @param  {Number} params.gamma - angle gamma\r\n   * @param  {String} params.spacegroup - spacegroup\r\n   * @param  {Matrix4} [params.cartToFrac] - transformation matrix from\r\n   *                                         cartesian to fractional coordinates\r\n   * @param  {Matrix4} [params.scale] - alias for `params.cartToFrac`\r\n   */\r\n  constructor (params: UnitcellParams = DefaultBoxParams) {\r\n    this.a = params.a\r\n    this.b = params.b\r\n    this.c = params.c\r\n    this.alpha = params.alpha\r\n    this.beta = params.beta\r\n    this.gamma = params.gamma\r\n    this.spacegroup = params.spacegroup\r\n\r\n    const alphaRad = degToRad(this.alpha)\r\n    const betaRad = degToRad(this.beta)\r\n    const gammaRad = degToRad(this.gamma)\r\n    const cosAlpha = Math.cos(alphaRad)\r\n    const cosBeta = Math.cos(betaRad)\r\n    const cosGamma = Math.cos(gammaRad)\r\n    const sinBeta = Math.sin(betaRad)\r\n    const sinGamma = Math.sin(gammaRad)\r\n\r\n    this.volume = (\r\n      this.a * this.b * this.c *\r\n      Math.sqrt(\r\n        1 - cosAlpha * cosAlpha - cosBeta * cosBeta - cosGamma * cosGamma +\r\n        2.0 * cosAlpha * cosBeta * cosGamma\r\n      )\r\n    )\r\n\r\n    if (params.cartToFrac === undefined) {\r\n      // https://github.com/biojava/biojava/blob/master/biojava-structure/src/main/java/org/biojava/nbio/structure/xtal/CrystalCell.java\r\n\r\n      const cStar = (this.a * this.b * sinGamma) / this.volume\r\n      const cosAlphaStar = (\r\n        (cosBeta * cosGamma - cosAlpha) / (sinBeta * sinGamma)\r\n      )\r\n\r\n      this.fracToCart.set(\r\n        this.a, 0, 0, 0,\r\n        this.b * cosGamma, this.b * sinGamma, 0, 0,\r\n        this.c * cosBeta, -this.c * sinBeta * cosAlphaStar, 1.0 / cStar, 0,\r\n        0, 0, 0, 1\r\n      ).transpose()\r\n      this.cartToFrac.getInverse(this.fracToCart)\r\n    } else {\r\n      this.cartToFrac.copy(params.cartToFrac)\r\n      this.fracToCart.getInverse(this.cartToFrac)\r\n    }\r\n  }\r\n\r\n  getPosition (structure: Structure): Float32Array {\r\n    const vertexPosition = new Float32Array(3 * 8)\r\n\r\n    if (structure.unitcell) {\r\n      const uc = structure.unitcell\r\n      const centerFrac = structure.center.clone().applyMatrix4(uc.cartToFrac).floor()\r\n      const v = new Vector3()\r\n\r\n      let cornerOffset = 0\r\n      const addCorner = function (x: number, y: number, z: number) {\r\n        v.set(x, y, z)\r\n          .add(centerFrac)\r\n          .applyMatrix4(uc.fracToCart)\r\n          .toArray(vertexPosition as any, cornerOffset)\r\n        cornerOffset += 3\r\n      }\r\n      addCorner(0, 0, 0)\r\n      addCorner(1, 0, 0)\r\n      addCorner(0, 1, 0)\r\n      addCorner(0, 0, 1)\r\n      addCorner(1, 1, 0)\r\n      addCorner(1, 0, 1)\r\n      addCorner(0, 1, 1)\r\n      addCorner(1, 1, 1)\r\n    }\r\n\r\n    return vertexPosition\r\n  }\r\n\r\n  getCenter (structure: Structure) {\r\n    return centerArray3(this.getPosition(structure))\r\n  }\r\n\r\n  getData (structure: Structure, params: UnitcellDataParams = {}) {\r\n    const colorValue = defaults(params.colorValue, 'orange')\r\n    const radius = defaults(params.radius, Math.cbrt(this.volume) / 200)\r\n\r\n    const c = new Color(colorValue)\r\n    const v = new Vector3()\r\n\r\n    const vertexPosition = this.getPosition(structure)\r\n    const vertexColor = uniformArray3(8, c.r, c.g, c.b)\r\n    const vertexRadius = uniformArray(8, radius)\r\n\r\n    const edgePosition1 = new Float32Array(3 * 12)\r\n    const edgePosition2 = new Float32Array(3 * 12)\r\n    const edgeColor = uniformArray3(12, c.r, c.g, c.b)\r\n    const edgeRadius = uniformArray(12, radius)\r\n\r\n    let edgeOffset = 0\r\n    function addEdge (a: number, b: number) {\r\n      v.fromArray(vertexPosition as any, a * 3)\r\n        .toArray(edgePosition1 as any, edgeOffset)\r\n      v.fromArray(vertexPosition as any, b * 3)\r\n        .toArray(edgePosition2 as any, edgeOffset)\r\n      edgeOffset += 3\r\n    }\r\n    addEdge(0, 1)\r\n    addEdge(0, 2)\r\n    addEdge(0, 3)\r\n    addEdge(1, 4)\r\n    addEdge(1, 5)\r\n    addEdge(2, 6)\r\n    addEdge(3, 5)\r\n    addEdge(4, 7)\r\n    addEdge(5, 7)\r\n    addEdge(2, 4)\r\n    addEdge(7, 6)\r\n    addEdge(3, 6)\r\n\r\n    const picker = new UnitcellPicker(this, structure)\r\n\r\n    return {\r\n      vertex: {\r\n        position: vertexPosition,\r\n        color: vertexColor,\r\n        radius: vertexRadius,\r\n        picking: picker\r\n      },\r\n      edge: {\r\n        position1: edgePosition1,\r\n        position2: edgePosition2,\r\n        color: edgeColor,\r\n        color2: edgeColor,\r\n        radius: edgeRadius,\r\n        picking: picker\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Unitcell\r\n","/**\r\n * @file Pdb Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Matrix4 } from 'three'\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals'\r\nimport { defaults } from '../utils'\r\nimport StructureParser from './structure-parser'\r\nimport Entity, { EntityTypeString } from '../structure/entity'\r\nimport Unitcell, { UnitcellParams } from '../symmetry/unitcell'\r\nimport Assembly, { AssemblyPart } from '../symmetry/assembly'\r\nimport { PDBQTSpecialElements, WaterNames } from '../structure/structure-constants'\r\nimport {\r\n  assignSecondaryStructure, InferBondsOptions, buildUnitcellAssembly,\r\n  calculateBonds, calculateChainnames, calculateSecondaryStructure\r\n} from '../structure/structure-utils'\r\nimport Streamer from '../streamer/streamer';\r\nimport { ParserParameters } from './parser';\r\nimport { NumberArray } from '../types';\r\nimport { Structure } from '../ngl';\r\n\r\n// PDB helix record encoding\r\nconst HelixTypes: {[k: number]: string} = {\r\n  1: 'h', // Right-handed alpha (default)\r\n  2: 'h', // Right-handed omega\r\n  3: 'i', // Right-handed pi\r\n  4: 'h', // Right-handed gamma\r\n  5: 'g', // Right-handed 310\r\n  6: 'h', // Left-handed alpha\r\n  7: 'h', // Left-handed omega\r\n  8: 'h', // Left-handed gamma\r\n  9: 'h', // 27 ribbon/helix\r\n  10: 'h', // Polyproline\r\n  0: 'h' //Used to be ''\r\n}\r\n\r\nconst dAminoAcids = [\r\n  'DAL', // D-ALANINE\r\n  'DAR', // D-ARGININE\r\n  'DSG', // D-ASPARAGINE\r\n  'DAS', // D-ASPARTIC ACID\r\n  'DCY', // D-CYSTEINE\r\n  'DGL', // D-GLUTAMIC ACID\r\n  'DGN', // D-GLUTAMINE\r\n  'DHI', // D-HISTIDINE\r\n  'DIL', // D-ISOLEUCINE\r\n  'DLE', // D-LEUCINE\r\n  'DLY', // D-LYSINE\r\n  'MED', // D-METHIONINE\r\n  'DPN', // D-PHENYLALANINE\r\n  'DPR', // D-PROLINE\r\n  'DSN', // D-SERINE\r\n  'DTH', // D-THREONINE\r\n  'DTR', // D-TRYPTOPHAN\r\n  'DTY', // D-TYROSINE\r\n  'DVA', // D-VALINE\r\n\r\n  'DNE' // D-NORLEUCINE\r\n\r\n  // ???  // D-SELENOCYSTEINE\r\n]\r\n\r\nconst entityKeyList = [\r\n  'MOL_ID', 'MOLECULE', 'CHAIN', 'FRAGMENT', 'SYNONYM',\r\n  'EC', 'ENGINEERED', 'MUTATION', 'OTHER_DETAILS'\r\n]\r\n\r\nconst reWhitespace = /\\s+/\r\n\r\nfunction getModresId (resno: number, chainname?: string, inscode?: string) {\r\n  let id = `${resno}`\r\n  if (chainname) id += `:${chainname}`\r\n  if (inscode) id += `^${inscode}`\r\n  return id\r\n}\r\n\r\nexport interface PdbParserParameters extends ParserParameters {\r\n  hex: boolean\r\n  inferBonds: InferBondsOptions\r\n}\r\n\r\nclass PdbParser extends StructureParser {\r\n\r\n  hex: boolean\r\n  inferBonds: InferBondsOptions\r\n\r\n  /**\r\n   * Create a pdb parser\r\n   * @param  {Streamer} streamer - streamer object\r\n   * @param  {Object} params - params object\r\n   * @param  {Boolean} params.hex - hexadecimal parsing of\r\n   *                                atom numbers >99.999 and\r\n   *                                residue numbers >9.999\r\n   * @param  {InferBondsOptions} params.inferBonds: 'all': use explicit bonds and detect by distance\r\n   *                                               'auto': If a hetgroup residue has explicit bonds, don't auto-detect\r\n   *                                               'none': Don't add any bonds automatically\r\n   * @return {undefined}\r\n   */\r\n  constructor (streamer: Streamer, params?: Partial<PdbParserParameters>) {\r\n    const p = params || {}\r\n\r\n    super(streamer, p)\r\n\r\n    this.hex = defaults(p.hex, false)\r\n    this.inferBonds = defaults(p.inferBonds, 'all')\r\n  }\r\n\r\n  get type () { return 'pdb' }\r\n\r\n  _parse () {\r\n    // http://www.wwpdb.org/documentation/file-format.php\r\n\r\n    if (Debug) Log.time('PdbParser._parse ' + this.name)\r\n\r\n    let isLegacy = false\r\n    const headerLine = this.streamer.peekLines(1)[ 0 ]\r\n    const headerId = headerLine.substr(62, 4)\r\n    const legacyId = headerLine.substr(72, 4)\r\n    if (headerId === legacyId && legacyId.trim()) {\r\n      isLegacy = true\r\n    }\r\n\r\n    const isPqr = this.type === 'pqr'\r\n    const isPdbqt = this.type === 'pdbqt'\r\n\r\n    const s: Structure = this.structure\r\n    const sb = this.structureBuilder\r\n\r\n    const hex = this.hex\r\n    let serialRadix = 10\r\n    let resnoRadix = 10\r\n\r\n    const firstModelOnly = this.firstModelOnly\r\n    const asTrajectory = this.asTrajectory\r\n    const cAlphaOnly = this.cAlphaOnly\r\n\r\n    const frames = s.frames\r\n    const boxes = s.boxes\r\n    let doFrames = false\r\n    let currentFrame: NumberArray, currentCoord: number\r\n\r\n    const biomolDict = s.biomolDict\r\n    let currentBiomol: Assembly\r\n    let currentPart: AssemblyPart\r\n    let currentMatrix: Matrix4\r\n\r\n    let line, recordName\r\n    let serial, chainname: string, resno: number, resname: string, occupancy: number\r\n    let inscode: string, atomname, hetero: boolean, bfactor: number, altloc\r\n    let formalCharge: number\r\n\r\n    let startChain, startResi, startIcode\r\n    let endChain, endResi, endIcode\r\n\r\n    let serialDict: {[k: number]: number} = {}\r\n    const unitcellDict: Partial<{\r\n      origx: Matrix4\r\n      scale: Matrix4\r\n      a: number\r\n      b: number\r\n      c: number\r\n      alpha: number\r\n      beta: number\r\n      gamma: number\r\n      spacegroup: string\r\n    }> = {}\r\n    const bondDict: {[k: string]: boolean} = {}\r\n\r\n    const entityDataList: {chainList: string[], name: string}[] = []\r\n    let currentEntityData: {chainList: string[], name: string}\r\n    let currentEntityKey: 'MOL_ID'|'MOLECULE'|'CHAIN'|'FRAGMENT'|'SYNONYM'|'EC'|'ENGINEERED'|'MUTATION'|'OTHER_DETAILS'\r\n    // MOL_ID                 Numbers each component; also used in  SOURCE to associate\r\n    //                        the information.\r\n    // MOLECULE               Name of the macromolecule.\r\n    // CHAIN                  Comma-separated list of chain  identifier(s).\r\n    // FRAGMENT               Specifies a domain or region of the  molecule.\r\n    // SYNONYM                Comma-separated list of synonyms for  the MOLECULE.\r\n    // EC                     The Enzyme Commission number associated  with the molecule.\r\n    //                        If there is more than one EC number,  they are presented\r\n    //                        as a comma-separated list.\r\n    // ENGINEERED             Indicates that the molecule was  produced using\r\n    //                        recombinant technology or by purely  chemical synthesis.\r\n    // MUTATION               Indicates if there is a mutation.\r\n    // OTHER_DETAILS          Additional comments.\r\n\r\n    const hetnameDict: {[k: string]: string} = {}\r\n    const modresDict: {[k: string]: any} = {}\r\n\r\n    const chainDict: {[k: string]: number} = {}\r\n    let chainIdx: number, chainid: string, newChain: boolean\r\n    let currentChainname: string, currentResno: number, currentResname: string, currentInscode: string\r\n\r\n    const seqresDict: {[k: string]: string[]} = {}\r\n    let currentSeqresChainname: string\r\n\r\n    const secStruct = {\r\n      helices: [] as any[],\r\n      sheets: [] as any[]\r\n    }\r\n    const helices = secStruct.helices\r\n    const sheets = secStruct.sheets\r\n\r\n    const atomMap = s.atomMap\r\n    const atomStore = s.atomStore\r\n    atomStore.resize(Math.round(this.streamer.data.length / 80))\r\n    if (isPqr || isPdbqt) atomStore.addField('partialCharge', 1, 'float32')\r\n    if (isPqr) atomStore.addField('radius', 1, 'float32')\r\n\r\n    const ap1 = s.getAtomProxy()\r\n    const ap2 = s.getAtomProxy()\r\n\r\n    let idx = 0\r\n    let modelIdx = 0\r\n    let pendingStart = true\r\n\r\n    function _parseChunkOfLines (_i: number, _n: number, lines: string[]) {\r\n      for (let i = _i; i < _n; ++i) {\r\n        line = lines[ i ]\r\n        recordName = line.substr(0, 6)\r\n\r\n        if (recordName === 'ATOM  ' || recordName === 'HETATM') {\r\n          // http://www.wwpdb.org/documentation/file-format-content/format33/sect9.html#ATOM\r\n          // PQR: Field_name Atom_number Atom_name Residue_name Chain_ID Residue_number X Y Z Charge Radius\r\n\r\n          if (pendingStart) {\r\n            if (asTrajectory) {\r\n              if (doFrames) {\r\n                currentFrame = new Float32Array(atomStore.count * 3)\r\n                frames.push(currentFrame)\r\n              } else {\r\n                currentFrame = []\r\n              }\r\n              currentCoord = 0\r\n            } else {\r\n              if (!firstModelOnly) serialDict = {}\r\n            }\r\n\r\n            chainIdx = 1\r\n            chainid = chainIdx.toString()\r\n            newChain = true\r\n\r\n            pendingStart = false\r\n          }\r\n\r\n          if (firstModelOnly && modelIdx > 0) continue\r\n\r\n          let x, y, z, ls: string[], dd = 0\r\n\r\n          if (isPqr) {\r\n            ls = line.split(reWhitespace)\r\n            dd = ls.length === 10 ? 1 : 0\r\n\r\n            atomname = ls[ 2 ]\r\n            if (cAlphaOnly && atomname !== 'CA') continue\r\n\r\n            x = parseFloat(ls[ 6 - dd ])\r\n            y = parseFloat(ls[ 7 - dd ])\r\n            z = parseFloat(ls[ 8 - dd ])\r\n          } else {\r\n            atomname = line.substr(12, 4).trim()\r\n            if (cAlphaOnly && atomname !== 'CA') continue\r\n\r\n            x = parseFloat(line.substr(30, 8))\r\n            y = parseFloat(line.substr(38, 8))\r\n            z = parseFloat(line.substr(46, 8))\r\n          }\r\n\r\n          if (asTrajectory) {\r\n            const j = currentCoord * 3\r\n\r\n            currentFrame[ j + 0 ] = x\r\n            currentFrame[ j + 1 ] = y\r\n            currentFrame[ j + 2 ] = z\r\n\r\n            currentCoord += 1\r\n\r\n            if (doFrames) continue\r\n          }\r\n\r\n          let element\r\n\r\n          if (isPqr) {\r\n            serial = parseInt(ls![ 1 ])\r\n            element = ''\r\n            hetero = (line[ 0 ] === 'H')\r\n            chainname = dd ? '' : ls![ 4 ]\r\n            resno = parseInt(ls![ 5 - dd! ])\r\n            inscode = ''\r\n            resname = ls![ 3 ]\r\n            altloc = ''\r\n            occupancy = 1.0\r\n          } else {\r\n            serial = parseInt(line.substr(6, 5), serialRadix)\r\n            if (hex && serial === 99999) {\r\n              serialRadix = 16\r\n            }\r\n            hetero = (line[ 0 ] === 'H')\r\n            chainname = line[ 21 ].trim()\r\n            resno = parseInt(line.substr(22, 4), resnoRadix)\r\n            if (hex && resno === 9999) {\r\n              resnoRadix = 16\r\n            }\r\n            inscode = line[ 26 ].trim()\r\n            resname = line.substr(17, 4).trim() || 'MOL'\r\n            bfactor = parseFloat(line.substr(60, 6))\r\n            altloc = line[ 16 ].trim()\r\n            occupancy = parseFloat(line.substr(54, 6))\r\n\r\n            if (!isLegacy) {\r\n              if (isPdbqt) {\r\n                element = line.substr(76, 3).trim()\r\n                // @ts-expect-error TS limitation on narrowing indexes types with `in`\r\n                if (element in PDBQTSpecialElements) element = PDBQTSpecialElements[element]\r\n              } else {\r\n                element = line.substr(76, 2).trim()\r\n                if (!chainname) {\r\n                  chainname = line.substr(72, 4).trim() // segid\r\n                }\r\n              }\r\n              // Where specified, formalCharge is of form \"2-\" or \"1+\"\r\n              formalCharge = parseInt((line.substr(79,1) + line.substr(78, 1)).trim())\r\n            }\r\n          }\r\n\r\n          atomStore.growIfFull()\r\n          atomStore.atomTypeId[ idx ] = atomMap.add(atomname, element)\r\n\r\n          atomStore.x[ idx ] = x\r\n          atomStore.y[ idx ] = y\r\n          atomStore.z[ idx ] = z\r\n          atomStore.serial[ idx ] = serial\r\n          atomStore.altloc[ idx ] = altloc.charCodeAt(0)\r\n          atomStore.occupancy[ idx ] = isNaN(occupancy) ? 0 : occupancy\r\n\r\n          if (isPqr) {\r\n            atomStore.partialCharge![ idx ] = parseFloat(ls![ 9 - dd! ])\r\n            atomStore.radius[ idx ] = parseFloat(ls![ 10 - dd! ])\r\n          } else {\r\n            atomStore.bfactor[ idx ] = isNaN(bfactor) ? 0 : bfactor\r\n            if (isPdbqt) {\r\n              atomStore.partialCharge![ idx ] = parseFloat(line.substr(70, 6))\r\n            }\r\n            // isFinite check will reject undefined (in legacy case) and NaN values\r\n            if (isFinite(formalCharge)) {\r\n              if (!atomStore.formalCharge) {\r\n                atomStore.addField('formalCharge', 1, 'int8')\r\n              }\r\n              atomStore.formalCharge![ idx ] = formalCharge\r\n            }\r\n          }\r\n\r\n          const modresId = getModresId(resno, chainname, inscode)\r\n\r\n          // TODO instead of looking at MODRES look at SEQRES and\r\n          //      missing residues in REMARK 465\r\n          if (hetero && !modresDict[modresId] && !dAminoAcids.includes(resname)) {\r\n            if (currentChainname !== chainname || currentResname !== resname ||\r\n                (!WaterNames.includes(resname) &&\r\n                  (currentResno !== resno || currentInscode !== inscode))\r\n            ) {\r\n              chainIdx += 1\r\n              chainid = chainIdx.toString()\r\n\r\n              currentResno = resno\r\n              currentResname = resname\r\n              currentInscode = inscode\r\n            }\r\n          } else if (!newChain && currentChainname !== chainname) {\r\n            chainIdx += 1\r\n            chainid = chainIdx.toString()\r\n          }\r\n\r\n          sb.addAtom(modelIdx, chainname, chainid, resname, resno, hetero, undefined, inscode)\r\n\r\n          serialDict[ serial ] = idx\r\n          idx += 1\r\n          newChain = false\r\n          currentChainname = chainname\r\n        } else if (recordName === 'CONECT') {\r\n          const fromIdx = serialDict[ parseInt(line.substr(6, 5)) ]\r\n          const pos = [ 11, 16, 21, 26 ]\r\n          const bondIndex: {[k: number]: number} = {}\r\n\r\n          if (fromIdx === undefined) {\r\n            // Log.log( \"missing CONNECT serial\" );\r\n            continue\r\n          }\r\n\r\n          for (let j = 0; j < 4; ++j) {\r\n            let toIdx = parseInt(line.substr(pos[ j ], 5))\r\n            if (Number.isNaN(toIdx)) continue\r\n            toIdx = serialDict[ toIdx ]\r\n            if (toIdx === undefined) {\r\n              // Log.log( \"missing CONNECT serial\" );\r\n              continue\r\n            }/* else if( toIdx < fromIdx ){\r\n                // likely a duplicate in standard PDB format\r\n                // but not necessarily, so better remove duplicates\r\n                // in a pass after parsing (and auto bonding)\r\n                continue;\r\n            } */\r\n\r\n            if (fromIdx < toIdx) {\r\n              ap1.index = fromIdx\r\n              ap2.index = toIdx\r\n            } else {\r\n              ap1.index = toIdx\r\n              ap2.index = fromIdx\r\n            }\r\n\r\n            // interpret records where a 'toIdx' atom is given multiple times\r\n            // as double/triple bonds, e.g. CONECT 1529 1528 1528 is a double bond\r\n            if (bondIndex[ toIdx ] !== undefined) {\r\n              s.bondStore.bondOrder[ bondIndex[ toIdx ] ] += 1\r\n            } else {\r\n              const hash = ap1.index + '|' + ap2.index\r\n              if (bondDict[ hash ] === undefined) {\r\n                bondDict[ hash ] = true\r\n                bondIndex[ toIdx ] = s.bondStore.count\r\n                s.bondStore.addBond(ap1, ap2, 1) // start/assume with single bond\r\n              }\r\n            }\r\n          }\r\n        } else if (recordName === 'HELIX ') {\r\n          startChain = line[ 19 ].trim()\r\n          startResi = parseInt(line.substr(21, 4))\r\n          startIcode = line[ 25 ].trim()\r\n          endChain = line[ 31 ].trim()\r\n          endResi = parseInt(line.substr(33, 4))\r\n          endIcode = line[ 37 ].trim()\r\n          let helixType = parseInt(line.substr(39, 1))\r\n          helixType = (HelixTypes[ helixType ] || HelixTypes[0]).charCodeAt(0)\r\n          helices.push([\r\n            startChain, startResi, startIcode,\r\n            endChain, endResi, endIcode,\r\n            helixType\r\n          ])\r\n        } else if (recordName === 'SHEET ') {\r\n          startChain = line[ 21 ].trim()\r\n          startResi = parseInt(line.substr(22, 4))\r\n          startIcode = line[ 26 ].trim()\r\n          endChain = line[ 32 ].trim()\r\n          endResi = parseInt(line.substr(33, 4))\r\n          endIcode = line[ 37 ].trim()\r\n          sheets.push([\r\n            startChain, startResi, startIcode,\r\n            endChain, endResi, endIcode\r\n          ])\r\n        } else if (recordName === 'HETNAM') {\r\n          hetnameDict[ line.substr(11, 3) ] = line.substr(15).trim()\r\n        } else if (recordName === 'SEQRES') {\r\n          const seqresChainname = line[11].trim()\r\n          if (seqresChainname !== currentSeqresChainname) {\r\n            seqresDict[ seqresChainname ] = []\r\n            currentSeqresChainname = seqresChainname\r\n          }\r\n          seqresDict[ seqresChainname ].push(\r\n            ...line.substr(19).trim().split(reWhitespace)\r\n          )\r\n        } else if (recordName === 'MODRES') {\r\n          // MODRES 2SRC PTR A  527  TYR  O-PHOSPHOTYROSINE\r\n          const resname = line.substr(12, 3).trim()\r\n          const chainname = line[16].trim()\r\n          const inscode = line[22].trim()\r\n          const resno = parseInt(line.substr(18, 4).trim())\r\n          const id = getModresId(resno, chainname, inscode)\r\n          modresDict[ id ] = { resname, chainname, inscode, resno }\r\n        } else if (recordName === 'COMPND') {\r\n          const comp = line.substr(10, 70).trim()\r\n          const keyEnd = comp.indexOf(':')\r\n          const key = comp.substring(0, keyEnd)\r\n          let value\r\n\r\n          if (entityKeyList.includes(key)) {\r\n            currentEntityKey = key as 'MOL_ID'|'MOLECULE'|'CHAIN'|'FRAGMENT'|'SYNONYM'|'EC'|'ENGINEERED'|'MUTATION'|'OTHER_DETAILS'\r\n            value = comp.substring(keyEnd + 2)\r\n          } else {\r\n            value = comp\r\n          }\r\n          value = value.replace(/;$/, '')\r\n\r\n          if (currentEntityKey === 'MOL_ID') {\r\n            currentEntityData = {\r\n              chainList: [],\r\n              name: ''\r\n            }\r\n            entityDataList.push(currentEntityData)\r\n          } else if (currentEntityKey === 'MOLECULE') {\r\n            if (currentEntityData.name) currentEntityData.name += ' '\r\n            currentEntityData.name += value\r\n          } else if (currentEntityKey === 'CHAIN') {\r\n            Array.prototype.push.apply(\r\n              currentEntityData.chainList,\r\n              value.split(/\\s*,\\s*/)\r\n            )\r\n          }\r\n        } else if (line.startsWith('TER')) {\r\n          const cp = s.getChainProxy(s.chainStore.count - 1)\r\n          chainDict[ cp.chainname ] = cp.index\r\n          chainIdx += 1\r\n          chainid = chainIdx.toString()\r\n          newChain = true\r\n        } else if (recordName === 'REMARK' && line.substr(7, 3) === '350') {\r\n          if (line.substr(11, 12) === 'BIOMOLECULE:') {\r\n            let name = line.substr(23).trim()\r\n            if (/^(0|[1-9][0-9]*)$/.test(name)) name = 'BU' + name\r\n\r\n            currentBiomol = new Assembly(name)\r\n            biomolDict[ name ] = currentBiomol\r\n          } else if (line.substr(13, 5) === 'BIOMT') {\r\n            const biomt = line.split(/\\s+/)\r\n            const row = parseInt(line[ 18 ]) - 1\r\n\r\n            if (row === 0) {\r\n              currentMatrix = new Matrix4()\r\n              currentPart.matrixList.push(currentMatrix)\r\n            }\r\n\r\n            const biomtElms = currentMatrix.elements\r\n\r\n            biomtElms[ 4 * 0 + row ] = parseFloat(biomt[ 4 ])\r\n            biomtElms[ 4 * 1 + row ] = parseFloat(biomt[ 5 ])\r\n            biomtElms[ 4 * 2 + row ] = parseFloat(biomt[ 6 ])\r\n            biomtElms[ 4 * 3 + row ] = parseFloat(biomt[ 7 ])\r\n          } else if (\r\n            line.substr(11, 30) === 'APPLY THE FOLLOWING TO CHAINS:' ||\r\n            line.substr(11, 30) === '                   AND CHAINS:'\r\n          ) {\r\n            if (line.substr(11, 5) === 'APPLY') {\r\n              currentPart = currentBiomol.addPart()\r\n            }\r\n\r\n            const chainList = line.substr(41, 30).split(',')\r\n            for (let j = 0, jl = chainList.length; j < jl; ++j) {\r\n              const c = chainList[ j ].trim()\r\n              if (c) currentPart.chainList.push(c)\r\n            }\r\n          }\r\n        } else if (recordName === 'HEADER') {\r\n          s.id = line.substr(62, 4)\r\n        } else if (recordName === 'TITLE ') {\r\n          s.title += (s.title ? ' ' : '') + line.substr(10, 70).trim()\r\n        } else if (recordName === 'MODEL ') {\r\n          pendingStart = true\r\n        } else if (recordName === 'ENDMDL' || line.trim() === 'END') {\r\n          if (pendingStart) continue\r\n\r\n          if (asTrajectory && !doFrames) {\r\n            frames.push(new Float32Array(currentFrame))\r\n            doFrames = true\r\n          }\r\n\r\n          modelIdx += 1\r\n          pendingStart = true\r\n        } else if (line.substr(0, 5) === 'MTRIX') {\r\n          // ignore 'given' operators\r\n          if (line[ 59 ] === '1') continue\r\n\r\n          if (!currentBiomol || currentBiomol.name !== 'NCS') {\r\n            const ncsName = 'NCS'\r\n            currentBiomol = new Assembly(ncsName)\r\n            biomolDict[ ncsName ] = currentBiomol\r\n            currentPart = currentBiomol.addPart()\r\n          }\r\n\r\n          const ncs = line.split(/\\s+/)\r\n          const ncsRow = parseInt(line[ 5 ]) - 1\r\n\r\n          if (ncsRow === 0) {\r\n            currentMatrix = new Matrix4()\r\n            currentPart.matrixList.push(currentMatrix)\r\n          }\r\n\r\n          const ncsElms = currentMatrix.elements\r\n\r\n          ncsElms[ 4 * 0 + ncsRow ] = parseFloat(ncs[ 2 ])\r\n          ncsElms[ 4 * 1 + ncsRow ] = parseFloat(ncs[ 3 ])\r\n          ncsElms[ 4 * 2 + ncsRow ] = parseFloat(ncs[ 4 ])\r\n          ncsElms[ 4 * 3 + ncsRow ] = parseFloat(ncs[ 5 ])\r\n        } else if (line.substr(0, 5) === 'ORIGX') {\r\n          if (!unitcellDict.origx) {\r\n            unitcellDict.origx = new Matrix4()\r\n          }\r\n\r\n          const orgix = line.split(/\\s+/)\r\n          const origxRow = parseInt(line[ 5 ]) - 1\r\n          const origxElms = unitcellDict.origx.elements\r\n\r\n          origxElms[ 4 * 0 + origxRow ] = parseFloat(orgix[ 1 ])\r\n          origxElms[ 4 * 1 + origxRow ] = parseFloat(orgix[ 2 ])\r\n          origxElms[ 4 * 2 + origxRow ] = parseFloat(orgix[ 3 ])\r\n          origxElms[ 4 * 3 + origxRow ] = parseFloat(orgix[ 4 ])\r\n        } else if (line.substr(0, 5) === 'SCALE') {\r\n          if (!unitcellDict.scale) {\r\n            unitcellDict.scale = new Matrix4()\r\n          }\r\n\r\n          const scale = line.split(/\\s+/)\r\n          const scaleRow = parseInt(line[ 5 ]) - 1\r\n          const scaleElms = unitcellDict.scale.elements\r\n\r\n          scaleElms[ 4 * 0 + scaleRow ] = parseFloat(scale[ 1 ])\r\n          scaleElms[ 4 * 1 + scaleRow ] = parseFloat(scale[ 2 ])\r\n          scaleElms[ 4 * 2 + scaleRow ] = parseFloat(scale[ 3 ])\r\n          scaleElms[ 4 * 3 + scaleRow ] = parseFloat(scale[ 4 ])\r\n        } else if (recordName === 'CRYST1') {\r\n          // CRYST1   55.989   55.989   55.989  90.00  90.00  90.00 P 1           1\r\n          //  7 - 15       Real(9.3)      a (Angstroms)\r\n          // 16 - 24       Real(9.3)      b (Angstroms)\r\n          // 25 - 33       Real(9.3)      c (Angstroms)\r\n          // 34 - 40       Real(7.2)      alpha         alpha (degrees).\r\n          // 41 - 47       Real(7.2)      beta          beta (degrees).\r\n          // 48 - 54       Real(7.2)      gamma         gamma (degrees).\r\n          // 56 - 66       LString        sGroup        Space group.\r\n          // 67 - 70       Integer        z             Z value.\r\n\r\n          const aLength = parseFloat(line.substr(6, 9))\r\n          const bLength = parseFloat(line.substr(15, 9))\r\n          const cLength = parseFloat(line.substr(24, 9))\r\n\r\n          const alpha = parseFloat(line.substr(33, 7))\r\n          const beta = parseFloat(line.substr(40, 7))\r\n          const gamma = parseFloat(line.substr(47, 7))\r\n\r\n          const sGroup = line.substr(55, 11).trim()\r\n          // const zValue = parseInt( line.substr( 66, 4 ) );\r\n\r\n          const box = new Float32Array(9)\r\n          box[ 0 ] = aLength\r\n          box[ 4 ] = bLength\r\n          box[ 8 ] = cLength\r\n          boxes.push(box)\r\n\r\n          if (modelIdx === 0) {\r\n            unitcellDict.a = aLength\r\n            unitcellDict.b = bLength\r\n            unitcellDict.c = cLength\r\n            unitcellDict.alpha = alpha\r\n            unitcellDict.beta = beta\r\n            unitcellDict.gamma = gamma\r\n            unitcellDict.spacegroup = sGroup\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.streamer.eachChunkOfLines(function (lines/*, chunkNo, chunkCount */) {\r\n      _parseChunkOfLines(0, lines.length, lines)\r\n    })\r\n\r\n\r\n    // finalize ensures resname will be defined for all rp.resname\r\n    // (required in entity handling below)\r\n    sb.finalize()\r\n\r\n    //\r\n\r\n    const en = entityDataList.length\r\n\r\n    if (en) {\r\n      s.eachChain(function (cp) {\r\n        cp.entityIndex = en\r\n      })\r\n\r\n      entityDataList.forEach(function (e, i) {\r\n        const chainIndexList = e.chainList.map(function (chainname) {\r\n          return chainDict[ chainname ]\r\n        })\r\n        s.entityList.push(new Entity(\r\n          s, i, e.name, 'polymer', chainIndexList\r\n        ))\r\n      })\r\n\r\n      let ei = entityDataList.length\r\n      const rp = s.getResidueProxy()\r\n      const residueDict: {[k: string]: number[]} = {}\r\n\r\n      s.eachChain(function (cp) {\r\n        if (cp.entityIndex === en) {\r\n          rp.index = cp.residueOffset\r\n          if (!residueDict[ rp.resname ]) {\r\n            residueDict[ rp.resname ] = []\r\n          }\r\n          residueDict[ rp.resname ].push(cp.index)\r\n        }\r\n      })\r\n\r\n      Object.keys(residueDict).forEach(function (resname) {\r\n        const chainList = residueDict[ resname ]\r\n        let type: EntityTypeString = 'non-polymer'\r\n        let name = hetnameDict[ resname ] || resname\r\n        if (WaterNames.includes(resname)) {\r\n          name = 'water'\r\n          type = 'water'\r\n        }\r\n        s.entityList.push(new Entity(\r\n          s, ei, name, type, chainList\r\n        ))\r\n        ei += 1\r\n      })\r\n    }\r\n\r\n    //\r\n\r\n    if (unitcellDict.a !== undefined) {\r\n      s.unitcell = new Unitcell(unitcellDict as UnitcellParams)\r\n    } else {\r\n      s.unitcell = undefined\r\n    }\r\n\r\n    if (helices.length || sheets.length) {\r\n      assignSecondaryStructure(s, secStruct)\r\n    }\r\n\r\n    s.finalizeAtoms()\r\n    if (!isLegacy) calculateChainnames(s)\r\n    calculateBonds(s, this.inferBonds)\r\n    s.finalizeBonds()\r\n\r\n    if (!helices.length && !sheets.length) {\r\n      calculateSecondaryStructure(s)\r\n    }\r\n    buildUnitcellAssembly(s)\r\n\r\n    if (Debug) Log.timeEnd('PdbParser._parse ' + this.name)\r\n  }\r\n}\r\n\r\nParserRegistry.add('pdb', PdbParser)\r\nParserRegistry.add('pdb1', PdbParser)\r\nParserRegistry.add('ent', PdbParser)\r\n\r\nexport default PdbParser\r\n\r\nexport {\r\n  HelixTypes\r\n}\r\n","/**\r\n * @file Cif Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3, Matrix4 } from 'three'\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals'\r\nimport StructureParser from './structure-parser'\r\nimport { HelixTypes } from './pdb-parser'\r\nimport Entity from '../structure/entity'\r\nimport Unitcell, { UnitcellParams } from '../symmetry/unitcell'\r\nimport Assembly from '../symmetry/assembly'\r\nimport Selection from '../selection/selection'\r\nimport {\r\n  assignResidueTypeBonds, assignSecondaryStructure, buildUnitcellAssembly,\r\n  calculateBonds, calculateSecondaryStructure\r\n} from '../structure/structure-utils'\r\nimport { Structure } from '../ngl';\r\nimport StructureBuilder from '../structure/structure-builder';\r\nimport { NumberArray } from '../types';\r\n\r\nconst reWhitespace = /\\s+/\r\nconst reQuotedWhitespace = /'((?:(?!'\\s).)*)'|\"((?:(?!\"\\s).)*)\"|(\\S+)/g\r\nconst reDoubleQuote = /\"/g\r\nconst reTrimQuotes = /^['\"]+|['\"]+$/g\r\nconst reAtomSymbol = /^\\D{1,2}/ // atom symbol in atom_site_label\r\n\r\ninterface Cif {[k: string]: any}\r\n\r\nfunction trimQuotes (str: string) {\r\n  if (str && str[0] === str[ str.length - 1 ] && (str[0] === \"'\" || str[0] === '\"')) {\r\n    return str.substring(1, str.length - 1)\r\n  } else {\r\n    return str\r\n  }\r\n}\r\n\r\nfunction ensureArray (dict: {[k: string]: any[]}, field: string) {\r\n  if (!Array.isArray(dict[ field ])) {\r\n    Object.keys(dict).forEach(function (key) {\r\n      dict[ key ] = [ dict[ key ] ]\r\n    })\r\n  }\r\n}\r\n\r\nfunction hasValue (d: string) {\r\n  return d !== '?'\r\n}\r\n\r\nfunction cifDefaults (value: string, defaultValue: string) {\r\n  return hasValue(value) ? value : defaultValue\r\n}\r\n\r\nfunction getBondOrder (valueOrder: string) {\r\n  switch (valueOrder.toLowerCase()) {\r\n    case '?': // assume single bond\r\n    case 'sing':\r\n      return 1\r\n    case 'doub':\r\n      return 2\r\n    case 'trip':\r\n      return 3\r\n    case 'quad':\r\n      return 4\r\n  }\r\n  return 0\r\n}\r\n\r\nfunction parseChemComp (cif: Cif, structure: Structure, structureBuilder: StructureBuilder) {\r\n  const atomStore = structure.atomStore\r\n  const atomMap = structure.atomMap\r\n\r\n  let i, n\r\n  const cc = cif.chem_comp\r\n  const cca = cif.chem_comp_atom\r\n  const ccb = cif.chem_comp_bond\r\n\r\n  if (cc) {\r\n    if (cc.name) {\r\n      structure.title = cc.name.trim().replace(reTrimQuotes, '')\r\n    }\r\n    if (cc.id) {\r\n      structure.id = cc.id.trim().replace(reTrimQuotes, '')\r\n    }\r\n  }\r\n\r\n  var atomnameDict: {[k: string]: number} = {}\r\n\r\n  if (cca) {\r\n    ensureArray(cca, 'comp_id')\r\n\r\n    var atomname, element, resname, resno\r\n    n = cca.comp_id.length\r\n\r\n    for (i = 0; i < n; ++i) {\r\n      atomStore.growIfFull()\r\n\r\n      atomname = cca.atom_id[ i ].replace(reDoubleQuote, '')\r\n      element = cca.type_symbol[ i ]\r\n\r\n      atomnameDict[ atomname ] = i\r\n      atomStore.atomTypeId[ i ] = atomMap.add(atomname, element)\r\n\r\n      atomStore.x[ i ] = cca.model_Cartn_x[ i ]\r\n      atomStore.y[ i ] = cca.model_Cartn_y[ i ]\r\n      atomStore.z[ i ] = cca.model_Cartn_z[ i ]\r\n      atomStore.serial[ i ] = i\r\n\r\n      resname = cca.pdbx_component_comp_id[ i ]\r\n      resno = cca.pdbx_residue_numbering ? cca.pdbx_residue_numbering[ i ] : 1\r\n\r\n      structureBuilder.addAtom(0, '', '', resname, resno, true)\r\n    }\r\n\r\n    for (i = 0; i < n; ++i) {\r\n      var j = i + n\r\n\r\n      atomStore.growIfFull()\r\n\r\n      atomname = cca.atom_id[ i ].replace(reDoubleQuote, '')\r\n      element = cca.type_symbol[ i ]\r\n\r\n      atomStore.atomTypeId[ j ] = atomMap.add(atomname, element)\r\n\r\n      atomStore.x[ j ] = cca.pdbx_model_Cartn_x_ideal[ i ]\r\n      atomStore.y[ j ] = cca.pdbx_model_Cartn_y_ideal[ i ]\r\n      atomStore.z[ j ] = cca.pdbx_model_Cartn_z_ideal[ i ]\r\n      atomStore.serial[ j ] = j\r\n\r\n      resname = cca.pdbx_component_comp_id[ i ]\r\n      resno = cca.pdbx_residue_numbering ? cca.pdbx_residue_numbering[ i ] : 1\r\n\r\n      structureBuilder.addAtom(1, '', '', resname, resno, true)\r\n    }\r\n  }\r\n\r\n  if (cca && ccb) {\r\n    ensureArray(ccb, 'comp_id')\r\n\r\n    var atomname1, atomname2, bondOrder\r\n    n = ccb.comp_id.length\r\n    var na = cca.comp_id.length\r\n\r\n    var ap1 = structure.getAtomProxy()\r\n    var ap2 = structure.getAtomProxy()\r\n\r\n    for (i = 0; i < n; ++i) {\r\n      atomname1 = ccb.atom_id_1[ i ].replace(reDoubleQuote, '')\r\n      atomname2 = ccb.atom_id_2[ i ].replace(reDoubleQuote, '')\r\n      bondOrder = getBondOrder(ccb.value_order[ i ])\r\n\r\n      ap1.index = atomnameDict[ atomname1 ]\r\n      ap2.index = atomnameDict[ atomname2 ]\r\n      structure.bondStore.growIfFull()\r\n      structure.bondStore.addBond(ap1, ap2, bondOrder)\r\n\r\n      ap1.index += na\r\n      ap2.index += na\r\n      structure.bondStore.growIfFull()\r\n      structure.bondStore.addBond(ap1, ap2, bondOrder)\r\n    }\r\n  }\r\n}\r\n\r\nfunction parseCore (cif: Cif, structure: Structure, structureBuilder: StructureBuilder) {\r\n  var atomStore = structure.atomStore\r\n  var atomMap = structure.atomMap\r\n\r\n  if (cif.data) {\r\n    structure.id = cif.data\r\n    structure.name = cif.data\r\n  }\r\n\r\n  structure.unitcell = new Unitcell({\r\n    a: parseFloat(cif.cell_length_a),\r\n    b: parseFloat(cif.cell_length_b),\r\n    c: parseFloat(cif.cell_length_c),\r\n    alpha: parseFloat(cif.cell_angle_alpha),\r\n    beta: parseFloat(cif.cell_angle_beta),\r\n    gamma: parseFloat(cif.cell_angle_gamma),\r\n    spacegroup: trimQuotes(cif['symmetry_space_group_name_H-M'])\r\n  })\r\n\r\n  const v = new Vector3()\r\n  const c = new Vector3()\r\n  const n = cif.atom_site_type_symbol.length\r\n\r\n  const typeSymbolMap: Record<string, string> = {}\r\n\r\n  for (let i = 0; i < n; ++i) {\r\n    atomStore.growIfFull()\r\n\r\n    const atomname = cif.atom_site_label[ i ]\r\n    const typeSymbol = cif.atom_site_type_symbol[ i ]\r\n\r\n    // typeSymbol can be like `Al2.5+`. Retain element symbol only.\r\n    let element = typeSymbolMap[typeSymbol]\r\n    if (!element) {\r\n      const match = typeSymbol.match(reAtomSymbol)\r\n      typeSymbolMap[typeSymbol] = element = match?.[0] ?? typeSymbol\r\n    }\r\n\r\n    atomStore.atomTypeId[ i ] = atomMap.add(atomname, element)\r\n\r\n    v.set(\r\n      cif.atom_site_fract_x[ i ],\r\n      cif.atom_site_fract_y[ i ],\r\n      cif.atom_site_fract_z[ i ]\r\n    )\r\n    v.applyMatrix4(structure.unitcell.fracToCart)\r\n    c.add(v)\r\n\r\n    atomStore.x[ i ] = v.x\r\n    atomStore.y[ i ] = v.y\r\n    atomStore.z[ i ] = v.z\r\n    if (cif.atom_site_occupancy) {\r\n      atomStore.occupancy[ i ] = parseFloat(cif.atom_site_occupancy[ i ])\r\n    }\r\n    atomStore.serial[ i ] = i\r\n\r\n    structureBuilder.addAtom(0, '', '', 'HET', 1, true)\r\n  }\r\n\r\n  c.divideScalar(n)\r\n  structure.center = c\r\n  buildUnitcellAssembly(structure)\r\n\r\n  const v2 = new Vector3()\r\n  const v3 = new Vector3()\r\n  const ml = structure.biomolDict.SUPERCELL.partList[ 0 ].matrixList\r\n\r\n  let k = n\r\n\r\n  function covalent (idx: number) {\r\n    return atomMap.get(atomStore.atomTypeId[ idx ]).covalent\r\n  }\r\n  const identityMatrix = new Matrix4()\r\n\r\n  for (let i = 0; i < n; ++i) {\r\n    const covalentI = covalent(i)\r\n\r\n    v.set(\r\n      atomStore.x[ i ],\r\n      atomStore.y[ i ],\r\n      atomStore.z[ i ]\r\n    )\r\n\r\n    ml.forEach(function (m) {\r\n      if (identityMatrix.equals(m)) return\r\n\r\n      v2.copy(v)\r\n      v2.applyMatrix4(m)\r\n\r\n      for (let j = 0; j < n; ++j) {\r\n        v3.set(\r\n          atomStore.x[ j ],\r\n          atomStore.y[ j ],\r\n          atomStore.z[ j ]\r\n        )\r\n\r\n        const distSquared = v2.distanceToSquared(v3)\r\n        const d = covalent(j) + covalentI\r\n        const d1 = d + 0.3\r\n        const d2 = d - 0.5\r\n\r\n        if (distSquared < (d1 * d1) && distSquared > (d2 * d2)) {\r\n          atomStore.growIfFull()\r\n\r\n          atomStore.atomTypeId[ k ] = atomStore.atomTypeId[ i ]\r\n          atomStore.x[ k ] = v2.x\r\n          atomStore.y[ k ] = v2.y\r\n          atomStore.z[ k ] = v2.z\r\n          atomStore.occupancy[ k ] = atomStore.occupancy[ i ]\r\n          atomStore.serial[ k ] = k\r\n          atomStore.altloc[ k ] = 'A'.charCodeAt(0)\r\n\r\n          structureBuilder.addAtom(0, '', '', 'HET', 1, true)\r\n\r\n          k += 1\r\n          return\r\n        }\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction processSecondaryStructure (cif: Cif, structure: Structure, asymIdDict: {[k: string]: string}) {\r\n  var helices: [string, number, string, string, number, string, number][] = []\r\n  var sheets: [string, number, string, string, number, string][] = []\r\n\r\n  var i, il, begIcode, endIcode\r\n\r\n  // get helices\r\n  var sc = cif.struct_conf\r\n\r\n  if (sc?.pdbx_PDB_helix_class) {\r\n    ensureArray(sc, 'id')\r\n\r\n    for (i = 0, il = sc.beg_auth_seq_id.length; i < il; ++i) {\r\n      var helixType = parseInt(sc.pdbx_PDB_helix_class[ i ])\r\n      if (!Number.isNaN(helixType)) {\r\n        begIcode = sc.pdbx_beg_PDB_ins_code[ i ]\r\n        endIcode = sc.pdbx_end_PDB_ins_code[ i ]\r\n        helices.push([\r\n          asymIdDict[ sc.beg_label_asym_id[ i ] ],\r\n          parseInt(sc.beg_auth_seq_id[ i ]),\r\n          cifDefaults(begIcode, ''),\r\n          asymIdDict[ sc.end_label_asym_id[ i ] ],\r\n          parseInt(sc.end_auth_seq_id[ i ]),\r\n          cifDefaults(endIcode, ''),\r\n          (HelixTypes[ helixType ] || HelixTypes[0]).charCodeAt(0)\r\n        ])\r\n      }\r\n    }\r\n  }\r\n\r\n  // get sheets\r\n  var ssr = cif.struct_sheet_range\r\n\r\n  if (ssr) {\r\n    ensureArray(ssr, 'id')\r\n\r\n    for (i = 0, il = ssr.beg_auth_seq_id.length; i < il; ++i) {\r\n      begIcode = ssr.pdbx_beg_PDB_ins_code[ i ]\r\n      endIcode = ssr.pdbx_end_PDB_ins_code[ i ]\r\n      sheets.push([\r\n        asymIdDict[ ssr.beg_label_asym_id[ i ] ],\r\n        parseInt(ssr.beg_auth_seq_id[ i ]),\r\n        cifDefaults(begIcode, ''),\r\n        asymIdDict[ ssr.end_label_asym_id[ i ] ],\r\n        parseInt(ssr.end_auth_seq_id[ i ]),\r\n        cifDefaults(endIcode, '')\r\n      ])\r\n    }\r\n  }\r\n\r\n  if (sc || ssr) {\r\n    return {\r\n      helices: helices,\r\n      sheets: sheets\r\n    }\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n\r\nfunction processSymmetry (cif: Cif, structure: Structure, asymIdDict: {[k: string]: string}) {\r\n  // biomol & ncs processing\r\n  var operDict: {[k: string]: Matrix4} = {}\r\n  var biomolDict = structure.biomolDict\r\n\r\n  if (cif.pdbx_struct_oper_list) {\r\n    var biomolOp = cif.pdbx_struct_oper_list\r\n    ensureArray(biomolOp, 'id')\r\n\r\n    biomolOp.id.forEach(function (id: number, i: number) {\r\n      var m = new Matrix4()\r\n      var elms = m.elements\r\n\r\n      elms[ 0 ] = parseFloat(biomolOp[ 'matrix[1][1]' ][ i ])\r\n      elms[ 1 ] = parseFloat(biomolOp[ 'matrix[1][2]' ][ i ])\r\n      elms[ 2 ] = parseFloat(biomolOp[ 'matrix[1][3]' ][ i ])\r\n\r\n      elms[ 4 ] = parseFloat(biomolOp[ 'matrix[2][1]' ][ i ])\r\n      elms[ 5 ] = parseFloat(biomolOp[ 'matrix[2][2]' ][ i ])\r\n      elms[ 6 ] = parseFloat(biomolOp[ 'matrix[2][3]' ][ i ])\r\n\r\n      elms[ 8 ] = parseFloat(biomolOp[ 'matrix[3][1]' ][ i ])\r\n      elms[ 9 ] = parseFloat(biomolOp[ 'matrix[3][2]' ][ i ])\r\n      elms[ 10 ] = parseFloat(biomolOp[ 'matrix[3][3]' ][ i ])\r\n\r\n      elms[ 3 ] = parseFloat(biomolOp[ 'vector[1]' ][ i ])\r\n      elms[ 7 ] = parseFloat(biomolOp[ 'vector[2]' ][ i ])\r\n      elms[ 11 ] = parseFloat(biomolOp[ 'vector[3]' ][ i ])\r\n\r\n      m.transpose()\r\n\r\n      operDict[ id ] = m\r\n    })\r\n  }\r\n\r\n  if (cif.pdbx_struct_assembly_gen) {\r\n    var gen = cif.pdbx_struct_assembly_gen\r\n    ensureArray(gen, 'assembly_id')\r\n\r\n    var getMatrixDict = function (expr: string) {\r\n      var matDict: {[k: string]: Matrix4} = {}\r\n\r\n      var l = expr.replace(/[()']/g, '').split(',')\r\n\r\n      l.forEach(function (e) {\r\n        if (e.includes('-')) {\r\n          var es = e.split('-')\r\n\r\n          var j = parseInt(es[ 0 ])\r\n          var m = parseInt(es[ 1 ])\r\n\r\n          for (; j <= m; ++j) {\r\n            matDict[ j ] = operDict[ j ]\r\n          }\r\n        } else {\r\n          matDict[ e ] = operDict[ e ]\r\n        }\r\n      })\r\n\r\n      return matDict\r\n    }\r\n\r\n    gen.assembly_id.forEach(function (id: string, i: number) {\r\n      var md:{[k: string]: Matrix4} = {}\r\n      var oe = gen.oper_expression[ i ].replace(/['\"]\\(|['\"]/g, '')\r\n\r\n      if (oe.includes(')(') || oe.indexOf('(') > 0) {\r\n        oe = oe.split('(')\r\n\r\n        var md1 = getMatrixDict(oe[ 0 ])\r\n        var md2 = getMatrixDict(oe[ 1 ])\r\n\r\n        Object.keys(md1).forEach(function (k1) {\r\n          Object.keys(md2).forEach(function (k2) {\r\n            var mat = new Matrix4()\r\n\r\n            mat.multiplyMatrices(md1[ k1 ], md2[ k2 ])\r\n            md[ k1 + 'x' + k2 ] = mat\r\n          })\r\n        })\r\n      } else {\r\n        md = getMatrixDict(oe)\r\n      }\r\n\r\n      var matrixList = []\r\n      for (var k in md) {\r\n        matrixList.push(md[ k ])\r\n      }\r\n\r\n      var name = id\r\n      if (/^(0|[1-9][0-9]*)$/.test(name)) name = 'BU' + name\r\n\r\n      var chainList = gen.asym_id_list[ i ].split(',')\r\n      for (var j = 0, jl = chainList.length; j < jl; ++j) {\r\n        chainList[ j ] = asymIdDict[ chainList[ j ] ]\r\n      }\r\n\r\n      if (biomolDict[ name ] === undefined) {\r\n        biomolDict[ name ] = new Assembly(name)\r\n      }\r\n      biomolDict[ name ].addPart(matrixList, chainList)\r\n    })\r\n  }\r\n\r\n  // non-crystallographic symmetry operations\r\n  if (cif.struct_ncs_oper) {\r\n    var ncsOp = cif.struct_ncs_oper\r\n    ensureArray(ncsOp, 'id')\r\n\r\n    var ncsName = 'NCS'\r\n    biomolDict[ ncsName ] = new Assembly(ncsName)\r\n    var ncsPart = biomolDict[ ncsName ].addPart()\r\n\r\n    ncsOp.id.forEach(function (id: string, i: number) {\r\n      // ignore 'given' operators\r\n      if (ncsOp.code[ i ] === 'given') return\r\n\r\n      var m = new Matrix4()\r\n      var elms = m.elements\r\n\r\n      elms[ 0 ] = parseFloat(ncsOp[ 'matrix[1][1]' ][ i ])\r\n      elms[ 1 ] = parseFloat(ncsOp[ 'matrix[1][2]' ][ i ])\r\n      elms[ 2 ] = parseFloat(ncsOp[ 'matrix[1][3]' ][ i ])\r\n\r\n      elms[ 4 ] = parseFloat(ncsOp[ 'matrix[2][1]' ][ i ])\r\n      elms[ 5 ] = parseFloat(ncsOp[ 'matrix[2][2]' ][ i ])\r\n      elms[ 6 ] = parseFloat(ncsOp[ 'matrix[2][3]' ][ i ])\r\n\r\n      elms[ 8 ] = parseFloat(ncsOp[ 'matrix[3][1]' ][ i ])\r\n      elms[ 9 ] = parseFloat(ncsOp[ 'matrix[3][2]' ][ i ])\r\n      elms[ 10 ] = parseFloat(ncsOp[ 'matrix[3][3]' ][ i ])\r\n\r\n      elms[ 3 ] = parseFloat(ncsOp[ 'vector[1]' ][ i ])\r\n      elms[ 7 ] = parseFloat(ncsOp[ 'vector[2]' ][ i ])\r\n      elms[ 11 ] = parseFloat(ncsOp[ 'vector[3]' ][ i ])\r\n\r\n      m.transpose()\r\n\r\n      ncsPart.matrixList.push(m)\r\n    })\r\n\r\n    if (ncsPart.matrixList.length === 0) {\r\n      delete biomolDict[ ncsName ]\r\n    }\r\n  }\r\n\r\n  // cell & symmetry\r\n  const unitcellDict: {\r\n    a?: number\r\n    b?: number\r\n    c?: number\r\n    alpha?: number\r\n    beta?: number\r\n    gamma?: number\r\n    spacegroup?: string\r\n    origx?: Matrix4\r\n    scale?: Matrix4\r\n  } = {}\r\n\r\n  if (cif.cell) {\r\n    const cell = cif.cell\r\n\r\n    const a = parseFloat(cell.length_a)\r\n    const b = parseFloat(cell.length_b)\r\n    const c = parseFloat(cell.length_c)\r\n\r\n    const box = new Float32Array(9)\r\n    box[ 0 ] = a\r\n    box[ 4 ] = b\r\n    box[ 8 ] = c\r\n    structure.boxes.push(box)\r\n\r\n    unitcellDict.a = a\r\n    unitcellDict.b = b\r\n    unitcellDict.c = c\r\n    unitcellDict.alpha = parseFloat(cell.angle_alpha)\r\n    unitcellDict.beta = parseFloat(cell.angle_beta)\r\n    unitcellDict.gamma = parseFloat(cell.angle_gamma)\r\n  }\r\n\r\n  if (cif.symmetry) {\r\n    unitcellDict.spacegroup = trimQuotes(\r\n      cif.symmetry[ 'space_group_name_H-M' ]\r\n    )\r\n  }\r\n\r\n  // origx\r\n  var origx = new Matrix4()\r\n\r\n  if (cif.database_PDB_matrix) {\r\n    var origxMat = cif.database_PDB_matrix\r\n    var origxElms = origx.elements\r\n\r\n    origxElms[ 0 ] = parseFloat(origxMat[ 'origx[1][1]' ])\r\n    origxElms[ 1 ] = parseFloat(origxMat[ 'origx[1][2]' ])\r\n    origxElms[ 2 ] = parseFloat(origxMat[ 'origx[1][3]' ])\r\n\r\n    origxElms[ 4 ] = parseFloat(origxMat[ 'origx[2][1]' ])\r\n    origxElms[ 5 ] = parseFloat(origxMat[ 'origx[2][2]' ])\r\n    origxElms[ 6 ] = parseFloat(origxMat[ 'origx[2][3]' ])\r\n\r\n    origxElms[ 8 ] = parseFloat(origxMat[ 'origx[3][1]' ])\r\n    origxElms[ 9 ] = parseFloat(origxMat[ 'origx[3][2]' ])\r\n    origxElms[ 10 ] = parseFloat(origxMat[ 'origx[3][3]' ])\r\n\r\n    origxElms[ 3 ] = parseFloat(origxMat[ 'origx_vector[1]' ])\r\n    origxElms[ 7 ] = parseFloat(origxMat[ 'origx_vector[2]' ])\r\n    origxElms[ 11 ] = parseFloat(origxMat[ 'origx_vector[3]' ])\r\n\r\n    origx.transpose()\r\n\r\n    unitcellDict.origx = origx\r\n  }\r\n\r\n  // scale\r\n  var scale = new Matrix4()\r\n\r\n  if (cif.atom_sites) {\r\n    var scaleMat = cif.atom_sites\r\n    var scaleElms = scale.elements\r\n\r\n    scaleElms[ 0 ] = parseFloat(scaleMat[ 'fract_transf_matrix[1][1]' ])\r\n    scaleElms[ 1 ] = parseFloat(scaleMat[ 'fract_transf_matrix[1][2]' ])\r\n    scaleElms[ 2 ] = parseFloat(scaleMat[ 'fract_transf_matrix[1][3]' ])\r\n\r\n    scaleElms[ 4 ] = parseFloat(scaleMat[ 'fract_transf_matrix[2][1]' ])\r\n    scaleElms[ 5 ] = parseFloat(scaleMat[ 'fract_transf_matrix[2][2]' ])\r\n    scaleElms[ 6 ] = parseFloat(scaleMat[ 'fract_transf_matrix[2][3]' ])\r\n\r\n    scaleElms[ 8 ] = parseFloat(scaleMat[ 'fract_transf_matrix[3][1]' ])\r\n    scaleElms[ 9 ] = parseFloat(scaleMat[ 'fract_transf_matrix[3][2]' ])\r\n    scaleElms[ 10 ] = parseFloat(scaleMat[ 'fract_transf_matrix[3][3]' ])\r\n\r\n    scaleElms[ 3 ] = parseFloat(scaleMat[ 'fract_transf_vector[1]' ])\r\n    scaleElms[ 7 ] = parseFloat(scaleMat[ 'fract_transf_vector[2]' ])\r\n    scaleElms[ 11 ] = parseFloat(scaleMat[ 'fract_transf_vector[3]' ])\r\n\r\n    scale.transpose()\r\n\r\n    unitcellDict.scale = scale\r\n  }\r\n\r\n  if (unitcellDict.a !== undefined) {\r\n    structure.unitcell = new Unitcell(unitcellDict as UnitcellParams)\r\n  } else {\r\n    structure.unitcell = undefined\r\n  }\r\n}\r\n\r\nfunction processConnections (cif: Cif, structure: Structure, asymIdDict: {[k: string]: string}) {\r\n  // add connections\r\n  var sc = cif.struct_conn\r\n\r\n  if (sc) {\r\n    ensureArray(sc, 'id')\r\n\r\n    var reDoubleQuote = /\"/g\r\n    var ap1 = structure.getAtomProxy()\r\n    var ap2 = structure.getAtomProxy()\r\n    var atomIndicesCache: {[k: string]: Uint32Array|undefined} = {}\r\n\r\n    for (var i = 0, il = sc.id.length; i < il; ++i) {\r\n      // ignore:\r\n      // hydrog - hydrogen bond\r\n      // mismat - mismatched base pairs\r\n      // saltbr - ionic interaction\r\n\r\n      var connTypeId = sc.conn_type_id[ i ]\r\n      if (connTypeId === 'hydrog' ||\r\n          connTypeId === 'mismat' ||\r\n          connTypeId === 'saltbr') continue\r\n\r\n      // ignore bonds between symmetry mates\r\n      if (sc.ptnr1_symmetry[ i ] !== '1_555' ||\r\n          sc.ptnr2_symmetry[ i ] !== '1_555') continue\r\n\r\n      // process:\r\n      // covale - covalent bond\r\n      // covale_base -\r\n      //      covalent modification of a nucleotide base\r\n      // covale_phosphate -\r\n      //      covalent modification of a nucleotide phosphate\r\n      // covale_sugar -\r\n      //      covalent modification of a nucleotide sugar\r\n      // disulf - disulfide bridge\r\n      // metalc - metal coordination\r\n      // modres - covalent residue modification\r\n\r\n      var inscode1 = sc.pdbx_ptnr1_PDB_ins_code[ i ]\r\n      var altloc1 = sc.pdbx_ptnr1_label_alt_id[ i ]\r\n      var sele1 = (\r\n        sc.ptnr1_auth_seq_id[ i ] +\r\n        (hasValue(inscode1) ? ('^' + inscode1) : '') +\r\n        ':' + asymIdDict[ sc.ptnr1_label_asym_id[ i ] ] +\r\n        '.' + sc.ptnr1_label_atom_id[ i ].replace(reDoubleQuote, '') +\r\n        (hasValue(altloc1) ? ('%' + altloc1) : '')\r\n      )\r\n      var atomIndices1 = atomIndicesCache[ sele1 ]\r\n      if (!atomIndices1) {\r\n        var selection1 = new Selection(sele1)\r\n        if (selection1.selection.error) {\r\n          if (Debug) Log.warn('invalid selection for connection', sele1)\r\n          continue\r\n        }\r\n        atomIndices1 = structure.getAtomIndices(selection1)\r\n        atomIndicesCache[ sele1 ] = atomIndices1\r\n      }\r\n\r\n      var inscode2 = sc.pdbx_ptnr2_PDB_ins_code[ i ]\r\n      var altloc2 = sc.pdbx_ptnr2_label_alt_id[ i ]\r\n      var sele2 = (\r\n        sc.ptnr2_auth_seq_id[ i ] +\r\n        (hasValue(inscode2) ? ('^' + inscode2) : '') +\r\n        ':' + asymIdDict[ sc.ptnr2_label_asym_id[ i ] ] +\r\n        '.' + sc.ptnr2_label_atom_id[ i ].replace(reDoubleQuote, '') +\r\n        (hasValue(altloc2) ? ('%' + altloc2) : '')\r\n      )\r\n      var atomIndices2 = atomIndicesCache[ sele2 ]\r\n      if (!atomIndices2) {\r\n        var selection2 = new Selection(sele2)\r\n        if (selection2.selection.error) {\r\n          if (Debug) Log.warn('invalid selection for connection', sele2)\r\n          continue\r\n        }\r\n        atomIndices2 = structure.getAtomIndices(selection2)\r\n        atomIndicesCache[ sele2 ] = atomIndices2\r\n      }\r\n\r\n      // cases with more than one atom per selection\r\n      // - #altloc1 to #altloc2\r\n      // - #model to #model\r\n      // - #altloc1 * #model to #altloc2 * #model\r\n\r\n      var k = atomIndices1!.length\r\n      var l = atomIndices2!.length\r\n\r\n      if (k > l) {\r\n        var tmpA = k\r\n        k = l\r\n        l = tmpA\r\n        var tmpB = atomIndices1\r\n        atomIndices1 = atomIndices2\r\n        atomIndices2 = tmpB\r\n      }\r\n\r\n      // console.log( k, l );\r\n\r\n      if (k === 0 || l === 0) {\r\n        if (Debug) Log.warn('no atoms found for', sele1, sele2)\r\n        continue\r\n      }\r\n\r\n      for (var j = 0; j < l; ++j) {\r\n        ap1.index = atomIndices1![ j % k ]\r\n        ap2.index = atomIndices2![ j ]\r\n\r\n        if (ap1 && ap2) {\r\n          structure.bondStore.addBond(\r\n            ap1, ap2, getBondOrder(sc.pdbx_value_order[ i ])\r\n          )\r\n        } else {\r\n          Log.log('atoms for connection not found')\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction processEntities (cif: Cif, structure: Structure, chainIndexDict: {[k: string]: Set<number>}) {\r\n  if (cif.entity) {\r\n    ensureArray(cif.entity, 'id')\r\n    var e = cif.entity\r\n    var n = e.id.length\r\n    for (var i = 0; i < n; ++i) {\r\n      var description = e.pdbx_description[ i ]\r\n      var type = e.type[ i ]\r\n      var chainIndexList: number[] = Array.from(chainIndexDict[ e.id[ i ] ])\r\n      structure.entityList[ i ] = new Entity(\r\n        structure, i, description, type, chainIndexList\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\n//\r\n\r\nclass CifParser extends StructureParser {\r\n  get type () { return 'cif' }\r\n\r\n  _parse () {\r\n    // http://mmcif.wwpdb.org/\r\n\r\n    Log.time('CifParser._parse ' + this.name)\r\n\r\n    var s = this.structure\r\n    var sb = this.structureBuilder\r\n\r\n    var firstModelOnly = this.firstModelOnly\r\n    var asTrajectory = this.asTrajectory\r\n    var cAlphaOnly = this.cAlphaOnly\r\n\r\n    var frames = s.frames\r\n    var currentFrame: NumberArray, currentCoord: number\r\n\r\n    var rawline, line\r\n\r\n    //\r\n\r\n    var cif: Cif = {}\r\n    var asymIdDict: {[k: string]: string} = {}\r\n    var chainIndexDict:{[k: string]: Set<number>} = {}\r\n\r\n    var pendingString = false\r\n    var currentString: string|null = null\r\n    var pendingValue = false\r\n    var pendingLoop = false\r\n    var pendingName = false\r\n    var loopPointers: string[][] = []\r\n    var currentLoopIndex: number|null = null\r\n    var currentCategory: string|null = null\r\n    var currentName: string|boolean|null = null\r\n    var first: boolean|null = null\r\n    var pointerNames: string[] = []\r\n\r\n    var authAsymId: number, authSeqId: number, labelSeqId: number,\r\n      labelAtomId: number, labelCompId: number, labelAsymId: number, labelEntityId: number, labelAltId: number,\r\n      groupPDB: number, id: number, typeSymbol: number, pdbxPDBmodelNum: number, pdbxPDBinsCode: number,\r\n      CartnX: number, CartnY: number, CartnZ: number, bIsoOrEquiv: number, occupancy: number\r\n\r\n    //\r\n\r\n    var atomMap = s.atomMap\r\n    var atomStore = s.atomStore\r\n    atomStore.resize(this.streamer.data.length / 100)\r\n\r\n    var idx = 0\r\n    var modelIdx = 0\r\n    var modelNum: number\r\n\r\n    function _parseChunkOfLines (_i: number, _n: number, lines: string[]) {\r\n      for (var i = _i; i < _n; ++i) {\r\n        rawline = lines[i]\r\n        line = rawline.trim()\r\n\r\n        if ((!line && !pendingString && !pendingLoop) || line[0] === '#') {\r\n          // Log.log( \"NEW BLOCK\" );\r\n\r\n          pendingString = false\r\n          pendingLoop = false\r\n          pendingValue = false\r\n          loopPointers.length = 0\r\n          currentLoopIndex = null\r\n          currentCategory = null\r\n          currentName = null\r\n          first = null\r\n          pointerNames.length = 0\r\n        } else if (line.substring(0, 5) === 'data_') {\r\n          cif.data = line.substring(5).trim()\r\n\r\n          // Log.log( \"DATA\", data );\r\n        } else if (line[0] === ';') {\r\n          if (pendingString) {\r\n            // Log.log( \"STRING END\", currentString );\r\n\r\n            if (pendingLoop) {\r\n              if (currentLoopIndex === loopPointers.length) {\r\n                currentLoopIndex = 0\r\n              }\r\n              loopPointers[ currentLoopIndex as number ].push(currentString as string);\r\n              (currentLoopIndex as number) += 1\r\n            } else {\r\n              if (currentName === false) {\r\n                cif[ currentCategory as string ] = currentString\r\n              } else {\r\n                cif[ currentCategory as string ][ currentName as string ] = currentString //TODO currentname can equals null\r\n              }\r\n            }\r\n\r\n            pendingString = false\r\n            currentString = null\r\n          } else {\r\n            // Log.log( \"STRING START\" );\r\n\r\n            pendingString = true\r\n            currentString = line.substring(1)\r\n          }\r\n        } else if (line === 'loop_') {\r\n          // Log.log( \"LOOP START\" );\r\n\r\n          pendingLoop = true\r\n          pendingName = true\r\n          loopPointers.length = 0\r\n          pointerNames.length = 0\r\n          currentLoopIndex = 0\r\n        } else if (line[0] === '_') {\r\n          var keyParts, category, name\r\n\r\n          if (pendingLoop && !pendingName) {\r\n            pendingLoop = false\r\n          }\r\n\r\n          if (pendingLoop) {\r\n            // Log.log( \"LOOP KEY\", line );\r\n\r\n            keyParts = line.split('.')\r\n            category = keyParts[ 0 ].substring(1)\r\n            name = keyParts[ 1 ]\r\n\r\n            if (keyParts.length === 1) {\r\n              name = false\r\n              if (!cif[ category ]) cif[ category ] = []\r\n              loopPointers.push(cif[ category ])\r\n            } else {\r\n              if (!cif[ category ]) cif[ category ] = {}\r\n              if (cif[ category ][ name ]) {\r\n                if (Debug) Log.warn(category, name, 'already exists')\r\n              } else {\r\n                cif[ category ][ name ] = []\r\n                loopPointers.push(cif[ category ][ name ])\r\n                pointerNames.push(name)\r\n              }\r\n            }\r\n\r\n            currentCategory = category\r\n            currentName = name\r\n            first = true\r\n          } else {\r\n            var keyValuePair = line.match(reQuotedWhitespace)\r\n            var key = keyValuePair![ 0 ]\r\n            var value = keyValuePair![ 1 ]\r\n            keyParts = key.split('.')\r\n            category = keyParts[ 0 ].substring(1)\r\n            name = keyParts[ 1 ]\r\n\r\n            if (keyParts.length === 1) {\r\n              name = false\r\n              cif[ category ] = value\r\n            } else {\r\n              if (!cif[ category ]) cif[ category ] = {}\r\n\r\n              if (cif[ category ][ name ]) {\r\n                if (Debug) Log.warn(category, name, 'already exists')\r\n              } else {\r\n                cif[ category ][ name ] = value\r\n              }\r\n            }\r\n\r\n            if (!value) pendingValue = true\r\n\r\n            currentCategory = category\r\n            currentName = name\r\n          }\r\n        } else {\r\n          if (pendingString) {\r\n            // Log.log( \"STRING VALUE\", line );\r\n\r\n            currentString += rawline\r\n          } else if (pendingLoop) {\r\n            // Log.log( \"LOOP VALUE\", line );\r\n\r\n            if (!line) {\r\n              continue\r\n            } else if (currentCategory === 'atom_site') {\r\n              const ls = line.split(reWhitespace)\r\n\r\n              if (first) {\r\n                authAsymId = pointerNames.indexOf('auth_asym_id')\r\n                authSeqId = pointerNames.indexOf('auth_seq_id')\r\n                labelSeqId = pointerNames.indexOf('label_seq_id')\r\n                labelAtomId = pointerNames.indexOf('label_atom_id')\r\n                labelCompId = pointerNames.indexOf('label_comp_id')\r\n                labelAsymId = pointerNames.indexOf('label_asym_id')\r\n                labelEntityId = pointerNames.indexOf('label_entity_id')\r\n                labelAltId = pointerNames.indexOf('label_alt_id')\r\n                CartnX = pointerNames.indexOf('Cartn_x')\r\n                CartnY = pointerNames.indexOf('Cartn_y')\r\n                CartnZ = pointerNames.indexOf('Cartn_z')\r\n                id = pointerNames.indexOf('id')\r\n                typeSymbol = pointerNames.indexOf('type_symbol')\r\n                groupPDB = pointerNames.indexOf('group_PDB')\r\n                bIsoOrEquiv = pointerNames.indexOf('B_iso_or_equiv')\r\n                pdbxPDBmodelNum = pointerNames.indexOf('pdbx_PDB_model_num')\r\n\r\n                pdbxPDBinsCode = pointerNames.indexOf('pdbx_PDB_ins_code')\r\n                occupancy = pointerNames.indexOf('occupancy')\r\n\r\n                first = false\r\n\r\n                modelNum = parseInt(ls[ pdbxPDBmodelNum ])\r\n\r\n                if (asTrajectory) {\r\n                  currentFrame = []\r\n                  currentCoord = 0\r\n                }\r\n              }\r\n\r\n              //\r\n\r\n              const _modelNum = parseInt(ls[ pdbxPDBmodelNum ])\r\n\r\n              if (modelNum !== _modelNum) {\r\n                if (asTrajectory) {\r\n                  if (modelIdx === 0) {\r\n                    frames.push(new Float32Array(currentFrame))\r\n                  }\r\n\r\n                  currentFrame = new Float32Array(atomStore.count * 3)\r\n                  frames.push(currentFrame)\r\n                  currentCoord = 0\r\n                }\r\n\r\n                modelIdx += 1\r\n              }\r\n\r\n              modelNum = _modelNum\r\n\r\n              if (firstModelOnly && modelIdx > 0) continue\r\n\r\n              //\r\n\r\n              const atomname = ls[ labelAtomId ].replace(reDoubleQuote, '')\r\n              if (cAlphaOnly && atomname !== 'CA') continue\r\n\r\n              const x = parseFloat(ls[ CartnX ])\r\n              const y = parseFloat(ls[ CartnY ])\r\n              const z = parseFloat(ls[ CartnZ ])\r\n\r\n              if (asTrajectory) {\r\n                const frameOffset = currentCoord * 3\r\n\r\n                currentFrame[ frameOffset + 0 ] = x\r\n                currentFrame[ frameOffset + 1 ] = y\r\n                currentFrame[ frameOffset + 2 ] = z\r\n\r\n                currentCoord += 1\r\n\r\n                if (modelIdx > 0) continue\r\n              }\r\n\r\n              //\r\n\r\n              const resname = ls[ labelCompId ]\r\n              const resno = parseInt(ls[ authSeqId !== -1 ? authSeqId : labelSeqId ])\r\n              let inscode = ls[ pdbxPDBinsCode ]\r\n              inscode = (inscode === '?') ? '' : inscode\r\n              const chainname = ls[ authAsymId ]\r\n              const chainid = ls[ labelAsymId ]\r\n              const hetero = (ls[ groupPDB ][ 0 ] === 'H')\r\n\r\n              //\r\n\r\n              const element = ls[ typeSymbol ]\r\n              const bfactor = parseFloat(ls[ bIsoOrEquiv ])\r\n              const occ = parseFloat(ls[ occupancy ])\r\n              let altloc = ls[ labelAltId ]\r\n              altloc = (altloc === '.') ? '' : altloc\r\n\r\n              atomStore.growIfFull()\r\n              atomStore.atomTypeId[ idx ] = atomMap.add(atomname, element)\r\n\r\n              atomStore.x[ idx ] = x\r\n              atomStore.y[ idx ] = y\r\n              atomStore.z[ idx ] = z\r\n              atomStore.serial[ idx ] = parseInt(ls[ id ])\r\n              atomStore.bfactor[ idx ] = isNaN(bfactor) ? 0 : bfactor\r\n              atomStore.occupancy[ idx ] = isNaN(occ) ? 0 : occ\r\n              atomStore.altloc[ idx ] = altloc.charCodeAt(0)\r\n\r\n              sb.addAtom(modelIdx, chainname, chainid, resname, resno, hetero, undefined, inscode)\r\n\r\n              if (Debug) {\r\n                // check if one-to-many (chainname-asymId) relationship is\r\n                // actually a many-to-many mapping\r\n                const assignedChainname = asymIdDict[ chainid ]\r\n                if (assignedChainname !== undefined && assignedChainname !== chainname) {\r\n                  if (Debug) Log.warn(assignedChainname, chainname)\r\n                }\r\n              }\r\n              // chainname mapping: label_asym_id -> auth_asym_id\r\n              asymIdDict[ chainid ] = chainname\r\n\r\n              // entity mapping: chainIndex -> label_entity_id\r\n              const entityId = ls[ labelEntityId ]\r\n              if (!chainIndexDict[ entityId ]) {\r\n                chainIndexDict[ entityId ] = new Set()\r\n              }\r\n              chainIndexDict[ entityId ].add(s.chainStore.count - 1)\r\n\r\n              idx += 1\r\n            } else {\r\n              const ls = line.match(reQuotedWhitespace)\r\n              const nn = ls!.length\r\n\r\n              if (currentLoopIndex === loopPointers.length) {\r\n                currentLoopIndex = 0\r\n              }/* else if( currentLoopIndex + nn > loopPointers.length ){\r\n                Log.warn( \"cif parsing error, wrong number of loop data entries\", nn, loopPointers.length );\r\n              } */\r\n\r\n              for (let j = 0; j < nn; ++j) {\r\n                loopPointers[ <number>currentLoopIndex + j ].push(ls![ j ])\r\n              }\r\n\r\n              (<number>currentLoopIndex) += nn\r\n            }\r\n\r\n            pendingName = false\r\n          } else if (line[0] === \"'\" && line[line.length - 1] === \"'\") {\r\n            // Log.log( \"NEWLINE STRING\", line );\r\n\r\n            const str = line.substring(1, line.length - 1)\r\n\r\n            if (currentName === false) {\r\n              cif[ currentCategory as string ] = str\r\n            } else {\r\n              cif[ currentCategory as string ][ currentName as string ] = str\r\n            }\r\n          } else if (pendingValue) {\r\n            // Log.log( \"NEWLINE VALUE\", line );\r\n\r\n            if (currentName === false) {\r\n              cif[ currentCategory as string ] = line\r\n            } else {\r\n              cif[ currentCategory as string ][ currentName as string ] = line\r\n            }\r\n          } else {\r\n            if (Debug) Log.log('CifParser._parse: unknown state', line)\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.streamer.eachChunkOfLines(function (lines/*, chunkNo, chunkCount */) {\r\n      _parseChunkOfLines(0, lines.length, lines)\r\n    })\r\n\r\n    if (cif.chem_comp && cif.chem_comp_atom && !cif.struct) {\r\n      parseChemComp(cif, s, sb)\r\n      sb.finalize()\r\n      s.finalizeAtoms()\r\n      s.finalizeBonds()\r\n      assignResidueTypeBonds(s)\r\n    } else if (cif.atom_site_type_symbol && cif.atom_site_label && cif.atom_site_fract_x) {\r\n      parseCore(cif, s, sb)\r\n      sb.finalize()\r\n      s.finalizeAtoms()\r\n      calculateBonds(s)\r\n      s.finalizeBonds()\r\n      // assignResidueTypeBonds( s );\r\n    } else {\r\n      var secStruct = processSecondaryStructure(cif, s, asymIdDict)\r\n      processSymmetry(cif, s, asymIdDict)\r\n      processConnections(cif, s, asymIdDict)\r\n      processEntities(cif, s, chainIndexDict)\r\n\r\n      if (cif.struct && cif.struct.title) {\r\n        s.title = cif.struct.title.trim().replace(reTrimQuotes, '')\r\n      }\r\n      if (cif.entry && cif.entry.id) {\r\n        s.id = cif.entry.id.trim().replace(reTrimQuotes, '')\r\n      }\r\n\r\n      // structure header (mimicking biojava)\r\n      if (cif.pdbx_audit_revision_history) {\r\n        if (cif.pdbx_audit_revision_history.revision_date) {\r\n          ensureArray(cif.pdbx_audit_revision_history, 'revision_date')\r\n          const dates = cif.pdbx_audit_revision_history.revision_date.filter(hasValue)\r\n          if (dates.length) {\r\n            s.header.releaseDate = dates[ 0 ]\r\n          }\r\n        }\r\n        if (cif.pdbx_database_status.recvd_initial_deposition_date) {\r\n          ensureArray(cif.pdbx_database_status, 'recvd_initial_deposition_date')\r\n          const depDates = cif.pdbx_database_status.recvd_initial_deposition_date.filter(hasValue)\r\n          if (depDates.length) {\r\n            s.header.depositionDate = depDates[ 0 ]\r\n          }\r\n        }\r\n      } else if (cif.database_PDB_rev) {\r\n        if (cif.database_PDB_rev.date) {\r\n          ensureArray(cif.database_PDB_rev, 'date')\r\n          const dates = cif.database_PDB_rev.date.filter(hasValue)\r\n          if (dates.length) {\r\n            s.header.releaseDate = dates[ 0 ]\r\n          }\r\n        }\r\n        if (cif.database_PDB_rev.date_original) {\r\n          ensureArray(cif.database_PDB_rev, 'date_original')\r\n          const depDates = cif.database_PDB_rev.date_original.filter(hasValue)\r\n          if (depDates.length) {\r\n            s.header.depositionDate = depDates[ 0 ]\r\n          }\r\n        }\r\n      }\r\n      if (cif.reflns && cif.reflns.d_resolution_high) {\r\n        if (hasValue(cif.reflns.d_resolution_high)) {\r\n          s.header.resolution = parseFloat(cif.reflns.d_resolution_high)\r\n        }\r\n      } else if (cif.refine && cif.refine.ls_d_res_high) {\r\n        if (hasValue(cif.refine.ls_d_res_high)) {\r\n          s.header.resolution = parseFloat(cif.refine.ls_d_res_high)\r\n        }\r\n      }\r\n      if (cif.refine && cif.refine.ls_R_factor_R_free) {\r\n        if (hasValue(cif.refine.ls_R_factor_R_free)) {\r\n          s.header.rFree = parseFloat(cif.refine.ls_R_factor_R_free)\r\n        }\r\n      }\r\n      if (cif.refine && cif.refine.ls_R_factor_R_work) {\r\n        if (hasValue(cif.refine.ls_R_factor_R_work)) {\r\n          s.header.rWork = parseFloat(cif.refine.ls_R_factor_R_work)\r\n        }\r\n      }\r\n      if (cif.exptl && cif.exptl.method) {\r\n        ensureArray(cif.exptl, 'method')\r\n        s.header.experimentalMethods = cif.exptl.method.map(function (m: string) {\r\n          return m.replace(reTrimQuotes, '')\r\n        })\r\n      }\r\n\r\n      sb.finalize()\r\n      s.finalizeAtoms()\r\n      calculateBonds(s)\r\n      s.finalizeBonds()\r\n\r\n      if (!secStruct) {\r\n        calculateSecondaryStructure(s)\r\n      } else {\r\n        assignSecondaryStructure(s, secStruct)\r\n      }\r\n      buildUnitcellAssembly(s)\r\n\r\n      s.extraData.cif = cif\r\n    }\r\n\r\n    if (Debug) Log.timeEnd('CifParser._parse ' + this.name)\r\n  }\r\n}\r\n\r\nParserRegistry.add('cif', CifParser)\r\nParserRegistry.add('mcif', CifParser)\r\nParserRegistry.add('mmcif', CifParser)\r\n\r\nexport default CifParser\r\n","/**\r\n * @file Gro Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals'\r\nimport StructureParser from './structure-parser'\r\nimport {\r\n  calculateBonds, calculateChainnames, calculateSecondaryStructure\r\n} from '../structure/structure-utils'\r\n\r\nclass GroParser extends StructureParser {\r\n  get type () { return 'gro' }\r\n\r\n  _parse () {\r\n    // http://manual.gromacs.org/current/online/gro.html\r\n\r\n    if (Debug) Log.time('GroParser._parse ' + this.name)\r\n\r\n    var s = this.structure\r\n    var sb = this.structureBuilder\r\n\r\n    var firstModelOnly = this.firstModelOnly\r\n    var asTrajectory = this.asTrajectory\r\n    var cAlphaOnly = this.cAlphaOnly\r\n\r\n    var frames = s.frames\r\n    var boxes = s.boxes\r\n    var currentFrame: Float32Array, currentCoord: number\r\n\r\n    var firstLines = this.streamer.peekLines(3)\r\n\r\n    s.title = firstLines[ 0 ].trim()\r\n\r\n    // determine number of decimal places\r\n    var ndec = firstLines[ 2 ].length - firstLines[ 2 ].lastIndexOf('.') - 1\r\n    var lpos = 5 + ndec\r\n    var xpos = 20\r\n    var ypos = 20 + lpos\r\n    var zpos = 20 + 2 * lpos\r\n\r\n    //\r\n\r\n    var atomname, resname, resno, serial\r\n\r\n    var atomCount = parseInt(firstLines[ 1 ])\r\n    var modelLineCount = atomCount + 3\r\n\r\n    var atomMap = s.atomMap\r\n    var atomStore = s.atomStore\r\n    atomStore.resize(atomCount)\r\n\r\n    var idx = 0\r\n    var modelIdx = 0\r\n    var lineNo = 0\r\n\r\n    function _parseChunkOfLines (_i: number, _n: number, lines: string[]) {\r\n      for (var i = _i; i < _n; ++i) {\r\n        ++lineNo\r\n        var l = lineNo - 1\r\n\r\n        var line = lines[ i ]\r\n\r\n        if (!line) continue\r\n\r\n        if (l % modelLineCount === 0) {\r\n          // Log.log( \"title\", line )\r\n\r\n          if (asTrajectory) {\r\n            currentFrame = new Float32Array(atomCount * 3)\r\n            frames.push(currentFrame)\r\n            currentCoord = 0\r\n          }\r\n        } else if (l % modelLineCount === 1) {\r\n\r\n          // Log.log( \"atomCount\", line )\r\n\r\n        } else if (l % modelLineCount === modelLineCount - 1) {\r\n          var str = line.trim().split(/\\s+/)\r\n          var box = new Float32Array(9)\r\n          box[ 0 ] = parseFloat(str[ 0 ]) * 10\r\n          box[ 4 ] = parseFloat(str[ 1 ]) * 10\r\n          box[ 8 ] = parseFloat(str[ 2 ]) * 10\r\n          boxes.push(box)\r\n\r\n          if (firstModelOnly) {\r\n            return true\r\n          }\r\n\r\n          modelIdx += 1\r\n        } else {\r\n          atomname = line.substr(10, 5).trim()\r\n          if (cAlphaOnly && atomname !== 'CA') continue\r\n\r\n          var x = parseFloat(line.substr(xpos, lpos)) * 10\r\n          var y = parseFloat(line.substr(ypos, lpos)) * 10\r\n          var z = parseFloat(line.substr(zpos, lpos)) * 10\r\n\r\n          if (asTrajectory) {\r\n            var j = currentCoord * 3\r\n\r\n            currentFrame[ j + 0 ] = x\r\n            currentFrame[ j + 1 ] = y\r\n            currentFrame[ j + 2 ] = z\r\n\r\n            currentCoord += 1\r\n\r\n            if (l > modelLineCount) continue\r\n          }\r\n\r\n          resname = line.substr(5, 5).trim()\r\n          resno = parseInt(line.substr(0, 5))\r\n          serial = parseInt(line.substr(15, 5))\r\n\r\n          atomStore.growIfFull()\r\n          atomStore.atomTypeId[ idx ] = atomMap.add(atomname)\r\n\r\n          atomStore.x[ idx ] = x\r\n          atomStore.y[ idx ] = y\r\n          atomStore.z[ idx ] = z\r\n          atomStore.serial[ idx ] = serial\r\n\r\n          sb.addAtom(modelIdx, '', '', resname, resno, false, 'l')\r\n\r\n          idx += 1\r\n        }\r\n      }\r\n    }\r\n\r\n    this.streamer.eachChunkOfLines(function (lines/*, chunkNo, chunkCount */) {\r\n      _parseChunkOfLines(0, lines.length, lines)\r\n    })\r\n\r\n    sb.finalize()\r\n    s.finalizeAtoms()\r\n    calculateChainnames(s)\r\n    calculateBonds(s)\r\n    s.finalizeBonds()\r\n\r\n    calculateSecondaryStructure(s)\r\n\r\n    if (Debug) Log.timeEnd('GroParser._parse ' + this.name)\r\n  }\r\n}\r\n\r\nParserRegistry.add('gro', GroParser)\r\n\r\nexport default GroParser\r\n","/**\r\n * @file utf8-utils\r\n * @private\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * mostly copied from https://github.com/creationix/msgpack-js-browser\r\n * by Tim Caswell <tim@creationix.com>, MIT License, Copyright (c) 2013\r\n */\r\n\r\n\r\n// Encode string as utf8 into dataview at offset\r\nfunction utf8Write(view, offset, string) {\r\n  var byteLength = view.byteLength;\r\n  for(var i = 0, l = string.length; i < l; i++) {\r\n    var codePoint = string.charCodeAt(i);\r\n\r\n    // One byte of UTF-8\r\n    if (codePoint < 0x80) {\r\n      view.setUint8(offset++, codePoint >>> 0 & 0x7f | 0x00);\r\n      continue;\r\n    }\r\n\r\n    // Two bytes of UTF-8\r\n    if (codePoint < 0x800) {\r\n      view.setUint8(offset++, codePoint >>> 6 & 0x1f | 0xc0);\r\n      view.setUint8(offset++, codePoint >>> 0 & 0x3f | 0x80);\r\n      continue;\r\n    }\r\n\r\n    // Three bytes of UTF-8.\r\n    if (codePoint < 0x10000) {\r\n      view.setUint8(offset++, codePoint >>> 12 & 0x0f | 0xe0);\r\n      view.setUint8(offset++, codePoint >>> 6  & 0x3f | 0x80);\r\n      view.setUint8(offset++, codePoint >>> 0  & 0x3f | 0x80);\r\n      continue;\r\n    }\r\n\r\n    // Four bytes of UTF-8\r\n    if (codePoint < 0x110000) {\r\n      view.setUint8(offset++, codePoint >>> 18 & 0x07 | 0xf0);\r\n      view.setUint8(offset++, codePoint >>> 12 & 0x3f | 0x80);\r\n      view.setUint8(offset++, codePoint >>> 6  & 0x3f | 0x80);\r\n      view.setUint8(offset++, codePoint >>> 0  & 0x3f | 0x80);\r\n      continue;\r\n    }\r\n    throw new Error(\"bad codepoint \" + codePoint);\r\n  }\r\n}\r\n\r\nfunction utf8ByteCount(string) {\r\n  var count = 0;\r\n  for(var i = 0, l = string.length; i < l; i++) {\r\n    var codePoint = string.charCodeAt(i);\r\n    if (codePoint < 0x80) {\r\n      count += 1;\r\n      continue;\r\n    }\r\n    if (codePoint < 0x800) {\r\n      count += 2;\r\n      continue;\r\n    }\r\n    if (codePoint < 0x10000) {\r\n      count += 3;\r\n      continue;\r\n    }\r\n    if (codePoint < 0x110000) {\r\n      count += 4;\r\n      continue;\r\n    }\r\n    throw new Error(\"bad codepoint \" + codePoint);\r\n  }\r\n  return count;\r\n}\r\n\r\n/**\r\n * encode data value (recursively) into binary encoded MessagePack v5 (http://msgpack.org/)\r\n * @param  {Object|Array|String|Number|Boolean|null} value  [description]\r\n * @param  {DataView} view   [description]\r\n * @param  {Integer} offset [description]\r\n * @return {Integer} number of bytes written into view\r\n */\r\nfunction encode$1(value, view, offset) {\r\n  var type = typeof value;\r\n\r\n  // Strings Bytes\r\n  if (type === \"string\") {\r\n    var length = utf8ByteCount(value);\r\n    // fix str\r\n    if (length < 0x20) {\r\n      view.setUint8(offset, length | 0xa0);\r\n      utf8Write(view, offset + 1, value);\r\n      return 1 + length;\r\n    }\r\n    // str 8\r\n    if (length < 0x100) {\r\n      view.setUint8(offset, 0xd9);\r\n      view.setUint8(offset + 1, length);\r\n      utf8Write(view, offset + 2, value);\r\n      return 2 + length;\r\n    }\r\n    // str 16\r\n    if (length < 0x10000) {\r\n      view.setUint8(offset, 0xda);\r\n      view.setUint16(offset + 1, length);\r\n      utf8Write(view, offset + 3, value);\r\n      return 3 + length;\r\n    }\r\n    // str 32\r\n    if (length < 0x100000000) {\r\n      view.setUint8(offset, 0xdb);\r\n      view.setUint32(offset + 1, length);\r\n      utf8Write(view, offset + 5, value);\r\n      return 5 + length;\r\n    }\r\n  }\r\n\r\n  if (value instanceof Uint8Array) {\r\n    var length = value.byteLength;\r\n    var bytes = new Uint8Array(view.buffer);\r\n    // bin 8\r\n    if (length < 0x100) {\r\n      view.setUint8(offset, 0xc4);\r\n      view.setUint8(offset + 1, length);\r\n      bytes.set(value, offset + 2);\r\n      return 2 + length;\r\n    }\r\n    // bin 16\r\n    if (length < 0x10000) {\r\n      view.setUint8(offset, 0xc5);\r\n      view.setUint16(offset + 1, length);\r\n      bytes.set(value, offset + 3);\r\n      return 3 + length;\r\n    }\r\n    // bin 32\r\n    if (length < 0x100000000) {\r\n      view.setUint8(offset, 0xc6);\r\n      view.setUint32(offset + 1, length);\r\n      bytes.set(value, offset + 5);\r\n      return 5 + length;\r\n    }\r\n  }\r\n\r\n  if (type === \"number\") {\r\n    if (!isFinite(value)) {\r\n        throw new Error(\"Number not finite: \" + value);\r\n    }\r\n\r\n    // Floating point\r\n    if (Math.floor(value) !== value) {\r\n      view.setUint8(offset, 0xcb);\r\n      view.setFloat64(offset + 1, value);\r\n      return 9;\r\n    }\r\n\r\n    // Integers\r\n    if (value >=0) {\r\n      // positive fixnum\r\n      if (value < 0x80) {\r\n        view.setUint8(offset, value);\r\n        return 1;\r\n      }\r\n      // uint 8\r\n      if (value < 0x100) {\r\n        view.setUint8(offset, 0xcc);\r\n        view.setUint8(offset + 1, value);\r\n        return 2;\r\n      }\r\n      // uint 16\r\n      if (value < 0x10000) {\r\n        view.setUint8(offset, 0xcd);\r\n        view.setUint16(offset + 1, value);\r\n        return 3;\r\n      }\r\n      // uint 32\r\n      if (value < 0x100000000) {\r\n        view.setUint8(offset, 0xce);\r\n        view.setUint32(offset + 1, value);\r\n        return 5;\r\n      }\r\n      throw new Error(\"Number too big 0x\" + value.toString(16));\r\n    }\r\n    // negative fixnum\r\n    if (value >= -0x20) {\r\n      view.setInt8(offset, value);\r\n      return 1;\r\n    }\r\n    // int 8\r\n    if (value >= -0x80) {\r\n      view.setUint8(offset, 0xd0);\r\n      view.setInt8(offset + 1, value);\r\n      return 2;\r\n    }\r\n    // int 16\r\n    if (value >= -0x8000) {\r\n      view.setUint8(offset, 0xd1);\r\n      view.setInt16(offset + 1, value);\r\n      return 3;\r\n    }\r\n    // int 32\r\n    if (value >= -0x80000000) {\r\n      view.setUint8(offset, 0xd2);\r\n      view.setInt32(offset + 1, value);\r\n      return 5;\r\n    }\r\n    throw new Error(\"Number too small -0x\" + (-value).toString(16).substr(1));\r\n  }\r\n\r\n  // null\r\n  if (value === null) {\r\n    view.setUint8(offset, 0xc0);\r\n    return 1;\r\n  }\r\n\r\n  // Boolean\r\n  if (type === \"boolean\") {\r\n    view.setUint8(offset, value ? 0xc3 : 0xc2);\r\n    return 1;\r\n  }\r\n\r\n  // Container Types\r\n  if (type === \"object\") {\r\n    var length, size = 0;\r\n    var isArray = Array.isArray(value);\r\n\r\n    if (isArray) {\r\n      length = value.length;\r\n    }\r\n    else {\r\n      var keys = Object.keys(value);\r\n      length = keys.length;\r\n    }\r\n\r\n    var size;\r\n    if (length < 0x10) {\r\n      view.setUint8(offset, length | (isArray ? 0x90 : 0x80));\r\n      size = 1;\r\n    }\r\n    else if (length < 0x10000) {\r\n      view.setUint8(offset, isArray ? 0xdc : 0xde);\r\n      view.setUint16(offset + 1, length);\r\n      size = 3;\r\n    }\r\n    else if (length < 0x100000000) {\r\n      view.setUint8(offset, isArray ? 0xdd : 0xdf);\r\n      view.setUint32(offset + 1, length);\r\n      size = 5;\r\n    }\r\n\r\n    if (isArray) {\r\n      for (var i = 0; i < length; i++) {\r\n        size += encode$1(value[i], view, offset + size);\r\n      }\r\n    }\r\n    else {\r\n      for (var i = 0; i < length; i++) {\r\n        var key = keys[i];\r\n        size += encode$1(key, view, offset + size);\r\n        size += encode$1(value[key], view, offset + size);\r\n      }\r\n    }\r\n\r\n    return size;\r\n  }\r\n  throw new Error(\"Unknown type \" + type);\r\n}\r\n\r\nfunction encodedSize(value) {\r\n  var type = typeof value;\r\n\r\n  // Raw Bytes\r\n  if (type === \"string\") {\r\n    var length = utf8ByteCount(value);\r\n    if (length < 0x20) {\r\n      return 1 + length;\r\n    }\r\n    if (length < 0x100) {\r\n      return 2 + length;\r\n    }\r\n    if (length < 0x10000) {\r\n      return 3 + length;\r\n    }\r\n    if (length < 0x100000000) {\r\n      return 5 + length;\r\n    }\r\n  }\r\n\r\n  if (value instanceof Uint8Array) {\r\n    var length = value.byteLength;\r\n    if (length < 0x100) {\r\n      return 2 + length;\r\n    }\r\n    if (length < 0x10000) {\r\n      return 3 + length;\r\n    }\r\n    if (length < 0x100000000) {\r\n      return 5 + length;\r\n    }\r\n  }\r\n\r\n  if (type === \"number\") {\r\n    // Floating Point\r\n    // double\r\n    if (Math.floor(value) !== value) return 9;\r\n\r\n    // Integers\r\n    if (value >=0) {\r\n      // positive fixnum\r\n      if (value < 0x80) return 1;\r\n      // uint 8\r\n      if (value < 0x100) return 2;\r\n      // uint 16\r\n      if (value < 0x10000) return 3;\r\n      // uint 32\r\n      if (value < 0x100000000) return 5;\r\n      throw new Error(\"Number too big 0x\" + value.toString(16));\r\n    }\r\n    // negative fixnum\r\n    if (value >= -0x20) return 1;\r\n    // int 8\r\n    if (value >= -0x80) return 2;\r\n    // int 16\r\n    if (value >= -0x8000) return 3;\r\n    // int 32\r\n    if (value >= -0x80000000) return 5;\r\n    throw new Error(\"Number too small -0x\" + value.toString(16).substr(1));\r\n  }\r\n\r\n  // Boolean, null\r\n  if (type === \"boolean\" || value === null) return 1;\r\n\r\n  // Container Types\r\n  if (type === \"object\") {\r\n    var length, size = 0;\r\n    if (Array.isArray(value)) {\r\n      length = value.length;\r\n      for (var i = 0; i < length; i++) {\r\n        size += encodedSize(value[i]);\r\n      }\r\n    }\r\n    else {\r\n      var keys = Object.keys(value);\r\n      length = keys.length;\r\n      for (var i = 0; i < length; i++) {\r\n        var key = keys[i];\r\n        size += encodedSize(key) + encodedSize(value[key]);\r\n      }\r\n    }\r\n    if (length < 0x10) {\r\n      return 1 + size;\r\n    }\r\n    if (length < 0x10000) {\r\n      return 3 + size;\r\n    }\r\n    if (length < 0x100000000) {\r\n      return 5 + size;\r\n    }\r\n    throw new Error(\"Array or object too long 0x\" + length.toString(16));\r\n  }\r\n  throw new Error(\"Unknown type \" + type);\r\n}\r\n\r\nfunction encodeMsgpack(value) {\r\n  var buffer = new ArrayBuffer(encodedSize(value));\r\n  var view = new DataView(buffer);\r\n  encode$1(value, view, 0);\r\n  return new Uint8Array(buffer);\r\n}\r\n\r\n/**\r\n * @file mmtf-constants\r\n * @private\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\n\r\n\r\nvar PassThroughFields = [\r\n    \"mmtfVersion\", \"mmtfProducer\",\r\n    \"unitCell\", \"spaceGroup\", \"structureId\", \"title\",\r\n    \"depositionDate\", \"releaseDate\",\r\n    \"experimentalMethods\", \"resolution\", \"rFree\", \"rWork\",\r\n    \"bioAssemblyList\", \"ncsOperatorList\", \"entityList\", \"groupList\",\r\n    \"numBonds\", \"numAtoms\", \"numGroups\", \"numChains\", \"numModels\",\r\n    \"groupsPerChain\", \"chainsPerModel\",\r\n];\r\n\r\nvar EncodedFields = [\r\n\t// required\r\n    \"xCoordList\", \"yCoordList\", \"zCoordList\",\r\n    \"groupIdList\", \"groupTypeList\",\r\n    \"chainIdList\",\r\n    // optional\r\n    \"bFactorList\", \"atomIdList\", \"altLocList\", \"occupancyList\",\r\n    \"secStructList\", \"insCodeList\", \"sequenceIndexList\",\r\n    \"chainNameList\",\r\n    \"bondAtomList\", \"bondOrderList\"\r\n];\r\n\r\nvar AllFields = PassThroughFields.concat( EncodedFields );\r\n\r\n/**\r\n * @file mmtf-utils\r\n * @private\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\n\r\n/**\r\n * mmtf utils module.\r\n * @module MmtfUtils\r\n */\r\n\r\n\r\nfunction getView( ctor, typedArray, elemSize ){\r\n    return typedArray ? new ctor(\r\n        typedArray.buffer,\r\n        typedArray.byteOffset,\r\n        typedArray.byteLength / ( elemSize || 1 )\r\n    ) : undefined;\r\n}\r\n\r\nfunction getDataView( typedArray ){\r\n    return getView( DataView, typedArray );\r\n}\r\n\r\n/**\r\n * get an Uint8Array view on the input array memory\r\n * @static\r\n * @param  {TypedArray} dataArray - input array\r\n * @return {Uint8Array} new view on the input array memory\r\n */\r\nfunction getUint8View( typedArray ){\r\n    return getView( Uint8Array, typedArray );\r\n}\r\n\r\n/**\r\n * get an Int8Array view on the input array memory\r\n * @static\r\n * @param  {TypedArray} dataArray - input array\r\n * @return {Int8Array} new view on the input array memory\r\n */\r\nfunction getInt8View( typedArray ){\r\n    return getView( Int8Array, typedArray );\r\n}\r\n\r\n/**\r\n * get an Int32Array view on the input array memory\r\n * @static\r\n * @param  {TypedArray} dataArray - input array\r\n * @return {Int32Array} new view on the input array memory\r\n */\r\nfunction getInt32View( typedArray ){\r\n    return getView( Int32Array, typedArray, 4 );\r\n}\r\n\r\nfunction getFloat32View( typedArray ){\r\n    return getView( Float32Array, typedArray, 4 );\r\n}\r\n\r\n\r\n/**\r\n * get an Int16Array copy of the the input array data\r\n * @static\r\n * @param  {TypedArray} view - input data in big endian format\r\n * @param  {Int16Array} [dataArray] - pre-allocated output array\r\n * @return {Int16Array} copy of the input array data\r\n */\r\nfunction decodeInt16( bytes, output ){\r\n    var n = bytes.length / 2;\r\n    if( !output ) output = new Int16Array( n );\r\n    for( var i = 0, i2 = 0; i < n; ++i, i2 += 2 ){\r\n        output[ i ] = bytes[ i2 ] << 8 ^ bytes[ i2 + 1 ] << 0;\r\n    }\r\n    return output;\r\n}\r\n\r\n/**\r\n * make big endian buffer of an int16 array\r\n * @static\r\n * @param  {Array|TypedArray} array - array of int16 values\r\n * @return {ArrayBuffer} big endian buffer\r\n */\r\nfunction encodeInt16( array, output ){\r\n    var n = array.length;\r\n    if( !output ) output = new Uint8Array( 2 * n );\r\n    var dv = getDataView( output );\r\n    for( var i = 0; i < n; ++i ){\r\n        dv.setInt16( 2 * i, array[ i ] );\r\n    }\r\n    return getUint8View( output );\r\n}\r\n\r\n/**\r\n * get an Int32Array copy of the the input array data\r\n * @static\r\n * @param  {TypedArray} view - input data in big endian format\r\n * @param  {Int32Array} [dataArray] - pre-allocated output array\r\n * @return {Int32Array} copy of the input array data\r\n */\r\nfunction decodeInt32( bytes, output ){\r\n    var n = bytes.length / 4;\r\n    if( !output ) output = new Int32Array( n );\r\n    for( var i = 0, i4 = 0; i < n; ++i, i4 += 4 ){\r\n        output[ i ] = (\r\n            bytes[ i4     ] << 24 ^ bytes[ i4 + 1 ] << 16 ^\r\n            bytes[ i4 + 2 ] <<  8 ^ bytes[ i4 + 3 ] <<  0\r\n        );\r\n    }\r\n    return output;\r\n}\r\n\r\n/**\r\n * make big endian buffer of an int32 array\r\n * @static\r\n * @param  {Array|TypedArray} array - array of int32 values\r\n * @return {ArrayBuffer} big endian buffer\r\n */\r\nfunction encodeInt32( array, output ){\r\n    var n = array.length;\r\n    if( !output ) output = new Uint8Array( 4 * n );\r\n    var dv = getDataView( output );\r\n    for( var i = 0; i < n; ++i ){\r\n        dv.setInt32( 4 * i, array[ i ] );\r\n    }\r\n    return getUint8View( output );\r\n}\r\n\r\nfunction decodeFloat32( bytes, output ){\r\n    var n = bytes.length;\r\n    if( !output ) output = new Float32Array( n / 4 );\r\n    var dvOut = getDataView( output );\r\n    var dvIn = getDataView( bytes );\r\n    for( var i = 0, i4 = 0, il = n / 4; i < il; ++i, i4 += 4 ){\r\n        dvOut.setFloat32( i4, dvIn.getFloat32( i4 ), true );\r\n    }\r\n    return output;\r\n}\r\n\r\n/**\r\n * decode integers into floats using given divisor\r\n * example:\r\n *     intArray: [ 12, 34, 543, 687, 2, 0, 4689 ]\r\n *     divisor: 100\r\n *     return: [ 0.12, 0.34, 5.43, 6.87, 0.02, 0.00, 46.89 ]\r\n * @static\r\n * @param  {TypedArray|Array} intArray - input array containing integers\r\n * @param  {Number} divisor - number to devide the integers to obtain floats\r\n * @param  {Float32Array} [dataArray] - pre-allocated output array\r\n * @return {Float32Array} decoded array\r\n */\r\nfunction decodeInteger( intArray, divisor, output ){\r\n    var n = intArray.length;\r\n    var invDiv = 1/divisor;\r\n    if( !output ) output = new Float32Array( n );\r\n    for( var i = 0; i < n; ++i ){\r\n        // multiply by inverse of the divisor which is faster then division\r\n        output[ i ] = intArray[ i ] * invDiv;\r\n    }\r\n    return output;\r\n}\r\n\r\nfunction encodeInteger( floatArray, factor, output ){\r\n    var n = floatArray.length;\r\n    if( !output ) output = new Int32Array( n );\r\n    for( var i = 0; i < n; ++i ){\r\n        output[ i ] = Math.round( floatArray[ i ] * factor );\r\n    }\r\n    return output;\r\n}\r\n\r\n\r\n\r\n/**\r\n * perform run-length decoding of input array\r\n * example:\r\n *     array: [ 0, 2, 3, 5 ]  // pairs of values and length of a run\r\n *     return: [ 0, 0, 3, 3, 3, 3, 3 ]\r\n * @static\r\n * @param  {TypedArray|Array} array - run-length encoded input array\r\n * @param  {TypedArray|Array} [dataArray] - pre-allocated output array\r\n * @return {TypedArray|Array} decoded array\r\n */\r\nfunction decodeRun( array, output ){\r\n    var i, il;\r\n    if( !output ){\r\n        // calculate the length the decoded array will have\r\n        var fullLength = 0;\r\n        for( i = 0, il = array.length; i < il; i+=2 ){\r\n            fullLength += array[ i + 1 ];\r\n        }\r\n        // create a new array of the same type of the input array\r\n        output = new array.constructor( fullLength );\r\n    }\r\n    var dataOffset = 0;\r\n    for( i = 0, il = array.length; i < il; i+=2 ){\r\n        var value = array[ i ];  // value to be repeated\r\n        var length = array[ i + 1 ];  // number of repeats\r\n        for( var j = 0; j < length; ++j ){\r\n            output[ dataOffset ] = value;\r\n            ++dataOffset;\r\n        }\r\n    }\r\n    return output;\r\n}\r\n\r\nfunction encodeRun( array ){\r\n    if( array.length === 0 ) return new Int32Array();\r\n    var i, il;\r\n    // calculate output size\r\n    var fullLength = 2;\r\n    for( i = 1, il = array.length; i < il; ++i ){\r\n        if( array[ i - 1 ] !== array[ i ] ){\r\n            fullLength += 2;\r\n        }\r\n    }\r\n    var output = new Int32Array( fullLength );\r\n    var offset = 0;\r\n    var runLength = 1;\r\n    for( i = 1, il = array.length; i < il; ++i ){\r\n        if( array[ i - 1 ] !== array[ i ] ){\r\n            output[ offset ] = array[ i - 1 ];\r\n            output[ offset + 1 ] = runLength;\r\n            runLength = 1;\r\n            offset += 2;\r\n        }else{\r\n            ++runLength;\r\n        }\r\n    }\r\n    output[ offset ] = array[ array.length - 1 ];\r\n    output[ offset + 1 ] = runLength;\r\n    return output;\r\n}\r\n\r\n\r\n\r\n/**\r\n * perform delta decoding of the input array\r\n * by iterativly adding the ith element's value to the i+1th\r\n * example:\r\n *     dataArray: [ 0, 2, 1, 2, 1, 1, -4, -2, 9 ]\r\n *     return: [ 0, 2, 3, 5, 6, 7, 3, 1, 10 ]\r\n * @static\r\n * @param  {TypedArray|Array} dataArray - delta encoded input array\r\n * @return {TypedArray|Array} decoded array\r\n */\r\nfunction decodeDelta( array, output ){\r\n    var n = array.length;\r\n    if( !output ) output = new array.constructor( n );\r\n    if( n ) output[ 0 ] = array[ 0 ];\r\n    for( var i = 1; i < n; ++i ){\r\n        output[ i ] = array[ i ] + output[ i - 1 ];\r\n    }\r\n    return output;\r\n}\r\n\r\nfunction encodeDelta( array, output ){\r\n    var n = array.length;\r\n    if( !output ) output = new array.constructor( n );\r\n    output[ 0 ] = array[ 0 ];\r\n    for( var i = 1; i < n; ++i ){\r\n        output[ i ] = array[ i ] - array[ i - 1 ];\r\n    }\r\n    return output;\r\n}\r\n\r\n\r\n\r\n/**\r\n * [decodePacking description]\r\n * @param  {Int16Array|Int8Array} int16or8 [description]\r\n * @param  {Int32Array} output   [description]\r\n * @return {Int32Array}          [description]\r\n */\r\nfunction decodePacking( int16or8, output ){\r\n    var upperLimit = int16or8 instanceof Int8Array ? 0x7F : 0x7FFF;\r\n    var lowerLimit = -upperLimit - 1;\r\n    var n = int16or8.length;\r\n    var i, j;\r\n    if( !output ){\r\n        var fullLength = 0;\r\n        for( i = 0; i < n; ++i ){\r\n            if( int16or8[ i ] < upperLimit && int16or8[ i ] > lowerLimit ){\r\n                ++fullLength;\r\n            }\r\n        }\r\n        output = new Int32Array( fullLength );\r\n    }\r\n    i = 0;\r\n    j = 0;\r\n    while( i < n ){\r\n        var value = 0;\r\n        while( int16or8[ i ] === upperLimit || int16or8[ i ] === lowerLimit ){\r\n            value += int16or8[ i ];\r\n            ++i;\r\n        }\r\n        value += int16or8[ i ];\r\n        ++i;\r\n        output[ j ] = value;\r\n        ++j;\r\n    }\r\n    return output;\r\n}\r\n\r\n/**\r\n * integer packing using recursive indexing\r\n * @param  {Array|TyepedArray} intArray [description]\r\n * @param  {Boolean} useInt8  [description]\r\n * @return {Int16Array|Int8Array}          [description]\r\n */\r\nfunction encodePacking( intArray, useInt8 ){\r\n    var upperLimit = useInt8 ? 0x7F : 0x7FFF;\r\n    var lowerLimit = -upperLimit - 1;\r\n    var i;\r\n    var n = intArray.length;\r\n    var size = 0;\r\n    for( i = 0; i < n; ++i ){\r\n        var value = intArray[ i ];\r\n        if( value === 0 ){\r\n            ++size;\r\n        }else if( value === upperLimit || value === lowerLimit ){\r\n            size += 2;\r\n        }else if( value > 0) {\r\n            size += Math.ceil( value / upperLimit );\r\n        }else {\r\n            size += Math.ceil( value / lowerLimit );\r\n        }\r\n    }\r\n    var output = useInt8 ? new Int8Array( size ) : new Int16Array( size );\r\n    var j = 0;\r\n    for( i = 0; i < n; ++i ){\r\n        var value = intArray[ i ];\r\n        if( value >= 0) {\r\n            while( value >= upperLimit ){\r\n                output[ j ] = upperLimit;\r\n                ++j;\r\n                value -= upperLimit;\r\n            }\r\n        }else{\r\n            while( value <= lowerLimit ){\r\n                output[ j ] = lowerLimit;\r\n                ++j;\r\n                value -= lowerLimit;\r\n            }\r\n        }\r\n        output[ j ] = value;\r\n        ++j;\r\n    }\r\n    return output;\r\n}\r\n\r\n\r\n\r\nfunction decodeDeltaRun( array, output ){\r\n    return decodeDelta( decodeRun( array ), output );\r\n}\r\n\r\nfunction encodeDeltaRun( array ){\r\n    return encodeRun( encodeDelta( array ) );\r\n}\r\n\r\n\r\n\r\n/**\r\n * perform run-length decoding followed (@see decodeRunLength)\r\n * by decoding integers into floats using given divisor (@see decodeIntegerToFloat)\r\n * example:\r\n *     array: [ 320, 3, 100, 2 ]\r\n *     divisor: 100\r\n *     return: [ 3.20, 3.20, 3.20, 1.00, 1.00 ]\r\n * @static\r\n * @param  {Uint8Array} array - run-length encoded int32 array as bytes in big endian format\r\n * @param  {Integer} divisor - number to devide the integers to obtain floats\r\n * @param  {Float32Array} dataArray - pre-allocated output array\r\n * @return {Float32Array} decoded array\r\n */\r\nfunction decodeIntegerRun( intArray, divisor, output ){\r\n    return decodeInteger(\r\n        decodeRun( intArray, getInt32View( output ) ), divisor, output\r\n    );\r\n}\r\n\r\nfunction encodeIntegerRun( floatArray, factor ){\r\n    return encodeRun( encodeInteger( floatArray, factor ) );\r\n}\r\n\r\n\r\n\r\nfunction decodeIntegerDelta( intArray, divisor, output ){\r\n    return decodeInteger(\r\n        decodeDelta( intArray, getInt32View( output ) ), divisor, output\r\n    );\r\n}\r\n\r\nfunction encodeIntegerDelta( floatArray, factor, output ){\r\n    return encodeDelta( encodeInteger( floatArray, factor ), output );\r\n}\r\n\r\n\r\n\r\nfunction decodeIntegerPacking( int16or8, divisor, output ){\r\n    return decodeInteger(\r\n        decodePacking( int16or8, getInt32View( output ) ), divisor, output\r\n    );\r\n}\r\n\r\nfunction decodeIntegerDeltaPacking( int16or8, divisor, output ){\r\n    var unpacked = decodePacking( int16or8, getInt32View( output ) );\r\n    return decodeIntegerDelta( unpacked, divisor, getFloat32View( unpacked ) );\r\n}\r\n\r\nfunction encodeIntegerDeltaPacking( floatArray, factor, useInt8 ){\r\n    return encodePacking( encodeIntegerDelta( floatArray, factor ), useInt8 );\r\n}\r\n\r\n\r\n\r\nfunction decodeBytes( bytes ){\r\n    var dv = getDataView( bytes );\r\n    var type = dv.getInt32( 0 );\r\n    var size = dv.getInt32( 4 );\r\n    var param = bytes.subarray( 8, 12 );\r\n    var bytes = bytes.subarray( 12 );\r\n    return [ type, bytes, size, param ];\r\n}\r\n\r\nfunction encodeBytes( type, size, param, bytes ){\r\n    var buffer = new ArrayBuffer( 12 + bytes.byteLength );\r\n    var out = new Uint8Array( buffer );\r\n    var dv = new DataView( buffer );\r\n    dv.setInt32( 0, type );\r\n    dv.setInt32( 4, size );\r\n    if( param ) out.set( param, 8 );\r\n    out.set( bytes, 12 );\r\n    return out;\r\n}\r\n\r\nfunction passInt8( int8 ){\r\n    var size = int8.length;\r\n    var bytes = getUint8View( int8 );\r\n    return encodeBytes( 2, size, undefined, bytes );\r\n}\r\n\r\nfunction passInt32( int32 ){\r\n    var size = int32.length;\r\n    var bytes = encodeInt32( int32 );\r\n    return encodeBytes( 4, size, undefined, bytes );\r\n}\r\n\r\nfunction passString( stringBytes, length ){\r\n    var size = stringBytes.length / length;\r\n    var param = encodeInt32([ length ]);\r\n    var bytes = getUint8View( stringBytes );\r\n    return encodeBytes( 5, size, param, bytes );\r\n}\r\n\r\nfunction runChar( charBytes ){\r\n    var size = charBytes.length;\r\n    var bytes = encodeInt32( encodeRun( charBytes ) );\r\n    return encodeBytes( 6, size, undefined, bytes );\r\n}\r\n\r\nfunction deltaRun( int32 ){\r\n    var size = int32.length;\r\n    var bytes = encodeInt32( encodeDeltaRun( int32 ) );\r\n    return encodeBytes( 8, size, undefined, bytes );\r\n}\r\n\r\nfunction integerRun( float32, factor ){\r\n    var size = float32.length;\r\n    var param = encodeInt32([ factor ]);\r\n    var bytes = encodeInt32( encodeIntegerRun( float32, factor ) );\r\n    return encodeBytes( 9, size, param, bytes );\r\n}\r\n\r\nfunction integerDeltaPacking16( float32, factor ){\r\n    var size = float32.length;\r\n    var param = encodeInt32([ factor ]);\r\n    var bytes = encodeInt16( encodeIntegerDeltaPacking( float32, factor ) );\r\n    return encodeBytes( 10, size, param, bytes );\r\n}\r\n\r\nfunction encodeMmtf( inputDict ){\r\n\r\n    var outputDict = {};\r\n\r\n    // copy some fields over from the input dict\r\n    PassThroughFields.forEach( function( name ){\r\n        if( inputDict[ name ] !== undefined ){\r\n            outputDict[ name ] = inputDict[ name ];\r\n        }\r\n    } );\r\n\r\n    //////////////\r\n    // bond data\r\n\r\n    // encode inter group bond atom indices, i.e. get bytes in big endian order\r\n    if( inputDict.bondAtomList ){\r\n        outputDict.bondAtomList = passInt32( inputDict.bondAtomList );\r\n    }\r\n\r\n    // encode inter group bond orders, i.e. get bytes\r\n    if( inputDict.bondOrderList ){\r\n        outputDict.bondOrderList = passInt8( inputDict.bondOrderList );\r\n    }\r\n\r\n    //////////////\r\n    // atom data\r\n\r\n    // split-list delta & integer encode x, y, z atom coords\r\n    outputDict.xCoordList = integerDeltaPacking16( inputDict.xCoordList, 1000 );\r\n    outputDict.yCoordList = integerDeltaPacking16( inputDict.yCoordList, 1000 );\r\n    outputDict.zCoordList = integerDeltaPacking16( inputDict.zCoordList, 1000 );\r\n\r\n    // split-list delta & integer encode b-factors\r\n    if( inputDict.bFactorList ){\r\n        outputDict.bFactorList = integerDeltaPacking16( inputDict.bFactorList, 100 );\r\n    }\r\n\r\n    // delta & run-length encode atom ids\r\n    if( inputDict.atomIdList ){\r\n        outputDict.atomIdList = deltaRun( inputDict.atomIdList );\r\n    }\r\n\r\n    // run-length encode alternate labels\r\n    if( inputDict.altLocList ){\r\n        outputDict.altLocList = runChar( inputDict.altLocList );\r\n    }\r\n\r\n    // run-length & integer encode occupancies\r\n    if( inputDict.occupancyList ){\r\n        outputDict.occupancyList = integerRun( inputDict.occupancyList, 100 );\r\n    }\r\n\r\n    ///////////////\r\n    // group data\r\n\r\n    // run-length & delta encode group numbers\r\n    outputDict.groupIdList = deltaRun( inputDict.groupIdList );\r\n\r\n    // encode group types, i.e. get int32 array\r\n    outputDict.groupTypeList = passInt32( inputDict.groupTypeList );\r\n\r\n    // encode secondary structure, i.e. get bytes\r\n    if( inputDict.secStructList ){\r\n        outputDict.secStructList = passInt8( inputDict.secStructList, 1 );\r\n    }\r\n\r\n    // run-length encode insertion codes\r\n    if( inputDict.insCodeList ){\r\n        outputDict.insCodeList = runChar( inputDict.insCodeList );\r\n    }\r\n\r\n    // run-length & delta encode sequence indices\r\n    if( inputDict.sequenceIndexList ){\r\n        outputDict.sequenceIndexList = deltaRun( inputDict.sequenceIndexList );\r\n    }\r\n\r\n    ///////////////\r\n    // chain data\r\n\r\n    // encode chain ids, i.e. get bytes\r\n    outputDict.chainIdList = passString( inputDict.chainIdList, 4 );\r\n\r\n    // encode chain names, i.e. get bytes\r\n    if( inputDict.chainNameList ){\r\n        outputDict.chainNameList = passString( inputDict.chainNameList, 4 );\r\n    }\r\n\r\n    return outputDict;\r\n\r\n}\r\n\r\n/**\r\n * @file msgpack-decode\r\n * @private\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\n\r\n/**\r\n * msgpack decode module.\r\n * @module MsgpackDecode\r\n */\r\n\r\n/**\r\n * decode binary encoded MessagePack v5 (http://msgpack.org/) data\r\n * @static\r\n * @param  {Uint8Array} buffer - binary encoded MessagePack data\r\n * @return {Object|Array|String|Number|Boolean|null} decoded Messagepack data\r\n */\r\nfunction decodeMsgpack(buffer) {\r\n  // Loosely based on\r\n  // The MIT License (MIT)\r\n  // Copyright (c) 2013 Tim Caswell <tim@creationix.com>\r\n  // https://github.com/creationix/msgpack-js\r\n  var offset = 0;\r\n  var dataView = new DataView(buffer.buffer);\r\n\r\n  /**\r\n   * decode all key-value pairs of a map into an object\r\n   * @param  {Integer} length - number of key-value pairs\r\n   * @return {Object} decoded map\r\n   */\r\n  function map(length) {\r\n    var value = {};\r\n    for (var i = 0; i < length; i++) {\r\n      var key = parse();\r\n      value[key] = parse();\r\n    }\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * decode binary array\r\n   * @param  {Integer} length - number of elements in the array\r\n   * @return {Uint8Array} decoded array\r\n   */\r\n  function bin(length) {\r\n    var value = buffer.subarray(offset, offset + length);\r\n    offset += length;\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * decode string\r\n   * @param  {Integer} length - number string characters\r\n   * @return {String} decoded string\r\n   */\r\n  function str(length) {\r\n    var array = buffer.subarray(offset, offset + length);\r\n    offset += length;\r\n    // limit number of arguments to String.fromCharCode to something\r\n    // browsers can handle, see http://stackoverflow.com/a/22747272\r\n    var chunkSize = 0xffff;\r\n    if(length > chunkSize){\r\n      var c = [];\r\n      for(var i = 0; i < array.length; i += chunkSize) {\r\n        c.push(String.fromCharCode.apply(\r\n          null, array.subarray(i, i + chunkSize)\r\n        ));\r\n      }\r\n      return c.join(\"\");\r\n    }else{\r\n      return String.fromCharCode.apply(null, array);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * decode array\r\n   * @param  {Integer} length - number of array elements\r\n   * @return {Array} decoded array\r\n   */\r\n  function array(length) {\r\n    var value = new Array(length);\r\n    for (var i = 0; i < length; i++) {\r\n      value[i] = parse();\r\n    }\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * recursively parse the MessagePack data\r\n   * @return {Object|Array|String|Number|Boolean|null} decoded MessagePack data\r\n   */\r\n  function parse() {\r\n    var type = buffer[offset];\r\n    var value, length, extType;\r\n    // Positive FixInt\r\n    if ((type & 0x80) === 0x00) {\r\n      offset++;\r\n      return type;\r\n    }\r\n    // FixMap\r\n    if ((type & 0xf0) === 0x80) {\r\n      length = type & 0x0f;\r\n      offset++;\r\n      return map(length);\r\n    }\r\n    // FixArray\r\n    if ((type & 0xf0) === 0x90) {\r\n      length = type & 0x0f;\r\n      offset++;\r\n      return array(length);\r\n    }\r\n    // FixStr\r\n    if ((type & 0xe0) === 0xa0) {\r\n      length = type & 0x1f;\r\n      offset++;\r\n      return str(length);\r\n    }\r\n    // Negative FixInt\r\n    if ((type & 0xe0) === 0xe0) {\r\n      value = dataView.getInt8(offset);\r\n      offset++;\r\n      return value;\r\n    }\r\n    switch (type) {\r\n    // nil\r\n    case 0xc0:\r\n      offset++;\r\n      return null;\r\n    // 0xc1: (never used, could be employed for padding)\r\n    // false\r\n    case 0xc2:\r\n      offset++;\r\n      return false;\r\n    // true\r\n    case 0xc3:\r\n      offset++;\r\n      return true;\r\n    // bin 8\r\n    case 0xc4:\r\n      length = dataView.getUint8(offset + 1);\r\n      offset += 2;\r\n      return bin(length);\r\n    // bin 16\r\n    case 0xc5:\r\n      length = dataView.getUint16(offset + 1);\r\n      offset += 3;\r\n      return bin(length);\r\n    // bin 32\r\n    case 0xc6:\r\n      length = dataView.getUint32(offset + 1);\r\n      offset += 5;\r\n      return bin(length);\r\n    // // ext 8\r\n    // case 0xc7:\r\n    //   length = dataView.getUint8(offset + 1);\r\n    //   extType = dataView.getUint8(offset + 2);\r\n    //   offset += 3;\r\n    //   return [extType, bin(length)];\r\n    // // ext 16\r\n    // case 0xc8:\r\n    //   length = dataView.getUint16(offset + 1);\r\n    //   extType = dataView.getUint8(offset + 3);\r\n    //   offset += 4;\r\n    //   return [extType, bin(length)];\r\n    // // ext 32\r\n    // case 0xc9:\r\n    //   length = dataView.getUint32(offset + 1);\r\n    //   extType = dataView.getUint8(offset + 5);\r\n    //   offset += 6;\r\n    //   return [extType, bin(length)];\r\n    // float 32\r\n    case 0xca:\r\n      value = dataView.getFloat32(offset + 1);\r\n      offset += 5;\r\n      return value;\r\n    // float 64\r\n    case 0xcb:\r\n      value = dataView.getFloat64(offset + 1);\r\n      offset += 9;\r\n      return value;\r\n    // uint8\r\n    case 0xcc:\r\n      value = buffer[offset + 1];\r\n      offset += 2;\r\n      return value;\r\n    // uint 16\r\n    case 0xcd:\r\n      value = dataView.getUint16(offset + 1);\r\n      offset += 3;\r\n      return value;\r\n    // uint 32\r\n    case 0xce:\r\n      value = dataView.getUint32(offset + 1);\r\n      offset += 5;\r\n      return value;\r\n    // // uint64\r\n    // case 0xcf:\r\n    //   // FIXME not available/representable in JS\r\n    //   // largest possible int in JS is 2^53\r\n    //   // value = dataView.getUint64(offset + 1);\r\n    //   offset += 9;\r\n    //   return 0;\r\n    // int 8\r\n    case 0xd0:\r\n      value = dataView.getInt8(offset + 1);\r\n      offset += 2;\r\n      return value;\r\n    // int 16\r\n    case 0xd1:\r\n      value = dataView.getInt16(offset + 1);\r\n      offset += 3;\r\n      return value;\r\n    // int 32\r\n    case 0xd2:\r\n      value = dataView.getInt32(offset + 1);\r\n      offset += 5;\r\n      return value;\r\n    // // int 64\r\n    // case 0xd3:\r\n    //   // FIXME not available/representable in JS\r\n    //   // largest possible int in JS is 2^53\r\n    //   // value = dataView.getInt64(offset + 1);\r\n    //   offset += 9;\r\n    //   return 0;\r\n\r\n    // // fixext 1\r\n    // case 0xd4:\r\n    //   extType = dataView.getUint8(offset + 1);\r\n    //   offset += 2;\r\n    //   return [extType, bin(1)];\r\n    // // fixext 2\r\n    // case 0xd5:\r\n    //   extType = dataView.getUint8(offset + 1);\r\n    //   offset += 2;\r\n    //   return [extType, bin(2)];\r\n    // // fixext 4\r\n    // case 0xd6:\r\n    //   extType = dataView.getUint8(offset + 1);\r\n    //   offset += 2;\r\n    //   return [extType, bin(4)];\r\n    // // fixext 8\r\n    // case 0xd7:\r\n    //   extType = dataView.getUint8(offset + 1);\r\n    //   offset += 2;\r\n    //   return [extType, bin(8)];\r\n    // // fixext 16\r\n    // case 0xd8:\r\n    //   extType = dataView.getUint8(offset + 1);\r\n    //   offset += 2;\r\n    //   return [extType, bin(16)];\r\n    // str 8\r\n    case 0xd9:\r\n      length = dataView.getUint8(offset + 1);\r\n      offset += 2;\r\n      return str(length);\r\n    // str 16\r\n    case 0xda:\r\n      length = dataView.getUint16(offset + 1);\r\n      offset += 3;\r\n      return str(length);\r\n    // str 32\r\n    case 0xdb:\r\n      length = dataView.getUint32(offset + 1);\r\n      offset += 5;\r\n      return str(length);\r\n    // array 16\r\n    case 0xdc:\r\n      length = dataView.getUint16(offset + 1);\r\n      offset += 3;\r\n      return array(length);\r\n    // array 32\r\n    case 0xdd:\r\n      length = dataView.getUint32(offset + 1);\r\n      offset += 5;\r\n      return array(length);\r\n    // map 16:\r\n    case 0xde:\r\n      length = dataView.getUint16(offset + 1);\r\n      offset += 3;\r\n      return map(length);\r\n    // map 32\r\n    case 0xdf:\r\n      length = dataView.getUint32(offset + 1);\r\n      offset += 5;\r\n      return map(length);\r\n    }\r\n\r\n    throw new Error(\"Unknown type 0x\" + type.toString(16));\r\n  }\r\n\r\n  // start the recursive parsing\r\n  return parse();\r\n}\r\n\r\n/**\r\n * Fields shared in encoded and decoded mmtf data objects.\r\n * @typedef {Object} module:MmtfDecode.SharedMmtfData\r\n * @property {String} mmtfVersion - MMTF specification version\r\n * @property {String} mmtfProducer - Program that created the file\r\n * @property {Float[]} [unitCell] - Crystallographic unit cell\r\n * @property {Float} unitCell.0 - x length\r\n * @property {Float} unitCell.1 - y length\r\n * @property {Float} unitCell.2 - z length\r\n * @property {Float} unitCell.3 - alpha angle\r\n * @property {Float} unitCell.4 - beta angle\r\n * @property {Float} unitCell.5 - gamma angle\r\n * @property {String} [spaceGroup] - Hermann-Mauguin symbol\r\n * @property {String} [structureId] - Some reference, e.g. a PDB ID\r\n * @property {String} [title] - Short description\r\n * @property {String} [depositionDate] - Deposition date in YYYY-MM-DD format\r\n * @property {String} [releaseDate] - Release date in YYYY-MM-DD format\r\n * @property {String[]} [experimentalMethods] - Structure determination methods\r\n * @property {Float} [resolution] - Resolution in Å\r\n * @property {Float} [rFree] - R-free value\r\n * @property {Float} [rWork] - R-work value\r\n * @property {Integer} numBonds - Number of bonds\r\n * @property {Integer} numAtoms - Number of atoms\r\n * @property {Integer} numGroups - Number of groups (residues)\r\n * @property {Integer} numChains - Number of chains\r\n * @property {Integer} numModels - Number of models\r\n * @property {Integer[]} chainsPerModel - List of number of chains in each model\r\n * @property {Integer[]} groupsPerChain - List of number of groups in each chain\r\n * @property {Entity[]} [entityList] - List of entity objects\r\n * @property {Integer[]} entityList.chainIndexList - Pointers into chain data fields\r\n * @property {String} entityList.description - Description of the entity\r\n * @property {String} entityList.type - Name of the entity type\r\n * @property {String} entityList.sequence - One letter code sequence\r\n * @property {Assembly[]} [bioAssemblyList] - List of assembly objects\r\n * @property {Transform[]} bioAssemblyList.transformList - List of transform objects\r\n * @property {Integer[]} bioAssemblyList.transformList.chainIndexList - Pointers into chain data fields\r\n * @property {Float[]} bioAssemblyList.transformList.matrix - 4x4 transformation matrix\r\n * @property {Array[]} [ncsOperatorList] - List of ncs operator matrices\r\n * @property {Float[]} ncsOperatorList. - 4x4 transformation matrix\r\n * @property {GroupType[]} groupList - List of groupType objects\r\n * @property {Integer[]} groupList.formalChargeList - List of atom formal charges\r\n * @property {String[]} groupList.elementList - List of elements\r\n * @property {String[]} groupList.atomNameList - List of atom names\r\n * @property {Integer[]} groupList.bondAtomList - List of bonded atom indices\r\n * @property {Integer[]} groupList.bondOrderList - List of bond orders\r\n * @property {String} groupList.groupName - The name of the group\r\n * @property {String} groupList.singleLetterCode - The single letter code\r\n * @property {String} groupList.chemCompType -  The chemical component type\r\n */\r\n\r\n/**\r\n * Encoded mmtf data object. Also includes the fields from {@link module:MmtfDecode.SharedMmtfData}. See MMTF specification on how they are encoded.\r\n * @typedef {Object} module:MmtfDecode.EncodedMmtfData\r\n * @mixes module:MmtfDecode.SharedMmtfData\r\n * @property {Uint8Array} [bondAtomList] - Encoded bonded atom indices\r\n * @property {Uint8Array} [bondOrderList] - Encoded bond orders\r\n * @property {Uint8Array} xCoordBig - Encoded x coordinates in Å, part 1\r\n * @property {Uint8Array} xCoordSmall - Encoded x coordinates in Å, part 2\r\n * @property {Uint8Array} yCoordBig - Encoded y coordinates in Å, part 1\r\n * @property {Uint8Array} yCoordSmall - Encoded y coordinates in Å, part 2\r\n * @property {Uint8Array} yCoordBig - Encoded y coordinates in Å, part 1\r\n * @property {Uint8Array} yCoordSmall - Encoded y coordinates in Å, part 2\r\n * @property {Uint8Array} [bFactorBig] - Encoded B-factors in Å^2, part 1\r\n * @property {Uint8Array} [bFactorSmall] - Encoded B-factors in Å^2, part 2\r\n * @property {Uint8Array} [atomIdList] - Encoded  atom ids\r\n * @property {Uint8Array} [altLocList] - Encoded alternate location labels\r\n * @property {Uint8Array} [occupancyList] - Encoded occupancies\r\n * @property {Uint8Array} groupIdList - Encoded group ids\r\n * @property {Uint8Array} groupTypeList - Encoded group types\r\n * @property {Uint8Array} [secStructList] - Encoded secondary structure codes\r\n * @property {Uint8Array} [insCodeList] - Encoded insertion codes\r\n * @property {Uint8Array} [seuenceIdList] - Encoded sequence ids\r\n * @property {Uint8Array} chainIdList - Encoded chain ids\r\n * @property {Uint8Array} [chainNameList] - Encoded chain names\r\n */\r\n\r\n/**\r\n * Decoded mmtf data object. Also includes fields the from {@link module:MmtfDecode.SharedMmtfData}.\r\n * @typedef {Object} module:MmtfDecode.MmtfData\r\n * @mixes module:MmtfDecode.SharedMmtfData\r\n * @property {Int32Array} [bondAtomList] - List of bonded atom indices\r\n * @property {Uint8Array} [bondOrderList] - List of bond orders\r\n * @property {Float32Array} xCoordList - List of x coordinates in Å\r\n * @property {Float32Array} yCoordList - List of y coordinates in Å\r\n * @property {Float32Array} zCoordList - List of z coordinates in Å\r\n * @property {Float32Array} [bFactorList] - List of B-factors in Å^2\r\n * @property {Int32Array} [atomIdList] - List of atom ids\r\n * @property {Uint8Array} [altLocList] - List of alternate location labels\r\n * @property {Float32Array} [occupancyList] - List of occupancies\r\n * @property {Int32Array} groupIdList - List of group ids\r\n * @property {Int32Array} groupTypeList - List of group types\r\n * @property {Int8Array} [secStructList] - List of secondary structure codes, encoding\r\n *    0: pi helix, 1: bend, 2: alpha helix, 3: extended,\r\n *    4: 3-10 helix, 5: bridge, 6: turn, 7: coil, -1: undefined\r\n * @property {Uint8Array} [insCodeList] - List of insertion codes\r\n * @property {Int32Array} [seuenceIdList] - List of sequence ids\r\n * @property {Uint8Array} chainIdList - List of chain ids\r\n * @property {Uint8Array} [chainNameList] - List of chain names\r\n */\r\n\r\n\r\n/**\r\n * [performDecoding description]\r\n * @param  {Integer} bytes [description]\r\n * @param  {Integer} size  [description]\r\n * @param  {Uint8Array} param [description]\r\n * @return {TypedArray}       [description]\r\n */\r\nfunction performDecoding( type, bytes, size, param ){\r\n\r\n    switch( type ){\r\n        case 1:\r\n            return decodeFloat32( bytes );\r\n        case 2:\r\n            return getInt8View( bytes );\r\n        case 3:\r\n            return decodeInt16( bytes );\r\n        case 4:\r\n            return decodeInt32( bytes );\r\n        case 5:\r\n            // var length = decodeInt32( param )[ 0 ];\r\n            return getUint8View( bytes );  // interpret as string array\r\n        case 6:\r\n            // interpret as char array\r\n            return decodeRun( decodeInt32( bytes ), new Uint8Array( size ) );\r\n        case 7:\r\n            return decodeRun( decodeInt32( bytes ) )\r\n        case 8:\r\n            return decodeDeltaRun( decodeInt32( bytes ) );\r\n        case 9:\r\n            return decodeIntegerRun( decodeInt32( bytes ), decodeInt32( param )[ 0 ] );\r\n        case 10:\r\n            return decodeIntegerDeltaPacking( decodeInt16( bytes ), decodeInt32( param )[ 0 ] );\r\n        case 11:\r\n            return decodeInteger( decodeInt16( bytes ), decodeInt32( param )[ 0 ] );\r\n        case 12:\r\n            return decodeIntegerPacking( decodeInt16( bytes ), decodeInt32( param )[ 0 ] );\r\n        case 13:\r\n            return decodeIntegerPacking( getInt8View( bytes ), decodeInt32( param )[ 0 ] );\r\n        case 14:\r\n            return decodePacking( decodeInt16( bytes ) );\r\n        case 15:\r\n            return decodePacking( getInt8View( bytes ) );\r\n    }\r\n\r\n};\r\n\r\n\r\n/**\r\n * Decode MMTF fields\r\n * @static\r\n * @param  {Object} inputDict - encoded MMTF data\r\n * @param  {Object} [params] - decoding parameters\r\n * @param  {String[]} params.ignoreFields - names of optional fields not to decode\r\n * @return {module:MmtfDecode.MmtfData} mmtfData\r\n */\r\nfunction decodeMmtf( inputDict, params ){\r\n\r\n    params = params || {};\r\n    var ignoreFields = params.ignoreFields;\r\n    var outputDict = {};\r\n\r\n    AllFields.forEach( function( name ){\r\n        var ignore = ignoreFields ? ignoreFields.indexOf( name ) !== -1 : false;\r\n        var data = inputDict[ name ];\r\n        if( !ignore && data !== undefined ){\r\n            if( data instanceof Uint8Array ){\r\n                outputDict[ name ] = performDecoding.apply( null, decodeBytes( data ) );\r\n            }else{\r\n                outputDict[ name ] = data;\r\n            }\r\n        }\r\n    } );\r\n\r\n    return outputDict;\r\n\r\n}\r\n\r\n/**\r\n * @file mmtf-traverse\r\n * @private\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\n\r\n/**\r\n * mmtf traverse module.\r\n * @module MmtfTraverse\r\n */\r\n\r\n/**\r\n * Converts an array of ASCII codes trimming '\\0' bytes\r\n * @private\r\n * @param  {Array} charCodeArray - array of ASCII char codes\r\n * @return {String} '\\0' trimmed string\r\n */\r\nfunction fromCharCode( charCodeArray ){\r\n    return String.fromCharCode.apply( null, charCodeArray ).replace(/\\0/g, '');\r\n}\r\n\r\n\r\n/**\r\n * @callback module:MmtfTraverse.onModel\r\n * @param {Object} modelData\r\n * @param {Integer} modelData.chainCount - number of chains in the model\r\n * @param {Integer} modelData.modelIndex - index of the model\r\n */\r\n\r\n/**\r\n * @callback module:MmtfTraverse.onChain\r\n * @param {Object} chainData\r\n * @param {Integer} chainData.groupCount - number of groups in the chain\r\n * @param {Integer} chainData.chainIndex - index of the chain\r\n * @param {Integer} chainData.modelIndex - index of the parent model\r\n * @param {String} chainData.chainId - chain id\r\n * @param {?String} chainData.chainName - additional chain name\r\n */\r\n\r\n/**\r\n * @callback module:MmtfTraverse.onGroup\r\n * @param {Object} groupData\r\n * @param {Integer} groupData.atomCount - number of atoms in the group\r\n * @param {Integer} groupData.groupIndex - index of the group\r\n * @param {Integer} groupData.chainIndex - index of the parent chain\r\n * @param {Integer} groupData.modelIndex - index of the parent model\r\n * @param {Integer} groupData.groupId - group id (residue number)\r\n * @param {Integer} groupData.groupType - index to an entry in {@link module:MmtfDecode.MmtfData}#groupList\r\n * @param {String} groupData.groupName - name of the group, 0 to 5 characters\r\n * @param {Char} groupData.singleLetterCode - IUPAC single letter code, otherwise 'X', 1 character\r\n * @param {String} groupData.chemCompType - chemical component type from the mmCIF dictionary\r\n * @param {?Integer} groupData.secStruct - sencoded secondary structure |\r\n *    0: pi helix, 1: bend, 2: alpha helix, 3: extended,\r\n *    4: 3-10 helix, 5: bridge, 6: turn, 7: coil, -1: undefined\r\n * @param {?Char} groupData.insCode - insertion code\r\n * @param {?Integer} groupData.sequenceIndex - index to the `sequence` property of\r\n *    the corresponding entity, -1 when the entity has no sequence\r\n */\r\n\r\n/**\r\n * @callback module:MmtfTraverse.onAtom\r\n * @param {Object} atomData\r\n * @param {Integer} atomData.atomIndex - index of the atom\r\n * @param {Integer} atomData.groupIndex - index of the parent group\r\n * @param {Integer} atomData.chainIndex - index of the parent chain\r\n * @param {Integer} atomData.modelIndex - index of the parent model\r\n * @param {?Integer} atomData.atomId - atom id\r\n * @param {String} atomData.element - IUPAC element name, 0 to 3 characters\r\n * @param {String} atomData.atomName - name of the atom, 0 to 5 characters\r\n * @param {Integer} atomData.formalCharge - formal charge of the atom\r\n * @param {Float} atomData.xCoord - x coordinate in Å\r\n * @param {Float} atomData.yCoord - y coordinate in Å\r\n * @param {Float} atomData.zCoord - z coordinate in Å\r\n * @param {?Float} atomData.bFactor - B-factor in in Å^2\r\n * @param {?Char} atomData.altLoc - alternate location identifier\r\n * @param {?Float} atomData.occupancy - occupancy of the atom\r\n */\r\n\r\n/**\r\n * @callback module:MmtfTraverse.onBond\r\n * @param {Object} bondData\r\n * @param {Integer} bondData.atomIndex1 - index of the first atom\r\n * @param {Integer} bondData.atomIndex2 - index of the secound atom\r\n * @param {Integer} bondData.bondOrder - bond order, allowed values are 1 to 3\r\n */\r\n\r\n\r\n/**\r\n * Traverse the MMTF structure data.\r\n * @static\r\n * @param {module:MmtfDecode.MmtfData} mmtfData - decoded mmtf data\r\n * @param {Object} eventCallbacks\r\n * @param {module:MmtfTraverse.onModel} [eventCallbacks.onModel] - called for each model\r\n * @param {module:MmtfTraverse.onChain} [eventCallbacks.onChain] - called for each chain\r\n * @param {module:MmtfTraverse.onGroup} [eventCallbacks.onGroup] - called for each group\r\n * @param {module:MmtfTraverse.onAtom} [eventCallbacks.onAtom] - called for each atom\r\n * @param {module:MmtfTraverse.onBond} [eventCallbacks.onBond] - called for each bond\r\n * @param {Object} [params] - traversal parameters\r\n * @param {Boolean} [params.firstModelOnly] - traverse only the first model\r\n */\r\nfunction traverseMmtf( mmtfData, eventCallbacks, params ){\r\n\r\n    params = params || {};\r\n\r\n    var firstModelOnly = params.firstModelOnly;\r\n\r\n    // setup callbacks\r\n    var onModel = eventCallbacks.onModel;\r\n    var onChain = eventCallbacks.onChain;\r\n    var onGroup = eventCallbacks.onGroup;\r\n    var onAtom = eventCallbacks.onAtom;\r\n    var onBond = eventCallbacks.onBond;\r\n\r\n    // setup index counters\r\n    var modelIndex = 0;\r\n    var chainIndex = 0;\r\n    var groupIndex = 0;\r\n    var atomIndex = 0;\r\n\r\n    var modelFirstAtomIndex = 0;\r\n    var modelLastAtomIndex = -1;\r\n\r\n    // setup optional fields\r\n    var chainNameList = mmtfData.chainNameList;\r\n    var secStructList = mmtfData.secStructList;\r\n    var insCodeList = mmtfData.insCodeList;\r\n    var sequenceIndexList = mmtfData.sequenceIndexList;\r\n    var atomIdList = mmtfData.atomIdList;\r\n    var bFactorList = mmtfData.bFactorList;\r\n    var altLocList = mmtfData.altLocList;\r\n    var occupancyList = mmtfData.occupancyList;\r\n    var bondAtomList = mmtfData.bondAtomList;\r\n    var bondOrderList = mmtfData.bondOrderList;\r\n\r\n    // hoisted loop variables\r\n    var o, ol, i, j, k, kl;\r\n\r\n    // loop over all models\r\n    for( o = 0, ol = mmtfData.chainsPerModel.length; o < ol; ++o ){\r\n\r\n        if( firstModelOnly && modelIndex > 0 ) break;\r\n\r\n        var modelChainCount = mmtfData.chainsPerModel[ modelIndex ];\r\n\r\n        if( onModel ){\r\n            onModel({\r\n                chainCount: modelChainCount,\r\n                modelIndex: modelIndex\r\n            });\r\n        }\r\n\r\n        for( i = 0; i < modelChainCount; ++i ){\r\n\r\n            var chainGroupCount = mmtfData.groupsPerChain[ chainIndex ];\r\n            if( onChain ){\r\n                var chainId = fromCharCode(\r\n                    mmtfData.chainIdList.subarray( chainIndex * 4, chainIndex * 4 + 4 )\r\n                );\r\n                var chainName = null;\r\n                if( chainNameList ){\r\n                    chainName = fromCharCode(\r\n                        chainNameList.subarray( chainIndex * 4, chainIndex * 4 + 4 )\r\n                    );\r\n                }\r\n                onChain({\r\n                    groupCount: chainGroupCount,\r\n                    chainIndex: chainIndex,\r\n                    modelIndex: modelIndex,\r\n                    chainId: chainId,\r\n                    chainName: chainName\r\n                });\r\n            }\r\n\r\n            for( j = 0; j < chainGroupCount; ++j ){\r\n\r\n                var groupData = mmtfData.groupList[ mmtfData.groupTypeList[ groupIndex ] ];\r\n                var groupAtomCount = groupData.atomNameList.length;\r\n                if( onGroup ){\r\n                    var secStruct = null;\r\n                    if( secStructList ){\r\n                        secStruct = secStructList[ groupIndex ];\r\n                    }\r\n                    var insCode = null;\r\n                    if( mmtfData.insCodeList ){\r\n                        insCode = String.fromCharCode( insCodeList[ groupIndex ] );\r\n                    }\r\n                    var sequenceIndex = null;\r\n                    if( sequenceIndexList ){\r\n                        sequenceIndex = sequenceIndexList[ groupIndex ];\r\n                    }\r\n                    onGroup({\r\n                        atomCount: groupAtomCount,\r\n                        groupIndex: groupIndex,\r\n                        chainIndex: chainIndex,\r\n                        modelIndex: modelIndex,\r\n                        groupId: mmtfData.groupIdList[ groupIndex ],\r\n                        groupType: mmtfData.groupTypeList[ groupIndex ],\r\n                        groupName: groupData.groupName,\r\n                        singleLetterCode: groupData.singleLetterCode,\r\n                        chemCompType: groupData.chemCompType,\r\n                        secStruct: secStruct,\r\n                        insCode: insCode,\r\n                        sequenceIndex: sequenceIndex\r\n                    });\r\n                }\r\n\r\n                for( k = 0; k < groupAtomCount; ++k ){\r\n\r\n                    if( onAtom ){\r\n                        var atomId = null;\r\n                        if( atomIdList ){\r\n                            atomId = atomIdList[ atomIndex ];\r\n                        }\r\n                        var bFactor = null;\r\n                        if( bFactorList ){\r\n                            bFactor = bFactorList[ atomIndex ];\r\n                        }\r\n                        var altLoc = null;\r\n                        if( altLocList ){\r\n                            altLoc = String.fromCharCode( altLocList[ atomIndex ] );\r\n                        }\r\n                        var occupancy = null;\r\n                        if( occupancyList ){\r\n                            occupancy = occupancyList[ atomIndex ];\r\n                        }\r\n                        onAtom({\r\n                            atomIndex: atomIndex,\r\n                            groupIndex: groupIndex,\r\n                            chainIndex: chainIndex,\r\n                            modelIndex: modelIndex,\r\n                            atomId: atomId,\r\n                            element: groupData.elementList[ k ],\r\n                            atomName: groupData.atomNameList[ k ],\r\n                            formalCharge: groupData.formalChargeList[ k ],\r\n                            xCoord: mmtfData.xCoordList[ atomIndex ],\r\n                            yCoord: mmtfData.yCoordList[ atomIndex ],\r\n                            zCoord: mmtfData.zCoordList[ atomIndex ],\r\n                            bFactor: bFactor,\r\n                            altLoc: altLoc,\r\n                            occupancy: occupancy\r\n                        });\r\n                    }\r\n\r\n                    atomIndex += 1;\r\n                }\r\n\r\n                if( onBond ){\r\n                    // intra group bonds\r\n                    var groupBondAtomList = groupData.bondAtomList;\r\n                    for( k = 0, kl = groupData.bondOrderList.length; k < kl; ++k ){\r\n                        onBond({\r\n                            atomIndex1: atomIndex - groupAtomCount + groupBondAtomList[ k * 2 ],\r\n                            atomIndex2: atomIndex - groupAtomCount + groupBondAtomList[ k * 2 + 1 ],\r\n                            bondOrder: groupData.bondOrderList[ k ]\r\n                        });\r\n                    }\r\n                }\r\n\r\n                groupIndex += 1;\r\n            }\r\n\r\n            chainIndex += 1;\r\n        }\r\n\r\n        modelFirstAtomIndex = modelLastAtomIndex + 1;\r\n        modelLastAtomIndex = atomIndex - 1;  // subtract one as it already has been incremented\r\n\r\n        if( onBond ){\r\n            // inter group bonds\r\n            if( bondAtomList ){\r\n                for( k = 0, kl = bondAtomList.length; k < kl; k += 2 ){\r\n                    var atomIndex1 = bondAtomList[ k ];\r\n                    var atomIndex2 = bondAtomList[ k + 1 ];\r\n                    if( ( atomIndex1 >= modelFirstAtomIndex && atomIndex1 <= modelLastAtomIndex ) ||\r\n                        ( atomIndex2 >= modelFirstAtomIndex && atomIndex2 <= modelLastAtomIndex )\r\n                    ){\r\n                        onBond({\r\n                            atomIndex1: atomIndex1,\r\n                            atomIndex2: atomIndex2,\r\n                            bondOrder: bondOrderList ? bondOrderList[ k / 2 ] : null\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        modelIndex += 1;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Version name\r\n * @static\r\n * @type {String}\r\n */\r\nvar version = \"v1.1.0dev\";\r\n\r\n/**\r\n * Version name\r\n * @private\r\n * @type {String}\r\n */\r\nvar baseUrl = \"//mmtf.rcsb.org/v1.0/\";\r\n\r\n/**\r\n * URL of the RCSB webservice to obtain MMTF files\r\n * @static\r\n * @type {String}\r\n */\r\nvar fetchUrl = baseUrl + \"full/\";\r\n\r\n/**\r\n * URL of the RCSB webservice to obtain reduced MMTF files\r\n * @static\r\n * @type {String}\r\n */\r\nvar fetchReducedUrl = baseUrl + \"reduced/\";\r\n\r\n/**\r\n * Encode MMTF fields\r\n * @static\r\n * @param  {module:MmtfDecode.MmtfData} mmtfData - mmtf data\r\n * @return {Uint8Array} encoded MMTF fields\r\n */\r\nfunction encode( mmtfData ){\r\n    return encodeMsgpack( encodeMmtf( mmtfData ) );\r\n}\r\n\r\n/**\r\n * Decode MMTF fields\r\n * @static\r\n * @example\r\n * // bin is Uint8Array containing the mmtf msgpack\r\n * var mmtfData = MMTF.decode( bin );\r\n * console.log( mmtfData.numAtoms );\r\n *\r\n * @param  {Uint8Array|ArrayBuffer|module:MmtfDecode.EncodedMmtfData} binOrDict - binary MessagePack or encoded MMTF data\r\n * @param  {Object} [params] - decoding parameters\r\n * @param {String[]} params.ignoreFields - names of optional fields not to decode\r\n * @return {module:MmtfDecode.MmtfData} mmtfData\r\n */\r\nfunction decode( binOrDict, params ){\r\n\t// make sure binOrDict is not a plain Arraybuffer\r\n    if( binOrDict instanceof ArrayBuffer ){\r\n        binOrDict = new Uint8Array( binOrDict );\r\n    }\r\n\r\n    var inputDict;\r\n    if( binOrDict instanceof Uint8Array ){\r\n        // get dict from msgpack\r\n        inputDict = decodeMsgpack( binOrDict );\r\n    }else{\r\n        // already a dict\r\n        inputDict = binOrDict;\r\n    }\r\n\r\n    return decodeMmtf( inputDict, params );\r\n}\r\n\r\n/**\r\n * @callback module:MMTF.onLoad\r\n * @param {module:MmtfDecode.MmtfData} mmtfData - decoded mmtf data object\r\n */\r\n\r\n/**\r\n * helper method to fetch binary files from an URL\r\n * @private\r\n * @param  {String} pdbid - PDB ID to fetch\r\n * @param  {String} baseUrl - URL to fetch from\r\n * @param  {module:MMTF.onLoad} onLoad - callback( mmtfData )\r\n * @param  {Function} onError - callback( error )\r\n * @return {undefined}\r\n */\r\nfunction _fetch( pdbid, baseUrl, onLoad, onError ){\r\n    var xhr = new XMLHttpRequest();\r\n    function _onLoad(){\r\n        try{\r\n            var mmtfData = decode( xhr.response );\r\n            onLoad( mmtfData );\r\n        }catch( error ){\r\n            onError( error );\r\n        }\r\n    }\r\n    xhr.addEventListener( \"load\", _onLoad, true );\r\n    xhr.addEventListener( \"error\", onError, true );\r\n    xhr.responseType = \"arraybuffer\";\r\n    xhr.open( \"GET\", baseUrl + pdbid.toUpperCase() );\r\n    xhr.send();\r\n}\r\n\r\n/**\r\n * Fetch MMTF file from RCSB webservice which contains\r\n * @static\r\n * @example\r\n * MMTF.fetch(\r\n *     \"3PQR\",\r\n *     // onLoad callback\r\n *     function( mmtfData ){ console.log( mmtfData ) },\r\n *     // onError callback\r\n *     function( error ){ console.error( error ) }\r\n * );\r\n *\r\n * @param  {String} pdbid - PDB ID to fetch\r\n * @param  {module:MMTF.onLoad} onLoad - callback( mmtfData )\r\n * @param  {Function} onError - callback( error )\r\n * @return {undefined}\r\n */\r\nfunction fetch( pdbid, onLoad, onError ){\r\n    _fetch( pdbid, fetchUrl, onLoad, onError );\r\n}\r\n\r\n/**\r\n * Fetch reduced MMTF file from RCSB webservice which contains\r\n * protein C-alpha, nucleotide phosphate and ligand atoms\r\n * @static\r\n * @example\r\n * MMTF.fetchReduced(\r\n *     \"3PQR\",\r\n *     // onLoad callback\r\n *     function( mmtfData ){ console.log( mmtfData ) },\r\n *     // onError callback\r\n *     function( error ){ console.error( error ) }\r\n * );\r\n *\r\n * @param  {String} pdbid - PDB ID to fetch\r\n * @param  {module:MMTF.onLoad} onLoad - callback( mmtfData )\r\n * @param  {Function} onError - callback( error )\r\n * @return {undefined}\r\n */\r\nfunction fetchReduced( pdbid, onLoad, onError ){\r\n    _fetch( pdbid, fetchReducedUrl, onLoad, onError );\r\n}\r\n\r\nexport { encode, decode, traverseMmtf as traverse, fetch, fetchReduced, version, fetchUrl, fetchReducedUrl, encodeMsgpack, encodeMmtf, decodeMsgpack, decodeMmtf };","/**\r\n * @file Mmtf Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Matrix4 } from 'three'\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals'\r\nimport StructureParser from './structure-parser'\r\nimport {\r\n  buildUnitcellAssembly, calculateBondsBetween, calculateBondsWithin\r\n} from '../structure/structure-utils'\r\nimport { ChemCompHetero } from '../structure/structure-constants'\r\nimport Entity from '../structure/entity'\r\nimport Unitcell from '../symmetry/unitcell'\r\nimport Assembly, { AssemblyPart } from '../symmetry/assembly'\r\n\r\nimport { decodeMsgpack, decodeMmtf } from '../../lib/mmtf.es6'\r\n\r\nconst SstrucMap: {[k: string]: number} = {\r\n  '0': 'i'.charCodeAt(0), // pi helix\r\n  '1': 's'.charCodeAt(0), // bend\r\n  '2': 'h'.charCodeAt(0), // alpha helix\r\n  '3': 'e'.charCodeAt(0), // extended\r\n  '4': 'g'.charCodeAt(0), // 3-10 helix\r\n  '5': 'b'.charCodeAt(0), // bridge\r\n  '6': 't'.charCodeAt(0), // turn\r\n  '7': 'l'.charCodeAt(0), // coil\r\n  '-1': ''.charCodeAt(0) // NA\r\n}\r\n\r\nclass MmtfParser extends StructureParser {\r\n  get type () { return 'mmtf' }\r\n  get isBinary () { return true }\r\n\r\n  _parse () {\r\n    // https://github.com/rcsb/mmtf\r\n\r\n    if (Debug) Log.time('MmtfParser._parse ' + this.name)\r\n\r\n    let i, il, j, jl, groupData\r\n\r\n    const s = this.structure\r\n    const sd: {[k: string]: any} = decodeMmtf(decodeMsgpack(this.streamer.data))\r\n\r\n    // structure header\r\n    const headerFields = [\r\n      'depositionDate', 'releaseDate', 'resolution',\r\n      'rFree', 'rWork', 'experimentalMethods'\r\n    ]\r\n    headerFields.forEach(function (name) {\r\n      if (sd[ name ] !== undefined) {\r\n        s.header[ name ] = sd[ name ]\r\n      }\r\n    })\r\n\r\n    let numBonds, numAtoms, numGroups, numChains, numModels\r\n    let chainsPerModel\r\n\r\n    s.id = sd.structureId\r\n    s.title = sd.title\r\n\r\n    s.atomStore.addField('formalCharge', 1, 'int8')\r\n\r\n    if (this.firstModelOnly || this.asTrajectory) {\r\n      numModels = 1\r\n      numChains = sd.chainsPerModel[ 0 ]\r\n\r\n      numGroups = 0\r\n      for (i = 0, il = numChains; i < il; ++i) {\r\n        numGroups += sd.groupsPerChain[ i ]\r\n      }\r\n\r\n      numAtoms = 0\r\n      for (i = 0, il = numGroups; i < il; ++i) {\r\n        groupData = sd.groupList[ sd.groupTypeList[ i ] ]\r\n        numAtoms += groupData.atomNameList.length\r\n      }\r\n\r\n      numBonds = sd.numBonds\r\n\r\n      chainsPerModel = [ numChains ]\r\n    } else {\r\n      numBonds = sd.numBonds\r\n      numAtoms = sd.numAtoms\r\n      numGroups = sd.numGroups\r\n      numChains = sd.numChains\r\n      numModels = sd.numModels\r\n\r\n      chainsPerModel = sd.chainsPerModel\r\n    }\r\n\r\n    numBonds += numGroups // add numGroups to have space for polymer bonds\r\n\r\n    //\r\n\r\n    if (this.asTrajectory) {\r\n      for (i = 0, il = sd.numModels; i < il; ++i) {\r\n        const frame = new Float32Array(numAtoms * 3)\r\n        const frameAtomOffset = numAtoms * i\r\n\r\n        for (j = 0; j < numAtoms; ++j) {\r\n          const j3 = j * 3\r\n          const offset = j + frameAtomOffset\r\n          frame[ j3 ] = sd.xCoordList[ offset ]\r\n          frame[ j3 + 1 ] = sd.yCoordList[ offset ]\r\n          frame[ j3 + 2 ] = sd.zCoordList[ offset ]\r\n        }\r\n\r\n        s.frames.push(frame)\r\n      }\r\n    }\r\n\r\n    // bondStore\r\n    const bAtomIndex1 = new Uint32Array(numBonds)\r\n    const bAtomIndex2 = new Uint32Array(numBonds)\r\n    const bBondOrder = new Uint8Array(numBonds)\r\n\r\n    const aGroupIndex = new Uint32Array(numAtoms)\r\n    const aFormalCharge = new Int8Array(numAtoms)\r\n\r\n    const gChainIndex = new Uint32Array(numGroups)\r\n    const gAtomOffset = new Uint32Array(numGroups)\r\n    const gAtomCount = new Uint16Array(numGroups)\r\n\r\n    const cModelIndex = new Uint16Array(numChains)\r\n    const cGroupOffset = new Uint32Array(numChains)\r\n    const cGroupCount = new Uint32Array(numChains)\r\n\r\n    const mChainOffset = new Uint32Array(numModels)\r\n    const mChainCount = new Uint32Array(numModels)\r\n\r\n    // set-up model-chain relations\r\n    let chainOffset = 0\r\n    for (i = 0, il = numModels; i < il; ++i) {\r\n      const modelChainCount = chainsPerModel[ i ]\r\n      mChainOffset[ i ] = chainOffset\r\n      mChainCount[ i ] = modelChainCount\r\n      for (j = 0; j < modelChainCount; ++j) {\r\n        cModelIndex[ j + chainOffset ] = i\r\n      }\r\n      chainOffset += modelChainCount\r\n    }\r\n\r\n    // set-up chain-residue relations\r\n    const groupsPerChain = sd.groupsPerChain\r\n    let groupOffset = 0\r\n    for (i = 0, il = numChains; i < il; ++i) {\r\n      const chainGroupCount = groupsPerChain[ i ]\r\n      cGroupOffset[ i ] = groupOffset\r\n      cGroupCount[ i ] = chainGroupCount\r\n      for (j = 0; j < chainGroupCount; ++j) {\r\n        gChainIndex[ j + groupOffset ] = i\r\n      }\r\n      groupOffset += chainGroupCount\r\n    }\r\n\r\n    /// ///\r\n    // get data from group map\r\n\r\n    let atomOffset = 0\r\n    let bondOffset = 0\r\n\r\n    for (i = 0, il = numGroups; i < il; ++i) {\r\n      groupData = sd.groupList[ sd.groupTypeList[ i ] ]\r\n      const groupAtomCount = groupData.atomNameList.length\r\n      const groupFormalChargeList = groupData.formalChargeList\r\n\r\n      const groupBondAtomList = groupData.bondAtomList\r\n      const groupBondOrderList = groupData.bondOrderList\r\n\r\n      for (j = 0, jl = groupBondOrderList.length; j < jl; ++j) {\r\n        bAtomIndex1[ bondOffset ] = atomOffset + groupBondAtomList[ j * 2 ]\r\n        bAtomIndex2[ bondOffset ] = atomOffset + groupBondAtomList[ j * 2 + 1 ]\r\n        bBondOrder[ bondOffset ] = groupBondOrderList[ j ]\r\n        bondOffset += 1\r\n      }\r\n\r\n      //\r\n\r\n      gAtomOffset[ i ] = atomOffset\r\n      gAtomCount[ i ] = groupAtomCount\r\n\r\n      for (j = 0; j < groupAtomCount; ++j) {\r\n        aGroupIndex[ atomOffset ] = i\r\n        aFormalCharge[ atomOffset ] = groupFormalChargeList[ j ]\r\n        atomOffset += 1\r\n      }\r\n    }\r\n\r\n    // extra bonds\r\n\r\n    const bondAtomList = sd.bondAtomList\r\n    if (bondAtomList) {\r\n      if (sd.bondOrderList) {\r\n        bBondOrder.set(sd.bondOrderList, bondOffset)\r\n      }\r\n\r\n      for (i = 0, il = bondAtomList.length; i < il; i += 2) {\r\n        const atomIndex1 = bondAtomList[ i ]\r\n        const atomIndex2 = bondAtomList[ i + 1 ]\r\n        if (atomIndex1 < numAtoms && atomIndex2 < numAtoms) {\r\n          bAtomIndex1[ bondOffset ] = atomIndex1\r\n          bAtomIndex2[ bondOffset ] = atomIndex2\r\n          bondOffset += 1\r\n        }\r\n      }\r\n    }\r\n\r\n    //\r\n\r\n    s.bondStore.length = bBondOrder.length\r\n    s.bondStore.count = bondOffset\r\n    s.bondStore.atomIndex1 = bAtomIndex1\r\n    s.bondStore.atomIndex2 = bAtomIndex2\r\n    s.bondStore.bondOrder = bBondOrder\r\n\r\n    s.atomStore.length = numAtoms\r\n    s.atomStore.count = numAtoms\r\n    s.atomStore.residueIndex = aGroupIndex\r\n    s.atomStore.atomTypeId = new Uint16Array(numAtoms)\r\n    s.atomStore.x = sd.xCoordList.subarray(0, numAtoms)\r\n    s.atomStore.y = sd.yCoordList.subarray(0, numAtoms)\r\n    s.atomStore.z = sd.zCoordList.subarray(0, numAtoms)\r\n    s.atomStore.serial = sd.atomIdList.subarray(0, numAtoms)\r\n    s.atomStore.bfactor = sd.bFactorList.subarray(0, numAtoms)\r\n    s.atomStore.altloc = sd.altLocList.subarray(0, numAtoms)\r\n    s.atomStore.occupancy = sd.occupancyList.subarray(0, numAtoms)\r\n    s.atomStore.formalCharge = aFormalCharge\r\n\r\n    s.residueStore.length = numGroups\r\n    s.residueStore.count = numGroups\r\n    s.residueStore.chainIndex = gChainIndex\r\n    s.residueStore.residueTypeId = sd.groupTypeList\r\n    s.residueStore.atomOffset = gAtomOffset\r\n    s.residueStore.atomCount = gAtomCount\r\n    s.residueStore.resno = sd.groupIdList.subarray(0, numGroups)\r\n    s.residueStore.sstruc = sd.secStructList.subarray(0, numGroups)\r\n    s.residueStore.inscode = sd.insCodeList.subarray(0, numGroups)\r\n\r\n    s.chainStore.length = numChains\r\n    s.chainStore.count = numChains\r\n    s.chainStore.entityIndex = new Uint16Array(numChains)\r\n    s.chainStore.modelIndex = cModelIndex\r\n    s.chainStore.residueOffset = cGroupOffset\r\n    s.chainStore.residueCount = cGroupCount\r\n    s.chainStore.chainname = sd.chainNameList.subarray(0, numChains * 4)\r\n    s.chainStore.chainid = sd.chainIdList.subarray(0, numChains * 4)\r\n\r\n    s.modelStore.length = numModels\r\n    s.modelStore.count = numModels\r\n    s.modelStore.chainOffset = mChainOffset\r\n    s.modelStore.chainCount = mChainCount\r\n\r\n    //\r\n\r\n    let groupTypeDict: {[k: number]: any} = {}\r\n    for (i = 0, il = sd.groupList.length; i < il; ++i) {\r\n      const groupType = sd.groupList[ i ]\r\n      const atomTypeIdList: number[] = []\r\n      for (j = 0, jl = groupType.atomNameList.length; j < jl; ++j) {\r\n        const element = groupType.elementList[ j ].toUpperCase()\r\n        const atomname = groupType.atomNameList[ j ]\r\n        atomTypeIdList.push(s.atomMap.add(atomname, element))\r\n      }\r\n      const chemCompType = groupType.chemCompType.toUpperCase()\r\n      const hetFlag = ChemCompHetero.includes(chemCompType)\r\n\r\n      const numGroupBonds = groupType.bondOrderList.length\r\n      const atomIndices1 = new Array(numGroupBonds)\r\n      const atomIndices2 = new Array(numGroupBonds)\r\n      for (j = 0; j < numGroupBonds; ++j) {\r\n        atomIndices1[ j ] = groupType.bondAtomList[ j * 2 ]\r\n        atomIndices2[ j ] = groupType.bondAtomList[ j * 2 + 1 ]\r\n      }\r\n      const bonds = {\r\n        atomIndices1: atomIndices1,\r\n        atomIndices2: atomIndices2,\r\n        bondOrders: groupType.bondOrderList\r\n      }\r\n\r\n      groupTypeDict[ i ] = s.residueMap.add(\r\n        groupType.groupName, atomTypeIdList, hetFlag, chemCompType, bonds\r\n      )\r\n    }\r\n\r\n    for (i = 0, il = numGroups; i < il; ++i) {\r\n      s.residueStore.residueTypeId[ i ] = groupTypeDict[ s.residueStore.residueTypeId[ i ] ]\r\n    }\r\n\r\n    for (i = 0, il = s.atomStore.count; i < il; ++i) {\r\n      const residueIndex = s.atomStore.residueIndex[ i ]\r\n      const residueType = s.residueMap.list[ s.residueStore.residueTypeId[ residueIndex ] ]\r\n      const resAtomOffset = s.residueStore.atomOffset[ residueIndex ]\r\n      s.atomStore.atomTypeId[ i ] = residueType.atomTypeIdList[ i - resAtomOffset ]\r\n    }\r\n\r\n    if (sd.secStructList) {\r\n      const secStructLength: number = sd.secStructList.length\r\n      for (i = 0, il = s.residueStore.count; i < il; ++i) {\r\n        // with ( i % secStructLength ) secStruct entries are reused\r\n        const sstruc = SstrucMap[ s.residueStore.sstruc[ i % secStructLength ] ]\r\n        if (sstruc !== undefined) s.residueStore.sstruc[ i ] = sstruc\r\n      }\r\n    }\r\n\r\n    //\r\n\r\n    if (sd.entityList) {\r\n      sd.entityList.forEach(function (e: Entity, i: number) {\r\n        s.entityList[ i ] = new Entity(\r\n          s, i, e.description, e.type, e.chainIndexList\r\n        )\r\n      })\r\n    }\r\n\r\n    if (sd.bioAssemblyList) {\r\n      sd.bioAssemblyList.forEach(function (_assembly: any, k: number) {\r\n        const id = k + 1\r\n        const assembly = new Assembly('' + id)\r\n        s.biomolDict[ 'BU' + id ] = assembly\r\n        let chainToPart: {[k: string]: AssemblyPart} = {}\r\n        _assembly.transformList.forEach(function (_transform: any) {\r\n          const matrix = new Matrix4().fromArray(_transform.matrix).transpose()\r\n          const chainList: string[] = _transform.chainIndexList.map(function (chainIndex: number) {\r\n            let chainname = ''\r\n            for (let k = 0; k < 4; ++k) {\r\n              const code = sd.chainNameList[ chainIndex * 4 + k ]\r\n              if (code) {\r\n                chainname += String.fromCharCode(code)\r\n              } else {\r\n                break\r\n              }\r\n            }\r\n            return chainname\r\n          })\r\n          const part = chainToPart[ chainList.toString() ]\r\n          if (part) {\r\n            part.matrixList.push(matrix)\r\n          } else {\r\n            chainToPart[ chainList.toString() ] = assembly.addPart([ matrix ], chainList)\r\n          }\r\n        })\r\n      })\r\n    }\r\n\r\n    if (sd.ncsOperatorList) {\r\n      const ncsName = 'NCS'\r\n      const ncsAssembly = new Assembly(ncsName)\r\n      const ncsPart = ncsAssembly.addPart()\r\n      sd.ncsOperatorList.forEach(function (_operator: number[]) {\r\n        const matrix = new Matrix4().fromArray(_operator).transpose()\r\n        ncsPart.matrixList.push(matrix)\r\n      })\r\n      if (ncsPart.matrixList.length > 0) {\r\n        s.biomolDict[ ncsName ] = ncsAssembly\r\n      }\r\n    }\r\n\r\n    const uc = sd.unitCell\r\n    if (uc && Array.isArray(uc) && uc[ 0 ]) {\r\n      s.unitcell = new Unitcell({\r\n        a: uc[ 0 ],\r\n        b: uc[ 1 ],\r\n        c: uc[ 2 ],\r\n        alpha: uc[ 3 ],\r\n        beta: uc[ 4 ],\r\n        gamma: uc[ 5 ],\r\n        spacegroup: sd.spaceGroup\r\n      })\r\n    } else {\r\n      s.unitcell = undefined\r\n    }\r\n\r\n    // calculate backbone bonds\r\n    calculateBondsBetween(s, true)\r\n\r\n    // calculate rung bonds\r\n    calculateBondsWithin(s, true)\r\n\r\n    s.finalizeAtoms()\r\n    s.finalizeBonds()\r\n\r\n    buildUnitcellAssembly(s)\r\n\r\n    if (Debug) Log.timeEnd('MmtfParser._parse ' + this.name)\r\n  }\r\n}\r\n\r\nParserRegistry.add('mmtf', MmtfParser)\r\n\r\nexport default MmtfParser\r\n","/**\r\n * @file Mol2 Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals'\r\nimport {\r\n  assignResidueTypeBonds,\r\n  calculateChainnames, calculateSecondaryStructure,\r\n  calculateBondsBetween, calculateBondsWithin\r\n} from '../structure/structure-utils'\r\nimport StructureParser from './structure-parser'\r\n\r\nconst reWhitespace = /\\s+/\r\nconst bondTypes: {[k: string]: number} = {\r\n  '1': 1,\r\n  '2': 2,\r\n  '3': 3,\r\n  'am': 1, // amide\r\n  'ar': 1, // aromatic\r\n  'du': 1, // dummy\r\n  'un': 1, // unknown\r\n  'nc': 0 // not connected\r\n}\r\n\r\nclass Mol2Parser extends StructureParser {\r\n  get type () { return 'mol2' }\r\n\r\n  _parse () {\r\n    // http://paulbourke.net/dataformats/mol2/\r\n\r\n    if (Debug) Log.time('Mol2Parser._parse ' + this.name)\r\n\r\n    const s = this.structure\r\n    const sb = this.structureBuilder\r\n\r\n    const firstModelOnly = this.firstModelOnly\r\n    const asTrajectory = this.asTrajectory\r\n\r\n    const frames = s.frames\r\n    let doFrames = false\r\n    let currentFrame: Float32Array, currentCoord: number\r\n\r\n    const atomMap = s.atomMap\r\n    const atomStore = s.atomStore\r\n    atomStore.resize(Math.round(this.streamer.data.length / 60))\r\n    atomStore.addField('partialCharge', 1, 'float32')\r\n\r\n    let idx = 0\r\n    let moleculeLineNo = 0\r\n    let modelAtomIdxStart = 0\r\n    let modelIdx = -1\r\n    let numAtoms = 0\r\n\r\n    let currentRecordType = 0\r\n    let moleculeRecordType = 1\r\n    let atomRecordType = 2\r\n    let bondRecordType = 3\r\n\r\n    const ap1 = s.getAtomProxy()\r\n    const ap2 = s.getAtomProxy()\r\n\r\n    function _parseChunkOfLines (_i: number, _n: number, lines: string[]) {\r\n      for (let i = _i; i < _n; ++i) {\r\n        const line = lines[ i ].trim()\r\n\r\n        if (line === '' || line[ 0 ] === '#') continue\r\n\r\n        if (line[ 0 ] === '@') {\r\n          if (line === '@<TRIPOS>MOLECULE') {\r\n            currentRecordType = moleculeRecordType\r\n            moleculeLineNo = 0\r\n\r\n            ++modelIdx\r\n          } else if (line === '@<TRIPOS>ATOM') {\r\n            currentRecordType = atomRecordType\r\n            modelAtomIdxStart = atomStore.count\r\n\r\n            if (asTrajectory) {\r\n              currentCoord = 0\r\n              currentFrame = new Float32Array(numAtoms * 3)\r\n              frames.push(currentFrame)\r\n\r\n              if (modelIdx > 0) doFrames = true\r\n            }\r\n          } else if (line === '@<TRIPOS>BOND') {\r\n            currentRecordType = bondRecordType\r\n          } else {\r\n            currentRecordType = 0\r\n          }\r\n        } else if (currentRecordType === moleculeRecordType) {\r\n          if (moleculeLineNo === 0) {\r\n            s.title = line\r\n            s.id = line\r\n          } else if (moleculeLineNo === 1) {\r\n            const ls = line.split(reWhitespace)\r\n            numAtoms = parseInt(ls[ 0 ])\r\n            // num_atoms [num_bonds [num_subst [num_feat [num_sets]]]]\r\n          } else if (moleculeLineNo === 2) {\r\n\r\n            // const molType = line;\r\n            // SMALL, BIOPOLYMER, PROTEIN, NUCLEIC_ACID, SACCHARIDE\r\n\r\n          } else if (moleculeLineNo === 3) {\r\n\r\n            // const chargeType = line;\r\n            // NO_CHARGES, DEL_RE, GASTEIGER, GAST_HUCK, HUCKEL,\r\n            // PULLMAN, GAUSS80_CHARGES, AMPAC_CHARGES,\r\n            // MULLIKEN_CHARGES, DICT_ CHARGES, MMFF94_CHARGES,\r\n            // USER_CHARGES\r\n\r\n          } else if (moleculeLineNo === 4) {\r\n\r\n            // const statusBits = line;\r\n\r\n          } else if (moleculeLineNo === 5) {\r\n\r\n            // const molComment = line;\r\n\r\n          }\r\n\r\n          ++moleculeLineNo\r\n        } else if (currentRecordType === atomRecordType) {\r\n          const ls = line.split(reWhitespace)\r\n\r\n          if (firstModelOnly && modelIdx > 0) continue\r\n\r\n          const x = parseFloat(ls[ 2 ])\r\n          const y = parseFloat(ls[ 3 ])\r\n          const z = parseFloat(ls[ 4 ])\r\n\r\n          if (asTrajectory) {\r\n            const j = currentCoord * 3\r\n\r\n            currentFrame[ j + 0 ] = x\r\n            currentFrame[ j + 1 ] = y\r\n            currentFrame[ j + 2 ] = z\r\n\r\n            currentCoord += 1\r\n\r\n            if (doFrames) continue\r\n          }\r\n\r\n          const serial = ls[ 0 ]\r\n          const atomname = ls[ 1 ]\r\n          const element = ls[ 5 ].split('.')[ 0 ]\r\n          const resno = ls[ 6 ] ? parseInt(ls[ 6 ]) : 1\r\n          const resname = ls[ 7 ] ? ls[ 7 ] : ''\r\n          const partialCharge = ls[ 8 ] ? parseFloat(ls[ 8 ]) : 0.0\r\n\r\n          atomStore.growIfFull()\r\n          atomStore.atomTypeId[ idx ] = atomMap.add(atomname, element)\r\n\r\n          atomStore.x[ idx ] = x\r\n          atomStore.y[ idx ] = y\r\n          atomStore.z[ idx ] = z\r\n          atomStore.serial[ idx ] = serial\r\n          atomStore.partialCharge[ idx ] = partialCharge\r\n\r\n          sb.addAtom(modelIdx, '', '', resname, resno, true)\r\n\r\n          idx += 1\r\n        } else if (currentRecordType === bondRecordType) {\r\n          if (firstModelOnly && modelIdx > 0) continue\r\n          if (asTrajectory && modelIdx > 0) continue\r\n\r\n          const ls = line.split(reWhitespace)\r\n\r\n          // ls[ 0 ] is bond id\r\n          ap1.index = parseInt(ls[ 1 ]) - 1 + modelAtomIdxStart\r\n          ap2.index = parseInt(ls[ 2 ]) - 1 + modelAtomIdxStart\r\n          const order = bondTypes[ ls[ 3 ] ]\r\n\r\n          s.bondStore.addBond(ap1, ap2, order)\r\n        }\r\n      }\r\n    }\r\n\r\n    this.streamer.eachChunkOfLines(function (lines/*, chunkNo, chunkCount */) {\r\n      _parseChunkOfLines(0, lines.length, lines)\r\n    })\r\n\r\n    sb.finalize()\r\n    s.finalizeAtoms()\r\n    calculateChainnames(s)\r\n    calculateBondsWithin(s, true)\r\n    calculateBondsBetween(s, true)\r\n    s.finalizeBonds()\r\n    assignResidueTypeBonds(s)\r\n    calculateSecondaryStructure(s)\r\n\r\n    if (Debug) Log.timeEnd('Mol2Parser._parse ' + this.name)\r\n  }\r\n}\r\n\r\nParserRegistry.add('mol2', Mol2Parser)\r\n\r\nexport default Mol2Parser\r\n","/**\r\n * @file Pdbqt Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ParserRegistry } from '../globals'\r\nimport PdbParser from './pdb-parser'\r\n\r\n// autodock variant of PDB format with\r\n// - atom partial charges (empty column in pdb format)\r\n// - atom types (bfactor column in pdb format)\r\n// http://autodock.scripps.edu/faqs-help/faq/what-is-the-format-of-a-pdbqt-file\r\n\r\nclass PdbqtParser extends PdbParser {\r\n  get type () { return 'pdbqt' }\r\n}\r\n\r\nParserRegistry.add('pdbqt', PdbqtParser)\r\n\r\nexport default PdbqtParser\r\n","/**\r\n * @file Pqr Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ParserRegistry } from '../globals'\r\nimport PdbParser from './pdb-parser'\r\n\r\n// http://www.poissonboltzmann.org/docs/file-format-info/\r\n\r\nclass PqrParser extends PdbParser {\r\n  get type () { return 'pqr' }\r\n}\r\n\r\nParserRegistry.add('pqr', PqrParser)\r\n\r\nexport default PqrParser\r\n","/**\r\n * @file Sdf Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals'\r\nimport { assignResidueTypeBonds } from '../structure/structure-utils'\r\nimport StructureParser from './structure-parser'\r\n\r\nconst reItem = /> +<(.+)>/\r\n\r\nclass SdfParser extends StructureParser {\r\n  get type () { return 'sdf' }\r\n\r\n  _parse () {\r\n    // https://en.wikipedia.org/wiki/Chemical_table_file#SDF\r\n    // http://download.accelrys.com/freeware/ctfile-formats/ctfile-formats.zip\r\n\r\n    if (Debug) Log.time('SdfParser._parse ' + this.name)\r\n\r\n    const s = this.structure\r\n    const sb = this.structureBuilder\r\n\r\n    const firstModelOnly = this.firstModelOnly\r\n    const asTrajectory = this.asTrajectory\r\n\r\n    const headerLines = this.streamer.peekLines(2)\r\n\r\n    s.id = headerLines[ 0 ].trim()\r\n    s.title = headerLines[ 1 ].trim()\r\n\r\n    const frames = s.frames\r\n    let doFrames = false\r\n    let currentFrame: Float32Array, currentCoord: number\r\n\r\n    const atomMap = s.atomMap\r\n    const atomStore = s.atomStore\r\n    atomStore.resize(Math.round(this.streamer.data.length / 50))\r\n    atomStore.addField('formalCharge', 1, 'int8')\r\n\r\n    const ap1 = s.getAtomProxy()\r\n    const ap2 = s.getAtomProxy()\r\n\r\n    let idx = 0\r\n    let lineNo = 0  // for V2000: current line number in currently parsed Mol file\r\n    let modelIdx = 0\r\n    let modelAtomIdxStart = 0\r\n\r\n    const sdfData: {[k: string]: string[]}[] = []\r\n    let currentItem: string|boolean = false\r\n    let currentData: {[k: string]: string[]} = {}\r\n    let mItem: RegExpMatchArray | null\r\n    s.extraData.sdf = sdfData\r\n\r\n    let atomCount, bondCount, atomStart: number, atomEnd: number, bondStart: number, bondEnd: number, x: number, y: number, z: number, atomname: string, element: string, atomindex: number, order: number\r\n    let isV3000 = false, isAtomBlock = false, isBondBlock = false\r\n    let tokens: string[] = [], acc: string[] = []\r\n    const atomindexToStoreindex = new Map<number, number>()\r\n\r\n    function _parseChunkOfLines (_i: number, _n: number, lines: string[]) {\r\n      for (let i = _i; i < _n; ++i) {\r\n        const line = lines[ i ]\r\n\r\n        if (isV3000 && line) {\r\n          tokens = line.substring(7).split(' ')\r\n\r\n          // Entity properties may extend over multiple lines (hanging line finishes with '-')\r\n          // Tokens are accumulated to be processed at the same time for a given entity\r\n          if (acc.length) {\r\n            tokens = [...acc, ...tokens]\r\n            acc = []\r\n          }\r\n          if (tokens[tokens.length - 1] === '-') {\r\n            tokens.pop();\r\n            acc = tokens;\r\n            continue;\r\n          }\r\n        }\r\n\r\n        if (line.substr(0, 4) === '$$$$') {\r\n          lineNo = -1\r\n          ++modelIdx\r\n          modelAtomIdxStart = atomStore.count\r\n          sdfData.push(currentData)\r\n          currentData = {}\r\n          currentItem = false\r\n          isV3000 = false\r\n        } else if (lineNo === 3) {\r\n          isV3000 = line.indexOf(' V3000') > -1\r\n\r\n          if (isV3000) {\r\n            atomindexToStoreindex.clear()\r\n          } else {\r\n\r\n            atomCount = parseInt(line.substr(0, 3))\r\n            bondCount = parseInt(line.substr(3, 3))\r\n\r\n            atomStart = 4\r\n            atomEnd = atomStart + atomCount\r\n            bondStart = atomEnd\r\n            bondEnd = bondStart + bondCount\r\n\r\n            if (asTrajectory) {\r\n              currentCoord = 0\r\n              currentFrame = new Float32Array(atomCount * 3)\r\n              frames.push(currentFrame)\r\n\r\n              if (modelIdx > 0) doFrames = true\r\n            }\r\n          }\r\n        } else if (isV3000 && tokens[0] === 'COUNTS') {\r\n          atomCount = parseInt(tokens[1]);\r\n\r\n          if (asTrajectory) {\r\n            currentCoord = 0\r\n            currentFrame = new Float32Array(atomCount * 3)\r\n            frames.push(currentFrame)\r\n\r\n            if (modelIdx > 0) doFrames = true\r\n          }\r\n        } else if (isV3000 && tokens.length == 2) {\r\n          if (tokens[1] === 'ATOM') {\r\n            if (tokens[0] === 'BEGIN') isAtomBlock = true\r\n            else if (tokens[0] === 'END') isAtomBlock = false\r\n          } else if (tokens[1] === 'BOND') {\r\n            if (tokens[0] === 'BEGIN') isBondBlock = true\r\n            else if (tokens[0] === 'END') isBondBlock = false\r\n          }\r\n        } else if (\r\n          isAtomBlock \r\n          || (!isV3000 && lineNo >= atomStart && lineNo < atomEnd)\r\n        ) {\r\n          if (firstModelOnly && modelIdx > 0) continue\r\n\r\n          let charge = 0\r\n          if (isV3000) {\r\n            x = parseFloat(tokens[2])\r\n            y = parseFloat(tokens[3])\r\n            z = parseFloat(tokens[4])\r\n\r\n            element = tokens[1]\r\n            atomindex = parseInt(tokens[0])\r\n            atomindexToStoreindex.set(atomindex, idx)\r\n            atomname = element + atomindex\r\n\r\n            if (tokens.length > 6) {\r\n              let chgTok = tokens.slice(6).find(t => t.indexOf('CHG=') === 0);\r\n              if (chgTok) {\r\n                charge = parseInt(chgTok.substring(4))\r\n              }\r\n            }\r\n          } else {\r\n            x = parseFloat(line.substr(0, 10))\r\n            y = parseFloat(line.substr(10, 10))\r\n            z = parseFloat(line.substr(20, 10))\r\n\r\n            element = line.substr(31, 3).trim()\r\n            atomname = element + (idx - modelAtomIdxStart + 1)\r\n          }\r\n\r\n          if (asTrajectory) {\r\n            const j = currentCoord * 3\r\n\r\n            currentFrame[ j + 0 ] = x\r\n            currentFrame[ j + 1 ] = y\r\n            currentFrame[ j + 2 ] = z\r\n\r\n            currentCoord += 1\r\n\r\n            if (doFrames) continue\r\n          }\r\n\r\n          atomStore.growIfFull()\r\n          atomStore.atomTypeId[ idx ] = atomMap.add(atomname, element)\r\n\r\n          atomStore.x[ idx ] = x\r\n          atomStore.y[ idx ] = y\r\n          atomStore.z[ idx ] = z\r\n          atomStore.serial[ idx ] = isV3000 ? atomindex : idx\r\n          atomStore.formalCharge[ idx ] = charge\r\n\r\n          sb.addAtom(modelIdx, '', '', 'HET', 1, true)\r\n\r\n          idx += 1\r\n        } else if (\r\n          isBondBlock \r\n          || (!isV3000 && lineNo >= bondStart && lineNo < bondEnd)\r\n        ) {\r\n          if (firstModelOnly && modelIdx > 0) continue\r\n          if (asTrajectory && modelIdx > 0) continue\r\n\r\n          if (isV3000) {\r\n            ap1.index = atomindexToStoreindex.get(parseInt(tokens[2]))\r\n            ap2.index = atomindexToStoreindex.get(parseInt(tokens[3]))\r\n            order = parseInt(tokens[1])\r\n          } else {\r\n            ap1.index = parseInt(line.substr(0, 3)) - 1 + modelAtomIdxStart\r\n            ap2.index = parseInt(line.substr(3, 3)) - 1 + modelAtomIdxStart\r\n            order = parseInt(line.substr(6, 3))\r\n          }\r\n\r\n          s.bondStore.addBond(ap1, ap2, order)\r\n        } else if (line.substr(0, 6) === 'M  CHG') {\r\n          const chargeCount = parseInt(line.substr(6, 3))\r\n          for (let ci = 0, coffset = 10; ci < chargeCount; ++ci, coffset += 8) {\r\n            const aToken = parseInt(line.substr(coffset, 3))\r\n            const atomIdx = aToken - 1 + modelAtomIdxStart\r\n            const cToken = parseInt(line.substr(coffset + 4, 3))\r\n            atomStore.formalCharge[ atomIdx ] = cToken\r\n          }\r\n        // eslint-disable-next-line no-cond-assign\r\n        } else if (line.charAt(0) === '>' && (mItem = line.match(reItem))) {\r\n          currentItem = mItem[ 1 ]\r\n          currentData[ currentItem ] = []\r\n        } else if (currentItem !== false && line) {\r\n          currentData[ <string>currentItem ].push(line)\r\n        }\r\n\r\n        ++lineNo\r\n      }\r\n    }\r\n\r\n    this.streamer.eachChunkOfLines(function (lines/*, chunkNo, chunkCount */) {\r\n      _parseChunkOfLines(0, lines.length, lines)\r\n    })\r\n\r\n    sb.finalize()\r\n    s.finalizeAtoms()\r\n    s.finalizeBonds()\r\n    assignResidueTypeBonds(s)\r\n\r\n    if (Debug) Log.timeEnd('SdfParser._parse ' + this.name)\r\n  }\r\n\r\n  _postProcess () {\r\n    assignResidueTypeBonds(this.structure)\r\n  }\r\n}\r\n\r\nParserRegistry.add('sdf', SdfParser)\r\nParserRegistry.add('sd', SdfParser)\r\nParserRegistry.add('mol', SdfParser)\r\n\r\nexport default SdfParser\r\n","/**\r\n * @file Prmtop Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals'\r\nimport StructureParser from './structure-parser'\r\nimport {\r\n  assignResidueTypeBonds, calculateBondsBetween,\r\n  calculateBondsWithin, calculateChainnames\r\n} from '../structure/structure-utils'\r\n\r\nconst amberChargeUnitFactor = 18.2223\r\n\r\nconst enum Mode {\r\n  Title,\r\n  Pointers,\r\n  AtomName,\r\n  Charge,\r\n  Mass,\r\n  ResidueLabel,\r\n  ResiduePointer,\r\n  BondsIncHydrogen,\r\n  BondsWithoutHydrogen,\r\n  Radii\r\n}\r\n\r\nfunction parseIntSubstr (line: string, start: number, length: number) {\r\n  return parseInt(line.substr(start, length).trim())\r\n}\r\n\r\nclass PrmtopParser extends StructureParser {\r\n  get type () { return 'prmtop' }\r\n\r\n  _parse () {\r\n    // http://ambermd.org/prmtop.pdf\r\n    // http://ambermd.org/formats.html#topology\r\n\r\n    if (Debug) Log.time('PrmtopParser._parse ' + this.name)\r\n\r\n    const s = this.structure\r\n    const sb = this.structureBuilder\r\n\r\n    //\r\n\r\n    const atomMap = s.atomMap\r\n    const atomStore = s.atomStore\r\n    atomStore.addField('partialCharge', 1, 'float32')\r\n    atomStore.addField('radius', 1, 'float32')\r\n\r\n    const title: string[] = []\r\n    const pointersDict: {[k: string]: number} = {}\r\n    const pointers = [\r\n      'NATOM', 'NTYPES', 'NBONH', 'MBONA', 'NTHETH', 'MTHETA',\r\n      'NPHIH', 'MPHIA', 'NHPARM', 'NPARM', 'NNB', 'NRES',\r\n      'NBONA', 'NTHETA', 'NPHIA', 'NUMBND', 'NUMANG', 'NPTRA',\r\n      'NATYP', 'NPHB', 'IFPERT', 'NBPER', 'NGPER', 'NDPER',\r\n      'MBPER', 'MGPER', 'MDPER', 'IFBOX', 'NMXRS', 'IFCAP',\r\n      'NUMEXTRA', 'NCOPY'\r\n    ]\r\n    pointers.forEach(name => { pointersDict[ name ] = 0 })\r\n\r\n    let atomNames: string[]\r\n    let charges: Float32Array\r\n    let radii: Float32Array\r\n    let bAtomIndex1: Uint32Array\r\n    let bAtomIndex2: Uint32Array\r\n    let bBondOrder: Uint8Array = new Uint8Array(0)\r\n    let residueLabels: string[]\r\n    let residuePointers: Uint32Array\r\n\r\n    let mode: number|undefined\r\n    // let currentFormat\r\n    let curIdx: number\r\n    let bondIdx: number\r\n\r\n    function _parseChunkOfLines (_i: number, _n: number, lines: string[]) {\r\n      for (let i = _i; i < _n; ++i) {\r\n        const line = lines[ i ]\r\n        const lt = line.trim()\r\n\r\n        if (!lt) {\r\n          continue\r\n        } else if (line.startsWith('%FORMAT')) {\r\n          // currentFormat = lt.substring(8, lt.length - 1)\r\n        } else if (line.startsWith('%FLAG')) {\r\n          const flag = line.substr(5).trim()\r\n          curIdx = 0\r\n\r\n          if (flag === 'TITLE') {\r\n            mode = Mode.Title\r\n          } else if (flag === 'POINTERS') {\r\n            mode = Mode.Pointers\r\n          } else if (flag === 'ATOM_NAME') {\r\n            mode = Mode.AtomName\r\n          } else if (flag === 'CHARGE') {\r\n            mode = Mode.Charge\r\n          } else if (flag === 'MASS') {\r\n            mode = Mode.Mass\r\n          } else if (flag === 'RESIDUE_LABEL') {\r\n            mode = Mode.ResidueLabel\r\n          } else if (flag === 'RESIDUE_POINTER') {\r\n            mode = Mode.ResiduePointer\r\n          } else if (flag === 'BONDS_INC_HYDROGEN') {\r\n            bondIdx = 0\r\n            mode = Mode.BondsIncHydrogen\r\n          } else if (flag === 'BONDS_WITHOUT_HYDROGEN') {\r\n            bondIdx = pointersDict['NBONH']\r\n            mode = Mode.BondsWithoutHydrogen\r\n          } else if (flag === 'RADII') {\r\n            mode = Mode.Radii\r\n          } else {\r\n            mode = undefined\r\n          }\r\n        } else if (mode === Mode.Title) {\r\n          title.push(lt)\r\n        } else if (mode === Mode.Pointers) {\r\n          const n = Math.min(curIdx + 10, 32)\r\n          for (let i = 0; curIdx < n; ++i, ++curIdx) {\r\n            pointersDict[pointers[curIdx]] = parseInt(\r\n              line.substr(i * 8, 8).trim()\r\n            )\r\n          }\r\n          atomNames = new Array(pointersDict.NATOM)\r\n          charges = new Float32Array(pointersDict.NATOM)\r\n          radii = new Float32Array(pointersDict.NATOM)\r\n          atomStore.resize(pointersDict.NATOM)\r\n          const bondCount = pointersDict.NBONH + pointersDict.MBONA\r\n          bAtomIndex1 = new Uint32Array(bondCount)\r\n          bAtomIndex2 = new Uint32Array(bondCount)\r\n          bBondOrder = new Uint8Array(bondCount)\r\n          residueLabels = new Array(pointersDict.NRES)\r\n          residuePointers = new Uint32Array(pointersDict.NRES)\r\n        } else if (mode === Mode.AtomName) {\r\n          const n = Math.min(curIdx + 20, pointersDict.NATOM)\r\n          for (let i = 0; curIdx < n; ++i, ++curIdx) {\r\n            atomNames[curIdx] = line.substr(i * 4, 4).trim()\r\n          }\r\n        } else if (mode === Mode.Charge) {\r\n          const n = Math.min(curIdx + 5, pointersDict.NATOM)\r\n          for (let i = 0; curIdx < n; ++i, ++curIdx) {\r\n            charges[curIdx] = parseFloat(line.substr(i * 16, 16)) / amberChargeUnitFactor\r\n          }\r\n        } else if (mode === Mode.Mass) {\r\n\r\n          // not currently used\r\n\r\n        } else if (mode === Mode.ResidueLabel) {\r\n          const n = Math.min(curIdx + 20, pointersDict.NRES)\r\n          for (let i = 0; curIdx < n; ++i, ++curIdx) {\r\n            residueLabels[curIdx] = line.substr(i * 4, 4).trim()\r\n          }\r\n        } else if (mode === Mode.ResiduePointer) {\r\n          const n = Math.min(curIdx + 10, pointersDict.NRES)\r\n          for (let i = 0; curIdx < n; ++i, ++curIdx) {\r\n            residuePointers[curIdx] = parseIntSubstr(line, i * 8, 8)\r\n          }\r\n        } else if (mode === Mode.BondsIncHydrogen) {\r\n          const n = Math.min(curIdx + 10, pointersDict.NBONH * 3)\r\n          for (let i = 0; curIdx < n; ++i, ++curIdx) {\r\n            const r = curIdx % 3\r\n            if (r === 0) {\r\n              bAtomIndex1[bondIdx] = parseIntSubstr(line, i * 8, 8) / 3\r\n            } if (r === 1) {\r\n              bAtomIndex2[bondIdx] = parseIntSubstr(line, i * 8, 8) / 3\r\n              bBondOrder[bondIdx] = 1\r\n              ++bondIdx\r\n            }\r\n          }\r\n        } else if (mode === Mode.BondsWithoutHydrogen) {\r\n          const n = Math.min(curIdx + 10, pointersDict.MBONA * 3)\r\n          for (let i = 0; curIdx < n; ++i, ++curIdx) {\r\n            const r = curIdx % 3\r\n            if (r === 0) {\r\n              bAtomIndex1[bondIdx] = parseIntSubstr(line, i * 8, 8) / 3\r\n            } if (r === 1) {\r\n              bAtomIndex2[bondIdx] = parseIntSubstr(line, i * 8, 8) / 3\r\n              bBondOrder[bondIdx] = 1\r\n              ++bondIdx\r\n            }\r\n          }\r\n        } else if (mode === Mode.Radii) {\r\n          const n = Math.min(curIdx + 5, pointersDict.NATOM)\r\n          for (let i = 0; curIdx < n; ++i, ++curIdx) {\r\n            radii[curIdx] = parseFloat(line.substr(i * 16, 16))\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.streamer.eachChunkOfLines(function (lines/*, chunkNo, chunkCount */) {\r\n      _parseChunkOfLines(0, lines.length, lines)\r\n    })\r\n\r\n    s.title = title.join(' ')\r\n\r\n    const atomCount = pointersDict.NATOM\r\n    let curResIdx = 0\r\n    let curResname = residueLabels![0]\r\n    let curResno = 1\r\n    for (let i = 0; i < atomCount; ++i) {\r\n      if (i + 1 === residuePointers![curResIdx + 1]) {\r\n        ++curResIdx\r\n        curResname = residueLabels![curResIdx]\r\n        curResno = curResIdx + 1\r\n      }\r\n      atomStore.atomTypeId[i] = atomMap.add(atomNames![i])\r\n      atomStore.serial[i] = i + 1\r\n      sb.addAtom(0, '', '', curResname, curResno, false)\r\n    }\r\n\r\n    atomStore.partialCharge.set(charges!)\r\n    atomStore.radius.set(radii!)\r\n\r\n    s.bondStore.length = bBondOrder!.length\r\n    s.bondStore.count = bBondOrder!.length\r\n    s.bondStore.atomIndex1 = bAtomIndex1!\r\n    s.bondStore.atomIndex2 = bAtomIndex2!\r\n    s.bondStore.bondOrder = bBondOrder\r\n\r\n    sb.finalize()\r\n    s.finalizeAtoms()\r\n    s.finalizeBonds()\r\n    calculateBondsWithin(s, true)\r\n    calculateBondsBetween(s, true, true)\r\n    calculateChainnames(s, true)\r\n    assignResidueTypeBonds(s)\r\n\r\n    if (Debug) Log.timeEnd('PrmtopParser._parse ' + this.name)\r\n  }\r\n}\r\n\r\nParserRegistry.add('prmtop', PrmtopParser)\r\nParserRegistry.add('parm7', PrmtopParser)\r\n\r\nexport default PrmtopParser\r\n","/**\r\n * @file Psf Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals'\r\nimport StructureParser from './structure-parser'\r\nimport {\r\n  assignResidueTypeBonds, calculateBondsBetween,\r\n  calculateBondsWithin, getChainname\r\n} from '../structure/structure-utils'\r\n\r\nconst TitleMode = 1\r\nconst AtomMode = 2\r\nconst BondMode = 3\r\nconst AngleMode = 4\r\nconst DihedralMode = 5\r\nconst ImproperMode = 6\r\n\r\nconst reWhitespace = /\\s+/\r\nconst reTitle = /(^\\*|REMARK)*/\r\n\r\nclass PsfParser extends StructureParser {\r\n  get type () { return 'psf' }\r\n\r\n  _parse () {\r\n    // http://www.ks.uiuc.edu/Training/Tutorials/namd/namd-tutorial-unix-html/node23.html\r\n\r\n    if (Debug) Log.time('PsfParser._parse ' + this.name)\r\n\r\n    const s = this.structure\r\n    const sb = this.structureBuilder\r\n\r\n    //\r\n\r\n    const atomMap = s.atomMap\r\n    const atomStore = s.atomStore\r\n    atomStore.addField('partialCharge', 1, 'float32')\r\n\r\n    const title: string[] = []\r\n\r\n    let mode: number|undefined\r\n    let chainid: string\r\n    let lastSegid: string\r\n    let idx = 0\r\n    let chainIdx = 0\r\n    let bondIdx = 0\r\n    let bAtomIndex1: Uint32Array, bAtomIndex2: Uint32Array, bBondOrder: Uint8Array\r\n\r\n    function _parseChunkOfLines (_i: number, _n: number, lines: string[]) {\r\n      for (let i = _i; i < _n; ++i) {\r\n        const line = lines[ i ].trim()\r\n\r\n        if (!line) {\r\n          mode = undefined\r\n          continue\r\n        }\r\n\r\n        if (mode === AtomMode) {\r\n          const ls = line.split(reWhitespace)\r\n\r\n          const serial = parseInt(ls[ 0 ])\r\n          const segid = ls[ 1 ]\r\n          const resno = parseInt(ls[ 2 ])\r\n          const resname = ls[ 3 ]\r\n          const atomname = ls[ 4 ]\r\n          const charge = parseFloat(ls[ 6 ])\r\n\r\n          if (segid !== lastSegid) {\r\n            chainid = getChainname(chainIdx)\r\n            ++chainIdx\r\n          }\r\n\r\n          atomStore.growIfFull()\r\n          atomStore.atomTypeId[ idx ] = atomMap.add(atomname)\r\n\r\n          atomStore.serial[ idx ] = serial\r\n          atomStore.partialCharge[ idx ] = charge\r\n\r\n          sb.addAtom(0, chainid, chainid, resname, resno, false)\r\n\r\n          idx += 1\r\n          lastSegid = segid\r\n        } else if (mode === BondMode) {\r\n          const ls = line.split(reWhitespace)\r\n\r\n          for (let j = 0, m = ls.length; j < m; j += 2) {\r\n            bAtomIndex1[ bondIdx ] = parseInt(ls[ j ]) - 1\r\n            bAtomIndex2[ bondIdx ] = parseInt(ls[ j + 1 ]) - 1\r\n            bBondOrder[ bondIdx ] = 1\r\n            bondIdx += 1\r\n          }\r\n        } else if (mode === TitleMode) {\r\n          title.push(line.replace(reTitle, '').trim())\r\n        } else if (mode === AngleMode) {\r\n\r\n          // currently not used\r\n\r\n        } else if (mode === DihedralMode) {\r\n\r\n          // currently not used\r\n\r\n        } else if (mode === ImproperMode) {\r\n\r\n          // currently not used\r\n\r\n        } else if (line.includes('!NATOM')) {\r\n          mode = AtomMode\r\n\r\n          const numAtoms = parseInt(line.split(reWhitespace)[ 0 ])\r\n          atomStore.resize(numAtoms)\r\n        } else if (line.includes('!NBOND')) {\r\n          mode = BondMode\r\n\r\n          const numBonds = parseInt(line.split(reWhitespace)[ 0 ])\r\n          bAtomIndex1 = new Uint32Array(numBonds)\r\n          bAtomIndex2 = new Uint32Array(numBonds)\r\n          bBondOrder = new Uint8Array(numBonds)\r\n        } else if (line.includes('!NTITLE')) {\r\n          mode = TitleMode\r\n        } else if (line.includes('!NTHETA')) {\r\n          mode = AngleMode\r\n        } else if (line.includes('!NPHI')) {\r\n          mode = DihedralMode\r\n        } else if (line.includes('!NIMPHI')) {\r\n          mode = ImproperMode\r\n        }\r\n      }\r\n    }\r\n\r\n    this.streamer.eachChunkOfLines(function (lines/*, chunkNo, chunkCount */) {\r\n      _parseChunkOfLines(0, lines.length, lines)\r\n    })\r\n\r\n    s.title = title.join(' ')\r\n\r\n    s.bondStore.length = bBondOrder!.length\r\n    s.bondStore.count = bondIdx\r\n    s.bondStore.atomIndex1 = bAtomIndex1!\r\n    s.bondStore.atomIndex2 = bAtomIndex2!\r\n    s.bondStore.bondOrder = bBondOrder!\r\n\r\n    sb.finalize()\r\n    s.finalizeAtoms()\r\n    s.finalizeBonds()\r\n    calculateBondsWithin(s, true)\r\n    calculateBondsBetween(s, true, true)\r\n    assignResidueTypeBonds(s)\r\n\r\n    if (Debug) Log.timeEnd('PsfParser._parse ' + this.name)\r\n  }\r\n}\r\n\r\nParserRegistry.add('psf', PsfParser)\r\n\r\nexport default PsfParser\r\n","/**\r\n * @file Top Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals'\r\nimport StructureParser from './structure-parser'\r\nimport { WaterNames } from '../structure/structure-constants'\r\nimport {\r\n  assignResidueTypeBonds, calculateBondsBetween,\r\n  calculateBondsWithin, getChainname\r\n} from '../structure/structure-utils'\r\n\r\nconst enum Mode {\r\n  System,\r\n  Molecules,\r\n  Moleculetype,\r\n  Atoms,\r\n  Bonds\r\n}\r\n\r\nconst reField = /\\[ (.+) \\]/\r\nconst reWhitespace = /\\s+/\r\n\r\nclass TopParser extends StructureParser {\r\n  get type () { return 'top' }\r\n\r\n  _parse () {\r\n    // http://manual.gromacs.org/online/top.html\r\n\r\n    if (Debug) Log.time('TopParser._parse ' + this.name)\r\n\r\n    const s = this.structure\r\n    const sb = this.structureBuilder\r\n\r\n    //\r\n\r\n    const atomMap = s.atomMap\r\n    const bondStore = s.bondStore\r\n\r\n    const atomStore = s.atomStore\r\n    atomStore.addField('partialCharge', 1, 'float32')\r\n\r\n    const molecules: [string, number][] = []\r\n    const moleculetypeDict: {[k: string]: {atoms: any[], bonds: any[] }} = {}\r\n\r\n    let currentMoleculetype: {\r\n      atoms: [number, string, string, number][],\r\n      bonds: [number, number][]\r\n    }\r\n    let mode: number|undefined\r\n\r\n    function _parseChunkOfLines (_i: number, _n: number, lines: string[]) {\r\n      for (let i = _i; i < _n; ++i) {\r\n        const line = lines[ i ]\r\n        let lt = line.trim()\r\n\r\n        if (!lt || lt[0] === '*' || lt[0] === ';') {\r\n          continue\r\n        }\r\n\r\n        if (lt.startsWith('#include')) {\r\n          throw new Error('TopParser: #include statements not allowed')\r\n        }\r\n\r\n        const fieldMatch = line.match(reField)\r\n        if (fieldMatch !== null) {\r\n          const name = fieldMatch[1]\r\n          if (name === 'moleculetype') {\r\n            mode = Mode.Moleculetype\r\n            currentMoleculetype = {\r\n              atoms: [],\r\n              bonds: []\r\n            }\r\n          } else if (name === 'atoms') {\r\n            mode = Mode.Atoms\r\n          } else if (name === 'bonds') {\r\n            mode = Mode.Bonds\r\n          } else if (name === 'system') {\r\n            mode = Mode.System\r\n          } else if (name === 'molecules') {\r\n            mode = Mode.Molecules\r\n          } else {\r\n            mode = undefined\r\n          }\r\n          continue\r\n        }\r\n\r\n        const cIdx = lt.indexOf(';')\r\n        if (cIdx !== -1) {\r\n          lt = lt.substring(0, cIdx).trim()\r\n        }\r\n        if (mode === Mode.Moleculetype) {\r\n          const molName = lt.split(reWhitespace)[0]\r\n          moleculetypeDict[molName] = currentMoleculetype\r\n        } else if (mode === Mode.Atoms) {\r\n          const ls = lt.split(reWhitespace)\r\n          currentMoleculetype.atoms.push([\r\n            parseInt(ls[2]), // resnr\r\n            ls[3], // residue\r\n            ls[4], // atom\r\n            parseFloat(ls[6]) // charge\r\n          ])\r\n        } else if (mode === Mode.Bonds) {\r\n          const ls = lt.split(reWhitespace)\r\n          currentMoleculetype.bonds.push([\r\n            parseInt(ls[0]), // ai\r\n            parseInt(ls[1]) // aj\r\n          ])\r\n        } else if (mode === Mode.System) {\r\n          s.title = lt\r\n        } else if (mode === Mode.Molecules) {\r\n          const ls = lt.split(reWhitespace)\r\n          molecules.push([\r\n            ls[0], // name\r\n            parseInt(ls[1]) // count\r\n          ])\r\n        }\r\n      }\r\n    }\r\n\r\n    this.streamer.eachChunkOfLines(function (lines/*, chunkNo, chunkCount */) {\r\n      _parseChunkOfLines(0, lines.length, lines)\r\n    })\r\n\r\n    let atomCount = 0\r\n    let bondCount = 0\r\n    molecules.forEach(function (val) {\r\n      const [name, molCount] = val\r\n      const molType = moleculetypeDict[name]\r\n      atomCount += molCount * molType.atoms.length\r\n      bondCount += molCount * molType.bonds.length\r\n    })\r\n\r\n    atomStore.resize(atomCount)\r\n    bondStore.resize(bondCount)\r\n\r\n    let atomIdx = 0\r\n    let resIdx = 0\r\n    let chainidIdx = 0\r\n    let chainnameIdx = 0\r\n    let bondIdx = 0\r\n    let atomOffset = 0\r\n    let lastResno: number\r\n\r\n    molecules.forEach(function (val) {\r\n      const [name, molCount] = val\r\n      const molType = moleculetypeDict[name]\r\n      const chainname = getChainname(chainnameIdx)\r\n      for (let i = 0; i < molCount; ++i) {\r\n        lastResno = -1\r\n        const chainid = WaterNames.includes(name) ? chainname : getChainname(chainidIdx)\r\n        molType.atoms.forEach(function (atomData) {\r\n          const [resno, resname, atomname, charge] = atomData\r\n          if (resno !== lastResno) {\r\n            ++resIdx\r\n          }\r\n          atomStore.atomTypeId[atomIdx] = atomMap.add(atomname)\r\n          atomStore.serial[atomIdx] = atomIdx + 1\r\n          atomStore.partialCharge[atomIdx] = charge\r\n          sb.addAtom(0, chainname, chainid, resname, resIdx + 1, false)\r\n          ++atomIdx\r\n          lastResno = resno\r\n        })\r\n        molType.bonds.forEach(function (bondData) {\r\n          bondStore.atomIndex1[bondIdx] = atomOffset + bondData[0] - 1\r\n          bondStore.atomIndex2[bondIdx] = atomOffset + bondData[1] - 1\r\n          ++bondIdx\r\n        })\r\n        ++chainidIdx\r\n        atomOffset += molType.atoms.length\r\n      }\r\n      ++chainnameIdx\r\n    })\r\n\r\n    bondStore.count = bondCount\r\n\r\n    sb.finalize()\r\n    s.finalizeAtoms()\r\n    s.finalizeBonds()\r\n    calculateBondsWithin(s, true)\r\n    calculateBondsBetween(s, true, true)\r\n    assignResidueTypeBonds(s)\r\n\r\n    if (Debug) Log.timeEnd('TopParser._parse ' + this.name)\r\n  }\r\n}\r\n\r\nParserRegistry.add('top', TopParser)\r\n\r\nexport default TopParser\r\n","/**\r\n * @file Trajectory Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Parser, { ParserParameters } from './parser'\r\nimport Frames from '../trajectory/frames'\r\nimport Streamer from '../streamer/streamer';\r\n\r\nclass TrajectoryParser extends Parser {\r\n  constructor (streamer: Streamer, params?: Partial<ParserParameters>) {\r\n    super(streamer, params)\r\n\r\n    this.frames = new Frames(this.name, this.path)\r\n  }\r\n\r\n  get type () { return 'trajectory' }\r\n  get __objName () { return 'frames' }\r\n}\r\n\r\nexport default TrajectoryParser\r\n","/**\r\n * @file Dcd Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals'\r\nimport { uint8ToString, ensureBuffer } from '../utils'\r\nimport TrajectoryParser from './trajectory-parser'\r\n\r\nconst charmmTimeUnitFactor = 20.45482949774598\r\n\r\ninterface DcdHeader {\r\n  NSET: number,\r\n  ISTART: number,\r\n  NSAVC: number,\r\n  NAMNF: number,\r\n  DELTA: number,\r\n  TITLE: string,\r\n  NATOM: number\r\n}\r\n\r\nclass DcdParser extends TrajectoryParser {\r\n  get type () { return 'dcd' }\r\n  get isBinary () { return true }\r\n\r\n  _parse () {\r\n    // http://www.ks.uiuc.edu/Research/vmd/plugins/molfile/dcdplugin.html\r\n\r\n    // The DCD format is structured as follows\r\n    //   (FORTRAN UNFORMATTED, with Fortran data type descriptions):\r\n    // HDR     NSET    ISTRT   NSAVC   5-ZEROS NATOM-NFREAT    DELTA   9-ZEROS\r\n    // `CORD'  #files  step 1  step    zeroes  (zero)          timestep  (zeroes)\r\n    //                         interval\r\n    // C*4     INT     INT     INT     5INT    INT             DOUBLE  9INT\r\n    // ==========================================================================\r\n    // NTITLE          TITLE\r\n    // INT (=2)        C*MAXTITL\r\n    //                 (=32)\r\n    // ==========================================================================\r\n    // NATOM\r\n    // #atoms\r\n    // INT\r\n    // ==========================================================================\r\n    // X(I), I=1,NATOM         (DOUBLE)\r\n    // Y(I), I=1,NATOM\r\n    // Z(I), I=1,NATOM\r\n    // ==========================================================================\r\n\r\n    if (Debug) Log.time('DcdParser._parse ' + this.name)\r\n\r\n    const bin = ensureBuffer(this.streamer.data)\r\n    const dv = new DataView(bin)\r\n\r\n    const f = this.frames\r\n    const coordinates = f.coordinates\r\n    const boxes = f.boxes\r\n    const header: Partial<DcdHeader> = {}\r\n\r\n    let nextPos = 0\r\n\r\n    // header block\r\n\r\n    const intView = new Int32Array(bin, 0, 23)\r\n    const ef = intView[ 0 ] !== dv.getInt32(0) // endianess flag\r\n    // swap byte order when big endian (84 indicates little endian)\r\n    if (intView[ 0 ] !== 84) {\r\n      const n = bin.byteLength\r\n      for (let i = 0; i < n; i += 4) {\r\n        dv.setFloat32(i, dv.getFloat32(i), true)\r\n      }\r\n    }\r\n    if (intView[ 0 ] !== 84) {\r\n      Log.error('dcd bad format, header block start')\r\n    }\r\n    // format indicator, should read 'CORD'\r\n    const formatString = String.fromCharCode(\r\n      dv.getUint8(4), dv.getUint8(5),\r\n      dv.getUint8(6), dv.getUint8(7)\r\n    )\r\n    if (formatString !== 'CORD') {\r\n      Log.error('dcd bad format, format string')\r\n    }\r\n    let isCharmm = false\r\n    let extraBlock = false\r\n    let fourDims = false\r\n    // version field in charmm, unused in X-PLOR\r\n    if (intView[ 22 ] !== 0) {\r\n      isCharmm = true\r\n      if (intView[ 12 ] !== 0) extraBlock = true\r\n      if (intView[ 13 ] === 1) fourDims = true\r\n    }\r\n    header.NSET = intView[ 2 ]\r\n    header.ISTART = intView[ 3 ]\r\n    header.NSAVC = intView[ 4 ]\r\n    header.NAMNF = intView[ 10 ]\r\n    if (isCharmm) {\r\n      header.DELTA = dv.getFloat32(44, ef)\r\n    } else {\r\n      header.DELTA = dv.getFloat64(44, ef)\r\n    }\r\n    if (intView[ 22 ] !== 84) {\r\n      Log.error('dcd bad format, header block end')\r\n    }\r\n    nextPos = nextPos + 21 * 4 + 8\r\n\r\n    // title block\r\n\r\n    const titleLength = dv.getInt32(nextPos, ef)\r\n    const titlePos = nextPos + 1\r\n    if ((titleLength - 4) % 80 !== 0) {\r\n      Log.error('dcd bad format, title block start')\r\n    }\r\n    header.TITLE = uint8ToString(\r\n      new Uint8Array(bin, titlePos, titleLength)\r\n    )\r\n    if (dv.getInt32(titlePos + titleLength + 4 - 1, ef) !== titleLength) {\r\n      Log.error('dcd bad format, title block end')\r\n    }\r\n    nextPos = nextPos + titleLength + 8\r\n\r\n    // natom block\r\n\r\n    if (dv.getInt32(nextPos, ef) !== 4) {\r\n      Log.error('dcd bad format, natom block start')\r\n    }\r\n    header.NATOM = dv.getInt32(nextPos + 4, ef)\r\n    if (dv.getInt32(nextPos + 8, ef) !== 4) {\r\n      Log.error('dcd bad format, natom block end')\r\n    }\r\n    nextPos = nextPos + 4 + 8\r\n\r\n    // fixed atoms block\r\n\r\n    if (header.NAMNF > 0) {\r\n      // TODO read coordinates and indices of fixed atoms\r\n      Log.error('dcd format with fixed atoms unsupported, aborting')\r\n      return\r\n    }\r\n\r\n    // frames\r\n\r\n    const natom = header.NATOM\r\n    const natom4 = natom * 4\r\n\r\n    for (let i = 0, n = header.NSET; i < n; ++i) {\r\n      if (extraBlock) {\r\n        nextPos += 4 // block start\r\n        // unitcell: A, alpha, B, beta, gamma, C (doubles)\r\n        const box = new Float32Array(9)\r\n        box[ 0 ] = dv.getFloat64(nextPos, ef)\r\n        box[ 4 ] = dv.getFloat64(nextPos + 2 * 8, ef)\r\n        box[ 8 ] = dv.getFloat64(nextPos + 5 * 8, ef)\r\n        boxes.push(box)\r\n        nextPos += 48\r\n        nextPos += 4 // block end\r\n      }\r\n\r\n      // xyz coordinates\r\n      const coord = new Float32Array(natom * 3)\r\n      for (let j = 0; j < 3; ++j) {\r\n        if (dv.getInt32(nextPos, ef) !== natom4) {\r\n          Log.error('dcd bad format, coord block start', i, j)\r\n        }\r\n        nextPos += 4 // block start\r\n        const c = new Float32Array(bin, nextPos, natom)\r\n        for (let k = 0; k < natom; ++k) {\r\n          coord[ 3 * k + j ] = c[ k ]\r\n        }\r\n        nextPos += natom4\r\n        if (dv.getInt32(nextPos, ef) !== natom4) {\r\n          Log.error('dcd bad format, coord block end', i, j)\r\n        }\r\n        nextPos += 4 // block end\r\n      }\r\n      coordinates.push(coord)\r\n\r\n      if (fourDims) {\r\n        const bytes = dv.getInt32(nextPos, ef)\r\n        nextPos += 4 + bytes + 4 // block start + skip + block end\r\n      }\r\n    }\r\n\r\n    if (header.DELTA) {\r\n      f.deltaTime = header.DELTA * charmmTimeUnitFactor\r\n    }\r\n    if (header.ISTART >= 1) {\r\n      f.timeOffset = (header.ISTART - 1) * f.deltaTime\r\n    }\r\n\r\n    // console.log(header)\r\n    // console.log(header.TITLE)\r\n    // console.log('isCharmm', isCharmm, 'extraBlock', extraBlock, 'fourDims, fourDims)\r\n\r\n    if (Debug) Log.timeEnd('DcdParser._parse ' + this.name)\r\n  }\r\n}\r\n\r\nParserRegistry.add('dcd', DcdParser)\r\n\r\nexport default DcdParser\r\n","/**\r\n * @file Netcdf Reader\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n *\r\n * Adapted from https://github.com/cheminfo-js/netcdfjs\r\n * MIT License, Copyright (c) 2016 cheminfo\r\n */\r\n\r\nimport IOBuffer from './io-buffer'\r\n\r\nexport interface NetCDFRecordDimension {\r\n  length: number,\r\n  id?: number,\r\n  name?: string,\r\n  recordStep?: number\r\n}\r\n\r\nexport interface NetCDFHeader {\r\n  recordDimension: NetCDFRecordDimension,\r\n  version: number,\r\n  dimensions: any[],\r\n  globalAttributes: any[],\r\n  variables: any[]\r\n}\r\n\r\nexport interface NetCDFDimension {\r\n  name: string,\r\n  size: number\r\n}\r\n\r\n/**\r\n * Throws a non-valid NetCDF exception if the statement it's true\r\n * @ignore\r\n * @param {boolean} statement - Throws if true\r\n * @param {string} reason - Reason to throw\r\n */\r\nfunction notNetcdf (statement: boolean, reason: string) {\r\n  if (statement) {\r\n    throw new TypeError('Not a valid NetCDF v3.x file: ' + reason)\r\n  }\r\n}\r\n\r\n/**\r\n * Moves 1, 2, or 3 bytes to next 4-byte boundary\r\n * @ignore\r\n * @param {IOBuffer} buffer - Buffer for the file data\r\n */\r\nfunction padding (buffer: IOBuffer) {\r\n  if ((buffer.offset % 4) !== 0) {\r\n    buffer.skip(4 - (buffer.offset % 4))\r\n  }\r\n}\r\n\r\n/**\r\n * Reads the name\r\n * @ignore\r\n * @param {IOBuffer} buffer - Buffer for the file data\r\n * @return {string} - Name\r\n */\r\nfunction readName (buffer: IOBuffer) {\r\n  // Read name\r\n  const nameLength = buffer.readUint32()\r\n  const name = buffer.readChars(nameLength)\r\n\r\n  // validate name\r\n  // TODO\r\n\r\n  // Apply padding\r\n  padding(buffer)\r\n  return name\r\n}\r\n\r\nconst types = {\r\n  BYTE: 1,\r\n  CHAR: 2,\r\n  SHORT: 3,\r\n  INT: 4,\r\n  FLOAT: 5,\r\n  DOUBLE: 6\r\n}\r\n\r\n/**\r\n * Parse a number into their respective type\r\n * @ignore\r\n * @param {number} type - integer that represents the type\r\n * @return {string} - parsed value of the type\r\n */\r\nfunction num2str (type: number) {\r\n  switch (Number(type)) {\r\n    case types.BYTE:\r\n      return 'byte'\r\n    case types.CHAR:\r\n      return 'char'\r\n    case types.SHORT:\r\n      return 'short'\r\n    case types.INT:\r\n      return 'int'\r\n    case types.FLOAT:\r\n      return 'float'\r\n    case types.DOUBLE:\r\n      return 'double'\r\n    default:\r\n      return 'undefined'\r\n  }\r\n}\r\n\r\n/**\r\n * Parse a number type identifier to his size in bytes\r\n * @ignore\r\n * @param {number} type - integer that represents the type\r\n * @return {number} -size of the type\r\n */\r\nfunction num2bytes (type: number) {\r\n  switch (Number(type)) {\r\n    case types.BYTE:\r\n      return 1\r\n    case types.CHAR:\r\n      return 1\r\n    case types.SHORT:\r\n      return 2\r\n    case types.INT:\r\n      return 4\r\n    case types.FLOAT:\r\n      return 4\r\n    case types.DOUBLE:\r\n      return 8\r\n    default:\r\n      return -1\r\n  }\r\n}\r\n\r\n/**\r\n * Reverse search of num2str\r\n * @ignore\r\n * @param {string} type - string that represents the type\r\n * @return {number} - parsed value of the type\r\n */\r\nfunction str2num (type: string) {\r\n  switch (String(type)) {\r\n    case 'byte':\r\n      return types.BYTE\r\n    case 'char':\r\n      return types.CHAR\r\n    case 'short':\r\n      return types.SHORT\r\n    case 'int':\r\n      return types.INT\r\n    case 'float':\r\n      return types.FLOAT\r\n    case 'double':\r\n      return types.DOUBLE\r\n    default:\r\n      return -1\r\n  }\r\n}\r\n\r\n/**\r\n * Auxiliary function to read numeric data\r\n * @ignore\r\n * @param {number} size - Size of the element to read\r\n * @param {function} bufferReader - Function to read next value\r\n * @return {Array<number>|number}\r\n */\r\nfunction readNumber (size: number, bufferReader: Function) {\r\n  if (size !== 1) {\r\n    const numbers = new Array(size)\r\n    for (let i = 0; i < size; i++) {\r\n      numbers[i] = bufferReader()\r\n    }\r\n    return numbers\r\n  } else {\r\n    return bufferReader()\r\n  }\r\n}\r\n\r\n/**\r\n * Given a type and a size reads the next element\r\n * @ignore\r\n * @param {IOBuffer} buffer - Buffer for the file data\r\n * @param {number} type - Type of the data to read\r\n * @param {number} size - Size of the element to read\r\n * @return {string|Array<number>|number}\r\n */\r\nfunction readType (buffer: IOBuffer, type: number, size: number) {\r\n  switch (type) {\r\n    case types.BYTE:\r\n      return buffer.readBytes(size)\r\n    case types.CHAR:\r\n      return trimNull(buffer.readChars(size))\r\n    case types.SHORT:\r\n      return readNumber(size, buffer.readInt16.bind(buffer))\r\n    case types.INT:\r\n      return readNumber(size, buffer.readInt32.bind(buffer))\r\n    case types.FLOAT:\r\n      return readNumber(size, buffer.readFloat32.bind(buffer))\r\n    case types.DOUBLE:\r\n      return readNumber(size, buffer.readFloat64.bind(buffer))\r\n    default:\r\n      notNetcdf(true, 'non valid type ' + type)\r\n      return undefined\r\n  }\r\n}\r\n\r\n/**\r\n * Removes null terminate value\r\n * @ignore\r\n * @param {string} value - String to trim\r\n * @return {string} - Trimmed string\r\n */\r\nfunction trimNull (value: string) {\r\n  if (value.charCodeAt(value.length - 1) === 0) {\r\n    return value.substring(0, value.length - 1)\r\n  }\r\n  return value\r\n}\r\n\r\n// const STREAMING = 4294967295;\r\n\r\n/**\r\n * Read data for the given non-record variable\r\n * @ignore\r\n * @param {IOBuffer} buffer - Buffer for the file data\r\n * @param {object} variable - Variable metadata\r\n * @return {Array} - Data of the element\r\n */\r\nfunction nonRecord (buffer: IOBuffer, variable: {type: string, size: number}) {\r\n  // variable type\r\n  const type = str2num(variable.type)\r\n\r\n  // size of the data\r\n  const size = variable.size / num2bytes(type)\r\n\r\n  // iterates over the data\r\n  const data = new Array(size)\r\n  for (let i = 0; i < size; i++) {\r\n    data[i] = readType(buffer, type, 1)\r\n  }\r\n\r\n  return data\r\n}\r\n\r\n/**\r\n * Read data for the given record variable\r\n * @ignore\r\n * @param {IOBuffer} buffer - Buffer for the file data\r\n * @param {object} variable - Variable metadata\r\n * @param {object} recordDimension - Record dimension metadata\r\n * @return {Array} - Data of the element\r\n */\r\nfunction record (buffer:IOBuffer, variable: {type: string, size: number}, recordDimension: NetCDFRecordDimension) {\r\n  // variable type\r\n  const type = str2num(variable.type)\r\n  const width = variable.size ? variable.size / num2bytes(type) : 1\r\n\r\n  // size of the data\r\n  // TODO streaming data\r\n  const size = recordDimension.length\r\n\r\n  // iterates over the data\r\n  const data = new Array(size)\r\n  const step = recordDimension.recordStep\r\n\r\n  for (let i = 0; i < size; i++) {\r\n    const currentOffset = buffer.offset\r\n    data[i] = readType(buffer, type, width)\r\n    buffer.seek(currentOffset + step!)\r\n  }\r\n\r\n  return data\r\n}\r\n\r\n// Grammar constants\r\nconst ZERO = 0\r\nconst NC_DIMENSION = 10\r\nconst NC_VARIABLE = 11\r\nconst NC_ATTRIBUTE = 12\r\n\r\n/**\r\n * Read the header of the file\r\n * @ignore\r\n * @param {IOBuffer} buffer - Buffer for the file data\r\n * @param {number} version - Version of the file\r\n * @return {object} - Object with the fields:\r\n *  * `recordDimension`: Number with the length of record dimension\r\n *  * `dimensions`: List of dimensions\r\n *  * `globalAttributes`: List of global attributes\r\n *  * `variables`: List of variables\r\n */\r\nfunction header (buffer: IOBuffer, version: number) {\r\n  // Length of record dimension\r\n  // sum of the varSize's of all the record variables.\r\n  const header: Partial<NetCDFHeader> = {recordDimension: {length: buffer.readUint32()}}\r\n\r\n  // Version\r\n  header.version = version\r\n\r\n  // List of dimensions\r\n  const dimList = dimensionsList(buffer) as {dimensions: NetCDFDimension[], recordId: number, recordName: string}\r\n  header.recordDimension!.id = dimList.recordId\r\n  header.recordDimension!.name = dimList.recordName\r\n  header.dimensions = dimList.dimensions\r\n\r\n  // List of global attributes\r\n  header.globalAttributes = attributesList(buffer)\r\n\r\n  // List of variables\r\n  const variables = variablesList(buffer, dimList.recordId, version) as {variables: any[], recordStep: number}\r\n  header.variables = variables.variables\r\n  header.recordDimension!.recordStep = variables.recordStep\r\n\r\n  return header\r\n}\r\n\r\n/**\r\n * List of dimensions\r\n * @ignore\r\n * @param {IOBuffer} buffer - Buffer for the file data\r\n * @return {object} - List of dimensions and record dimension with:\r\n *  * `name`: String with the name of the dimension\r\n *  * `size`: Number with the size of the dimension\r\n */\r\nfunction dimensionsList (buffer: IOBuffer) {\r\n  let dimensions: NetCDFDimension[], recordId, recordName\r\n  const dimList = buffer.readUint32()\r\n  if (dimList === ZERO) {\r\n    notNetcdf((buffer.readUint32() !== ZERO), 'wrong empty tag for list of dimensions')\r\n    return []\r\n  } else {\r\n    notNetcdf((dimList !== NC_DIMENSION), 'wrong tag for list of dimensions')\r\n\r\n    // Length of dimensions\r\n    const dimensionSize = buffer.readUint32()\r\n    dimensions = new Array(dimensionSize)\r\n    for (let dim = 0; dim < dimensionSize; dim++) {\r\n      // Read name\r\n      const name = readName(buffer)\r\n\r\n      // Read dimension size\r\n      const size = buffer.readUint32()\r\n      if (size === 0) {\r\n        recordId = dim\r\n        recordName = name\r\n      }\r\n\r\n      dimensions[dim] = {\r\n        name: name,\r\n        size: size\r\n      }\r\n    }\r\n    return {\r\n      dimensions: dimensions,\r\n      recordId: recordId,\r\n      recordName: recordName\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * List of attributes\r\n * @ignore\r\n * @param {IOBuffer} buffer - Buffer for the file data\r\n * @return {Array<object>} - List of attributes with:\r\n *  * `name`: String with the name of the attribute\r\n *  * `type`: String with the type of the attribute\r\n *  * `value`: A number or string with the value of the attribute\r\n */\r\nfunction attributesList (buffer: IOBuffer) {\r\n  let attributes\r\n  const gAttList = buffer.readUint32()\r\n  if (gAttList === ZERO) {\r\n    notNetcdf((buffer.readUint32() !== ZERO), 'wrong empty tag for list of attributes')\r\n    return []\r\n  } else {\r\n    notNetcdf((gAttList !== NC_ATTRIBUTE), 'wrong tag for list of attributes')\r\n\r\n    // Length of attributes\r\n    const attributeSize = buffer.readUint32()\r\n    attributes = new Array(attributeSize)\r\n    for (let gAtt = 0; gAtt < attributeSize; gAtt++) {\r\n      // Read name\r\n      const name = readName(buffer)\r\n\r\n      // Read type\r\n      const type = buffer.readUint32()\r\n      notNetcdf(((type < 1) || (type > 6)), 'non valid type ' + type)\r\n\r\n      // Read attribute\r\n      const size = buffer.readUint32()\r\n      const value = readType(buffer, type, size)\r\n\r\n      // Apply padding\r\n      padding(buffer)\r\n\r\n      attributes[gAtt] = {\r\n        name: name,\r\n        type: num2str(type),\r\n        value: value\r\n      }\r\n    }\r\n  }\r\n  return attributes\r\n}\r\n\r\n/**\r\n * List of variables\r\n * @ignore\r\n * @param {IOBuffer} buffer - Buffer for the file data\r\n * @param {number} recordId - Id if the record dimension\r\n * @param {number} version - Version of the file\r\n * @return {object} - Number of recordStep and list of variables with:\r\n *  * `name`: String with the name of the variable\r\n *  * `dimensions`: Array with the dimension IDs of the variable\r\n *  * `attributes`: Array with the attributes of the variable\r\n *  * `type`: String with the type of the variable\r\n *  * `size`: Number with the size of the variable\r\n *  * `offset`: Number with the offset where of the variable begins\r\n *  * `record`: True if is a record variable, false otherwise\r\n */\r\nfunction variablesList (buffer: IOBuffer, recordId: number, version: number) {\r\n  const varList = buffer.readUint32()\r\n  let recordStep = 0\r\n  let variables\r\n  if (varList === ZERO) {\r\n    notNetcdf(\r\n      (buffer.readUint32() !== ZERO),\r\n      'wrong empty tag for list of variables'\r\n    )\r\n    return []\r\n  } else {\r\n    notNetcdf((varList !== NC_VARIABLE), 'wrong tag for list of variables')\r\n\r\n    // Length of variables\r\n    const variableSize = buffer.readUint32()\r\n    variables = new Array(variableSize)\r\n    for (let v = 0; v < variableSize; v++) {\r\n      // Read name\r\n      const name = readName(buffer)\r\n\r\n      // Read dimensionality of the variable\r\n      const dimensionality = buffer.readUint32()\r\n\r\n      // Index into the list of dimensions\r\n      const dimensionsIds = new Array(dimensionality)\r\n      for (let dim = 0; dim < dimensionality; dim++) {\r\n        dimensionsIds[dim] = buffer.readUint32()\r\n      }\r\n\r\n      // Read variables size\r\n      const attributes = attributesList(buffer)\r\n\r\n      // Read type\r\n      const type = buffer.readUint32()\r\n      notNetcdf(((type < 1) && (type > 6)), 'non valid type ' + type)\r\n\r\n      // Read variable size\r\n      // The 32-bit varSize field is not large enough to contain the\r\n      // size of variables that require more than 2^32 - 4 bytes,\r\n      // so 2^32 - 1 is used in the varSize field for such variables.\r\n      const varSize = buffer.readUint32()\r\n\r\n      // Read offset\r\n      let offset = buffer.readUint32()\r\n      if (version === 2) {\r\n        notNetcdf((offset > 0), 'offsets larger than 4GB not supported')\r\n        offset = buffer.readUint32()\r\n      }\r\n\r\n      // Count amount of record variables\r\n      if (dimensionsIds[0] === recordId) {\r\n        recordStep += varSize\r\n      }\r\n\r\n      variables[v] = {\r\n        name: name,\r\n        dimensions: dimensionsIds,\r\n        attributes: attributes,\r\n        type: num2str(type),\r\n        size: varSize,\r\n        offset: offset,\r\n        record: (dimensionsIds[0] === recordId)\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    variables: variables,\r\n    recordStep: recordStep\r\n  }\r\n}\r\n\r\n/**\r\n * Reads a NetCDF v3.x file\r\n * https://www.unidata.ucar.edu/software/netcdf/docs/file_format_specifications.html\r\n */\r\nclass NetcdfReader {\r\n  header: Partial<NetCDFHeader>\r\n  buffer: IOBuffer\r\n  /**\r\n   * @param {ArrayBuffer} data - ArrayBuffer or any Typed Array with the data\r\n   */\r\n  constructor (data: ArrayBuffer) {\r\n    const buffer = new IOBuffer(data)\r\n    buffer.setBigEndian()\r\n\r\n    // Validate that it's a NetCDF file\r\n    notNetcdf((buffer.readChars(3) !== 'CDF'), 'should start with CDF')\r\n\r\n    // Check the NetCDF format\r\n    const version = buffer.readByte()\r\n    notNetcdf((version > 2), 'unknown version')\r\n\r\n    // Read the header\r\n    this.header = header(buffer, version)\r\n    this.buffer = buffer\r\n  }\r\n\r\n  /**\r\n   * @return {string} - Version for the NetCDF format\r\n   */\r\n  get version () {\r\n    if (this.header.version === 1) {\r\n      return 'classic format'\r\n    } else {\r\n      return '64-bit offset format'\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @return {object} - Metadata for the record dimension\r\n   *  * `length`: Number of elements in the record dimension\r\n   *  * `id`: Id number in the list of dimensions for the record dimension\r\n   *  * `name`: String with the name of the record dimension\r\n   *  * `recordStep`: Number with the record variables step size\r\n   */\r\n  get recordDimension () {\r\n    return this.header.recordDimension\r\n  }\r\n\r\n  /**\r\n   * @return {Array<object>} - List of dimensions with:\r\n   *  * `name`: String with the name of the dimension\r\n   *  * `size`: Number with the size of the dimension\r\n   */\r\n  get dimensions () {\r\n    return this.header.dimensions\r\n  }\r\n\r\n  /**\r\n   * @return {Array<object>} - List of global attributes with:\r\n   *  * `name`: String with the name of the attribute\r\n   *  * `type`: String with the type of the attribute\r\n   *  * `value`: A number or string with the value of the attribute\r\n   */\r\n  get globalAttributes () {\r\n    return this.header.globalAttributes\r\n  }\r\n\r\n  /**\r\n   * @return {Array<object>} - List of variables with:\r\n   *  * `name`: String with the name of the variable\r\n   *  * `dimensions`: Array with the dimension IDs of the variable\r\n   *  * `attributes`: Array with the attributes of the variable\r\n   *  * `type`: String with the type of the variable\r\n   *  * `size`: Number with the size of the variable\r\n   *  * `offset`: Number with the offset where of the variable begins\r\n   *  * `record`: True if is a record variable, false otherwise\r\n   */\r\n  get variables () {\r\n    return this.header.variables\r\n  }\r\n\r\n  /**\r\n   * Checks if a variable is available\r\n   * @param {string|object} variableName - Name of the variable to check\r\n   * @return {Boolean} - Variable existence\r\n   */\r\n  hasDataVariable (variableName: string) {\r\n    return this.header.variables!.findIndex(function (val) {\r\n      return val.name === variableName\r\n    }) !== -1\r\n  }\r\n\r\n  /**\r\n   * Retrieves the data for a given variable\r\n   * @param {string|object} variableName - Name of the variable to search or variable object\r\n   * @return {Array} - List with the variable values\r\n   */\r\n  getDataVariable (variableName: string|{}) {\r\n    let variable\r\n    if (typeof variableName === 'string') {\r\n      // search the variable\r\n      variable = this.header.variables!.find(function (val) {\r\n        return val.name === variableName\r\n      })\r\n    } else {\r\n      variable = variableName\r\n    }\r\n\r\n    // throws if variable not found\r\n    notNetcdf((variable === undefined), 'variable not found')\r\n\r\n    // go to the offset position\r\n    this.buffer.seek(variable.offset)\r\n\r\n    if (variable.record) {\r\n      // record variable case\r\n      return record(this.buffer, variable, this.header.recordDimension!)\r\n    } else {\r\n      // non-record variable case\r\n      return nonRecord(this.buffer, variable)\r\n    }\r\n  }\r\n}\r\n\r\nexport default NetcdfReader\r\n","/**\r\n * @file Nctraj Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals'\r\nimport TrajectoryParser from './trajectory-parser'\r\nimport NetcdfReader from '../utils/netcdf-reader'\r\n\r\nclass NctrajParser extends TrajectoryParser {\r\n  get type () { return 'nctraj' }\r\n  get isBinary () { return true }\r\n\r\n  _parse () {\r\n    // http://ambermd.org/netcdf/nctraj.xhtml\r\n\r\n    if (Debug) Log.time('NctrajParser._parse ' + this.name)\r\n\r\n    const netcdfReader = new NetcdfReader(this.streamer.data)\r\n\r\n    const f = this.frames\r\n    const coordinates = f.coordinates\r\n    const boxes = f.boxes\r\n    const times = f.times\r\n\r\n    netcdfReader.getDataVariable('coordinates').forEach(function (c) {\r\n      coordinates.push(new Float32Array(c))\r\n    })\r\n\r\n    if (netcdfReader.hasDataVariable('cell_lengths')) {\r\n      netcdfReader.getDataVariable('cell_lengths').forEach(function (b) {\r\n        boxes.push(new Float32Array(b))\r\n      })\r\n    }\r\n\r\n    if (netcdfReader.hasDataVariable('time')) {\r\n      netcdfReader.getDataVariable('time').forEach(function (t) {\r\n        times.push(t)\r\n      })\r\n    }\r\n\r\n    if (times.length >= 1) {\r\n      f.timeOffset = times[0]\r\n    }\r\n    if (times.length >= 2) {\r\n      f.deltaTime = times[1] - times[0]\r\n    }\r\n\r\n    if (Debug) Log.timeEnd('NctrajParser._parse ' + this.name)\r\n  }\r\n}\r\n\r\nParserRegistry.add('nctraj', NctrajParser)\r\nParserRegistry.add('ncdf', NctrajParser)\r\nParserRegistry.add('nc', NctrajParser)\r\n\r\nexport default NctrajParser\r\n","/**\r\n * @file Trr Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals'\r\nimport { ensureBuffer } from '../utils'\r\nimport TrajectoryParser from './trajectory-parser'\r\n\r\nclass TrrParser extends TrajectoryParser {\r\n  get type () { return 'trr' }\r\n  get isBinary () { return true }\r\n\r\n  _parse () {\r\n    // https://github.com/gromacs/gromacs/blob/master/src/gromacs/fileio/trrio.cpp\r\n\r\n    if (Debug) Log.time('TrrParser._parse ' + this.name)\r\n\r\n    const bin = ensureBuffer(this.streamer.data)\r\n    const dv = new DataView(bin)\r\n\r\n    const f = this.frames\r\n    const coordinates = f.coordinates\r\n    const boxes = f.boxes\r\n    const times = f.times\r\n\r\n    let offset = 0\r\n\r\n    while (true) {\r\n      // const magicnum = dv.getInt32(offset)\r\n      // const i1 = dv.getFloat32(offset + 4)\r\n      offset += 8\r\n\r\n      const versionSize = dv.getInt32(offset)\r\n      offset += 4\r\n      offset += versionSize\r\n\r\n      // const irSize = dv.getInt32(offset)\r\n      // const eSize = dv.getInt32(offset + 4)\r\n      const boxSize = dv.getInt32(offset + 8)\r\n      const virSize = dv.getInt32(offset + 12)\r\n      const presSize = dv.getInt32(offset + 16)\r\n      // const topSize = dv.getInt32(offset + 20)\r\n      // const symSize = dv.getInt32(offset + 24)\r\n      const coordSize = dv.getInt32(offset + 28)\r\n      const velocitySize = dv.getInt32(offset + 32)\r\n      const forceSize = dv.getInt32(offset + 36)\r\n      const natoms = dv.getInt32(offset + 40)\r\n      // const step = dv.getInt32(offset + 44)\r\n      // const nre = dv.getInt32(offset + 48)\r\n      offset += 52\r\n\r\n      const floatSize = boxSize / 9\r\n      const natoms3 = natoms * 3\r\n\r\n      // let lambda\r\n      if (floatSize === 8) {\r\n        times.push(dv.getFloat64(offset))\r\n        // lambda = dv.getFloat64(offset + 8)\r\n      } else {\r\n        times.push(dv.getFloat32(offset))\r\n        // lambda = dv.getFloat32(offset + 4)\r\n      }\r\n      offset += 2 * floatSize\r\n\r\n      if (boxSize) {\r\n        const box = new Float32Array(9)\r\n        if (floatSize === 8) {\r\n          for (let i = 0; i < 9; ++i) {\r\n            box[i] = dv.getFloat64(offset) * 10\r\n            offset += 8\r\n          }\r\n        } else {\r\n          for (let i = 0; i < 9; ++i) {\r\n            box[i] = dv.getFloat32(offset) * 10\r\n            offset += 4\r\n          }\r\n        }\r\n        boxes.push(box)\r\n      }\r\n\r\n      // ignore, unused\r\n      offset += virSize\r\n\r\n      // ignore, unused\r\n      offset += presSize\r\n\r\n      if (coordSize) {\r\n        let frameCoords\r\n        if (floatSize === 8) {\r\n          frameCoords = new Float32Array(natoms3)\r\n          for (let i = 0; i < natoms3; ++i) {\r\n            frameCoords[i] = dv.getFloat64(offset) * 10\r\n            offset += 8\r\n          }\r\n        } else {\r\n          const tmp = new Uint32Array(bin, offset, natoms3)\r\n          for (let i = 0; i < natoms3; ++i) {\r\n            const value = tmp[i]\r\n            tmp[i] = (\r\n              ((value & 0xFF) << 24) | ((value & 0xFF00) << 8) |\r\n              ((value >> 8) & 0xFF00) | ((value >> 24) & 0xFF)\r\n            )\r\n          }\r\n          frameCoords = new Float32Array(bin, offset, natoms3)\r\n          for (let i = 0; i < natoms3; ++i) {\r\n            frameCoords[i] *= 10\r\n            offset += 4\r\n          }\r\n        }\r\n        coordinates.push(frameCoords)\r\n      }\r\n\r\n      // ignore, unused\r\n      offset += velocitySize\r\n\r\n      // ignore, unused\r\n      offset += forceSize\r\n\r\n      if (offset >= bin.byteLength) break\r\n    }\r\n\r\n    if (times.length >= 1) {\r\n      f.timeOffset = times[0]\r\n    }\r\n    if (times.length >= 2) {\r\n      f.deltaTime = times[1] - times[0]\r\n    }\r\n\r\n    if (Debug) Log.timeEnd('TrrParser._parse ' + this.name)\r\n  }\r\n}\r\n\r\nParserRegistry.add('trr', TrrParser)\r\n\r\nexport default TrrParser\r\n","/**\r\n * @file Xtc Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals'\r\nimport { ensureBuffer } from '../utils'\r\nimport TrajectoryParser from './trajectory-parser'\r\nimport { NumberArray } from '../types';\r\n\r\nconst MagicInts = new Uint32Array([\r\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 10, 12, 16, 20, 25, 32, 40, 50, 64,\r\n  80, 101, 128, 161, 203, 256, 322, 406, 512, 645, 812, 1024, 1290,\r\n  1625, 2048, 2580, 3250, 4096, 5060, 6501, 8192, 10321, 13003,\r\n  16384, 20642, 26007, 32768, 41285, 52015, 65536, 82570, 104031,\r\n  131072, 165140, 208063, 262144, 330280, 416127, 524287, 660561,\r\n  832255, 1048576, 1321122, 1664510, 2097152, 2642245, 3329021,\r\n  4194304, 5284491, 6658042, 8388607, 10568983, 13316085, 16777216\r\n])\r\nconst FirstIdx = 9\r\n// const LastIdx = MagicInts.length\r\n\r\nfunction sizeOfInt (size: number) {\r\n  let num = 1\r\n  let numOfBits = 0\r\n  while (size >= num && numOfBits < 32) {\r\n    numOfBits++\r\n    num <<= 1\r\n  }\r\n  return numOfBits\r\n}\r\n\r\nconst _tmpBytes = new Uint8Array(32)\r\n\r\nfunction sizeOfInts (numOfInts: number, sizes: Int32Array) {\r\n  let numOfBytes = 1\r\n  let numOfBits = 0\r\n  _tmpBytes[0] = 1\r\n  for (let i = 0; i < numOfInts; i++) {\r\n    let bytecnt\r\n    let tmp = 0\r\n    for (bytecnt = 0; bytecnt < numOfBytes; bytecnt++) {\r\n      tmp += _tmpBytes[bytecnt] * sizes[i]\r\n      _tmpBytes[bytecnt] = tmp & 0xff\r\n      tmp >>= 8\r\n    }\r\n    while (tmp !== 0) {\r\n      _tmpBytes[bytecnt++] = tmp & 0xff\r\n      tmp >>= 8\r\n    }\r\n    numOfBytes = bytecnt\r\n  }\r\n  let num = 1\r\n  numOfBytes--\r\n  while (_tmpBytes[numOfBytes] >= num) {\r\n    numOfBits++\r\n    num *= 2\r\n  }\r\n  return numOfBits + numOfBytes * 8\r\n}\r\n\r\nfunction decodeBits (buf: Int32Array, cbuf: Uint8Array, numOfBits: number, buf2: Uint32Array) {\r\n  const mask = (1 << numOfBits) - 1\r\n  let lastBB0 = buf2[1]\r\n  let lastBB1 = buf2[2]\r\n  let cnt = buf[0]\r\n  let num = 0\r\n\r\n  while (numOfBits >= 8) {\r\n    lastBB1 = (lastBB1 << 8) | cbuf[cnt++]\r\n    num |= (lastBB1 >> lastBB0) << (numOfBits - 8)\r\n    numOfBits -= 8\r\n  }\r\n\r\n  if (numOfBits > 0) {\r\n    if (lastBB0 < numOfBits) {\r\n      lastBB0 += 8\r\n      lastBB1 = (lastBB1 << 8) | cbuf[cnt++]\r\n    }\r\n    lastBB0 -= numOfBits\r\n    num |= (lastBB1 >> lastBB0) & ((1 << numOfBits) - 1)\r\n  }\r\n\r\n  num &= mask\r\n  buf[0] = cnt\r\n  buf[1] = lastBB0\r\n  buf[2] = lastBB1\r\n\r\n  return num\r\n}\r\n\r\nconst _tmpIntBytes = new Int32Array(32)\r\n\r\nfunction decodeInts (buf: Int32Array, cbuf: Uint8Array, numOfInts: number, numOfBits: number, sizes: NumberArray, nums: Float32Array, buf2: Uint32Array) {\r\n  let numOfBytes = 0\r\n  _tmpIntBytes[1] = 0\r\n  _tmpIntBytes[2] = 0\r\n  _tmpIntBytes[3] = 0\r\n\r\n  while (numOfBits > 8) {\r\n    // this is inversed??? why??? because of the endiannness???\r\n    _tmpIntBytes[numOfBytes++] = decodeBits(buf, cbuf, 8, buf2)\r\n    numOfBits -= 8\r\n  }\r\n\r\n  if (numOfBits > 0) {\r\n    _tmpIntBytes[numOfBytes++] = decodeBits(buf, cbuf, numOfBits, buf2)\r\n  }\r\n\r\n  for (let i = numOfInts - 1; i > 0; i--) {\r\n    let num = 0\r\n    for (let j = numOfBytes - 1; j >= 0; j--) {\r\n      num = (num << 8) | _tmpIntBytes[j]\r\n      const p = (num / sizes[i]) | 0\r\n      _tmpIntBytes[j] = p\r\n      num = num - p * sizes[i]\r\n    }\r\n    nums[i] = num\r\n  }\r\n  nums[0] = (\r\n    _tmpIntBytes[0] |\r\n    (_tmpIntBytes[1] << 8) |\r\n    (_tmpIntBytes[2] << 16) |\r\n    (_tmpIntBytes[3] << 24)\r\n  )\r\n}\r\n\r\nclass XtcParser extends TrajectoryParser {\r\n  get type () { return 'xtc' }\r\n  get isBinary () { return true }\r\n\r\n  _parse () {\r\n    // https://github.com/gromacs/gromacs/blob/master/src/gromacs/fileio/xtcio.cpp\r\n    // https://github.com/gromacs/gromacs/blob/master/src/gromacs/fileio/libxdrf.cpp\r\n\r\n    if (Debug) Log.time('XtcParser._parse ' + this.name)\r\n\r\n    const bin = ensureBuffer(this.streamer.data)\r\n    const dv = new DataView(bin)\r\n\r\n    const f = this.frames\r\n    const coordinates = f.coordinates\r\n    const boxes = f.boxes\r\n    const times = f.times\r\n\r\n    const minMaxInt = new Int32Array(6)\r\n    const sizeint = new Int32Array(3)\r\n    const bitsizeint = new Int32Array(3)\r\n    const sizesmall = new Uint32Array(3)\r\n    const thiscoord = new Float32Array(3)\r\n    const prevcoord = new Float32Array(3)\r\n\r\n    let offset = 0\r\n    const buf = new Int32Array(3)\r\n    const buf2 = new Uint32Array(buf.buffer)\r\n\r\n    while (true) {\r\n      let frameCoords: NumberArray\r\n\r\n      // const magicnum = dv.getInt32(offset)\r\n      const natoms = dv.getInt32(offset + 4)\r\n      // const step = dv.getInt32(offset + 8)\r\n      offset += 12\r\n\r\n      const natoms3 = natoms * 3\r\n\r\n      times.push(dv.getFloat32(offset))\r\n      offset += 4\r\n\r\n      const box = new Float32Array(9)\r\n      for (let i = 0; i < 9; ++i) {\r\n        box[i] = dv.getFloat32(offset) * 10\r\n        offset += 4\r\n      }\r\n      boxes.push(box)\r\n\r\n      if (natoms <= 9) { // no compression\r\n        frameCoords = new Float32Array(natoms)\r\n        for (let i = 0; i < natoms; ++i) {\r\n          frameCoords[i] = dv.getFloat32(offset)\r\n          offset += 4\r\n        }\r\n      } else {\r\n        buf[0] = buf[1] = buf[2] = 0.0\r\n        sizeint[0] = sizeint[1] = sizeint[2] = 0\r\n        sizesmall[0] = sizesmall[1] = sizesmall[2] = 0\r\n        bitsizeint[0] = bitsizeint[1] = bitsizeint[2] = 0\r\n        thiscoord[0] = thiscoord[1] = thiscoord[2] = 0\r\n        prevcoord[0] = prevcoord[1] = prevcoord[2] = 0\r\n\r\n        frameCoords = new Float32Array(natoms3)\r\n        let lfp = 0\r\n\r\n        const lsize = dv.getInt32(offset)\r\n        offset += 4\r\n        const precision = dv.getFloat32(offset)\r\n        offset += 4\r\n\r\n        minMaxInt[0] = dv.getInt32(offset)\r\n        minMaxInt[1] = dv.getInt32(offset + 4)\r\n        minMaxInt[2] = dv.getInt32(offset + 8)\r\n        minMaxInt[3] = dv.getInt32(offset + 12)\r\n        minMaxInt[4] = dv.getInt32(offset + 16)\r\n        minMaxInt[5] = dv.getInt32(offset + 20)\r\n        sizeint[0] = minMaxInt[3] - minMaxInt[0] + 1\r\n        sizeint[1] = minMaxInt[4] - minMaxInt[1] + 1\r\n        sizeint[2] = minMaxInt[5] - minMaxInt[2] + 1\r\n        offset += 24\r\n\r\n        let bitsize\r\n        if ((sizeint[0] | sizeint[1] | sizeint[2]) > 0xffffff) {\r\n          bitsizeint[0] = sizeOfInt(sizeint[0])\r\n          bitsizeint[1] = sizeOfInt(sizeint[1])\r\n          bitsizeint[2] = sizeOfInt(sizeint[2])\r\n          bitsize = 0 // flag the use of large sizes\r\n        } else {\r\n          bitsize = sizeOfInts(3, sizeint)\r\n        }\r\n\r\n        let smallidx = dv.getInt32(offset)\r\n        offset += 4\r\n        // if (smallidx == 0) {alert(\"Undocumented error 1\"); return;}\r\n\r\n        // let tmpIdx = smallidx + 8\r\n        // const maxidx = (LastIdx < tmpIdx) ? LastIdx : tmpIdx\r\n        // const minidx = maxidx - 8  // often this equal smallidx\r\n        let tmpIdx = smallidx - 1\r\n        tmpIdx = (FirstIdx > tmpIdx) ? FirstIdx : tmpIdx\r\n        let smaller = (MagicInts[tmpIdx] / 2) | 0\r\n        let smallnum = (MagicInts[smallidx] / 2) | 0\r\n\r\n        sizesmall[0] = sizesmall[1] = sizesmall[2] = MagicInts[smallidx]\r\n        // larger = MagicInts[maxidx]\r\n\r\n        let adz = Math.ceil(dv.getInt32(offset) / 4) * 4\r\n        offset += 4\r\n        // if (tmpIdx == 0) {alert(\"Undocumented error 2\"); return;}\r\n\r\n        // buf = new Int32Array(bin, offset);\r\n        // buf8 = new Uint8Array(bin, offset);\r\n\r\n        // tmpIdx += 3; rndup = tmpIdx%4;\r\n        // for (i=tmpIdx+rndup-1; i>=tmpIdx; i--) buf8[i] = 0;\r\n\r\n        // now unpack buf2...\r\n\r\n        const invPrecision = 1.0 / precision\r\n        let run = 0\r\n        let i = 0\r\n\r\n        const buf8 = new Uint8Array(bin, offset) // 229...\r\n\r\n        thiscoord[0] = thiscoord[1] = thiscoord[2] = 0\r\n\r\n        while (i < lsize) {\r\n          if (bitsize === 0) {\r\n            thiscoord[0] = decodeBits(buf, buf8, bitsizeint[0], buf2)\r\n            thiscoord[1] = decodeBits(buf, buf8, bitsizeint[1], buf2)\r\n            thiscoord[2] = decodeBits(buf, buf8, bitsizeint[2], buf2)\r\n          } else {\r\n            decodeInts(buf, buf8, 3, bitsize, sizeint, thiscoord, buf2)\r\n          }\r\n\r\n          i++\r\n\r\n          thiscoord[0] += minMaxInt[0]\r\n          thiscoord[1] += minMaxInt[1]\r\n          thiscoord[2] += minMaxInt[2]\r\n\r\n          prevcoord[0] = thiscoord[0]\r\n          prevcoord[1] = thiscoord[1]\r\n          prevcoord[2] = thiscoord[2]\r\n\r\n          const flag = decodeBits(buf, buf8, 1, buf2)\r\n          let isSmaller = 0\r\n\r\n          if (flag === 1) {\r\n            run = decodeBits(buf, buf8, 5, buf2)\r\n            isSmaller = run % 3\r\n            run -= isSmaller\r\n            isSmaller--\r\n          }\r\n\r\n          // if ((lfp-ptrstart)+run > size3){\r\n          //   fprintf(stderr, \"(xdrfile error) Buffer overrun during decompression.\\n\");\r\n          //   return 0;\r\n          // }\r\n\r\n          if (run > 0) {\r\n            thiscoord[0] = thiscoord[1] = thiscoord[2] = 0\r\n\r\n            for (let k = 0; k < run; k += 3) {\r\n              decodeInts(buf, buf8, 3, smallidx, sizesmall, thiscoord, buf2)\r\n              i++\r\n\r\n              thiscoord[0] += prevcoord[0] - smallnum\r\n              thiscoord[1] += prevcoord[1] - smallnum\r\n              thiscoord[2] += prevcoord[2] - smallnum\r\n\r\n              if (k === 0) {\r\n                // interchange first with second atom for\r\n                // better compression of water molecules\r\n                let tmpSwap = thiscoord[0]\r\n                thiscoord[0] = prevcoord[0]\r\n                prevcoord[0] = tmpSwap\r\n\r\n                tmpSwap = thiscoord[1]\r\n                thiscoord[1] = prevcoord[1]\r\n                prevcoord[1] = tmpSwap\r\n\r\n                tmpSwap = thiscoord[2]\r\n                thiscoord[2] = prevcoord[2]\r\n                prevcoord[2] = tmpSwap\r\n\r\n                frameCoords[lfp++] = prevcoord[0] * invPrecision\r\n                frameCoords[lfp++] = prevcoord[1] * invPrecision\r\n                frameCoords[lfp++] = prevcoord[2] * invPrecision\r\n              } else {\r\n                prevcoord[0] = thiscoord[0]\r\n                prevcoord[1] = thiscoord[1]\r\n                prevcoord[2] = thiscoord[2]\r\n              }\r\n              frameCoords[lfp++] = thiscoord[0] * invPrecision\r\n              frameCoords[lfp++] = thiscoord[1] * invPrecision\r\n              frameCoords[lfp++] = thiscoord[2] * invPrecision\r\n            }\r\n          } else {\r\n            frameCoords[lfp++] = thiscoord[0] * invPrecision\r\n            frameCoords[lfp++] = thiscoord[1] * invPrecision\r\n            frameCoords[lfp++] = thiscoord[2] * invPrecision\r\n          }\r\n\r\n          smallidx += isSmaller\r\n\r\n          if (isSmaller < 0) {\r\n            smallnum = smaller\r\n            if (smallidx > FirstIdx) {\r\n              smaller = (MagicInts[smallidx - 1] / 2) | 0\r\n            } else {\r\n              smaller = 0\r\n            }\r\n          } else if (isSmaller > 0) {\r\n            smaller = smallnum\r\n            smallnum = (MagicInts[smallidx] / 2) | 0\r\n          }\r\n          sizesmall[0] = sizesmall[1] = sizesmall[2] = MagicInts[smallidx]\r\n\r\n          if (sizesmall[0] === 0 || sizesmall[1] === 0 || sizesmall[2] === 0) {\r\n            console.error('(xdrfile error) Undefined error.')\r\n            return\r\n          }\r\n        }\r\n        offset += adz\r\n      }\r\n\r\n      for (let c = 0; c < natoms3; c++) {\r\n        frameCoords[c] *= 10\r\n      }\r\n\r\n      coordinates.push(frameCoords)\r\n\r\n      if (offset >= bin.byteLength) break\r\n    }\r\n\r\n    if (times.length >= 1) {\r\n      f.timeOffset = times[0]\r\n    }\r\n    if (times.length >= 2) {\r\n      f.deltaTime = times[1] - times[0]\r\n    }\r\n\r\n    if (Debug) Log.timeEnd('XtcParser._parse ' + this.name)\r\n  }\r\n}\r\n\r\nParserRegistry.add('xtc', XtcParser)\r\n\r\nexport default XtcParser\r\n","/**\r\n * @file Volume Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Matrix4 } from 'three'\r\n\r\nimport { defaults } from '../utils'\r\nimport Parser, { ParserParameters } from './parser'\r\nimport Volume from '../surface/volume'\r\nimport Streamer from '../streamer/streamer';\r\n\r\nexport interface VolumeParserParameters extends ParserParameters {\r\n  voxelSize: number\r\n}\r\n\r\nclass VolumeParser extends Parser {\r\n  constructor (streamer: Streamer, params?: Partial<VolumeParserParameters>) {\r\n    const p = params || {}\r\n\r\n    super(streamer, p)\r\n\r\n    this.volume = new Volume(this.name, this.path)\r\n    this.voxelSize = defaults(p.voxelSize, 1)\r\n  }\r\n\r\n  get type () { return 'volume' }\r\n  get __objName () { return 'volume' }\r\n\r\n  _afterParse () {\r\n    this.volume.setMatrix(this.getMatrix())\r\n    super._afterParse()\r\n  }\r\n\r\n  getMatrix () {\r\n    return new Matrix4()\r\n  }\r\n}\r\n\r\nexport default VolumeParser\r\n","/**\r\n * @file Cube Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Matrix4, Vector3 } from 'three'\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals'\r\nimport VolumeParser from './volume-parser'\r\n\r\n// @author Johanna Tiemann <johanna.tiemann@googlemail.com>\r\n// @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n\r\nconst reWhitespace = /\\s+/\r\nconst reScientificNotation = /-?\\d+(?:\\.\\d*)?(?:[eE][+-]?\\d+)?/g\r\nconst bohrToAngstromFactor = 0.529177210859\r\ninterface Header {\r\n  atomCount: number,\r\n  originX: number,\r\n  originY: number,\r\n  originZ: number,\r\n  NVX: number,\r\n  NVY: number,\r\n  NVZ: number,\r\n  basisX: Vector3,\r\n  basisY: Vector3,\r\n  basisZ: Vector3\r\n}\r\n\r\nclass CubeParser extends VolumeParser {\r\n  get type () { return 'cube' }\r\n\r\n  _parse () {\r\n    // http://paulbourke.net/dataformats/cube/\r\n\r\n    if (Debug) Log.time('CubeParser._parse ' + this.name)\r\n\r\n    const v = this.volume\r\n    const headerLines = this.streamer.peekLines(6)\r\n    const header: Partial<Header> = {}\r\n\r\n    const scaleFactor = bohrToAngstromFactor * this.voxelSize\r\n\r\n    function h (k: number, l: number) {\r\n      var field = headerLines[ k ].trim().split(reWhitespace)[ l ]\r\n      return parseFloat(field)\r\n    }\r\n\r\n    header.atomCount = Math.abs(h(2, 0)) // Number of atoms\r\n    header.originX = h(2, 1) * bohrToAngstromFactor // Position of origin of volumetric data\r\n    header.originY = h(2, 2) * bohrToAngstromFactor\r\n    header.originZ = h(2, 3) * bohrToAngstromFactor\r\n    header.NVX = h(3, 0) // Number of voxels\r\n    header.NVY = h(4, 0)\r\n    header.NVZ = h(5, 0)\r\n\r\n    header.basisX = new Vector3(h(3, 1), h(3, 2), h(3, 3))\r\n      .multiplyScalar(scaleFactor)\r\n    header.basisY = new Vector3(h(4, 1), h(4, 2), h(4, 3))\r\n      .multiplyScalar(scaleFactor)\r\n    header.basisZ = new Vector3(h(5, 1), h(5, 2), h(5, 3))\r\n      .multiplyScalar(scaleFactor)\r\n\r\n    const data = new Float32Array(header.NVX * header.NVY * header.NVZ)\r\n    let count = 0\r\n    let lineNo = 0\r\n    const oribitalFlag = h(2, 0) > 0 ? 0 : 1\r\n\r\n    function _parseChunkOfLines (_i: number, _n: number, lines: string[]) {\r\n      for (let i = _i; i < _n; ++i) {\r\n        const line = lines[ i ].trim()\r\n\r\n        if (line !== '' && lineNo >= header.atomCount! + 6 + oribitalFlag) {\r\n          const m = line.match(reScientificNotation) as RegExpMatchArray\r\n          for (let j = 0, lj = m.length; j < lj; ++j) {\r\n            data[ count ] = parseFloat(m[ j ])\r\n            ++count\r\n          }\r\n        }\r\n\r\n        ++lineNo\r\n      }\r\n    }\r\n\r\n    this.streamer.eachChunkOfLines(function (lines/*, chunkNo, chunkCount */) {\r\n      _parseChunkOfLines(0, lines.length, lines)\r\n    })\r\n\r\n    v.header = header\r\n    v.setData(data, header.NVZ, header.NVY, header.NVX)\r\n\r\n    if (Debug) Log.timeEnd('CubeParser._parse ' + this.name)\r\n  }\r\n\r\n  getMatrix () {\r\n    const h = this.volume.header\r\n    const matrix = new Matrix4()\r\n\r\n    matrix.multiply(\r\n      new Matrix4().makeTranslation(\r\n        h.originX, h.originY, h.originZ\r\n      )\r\n    )\r\n\r\n    matrix.multiply(\r\n      new Matrix4().makeBasis(\r\n        h.basisZ, h.basisY, h.basisX\r\n      )\r\n    )\r\n\r\n    return matrix\r\n  }\r\n}\r\n\r\nParserRegistry.add('cub', CubeParser)\r\nParserRegistry.add('cube', CubeParser)\r\n\r\nexport default CubeParser\r\n","/**\r\n * @file Dsn6 Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Matrix4 } from 'three'\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals'\r\nimport { ensureBuffer } from '../utils'\r\nimport { degToRad } from '../math/math-utils'\r\nimport VolumeParser from './volume-parser'\r\n\r\ninterface Dsn6Header {\r\n  xStart: number,\r\n  yStart: number,\r\n  zStart: number,\r\n  xExtent: number,\r\n  yExtent: number,\r\n  zExtent: number,\r\n  xRate: number,\r\n  yRate: number,\r\n  zRate: number,\r\n  xlen: number,\r\n  ylen: number,\r\n  zlen: number,\r\n  alpha: number,\r\n  beta: number,\r\n  gamma: number,\r\n  sigma: number\r\n}\r\n\r\nclass Dsn6Parser extends VolumeParser {\r\n  get type () { return 'dsn6' }\r\n  get isBinary () { return true }\r\n\r\n  _parse () {\r\n    // DSN6 http://www.uoxray.uoregon.edu/tnt/manual/node104.html\r\n    // BRIX http://svn.cgl.ucsf.edu/svn/chimera/trunk/libs/VolumeData/dsn6/brix-1.html\r\n\r\n    if (Debug) Log.time('Dsn6Parser._parse ' + this.name)\r\n\r\n    const v = this.volume\r\n    const header: Partial<Dsn6Header> = {}\r\n    let divisor, summand\r\n\r\n    const bin = ensureBuffer(this.streamer.data)\r\n    const intView = new Int16Array(bin)\r\n    const byteView = new Uint8Array(bin)\r\n    const brixStr = String.fromCharCode.apply(null, byteView.subarray(0, 512))\r\n\r\n    if (brixStr.startsWith(':-)')) {\r\n      header.xStart = parseInt(brixStr.substr(10, 5)) // NXSTART\r\n      header.yStart = parseInt(brixStr.substr(15, 5))\r\n      header.zStart = parseInt(brixStr.substr(20, 5))\r\n\r\n      header.xExtent = parseInt(brixStr.substr(32, 5)) // NX\r\n      header.yExtent = parseInt(brixStr.substr(38, 5))\r\n      header.zExtent = parseInt(brixStr.substr(42, 5))\r\n\r\n      header.xRate = parseInt(brixStr.substr(52, 5)) // MX\r\n      header.yRate = parseInt(brixStr.substr(58, 5))\r\n      header.zRate = parseInt(brixStr.substr(62, 5))\r\n\r\n      header.xlen = parseFloat(brixStr.substr(73, 10)) * this.voxelSize\r\n      header.ylen = parseFloat(brixStr.substr(83, 10)) * this.voxelSize\r\n      header.zlen = parseFloat(brixStr.substr(93, 10)) * this.voxelSize\r\n\r\n      header.alpha = parseFloat(brixStr.substr(103, 10))\r\n      header.beta = parseFloat(brixStr.substr(113, 10))\r\n      header.gamma = parseFloat(brixStr.substr(123, 10))\r\n\r\n      divisor = parseFloat(brixStr.substr(138, 12)) / 100\r\n      summand = parseInt(brixStr.substr(155, 8))\r\n\r\n      header.sigma = parseFloat(brixStr.substr(170, 12)) * 100\r\n    } else {\r\n      // swap byte order when big endian\r\n      if (intView[ 18 ] !== 100) {\r\n        for (let i = 0, n = intView.length; i < n; ++i) {\r\n          const val = intView[ i ]\r\n          intView[ i ] = ((val & 0xff) << 8) | ((val >> 8) & 0xff)\r\n        }\r\n      }\r\n\r\n      header.xStart = intView[ 0 ] // NXSTART\r\n      header.yStart = intView[ 1 ]\r\n      header.zStart = intView[ 2 ]\r\n\r\n      header.xExtent = intView[ 3 ] // NX\r\n      header.yExtent = intView[ 4 ]\r\n      header.zExtent = intView[ 5 ]\r\n\r\n      header.xRate = intView[ 6 ] // MX\r\n      header.yRate = intView[ 7 ]\r\n      header.zRate = intView[ 8 ]\r\n\r\n      const factor = 1 / intView[ 17 ]\r\n      const scalingFactor = factor * this.voxelSize\r\n\r\n      header.xlen = intView[ 9 ] * scalingFactor\r\n      header.ylen = intView[ 10 ] * scalingFactor\r\n      header.zlen = intView[ 11 ] * scalingFactor\r\n\r\n      header.alpha = intView[ 12 ] * factor\r\n      header.beta = intView[ 13 ] * factor\r\n      header.gamma = intView[ 14 ] * factor\r\n\r\n      divisor = intView[ 15 ] / 100\r\n      summand = intView[ 16 ]\r\n      header.gamma = intView[ 14 ] * factor\r\n    }\r\n\r\n    v.header = header\r\n\r\n    if (Debug) Log.log(header, divisor, summand)\r\n\r\n    const data = new Float32Array(\r\n      header.xExtent * header.yExtent * header.zExtent\r\n    )\r\n\r\n    let offset = 512\r\n    const xBlocks = Math.ceil(header.xExtent / 8)\r\n    const yBlocks = Math.ceil(header.yExtent / 8)\r\n    const zBlocks = Math.ceil(header.zExtent / 8)\r\n\r\n    // loop over blocks\r\n    for (var zz = 0; zz < zBlocks; ++zz) {\r\n      for (var yy = 0; yy < yBlocks; ++yy) {\r\n        for (var xx = 0; xx < xBlocks; ++xx) {\r\n          // loop inside block\r\n          for (var k = 0; k < 8; ++k) {\r\n            var z = 8 * zz + k\r\n            for (var j = 0; j < 8; ++j) {\r\n              var y = 8 * yy + j\r\n              for (var i = 0; i < 8; ++i) {\r\n                var x = 8 * xx + i\r\n\r\n                // check if remaining slice-part contains data\r\n                if (x < header.xExtent && y < header.yExtent && z < header.zExtent) {\r\n                  var idx = ((((x * header.yExtent) + y) * header.zExtent) + z)\r\n                  data[ idx ] = (byteView[ offset ] - summand) / divisor\r\n                  ++offset\r\n                } else {\r\n                  offset += 8 - i\r\n                  break\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    v.setData(data, header.zExtent, header.yExtent, header.xExtent)\r\n    if (header.sigma) {\r\n      v.setStats(undefined, undefined, undefined, header.sigma)\r\n    }\r\n\r\n    if (Debug) Log.timeEnd('Dsn6Parser._parse ' + this.name)\r\n  }\r\n\r\n  getMatrix () {\r\n    const h: Dsn6Header = this.volume.header\r\n\r\n    const basisX = [\r\n      h.xlen as number,\r\n      0,\r\n      0\r\n    ]\r\n\r\n    const basisY = [\r\n      h.ylen * Math.cos(Math.PI / 180.0 * h.gamma),\r\n      h.ylen * Math.sin(Math.PI / 180.0 * h.gamma),\r\n      0\r\n    ]\r\n\r\n    const basisZ = [\r\n      h.zlen * Math.cos(Math.PI / 180.0 * h.beta),\r\n      h.zlen * (\r\n        Math.cos(Math.PI / 180.0 * h.alpha) -\r\n        Math.cos(Math.PI / 180.0 * h.gamma) *\r\n        Math.cos(Math.PI / 180.0 * h.beta)\r\n      ) / Math.sin(Math.PI / 180.0 * h.gamma),\r\n      0\r\n    ]\r\n    basisZ[ 2 ] = Math.sqrt(\r\n      h.zlen * h.zlen * Math.sin(Math.PI / 180.0 * h.beta) *\r\n      Math.sin(Math.PI / 180.0 * h.beta) - basisZ[ 1 ] * basisZ[ 1 ]\r\n    )\r\n\r\n    const basis = [ [], basisX, basisY, basisZ ]\r\n    const nxyz = [ 0, h.xRate, h.yRate, h.zRate ]\r\n    const mapcrs = [ 0, 1, 2, 3 ]\r\n\r\n    const matrix = new Matrix4()\r\n\r\n    matrix.set(\r\n      basis[ mapcrs[1] ][0] / nxyz[ mapcrs[1] ],\r\n      basis[ mapcrs[2] ][0] / nxyz[ mapcrs[2] ],\r\n      basis[ mapcrs[3] ][0] / nxyz[ mapcrs[3] ],\r\n      0,\r\n      basis[ mapcrs[1] ][1] / nxyz[ mapcrs[1] ],\r\n      basis[ mapcrs[2] ][1] / nxyz[ mapcrs[2] ],\r\n      basis[ mapcrs[3] ][1] / nxyz[ mapcrs[3] ],\r\n      0,\r\n      basis[ mapcrs[1] ][2] / nxyz[ mapcrs[1] ],\r\n      basis[ mapcrs[2] ][2] / nxyz[ mapcrs[2] ],\r\n      basis[ mapcrs[3] ][2] / nxyz[ mapcrs[3] ],\r\n      0,\r\n      0, 0, 0, 1\r\n    )\r\n\r\n    matrix.multiply(\r\n      new Matrix4().makeRotationY(degToRad(90))\r\n    )\r\n\r\n    matrix.multiply(new Matrix4().makeTranslation(\r\n      -h.zStart, h.yStart, h.xStart\r\n    ))\r\n\r\n    matrix.multiply(new Matrix4().makeScale(\r\n      -1, 1, 1\r\n    ))\r\n\r\n    return matrix\r\n  }\r\n}\r\n\r\nParserRegistry.add('dsn6', Dsn6Parser)\r\nParserRegistry.add('brix', Dsn6Parser)\r\n\r\nexport default Dsn6Parser\r\n","/**\r\n * @file Dx Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Matrix4 } from 'three'\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals'\r\nimport { degToRad } from '../math/math-utils'\r\nimport VolumeParser from './volume-parser'\r\n\r\nconst reWhitespace = /\\s+/\r\n\r\ninterface DxHeader {\r\n  nx: number,\r\n  ny: number,\r\n  nz: number,\r\n  xmin: number,\r\n  ymin: number,\r\n  zmin: number,\r\n  hx: number,\r\n  hy: number,\r\n  hz: number\r\n}\r\n\r\nclass DxParser extends VolumeParser {\r\n  get type () { return 'dx' }\r\n\r\n  _parse () {\r\n    // http://apbs.readthedocs.io/en/latest/formats/opendx.html\r\n\r\n    if (Debug) Log.time('DxParser._parse ' + this.name)\r\n\r\n    const v = this.volume\r\n    const headerLines = this.streamer.peekLines(30)\r\n    const headerInfo = this.parseHeaderLines(headerLines)\r\n    const header = this.volume.header\r\n    const dataLineStart = headerInfo.dataLineStart\r\n\r\n    const size = header.nx * header.ny * header.nz\r\n    const data = new Float32Array(size)\r\n    let count = 0\r\n    let lineNo = 0\r\n\r\n    function _parseChunkOfLines (_i: number, _n: number, lines: string []) {\r\n      for (let i = _i; i < _n; ++i) {\r\n        if (count < size && lineNo > dataLineStart) {\r\n          const line = lines[ i ].trim()\r\n\r\n          if (line !== '') {\r\n            const ls = line.split(reWhitespace)\r\n\r\n            for (let j = 0, lj = ls.length; j < lj; ++j) {\r\n              data[ count ] = parseFloat(ls[ j ])\r\n              ++count\r\n            }\r\n          }\r\n        }\r\n\r\n        ++lineNo\r\n      }\r\n    }\r\n\r\n    this.streamer.eachChunkOfLines(function (lines/*, chunkNo, chunkCount */) {\r\n      _parseChunkOfLines(0, lines.length, lines)\r\n    })\r\n\r\n    v.setData(data, header.nz, header.ny, header.nx)\r\n\r\n    if (Debug) Log.timeEnd('DxParser._parse ' + this.name)\r\n  }\r\n\r\n  parseHeaderLines (headerLines: string []) {\r\n    const header: Partial<DxHeader> = {}\r\n    const n = headerLines.length\r\n\r\n    let dataLineStart = 0\r\n    let headerByteCount = 0\r\n    let deltaLineCount = 0\r\n\r\n    for (let i = 0; i < n; ++i) {\r\n      let ls\r\n      const line = headerLines[ i ]\r\n\r\n      if (line.startsWith('object 1')) {\r\n        ls = line.split(reWhitespace)\r\n\r\n        header.nx = parseInt(ls[ 5 ])\r\n        header.ny = parseInt(ls[ 6 ])\r\n        header.nz = parseInt(ls[ 7 ])\r\n      } else if (line.startsWith('origin')) {\r\n        ls = line.split(reWhitespace)\r\n\r\n        header.xmin = parseFloat(ls[ 1 ])\r\n        header.ymin = parseFloat(ls[ 2 ])\r\n        header.zmin = parseFloat(ls[ 3 ])\r\n      } else if (line.startsWith('delta')) {\r\n        ls = line.split(reWhitespace)\r\n\r\n        if (deltaLineCount === 0) {\r\n          header.hx = parseFloat(ls[ 1 ]) * this.voxelSize\r\n        } else if (deltaLineCount === 1) {\r\n          header.hy = parseFloat(ls[ 2 ]) * this.voxelSize\r\n        } else if (deltaLineCount === 2) {\r\n          header.hz = parseFloat(ls[ 3 ]) * this.voxelSize\r\n        }\r\n\r\n        deltaLineCount += 1\r\n      } else if (line.startsWith('object 3')) {\r\n        dataLineStart = i\r\n        headerByteCount += line.length + 1\r\n        break\r\n      }\r\n\r\n      headerByteCount += line.length + 1\r\n    }\r\n\r\n    this.volume.header = header\r\n\r\n    return {\r\n      dataLineStart: dataLineStart,\r\n      headerByteCount: headerByteCount\r\n    }\r\n  }\r\n\r\n  getMatrix () {\r\n    const h = this.volume.header\r\n    const matrix = new Matrix4()\r\n\r\n    matrix.multiply(\r\n      new Matrix4().makeRotationY(degToRad(90))\r\n    )\r\n\r\n    matrix.multiply(\r\n      new Matrix4().makeTranslation(\r\n        -h.zmin, h.ymin, h.xmin\r\n      )\r\n    )\r\n\r\n    matrix.multiply(\r\n      new Matrix4().makeScale(\r\n        -h.hz, h.hy, h.hx\r\n      )\r\n    )\r\n\r\n    return matrix\r\n  }\r\n}\r\n\r\nParserRegistry.add('dx', DxParser)\r\n\r\nexport default DxParser\r\n","/**\r\n * @file Dxbin Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals'\r\nimport { uint8ToLines, ensureBuffer } from '../utils'\r\nimport DxParser from './dx-parser'\r\n\r\nclass DxbinParser extends DxParser {\r\n  get type () { return 'dxbin' }\r\n  get isBinary () { return true }\r\n\r\n  _parse () {\r\n    // https://github.com/Electrostatics/apbs-pdb2pqr/issues/216\r\n\r\n    if (Debug) Log.time('DxbinParser._parse ' + this.name)\r\n\r\n    const bin = ensureBuffer(this.streamer.data)\r\n    const headerLines = uint8ToLines(new Uint8Array(bin, 0, 1000))\r\n    const headerInfo = this.parseHeaderLines(headerLines)\r\n    const header = this.volume.header\r\n    const headerByteCount = headerInfo.headerByteCount\r\n\r\n    const size = header.nx * header.ny * header.nz\r\n    const dv = new DataView(bin)\r\n    const data = new Float32Array(size)\r\n\r\n    for (let i = 0; i < size; ++i) {\r\n      data[ i ] = dv.getFloat64(i * 8 + headerByteCount, true)\r\n    }\r\n\r\n    this.volume.setData(data, header.nz, header.ny, header.nx)\r\n\r\n    if (Debug) Log.timeEnd('DxbinParser._parse ' + this.name)\r\n  }\r\n}\r\n\r\nParserRegistry.add('dxbin', DxbinParser)\r\n\r\nexport default DxbinParser\r\n","/**\r\n * @file Mrc Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3, Matrix4 } from 'three'\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals'\r\nimport { ensureBuffer } from '../utils'\r\nimport VolumeParser from './volume-parser'\r\n\r\ninterface MrcHeader {\r\n  MAP: string,\r\n  MACHST: number [],\r\n  NX: number,\r\n  NY: number,\r\n  NZ: number,\r\n  MODE: number,\r\n  NXSTART: number,\r\n  NYSTART: number,\r\n  NZSTART: number,\r\n  MX: number,\r\n  MY: number,\r\n  MZ: number,\r\n  xlen: number,\r\n  ylen: number,\r\n  zlen: number,\r\n  alpha: number,\r\n  beta: number,\r\n  gamma: number,\r\n  MAPC: number,\r\n  MAPR: number,\r\n  MAPS: number,\r\n  DMIN: number,\r\n  DMAX: number,\r\n  DMEAN: number,\r\n  ISPG: number,\r\n  NSYMBT: number,\r\n  LSKFLG: number,\r\n  originX: number,\r\n  originY: number,\r\n  originZ: number,\r\n  ARMS: number\r\n}\r\n\r\nclass MrcParser extends VolumeParser {\r\n  get type () { return 'mrc' }\r\n  get isBinary () { return true }\r\n\r\n  _parse () {\r\n    // MRC\r\n    // http://ami.scripps.edu/software/mrctools/mrc_specification.php\r\n    // http://www2.mrc-lmb.cam.ac.uk/research/locally-developed-software/image-processing-software/#image\r\n    // http://bio3d.colorado.edu/imod/doc/mrc_format.txt\r\n\r\n    // CCP4 (MAP)\r\n    // http://www.ccp4.ac.uk/html/maplib.html\r\n\r\n    // MRC format does not use the skew transformation header records (words 25-37)\r\n    // CCP4 format does not use the ORIGIN header records (words 50-52)\r\n\r\n    if (Debug) Log.time('MrcParser._parse ' + this.name)\r\n\r\n    const v = this.volume\r\n    const header: Partial<MrcHeader> = {}\r\n\r\n    const bin = ensureBuffer(this.streamer.data)\r\n    const intView = new Int32Array(bin, 0, 56)\r\n    const floatView = new Float32Array(bin, 0, 56)\r\n    const dv = new DataView(bin)\r\n\r\n    // 53  MAP         Character string 'MAP ' to identify file type\r\n    header.MAP = String.fromCharCode(\r\n      dv.getUint8(52 * 4), dv.getUint8(52 * 4 + 1),\r\n      dv.getUint8(52 * 4 + 2), dv.getUint8(52 * 4 + 3)\r\n    )\r\n\r\n    // 54  MACHST      Machine stamp indicating machine type which wrote file\r\n    //                 17 and 17 for big-endian or 68 and 65 for little-endian\r\n    header.MACHST = [ dv.getUint8(53 * 4), dv.getUint8(53 * 4 + 1) ]\r\n\r\n    // swap byte order when big endian\r\n    if (header.MACHST[ 0 ] === 17 && header.MACHST[ 1 ] === 17) {\r\n      const n = bin.byteLength\r\n      for (let i = 0; i < n; i += 4) {\r\n        dv.setFloat32(i, dv.getFloat32(i), true)\r\n      }\r\n    }\r\n\r\n    header.NX = intView[ 0 ] // NC - columns (fastest changing)\r\n    header.NY = intView[ 1 ] // NR - rows\r\n    header.NZ = intView[ 2 ] // NS - sections (slowest changing)\r\n\r\n    // mode\r\n    //  0 image : signed 8-bit bytes range -128 to 127\r\n    //  1 image : 16-bit halfwords\r\n    //  2 image : 32-bit reals\r\n    //  3 transform : complex 16-bit integers\r\n    //  4 transform : complex 32-bit reals\r\n    //  6 image : unsigned 16-bit range 0 to 65535\r\n    // 16 image: unsigned char * 3 (for rgb data, non-standard)\r\n    //\r\n    // Note: Mode 2 is the normal mode used in the CCP4 programs.\r\n    //       Other modes than 2 and 0 may NOT WORK\r\n    header.MODE = intView[ 3 ]\r\n\r\n    // start\r\n    header.NXSTART = intView[ 4 ] // NCSTART - first column\r\n    header.NYSTART = intView[ 5 ] // NRSTART - first row\r\n    header.NZSTART = intView[ 6 ] // NSSTART - first section\r\n\r\n    // intervals\r\n    header.MX = intView[ 7 ] // intervals along x\r\n    header.MY = intView[ 8 ] // intervals along y\r\n    header.MZ = intView[ 9 ] // intervals along z\r\n\r\n    // cell length (Angstroms in CCP4)\r\n    header.xlen = floatView[ 10 ] * this.voxelSize\r\n    header.ylen = floatView[ 11 ] * this.voxelSize\r\n    header.zlen = floatView[ 12 ] * this.voxelSize\r\n\r\n    // cell angle (Degrees)\r\n    header.alpha = floatView[ 13 ]\r\n    header.beta = floatView[ 14 ]\r\n    header.gamma = floatView[ 15 ]\r\n\r\n    // axis correspondence (1,2,3 for X,Y,Z)\r\n    header.MAPC = intView[ 16 ] // column\r\n    header.MAPR = intView[ 17 ] // row\r\n    header.MAPS = intView[ 18 ] // section\r\n\r\n    // density statistics\r\n    header.DMIN = floatView[ 19 ]\r\n    header.DMAX = floatView[ 20 ]\r\n    header.DMEAN = floatView[ 21 ]\r\n\r\n    // space group number 0 or 1 (default=0)\r\n    header.ISPG = intView[ 22 ]\r\n\r\n    // number of bytes used for symmetry data (0 or 80)\r\n    header.NSYMBT = intView[ 23 ]\r\n\r\n    // Flag for skew transformation, =0 none, =1 if foll\r\n    header.LSKFLG = intView[ 24 ]\r\n\r\n    // 26-34  SKWMAT  Skew matrix S (in order S11, S12, S13, S21 etc) if\r\n    //                LSKFLG .ne. 0.\r\n    // 35-37  SKWTRN  Skew translation t if LSKFLG != 0.\r\n    //                Skew transformation is from standard orthogonal\r\n    //                coordinate frame (as used for atoms) to orthogonal\r\n    //                map frame, as Xo(map) = S * (Xo(atoms) - t)\r\n\r\n    // 38      future use       (some of these are used by the MSUBSX routines\r\n    //  .          \"              in MAPBRICK, MAPCONT and FRODO)\r\n    //  .          \"   (all set to zero by default)\r\n    //  .          \"\r\n    // 52          \"\r\n\r\n    // 50-52 origin in X,Y,Z used for transforms\r\n    header.originX = floatView[ 49 ]\r\n    header.originY = floatView[ 50 ]\r\n    header.originZ = floatView[ 51 ]\r\n\r\n    // 53  MAP         Character string 'MAP ' to identify file type\r\n    // => see top of this parser\r\n\r\n    // 54  MACHST      Machine stamp indicating machine type which wrote file\r\n    // => see top of this parser\r\n\r\n    // Rms deviation of map from mean density\r\n    header.ARMS = floatView[ 54 ]\r\n\r\n    // 56      NLABL           Number of labels being used\r\n    // 57-256  LABEL(20,10)    10  80 character text labels (ie. A4 format)\r\n\r\n    v.header = header\r\n\r\n    // Log.log( header );\r\n\r\n    let data\r\n    if (header.MODE === 2) {\r\n      data = new Float32Array(\r\n        bin, 256 * 4 + header.NSYMBT,\r\n        header.NX * header.NY * header.NZ\r\n      )\r\n    } else if (header.MODE === 0) {\r\n      data = new Float32Array(new Int8Array(\r\n        bin, 256 * 4 + header.NSYMBT,\r\n        header.NX * header.NY * header.NZ\r\n      ))\r\n\r\n      // based on uglymol (https://github.com/uglymol/uglymol) by Marcin Wojdyr (wojdyr)\r\n      // if the file was converted by mapmode2to0 - scale the data\r\n      if (intView[ 39 ] === -128 && intView[ 40 ] === 127) {\r\n        // scaling f(x)=b1*x+b0 such that f(-128)=min and f(127)=max\r\n        const b1 = (header.DMAX - header.DMIN) / 255.0\r\n        const b0 = 0.5 * (header.DMIN + header.DMAX + b1)\r\n        for (let j = 0, jl = data.length; j < jl; ++j) {\r\n          data[ j ] = b1 * data[ j ] + b0\r\n        }\r\n      }\r\n    } else {\r\n      Log.error('MrcParser unknown mode', header.MODE)\r\n    }\r\n\r\n    v.setData(data, header.NX, header.NY, header.NZ)\r\n    if (header.ARMS !== 0) {\r\n      v.setStats(header.DMIN, header.DMAX, header.DMEAN, header.ARMS)\r\n    }\r\n\r\n    if (Debug) Log.timeEnd('MrcParser._parse ' + this.name)\r\n  }\r\n\r\n  getMatrix () {\r\n    const h = this.volume.header\r\n\r\n    const basisX = [\r\n      h.xlen,\r\n      0,\r\n      0\r\n    ]\r\n\r\n    const basisY = [\r\n      h.ylen * Math.cos(Math.PI / 180.0 * h.gamma),\r\n      h.ylen * Math.sin(Math.PI / 180.0 * h.gamma),\r\n      0\r\n    ]\r\n\r\n    const basisZ = [\r\n      h.zlen * Math.cos(Math.PI / 180.0 * h.beta),\r\n      h.zlen * (\r\n        Math.cos(Math.PI / 180.0 * h.alpha) -\r\n        Math.cos(Math.PI / 180.0 * h.gamma) *\r\n        Math.cos(Math.PI / 180.0 * h.beta)\r\n      ) / Math.sin(Math.PI / 180.0 * h.gamma),\r\n      0\r\n    ]\r\n    basisZ[ 2 ] = Math.sqrt(\r\n      h.zlen * h.zlen * Math.sin(Math.PI / 180.0 * h.beta) *\r\n      Math.sin(Math.PI / 180.0 * h.beta) - basisZ[ 1 ] * basisZ[ 1 ]\r\n    )\r\n\r\n    const basis = [ [], basisX, basisY, basisZ ]\r\n    const nxyz = [ 0, h.MX, h.MY, h.MZ ]\r\n    const mapcrs = [ 0, h.MAPC, h.MAPR, h.MAPS ]\r\n\r\n    const matrix = new Matrix4()\r\n\r\n    matrix.set(\r\n      basis[ mapcrs[1] ][0] / nxyz[ mapcrs[1] ],\r\n      basis[ mapcrs[2] ][0] / nxyz[ mapcrs[2] ],\r\n      basis[ mapcrs[3] ][0] / nxyz[ mapcrs[3] ],\r\n      0,\r\n      basis[ mapcrs[1] ][1] / nxyz[ mapcrs[1] ],\r\n      basis[ mapcrs[2] ][1] / nxyz[ mapcrs[2] ],\r\n      basis[ mapcrs[3] ][1] / nxyz[ mapcrs[3] ],\r\n      0,\r\n      basis[ mapcrs[1] ][2] / nxyz[ mapcrs[1] ],\r\n      basis[ mapcrs[2] ][2] / nxyz[ mapcrs[2] ],\r\n      basis[ mapcrs[3] ][2] / nxyz[ mapcrs[3] ],\r\n      0,\r\n      0, 0, 0, 1\r\n    )\r\n\r\n    matrix.setPosition(new Vector3(\r\n      h.originX, h.originY, h.originZ\r\n    ))\r\n\r\n    matrix.multiply(new Matrix4().makeTranslation(\r\n      h.NXSTART, h.NYSTART, h.NZSTART\r\n    ))\r\n\r\n    return matrix\r\n  }\r\n}\r\n\r\nParserRegistry.add('mrc', MrcParser)\r\nParserRegistry.add('ccp4', MrcParser)\r\nParserRegistry.add('map', MrcParser)\r\n\r\nexport default MrcParser\r\n","/**\r\n * @file Xplor Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Matrix4 } from 'three'\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals'\r\nimport VolumeParser from './volume-parser'\r\n\r\nconst reWhitespace = /\\s+/\r\n\r\nfunction parseNumberLine (line: string) {\r\n  return line.trim().split(reWhitespace).map(parseFloat)\r\n}\r\n\r\ninterface XplorHeader {\r\n  NA: number,\r\n  AMIN: number,\r\n  AMAX: number,\r\n  NB: number,\r\n  BMIN: number,\r\n  BMAX: number,\r\n  NC: number,\r\n  CMIN: number,\r\n  CMAX: number,\r\n  a: number,\r\n  b: number,\r\n  c: number,\r\n  alpha: number,\r\n  beta: number,\r\n  gamma: number,\r\n  RAVE: number,\r\n  RSIGMA: number\r\n}\r\n\r\nclass XplorParser extends VolumeParser {\r\n  get type () { return 'xplor' }\r\n\r\n  _parse () {\r\n    // http://hincklab.uthscsa.edu/html/soft_packs/msi_docs/insight980/xplor/formats.html\r\n    // http://www.mrc-lmb.cam.ac.uk/public/xtal/doc/cns/cns_1.3/tutorial/formats/maps/text.html\r\n\r\n    if (Debug) Log.time('XplorParser._parse ' + this.name)\r\n\r\n    const v = this.volume\r\n    const headerLines = this.streamer.peekLines(8)\r\n    const header: Partial<XplorHeader> = {}\r\n\r\n    let infoStart\r\n    if (headerLines[ 2 ].startsWith('REMARKS')) {\r\n      infoStart = parseInt(headerLines[ 1 ].substring(0, 8)) + 2\r\n    } else {\r\n      infoStart = 5\r\n    }\r\n    const dataStart = infoStart + 3\r\n\r\n    const gridInfo = parseNumberLine(headerLines[ infoStart ])\r\n    header.NA = gridInfo[ 0 ]\r\n    header.AMIN = gridInfo[ 1 ]\r\n    header.AMAX = gridInfo[ 2 ]\r\n    header.NB = gridInfo[ 3 ]\r\n    header.BMIN = gridInfo[ 4 ]\r\n    header.BMAX = gridInfo[ 5 ]\r\n    header.NC = gridInfo[ 6 ]\r\n    header.CMIN = gridInfo[ 7 ]\r\n    header.CMAX = gridInfo[ 8 ]\r\n\r\n    const cellInfo = parseNumberLine(headerLines[ infoStart + 1 ])\r\n    header.a = cellInfo[ 0 ] * this.voxelSize\r\n    header.b = cellInfo[ 1 ] * this.voxelSize\r\n    header.c = cellInfo[ 2 ] * this.voxelSize\r\n    header.alpha = cellInfo[ 3 ]\r\n    header.beta = cellInfo[ 4 ]\r\n    header.gamma = cellInfo[ 5 ]\r\n\r\n    const na = header.AMAX - header.AMIN + 1\r\n    const nb = header.BMAX - header.BMIN + 1\r\n    const nc = header.CMAX - header.CMIN + 1\r\n    const n = na * nb * nc\r\n\r\n    const data = new Float32Array(n)\r\n    const lineSection = Math.ceil(1 + (na * nb) / 6)\r\n    let count = 0\r\n    let lineNo = 0\r\n\r\n    function _parseChunkOfLines (_i: number, _n: number, lines: string[]) {\r\n      for (let i = _i; i < _n; ++i) {\r\n        const line = lines[ i ]\r\n\r\n        if (lineNo >= dataStart && (lineNo - dataStart) % lineSection !== 0 && count < n) {\r\n          for (let j = 0, lj = 6; j < lj; ++j) {\r\n            const value = parseFloat(line.substr(12 * j, 12))\r\n            if (isNaN(value)) { break } // Last line of map section\r\n            data[count++] = value\r\n          }\r\n        } else if (count === n) {\r\n          const lt = line.trim()\r\n          if (lt && lt !== '-9999') {\r\n            const ls = parseNumberLine(line)\r\n            header.RAVE = ls[0]\r\n            header.RSIGMA = ls[1]\r\n          }\r\n        }\r\n\r\n        ++lineNo\r\n      }\r\n    }\r\n\r\n    this.streamer.eachChunkOfLines(function (lines/*, chunkNo, chunkCount */) {\r\n      _parseChunkOfLines(0, lines.length, lines)\r\n    })\r\n\r\n    v.header = header\r\n    v.setData(data, na, nb, nc)\r\n    if (header.RAVE !== 0 && header.RSIGMA !== 1) {\r\n      v.setStats(undefined, undefined, header.RAVE, header.RSIGMA)\r\n    }\r\n\r\n    if (Debug) Log.timeEnd('XplorParser._parse ' + this.name)\r\n  }\r\n\r\n  getMatrix () {\r\n    const h = this.volume.header\r\n\r\n    const basisX = [\r\n      h.a,\r\n      0,\r\n      0\r\n    ]\r\n\r\n    const basisY = [\r\n      h.b * Math.cos(Math.PI / 180.0 * h.gamma),\r\n      h.b * Math.sin(Math.PI / 180.0 * h.gamma),\r\n      0\r\n    ]\r\n\r\n    const basisZ = [\r\n      h.c * Math.cos(Math.PI / 180.0 * h.beta),\r\n      h.c * (\r\n        Math.cos(Math.PI / 180.0 * h.alpha) -\r\n        Math.cos(Math.PI / 180.0 * h.gamma) *\r\n        Math.cos(Math.PI / 180.0 * h.beta)\r\n      ) / Math.sin(Math.PI / 180.0 * h.gamma),\r\n      0\r\n    ]\r\n    basisZ[ 2 ] = Math.sqrt(\r\n      h.c * h.c * Math.sin(Math.PI / 180.0 * h.beta) *\r\n      Math.sin(Math.PI / 180.0 * h.beta) - basisZ[ 1 ] * basisZ[ 1 ]\r\n    )\r\n\r\n    const basis = [ [], basisX, basisY, basisZ ]\r\n    const nxyz = [ 0, h.NA, h.NB, h.NC ]\r\n    const mapcrs = [ 0, 1, 2, 3 ]\r\n\r\n    const matrix = new Matrix4()\r\n\r\n    matrix.set(\r\n      basis[ mapcrs[1] ][0] / nxyz[ mapcrs[1] ],\r\n      basis[ mapcrs[2] ][0] / nxyz[ mapcrs[2] ],\r\n      basis[ mapcrs[3] ][0] / nxyz[ mapcrs[3] ],\r\n      0,\r\n      basis[ mapcrs[1] ][1] / nxyz[ mapcrs[1] ],\r\n      basis[ mapcrs[2] ][1] / nxyz[ mapcrs[2] ],\r\n      basis[ mapcrs[3] ][1] / nxyz[ mapcrs[3] ],\r\n      0,\r\n      basis[ mapcrs[1] ][2] / nxyz[ mapcrs[1] ],\r\n      basis[ mapcrs[2] ][2] / nxyz[ mapcrs[2] ],\r\n      basis[ mapcrs[3] ][2] / nxyz[ mapcrs[3] ],\r\n      0,\r\n      0, 0, 0, 1\r\n    )\r\n\r\n    matrix.multiply(new Matrix4().makeTranslation(\r\n      h.AMIN, h.BMIN, h.CMIN\r\n    ))\r\n\r\n    return matrix\r\n  }\r\n}\r\n\r\nParserRegistry.add('xplor', XplorParser)\r\nParserRegistry.add('cns', XplorParser)\r\n\r\nexport default XplorParser\r\n","/**\r\n * @file Kin Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals'\r\nimport { Vector3 } from 'three'\r\nimport Parser from './parser'\r\n\r\nfunction hsvToRgb (h: number, s: number, v: number) {\r\n  h /= 360\r\n  s /= 100\r\n  v /= 100\r\n  let r, g, b\r\n  const i = Math.floor(h * 6)\r\n  const f = h * 6 - i\r\n  const p = v * (1 - s)\r\n  const q = v * (1 - f * s)\r\n  const t = v * (1 - (1 - f) * s)\r\n  switch (i % 6) {\r\n    case 0: r = v; g = t; b = p; break\r\n    case 1: r = q; g = v; b = p; break\r\n    case 2: r = p; g = v; b = t; break\r\n    case 3: r = p; g = q; b = v; break\r\n    case 4: r = t; g = p; b = v; break\r\n    case 5: r = v; g = p; b = q; break\r\n  }\r\n  return [ r, g, b ] as number []\r\n}\r\n\r\nconst ColorDict: {[k: string]: number[]} = {\r\n  red: hsvToRgb(0, 100, 100),\r\n  orange: hsvToRgb(20, 100, 100),\r\n  gold: hsvToRgb(40, 100, 100),\r\n  yellow: hsvToRgb(60, 100, 100),\r\n  lime: hsvToRgb(80, 100, 100),\r\n  green: hsvToRgb(120, 80, 100),\r\n  sea: hsvToRgb(150, 100, 100),\r\n  cyan: hsvToRgb(180, 100, 85),\r\n  sky: hsvToRgb(210, 75, 95),\r\n  blue: hsvToRgb(240, 70, 100),\r\n  purple: hsvToRgb(275, 75, 100),\r\n  magenta: hsvToRgb(300, 95, 100),\r\n  hotpink: hsvToRgb(335, 100, 100),\r\n  pink: hsvToRgb(350, 55, 100),\r\n  peach: hsvToRgb(25, 75, 100),\r\n  lilac: hsvToRgb(275, 55, 100),\r\n  pinktint: hsvToRgb(340, 30, 100),\r\n  peachtint: hsvToRgb(25, 50, 100),\r\n  yellowtint: hsvToRgb(60, 50, 100),\r\n  greentint: hsvToRgb(135, 40, 100),\r\n  bluetint: hsvToRgb(220, 40, 100),\r\n  lilactint: hsvToRgb(275, 35, 100),\r\n  white: hsvToRgb(0, 0, 100),\r\n  gray: hsvToRgb(0, 0, 50),\r\n  brown: hsvToRgb(20, 45, 75),\r\n  deadwhite: [ 1, 1, 1 ],\r\n  deadblack: [ 0, 0, 0 ],\r\n  invisible: [ 0, 0, 0 ]\r\n}\r\n\r\nconst reWhitespaceComma = /[\\s,]+/\r\nconst reCurlyWhitespace = /[^{}\\s]*{[^{}]+}|[^{}\\s]+/g\r\nconst reTrimCurly = /^{+|}+$/g\r\nconst reTrimQuotes = /^['\"]+|['\"]+$/g\r\nconst reCollapseEqual = /\\s*=\\s*/g\r\n\r\nfunction parseListDef (line: string) {\r\n  let name\r\n  let defaultColor\r\n  let master = []\r\n  let width\r\n\r\n  line = line.replace(reCollapseEqual, '=')\r\n\r\n  const lm = line.match(reCurlyWhitespace) as RegExpMatchArray\r\n  for (let j = 1; j < lm.length; ++j) {\r\n    const e = lm[ j ]\r\n    if (e[ 0 ] === '{') {\r\n      name = e.substring(1, e.length - 1)\r\n    } else {\r\n      const es = e.split('=')\r\n      if (es.length === 2) {\r\n        if (es[ 0 ] === 'color') {\r\n          defaultColor = ColorDict[ es[ 1 ] ]\r\n        } else if (es[ 0 ] === 'width') {\r\n          width = parseInt(es[ 1 ])\r\n        } else if (es[ 0 ] === 'master') {\r\n          master.push(es[ 1 ].replace(reTrimCurly, ''))\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    listName: name,\r\n    listColor: defaultColor,\r\n    listMasters: master,\r\n    listWidth: width\r\n  }\r\n}\r\n\r\nfunction parseListElm (line: string) {\r\n  line = line.trim()\r\n\r\n  const idx1 = line.indexOf('{')\r\n  const idx2 = line.indexOf('}')\r\n  const ls = line.substr(idx2 + 1).split(reWhitespaceComma)\r\n\r\n  const label = line.substr(idx1 + 1, idx2 - 1)\r\n  const position = [\r\n    parseFloat(ls[ ls.length - 3 ]),\r\n    parseFloat(ls[ ls.length - 2 ]),\r\n    parseFloat(ls[ ls.length - 1 ])\r\n  ]\r\n  let color, width, radius\r\n  let lineBreak = false\r\n  let triangleBreak = false\r\n  for (let lsindex = 4; lsindex <= ls.length; lsindex++) {\r\n    const literal = ls[ ls.length - lsindex ]\r\n    if (literal in ColorDict) {\r\n      color = ColorDict[ ls[ ls.length - lsindex ] ]\r\n    }\r\n    if (literal.startsWith('width')) {\r\n      width = parseInt(literal.substring(5))\r\n    }\r\n    if (literal.startsWith('r=')) {\r\n      radius = parseFloat(literal.split('=')[1])\r\n    }\r\n    if (literal.startsWith('P')) {\r\n      lineBreak = true\r\n    }\r\n    if (literal.startsWith('X')) {\r\n      triangleBreak = true\r\n    }\r\n  }\r\n  // const color = line[ idx2 + 1 ] === ' ' ? undefined : ColorDict[ ls[ 0 ] ]\r\n\r\n  return {\r\n    label: label,\r\n    position: position,\r\n    color: color,\r\n    radius: radius,\r\n    width: width,\r\n    isLineBreak: lineBreak,\r\n    isTriangleBreak: triangleBreak\r\n  }\r\n}\r\n\r\nfunction parseStr (line: string) {\r\n  const start = line.indexOf('{')\r\n  const end = line.indexOf('}')\r\n  return line.substring(\r\n    start !== -1 ? start + 1 : 0,\r\n    end !== -1 ? end : undefined\r\n  ).trim()\r\n}\r\n\r\nfunction parseFlag (line: string) {\r\n  const end = line.indexOf('}')\r\n  return end === -1 ? undefined : line.substr(end + 1).trim()\r\n}\r\n\r\nfunction parseGroup (line: string) {\r\n  let name:string = ''\r\n  let master:string[] = []\r\n  let flags: {[k: string]: string|boolean} = {}\r\n\r\n  line = line.replace(reCollapseEqual, '=')\r\n\r\n  const lm = line.match(reCurlyWhitespace)  as RegExpMatchArray\r\n  for (let j = 1; j < lm.length; ++j) {\r\n    const e = lm[ j ]\r\n    if (e[ 0 ] === '{') {\r\n      name = e.substring(1, e.length - 1)\r\n    } else {\r\n      const es = e.split('=')\r\n      if (es.length === 2) {\r\n        if (es[ 0 ] === 'master') {\r\n          master.push(es[ 1 ].replace(reTrimCurly, ''))\r\n        } else {\r\n          flags[ es[ 0 ] ] = es[ 1 ].replace(reTrimCurly, '')\r\n        }\r\n      } else {\r\n        flags[ es[ 0 ] ] = true\r\n      }\r\n    }\r\n  }\r\n\r\n  return { groupName: name,\r\n           groupFlags: flags,\r\n           groupMasters: master\r\n  }\r\n}\r\ninterface RibbonObject {\r\n  labelArray: string[],\r\n  positionArray: number[],\r\n  breakArray: boolean[],\r\n  colorArray: number[],\r\n  name?: string,\r\n  masterArray: any[]\r\n}\r\nfunction convertKinTriangleArrays (ribbonObject: RibbonObject) {\r\n  // have to convert ribbons/triangle lists from stripdrawmode to normal drawmode\r\n  // index                    [ 0 1 2 3 4 5 6 7 8 91011 ]\r\n  // label [ 0 1 2 3 4 5 ] to [ 0 1 2 1 2 3 2 3 4 3 4 5 ]\r\n  // convertedindex                                      [ 0 1 2 3 4 5 6 7 8 91011121314151617181920212223242526 ]\r\n  // index          [ 0 1 2 3 4 5 6 7 8 91011121314 ]    [ 0 1 2 3 4 5 6 7 8 3 4 5 6 7 8 91011 6 7 8 91011121314 ]\r\n  // position/color [ 0 0 0 1 1 1 2 2 2 3 3 3 4 4 4 ] to [ 0 0 0 1 1 1 2 2 2 1 1 1 2 2 2 3 3 3 2 2 2 3 3 3 4 4 4 ]\r\n  let { labelArray, positionArray, colorArray, breakArray } = ribbonObject\r\n  let convertedLabels = []\r\n  for (let i = 0; i < (labelArray.length - 2) * 3; ++i) {\r\n    convertedLabels[i] = labelArray[i - Math.floor(i / 3) * 2]\r\n  }\r\n  let convertedBreaks = []\r\n  for (let i = 0; i < (breakArray.length - 2) * 3; ++i) {\r\n    convertedBreaks[i] = breakArray[i - Math.floor(i / 3) * 2]\r\n  }\r\n  let convertedPositions = []\r\n  for (let i = 0; i < (positionArray.length / 3 - 2) * 9; ++i) {\r\n    convertedPositions[i] = positionArray[i - Math.floor(i / 9) * 6]\r\n  }\r\n  let convertedColors = []\r\n  for (let i = 0; i < (colorArray.length / 3 - 2) * 9; ++i) {\r\n    convertedColors[i] = colorArray[i - Math.floor(i / 9) * 6]\r\n  }\r\n  let vector3Positions = []\r\n  for (let i = 0; i < (convertedPositions.length) / 3; ++i) {\r\n    vector3Positions.push(new Vector3(convertedPositions[i * 3], convertedPositions[i * 3] + 1, convertedPositions[i * 3] + 2))\r\n  }\r\n  //let normals = []\r\n  //for (let i = 0; i < vector3Positions.length - 1; ++i) {\r\n  //  let normalVec3 = vector3Positions[i].cross(vector3Positions[i + 1])\r\n  //  normals.push(normalVec3.x)\r\n  //  normals.push(normalVec3.y)\r\n  //  normals.push(normalVec3.z)\r\n  //}\r\n  return {\r\n    name: ribbonObject.name,\r\n    masterArray: ribbonObject.masterArray,\r\n    labelArray: convertedLabels,\r\n    positionArray: convertedPositions,\r\n    breakArray: convertedBreaks,\r\n    colorArray: convertedColors\r\n  }\r\n}\r\n\r\nfunction removePointBreaksTriangleArrays (convertedRibbonObject: RibbonObject) {\r\n  // after converting ribbon/triangle arrys to drawmode, removed point break triangles\r\n  // label [ 0 1 2 3 4 5 ] to [ 0 1 2 1 2 3 2 3 4 3 4 5 ]\r\n  // position/color [ 0 0 0 1 1 1 2 2 2 3 3 3 4 4 4 ] to [ 0 0 0 1 1 1 2 2 2 1 1 1 2 2 2 3 3 3 2 2 2 3 3 3 4 4 4 ]\r\n  let { labelArray, positionArray, colorArray, breakArray } = convertedRibbonObject\r\n  let editedLabels = []\r\n  let editedPositions = []\r\n  let editedColors = []\r\n  let editedBreaks = []\r\n  for (let i = 0; i < breakArray.length / 3; i++) {\r\n    let breakPointer = i * 3\r\n    let positionPointer = i * 9\r\n    if (!breakArray[breakPointer+1]&&!breakArray[breakPointer+2]) {\r\n      editedLabels.push(labelArray[breakPointer])\r\n      editedLabels.push(labelArray[breakPointer+1])\r\n      editedLabels.push(labelArray[breakPointer+2])\r\n      editedBreaks.push(breakArray[breakPointer])\r\n      editedBreaks.push(breakArray[breakPointer+1])\r\n      editedBreaks.push(breakArray[breakPointer+2])\r\n      editedPositions.push(positionArray[positionPointer])\r\n      editedPositions.push(positionArray[positionPointer+1])\r\n      editedPositions.push(positionArray[positionPointer+2])\r\n      editedPositions.push(positionArray[positionPointer+3])\r\n      editedPositions.push(positionArray[positionPointer+4])\r\n      editedPositions.push(positionArray[positionPointer+5])\r\n      editedPositions.push(positionArray[positionPointer+6])\r\n      editedPositions.push(positionArray[positionPointer+7])\r\n      editedPositions.push(positionArray[positionPointer+8])\r\n      editedColors.push(colorArray[positionPointer])\r\n      editedColors.push(colorArray[positionPointer+1])\r\n      editedColors.push(colorArray[positionPointer+2])\r\n      editedColors.push(colorArray[positionPointer+3])\r\n      editedColors.push(colorArray[positionPointer+4])\r\n      editedColors.push(colorArray[positionPointer+5])\r\n      editedColors.push(colorArray[positionPointer+6])\r\n      editedColors.push(colorArray[positionPointer+7])\r\n      editedColors.push(colorArray[positionPointer+8])\r\n    } else {\r\n      //console.log('X triangle break found')\r\n      //console.log('skipping: '+positionArray[positionPointer]+','+positionArray[positionPointer+1]+','+positionArray[positionPointer+2]+','\r\n      //                        +positionArray[positionPointer+3]+','+positionArray[positionPointer+4]+','+positionArray[positionPointer+5]+','\r\n      //                        +positionArray[positionPointer+6]+','+positionArray[positionPointer+7]+','+positionArray[positionPointer+8])\r\n    }\r\n  }\r\n  return {\r\n    name: convertedRibbonObject.name,\r\n    masterArray: convertedRibbonObject.masterArray,\r\n    labelArray: editedLabels,\r\n    positionArray: editedPositions,\r\n    breakArray: editedBreaks,\r\n    colorArray: editedColors\r\n  }\r\n}\r\n\r\ninterface Kinemage {\r\n  kinemage?: number,\r\n  onewidth?: any,\r\n  '1viewid'?: string,\r\n  pdbfile?: string,\r\n  text: string,\r\n  texts: string[],\r\n  captions: string[],\r\n  caption: string,\r\n  groupDict: {[k:string]: {[k:string]: boolean}},\r\n  subgroupDict: {[k: string]: any},\r\n  masterDict: {[k:string]: {indent: boolean, visible: boolean}},\r\n  pointmasterDict: {[k: string]: any},\r\n  dotLists: DotList[],\r\n  vectorLists: VectorList[],\r\n  ballLists: any[],\r\n  ribbonLists: RibbonObject[]\r\n}\r\n\r\ninterface DotList {\r\n  name?: string,\r\n  masterArray: any[],\r\n  labelArray: any[],\r\n  positionArray: any[],\r\n  colorArray: any[]\r\n}\r\n\r\ninterface VectorList {\r\n  name?: string,\r\n  masterArray: any[],\r\n  label1Array: string[],\r\n  label2Array: string[],\r\n  position1Array: number[],\r\n  position2Array: number[],\r\n  color1Array: number[],\r\n  color2Array: number[],\r\n  width: number[]\r\n}\r\n\r\nclass KinParser extends Parser {\r\n  kinemage: Kinemage\r\n  get type () { return 'kin' }\r\n  get __objName () { return 'kinemage' }\r\n\r\n  _parse () {\r\n    // http://kinemage.biochem.duke.edu/software/king.php\r\n\r\n    if (Debug) Log.time(`KinParser._parse ${this.name}`)\r\n\r\n    const kinemage: Kinemage = {\r\n      kinemage: undefined,\r\n      onewidth: undefined,\r\n      '1viewid': undefined,\r\n      pdbfile: undefined,\r\n      texts: [],\r\n      text: '',\r\n      captions: [],\r\n      caption: '',\r\n      groupDict: {},\r\n      subgroupDict: {},\r\n      masterDict: {},\r\n      pointmasterDict: {},\r\n      dotLists: [],\r\n      vectorLists: [],\r\n      ballLists: [],\r\n      ribbonLists: []\r\n    }\r\n    this.kinemage = kinemage\r\n\r\n    let currentGroupMasters: string[]\r\n    let currentSubgroupMasters: string[]\r\n\r\n    let isDotList = false\r\n    let prevDotLabel = ''\r\n    let dotDefaultColor: number[]\r\n    let dotLabel: string[], dotPosition: number[], dotColor: number[]\r\n\r\n    let isVectorList = false\r\n    let prevVecLabel = ''\r\n    let prevVecPosition: number[]|null = null\r\n    let prevVecColor: number[]|null = null\r\n    let vecDefaultColor: number[], vecDefaultWidth: number[]\r\n    let vecLabel1: string[], vecLabel2: string[], vecPosition1: number[], vecPosition2: number[], vecColor1: number[], vecColor2: number[]\r\n\r\n    let isBallList = false\r\n    let prevBallLabel = ''\r\n    let ballRadius: number[], ballDefaultColor: number[]\r\n    let ballLabel: string[], ballPosition: number[], ballColor: number[]\r\n\r\n    let isRibbonList = false\r\n    let prevRibbonPointLabel = ''\r\n\r\n    let ribbonListDefaultColor: number[]\r\n    let ribbonPointLabelArray: string[], ribbonPointPositionArray: number[], ribbonPointBreakArray: boolean[], ribbonPointColorArray: number[]\r\n\r\n    let isText = false\r\n    let isCaption = false\r\n\r\n    // @vectorlist {mc} color= white  master= {mainchain}\r\n    // { n   thr A   1  B13.79 1crnFH} P 17.047, 14.099, 3.625 { n   thr A   1  B13.79 1crnFH} L 17.047, 14.099, 3.625\r\n\r\n    // @dotlist {x} color=white master={vdw contact} master={dots}\r\n    // { CB  THR   1  A}sky  'P' 18.915,14.199,5.024\r\n\r\n    function _parseChunkOfLines (_i: number, _n: number, lines: string[]) {\r\n      for (let i = _i; i < _n; ++i) {\r\n        const line = lines[ i ]\r\n\r\n        if (line[ 0 ] === '@') {\r\n          isDotList = false\r\n          isVectorList = false\r\n          isBallList = false\r\n          isRibbonList = false\r\n          isText = false\r\n          isCaption = false\r\n        }\r\n\r\n        if (!line) {\r\n          isDotList = false\r\n          isVectorList = false\r\n          isBallList = false\r\n          isRibbonList = false\r\n        } else if (line.startsWith('@dotlist')) {\r\n          // @dotlist {x} color=white master={vdw contact} master={dots}\r\n\r\n          let { listColor, listName, listMasters } = parseListDef(line)\r\n\r\n          isDotList = true\r\n          prevDotLabel = ''\r\n          dotLabel = []\r\n          dotPosition = []\r\n          dotColor = []\r\n          dotDefaultColor = listColor as number[]\r\n\r\n          if (currentGroupMasters) {\r\n            listMasters = listMasters.concat(currentGroupMasters)\r\n          }\r\n          if (currentSubgroupMasters) {\r\n            listMasters = listMasters.concat(currentSubgroupMasters)\r\n          }\r\n\r\n          kinemage.dotLists.push({\r\n            name: listName,\r\n            masterArray: listMasters,\r\n            labelArray: dotLabel,\r\n            positionArray: dotPosition,\r\n            colorArray: dotColor\r\n          })\r\n        } else if (line.startsWith('@vectorlist')) {\r\n          // @vectorlist {x} color=white master={small overlap} master={dots}\r\n\r\n          let { listMasters, listName, listWidth, listColor } = parseListDef(line)\r\n\r\n          if (listMasters) {\r\n            listMasters.forEach(function (name: string) {\r\n              if (!kinemage.masterDict[ name ]) {\r\n                kinemage.masterDict[ name ] = {\r\n                  indent: false,\r\n                  visible: false\r\n                }\r\n              }\r\n            })\r\n          }\r\n\r\n          isVectorList = true\r\n          prevVecLabel = ''\r\n          prevVecPosition = null\r\n          prevVecColor = null\r\n          vecLabel1 = []\r\n          vecLabel2 = []\r\n          vecPosition1 = []\r\n          vecPosition2 = []\r\n          vecColor1 = []\r\n          vecColor2 = []\r\n          vecDefaultColor = listColor as number[]\r\n          vecDefaultWidth = []\r\n          if (listWidth) {\r\n            vecDefaultWidth.push(listWidth)\r\n          }\r\n\r\n          if (currentGroupMasters) {\r\n            listMasters = listMasters.concat(currentGroupMasters)\r\n          }\r\n          if (currentSubgroupMasters) {\r\n            listMasters = listMasters.concat(currentSubgroupMasters)\r\n          }\r\n\r\n          kinemage.vectorLists.push({\r\n            name: listName,\r\n            masterArray: listMasters,\r\n            label1Array: vecLabel1,\r\n            label2Array: vecLabel2,\r\n            position1Array: vecPosition1,\r\n            position2Array: vecPosition2,\r\n            color1Array: vecColor1,\r\n            color2Array: vecColor2,\r\n            width: vecDefaultWidth\r\n          })\r\n        } else if (line.startsWith('@balllist')) {\r\n          let { listName, listColor, listMasters } = parseListDef(line)\r\n\r\n          if (listMasters) {\r\n            listMasters.forEach(function (name: string) {\r\n              if (!kinemage.masterDict[ name ]) {\r\n                kinemage.masterDict[ name ] = {\r\n                  indent: false,\r\n                  visible: false\r\n                }\r\n              }\r\n            })\r\n          }\r\n\r\n          isBallList = true\r\n\r\n          prevBallLabel = ''\r\n          ballLabel = []\r\n          ballRadius = []\r\n          ballPosition = []\r\n          ballColor = []\r\n          ballDefaultColor = listColor as number[]\r\n\r\n          if (currentGroupMasters) {\r\n            listMasters = listMasters.concat(currentGroupMasters)\r\n          }\r\n          if (currentSubgroupMasters) {\r\n            listMasters = listMasters.concat(currentSubgroupMasters)\r\n          }\r\n\r\n          kinemage.ballLists.push({\r\n            name: listName,\r\n            masterArray: listMasters,\r\n            labelArray: ballLabel,\r\n            radiusArray: ballRadius,\r\n            positionArray: ballPosition,\r\n            colorArray: ballColor\r\n          })\r\n        } else if (line.startsWith('@ribbonlist')||line.startsWith('@trianglelist')) {\r\n          let { listMasters, listName, listColor } = parseListDef(line)\r\n\r\n          if (listMasters) {\r\n            listMasters.forEach(function (name: string) {\r\n              if (!kinemage.masterDict[ name ]) {\r\n                kinemage.masterDict[ name ] = {\r\n                  indent: false,\r\n                  visible: false\r\n                }\r\n              }\r\n            })\r\n          }\r\n          isRibbonList = true\r\n          prevRibbonPointLabel = ''\r\n          ribbonPointLabelArray = []\r\n          ribbonPointPositionArray = []\r\n          ribbonPointBreakArray = []\r\n          ribbonPointColorArray = []\r\n          ribbonListDefaultColor = listColor as number[]\r\n\r\n          if (currentGroupMasters) {\r\n            listMasters = listMasters.concat(currentGroupMasters)\r\n          }\r\n          if (currentSubgroupMasters) {\r\n            listMasters = listMasters.concat(currentSubgroupMasters)\r\n          }\r\n\r\n          kinemage.ribbonLists.push({\r\n            name: listName,\r\n            masterArray: listMasters,\r\n            labelArray: ribbonPointLabelArray,\r\n            positionArray: ribbonPointPositionArray,\r\n            breakArray: ribbonPointBreakArray,\r\n            colorArray: ribbonPointColorArray\r\n          })\r\n        } else if (line.startsWith('@text')) {\r\n          isText = true\r\n          kinemage.texts.push(line.substr(5))\r\n        } else if (line.startsWith('@caption')) {\r\n          isCaption = true\r\n          kinemage.captions.push(line.substr(8))\r\n        } else if (isDotList) {\r\n          // { CB  THR   1  A}sky  'P' 18.915,14.199,5.024\r\n\r\n          let { label, color, position } = parseListElm(line)\r\n\r\n          if (label === '\"') {\r\n            label = prevDotLabel\r\n          } else {\r\n            prevDotLabel = label\r\n          }\r\n\r\n          if (color === undefined) {\r\n            color = dotDefaultColor\r\n          }\r\n\r\n          dotLabel.push(label)\r\n          dotPosition.push(...position)\r\n          dotColor.push(...color)\r\n        } else if (isVectorList) {\r\n          // { n   thr A   1  B13.79 1crnFH} P 17.047, 14.099, 3.625 { n   thr A   1  B13.79 1crnFH} L 17.047, 14.099, 3.625\r\n\r\n          let doubleLine = line.replace(/(?!^){/g, '\\n{')\r\n          let splitLine = doubleLine.split(/\\n/)\r\n\r\n          for (var i2 = 0; i2 < splitLine.length; i2++) {\r\n            let singlePointLine = splitLine[i2]\r\n            let { label, color, width, position, isLineBreak } = parseListElm(singlePointLine)\r\n\r\n            if (label === '\"') {\r\n              label = prevVecLabel\r\n            } else {\r\n              prevVecLabel = label\r\n            }\r\n\r\n            if (color === undefined) {\r\n              color = vecDefaultColor\r\n            }\r\n\r\n            if (!isLineBreak) {\r\n              if (prevVecPosition !== null) {\r\n                if (width) {\r\n                  vecDefaultWidth.push(width)\r\n                }\r\n\r\n                vecLabel1.push(prevVecLabel)\r\n                vecPosition1.push(...prevVecPosition)\r\n                vecColor1.push(...prevVecColor as number[])\r\n\r\n                vecLabel2.push(label)\r\n                vecPosition2.push(...position)\r\n                vecColor2.push(...color)\r\n\r\n              }\r\n            }\r\n\r\n            prevVecLabel = label\r\n            prevVecPosition = position\r\n            prevVecColor = color\r\n          }\r\n        } else if (isBallList) {\r\n          // {cb arg A   1   1.431 -106.80} r=1.431  39.085, 8.083, 22.182\r\n\r\n          let { label, radius, color, position } = parseListElm(line)\r\n\r\n          if (label === '\"') {\r\n            label = prevBallLabel\r\n          } else {\r\n            prevBallLabel = label\r\n          }\r\n\r\n          if (radius === undefined) {\r\n            radius = 1 // temporary default radius\r\n          }\r\n\r\n          if (color === undefined) {\r\n            color = ballDefaultColor\r\n          }\r\n\r\n          ballLabel.push(label)\r\n          ballRadius.push(radius)\r\n          ballPosition.push(...position)\r\n          ballColor.push(...color)\r\n        } else if (isRibbonList) {\r\n          let { label, color, position, isTriangleBreak } = parseListElm(line)\r\n\r\n          if (label === '\"') {\r\n            label = prevRibbonPointLabel\r\n          } else {\r\n            prevRibbonPointLabel = label\r\n          }\r\n\r\n          if (color === undefined) {\r\n            color = ribbonListDefaultColor\r\n          }\r\n\r\n          ribbonPointLabelArray.push(label)\r\n          ribbonPointPositionArray.push(...position)\r\n          ribbonPointBreakArray.push(isTriangleBreak)\r\n          ribbonPointColorArray.push(...color)\r\n        } else if (isText) {\r\n          kinemage.texts.push(line)\r\n        } else if (isCaption) {\r\n          kinemage.captions.push(line)\r\n        } else if (line.startsWith('@kinemage')) {\r\n          kinemage.kinemage = parseInt(line.substr(9).trim())\r\n        } else if (line.startsWith('@onewidth')) {\r\n          kinemage.onewidth = true\r\n        } else if (line.startsWith('@1viewid')) {\r\n          kinemage[ '1viewid' ] = parseStr(line)\r\n        } else if (line.startsWith('@pdbfile')) {\r\n          kinemage.pdbfile = parseStr(line)\r\n        } else if (line.startsWith('@group')) {\r\n          let { groupName, groupFlags, groupMasters } = parseGroup(line)\r\n          if (!kinemage.groupDict[ groupName as string ]) {\r\n            kinemage.groupDict[ groupName as string ] = {\r\n              dominant: false,\r\n              animate: false\r\n            }\r\n            currentGroupMasters = groupMasters\r\n          }\r\n\r\n          if (currentGroupMasters) {\r\n            currentGroupMasters.forEach(function (master) {\r\n              if (!kinemage.masterDict[ master ]) {\r\n                kinemage.masterDict[ master ] = {\r\n                  indent: false,\r\n                  visible: false\r\n                }\r\n              }\r\n            })\r\n          }\r\n\r\n          for (let key in groupFlags as {[k: string]: boolean}) {\r\n            kinemage.groupDict[ groupName as string ][ key ] = (groupFlags as {[k: string]: boolean})[ key ]\r\n          }\r\n        } else if (line.startsWith('@subgroup')) {\r\n          const { groupName, groupFlags, groupMasters } = parseGroup(line)\r\n\r\n          if (!kinemage.subgroupDict[ groupName as string ]) {\r\n            kinemage.subgroupDict[ groupName as string ] = {\r\n              dominant: false,\r\n              animate: false\r\n            }\r\n            currentSubgroupMasters = groupMasters\r\n          }\r\n\r\n          if (currentSubgroupMasters) {\r\n            currentSubgroupMasters.forEach(function (master) {\r\n              if (!kinemage.masterDict[ master ]) {\r\n                kinemage.masterDict[ master ] = {\r\n                  indent: false,\r\n                  visible: false\r\n                }\r\n              }\r\n            })\r\n          }\r\n\r\n          for (let key in groupFlags as {[k: string]: boolean}) {\r\n            kinemage.subgroupDict[ groupName as string ][ key ] = (groupFlags as {[k: string]: boolean})[ key ]\r\n          }\r\n        } else if (line.startsWith('@master')) {\r\n          const name = parseStr(line)\r\n          const flag = parseFlag(line)\r\n\r\n          if (!kinemage.masterDict[ name ]) {\r\n            kinemage.masterDict[ name ] = {\r\n              indent: false,\r\n              visible: false\r\n            }\r\n          }\r\n\r\n          if (flag === 'on') {\r\n            kinemage.masterDict[ name ].visible = true\r\n          } else if (flag === 'off') {\r\n            kinemage.masterDict[ name ].visible = false\r\n          } else if (flag === 'indent') {\r\n            kinemage.masterDict[ name ].indent = true\r\n          } else if (!flag) {\r\n            // nothing to do\r\n          }\r\n        } else if (line.startsWith('@pointmaster')) {\r\n          const { groupName, groupFlags } = parseGroup(line)\r\n\r\n          kinemage.pointmasterDict[ groupName as string] = {\r\n            id: Object.keys(groupFlags as {[k: string]: boolean})[ 0 ].replace(reTrimQuotes, '')\r\n          }\r\n        } else {\r\n          console.log(line)\r\n        }\r\n      }\r\n    }\r\n\r\n    this.streamer.eachChunkOfLines(function (lines/*, chunkNo, chunkCount */) {\r\n      _parseChunkOfLines(0, lines.length, lines)\r\n    })\r\n\r\n    kinemage.text = kinemage.texts.join('\\n').trim()\r\n    kinemage.caption = kinemage.captions.join('\\n').trim()\r\n    if (kinemage.ribbonLists) {\r\n      let convertedLists: RibbonObject[] = []\r\n      kinemage.ribbonLists.forEach(function (listObject) {\r\n        convertedLists.push(removePointBreaksTriangleArrays(convertKinTriangleArrays(listObject)))\r\n      })\r\n      kinemage.ribbonLists = convertedLists\r\n    }\r\n\r\n    if (Debug) Log.timeEnd(`KinParser._parse ${this.name}`)\r\n  }\r\n}\r\n\r\nParserRegistry.add('kin', KinParser)\r\n\r\nexport default KinParser\r\n","/**\r\n * @file Surface Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Parser, { ParserParameters } from './parser'\r\nimport Surface from '../surface/surface'\r\nimport Streamer from '../streamer/streamer';\r\n\r\nclass SurfaceParser extends Parser {\r\n  constructor (streamer: Streamer, params?:Partial<ParserParameters>) {\r\n    super(streamer, params)\r\n\r\n    this.loader = this.getLoader()\r\n    this.surface = new Surface(this.name, this.path)\r\n  }\r\n\r\n  get type () { return 'surface' }\r\n  get __objName () { return 'surface' }\r\n\r\n  _parse () {\r\n    var geometry = this.loader.parse(this.streamer.asText())\r\n\r\n    this.surface.fromGeometry(geometry)\r\n  }\r\n}\r\n\r\nexport default SurfaceParser\r\n","/**\r\n * @file Obj Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { BufferGeometry, BufferAttribute } from 'three'\r\n\r\nimport { ParserRegistry } from '../globals'\r\nimport SurfaceParser from './surface-parser'\r\n\r\nexport interface _OBJLoader {\r\n  regexp: {[k: string]: RegExp}\r\n}\r\n\r\ninterface _OBJLoaderConstructor {\r\n  (this: _OBJLoader): void\r\n  new(): _OBJLoader\r\n}\r\n\r\ninterface ObjectType {\r\n  name: string,\r\n  fromDeclaration: boolean,\r\n  geometry: {\r\n    vertices: number[],\r\n    normals: number[],\r\n    type?: string\r\n  }\r\n}\r\n/**\r\n * OBJLoader\r\n * @class\r\n * @private\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\nconst OBJLoader = (function OBJLoader (this: _OBJLoader) {\r\n  this.regexp = {\r\n    // v float float float\r\n    vertex_pattern: /^v\\s+([\\d.+\\-eE]+)\\s+([\\d.+\\-eE]+)\\s+([\\d.+\\-eE]+)/,\r\n    // vn float float float\r\n    normal_pattern: /^vn\\s+([\\d.+\\-eE]+)\\s+([\\d.+\\-eE]+)\\s+([\\d.+\\-eE]+)/,\r\n    // vt float float\r\n    uv_pattern: /^vt\\s+([\\d.+\\-eE]+)\\s+([\\d.+\\-eE]+)/,\r\n    // f vertex vertex vertex\r\n    face_vertex: /^f\\s+(-?\\d+)\\s+(-?\\d+)\\s+(-?\\d+)(?:\\s+(-?\\d+))?/,\r\n    // f vertex/uv vertex/uv vertex/uv\r\n    face_vertex_uv: /^f\\s+(-?\\d+)\\/(-?\\d+)\\s+(-?\\d+)\\/(-?\\d+)\\s+(-?\\d+)\\/(-?\\d+)(?:\\s+(-?\\d+)\\/(-?\\d+))?/,\r\n    // f vertex/uv/normal vertex/uv/normal vertex/uv/normal\r\n    face_vertex_uv_normal: /^f\\s+(-?\\d+)\\/(-?\\d+)\\/(-?\\d+)\\s+(-?\\d+)\\/(-?\\d+)\\/(-?\\d+)\\s+(-?\\d+)\\/(-?\\d+)\\/(-?\\d+)(?:\\s+(-?\\d+)\\/(-?\\d+)\\/(-?\\d+))?/,\r\n    // f vertex//normal vertex//normal vertex//normal\r\n    face_vertex_normal: /^f\\s+(-?\\d+)\\/\\/(-?\\d+)\\s+(-?\\d+)\\/\\/(-?\\d+)\\s+(-?\\d+)\\/\\/(-?\\d+)(?:\\s+(-?\\d+)\\/\\/(-?\\d+))?/,\r\n    // o object_name | g group_name\r\n    object_pattern: /^[og]\\s*(.+)?/,\r\n    // s boolean\r\n    smoothing_pattern: /^s\\s+(\\d+|on|off)/,\r\n    // mtllib file_reference\r\n    material_library_pattern: /^mtllib /,\r\n    // usemtl material_name\r\n    material_use_pattern: /^usemtl /\r\n  }\r\n}) as _OBJLoaderConstructor\r\n\r\nOBJLoader.prototype = {\r\n\r\n  constructor: OBJLoader,\r\n\r\n  setPath: function (value: string) {\r\n    this.path = value\r\n  },\r\n\r\n  _createParserState: function () {\r\n    var state = {\r\n      objects: [] as ObjectType[],\r\n      object: {} as ObjectType,\r\n\r\n      vertices: [],\r\n      normals: [],\r\n\r\n      startObject: function (name: string, fromDeclaration: boolean) {\r\n        // If the current object (initial from reset) is not from a g/o declaration in the parsed\r\n        // file. We need to use it for the first parsed g/o to keep things in sync.\r\n        if (this.object && this.object.fromDeclaration === false) {\r\n          this.object.name = name\r\n          this.object.fromDeclaration = (fromDeclaration !== false)\r\n          return\r\n        }\r\n\r\n        this.object = {\r\n          name: name || '',\r\n          geometry: {\r\n            vertices: [],\r\n            normals: []\r\n          },\r\n          fromDeclaration: (fromDeclaration !== false)\r\n        }\r\n\r\n        this.objects.push(this.object)\r\n      },\r\n\r\n      parseVertexIndex: function (value: string, len: number) {\r\n        var index = parseInt(value, 10)\r\n        return (index >= 0 ? index - 1 : index + len / 3) * 3\r\n      },\r\n\r\n      parseNormalIndex: function (value: string, len: number) {\r\n        var index = parseInt(value, 10)\r\n        return (index >= 0 ? index - 1 : index + len / 3) * 3\r\n      },\r\n\r\n      addVertex: function (a: number, b: number, c: number) {\r\n        var src = this.vertices\r\n        var dst = this.object.geometry.vertices\r\n\r\n        dst.push(src[ a + 0 ])\r\n        dst.push(src[ a + 1 ])\r\n        dst.push(src[ a + 2 ])\r\n        dst.push(src[ b + 0 ])\r\n        dst.push(src[ b + 1 ])\r\n        dst.push(src[ b + 2 ])\r\n        dst.push(src[ c + 0 ])\r\n        dst.push(src[ c + 1 ])\r\n        dst.push(src[ c + 2 ])\r\n      },\r\n\r\n      addVertexLine: function (a: number) {\r\n        var src = this.vertices\r\n        var dst = this.object.geometry.vertices\r\n\r\n        dst.push(src[ a + 0 ])\r\n        dst.push(src[ a + 1 ])\r\n        dst.push(src[ a + 2 ])\r\n      },\r\n\r\n      addNormal: function (a: number, b: number, c: number) {\r\n        var src = this.normals\r\n        var dst = this.object.geometry.normals\r\n\r\n        dst.push(src[ a + 0 ])\r\n        dst.push(src[ a + 1 ])\r\n        dst.push(src[ a + 2 ])\r\n        dst.push(src[ b + 0 ])\r\n        dst.push(src[ b + 1 ])\r\n        dst.push(src[ b + 2 ])\r\n        dst.push(src[ c + 0 ])\r\n        dst.push(src[ c + 1 ])\r\n        dst.push(src[ c + 2 ])\r\n      },\r\n\r\n      addFace: function (a: string, b: string, c: string, d?: string, na?: string, nb?: string, nc?: string, nd?: string) {\r\n        var vLen = this.vertices.length\r\n\r\n        var ia = this.parseVertexIndex(a, vLen)\r\n        var ib = this.parseVertexIndex(b, vLen)\r\n        var ic = this.parseVertexIndex(c, vLen)\r\n        var id\r\n\r\n        if (d === undefined) {\r\n          this.addVertex(ia, ib, ic)\r\n        } else {\r\n          id = this.parseVertexIndex(d, vLen)\r\n\r\n          this.addVertex(ia, ib, id)\r\n          this.addVertex(ib, ic, id)\r\n        }\r\n\r\n        if (na !== undefined) {\r\n          // Normals are many times the same. If so, skip function call and parseInt.\r\n          var nLen = this.normals.length\r\n          ia = this.parseNormalIndex(na, nLen)\r\n\r\n          ib = na === nb ? ia : this.parseNormalIndex(nb!, nLen)\r\n          ic = na === nc ? ia : this.parseNormalIndex(nc!, nLen)\r\n\r\n          if (d === undefined) {\r\n            this.addNormal(ia, ib, ic)\r\n          } else {\r\n            id = this.parseNormalIndex(nd!, nLen)\r\n\r\n            this.addNormal(ia, ib, id)\r\n            this.addNormal(ib, ic, id)\r\n          }\r\n        }\r\n      },\r\n\r\n      addLineGeometry: function (vertices: string[]) {\r\n        this.object.geometry.type = 'Line'\r\n\r\n        var vLen = this.vertices.length\r\n\r\n        for (var vi = 0, l = vertices.length; vi < l; vi++) {\r\n          this.addVertexLine(this.parseVertexIndex(vertices[ vi ], vLen))\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    state.startObject('', false)\r\n\r\n    return state\r\n  },\r\n\r\n  parse: function (text: string) {\r\n    var state = this._createParserState()\r\n\r\n    if (text.indexOf('\\r\\n') !== -1) {\r\n      // This is faster than String.split with regex that splits on both\r\n      text = text.replace(/\\r\\n/g, '\\n')\r\n    }\r\n\r\n    if (text.indexOf('\\\\\\n') !== -1) {\r\n      // join lines separated by a line continuation character (\\)\r\n      text = text.replace(/\\\\\\n/g, '')\r\n    }\r\n\r\n    var i, l\r\n    var lines = text.split('\\n')\r\n    var line = ''\r\n    var lineFirstChar = ''\r\n    var lineSecondChar = ''\r\n    var lineLength = 0\r\n    var result = []\r\n\r\n    // Faster to just trim left side of the line. Use if available.\r\n    var trimLeft = (typeof ''.trimLeft === 'function')\r\n\r\n    for (i = 0, l = lines.length; i < l; i++) {\r\n      line = lines[ i ]\r\n\r\n      line = trimLeft ? line.trimLeft() : line.trim()\r\n\r\n      lineLength = line.length\r\n\r\n      if (lineLength === 0) continue\r\n\r\n      lineFirstChar = line.charAt(0)\r\n\r\n      // @todo invoke passed in handler if any\r\n      if (lineFirstChar === '#') continue\r\n\r\n      if (lineFirstChar === 'v') {\r\n        lineSecondChar = line.charAt(1)\r\n\r\n        if (lineSecondChar === ' ' && (result = this.regexp.vertex_pattern.exec(line)) !== null) {\r\n          // 0                  1      2      3\r\n          // [\"v 1.0 2.0 3.0\", \"1.0\", \"2.0\", \"3.0\"]\r\n\r\n          state.vertices.push(\r\n            parseFloat(result[ 1 ]),\r\n            parseFloat(result[ 2 ]),\r\n            parseFloat(result[ 3 ])\r\n          )\r\n        } else if (lineSecondChar === 'n' && (result = this.regexp.normal_pattern.exec(line)) !== null) {\r\n          // 0                   1      2      3\r\n          // [\"vn 1.0 2.0 3.0\", \"1.0\", \"2.0\", \"3.0\"]\r\n\r\n          state.normals.push(\r\n            parseFloat(result[ 1 ]),\r\n            parseFloat(result[ 2 ]),\r\n            parseFloat(result[ 3 ])\r\n          )\r\n        } else if (lineSecondChar === 't' && this.regexp.uv_pattern.exec(line) !== null) {\r\n\r\n          // ignore uv line\r\n\r\n        } else {\r\n          throw new Error(\"Unexpected vertex/normal/uv line: '\" + line + \"'\")\r\n        }\r\n      } else if (lineFirstChar === 'f') {\r\n        if ((result = this.regexp.face_vertex_uv_normal.exec(line)) !== null) {\r\n          // f vertex/uv/normal vertex/uv/normal vertex/uv/normal\r\n          // 0                        1    2    3    4    5    6    7    8    9   10         11         12\r\n          // [\"f 1/1/1 2/2/2 3/3/3\", \"1\", \"1\", \"1\", \"2\", \"2\", \"2\", \"3\", \"3\", \"3\", undefined, undefined, undefined]\r\n\r\n          state.addFace(\r\n            result[ 1 ], result[ 4 ], result[ 7 ], result[ 10 ],\r\n            // result[ 2 ], result[ 5 ], result[ 8 ], result[ 11 ],  // ignore uv part\r\n            result[ 3 ], result[ 6 ], result[ 9 ], result[ 12 ]\r\n          )\r\n        } else if (this.regexp.face_vertex_uv.exec(line) !== null) {\r\n\r\n          // ignore uv line\r\n\r\n        } else if ((result = this.regexp.face_vertex_normal.exec(line)) !== null) {\r\n          // f vertex//normal vertex//normal vertex//normal\r\n          // 0                     1    2    3    4    5    6   7          8\r\n          // [\"f 1//1 2//2 3//3\", \"1\", \"1\", \"2\", \"2\", \"3\", \"3\", undefined, undefined]\r\n\r\n          state.addFace(\r\n            result[ 1 ], result[ 3 ], result[ 5 ], result[ 7 ],\r\n            result[ 2 ], result[ 4 ], result[ 6 ], result[ 8 ]\r\n          )\r\n        } else if ((result = this.regexp.face_vertex.exec(line)) !== null) {\r\n          // f vertex vertex vertex\r\n          // 0            1    2    3   4\r\n          // [\"f 1 2 3\", \"1\", \"2\", \"3\", undefined]\r\n\r\n          state.addFace(\r\n            result[ 1 ], result[ 2 ], result[ 3 ], result[ 4 ]\r\n          )\r\n        } else {\r\n          throw new Error(\"Unexpected face line: '\" + line + \"'\")\r\n        }\r\n      } else if (lineFirstChar === 'l') {\r\n        var lineParts = line.substring(1).trim().split(' ')\r\n        var lineVertices = []\r\n        var lineUVs = []\r\n\r\n        if (line.indexOf('/') === -1) {\r\n          lineVertices = lineParts\r\n        } else {\r\n          for (var li = 0, llen = lineParts.length; li < llen; li++) {\r\n            var parts = lineParts[ li ].split('/')\r\n\r\n            if (parts[ 0 ] !== '') lineVertices.push(parts[ 0 ])\r\n            if (parts[ 1 ] !== '') lineUVs.push(parts[ 1 ])\r\n          }\r\n        }\r\n        state.addLineGeometry(lineVertices, lineUVs)\r\n      } else if ((result = this.regexp.object_pattern.exec(line)) !== null) {\r\n        // o object_name\r\n        // or\r\n        // g group_name\r\n\r\n        var name = result[ 0 ].substr(1).trim()\r\n        state.startObject(name)\r\n\r\n        // ignore material related lines\r\n        // eslint-disable-next-line no-empty\r\n      } else if (this.regexp.material_use_pattern.test(line)) {\r\n        // eslint-disable-next-line no-empty\r\n      } else if (this.regexp.material_library_pattern.test(line)) {\r\n        // eslint-disable-next-line no-empty\r\n      } else if (this.regexp.smoothing_pattern.exec(line) !== null) {\r\n      } else {\r\n        // Handle null terminated files without exception\r\n        if (line === '\\0') continue\r\n\r\n        throw new Error(\"Unexpected line: '\" + line + \"'\")\r\n      }\r\n    }\r\n\r\n    var container = []\r\n\r\n    for (i = 0, l = state.objects.length; i < l; i++) {\r\n      var object = state.objects[ i ]\r\n      var geometry = object.geometry\r\n\r\n      // Skip o/g line declarations that did not follow with any faces\r\n      if (geometry.vertices.length === 0) continue\r\n\r\n      var buffergeometry = new BufferGeometry()\r\n\r\n      buffergeometry.setAttribute('position', new BufferAttribute(new Float32Array(geometry.vertices), 3))\r\n\r\n      if (geometry.normals.length > 0) {\r\n        buffergeometry.setAttribute('normal', new BufferAttribute(new Float32Array(geometry.normals), 3))\r\n      } else {\r\n        buffergeometry.computeVertexNormals()\r\n      }\r\n\r\n      container.push(buffergeometry)\r\n    }\r\n\r\n    return container\r\n  }\r\n\r\n}\r\n\r\nclass ObjParser extends SurfaceParser {\r\n  get type () { return 'obj' }\r\n\r\n  getLoader () {\r\n    return new OBJLoader()\r\n  }\r\n}\r\n\r\nParserRegistry.add('obj', ObjParser)\r\n\r\nexport default ObjParser\r\n","/**\r\n * @file Ply Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Geometry, Vector3, Face3, Color } from 'three'\r\n\r\nimport { ParserRegistry } from '../globals'\r\nimport SurfaceParser from './surface-parser'\r\n\r\n/**\r\n * PLYLoader\r\n * @class\r\n * @private\r\n * @author Wei Meng / http://about.me/menway\r\n *\r\n * @description\r\n * A THREE loader for PLY ASCII files (known as the Polygon File Format or the Stanford Triangle Format).\r\n *\r\n * Limitations: ASCII decoding assumes file is UTF-8.\r\n *\r\n * @example\r\n * var loader = new THREE.PLYLoader();\r\n * loader.load('./models/ply/ascii/dolphins.ply', function (geometry) {\r\n *     scene.add( new THREE.Mesh( geometry ) );\r\n * } );\r\n *\r\n * // If the PLY file uses non standard property names, they can be mapped while\r\n * // loading. For example, the following maps the properties\r\n * // “diffuse_(red|green|blue)” in the file to standard color names.\r\n *\r\n * loader.setPropertyNameMapping( {\r\n *     diffuse_red: 'red',\r\n *     diffuse_green: 'green',\r\n *     diffuse_blue: 'blue'\r\n * } );\r\n *\r\n */\r\n\r\nexport interface _PLYLoader {\r\n  propertyNameMapping: {[k: string]: string}\r\n}\r\n\r\ninterface _PLYLoaderConstructor {\r\n  (this: _PLYLoader): void\r\n  new(): _PLYLoader\r\n}\r\n\r\ninterface PLYProperty {\r\n  type: string,\r\n  name: string,\r\n  countType: string,\r\n  itemType: string\r\n}\r\n\r\ninterface PLYElement {\r\n  name: string,\r\n  count: number,\r\n  properties: PLYProperty[],\r\n  x: number,\r\n  y: number,\r\n  z: number,\r\n  red: number,\r\n  green: number,\r\n  blue: number,\r\n  [k:string]: any\r\n}\r\n\r\ninterface PLYHeader {\r\n  format: string,\r\n  version: string,\r\n  comments: string[],\r\n  elements: PLYElement[],\r\n  headerLength: number\r\n}\r\n\r\ninterface GeometryPLY extends Geometry {\r\n  useColor: boolean\r\n}\r\n\r\nconst PLYLoader = (function PLYLoader (this: _PLYLoader) {\r\n  this.propertyNameMapping = {}\r\n}) as _PLYLoaderConstructor\r\n\r\nPLYLoader.prototype = {\r\n\r\n  constructor: PLYLoader,\r\n\r\n  setPropertyNameMapping: function (mapping: {[k: string]: string}) {\r\n    this.propertyNameMapping = mapping\r\n  },\r\n\r\n  bin2str: function (buf: ArrayBuffer) {\r\n    var arrayBuffer = new Uint8Array(buf)\r\n    var str = ''\r\n    for (var i = 0; i < buf.byteLength; i++) {\r\n      str += String.fromCharCode(arrayBuffer[ i ]) // implicitly assumes little-endian\r\n    }\r\n\r\n    return str\r\n  },\r\n\r\n  isASCII: function (data: ArrayBuffer) {\r\n    var header = this.parseHeader(this.bin2str(data))\r\n\r\n    return header.format === 'ascii'\r\n  },\r\n\r\n  parse: function (data: string|ArrayBuffer) {\r\n    if (data instanceof ArrayBuffer) {\r\n      return (\r\n        this.isASCII(data)\r\n          ? this.parseASCII(this.bin2str(data))\r\n          : this.parseBinary(data)\r\n      )\r\n    } else {\r\n      return this.parseASCII(data)\r\n    }\r\n  },\r\n\r\n  parseHeader: function (data: string) {\r\n    var patternHeader = /ply([\\s\\S]*)end_header\\s/\r\n    var headerText = ''\r\n    var headerLength = 0\r\n    var result = patternHeader.exec(data)\r\n    if (result !== null) {\r\n      headerText = result[ 1 ]\r\n      headerLength = result[ 0 ].length\r\n    }\r\n\r\n    var header: Partial<PLYHeader> = {\r\n      comments: [],\r\n      elements: [],\r\n      headerLength: headerLength\r\n    }\r\n\r\n    var lines = headerText.split('\\n')\r\n    var currentElement: PLYElement|undefined, lineType, lineValues\r\n\r\n    function makePlyElementProperty (propertValues: string[], propertyNameMapping: {[k: string]: string}) {\r\n      var property = {\r\n        type: propertValues[ 0 ]\r\n      } as PLYProperty\r\n\r\n      if (property.type === 'list') {\r\n        property.name = propertValues[ 3 ]\r\n        property.countType = propertValues[ 1 ]\r\n        property.itemType = propertValues[ 2 ]\r\n      } else {\r\n        property.name = propertValues[ 1 ]\r\n      }\r\n\r\n      if (property.name in propertyNameMapping) {\r\n        property.name = propertyNameMapping[ property.name ]\r\n      }\r\n\r\n      return property\r\n    }\r\n\r\n    for (var i = 0; i < lines.length; i++) {\r\n      var line = lines[ i ]\r\n      line = line.trim()\r\n      if (line === '') {\r\n        continue\r\n      }\r\n      lineValues = line.split(/\\s+/)\r\n      lineType = lineValues.shift()\r\n      line = lineValues.join(' ')\r\n\r\n      switch (lineType) {\r\n        case 'format':\r\n\r\n          header.format = lineValues[ 0 ]\r\n          header.version = lineValues[ 1 ]\r\n\r\n          break\r\n\r\n        case 'comment':\r\n\r\n          header.comments!.push(line)\r\n\r\n          break\r\n\r\n        case 'element':\r\n\r\n          if (currentElement !== undefined) {\r\n            header.elements!.push(currentElement as PLYElement)\r\n          }\r\n\r\n          currentElement = {} as PLYElement\r\n          currentElement.name = lineValues[ 0 ]\r\n          currentElement.count = parseInt(lineValues[ 1 ])\r\n          currentElement.properties = []\r\n\r\n          break\r\n\r\n        case 'property':\r\n\r\n          currentElement!.properties.push(makePlyElementProperty(lineValues, this.propertyNameMapping))\r\n\r\n          break\r\n\r\n        default:\r\n\r\n          console.log('unhandled', lineType, lineValues)\r\n      }\r\n    }\r\n\r\n    if (currentElement !== undefined) {\r\n      header.elements!.push(currentElement)\r\n    }\r\n\r\n    return header\r\n  },\r\n\r\n  parseASCIINumber: function (n: string, type: string) {\r\n    switch (type) {\r\n      case 'char': case 'uchar': case 'short': case 'ushort': case 'int': case 'uint':\r\n      case 'int8': case 'uint8': case 'int16': case 'uint16': case 'int32': case 'uint32':\r\n\r\n        return parseInt(n)\r\n\r\n      case 'float': case 'double': case 'float32': case 'float64':\r\n\r\n        return parseFloat(n)\r\n    }\r\n  },\r\n\r\n  parseASCIIElement: function (properties: PLYProperty[], line: string) {\r\n    var values = line.split(/\\s+/)\r\n\r\n    var element = {} as PLYElement\r\n\r\n    for (var i = 0; i < properties.length; i++) {\r\n      if (properties[ i ].type === 'list') {\r\n        var list = []\r\n        var n = this.parseASCIINumber(values.shift(), properties[ i ].countType)\r\n\r\n        for (var j = 0; j < n; j++) {\r\n          list.push(this.parseASCIINumber(values.shift(), properties[ i ].itemType))\r\n        }\r\n\r\n        element[ properties[ i ].name ] = list\r\n      } else {\r\n        element[ properties[ i ].name ] = this.parseASCIINumber(values.shift(), properties[ i ].type)\r\n      }\r\n    }\r\n\r\n    return element\r\n  },\r\n\r\n  parseASCII: function (data: string) {\r\n    // PLY ascii format specification, as per http://en.wikipedia.org/wiki/PLY_(file_format)\r\n\r\n    var geometry = new Geometry() as GeometryPLY\r\n\r\n    var result\r\n\r\n    var header = this.parseHeader(data)\r\n\r\n    var patternBody = /end_header\\s([\\s\\S]*)$/\r\n    var body = ''\r\n    if ((result = patternBody.exec(data)) !== null) {\r\n      body = result[ 1 ]\r\n    }\r\n\r\n    var lines = body.split('\\n')\r\n    var currentElement = 0\r\n    var currentElementCount = 0\r\n    geometry.useColor = false\r\n\r\n    for (var i = 0; i < lines.length; i++) {\r\n      var line = lines[ i ]\r\n      line = line.trim()\r\n      if (line === '') {\r\n        continue\r\n      }\r\n\r\n      if (currentElementCount >= header.elements[ currentElement ].count) {\r\n        currentElement++\r\n        currentElementCount = 0\r\n      }\r\n\r\n      var element = this.parseASCIIElement(header.elements[ currentElement ].properties, line)\r\n\r\n      this.handleElement(geometry, header.elements[ currentElement ].name, element)\r\n\r\n      currentElementCount++\r\n    }\r\n\r\n    return this.postProcess(geometry)\r\n  },\r\n\r\n  postProcess: function (geometry: GeometryPLY) {\r\n    if (geometry.useColor) {\r\n      for (var i = 0; i < geometry.faces.length; i++) {\r\n        geometry.faces[ i ].vertexColors = [\r\n          geometry.colors[ geometry.faces[ i ].a ],\r\n          geometry.colors[ geometry.faces[ i ].b ],\r\n          geometry.colors[ geometry.faces[ i ].c ]\r\n        ]\r\n      }\r\n\r\n      geometry.elementsNeedUpdate = true\r\n    }\r\n\r\n    geometry.computeBoundingSphere()\r\n\r\n    return geometry\r\n  },\r\n\r\n  handleElement: function (geometry: GeometryPLY, elementName: string, element: PLYElement) {\r\n    if (elementName === 'vertex') {\r\n      geometry.vertices.push(\r\n        new Vector3(element.x, element.y, element.z)\r\n      )\r\n\r\n      if ('red' in element && 'green' in element && 'blue' in element) {\r\n        geometry.useColor = true\r\n\r\n        var color = new Color()\r\n        color.setRGB(element.red / 255.0, element.green / 255.0, element.blue / 255.0)\r\n        geometry.colors.push(color)\r\n      }\r\n    } else if (elementName === 'face') {\r\n      var vertexIndices = element.vertex_indices\r\n\r\n      if (vertexIndices.length === 3) {\r\n        geometry.faces.push(\r\n          new Face3(vertexIndices[ 0 ], vertexIndices[ 1 ], vertexIndices[ 2 ])\r\n        )\r\n      } else if (vertexIndices.length === 4) {\r\n        geometry.faces.push(\r\n          new Face3(vertexIndices[ 0 ], vertexIndices[ 1 ], vertexIndices[ 3 ]),\r\n          new Face3(vertexIndices[ 1 ], vertexIndices[ 2 ], vertexIndices[ 3 ])\r\n        )\r\n      }\r\n    }\r\n  },\r\n\r\n  binaryRead: function (dataview: DataView, at: number, type: string, littleEndian: boolean) {\r\n    switch (type) {\r\n      // corespondences for non-specific length types here match rply:\r\n      case 'int8': case 'char': return [ dataview.getInt8(at), 1 ]\r\n\r\n      case 'uint8': case 'uchar': return [ dataview.getUint8(at), 1 ]\r\n\r\n      case 'int16': case 'short': return [ dataview.getInt16(at, littleEndian), 2 ]\r\n\r\n      case 'uint16': case 'ushort': return [ dataview.getUint16(at, littleEndian), 2 ]\r\n\r\n      case 'int32': case 'int': return [ dataview.getInt32(at, littleEndian), 4 ]\r\n\r\n      case 'uint32': case 'uint': return [ dataview.getUint32(at, littleEndian), 4 ]\r\n\r\n      case 'float32': case 'float': return [ dataview.getFloat32(at, littleEndian), 4 ]\r\n\r\n      case 'float64': case 'double': return [ dataview.getFloat64(at, littleEndian), 8 ]\r\n    }\r\n  },\r\n\r\n  binaryReadElement: function (dataview: DataView, at: number, properties: PLYProperty[], littleEndian: boolean) {\r\n    var element = {} as PLYElement\r\n    var result\r\n    var read = 0\r\n\r\n    for (var i = 0; i < properties.length; i++) {\r\n      if (properties[ i ].type === 'list') {\r\n        var list = []\r\n\r\n        result = this.binaryRead(dataview, at + read, properties[ i ].countType, littleEndian)\r\n        var n = result[ 0 ]\r\n        read += result[ 1 ]\r\n\r\n        for (var j = 0; j < n; j++) {\r\n          result = this.binaryRead(dataview, at + read, properties[ i ].itemType, littleEndian)\r\n          list.push(result[ 0 ])\r\n          read += result[ 1 ]\r\n        }\r\n\r\n        element[ properties[ i ].name ] = list\r\n      } else {\r\n        result = this.binaryRead(dataview, at + read, properties[ i ].type, littleEndian)\r\n        element[ properties[ i ].name ] = result[ 0 ]\r\n        read += result[ 1 ]\r\n      }\r\n    }\r\n\r\n    return [ element, read ]\r\n  },\r\n\r\n  parseBinary: function (data: ArrayBuffer) {\r\n    var geometry = new Geometry()\r\n\r\n    var header = this.parseHeader(this.bin2str(data))\r\n    var littleEndian = (header.format === 'binary_little_endian')\r\n    var body = new DataView(data, header.headerLength)\r\n    var result\r\n    var loc = 0\r\n\r\n    for (var currentElement = 0; currentElement < header.elements.length; currentElement++) {\r\n      for (var currentElementCount = 0; currentElementCount < header.elements[ currentElement ].count; currentElementCount++) {\r\n        result = this.binaryReadElement(body, loc, header.elements[ currentElement ].properties, littleEndian)\r\n        loc += result[ 1 ]\r\n        var element = result[ 0 ]\r\n\r\n        this.handleElement(geometry, header.elements[ currentElement ].name, element)\r\n      }\r\n    }\r\n\r\n    return this.postProcess(geometry)\r\n  }\r\n\r\n}\r\n\r\nclass PlyParser extends SurfaceParser {\r\n  get type () { return 'ply' }\r\n\r\n  getLoader () {\r\n    return new PLYLoader()\r\n  }\r\n}\r\n\r\nParserRegistry.add('ply', PlyParser)\r\n\r\nexport default PlyParser\r\n","/**\r\n * @file Csv Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { defaults } from '../utils'\r\nimport { ParserRegistry } from '../globals'\r\nimport Parser, { ParserParameters } from './parser'\r\nimport Streamer from '../streamer/streamer';\r\n\r\nexport interface CsvParserParameters extends ParserParameters {\r\n  delimiter: string\r\n  comment: string\r\n  columnNames: boolean\r\n}\r\n/**\r\n * CSV parser\r\n */\r\nclass CsvParser extends Parser {\r\n  /**\r\n     * [constructor description]\r\n     * @param  {Streamer} streamer - the streamer object\r\n     * @param  {Object} params - parameter object\r\n     * @param  {Char} params.delimiter - delimiter character\r\n     * @param  {Char} params.comment - comment character\r\n     * @param  {Boolean} params.columnNames - use first data line as column names\r\n     */\r\n  constructor (streamer: Streamer, params?: Partial<CsvParserParameters>) {\r\n    const p = params || {}\r\n\r\n    super(streamer, p)\r\n\r\n    this.delimiter = defaults(p.delimiter, ',')\r\n    this.comment = defaults(p.comment, '#')\r\n    this.columnNames = defaults(p.columnNames, false)\r\n\r\n    this.table = {\r\n      name: this.name,\r\n      path: this.path,\r\n      columnNames: [],\r\n      data: []\r\n    }\r\n  }\r\n\r\n  get type () { return 'csv' }\r\n  get __objName () { return 'table' }\r\n\r\n  _parse () {\r\n    const data = this.table.data\r\n    const reDelimiter = new RegExp('\\\\s*' + this.delimiter + '\\\\s*')\r\n\r\n    let j = 0\r\n\r\n    this.streamer.eachChunkOfLines(chunk => {\r\n      const n = chunk.length\r\n\r\n      for (let i = 0; i < n; ++i) {\r\n        const line = chunk[ i ].trim()\r\n        if (line.startsWith(this.comment)) continue\r\n        const values = line.split(reDelimiter)\r\n\r\n        if (j === 0) {\r\n          this.table.columnNames = values\r\n        } else if (line) {\r\n          data.push(values)\r\n        }\r\n        ++j\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nParserRegistry.add('csv', CsvParser)\r\n\r\nexport default CsvParser\r\n","/**\r\n * @file Json Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ParserRegistry } from '../globals'\r\nimport { defaults } from '../utils'\r\nimport Parser, { ParserParameters } from './parser'\r\nimport Streamer from '../streamer/streamer';\r\n\r\nexport interface JsonParserParameters extends ParserParameters {\r\n  string: boolean\r\n}\r\n\r\nclass JsonParser extends Parser {\r\n  constructor (streamer: Streamer, params?: Partial<JsonParserParameters>) {\r\n    const p = params || {}\r\n\r\n    super(streamer, p)\r\n\r\n    this.string = defaults(p.string, false)\r\n\r\n    this.json = {\r\n      name: this.name,\r\n      path: this.path,\r\n      data: {}\r\n    }\r\n  }\r\n\r\n  get type () { return 'json' }\r\n  get __objName () { return 'json' }\r\n  get isJson () { return true }\r\n\r\n  _parse () {\r\n    if (this.streamer.isBinary() || this.string) {\r\n      this.json.data = JSON.parse(this.streamer.asText())\r\n    } else {\r\n      this.json.data = this.streamer.data\r\n    }\r\n  }\r\n}\r\n\r\nParserRegistry.add('json', JsonParser)\r\n\r\nexport default JsonParser\r\n","/**\r\n * @file Msgpack Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals'\r\nimport Parser, { ParserParameters } from './parser'\r\n\r\nimport { decodeMsgpack } from '../../lib/mmtf.es6'\r\nimport Streamer from '../streamer/streamer';\r\n\r\nclass MsgpackParser extends Parser {\r\n  constructor (streamer: Streamer, params?: Partial<ParserParameters>) {\r\n    const p = params || {}\r\n\r\n    super(streamer, p)\r\n\r\n    this.msgpack = {\r\n      name: this.name,\r\n      path: this.path,\r\n      data: undefined\r\n    }\r\n  }\r\n\r\n  get type () { return 'msgpack' }\r\n  get __objName () { return 'msgpack' }\r\n  get isBinary () { return true }\r\n\r\n  _parse () {\r\n    if (Debug) Log.time('MsgpackParser._parse ' + this.name)\r\n\r\n    this.msgpack.data = decodeMsgpack(this.streamer.data)\r\n\r\n    if (Debug) Log.timeEnd('MsgpackParser._parse ' + this.name)\r\n  }\r\n}\r\n\r\nParserRegistry.add('msgpack', MsgpackParser)\r\n\r\nexport default MsgpackParser\r\n","/**\r\n * @file Netcdf Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals'\r\nimport Parser, { ParserParameters } from './parser'\r\nimport NetcdfReader from '../utils/netcdf-reader'\r\nimport Streamer from '../streamer/streamer';\r\n\r\nclass NetcdfParser extends Parser {\r\n  constructor (streamer: Streamer, params?: Partial<ParserParameters>) {\r\n    const p = params || {}\r\n\r\n    super(streamer, p)\r\n\r\n    this.netcdf = {\r\n      name: this.name,\r\n      path: this.path,\r\n      data: undefined\r\n    }\r\n  }\r\n\r\n  get type () { return 'netcdf' }\r\n  get __objName () { return 'netcdf' }\r\n  get isBinary () { return true }\r\n\r\n  _parse () {\r\n    if (Debug) Log.time('NetcdfParser._parse ' + this.name)\r\n\r\n    this.netcdf.data = new NetcdfReader(this.streamer.data)\r\n\r\n    if (Debug) Log.timeEnd('NetcdfParser._parse ' + this.name)\r\n  }\r\n}\r\n\r\nParserRegistry.add('netcdf', NetcdfParser)\r\n\r\nexport default NetcdfParser\r\n","/**\r\n * @file Text Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ParserRegistry } from '../globals'\r\nimport Parser, { ParserParameters } from './parser'\r\nimport Streamer from '../streamer/streamer';\r\n\r\nclass TextParser extends Parser {\r\n  constructor (streamer: Streamer, params?: Partial<ParserParameters>) {\r\n    super(streamer, params)\r\n\r\n    this.text = {\r\n\r\n      name: this.name,\r\n      path: this.path,\r\n      data: ''\r\n\r\n    }\r\n  }\r\n\r\n  get type () { return 'text' }\r\n  get __objName () { return 'text' }\r\n\r\n  _parse () {\r\n    this.text.data = this.streamer.asText()\r\n  }\r\n}\r\n\r\nParserRegistry.add('txt', TextParser)\r\nParserRegistry.add('text', TextParser)\r\n\r\nexport default TextParser\r\n","/**\r\n * @file Parse Xml\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\n// https://github.com/segmentio/xml-parser\r\n// MIT license\r\n\r\nexport type XMLNodeAttributes = { [k: string]: any }\r\nexport interface XMLNode {\r\n  name?: string\r\n  content?: string\r\n  attributes: XMLNodeAttributes\r\n  children?: XMLNode[]\r\n}\r\n\r\nconst reStrip = /^['\"]|['\"]$/g\r\nconst reTag = /^<([\\w-:.]+)\\s*/\r\nconst reContent = /^([^<]*)/\r\nconst reAttr = /([\\w:-]+)\\s*=\\s*(\"[^\"]*\"|'[^']*'|\\w+)\\s*/\r\n\r\nfunction strip (val: string) {\r\n  return val.replace(reStrip, '')\r\n}\r\n\r\nexport function parseXml (xml: string) {\r\n  // trim and strip comments\r\n  xml = xml.trim().replace(/<!--[\\s\\S]*?-->/g, '')\r\n\r\n  return document()\r\n\r\n  function document () {\r\n    return {\r\n      declaration: declaration(),\r\n      root: tag()\r\n    }\r\n  }\r\n\r\n  function declaration () {\r\n    const m = match(/^<\\?xml\\s*/)\r\n    if (!m) return\r\n\r\n    // tag\r\n    const node: XMLNode = {\r\n      attributes: {}\r\n    }\r\n\r\n    // attributes\r\n    while (!(eos() || is('?>'))) {\r\n      const attr = attribute()\r\n      if (!attr) return node\r\n      node.attributes[attr.name] = attr.value\r\n    }\r\n    match(/\\?>\\s*/)\r\n    return node\r\n  }\r\n\r\n  function tag () {\r\n    const m = match(reTag)\r\n    if (!m) return\r\n\r\n    // name\r\n    const node: XMLNode = {\r\n      name: m[1],\r\n      attributes: {},\r\n      children: []\r\n    }\r\n\r\n    // attributes\r\n    while (!(eos() || is('>') || is('?>') || is('/>'))) {\r\n      const attr = attribute()\r\n      if (!attr) return node\r\n      node.attributes[attr.name] = attr.value\r\n    }\r\n\r\n    // self closing tag\r\n    if (match(/^\\s*\\/>\\s*/)) {\r\n      return node\r\n    }\r\n    match(/\\??>\\s*/)\r\n\r\n    // content\r\n    node.content = content()\r\n\r\n    // children\r\n    let child\r\n    while ((child = tag())) {\r\n      node.children!.push(child)\r\n    }\r\n\r\n    // closing\r\n    match(/^<\\/[\\w-:.]+>\\s*/)\r\n    return node\r\n  }\r\n\r\n  function content () {\r\n    const m = match(reContent)\r\n    if (m) return m[1]\r\n    return ''\r\n  }\r\n\r\n  function attribute () {\r\n    const m = match(reAttr)\r\n    if (!m) return\r\n    return { name: m[1], value: strip(m[2]) }\r\n  }\r\n\r\n  function match (re: RegExp) {\r\n    const m = xml.match(re)\r\n    if (!m) return\r\n    xml = xml.slice(m[0].length)\r\n    return m\r\n  }\r\n\r\n  function eos () {\r\n    return xml.length === 0\r\n  }\r\n\r\n  function is (prefix: string) {\r\n    return xml.indexOf(prefix) === 0\r\n  }\r\n}\r\n","/**\r\n * @file Xml Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals'\r\nimport { defaults } from '../utils'\r\n// @ts-ignore: unused import XMLNode required for declaration only\r\nimport { parseXml, XMLNode } from '../utils/parse-xml'\r\nimport Parser, { ParserParameters } from './parser'\r\nimport Streamer from '../streamer/streamer';\r\n\r\nexport interface XmlParserParameters extends ParserParameters {\r\n  useDomParser: boolean\r\n}\r\n\r\nclass XmlParser extends Parser {\r\n  xml: {\r\n    name: string\r\n    path: string\r\n    data: any\r\n  }\r\n  constructor (streamer: Streamer, params?: Partial<XmlParserParameters>) {\r\n    const p = params || {}\r\n\r\n    super(streamer, p)\r\n\r\n    this.useDomParser = defaults(p.useDomParser, false)\r\n\r\n    this.xml = {\r\n      name: this.name,\r\n      path: this.path,\r\n      data: {}\r\n    }\r\n  }\r\n\r\n  get type () { return 'xml' }\r\n  get __objName () { return 'xml' }\r\n  get isXml () { return true }\r\n\r\n  __xmlParser (xml: string) {\r\n    return parseXml(xml)\r\n  }\r\n\r\n  __domParser (xml: string) {\r\n    const domParser = new (window as any).DOMParser() as DOMParser\r\n    return domParser.parseFromString(xml, 'text/xml')\r\n  }\r\n\r\n  _parse () {\r\n    if (Debug) Log.time('XmlParser._parse ' + this.name)\r\n\r\n    if (this.useDomParser) {\r\n      if (this.streamer.data instanceof Document) { //TS conversion: stripped the window prefix from window.Document\r\n        this.xml.data = this.streamer.data\r\n      } else {\r\n        this.xml.data = this.__domParser(this.streamer.asText())\r\n      }\r\n    } else {\r\n      this.xml.data = this.__xmlParser(this.streamer.asText())\r\n    }\r\n\r\n    if (Debug) Log.timeEnd('XmlParser._parse ' + this.name)\r\n  }\r\n}\r\n\r\nParserRegistry.add('xml', XmlParser)\r\n\r\nexport default XmlParser\r\n","/**\r\n * @file Validation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3, Color } from 'three'\r\n\r\nimport { Debug, Log } from '../globals'\r\nimport { defaults } from '../utils'\r\nimport { ClashPicker } from '../utils/picker'\r\nimport { uniformArray3 } from '../math/array-utils'\r\nimport { guessElement } from '../structure/structure-utils'\r\nimport AtomProxy from '../proxy/atom-proxy'\r\nimport Structure from '../structure/structure'\r\n\r\nfunction getNamedItem(a: NamedNodeMap, name: string) {\r\n  const item = a.getNamedItem(name)\r\n  return item !== null ? item.value : ''\r\n}\r\n\r\nfunction getSele (a: NamedNodeMap, atomname?: string, useAltcode = false) {\r\n  const icode = getNamedItem(a, 'icode').trim()\r\n  const chain = getNamedItem(a, 'chain').trim()\r\n  const altcode = getNamedItem(a, 'altcode')\r\n  let sele = getNamedItem(a, 'resnum')\r\n  if (icode) sele += '^' + icode\r\n  if (chain) sele += ':' + chain\r\n  if (atomname) sele += '.' + atomname\r\n  if (useAltcode && altcode.trim()) sele += '%' + altcode\r\n  sele += '/' + (parseInt(getNamedItem(a, 'model')) - 1)\r\n  return sele\r\n}\r\n\r\nfunction getResSele (a: NamedNodeMap) {\r\n  const chain = getNamedItem(a, 'chain').trim()\r\n  const rescode = getNamedItem(a, 'rescode')\r\n  const resnum = getNamedItem(a, 'resnum')\r\n  let sele = `[${rescode}]${resnum}`\r\n  if (chain) sele += `:${chain}`\r\n  return sele\r\n}\r\n\r\nfunction setBitDict (dict: { [k: string]: number }, key: string, bit: number) {\r\n  if (dict[ key ] === undefined) {\r\n    dict[ key ] = bit\r\n  } else {\r\n    dict[ key ] |= bit\r\n  }\r\n}\r\n\r\nfunction hasAttrValue (attr: Attr|null, value: string) {\r\n  return attr !== null && attr.value === value\r\n}\r\n\r\nfunction getAtomSele (ap: AtomProxy) {\r\n  const icode = ap.inscode\r\n  const chain = ap.chainname\r\n  const atomname = ap.atomname\r\n  const altcode = ap.altloc\r\n  let sele = ap.resno + ''\r\n  if (icode) sele += '^' + icode\r\n  if (chain) sele += ':' + chain\r\n  if (atomname) sele += '.' + atomname\r\n  if (altcode) sele += '%' + altcode\r\n  sele += '/' + ap.modelIndex\r\n  return sele\r\n}\r\n\r\nfunction getProblemCount (clashDict: { [k: string]: { [k: string]: string } }, g: Element, ga: NamedNodeMap) {\r\n  let geoProblemCount = 0\r\n\r\n  const clashes = g.getElementsByTagName('clash')\r\n  for (let j = 0, jl = clashes.length; j < jl; ++j) {\r\n    if (clashDict[ getNamedItem(clashes[ j ].attributes, 'cid') ]) {\r\n      geoProblemCount += 1\r\n      break\r\n    }\r\n  }\r\n\r\n  const angleOutliers = g.getElementsByTagName('angle-outlier')\r\n  if (angleOutliers.length > 0) {\r\n    geoProblemCount += 1\r\n  }\r\n\r\n  const bondOutliers = g.getElementsByTagName('bond-outlier')\r\n  if (bondOutliers.length > 0) {\r\n    geoProblemCount += 1\r\n  }\r\n\r\n  const planeOutliers = g.getElementsByTagName('plane-outlier')\r\n  if (planeOutliers.length > 0) {\r\n    geoProblemCount += 1\r\n  }\r\n\r\n  if (hasAttrValue(ga.getNamedItem('rota'), 'OUTLIER')) {\r\n    geoProblemCount += 1\r\n  }\r\n\r\n  if (hasAttrValue(ga.getNamedItem('rama'), 'OUTLIER')) {\r\n    geoProblemCount += 1\r\n  }\r\n\r\n  if (hasAttrValue(ga.getNamedItem('RNApucker'), 'outlier')) {\r\n    geoProblemCount += 1\r\n  }\r\n\r\n  return geoProblemCount\r\n}\r\n\r\nclass Validation {\r\n  rsrzDict: { [k: string]: number } = {}\r\n  rsccDict: { [k: string]: number } = {}\r\n  /**\r\n   * Random Coil Index (RCI) - evaluates the proximity of residue structural\r\n   * and dynamic properties to the properties of flexible random coil regions\r\n   * from NMR chemical shifts.\r\n   *\r\n   * Mark V. Berjanskii and David S. Wishart (2005)\r\n   * A Simple Method To Predict Protein Flexibility Using Secondary Chemical Shifts\r\n   * J. Am. Chem. Soc., 2005, 127 (43), pp 14970–14971\r\n   * http://pubs.acs.org/doi/abs/10.1021/ja054842f\r\n   *\r\n   * Mark V. Berjanskii and David S. Wishart (2008)\r\n   * Application of the random coil index to studying protein flexibility.\r\n   * J Biomol NMR. 2008 Jan;40(1):31-48. Epub 2007 Nov 6.\r\n   * http://www.springerlink.com/content/2966482w10306126/\r\n   */\r\n  rciDict: { [k: string]: number } = {}\r\n  clashDict: { [k: string]: { [k: string]: string } } = {}\r\n  clashArray: { [k: string]: string }[] = []\r\n  geoDict: { [k: string]: number } = {}\r\n  geoAtomDict: { [k: string]: { [k: string]: number } } = {}\r\n  atomDict: { [k: string]: boolean|number } = {}\r\n  clashSele = 'NONE'\r\n\r\n  constructor (readonly name: string, readonly path: string) {}\r\n\r\n  get type () { return 'validation' }\r\n\r\n  fromXml (xml: XMLDocument) {\r\n    if (Debug) Log.time('Validation.fromXml')\r\n\r\n    const rsrzDict = this.rsrzDict\r\n    const rsccDict = this.rsccDict\r\n    const rciDict = this.rciDict\r\n    const clashDict = this.clashDict\r\n    const clashArray = this.clashArray\r\n    const geoDict = this.geoDict\r\n    const geoAtomDict = this.geoAtomDict\r\n    const atomDict = this.atomDict\r\n\r\n    const entries = xml.getElementsByTagName('Entry')\r\n    if (entries.length === 1) {\r\n      const chemicalShiftLists = entries[0].getElementsByTagName('chemical_shift_list')\r\n      if (chemicalShiftLists.length === 1) {\r\n        const randomCoilIndices = chemicalShiftLists[0].getElementsByTagName('random_coil_index')\r\n        for (let j = 0, jl = randomCoilIndices.length; j < jl; ++j) {\r\n          const rcia = randomCoilIndices[ j ].attributes\r\n          const sele = getResSele(rcia)\r\n          rciDict[ sele ] = parseFloat(getNamedItem(rcia, 'value'))\r\n        }\r\n      }\r\n    }\r\n\r\n    const groups = xml.getElementsByTagName('ModelledSubgroup')\r\n\r\n    const _clashDict: { [k: string]: { [k: string]: string } } = {}\r\n    const clashList: string[] = []\r\n\r\n    if (Debug) Log.time('Validation.fromXml#clashDict')\r\n\r\n    for (let i = 0, il = groups.length; i < il; ++i) {\r\n      const g = groups[ i ]\r\n      const ga = g.attributes\r\n\r\n      const sele = getSele(ga)\r\n      if (ga.getNamedItem('rsrz') !== null) {\r\n        rsrzDict[ sele ] = parseFloat(getNamedItem(ga, 'rsrz'))\r\n      }\r\n      if (ga.getNamedItem('rscc') !== null) {\r\n        rsccDict[ sele ] = parseFloat(getNamedItem(ga, 'rscc'))\r\n      }\r\n      const seleAttr = xml.createAttribute('sele')\r\n      seleAttr.value = sele\r\n      ga.setNamedItem(seleAttr)\r\n\r\n      const clashes = g.getElementsByTagName('clash')\r\n\r\n      for (let j = 0, jl = clashes.length; j < jl; ++j) {\r\n        const ca = clashes[ j ].attributes\r\n        const atom = getNamedItem(ca, 'atom')\r\n\r\n        if (guessElement(atom) !== 'H') {\r\n          const cid = getNamedItem(ca, 'cid')\r\n          const atomSele = getSele(ga, atom, true)\r\n          atomDict[ atomSele ] = true\r\n\r\n          if (_clashDict[ cid ] === undefined) {\r\n            _clashDict[ cid ] = {\r\n              sele1: atomSele,\r\n              res1: sele\r\n            }\r\n          } else {\r\n            const c = _clashDict[ cid ]\r\n            if (c.res1 !== sele) {\r\n              c.sele2 = atomSele\r\n              c.res2 = sele\r\n              clashList.push(c.res1, sele)\r\n              clashDict[ cid ] = c\r\n              clashArray.push(c)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (Debug) Log.timeEnd('Validation.fromXml#clashDict')\r\n\r\n    for (let i = 0, il = groups.length; i < il; ++i) {\r\n      const g = groups[ i ]\r\n      const ga = g.attributes\r\n\r\n      const sele = getNamedItem(ga, 'sele')\r\n      const isPolymer = getNamedItem(ga, 'seq') !== '.'\r\n\r\n      if (isPolymer) {\r\n        const geoProblemCount = getProblemCount(clashDict, g, ga)\r\n        if (geoProblemCount > 0) {\r\n          geoDict[ sele ] = geoProblemCount\r\n        }\r\n      } else {\r\n        const clashes = g.getElementsByTagName('clash')\r\n        const mogBondOutliers = g.getElementsByTagName('mog-bond-outlier')\r\n        const mogAngleOutliers = g.getElementsByTagName('mog-angle-outlier')\r\n\r\n        if (mogBondOutliers.length > 0 || mogAngleOutliers.length > 0 || clashes.length > 0) {\r\n          const atomDict = {}\r\n          geoAtomDict[ sele ] = atomDict\r\n\r\n          for (let j = 0, jl = clashes.length; j < jl; ++j) {\r\n            const ca = clashes[ j ].attributes\r\n            if (clashDict[ getNamedItem(ca, 'cid') ]) {\r\n              setBitDict(atomDict, getNamedItem(ca, 'atom'), 1)\r\n            }\r\n          }\r\n\r\n          for (let j = 0, jl = mogBondOutliers.length; j < jl; ++j) {\r\n            const mbo = mogBondOutliers[ j ].attributes\r\n            getNamedItem(mbo, 'atoms').split(',').forEach(function (atomname) {\r\n              setBitDict(atomDict, atomname, 2)\r\n            })\r\n          }\r\n\r\n          for (let j = 0, jl = mogAngleOutliers.length; j < jl; ++j) {\r\n            const mao = mogAngleOutliers[ j ].attributes\r\n            getNamedItem(mao, 'atoms').split(',').forEach(function (atomname) {\r\n              setBitDict(atomDict, atomname, 4)\r\n            })\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.clashSele = clashList.length ? clashList.join(' OR ') : 'NONE'\r\n\r\n    if (Debug) Log.timeEnd('Validation.fromXml')\r\n  }\r\n\r\n  getClashData (params: { color: number|string|Color, structure: Structure }) {\r\n    if (Debug) Log.time('Validation.getClashData')\r\n\r\n    const p = params || {}\r\n\r\n    const s = p.structure\r\n    const atomSet = s.atomSet!  // TODO\r\n    const c = new Color(defaults(p.color, '#f0027f'))\r\n\r\n    const ap1 = s.getAtomProxy()\r\n    const ap2 = s.getAtomProxy()\r\n    const vDir = new Vector3()\r\n    const vPos1 = new Vector3()\r\n    const vPos2 = new Vector3()\r\n\r\n    const clashArray = this.clashArray\r\n    const n = clashArray.length\r\n\r\n    const position1 = new Float32Array(n * 3)\r\n    const position2 = new Float32Array(n * 3)\r\n    const color = uniformArray3(n, c.r, c.g, c.b) as Float32Array\r\n    const radius = new Float32Array(n)\r\n    const picking = new Float32Array(n)\r\n\r\n    if (Debug) Log.time('Validation.getClashData#atomDict')\r\n\r\n    const atomDict = this.atomDict\r\n\r\n    s.eachAtom(function (ap) {\r\n      const sele = getAtomSele(ap)\r\n      if (atomDict[ sele ] === true) {\r\n        atomDict[ sele ] = ap.index\r\n      }\r\n    })\r\n\r\n    if (Debug) Log.timeEnd('Validation.getClashData#atomDict')\r\n\r\n    let i = 0\r\n\r\n    clashArray.forEach(function (c, idx) {\r\n      ap1.index = atomDict[ c.sele1 ] as number  // TODO\r\n      ap2.index = atomDict[ c.sele2 ] as number  // TODO\r\n\r\n      if (ap1.index === undefined || ap2.index === undefined ||\r\n          !atomSet.isSet(ap1.index, ap2.index)) return\r\n\r\n      vDir.subVectors(ap2 as any, ap1 as any).setLength(ap1.vdw)  // TODO\r\n      vPos1.copy(ap1 as any).add(vDir)  // TODO\r\n\r\n      vDir.subVectors(ap1 as any, ap2 as any).setLength(ap2.vdw)  // TODO\r\n      vPos2.copy(ap2 as any).add(vDir)  // TODO\r\n\r\n      const dHalf = ap1.distanceTo(ap2) / 2\r\n      const r1 = Math.sqrt(ap1.vdw * ap1.vdw - dHalf * dHalf)\r\n      const r2 = Math.sqrt(ap2.vdw * ap2.vdw - dHalf * dHalf)\r\n\r\n      vPos1.toArray(position1 as any, i * 3)  // TODO\r\n      vPos2.toArray(position2 as any, i * 3)\r\n      radius[ i ] = (r1 + r2) / 2\r\n      picking[ i ] = idx\r\n\r\n      ++i\r\n    })\r\n\r\n    if (Debug) Log.timeEnd('Validation.getClashData')\r\n\r\n    return {\r\n      position1: position1.subarray(0, i * 3),\r\n      position2: position2.subarray(0, i * 3),\r\n      color: color.subarray(0, i * 3),\r\n      color2: color.subarray(0, i * 3),\r\n      radius: radius.subarray(0, i),\r\n      picking: new ClashPicker(picking.subarray(0, i), this, s)\r\n    }\r\n  }\r\n}\r\n\r\nexport default Validation\r\n","/**\r\n * @file Validation Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals'\r\nimport XmlParser, { XmlParserParameters } from './xml-parser'\r\nimport Validation from '../structure/validation'\r\nimport Streamer from '../streamer/streamer';\r\n\r\nclass ValidationParser extends XmlParser {\r\n  constructor (streamer: Streamer, params?: Partial<XmlParserParameters>) {\r\n    const p = params || {}\r\n\r\n    super(streamer, p)\r\n\r\n    this.useDomParser = true\r\n    this.validation = new Validation(this.name, this.path)\r\n  }\r\n\r\n  get __objName () { return 'validation' }\r\n  get isXml () { return true }\r\n\r\n  _parse () {\r\n    super._parse()\r\n\r\n    if (Debug) Log.time('ValidationParser._parse ' + this.name)\r\n\r\n    this.validation.fromXml(this.xml.data)\r\n\r\n    if (Debug) Log.timeEnd('ValidationParser._parse ' + this.name)\r\n  }\r\n}\r\n\r\nParserRegistry.add('validation', ValidationParser)\r\n\r\nexport default ValidationParser\r\n","\r\n// https://github.com/nodeca/pako\r\n// MIT License, Copyright (c) 2014 by Vitaly Puzrin\r\n\r\n\r\n// 'use strict';\r\n\r\n\r\n// var TYPED_OK =  (typeof Uint8Array !== 'undefined') &&\r\n//                 (typeof Uint16Array !== 'undefined') &&\r\n//                 (typeof Int32Array !== 'undefined');\r\n\r\n\r\nfunction assign(obj /*from1, from2, from3, ...*/) {\r\n  var sources = Array.prototype.slice.call(arguments, 1);\r\n  while (sources.length) {\r\n    var source = sources.shift();\r\n    if (!source) { continue; }\r\n\r\n    if (typeof source !== 'object') {\r\n      throw new TypeError(source + 'must be non-object');\r\n    }\r\n\r\n    for (var p in source) {\r\n      if (source.hasOwnProperty(p)) {\r\n        obj[p] = source[p];\r\n      }\r\n    }\r\n  }\r\n\r\n  return obj;\r\n}\r\n\r\n\r\n// reduce buffer size, avoiding mem copy\r\nfunction shrinkBuf(buf, size) {\r\n  if (buf.length === size) { return buf; }\r\n  if (buf.subarray) { return buf.subarray(0, size); }\r\n  buf.length = size;\r\n  return buf;\r\n}\r\n\r\n\r\nfunction arraySet(dest, src, src_offs, len, dest_offs) {\r\n  if (src.subarray && dest.subarray) {\r\n    dest.set(src.subarray(src_offs, src_offs + len), dest_offs);\r\n    return;\r\n  }\r\n  // Fallback to ordinary array\r\n  for (var i = 0; i < len; i++) {\r\n    dest[dest_offs + i] = src[src_offs + i];\r\n  }\r\n}\r\n\r\n// Join array of chunks to single array.\r\nfunction flattenChunks(chunks) {\r\n  var i, l, len, pos, chunk, result;\r\n\r\n  // calculate data length\r\n  len = 0;\r\n  for (i = 0, l = chunks.length; i < l; i++) {\r\n    len += chunks[i].length;\r\n  }\r\n\r\n  // join chunks\r\n  result = new Uint8Array(len);\r\n  pos = 0;\r\n  for (i = 0, l = chunks.length; i < l; i++) {\r\n    chunk = chunks[i];\r\n    result.set(chunk, pos);\r\n    pos += chunk.length;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n// 'use strict';\r\n\r\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\r\n// It doesn't worth to make additional optimizationa as in original.\r\n// Small size is preferable.\r\n\r\nfunction adler32(adler, buf, len, pos) {\r\n  var s1 = (adler & 0xffff) |0,\r\n      s2 = ((adler >>> 16) & 0xffff) |0,\r\n      n = 0;\r\n\r\n  while (len !== 0) {\r\n    // Set limit ~ twice less than 5552, to keep\r\n    // s2 in 31-bits, because we force signed ints.\r\n    // in other case %= will fail.\r\n    n = len > 2000 ? 2000 : len;\r\n    len -= n;\r\n\r\n    do {\r\n      s1 = (s1 + buf[pos++]) |0;\r\n      s2 = (s2 + s1) |0;\r\n    } while (--n);\r\n\r\n    s1 %= 65521;\r\n    s2 %= 65521;\r\n  }\r\n\r\n  return (s1 | (s2 << 16)) |0;\r\n}\r\n\r\n// 'use strict';\r\n\r\n// Note: we can't get significant speed boost here.\r\n// So write code to minimize size - no pregenerated tables\r\n// and array tools dependencies.\r\n\r\n\r\n// Use ordinary array, since untyped makes no boost here\r\nfunction makeTable() {\r\n  var c, table = [];\r\n\r\n  for (var n = 0; n < 256; n++) {\r\n    c = n;\r\n    for (var k = 0; k < 8; k++) {\r\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\r\n    }\r\n    table[n] = c;\r\n  }\r\n\r\n  return table;\r\n}\r\n\r\n// Create table on load. Just 255 signed longs. Not a problem.\r\nvar crcTable = makeTable();\r\n\r\n\r\nfunction crc32(crc, buf, len, pos) {\r\n  var t = crcTable,\r\n      end = pos + len;\r\n\r\n  crc ^= -1;\r\n\r\n  for (var i = pos; i < end; i++) {\r\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\r\n  }\r\n\r\n  return (crc ^ (-1)); // >>> 0;\r\n}\r\n\r\n// 'use strict';\r\n\r\n// See state defs from inflate.js\r\nvar BAD$1 = 30;       /* got a data error -- remain here until reset */\r\nvar TYPE$1 = 12;      /* i: waiting for type bits, including last-flag bit */\r\n\r\n/*\r\n   Decode literal, length, and distance codes and write out the resulting\r\n   literal and match bytes until either not enough input or output is\r\n   available, an end-of-block is encountered, or a data error is encountered.\r\n   When large enough input and output buffers are supplied to inflate(), for\r\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\r\n   inflate execution time is spent in this routine.\r\n\r\n   Entry assumptions:\r\n\r\n        state.mode === LEN\r\n        strm.avail_in >= 6\r\n        strm.avail_out >= 258\r\n        start >= strm.avail_out\r\n        state.bits < 8\r\n\r\n   On return, state.mode is one of:\r\n\r\n        LEN -- ran out of enough output space or enough available input\r\n        TYPE -- reached end of block code, inflate() to interpret next block\r\n        BAD -- error in block data\r\n\r\n   Notes:\r\n\r\n    - The maximum input bits used by a length/distance pair is 15 bits for the\r\n      length code, 5 bits for the length extra, 15 bits for the distance code,\r\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\r\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\r\n      checking for available input while decoding.\r\n\r\n    - The maximum bytes that a single length/distance pair can output is 258\r\n      bytes, which is the maximum length that can be coded.  inflate_fast()\r\n      requires strm.avail_out >= 258 for each loop to avoid checking for\r\n      output space.\r\n */\r\n// module.exports =\r\nfunction inflate_fast(strm, start) {\r\n  var state;\r\n  var _in;                    /* local strm.input */\r\n  var last;                   /* have enough input while in < last */\r\n  var _out;                   /* local strm.output */\r\n  var beg;                    /* inflate()'s initial strm.output */\r\n  var end;                    /* while out < end, enough space available */\r\n//#ifdef INFLATE_STRICT\r\n  var dmax;                   /* maximum distance from zlib header */\r\n//#endif\r\n  var wsize;                  /* window size or zero if not using window */\r\n  var whave;                  /* valid bytes in the window */\r\n  var wnext;                  /* window write index */\r\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\r\n  var s_window;               /* allocated sliding window, if wsize != 0 */\r\n  var hold;                   /* local strm.hold */\r\n  var bits;                   /* local strm.bits */\r\n  var lcode;                  /* local strm.lencode */\r\n  var dcode;                  /* local strm.distcode */\r\n  var lmask;                  /* mask for first level of length codes */\r\n  var dmask;                  /* mask for first level of distance codes */\r\n  var here;                   /* retrieved table entry */\r\n  var op;                     /* code bits, operation, extra bits, or */\r\n                              /*  window position, window bytes to copy */\r\n  var len;                    /* match length, unused bytes */\r\n  var dist;                   /* match distance */\r\n  var from;                   /* where to copy match from */\r\n  var from_source;\r\n\r\n\r\n  var input, output; // JS specific, because we have no pointers\r\n\r\n  /* copy state to local variables */\r\n  state = strm.state;\r\n  //here = state.here;\r\n  _in = strm.next_in;\r\n  input = strm.input;\r\n  last = _in + (strm.avail_in - 5);\r\n  _out = strm.next_out;\r\n  output = strm.output;\r\n  beg = _out - (start - strm.avail_out);\r\n  end = _out + (strm.avail_out - 257);\r\n//#ifdef INFLATE_STRICT\r\n  dmax = state.dmax;\r\n//#endif\r\n  wsize = state.wsize;\r\n  whave = state.whave;\r\n  wnext = state.wnext;\r\n  s_window = state.window;\r\n  hold = state.hold;\r\n  bits = state.bits;\r\n  lcode = state.lencode;\r\n  dcode = state.distcode;\r\n  lmask = (1 << state.lenbits) - 1;\r\n  dmask = (1 << state.distbits) - 1;\r\n\r\n\r\n  /* decode literals and length/distances until end-of-block or not enough\r\n     input data or output space */\r\n\r\n  top:\r\n  do {\r\n    if (bits < 15) {\r\n      hold += input[_in++] << bits;\r\n      bits += 8;\r\n      hold += input[_in++] << bits;\r\n      bits += 8;\r\n    }\r\n\r\n    here = lcode[hold & lmask];\r\n\r\n    dolen:\r\n    for (;;) { // Goto emulation\r\n      op = here >>> 24/*here.bits*/;\r\n      hold >>>= op;\r\n      bits -= op;\r\n      op = (here >>> 16) & 0xff/*here.op*/;\r\n      if (op === 0) {                          /* literal */\r\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\r\n        //        \"inflate:         literal '%c'\\n\" :\r\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\r\n        output[_out++] = here & 0xffff/*here.val*/;\r\n      }\r\n      else if (op & 16) {                     /* length base */\r\n        len = here & 0xffff/*here.val*/;\r\n        op &= 15;                           /* number of extra bits */\r\n        if (op) {\r\n          if (bits < op) {\r\n            hold += input[_in++] << bits;\r\n            bits += 8;\r\n          }\r\n          len += hold & ((1 << op) - 1);\r\n          hold >>>= op;\r\n          bits -= op;\r\n        }\r\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\r\n        if (bits < 15) {\r\n          hold += input[_in++] << bits;\r\n          bits += 8;\r\n          hold += input[_in++] << bits;\r\n          bits += 8;\r\n        }\r\n        here = dcode[hold & dmask];\r\n\r\n        dodist:\r\n        for (;;) { // goto emulation\r\n          op = here >>> 24/*here.bits*/;\r\n          hold >>>= op;\r\n          bits -= op;\r\n          op = (here >>> 16) & 0xff/*here.op*/;\r\n\r\n          if (op & 16) {                      /* distance base */\r\n            dist = here & 0xffff/*here.val*/;\r\n            op &= 15;                       /* number of extra bits */\r\n            if (bits < op) {\r\n              hold += input[_in++] << bits;\r\n              bits += 8;\r\n              if (bits < op) {\r\n                hold += input[_in++] << bits;\r\n                bits += 8;\r\n              }\r\n            }\r\n            dist += hold & ((1 << op) - 1);\r\n//#ifdef INFLATE_STRICT\r\n            if (dist > dmax) {\r\n              strm.msg = 'invalid distance too far back';\r\n              state.mode = BAD$1;\r\n              break top;\r\n            }\r\n//#endif\r\n            hold >>>= op;\r\n            bits -= op;\r\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\r\n            op = _out - beg;                /* max distance in output */\r\n            if (dist > op) {                /* see if copy from window */\r\n              op = dist - op;               /* distance back in window */\r\n              if (op > whave) {\r\n                if (state.sane) {\r\n                  strm.msg = 'invalid distance too far back';\r\n                  state.mode = BAD$1;\r\n                  break top;\r\n                }\r\n\r\n// (!) This block is disabled in zlib defailts,\r\n// don't enable it for binary compatibility\r\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\r\n//                if (len <= op - whave) {\r\n//                  do {\r\n//                    output[_out++] = 0;\r\n//                  } while (--len);\r\n//                  continue top;\r\n//                }\r\n//                len -= op - whave;\r\n//                do {\r\n//                  output[_out++] = 0;\r\n//                } while (--op > whave);\r\n//                if (op === 0) {\r\n//                  from = _out - dist;\r\n//                  do {\r\n//                    output[_out++] = output[from++];\r\n//                  } while (--len);\r\n//                  continue top;\r\n//                }\r\n//#endif\r\n              }\r\n              from = 0; // window index\r\n              from_source = s_window;\r\n              if (wnext === 0) {           /* very common case */\r\n                from += wsize - op;\r\n                if (op < len) {         /* some from window */\r\n                  len -= op;\r\n                  do {\r\n                    output[_out++] = s_window[from++];\r\n                  } while (--op);\r\n                  from = _out - dist;  /* rest from output */\r\n                  from_source = output;\r\n                }\r\n              }\r\n              else if (wnext < op) {      /* wrap around window */\r\n                from += wsize + wnext - op;\r\n                op -= wnext;\r\n                if (op < len) {         /* some from end of window */\r\n                  len -= op;\r\n                  do {\r\n                    output[_out++] = s_window[from++];\r\n                  } while (--op);\r\n                  from = 0;\r\n                  if (wnext < len) {  /* some from start of window */\r\n                    op = wnext;\r\n                    len -= op;\r\n                    do {\r\n                      output[_out++] = s_window[from++];\r\n                    } while (--op);\r\n                    from = _out - dist;      /* rest from output */\r\n                    from_source = output;\r\n                  }\r\n                }\r\n              }\r\n              else {                      /* contiguous in window */\r\n                from += wnext - op;\r\n                if (op < len) {         /* some from window */\r\n                  len -= op;\r\n                  do {\r\n                    output[_out++] = s_window[from++];\r\n                  } while (--op);\r\n                  from = _out - dist;  /* rest from output */\r\n                  from_source = output;\r\n                }\r\n              }\r\n              while (len > 2) {\r\n                output[_out++] = from_source[from++];\r\n                output[_out++] = from_source[from++];\r\n                output[_out++] = from_source[from++];\r\n                len -= 3;\r\n              }\r\n              if (len) {\r\n                output[_out++] = from_source[from++];\r\n                if (len > 1) {\r\n                  output[_out++] = from_source[from++];\r\n                }\r\n              }\r\n            }\r\n            else {\r\n              from = _out - dist;          /* copy direct from output */\r\n              do {                        /* minimum length is three */\r\n                output[_out++] = output[from++];\r\n                output[_out++] = output[from++];\r\n                output[_out++] = output[from++];\r\n                len -= 3;\r\n              } while (len > 2);\r\n              if (len) {\r\n                output[_out++] = output[from++];\r\n                if (len > 1) {\r\n                  output[_out++] = output[from++];\r\n                }\r\n              }\r\n            }\r\n          }\r\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\r\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\r\n            continue dodist;\r\n          }\r\n          else {\r\n            strm.msg = 'invalid distance code';\r\n            state.mode = BAD$1;\r\n            break top;\r\n          }\r\n\r\n          break; // need to emulate goto via \"continue\"\r\n        }\r\n      }\r\n      else if ((op & 64) === 0) {              /* 2nd level length code */\r\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\r\n        continue dolen;\r\n      }\r\n      else if (op & 32) {                     /* end-of-block */\r\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\r\n        state.mode = TYPE$1;\r\n        break top;\r\n      }\r\n      else {\r\n        strm.msg = 'invalid literal/length code';\r\n        state.mode = BAD$1;\r\n        break top;\r\n      }\r\n\r\n      break; // need to emulate goto via \"continue\"\r\n    }\r\n  } while (_in < last && _out < end);\r\n\r\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\r\n  len = bits >> 3;\r\n  _in -= len;\r\n  bits -= len << 3;\r\n  hold &= (1 << bits) - 1;\r\n\r\n  /* update state and return */\r\n  strm.next_in = _in;\r\n  strm.next_out = _out;\r\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\r\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\r\n  state.hold = hold;\r\n  state.bits = bits;\r\n  return;\r\n};\r\n\r\n// 'use strict';\r\n\r\n\r\n// var utils = require('../utils/common');\r\n\r\nvar MAXBITS = 15;\r\nvar ENOUGH_LENS$1 = 852;\r\nvar ENOUGH_DISTS$1 = 592;\r\n//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\r\n\r\nvar CODES$1 = 0;\r\nvar LENS$1 = 1;\r\nvar DISTS$1 = 2;\r\n\r\nvar lbase = [ /* Length codes 257..285 base */\r\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\r\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\r\n];\r\n\r\nvar lext = [ /* Length codes 257..285 extra */\r\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\r\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\r\n];\r\n\r\nvar dbase = [ /* Distance codes 0..29 base */\r\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\r\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\r\n  8193, 12289, 16385, 24577, 0, 0\r\n];\r\n\r\nvar dext = [ /* Distance codes 0..29 extra */\r\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\r\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\r\n  28, 28, 29, 29, 64, 64\r\n];\r\n\r\n// module.exports =\r\nfunction inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)\r\n{\r\n  var bits = opts.bits;\r\n      //here = opts.here; /* table entry for duplication */\r\n\r\n  var len = 0;               /* a code's length in bits */\r\n  var sym = 0;               /* index of code symbols */\r\n  var min = 0, max = 0;          /* minimum and maximum code lengths */\r\n  var root = 0;              /* number of index bits for root table */\r\n  var curr = 0;              /* number of index bits for current table */\r\n  var drop = 0;              /* code bits to drop for sub-table */\r\n  var left = 0;                   /* number of prefix codes available */\r\n  var used = 0;              /* code entries in table used */\r\n  var huff = 0;              /* Huffman code */\r\n  var incr;              /* for incrementing code, index */\r\n  var fill;              /* index for replicating entries */\r\n  var low;               /* low bits for current root entry */\r\n  var mask;              /* mask for low root bits */\r\n  var next;             /* next available space in table */\r\n  var base = null;     /* base value table to use */\r\n  var base_index = 0;\r\n//  var shoextra;    /* extra bits table to use */\r\n  var end;                    /* use base and extra for symbol > end */\r\n  var count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\r\n  var offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\r\n  var extra = null;\r\n  var extra_index = 0;\r\n\r\n  var here_bits, here_op, here_val;\r\n\r\n  /*\r\n   Process a set of code lengths to create a canonical Huffman code.  The\r\n   code lengths are lens[0..codes-1].  Each length corresponds to the\r\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\r\n   symbols by length from short to long, and retaining the symbol order\r\n   for codes with equal lengths.  Then the code starts with all zero bits\r\n   for the first code of the shortest length, and the codes are integer\r\n   increments for the same length, and zeros are appended as the length\r\n   increases.  For the deflate format, these bits are stored backwards\r\n   from their more natural integer increment ordering, and so when the\r\n   decoding tables are built in the large loop below, the integer codes\r\n   are incremented backwards.\r\n\r\n   This routine assumes, but does not check, that all of the entries in\r\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\r\n   1..MAXBITS is interpreted as that code length.  zero means that that\r\n   symbol does not occur in this code.\r\n\r\n   The codes are sorted by computing a count of codes for each length,\r\n   creating from that a table of starting indices for each length in the\r\n   sorted table, and then entering the symbols in order in the sorted\r\n   table.  The sorted table is work[], with that space being provided by\r\n   the caller.\r\n\r\n   The length counts are used for other purposes as well, i.e. finding\r\n   the minimum and maximum length codes, determining if there are any\r\n   codes at all, checking for a valid set of lengths, and looking ahead\r\n   at length counts to determine sub-table sizes when building the\r\n   decoding tables.\r\n   */\r\n\r\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\r\n  for (len = 0; len <= MAXBITS; len++) {\r\n    count[len] = 0;\r\n  }\r\n  for (sym = 0; sym < codes; sym++) {\r\n    count[lens[lens_index + sym]]++;\r\n  }\r\n\r\n  /* bound code lengths, force root to be within code lengths */\r\n  root = bits;\r\n  for (max = MAXBITS; max >= 1; max--) {\r\n    if (count[max] !== 0) { break; }\r\n  }\r\n  if (root > max) {\r\n    root = max;\r\n  }\r\n  if (max === 0) {                     /* no symbols to code at all */\r\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\r\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\r\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\r\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\r\n\r\n\r\n    //table.op[opts.table_index] = 64;\r\n    //table.bits[opts.table_index] = 1;\r\n    //table.val[opts.table_index++] = 0;\r\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\r\n\r\n    opts.bits = 1;\r\n    return 0;     /* no symbols, but wait for decoding to report error */\r\n  }\r\n  for (min = 1; min < max; min++) {\r\n    if (count[min] !== 0) { break; }\r\n  }\r\n  if (root < min) {\r\n    root = min;\r\n  }\r\n\r\n  /* check for an over-subscribed or incomplete set of lengths */\r\n  left = 1;\r\n  for (len = 1; len <= MAXBITS; len++) {\r\n    left <<= 1;\r\n    left -= count[len];\r\n    if (left < 0) {\r\n      return -1;\r\n    }        /* over-subscribed */\r\n  }\r\n  if (left > 0 && (type === CODES$1 || max !== 1)) {\r\n    return -1;                      /* incomplete set */\r\n  }\r\n\r\n  /* generate offsets into symbol table for each length for sorting */\r\n  offs[1] = 0;\r\n  for (len = 1; len < MAXBITS; len++) {\r\n    offs[len + 1] = offs[len] + count[len];\r\n  }\r\n\r\n  /* sort symbols by length, by symbol order within each length */\r\n  for (sym = 0; sym < codes; sym++) {\r\n    if (lens[lens_index + sym] !== 0) {\r\n      work[offs[lens[lens_index + sym]]++] = sym;\r\n    }\r\n  }\r\n\r\n  /*\r\n   Create and fill in decoding tables.  In this loop, the table being\r\n   filled is at next and has curr index bits.  The code being used is huff\r\n   with length len.  That code is converted to an index by dropping drop\r\n   bits off of the bottom.  For codes where len is less than drop + curr,\r\n   those top drop + curr - len bits are incremented through all values to\r\n   fill the table with replicated entries.\r\n\r\n   root is the number of index bits for the root table.  When len exceeds\r\n   root, sub-tables are created pointed to by the root entry with an index\r\n   of the low root bits of huff.  This is saved in low to check for when a\r\n   new sub-table should be started.  drop is zero when the root table is\r\n   being filled, and drop is root when sub-tables are being filled.\r\n\r\n   When a new sub-table is needed, it is necessary to look ahead in the\r\n   code lengths to determine what size sub-table is needed.  The length\r\n   counts are used for this, and so count[] is decremented as codes are\r\n   entered in the tables.\r\n\r\n   used keeps track of how many table entries have been allocated from the\r\n   provided *table space.  It is checked for LENS and DIST tables against\r\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\r\n   the initial root table size constants.  See the comments in inftrees.h\r\n   for more information.\r\n\r\n   sym increments through all symbols, and the loop terminates when\r\n   all codes of length max, i.e. all codes, have been processed.  This\r\n   routine permits incomplete codes, so another loop after this one fills\r\n   in the rest of the decoding tables with invalid code markers.\r\n   */\r\n\r\n  /* set up for code type */\r\n  // poor man optimization - use if-else instead of switch,\r\n  // to avoid deopts in old v8\r\n  if (type === CODES$1) {\r\n    base = extra = work;    /* dummy value--not used */\r\n    end = 19;\r\n\r\n  } else if (type === LENS$1) {\r\n    base = lbase;\r\n    base_index -= 257;\r\n    extra = lext;\r\n    extra_index -= 257;\r\n    end = 256;\r\n\r\n  } else {                    /* DISTS */\r\n    base = dbase;\r\n    extra = dext;\r\n    end = -1;\r\n  }\r\n\r\n  /* initialize opts for loop */\r\n  huff = 0;                   /* starting code */\r\n  sym = 0;                    /* starting code symbol */\r\n  len = min;                  /* starting code length */\r\n  next = table_index;              /* current table to fill in */\r\n  curr = root;                /* current table index bits */\r\n  drop = 0;                   /* current bits to drop from code for index */\r\n  low = -1;                   /* trigger new sub-table when len > root */\r\n  used = 1 << root;          /* use root table entries */\r\n  mask = used - 1;            /* mask for comparing low */\r\n\r\n  /* check available table space */\r\n  if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\r\n    (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\r\n    return 1;\r\n  }\r\n\r\n  var i = 0;\r\n  /* process all codes and make table entries */\r\n  for (;;) {\r\n    i++;\r\n    /* create table entry */\r\n    here_bits = len - drop;\r\n    if (work[sym] < end) {\r\n      here_op = 0;\r\n      here_val = work[sym];\r\n    }\r\n    else if (work[sym] > end) {\r\n      here_op = extra[extra_index + work[sym]];\r\n      here_val = base[base_index + work[sym]];\r\n    }\r\n    else {\r\n      here_op = 32 + 64;         /* end of block */\r\n      here_val = 0;\r\n    }\r\n\r\n    /* replicate for those indices with low len bits equal to huff */\r\n    incr = 1 << (len - drop);\r\n    fill = 1 << curr;\r\n    min = fill;                 /* save offset to next table */\r\n    do {\r\n      fill -= incr;\r\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\r\n    } while (fill !== 0);\r\n\r\n    /* backwards increment the len-bit code huff */\r\n    incr = 1 << (len - 1);\r\n    while (huff & incr) {\r\n      incr >>= 1;\r\n    }\r\n    if (incr !== 0) {\r\n      huff &= incr - 1;\r\n      huff += incr;\r\n    } else {\r\n      huff = 0;\r\n    }\r\n\r\n    /* go to next symbol, update count, len */\r\n    sym++;\r\n    if (--count[len] === 0) {\r\n      if (len === max) { break; }\r\n      len = lens[lens_index + work[sym]];\r\n    }\r\n\r\n    /* create new sub-table if needed */\r\n    if (len > root && (huff & mask) !== low) {\r\n      /* if first time, transition to sub-tables */\r\n      if (drop === 0) {\r\n        drop = root;\r\n      }\r\n\r\n      /* increment past last table */\r\n      next += min;            /* here min is 1 << curr */\r\n\r\n      /* determine length of next table */\r\n      curr = len - drop;\r\n      left = 1 << curr;\r\n      while (curr + drop < max) {\r\n        left -= count[curr + drop];\r\n        if (left <= 0) { break; }\r\n        curr++;\r\n        left <<= 1;\r\n      }\r\n\r\n      /* check for enough space */\r\n      used += 1 << curr;\r\n      if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\r\n        (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\r\n        return 1;\r\n      }\r\n\r\n      /* point entry in root table to sub-table */\r\n      low = huff & mask;\r\n      /*table.op[low] = curr;\r\n      table.bits[low] = root;\r\n      table.val[low] = next - opts.table_index;*/\r\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\r\n    }\r\n  }\r\n\r\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\r\n   at most one remaining entry, since if the code is incomplete, the\r\n   maximum code length that was allowed to get this far is one bit) */\r\n  if (huff !== 0) {\r\n    //table.op[next + huff] = 64;            /* invalid code marker */\r\n    //table.bits[next + huff] = len - drop;\r\n    //table.val[next + huff] = 0;\r\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\r\n  }\r\n\r\n  /* set return parameters */\r\n  //opts.table_index += used;\r\n  opts.bits = root;\r\n  return 0;\r\n};\r\n\r\n// 'use strict';\r\n\r\n\r\n// var utils         = require('../utils/common');\r\n// var adler32       = require('./adler32');\r\n// var crc32         = require('./crc32');\r\n// var inflate_fast  = require('./inffast');\r\n// var inflate_table = require('./inftrees');\r\n\r\nvar CODES = 0;\r\nvar LENS = 1;\r\nvar DISTS = 2;\r\n\r\n/* Public constants ==========================================================*/\r\n/* ===========================================================================*/\r\n\r\n\r\n/* Allowed flush values; see deflate() and inflate() below for details */\r\n//var Z_NO_FLUSH      = 0;\r\n//var Z_PARTIAL_FLUSH = 1;\r\n//var Z_SYNC_FLUSH    = 2;\r\n//var Z_FULL_FLUSH    = 3;\r\nvar Z_FINISH        = 4;\r\nvar Z_BLOCK         = 5;\r\nvar Z_TREES         = 6;\r\n\r\n\r\n/* Return codes for the compression/decompression functions. Negative values\r\n * are errors, positive values are used for special but normal events.\r\n */\r\nvar Z_OK            = 0;\r\nvar Z_STREAM_END    = 1;\r\nvar Z_NEED_DICT     = 2;\r\n//var Z_ERRNO         = -1;\r\nvar Z_STREAM_ERROR  = -2;\r\nvar Z_DATA_ERROR    = -3;\r\nvar Z_MEM_ERROR     = -4;\r\nvar Z_BUF_ERROR     = -5;\r\n//var Z_VERSION_ERROR = -6;\r\n\r\n/* The deflate compression method */\r\nvar Z_DEFLATED  = 8;\r\n\r\n\r\n/* STATES ====================================================================*/\r\n/* ===========================================================================*/\r\n\r\n\r\nvar    HEAD = 1;       /* i: waiting for magic header */\r\nvar    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\r\nvar    TIME = 3;       /* i: waiting for modification time (gzip) */\r\nvar    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\r\nvar    EXLEN = 5;      /* i: waiting for extra length (gzip) */\r\nvar    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\r\nvar    NAME = 7;       /* i: waiting for end of file name (gzip) */\r\nvar    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\r\nvar    HCRC = 9;       /* i: waiting for header crc (gzip) */\r\nvar    DICTID = 10;    /* i: waiting for dictionary check value */\r\nvar    DICT = 11;      /* waiting for inflateSetDictionary() call */\r\nvar        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\r\nvar        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */\r\nvar        STORED = 14;    /* i: waiting for stored size (length and complement) */\r\nvar        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */\r\nvar        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\r\nvar        TABLE = 17;     /* i: waiting for dynamic block table lengths */\r\nvar        LENLENS = 18;   /* i: waiting for code length code lengths */\r\nvar        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\r\nvar            LEN_ = 20;      /* i: same as LEN below, but only first time in */\r\nvar            LEN = 21;       /* i: waiting for length/lit/eob code */\r\nvar            LENEXT = 22;    /* i: waiting for length extra bits */\r\nvar            DIST = 23;      /* i: waiting for distance code */\r\nvar            DISTEXT = 24;   /* i: waiting for distance extra bits */\r\nvar            MATCH = 25;     /* o: waiting for output space to copy string */\r\nvar            LIT = 26;       /* o: waiting for output space to write literal */\r\nvar    CHECK = 27;     /* i: waiting for 32-bit check value */\r\nvar    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\r\nvar    DONE = 29;      /* finished check, done -- remain here until reset */\r\nvar    BAD = 30;       /* got a data error -- remain here until reset */\r\nvar    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\r\nvar    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\r\n\r\n/* ===========================================================================*/\r\n\r\n\r\n\r\nvar ENOUGH_LENS = 852;\r\nvar ENOUGH_DISTS = 592;\r\nfunction zswap32(q) {\r\n  return  (((q >>> 24) & 0xff) +\r\n          ((q >>> 8) & 0xff00) +\r\n          ((q & 0xff00) << 8) +\r\n          ((q & 0xff) << 24));\r\n}\r\n\r\n\r\nfunction InflateState() {\r\n  this.mode = 0;             /* current inflate mode */\r\n  this.last = false;          /* true if processing last block */\r\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\r\n  this.havedict = false;      /* true if dictionary provided */\r\n  this.flags = 0;             /* gzip header method and flags (0 if zlib) */\r\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\r\n  this.check = 0;             /* protected copy of check value */\r\n  this.total = 0;             /* protected copy of output count */\r\n  // TODO: may be {}\r\n  this.head = null;           /* where to save gzip header information */\r\n\r\n  /* sliding window */\r\n  this.wbits = 0;             /* log base 2 of requested window size */\r\n  this.wsize = 0;             /* window size or zero if not using window */\r\n  this.whave = 0;             /* valid bytes in the window */\r\n  this.wnext = 0;             /* window write index */\r\n  this.window = null;         /* allocated sliding window, if needed */\r\n\r\n  /* bit accumulator */\r\n  this.hold = 0;              /* input bit accumulator */\r\n  this.bits = 0;              /* number of bits in \"in\" */\r\n\r\n  /* for string and stored block copying */\r\n  this.length = 0;            /* literal or length of data to copy */\r\n  this.offset = 0;            /* distance back to copy string from */\r\n\r\n  /* for table and code decoding */\r\n  this.extra = 0;             /* extra bits needed */\r\n\r\n  /* fixed and dynamic code tables */\r\n  this.lencode = null;          /* starting table for length/literal codes */\r\n  this.distcode = null;         /* starting table for distance codes */\r\n  this.lenbits = 0;           /* index bits for lencode */\r\n  this.distbits = 0;          /* index bits for distcode */\r\n\r\n  /* dynamic table building */\r\n  this.ncode = 0;             /* number of code length code lengths */\r\n  this.nlen = 0;              /* number of length code lengths */\r\n  this.ndist = 0;             /* number of distance code lengths */\r\n  this.have = 0;              /* number of code lengths in lens[] */\r\n  this.next = null;              /* next available space in codes[] */\r\n\r\n  this.lens = new Uint16Array(320); /* temporary storage for code lengths */\r\n  this.work = new Uint16Array(288); /* work area for code table building */\r\n\r\n  /*\r\n   because we don't have pointers in js, we use lencode and distcode directly\r\n   as buffers so we don't need codes\r\n  */\r\n  //this.codes = new Buf32(ENOUGH);       /* space for code tables */\r\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\r\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\r\n  this.sane = 0;                   /* if false, allow invalid distance too far */\r\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\r\n  this.was = 0;                    /* initial length of match */\r\n}\r\n\r\nfunction inflateResetKeep(strm) {\r\n  var state;\r\n\r\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\r\n  state = strm.state;\r\n  strm.total_in = strm.total_out = state.total = 0;\r\n  strm.msg = ''; /*Z_NULL*/\r\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\r\n    strm.adler = state.wrap & 1;\r\n  }\r\n  state.mode = HEAD;\r\n  state.last = 0;\r\n  state.havedict = 0;\r\n  state.dmax = 32768;\r\n  state.head = null/*Z_NULL*/;\r\n  state.hold = 0;\r\n  state.bits = 0;\r\n  //state.lencode = state.distcode = state.next = state.codes;\r\n  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);\r\n  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);\r\n\r\n  state.sane = 1;\r\n  state.back = -1;\r\n  //Tracev((stderr, \"inflate: reset\\n\"));\r\n  return Z_OK;\r\n}\r\n\r\nfunction inflateReset(strm) {\r\n  var state;\r\n\r\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\r\n  state = strm.state;\r\n  state.wsize = 0;\r\n  state.whave = 0;\r\n  state.wnext = 0;\r\n  return inflateResetKeep(strm);\r\n\r\n}\r\n\r\nfunction inflateReset2(strm, windowBits) {\r\n  var wrap;\r\n  var state;\r\n\r\n  /* get the state */\r\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\r\n  state = strm.state;\r\n\r\n  /* extract wrap request from windowBits parameter */\r\n  if (windowBits < 0) {\r\n    wrap = 0;\r\n    windowBits = -windowBits;\r\n  }\r\n  else {\r\n    wrap = (windowBits >> 4) + 1;\r\n    if (windowBits < 48) {\r\n      windowBits &= 15;\r\n    }\r\n  }\r\n\r\n  /* set number of window bits, free window if different */\r\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\r\n    return Z_STREAM_ERROR;\r\n  }\r\n  if (state.window !== null && state.wbits !== windowBits) {\r\n    state.window = null;\r\n  }\r\n\r\n  /* update state and reset the rest of it */\r\n  state.wrap = wrap;\r\n  state.wbits = windowBits;\r\n  return inflateReset(strm);\r\n}\r\n\r\nfunction inflateInit2(strm, windowBits) {\r\n  var ret;\r\n  var state;\r\n\r\n  if (!strm) { return Z_STREAM_ERROR; }\r\n  //strm.msg = Z_NULL;                 /* in case we return an error */\r\n\r\n  state = new InflateState();\r\n\r\n  //if (state === Z_NULL) return Z_MEM_ERROR;\r\n  //Tracev((stderr, \"inflate: allocated\\n\"));\r\n  strm.state = state;\r\n  state.window = null/*Z_NULL*/;\r\n  ret = inflateReset2(strm, windowBits);\r\n  if (ret !== Z_OK) {\r\n    strm.state = null/*Z_NULL*/;\r\n  }\r\n  return ret;\r\n}\r\n\r\n/*\r\n Return state with length and distance decoding tables and index sizes set to\r\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\r\n If BUILDFIXED is defined, then instead this routine builds the tables the\r\n first time it's called, and returns those tables the first time and\r\n thereafter.  This reduces the size of the code by about 2K bytes, in\r\n exchange for a little execution time.  However, BUILDFIXED should not be\r\n used for threaded applications, since the rewriting of the tables and virgin\r\n may not be thread-safe.\r\n */\r\nvar virgin = true;\r\n\r\nvar lenfix;\r\nvar distfix;\r\n// We have no pointers in JS, so keep tables separate\r\n\r\nfunction fixedtables(state) {\r\n  /* build fixed huffman tables if first call (may not be thread safe) */\r\n  if (virgin) {\r\n    var sym;\r\n\r\n    lenfix = new Int32Array(512);\r\n    distfix = new Int32Array(32);\r\n\r\n    /* literal/length table */\r\n    sym = 0;\r\n    while (sym < 144) { state.lens[sym++] = 8; }\r\n    while (sym < 256) { state.lens[sym++] = 9; }\r\n    while (sym < 280) { state.lens[sym++] = 7; }\r\n    while (sym < 288) { state.lens[sym++] = 8; }\r\n\r\n    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\r\n\r\n    /* distance table */\r\n    sym = 0;\r\n    while (sym < 32) { state.lens[sym++] = 5; }\r\n\r\n    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\r\n\r\n    /* do this just once */\r\n    virgin = false;\r\n  }\r\n\r\n  state.lencode = lenfix;\r\n  state.lenbits = 9;\r\n  state.distcode = distfix;\r\n  state.distbits = 5;\r\n}\r\n\r\n\r\n/*\r\n Update the window with the last wsize (normally 32K) bytes written before\r\n returning.  If window does not exist yet, create it.  This is only called\r\n when a window is already in use, or when output has been written during this\r\n inflate call, but the end of the deflate stream has not been reached yet.\r\n It is also called to create a window for dictionary data when a dictionary\r\n is loaded.\r\n\r\n Providing output buffers larger than 32K to inflate() should provide a speed\r\n advantage, since only the last 32K of output is copied to the sliding window\r\n upon return from inflate(), and since all distances after the first 32K of\r\n output will fall in the output data, making match copies simpler and faster.\r\n The advantage may be dependent on the size of the processor's data caches.\r\n */\r\nfunction updatewindow(strm, src, end, copy) {\r\n  var dist;\r\n  var state = strm.state;\r\n\r\n  /* if it hasn't been done already, allocate space for the window */\r\n  if (state.window === null) {\r\n    state.wsize = 1 << state.wbits;\r\n    state.wnext = 0;\r\n    state.whave = 0;\r\n\r\n    state.window = new Uint8Array(state.wsize);\r\n  }\r\n\r\n  /* copy state->wsize or less output bytes into the circular window */\r\n  if (copy >= state.wsize) {\r\n    arraySet(state.window, src, end - state.wsize, state.wsize, 0);\r\n    state.wnext = 0;\r\n    state.whave = state.wsize;\r\n  }\r\n  else {\r\n    dist = state.wsize - state.wnext;\r\n    if (dist > copy) {\r\n      dist = copy;\r\n    }\r\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\r\n    arraySet(state.window, src, end - copy, dist, state.wnext);\r\n    copy -= dist;\r\n    if (copy) {\r\n      //zmemcpy(state->window, end - copy, copy);\r\n      arraySet(state.window, src, end - copy, copy, 0);\r\n      state.wnext = copy;\r\n      state.whave = state.wsize;\r\n    }\r\n    else {\r\n      state.wnext += dist;\r\n      if (state.wnext === state.wsize) { state.wnext = 0; }\r\n      if (state.whave < state.wsize) { state.whave += dist; }\r\n    }\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction inflate(strm, flush) {\r\n  var state;\r\n  var input, output;          // input/output buffers\r\n  var next;                   /* next input INDEX */\r\n  var put;                    /* next output INDEX */\r\n  var have, left;             /* available input and output */\r\n  var hold;                   /* bit buffer */\r\n  var bits;                   /* bits in bit buffer */\r\n  var _in, _out;              /* save starting available input and output */\r\n  var copy;                   /* number of stored or match bytes to copy */\r\n  var from;                   /* where to copy match bytes from */\r\n  var from_source;\r\n  var here = 0;               /* current decoding table entry */\r\n  var here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\r\n  //var last;                   /* parent table entry */\r\n  var last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\r\n  var len;                    /* length to copy for repeats, bits to drop */\r\n  var ret;                    /* return code */\r\n  var hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */\r\n  var opts;\r\n\r\n  var n; // temporary var for NEED_BITS\r\n\r\n  var order = /* permutation of code lengths */\r\n    [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];\r\n\r\n\r\n  if (!strm || !strm.state || !strm.output ||\r\n      (!strm.input && strm.avail_in !== 0)) {\r\n    return Z_STREAM_ERROR;\r\n  }\r\n\r\n  state = strm.state;\r\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\r\n\r\n\r\n  //--- LOAD() ---\r\n  put = strm.next_out;\r\n  output = strm.output;\r\n  left = strm.avail_out;\r\n  next = strm.next_in;\r\n  input = strm.input;\r\n  have = strm.avail_in;\r\n  hold = state.hold;\r\n  bits = state.bits;\r\n  //---\r\n\r\n  _in = have;\r\n  _out = left;\r\n  ret = Z_OK;\r\n\r\n  inf_leave: // goto emulation\r\n  for (;;) {\r\n    switch (state.mode) {\r\n    case HEAD:\r\n      if (state.wrap === 0) {\r\n        state.mode = TYPEDO;\r\n        break;\r\n      }\r\n      //=== NEEDBITS(16);\r\n      while (bits < 16) {\r\n        if (have === 0) { break inf_leave; }\r\n        have--;\r\n        hold += input[next++] << bits;\r\n        bits += 8;\r\n      }\r\n      //===//\r\n      if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\r\n        state.check = 0/*crc32(0L, Z_NULL, 0)*/;\r\n        //=== CRC2(state.check, hold);\r\n        hbuf[0] = hold & 0xff;\r\n        hbuf[1] = (hold >>> 8) & 0xff;\r\n        state.check = crc32(state.check, hbuf, 2, 0);\r\n        //===//\r\n\r\n        //=== INITBITS();\r\n        hold = 0;\r\n        bits = 0;\r\n        //===//\r\n        state.mode = FLAGS;\r\n        break;\r\n      }\r\n      state.flags = 0;           /* expect zlib header */\r\n      if (state.head) {\r\n        state.head.done = false;\r\n      }\r\n      if (!(state.wrap & 1) ||   /* check if zlib header allowed */\r\n        (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\r\n        strm.msg = 'incorrect header check';\r\n        state.mode = BAD;\r\n        break;\r\n      }\r\n      if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\r\n        strm.msg = 'unknown compression method';\r\n        state.mode = BAD;\r\n        break;\r\n      }\r\n      //--- DROPBITS(4) ---//\r\n      hold >>>= 4;\r\n      bits -= 4;\r\n      //---//\r\n      len = (hold & 0x0f)/*BITS(4)*/ + 8;\r\n      if (state.wbits === 0) {\r\n        state.wbits = len;\r\n      }\r\n      else if (len > state.wbits) {\r\n        strm.msg = 'invalid window size';\r\n        state.mode = BAD;\r\n        break;\r\n      }\r\n      state.dmax = 1 << len;\r\n      //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\r\n      strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\r\n      state.mode = hold & 0x200 ? DICTID : TYPE;\r\n      //=== INITBITS();\r\n      hold = 0;\r\n      bits = 0;\r\n      //===//\r\n      break;\r\n    case FLAGS:\r\n      //=== NEEDBITS(16); */\r\n      while (bits < 16) {\r\n        if (have === 0) { break inf_leave; }\r\n        have--;\r\n        hold += input[next++] << bits;\r\n        bits += 8;\r\n      }\r\n      //===//\r\n      state.flags = hold;\r\n      if ((state.flags & 0xff) !== Z_DEFLATED) {\r\n        strm.msg = 'unknown compression method';\r\n        state.mode = BAD;\r\n        break;\r\n      }\r\n      if (state.flags & 0xe000) {\r\n        strm.msg = 'unknown header flags set';\r\n        state.mode = BAD;\r\n        break;\r\n      }\r\n      if (state.head) {\r\n        state.head.text = ((hold >> 8) & 1);\r\n      }\r\n      if (state.flags & 0x0200) {\r\n        //=== CRC2(state.check, hold);\r\n        hbuf[0] = hold & 0xff;\r\n        hbuf[1] = (hold >>> 8) & 0xff;\r\n        state.check = crc32(state.check, hbuf, 2, 0);\r\n        //===//\r\n      }\r\n      //=== INITBITS();\r\n      hold = 0;\r\n      bits = 0;\r\n      //===//\r\n      state.mode = TIME;\r\n      /* falls through */\r\n    case TIME:\r\n      //=== NEEDBITS(32); */\r\n      while (bits < 32) {\r\n        if (have === 0) { break inf_leave; }\r\n        have--;\r\n        hold += input[next++] << bits;\r\n        bits += 8;\r\n      }\r\n      //===//\r\n      if (state.head) {\r\n        state.head.time = hold;\r\n      }\r\n      if (state.flags & 0x0200) {\r\n        //=== CRC4(state.check, hold)\r\n        hbuf[0] = hold & 0xff;\r\n        hbuf[1] = (hold >>> 8) & 0xff;\r\n        hbuf[2] = (hold >>> 16) & 0xff;\r\n        hbuf[3] = (hold >>> 24) & 0xff;\r\n        state.check = crc32(state.check, hbuf, 4, 0);\r\n        //===\r\n      }\r\n      //=== INITBITS();\r\n      hold = 0;\r\n      bits = 0;\r\n      //===//\r\n      state.mode = OS;\r\n      /* falls through */\r\n    case OS:\r\n      //=== NEEDBITS(16); */\r\n      while (bits < 16) {\r\n        if (have === 0) { break inf_leave; }\r\n        have--;\r\n        hold += input[next++] << bits;\r\n        bits += 8;\r\n      }\r\n      //===//\r\n      if (state.head) {\r\n        state.head.xflags = (hold & 0xff);\r\n        state.head.os = (hold >> 8);\r\n      }\r\n      if (state.flags & 0x0200) {\r\n        //=== CRC2(state.check, hold);\r\n        hbuf[0] = hold & 0xff;\r\n        hbuf[1] = (hold >>> 8) & 0xff;\r\n        state.check = crc32(state.check, hbuf, 2, 0);\r\n        //===//\r\n      }\r\n      //=== INITBITS();\r\n      hold = 0;\r\n      bits = 0;\r\n      //===//\r\n      state.mode = EXLEN;\r\n      /* falls through */\r\n    case EXLEN:\r\n      if (state.flags & 0x0400) {\r\n        //=== NEEDBITS(16); */\r\n        while (bits < 16) {\r\n          if (have === 0) { break inf_leave; }\r\n          have--;\r\n          hold += input[next++] << bits;\r\n          bits += 8;\r\n        }\r\n        //===//\r\n        state.length = hold;\r\n        if (state.head) {\r\n          state.head.extra_len = hold;\r\n        }\r\n        if (state.flags & 0x0200) {\r\n          //=== CRC2(state.check, hold);\r\n          hbuf[0] = hold & 0xff;\r\n          hbuf[1] = (hold >>> 8) & 0xff;\r\n          state.check = crc32(state.check, hbuf, 2, 0);\r\n          //===//\r\n        }\r\n        //=== INITBITS();\r\n        hold = 0;\r\n        bits = 0;\r\n        //===//\r\n      }\r\n      else if (state.head) {\r\n        state.head.extra = null/*Z_NULL*/;\r\n      }\r\n      state.mode = EXTRA;\r\n      /* falls through */\r\n    case EXTRA:\r\n      if (state.flags & 0x0400) {\r\n        copy = state.length;\r\n        if (copy > have) { copy = have; }\r\n        if (copy) {\r\n          if (state.head) {\r\n            len = state.head.extra_len - state.length;\r\n            if (!state.head.extra) {\r\n              // Use untyped array for more conveniend processing later\r\n              state.head.extra = new Array(state.head.extra_len);\r\n            }\r\n            arraySet(\r\n              state.head.extra,\r\n              input,\r\n              next,\r\n              // extra field is limited to 65536 bytes\r\n              // - no need for additional size check\r\n              copy,\r\n              /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\r\n              len\r\n            );\r\n            //zmemcpy(state.head.extra + len, next,\r\n            //        len + copy > state.head.extra_max ?\r\n            //        state.head.extra_max - len : copy);\r\n          }\r\n          if (state.flags & 0x0200) {\r\n            state.check = crc32(state.check, input, copy, next);\r\n          }\r\n          have -= copy;\r\n          next += copy;\r\n          state.length -= copy;\r\n        }\r\n        if (state.length) { break inf_leave; }\r\n      }\r\n      state.length = 0;\r\n      state.mode = NAME;\r\n      /* falls through */\r\n    case NAME:\r\n      if (state.flags & 0x0800) {\r\n        if (have === 0) { break inf_leave; }\r\n        copy = 0;\r\n        do {\r\n          // TODO: 2 or 1 bytes?\r\n          len = input[next + copy++];\r\n          /* use constant limit because in js we should not preallocate memory */\r\n          if (state.head && len &&\r\n              (state.length < 65536 /*state.head.name_max*/)) {\r\n            state.head.name += String.fromCharCode(len);\r\n          }\r\n        } while (len && copy < have);\r\n\r\n        if (state.flags & 0x0200) {\r\n          state.check = crc32(state.check, input, copy, next);\r\n        }\r\n        have -= copy;\r\n        next += copy;\r\n        if (len) { break inf_leave; }\r\n      }\r\n      else if (state.head) {\r\n        state.head.name = null;\r\n      }\r\n      state.length = 0;\r\n      state.mode = COMMENT;\r\n      /* falls through */\r\n    case COMMENT:\r\n      if (state.flags & 0x1000) {\r\n        if (have === 0) { break inf_leave; }\r\n        copy = 0;\r\n        do {\r\n          len = input[next + copy++];\r\n          /* use constant limit because in js we should not preallocate memory */\r\n          if (state.head && len &&\r\n              (state.length < 65536 /*state.head.comm_max*/)) {\r\n            state.head.comment += String.fromCharCode(len);\r\n          }\r\n        } while (len && copy < have);\r\n        if (state.flags & 0x0200) {\r\n          state.check = crc32(state.check, input, copy, next);\r\n        }\r\n        have -= copy;\r\n        next += copy;\r\n        if (len) { break inf_leave; }\r\n      }\r\n      else if (state.head) {\r\n        state.head.comment = null;\r\n      }\r\n      state.mode = HCRC;\r\n      /* falls through */\r\n    case HCRC:\r\n      if (state.flags & 0x0200) {\r\n        //=== NEEDBITS(16); */\r\n        while (bits < 16) {\r\n          if (have === 0) { break inf_leave; }\r\n          have--;\r\n          hold += input[next++] << bits;\r\n          bits += 8;\r\n        }\r\n        //===//\r\n        if (hold !== (state.check & 0xffff)) {\r\n          strm.msg = 'header crc mismatch';\r\n          state.mode = BAD;\r\n          break;\r\n        }\r\n        //=== INITBITS();\r\n        hold = 0;\r\n        bits = 0;\r\n        //===//\r\n      }\r\n      if (state.head) {\r\n        state.head.hcrc = ((state.flags >> 9) & 1);\r\n        state.head.done = true;\r\n      }\r\n      strm.adler = state.check = 0;\r\n      state.mode = TYPE;\r\n      break;\r\n    case DICTID:\r\n      //=== NEEDBITS(32); */\r\n      while (bits < 32) {\r\n        if (have === 0) { break inf_leave; }\r\n        have--;\r\n        hold += input[next++] << bits;\r\n        bits += 8;\r\n      }\r\n      //===//\r\n      strm.adler = state.check = zswap32(hold);\r\n      //=== INITBITS();\r\n      hold = 0;\r\n      bits = 0;\r\n      //===//\r\n      state.mode = DICT;\r\n      /* falls through */\r\n    case DICT:\r\n      if (state.havedict === 0) {\r\n        //--- RESTORE() ---\r\n        strm.next_out = put;\r\n        strm.avail_out = left;\r\n        strm.next_in = next;\r\n        strm.avail_in = have;\r\n        state.hold = hold;\r\n        state.bits = bits;\r\n        //---\r\n        return Z_NEED_DICT;\r\n      }\r\n      strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\r\n      state.mode = TYPE;\r\n      /* falls through */\r\n    case TYPE:\r\n      if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\r\n      /* falls through */\r\n    case TYPEDO:\r\n      if (state.last) {\r\n        //--- BYTEBITS() ---//\r\n        hold >>>= bits & 7;\r\n        bits -= bits & 7;\r\n        //---//\r\n        state.mode = CHECK;\r\n        break;\r\n      }\r\n      //=== NEEDBITS(3); */\r\n      while (bits < 3) {\r\n        if (have === 0) { break inf_leave; }\r\n        have--;\r\n        hold += input[next++] << bits;\r\n        bits += 8;\r\n      }\r\n      //===//\r\n      state.last = (hold & 0x01)/*BITS(1)*/;\r\n      //--- DROPBITS(1) ---//\r\n      hold >>>= 1;\r\n      bits -= 1;\r\n      //---//\r\n\r\n      switch ((hold & 0x03)/*BITS(2)*/) {\r\n      case 0:                             /* stored block */\r\n        //Tracev((stderr, \"inflate:     stored block%s\\n\",\r\n        //        state.last ? \" (last)\" : \"\"));\r\n        state.mode = STORED;\r\n        break;\r\n      case 1:                             /* fixed block */\r\n        fixedtables(state);\r\n        //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\r\n        //        state.last ? \" (last)\" : \"\"));\r\n        state.mode = LEN_;             /* decode codes */\r\n        if (flush === Z_TREES) {\r\n          //--- DROPBITS(2) ---//\r\n          hold >>>= 2;\r\n          bits -= 2;\r\n          //---//\r\n          break inf_leave;\r\n        }\r\n        break;\r\n      case 2:                             /* dynamic block */\r\n        //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\r\n        //        state.last ? \" (last)\" : \"\"));\r\n        state.mode = TABLE;\r\n        break;\r\n      case 3:\r\n        strm.msg = 'invalid block type';\r\n        state.mode = BAD;\r\n      }\r\n      //--- DROPBITS(2) ---//\r\n      hold >>>= 2;\r\n      bits -= 2;\r\n      //---//\r\n      break;\r\n    case STORED:\r\n      //--- BYTEBITS() ---// /* go to byte boundary */\r\n      hold >>>= bits & 7;\r\n      bits -= bits & 7;\r\n      //---//\r\n      //=== NEEDBITS(32); */\r\n      while (bits < 32) {\r\n        if (have === 0) { break inf_leave; }\r\n        have--;\r\n        hold += input[next++] << bits;\r\n        bits += 8;\r\n      }\r\n      //===//\r\n      if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\r\n        strm.msg = 'invalid stored block lengths';\r\n        state.mode = BAD;\r\n        break;\r\n      }\r\n      state.length = hold & 0xffff;\r\n      //Tracev((stderr, \"inflate:       stored length %u\\n\",\r\n      //        state.length));\r\n      //=== INITBITS();\r\n      hold = 0;\r\n      bits = 0;\r\n      //===//\r\n      state.mode = COPY_;\r\n      if (flush === Z_TREES) { break inf_leave; }\r\n      /* falls through */\r\n    case COPY_:\r\n      state.mode = COPY;\r\n      /* falls through */\r\n    case COPY:\r\n      copy = state.length;\r\n      if (copy) {\r\n        if (copy > have) { copy = have; }\r\n        if (copy > left) { copy = left; }\r\n        if (copy === 0) { break inf_leave; }\r\n        //--- zmemcpy(put, next, copy); ---\r\n        arraySet(output, input, next, copy, put);\r\n        //---//\r\n        have -= copy;\r\n        next += copy;\r\n        left -= copy;\r\n        put += copy;\r\n        state.length -= copy;\r\n        break;\r\n      }\r\n      //Tracev((stderr, \"inflate:       stored end\\n\"));\r\n      state.mode = TYPE;\r\n      break;\r\n    case TABLE:\r\n      //=== NEEDBITS(14); */\r\n      while (bits < 14) {\r\n        if (have === 0) { break inf_leave; }\r\n        have--;\r\n        hold += input[next++] << bits;\r\n        bits += 8;\r\n      }\r\n      //===//\r\n      state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\r\n      //--- DROPBITS(5) ---//\r\n      hold >>>= 5;\r\n      bits -= 5;\r\n      //---//\r\n      state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\r\n      //--- DROPBITS(5) ---//\r\n      hold >>>= 5;\r\n      bits -= 5;\r\n      //---//\r\n      state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\r\n      //--- DROPBITS(4) ---//\r\n      hold >>>= 4;\r\n      bits -= 4;\r\n      //---//\r\n//#ifndef PKZIP_BUG_WORKAROUND\r\n      if (state.nlen > 286 || state.ndist > 30) {\r\n        strm.msg = 'too many length or distance symbols';\r\n        state.mode = BAD;\r\n        break;\r\n      }\r\n//#endif\r\n      //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\r\n      state.have = 0;\r\n      state.mode = LENLENS;\r\n      /* falls through */\r\n    case LENLENS:\r\n      while (state.have < state.ncode) {\r\n        //=== NEEDBITS(3);\r\n        while (bits < 3) {\r\n          if (have === 0) { break inf_leave; }\r\n          have--;\r\n          hold += input[next++] << bits;\r\n          bits += 8;\r\n        }\r\n        //===//\r\n        state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\r\n        //--- DROPBITS(3) ---//\r\n        hold >>>= 3;\r\n        bits -= 3;\r\n        //---//\r\n      }\r\n      while (state.have < 19) {\r\n        state.lens[order[state.have++]] = 0;\r\n      }\r\n      // We have separate tables & no pointers. 2 commented lines below not needed.\r\n      //state.next = state.codes;\r\n      //state.lencode = state.next;\r\n      // Switch to use dynamic table\r\n      state.lencode = state.lendyn;\r\n      state.lenbits = 7;\r\n\r\n      opts = { bits: state.lenbits };\r\n      ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\r\n      state.lenbits = opts.bits;\r\n\r\n      if (ret) {\r\n        strm.msg = 'invalid code lengths set';\r\n        state.mode = BAD;\r\n        break;\r\n      }\r\n      //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\r\n      state.have = 0;\r\n      state.mode = CODELENS;\r\n      /* falls through */\r\n    case CODELENS:\r\n      while (state.have < state.nlen + state.ndist) {\r\n        for (;;) {\r\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\r\n          here_bits = here >>> 24;\r\n          here_op = (here >>> 16) & 0xff;\r\n          here_val = here & 0xffff;\r\n\r\n          if ((here_bits) <= bits) { break; }\r\n          //--- PULLBYTE() ---//\r\n          if (have === 0) { break inf_leave; }\r\n          have--;\r\n          hold += input[next++] << bits;\r\n          bits += 8;\r\n          //---//\r\n        }\r\n        if (here_val < 16) {\r\n          //--- DROPBITS(here.bits) ---//\r\n          hold >>>= here_bits;\r\n          bits -= here_bits;\r\n          //---//\r\n          state.lens[state.have++] = here_val;\r\n        }\r\n        else {\r\n          if (here_val === 16) {\r\n            //=== NEEDBITS(here.bits + 2);\r\n            n = here_bits + 2;\r\n            while (bits < n) {\r\n              if (have === 0) { break inf_leave; }\r\n              have--;\r\n              hold += input[next++] << bits;\r\n              bits += 8;\r\n            }\r\n            //===//\r\n            //--- DROPBITS(here.bits) ---//\r\n            hold >>>= here_bits;\r\n            bits -= here_bits;\r\n            //---//\r\n            if (state.have === 0) {\r\n              strm.msg = 'invalid bit length repeat';\r\n              state.mode = BAD;\r\n              break;\r\n            }\r\n            len = state.lens[state.have - 1];\r\n            copy = 3 + (hold & 0x03);//BITS(2);\r\n            //--- DROPBITS(2) ---//\r\n            hold >>>= 2;\r\n            bits -= 2;\r\n            //---//\r\n          }\r\n          else if (here_val === 17) {\r\n            //=== NEEDBITS(here.bits + 3);\r\n            n = here_bits + 3;\r\n            while (bits < n) {\r\n              if (have === 0) { break inf_leave; }\r\n              have--;\r\n              hold += input[next++] << bits;\r\n              bits += 8;\r\n            }\r\n            //===//\r\n            //--- DROPBITS(here.bits) ---//\r\n            hold >>>= here_bits;\r\n            bits -= here_bits;\r\n            //---//\r\n            len = 0;\r\n            copy = 3 + (hold & 0x07);//BITS(3);\r\n            //--- DROPBITS(3) ---//\r\n            hold >>>= 3;\r\n            bits -= 3;\r\n            //---//\r\n          }\r\n          else {\r\n            //=== NEEDBITS(here.bits + 7);\r\n            n = here_bits + 7;\r\n            while (bits < n) {\r\n              if (have === 0) { break inf_leave; }\r\n              have--;\r\n              hold += input[next++] << bits;\r\n              bits += 8;\r\n            }\r\n            //===//\r\n            //--- DROPBITS(here.bits) ---//\r\n            hold >>>= here_bits;\r\n            bits -= here_bits;\r\n            //---//\r\n            len = 0;\r\n            copy = 11 + (hold & 0x7f);//BITS(7);\r\n            //--- DROPBITS(7) ---//\r\n            hold >>>= 7;\r\n            bits -= 7;\r\n            //---//\r\n          }\r\n          if (state.have + copy > state.nlen + state.ndist) {\r\n            strm.msg = 'invalid bit length repeat';\r\n            state.mode = BAD;\r\n            break;\r\n          }\r\n          while (copy--) {\r\n            state.lens[state.have++] = len;\r\n          }\r\n        }\r\n      }\r\n\r\n      /* handle error breaks in while */\r\n      if (state.mode === BAD) { break; }\r\n\r\n      /* check for end-of-block code (better have one) */\r\n      if (state.lens[256] === 0) {\r\n        strm.msg = 'invalid code -- missing end-of-block';\r\n        state.mode = BAD;\r\n        break;\r\n      }\r\n\r\n      /* build code tables -- note: do not change the lenbits or distbits\r\n         values here (9 and 6) without reading the comments in inftrees.h\r\n         concerning the ENOUGH constants, which depend on those values */\r\n      state.lenbits = 9;\r\n\r\n      opts = { bits: state.lenbits };\r\n      ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\r\n      // We have separate tables & no pointers. 2 commented lines below not needed.\r\n      // state.next_index = opts.table_index;\r\n      state.lenbits = opts.bits;\r\n      // state.lencode = state.next;\r\n\r\n      if (ret) {\r\n        strm.msg = 'invalid literal/lengths set';\r\n        state.mode = BAD;\r\n        break;\r\n      }\r\n\r\n      state.distbits = 6;\r\n      //state.distcode.copy(state.codes);\r\n      // Switch to use dynamic table\r\n      state.distcode = state.distdyn;\r\n      opts = { bits: state.distbits };\r\n      ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\r\n      // We have separate tables & no pointers. 2 commented lines below not needed.\r\n      // state.next_index = opts.table_index;\r\n      state.distbits = opts.bits;\r\n      // state.distcode = state.next;\r\n\r\n      if (ret) {\r\n        strm.msg = 'invalid distances set';\r\n        state.mode = BAD;\r\n        break;\r\n      }\r\n      //Tracev((stderr, 'inflate:       codes ok\\n'));\r\n      state.mode = LEN_;\r\n      if (flush === Z_TREES) { break inf_leave; }\r\n      /* falls through */\r\n    case LEN_:\r\n      state.mode = LEN;\r\n      /* falls through */\r\n    case LEN:\r\n      if (have >= 6 && left >= 258) {\r\n        //--- RESTORE() ---\r\n        strm.next_out = put;\r\n        strm.avail_out = left;\r\n        strm.next_in = next;\r\n        strm.avail_in = have;\r\n        state.hold = hold;\r\n        state.bits = bits;\r\n        //---\r\n        inflate_fast(strm, _out);\r\n        //--- LOAD() ---\r\n        put = strm.next_out;\r\n        output = strm.output;\r\n        left = strm.avail_out;\r\n        next = strm.next_in;\r\n        input = strm.input;\r\n        have = strm.avail_in;\r\n        hold = state.hold;\r\n        bits = state.bits;\r\n        //---\r\n\r\n        if (state.mode === TYPE) {\r\n          state.back = -1;\r\n        }\r\n        break;\r\n      }\r\n      state.back = 0;\r\n      for (;;) {\r\n        here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\r\n        here_bits = here >>> 24;\r\n        here_op = (here >>> 16) & 0xff;\r\n        here_val = here & 0xffff;\r\n\r\n        if (here_bits <= bits) { break; }\r\n        //--- PULLBYTE() ---//\r\n        if (have === 0) { break inf_leave; }\r\n        have--;\r\n        hold += input[next++] << bits;\r\n        bits += 8;\r\n        //---//\r\n      }\r\n      if (here_op && (here_op & 0xf0) === 0) {\r\n        last_bits = here_bits;\r\n        last_op = here_op;\r\n        last_val = here_val;\r\n        for (;;) {\r\n          here = state.lencode[last_val +\r\n                  ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\r\n          here_bits = here >>> 24;\r\n          here_op = (here >>> 16) & 0xff;\r\n          here_val = here & 0xffff;\r\n\r\n          if ((last_bits + here_bits) <= bits) { break; }\r\n          //--- PULLBYTE() ---//\r\n          if (have === 0) { break inf_leave; }\r\n          have--;\r\n          hold += input[next++] << bits;\r\n          bits += 8;\r\n          //---//\r\n        }\r\n        //--- DROPBITS(last.bits) ---//\r\n        hold >>>= last_bits;\r\n        bits -= last_bits;\r\n        //---//\r\n        state.back += last_bits;\r\n      }\r\n      //--- DROPBITS(here.bits) ---//\r\n      hold >>>= here_bits;\r\n      bits -= here_bits;\r\n      //---//\r\n      state.back += here_bits;\r\n      state.length = here_val;\r\n      if (here_op === 0) {\r\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\r\n        //        \"inflate:         literal '%c'\\n\" :\r\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\r\n        state.mode = LIT;\r\n        break;\r\n      }\r\n      if (here_op & 32) {\r\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\r\n        state.back = -1;\r\n        state.mode = TYPE;\r\n        break;\r\n      }\r\n      if (here_op & 64) {\r\n        strm.msg = 'invalid literal/length code';\r\n        state.mode = BAD;\r\n        break;\r\n      }\r\n      state.extra = here_op & 15;\r\n      state.mode = LENEXT;\r\n      /* falls through */\r\n    case LENEXT:\r\n      if (state.extra) {\r\n        //=== NEEDBITS(state.extra);\r\n        n = state.extra;\r\n        while (bits < n) {\r\n          if (have === 0) { break inf_leave; }\r\n          have--;\r\n          hold += input[next++] << bits;\r\n          bits += 8;\r\n        }\r\n        //===//\r\n        state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\r\n        //--- DROPBITS(state.extra) ---//\r\n        hold >>>= state.extra;\r\n        bits -= state.extra;\r\n        //---//\r\n        state.back += state.extra;\r\n      }\r\n      //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\r\n      state.was = state.length;\r\n      state.mode = DIST;\r\n      /* falls through */\r\n    case DIST:\r\n      for (;;) {\r\n        here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\r\n        here_bits = here >>> 24;\r\n        here_op = (here >>> 16) & 0xff;\r\n        here_val = here & 0xffff;\r\n\r\n        if ((here_bits) <= bits) { break; }\r\n        //--- PULLBYTE() ---//\r\n        if (have === 0) { break inf_leave; }\r\n        have--;\r\n        hold += input[next++] << bits;\r\n        bits += 8;\r\n        //---//\r\n      }\r\n      if ((here_op & 0xf0) === 0) {\r\n        last_bits = here_bits;\r\n        last_op = here_op;\r\n        last_val = here_val;\r\n        for (;;) {\r\n          here = state.distcode[last_val +\r\n                  ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\r\n          here_bits = here >>> 24;\r\n          here_op = (here >>> 16) & 0xff;\r\n          here_val = here & 0xffff;\r\n\r\n          if ((last_bits + here_bits) <= bits) { break; }\r\n          //--- PULLBYTE() ---//\r\n          if (have === 0) { break inf_leave; }\r\n          have--;\r\n          hold += input[next++] << bits;\r\n          bits += 8;\r\n          //---//\r\n        }\r\n        //--- DROPBITS(last.bits) ---//\r\n        hold >>>= last_bits;\r\n        bits -= last_bits;\r\n        //---//\r\n        state.back += last_bits;\r\n      }\r\n      //--- DROPBITS(here.bits) ---//\r\n      hold >>>= here_bits;\r\n      bits -= here_bits;\r\n      //---//\r\n      state.back += here_bits;\r\n      if (here_op & 64) {\r\n        strm.msg = 'invalid distance code';\r\n        state.mode = BAD;\r\n        break;\r\n      }\r\n      state.offset = here_val;\r\n      state.extra = (here_op) & 15;\r\n      state.mode = DISTEXT;\r\n      /* falls through */\r\n    case DISTEXT:\r\n      if (state.extra) {\r\n        //=== NEEDBITS(state.extra);\r\n        n = state.extra;\r\n        while (bits < n) {\r\n          if (have === 0) { break inf_leave; }\r\n          have--;\r\n          hold += input[next++] << bits;\r\n          bits += 8;\r\n        }\r\n        //===//\r\n        state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\r\n        //--- DROPBITS(state.extra) ---//\r\n        hold >>>= state.extra;\r\n        bits -= state.extra;\r\n        //---//\r\n        state.back += state.extra;\r\n      }\r\n//#ifdef INFLATE_STRICT\r\n      if (state.offset > state.dmax) {\r\n        strm.msg = 'invalid distance too far back';\r\n        state.mode = BAD;\r\n        break;\r\n      }\r\n//#endif\r\n      //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\r\n      state.mode = MATCH;\r\n      /* falls through */\r\n    case MATCH:\r\n      if (left === 0) { break inf_leave; }\r\n      copy = _out - left;\r\n      if (state.offset > copy) {         /* copy from window */\r\n        copy = state.offset - copy;\r\n        if (copy > state.whave) {\r\n          if (state.sane) {\r\n            strm.msg = 'invalid distance too far back';\r\n            state.mode = BAD;\r\n            break;\r\n          }\r\n// (!) This block is disabled in zlib defailts,\r\n// don't enable it for binary compatibility\r\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\r\n//          Trace((stderr, \"inflate.c too far\\n\"));\r\n//          copy -= state.whave;\r\n//          if (copy > state.length) { copy = state.length; }\r\n//          if (copy > left) { copy = left; }\r\n//          left -= copy;\r\n//          state.length -= copy;\r\n//          do {\r\n//            output[put++] = 0;\r\n//          } while (--copy);\r\n//          if (state.length === 0) { state.mode = LEN; }\r\n//          break;\r\n//#endif\r\n        }\r\n        if (copy > state.wnext) {\r\n          copy -= state.wnext;\r\n          from = state.wsize - copy;\r\n        }\r\n        else {\r\n          from = state.wnext - copy;\r\n        }\r\n        if (copy > state.length) { copy = state.length; }\r\n        from_source = state.window;\r\n      }\r\n      else {                              /* copy from output */\r\n        from_source = output;\r\n        from = put - state.offset;\r\n        copy = state.length;\r\n      }\r\n      if (copy > left) { copy = left; }\r\n      left -= copy;\r\n      state.length -= copy;\r\n      do {\r\n        output[put++] = from_source[from++];\r\n      } while (--copy);\r\n      if (state.length === 0) { state.mode = LEN; }\r\n      break;\r\n    case LIT:\r\n      if (left === 0) { break inf_leave; }\r\n      output[put++] = state.length;\r\n      left--;\r\n      state.mode = LEN;\r\n      break;\r\n    case CHECK:\r\n      if (state.wrap) {\r\n        //=== NEEDBITS(32);\r\n        while (bits < 32) {\r\n          if (have === 0) { break inf_leave; }\r\n          have--;\r\n          // Use '|' insdead of '+' to make sure that result is signed\r\n          hold |= input[next++] << bits;\r\n          bits += 8;\r\n        }\r\n        //===//\r\n        _out -= left;\r\n        strm.total_out += _out;\r\n        state.total += _out;\r\n        if (_out) {\r\n          strm.adler = state.check =\r\n              /*UPDATE(state.check, put - _out, _out);*/\r\n              (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\r\n\r\n        }\r\n        _out = left;\r\n        // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\r\n        if ((state.flags ? hold : zswap32(hold)) !== state.check) {\r\n          strm.msg = 'incorrect data check';\r\n          state.mode = BAD;\r\n          break;\r\n        }\r\n        //=== INITBITS();\r\n        hold = 0;\r\n        bits = 0;\r\n        //===//\r\n        //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\r\n      }\r\n      state.mode = LENGTH;\r\n      /* falls through */\r\n    case LENGTH:\r\n      if (state.wrap && state.flags) {\r\n        //=== NEEDBITS(32);\r\n        while (bits < 32) {\r\n          if (have === 0) { break inf_leave; }\r\n          have--;\r\n          hold += input[next++] << bits;\r\n          bits += 8;\r\n        }\r\n        //===//\r\n        if (hold !== (state.total & 0xffffffff)) {\r\n          strm.msg = 'incorrect length check';\r\n          state.mode = BAD;\r\n          break;\r\n        }\r\n        //=== INITBITS();\r\n        hold = 0;\r\n        bits = 0;\r\n        //===//\r\n        //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\r\n      }\r\n      state.mode = DONE;\r\n      /* falls through */\r\n    case DONE:\r\n      ret = Z_STREAM_END;\r\n      break inf_leave;\r\n    case BAD:\r\n      ret = Z_DATA_ERROR;\r\n      break inf_leave;\r\n    case MEM:\r\n      return Z_MEM_ERROR;\r\n    case SYNC:\r\n      /* falls through */\r\n    default:\r\n      return Z_STREAM_ERROR;\r\n    }\r\n  }\r\n\r\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\r\n\r\n  /*\r\n     Return from inflate(), updating the total counts and the check value.\r\n     If there was no progress during the inflate() call, return a buffer\r\n     error.  Call updatewindow() to create and/or update the window state.\r\n     Note: a memory error from inflate() is non-recoverable.\r\n   */\r\n\r\n  //--- RESTORE() ---\r\n  strm.next_out = put;\r\n  strm.avail_out = left;\r\n  strm.next_in = next;\r\n  strm.avail_in = have;\r\n  state.hold = hold;\r\n  state.bits = bits;\r\n  //---\r\n\r\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\r\n                      (state.mode < CHECK || flush !== Z_FINISH))) {\r\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\r\n      state.mode = MEM;\r\n      return Z_MEM_ERROR;\r\n    }\r\n  }\r\n  _in -= strm.avail_in;\r\n  _out -= strm.avail_out;\r\n  strm.total_in += _in;\r\n  strm.total_out += _out;\r\n  state.total += _out;\r\n  if (state.wrap && _out) {\r\n    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\r\n      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\r\n  }\r\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\r\n                    (state.mode === TYPE ? 128 : 0) +\r\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\r\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\r\n    ret = Z_BUF_ERROR;\r\n  }\r\n  return ret;\r\n}\r\n\r\nfunction inflateEnd(strm) {\r\n\r\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\r\n    return Z_STREAM_ERROR;\r\n  }\r\n\r\n  var state = strm.state;\r\n  if (state.window) {\r\n    state.window = null;\r\n  }\r\n  strm.state = null;\r\n  return Z_OK;\r\n}\r\n\r\nfunction inflateGetHeader(strm, head) {\r\n  var state;\r\n\r\n  /* check state */\r\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\r\n  state = strm.state;\r\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\r\n\r\n  /* save header structure */\r\n  state.head = head;\r\n  head.done = false;\r\n  return Z_OK;\r\n}\r\n\r\nfunction inflateSetDictionary(strm, dictionary) {\r\n  var dictLength = dictionary.length;\r\n\r\n  var state;\r\n  var dictid;\r\n  var ret;\r\n\r\n  /* check state */\r\n  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR; }\r\n  state = strm.state;\r\n\r\n  if (state.wrap !== 0 && state.mode !== DICT) {\r\n    return Z_STREAM_ERROR;\r\n  }\r\n\r\n  /* check for correct dictionary identifier */\r\n  if (state.mode === DICT) {\r\n    dictid = 1; /* adler32(0, null, 0)*/\r\n    /* dictid = adler32(dictid, dictionary, dictLength); */\r\n    dictid = adler32(dictid, dictionary, dictLength, 0);\r\n    if (dictid !== state.check) {\r\n      return Z_DATA_ERROR;\r\n    }\r\n  }\r\n  /* copy dictionary to window using updatewindow(), which will amend the\r\n   existing dictionary if appropriate */\r\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\r\n  if (ret) {\r\n    state.mode = MEM;\r\n    return Z_MEM_ERROR;\r\n  }\r\n  state.havedict = 1;\r\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\r\n  return Z_OK;\r\n}\r\n\r\n// String encode/decode helpers\r\n// 'use strict';\r\n\r\n\r\n// var utils = require('./common');\r\n\r\n\r\n// Quick check if we can use fast array to bin string conversion\r\n//\r\n// - apply(Array) can fail on Android 2.2\r\n// - apply(Uint8Array) can fail on iOS 5.1 Safary\r\n//\r\nvar STR_APPLY_OK = true;\r\nvar STR_APPLY_UIA_OK = true;\r\n\r\ntry { String.fromCharCode.apply(null, [ 0 ]); } catch (__) { STR_APPLY_OK = false; }\r\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\r\n\r\n\r\n// Table with utf8 lengths (calculated by first byte of sequence)\r\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\r\n// because max possible codepoint is 0x10ffff\r\nvar _utf8len = new Uint8Array(256);\r\nfor (var q = 0; q < 256; q++) {\r\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\r\n}\r\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\r\n\r\n\r\n// convert string to array (typed, when possible)\r\nfunction string2buf(str) {\r\n  var buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\r\n\r\n  // count binary size\r\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\r\n    c = str.charCodeAt(m_pos);\r\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\r\n      c2 = str.charCodeAt(m_pos + 1);\r\n      if ((c2 & 0xfc00) === 0xdc00) {\r\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\r\n        m_pos++;\r\n      }\r\n    }\r\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\r\n  }\r\n\r\n  // allocate buffer\r\n  buf = new Uint8Array(buf_len);\r\n\r\n  // convert\r\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\r\n    c = str.charCodeAt(m_pos);\r\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\r\n      c2 = str.charCodeAt(m_pos + 1);\r\n      if ((c2 & 0xfc00) === 0xdc00) {\r\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\r\n        m_pos++;\r\n      }\r\n    }\r\n    if (c < 0x80) {\r\n      /* one byte */\r\n      buf[i++] = c;\r\n    } else if (c < 0x800) {\r\n      /* two bytes */\r\n      buf[i++] = 0xC0 | (c >>> 6);\r\n      buf[i++] = 0x80 | (c & 0x3f);\r\n    } else if (c < 0x10000) {\r\n      /* three bytes */\r\n      buf[i++] = 0xE0 | (c >>> 12);\r\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\r\n      buf[i++] = 0x80 | (c & 0x3f);\r\n    } else {\r\n      /* four bytes */\r\n      buf[i++] = 0xf0 | (c >>> 18);\r\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\r\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\r\n      buf[i++] = 0x80 | (c & 0x3f);\r\n    }\r\n  }\r\n\r\n  return buf;\r\n}\r\n\r\n// Helper (used in 2 places)\r\nfunction _buf2binstring(buf, len) {\r\n  // use fallback for big arrays to avoid stack overflow\r\n  if (len < 65537) {\r\n    if ((buf.subarray && STR_APPLY_UIA_OK) || (!buf.subarray && STR_APPLY_OK)) {\r\n      return String.fromCharCode.apply(null, shrinkBuf(buf, len));\r\n    }\r\n  }\r\n\r\n  var result = '';\r\n  for (var i = 0; i < len; i++) {\r\n    result += String.fromCharCode(buf[i]);\r\n  }\r\n  return result;\r\n}\r\n\r\n\r\n// Convert binary string (typed, when possible)\r\nfunction binstring2buf(str) {\r\n  var buf = new Uint8Array(str.length);\r\n  for (var i = 0, len = buf.length; i < len; i++) {\r\n    buf[i] = str.charCodeAt(i);\r\n  }\r\n  return buf;\r\n}\r\n\r\n\r\n// convert array to string\r\nfunction buf2string(buf, max) {\r\n  var i, out, c, c_len;\r\n  var len = max || buf.length;\r\n\r\n  // Reserve max possible length (2 words per char)\r\n  // NB: by unknown reasons, Array is significantly faster for\r\n  //     String.fromCharCode.apply than Uint16Array.\r\n  var utf16buf = new Array(len * 2);\r\n\r\n  for (out = 0, i = 0; i < len;) {\r\n    c = buf[i++];\r\n    // quick process ascii\r\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\r\n\r\n    c_len = _utf8len[c];\r\n    // skip 5 & 6 byte codes\r\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\r\n\r\n    // apply mask on first byte\r\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\r\n    // join the rest\r\n    while (c_len > 1 && i < len) {\r\n      c = (c << 6) | (buf[i++] & 0x3f);\r\n      c_len--;\r\n    }\r\n\r\n    // terminated by end of string?\r\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\r\n\r\n    if (c < 0x10000) {\r\n      utf16buf[out++] = c;\r\n    } else {\r\n      c -= 0x10000;\r\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\r\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\r\n    }\r\n  }\r\n\r\n  return _buf2binstring(utf16buf, out);\r\n}\r\n\r\n\r\n// Calculate max possible position in utf8 buffer,\r\n// that will not break sequence. If that's not possible\r\n// - (very small limits) return max size as is.\r\n//\r\n// buf[] - utf8 bytes array\r\n// max   - length limit (mandatory);\r\nfunction utf8border(buf, max) {\r\n  var pos;\r\n\r\n  max = max || buf.length;\r\n  if (max > buf.length) { max = buf.length; }\r\n\r\n  // go back from last position, until start of sequence found\r\n  pos = max - 1;\r\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\r\n\r\n  // Fuckup - very small and broken sequence,\r\n  // return max, because we should return something anyway.\r\n  if (pos < 0) { return max; }\r\n\r\n  // If we came to start of buffer - that means vuffer is too small,\r\n  // return max too.\r\n  if (pos === 0) { return max; }\r\n\r\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\r\n}\r\n\r\n/* Allowed flush values; see deflate() and inflate() below for details */\r\nvar Z_NO_FLUSH        = 0;\r\nvar Z_SYNC_FLUSH      = 2;\r\nvar Z_FINISH$1          = 4;\r\n/* Return codes for the compression/decompression functions. Negative values\r\n  * are errors, positive values are used for special but normal events.\r\n  */\r\nvar Z_OK$1              =  0;\r\nvar Z_STREAM_END$1      =  1;\r\nvar Z_NEED_DICT$1       =  2;\r\n//export var Z_MEM_ERROR     = -4;\r\nvar Z_BUF_ERROR$1       = -5;\r\n\r\n// 'use strict';\r\n\r\nvar messages = {\r\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\r\n  1:      'stream end',          /* Z_STREAM_END      1  */\r\n  0:      '',                    /* Z_OK              0  */\r\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\r\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\r\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\r\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\r\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\r\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\r\n};\r\n\r\n// 'use strict';\r\n\r\n\r\nfunction ZStream() {\r\n  /* next input byte */\r\n  this.input = null; // JS specific, because we have no pointers\r\n  this.next_in = 0;\r\n  /* number of bytes available at input */\r\n  this.avail_in = 0;\r\n  /* total number of input bytes read so far */\r\n  this.total_in = 0;\r\n  /* next output byte should be put there */\r\n  this.output = null; // JS specific, because we have no pointers\r\n  this.next_out = 0;\r\n  /* remaining free space at output */\r\n  this.avail_out = 0;\r\n  /* total number of bytes output so far */\r\n  this.total_out = 0;\r\n  /* last error message, NULL if no error */\r\n  this.msg = ''/*Z_NULL*/;\r\n  /* not visible by applications */\r\n  this.state = null;\r\n  /* best guess about the data type: binary or text */\r\n  this.data_type = 2/*Z_UNKNOWN*/;\r\n  /* adler32 value of the uncompressed data */\r\n  this.adler = 0;\r\n}\r\n\r\n// 'use strict';\r\n\r\n\r\nfunction GZheader() {\r\n  /* true if compressed data believed to be text */\r\n  this.text       = 0;\r\n  /* modification time */\r\n  this.time       = 0;\r\n  /* extra flags (not used when writing a gzip file) */\r\n  this.xflags     = 0;\r\n  /* operating system */\r\n  this.os         = 0;\r\n  /* pointer to extra field or Z_NULL if none */\r\n  this.extra      = null;\r\n  /* extra field length (valid if extra != Z_NULL) */\r\n  this.extra_len  = 0; // Actually, we don't need it in JS,\r\n                       // but leave for few code modifications\r\n\r\n  //\r\n  // Setup limits is not necessary because in js we should not preallocate memory\r\n  // for inflate use constant limit in 65536 bytes\r\n  //\r\n\r\n  /* space at extra (only when reading header) */\r\n  // this.extra_max  = 0;\r\n  /* pointer to zero-terminated file name or Z_NULL */\r\n  this.name       = '';\r\n  /* space at name (only when reading header) */\r\n  // this.name_max   = 0;\r\n  /* pointer to zero-terminated comment or Z_NULL */\r\n  this.comment    = '';\r\n  /* space at comment (only when reading header) */\r\n  // this.comm_max   = 0;\r\n  /* true if there was or will be a header crc */\r\n  this.hcrc       = 0;\r\n  /* true when done reading gzip header (not used when writing a gzip file) */\r\n  this.done       = false;\r\n}\r\n\r\n// 'use strict';\r\n\r\n\r\n// var zlib_inflate = require('./zlib/inflate');\r\n// var utils        = require('./utils/common');\r\n// var strings      = require('./utils/strings');\r\n// var c            = require('./zlib/constants');\r\n// var msg          = require('./zlib/messages');\r\n// var ZStream      = require('./zlib/zstream');\r\n// var GZheader     = require('./zlib/gzheader');\r\n\r\nvar toString = Object.prototype.toString;\r\n\r\n/**\r\n * class Inflate\r\n *\r\n * Generic JS-style wrapper for zlib calls. If you don't need\r\n * streaming behaviour - use more simple functions: [[inflate]]\r\n * and [[inflateRaw]].\r\n **/\r\n\r\n/* internal\r\n * inflate.chunks -> Array\r\n *\r\n * Chunks of output data, if [[Inflate#onData]] not overriden.\r\n **/\r\n\r\n/**\r\n * Inflate.result -> Uint8Array|Array|String\r\n *\r\n * Uncompressed result, generated by default [[Inflate#onData]]\r\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\r\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param) or if you\r\n * push a chunk with explicit flush (call [[Inflate#push]] with\r\n * `Z_SYNC_FLUSH` param).\r\n **/\r\n\r\n/**\r\n * Inflate.err -> Number\r\n *\r\n * Error code after inflate finished. 0 (Z_OK) on success.\r\n * Should be checked if broken data possible.\r\n **/\r\n\r\n/**\r\n * Inflate.msg -> String\r\n *\r\n * Error message, if [[Inflate.err]] != 0\r\n **/\r\n\r\n\r\n/**\r\n * new Inflate(options)\r\n * - options (Object): zlib inflate options.\r\n *\r\n * Creates new inflator instance with specified params. Throws exception\r\n * on bad params. Supported options:\r\n *\r\n * - `windowBits`\r\n * - `dictionary`\r\n *\r\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\r\n * for more information on these.\r\n *\r\n * Additional options, for internal needs:\r\n *\r\n * - `chunkSize` - size of generated data chunks (16K by default)\r\n * - `raw` (Boolean) - do raw inflate\r\n * - `to` (String) - if equal to 'string', then result will be converted\r\n *   from utf8 to utf16 (javascript) string. When string output requested,\r\n *   chunk length can differ from `chunkSize`, depending on content.\r\n *\r\n * By default, when no options set, autodetect deflate/gzip data format via\r\n * wrapper header.\r\n *\r\n * ##### Example:\r\n *\r\n * ```javascript\r\n * var pako = require('pako')\r\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\r\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\r\n *\r\n * var inflate = new pako.Inflate({ level: 3});\r\n *\r\n * inflate.push(chunk1, false);\r\n * inflate.push(chunk2, true);  // true -> last chunk\r\n *\r\n * if (inflate.err) { throw new Error(inflate.err); }\r\n *\r\n * console.log(inflate.result);\r\n * ```\r\n **/\r\nfunction Inflate(options) {\r\n  if (!(this instanceof Inflate)) return new Inflate(options);\r\n\r\n  this.options = assign({\r\n    chunkSize: 16384,\r\n    windowBits: 0,\r\n    to: ''\r\n  }, options || {});\r\n\r\n  var opt = this.options;\r\n\r\n  // Force window size for `raw` data, if not set directly,\r\n  // because we have no header for autodetect.\r\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\r\n    opt.windowBits = -opt.windowBits;\r\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\r\n  }\r\n\r\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\r\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\r\n      !(options && options.windowBits)) {\r\n    opt.windowBits += 32;\r\n  }\r\n\r\n  // Gzip header has no info about windows size, we can do autodetect only\r\n  // for deflate. So, if window size not set, force it to max when gzip possible\r\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\r\n    // bit 3 (16) -> gzipped data\r\n    // bit 4 (32) -> autodetect gzip/deflate\r\n    if ((opt.windowBits & 15) === 0) {\r\n      opt.windowBits |= 15;\r\n    }\r\n  }\r\n\r\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\r\n  this.msg    = '';     // error message\r\n  this.ended  = false;  // used to avoid multiple onEnd() calls\r\n  this.chunks = [];     // chunks of compressed data\r\n\r\n  this.strm   = new ZStream();\r\n  this.strm.avail_out = 0;\r\n\r\n  var status  = inflateInit2(\r\n    this.strm,\r\n    opt.windowBits\r\n  );\r\n\r\n  if (status !== Z_OK$1) {\r\n    throw new Error(messages[status]);\r\n  }\r\n\r\n  this.header = new GZheader();\r\n\r\n  inflateGetHeader(this.strm, this.header);\r\n}\r\n\r\n/**\r\n * Inflate#push(data[, mode]) -> Boolean\r\n * - data (Uint8Array|Array|ArrayBuffer|String): input data\r\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\r\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` meansh Z_FINISH.\r\n *\r\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\r\n * new output chunks. Returns `true` on success. The last data block must have\r\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\r\n * [[Inflate#onEnd]]. For interim explicit flushes (without ending the stream) you\r\n * can use mode Z_SYNC_FLUSH, keeping the decompression context.\r\n *\r\n * On fail call [[Inflate#onEnd]] with error code and return false.\r\n *\r\n * We strongly recommend to use `Uint8Array` on input for best speed (output\r\n * format is detected automatically). Also, don't skip last param and always\r\n * use the same type in your code (boolean or number). That will improve JS speed.\r\n *\r\n * For regular `Array`-s make sure all elements are [0..255].\r\n *\r\n * ##### Example\r\n *\r\n * ```javascript\r\n * push(chunk, false); // push one of data chunks\r\n * ...\r\n * push(chunk, true);  // push last chunk\r\n * ```\r\n **/\r\nInflate.prototype.push = function (data, mode) {\r\n  var strm = this.strm;\r\n  var chunkSize = this.options.chunkSize;\r\n  var dictionary = this.options.dictionary;\r\n  var status, _mode;\r\n  var next_out_utf8, tail, utf8str;\r\n  var dict;\r\n\r\n  // Flag to properly process Z_BUF_ERROR on testing inflate call\r\n  // when we check that all output data was flushed.\r\n  var allowBufError = false;\r\n\r\n  if (this.ended) { return false; }\r\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? Z_FINISH$1 : Z_NO_FLUSH);\r\n\r\n  // Convert data if needed\r\n  if (typeof data === 'string') {\r\n    // Only binary strings can be decompressed on practice\r\n    strm.input = binstring2buf(data);\r\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\r\n    strm.input = new Uint8Array(data);\r\n  } else {\r\n    strm.input = data;\r\n  }\r\n\r\n  strm.next_in = 0;\r\n  strm.avail_in = strm.input.length;\r\n\r\n  do {\r\n    if (strm.avail_out === 0) {\r\n      strm.output = new Uint8Array(chunkSize);\r\n      strm.next_out = 0;\r\n      strm.avail_out = chunkSize;\r\n    }\r\n\r\n    status = inflate(strm, Z_NO_FLUSH);    /* no bad return value */\r\n\r\n    if (status === Z_NEED_DICT$1 && dictionary) {\r\n      // Convert data if needed\r\n      if (typeof dictionary === 'string') {\r\n        dict = string2buf(dictionary);\r\n      } else if (toString.call(dictionary) === '[object ArrayBuffer]') {\r\n        dict = new Uint8Array(dictionary);\r\n      } else {\r\n        dict = dictionary;\r\n      }\r\n\r\n      status = inflateSetDictionary(this.strm, dict);\r\n\r\n    }\r\n\r\n    if (status === Z_BUF_ERROR$1 && allowBufError === true) {\r\n      status = Z_OK$1;\r\n      allowBufError = false;\r\n    }\r\n\r\n    if (status !== Z_STREAM_END$1 && status !== Z_OK$1) {\r\n      this.onEnd(status);\r\n      this.ended = true;\r\n      return false;\r\n    }\r\n\r\n    if (strm.next_out) {\r\n      if (strm.avail_out === 0 || status === Z_STREAM_END$1 || (strm.avail_in === 0 && (_mode === Z_FINISH$1 || _mode === Z_SYNC_FLUSH))) {\r\n\r\n        if (this.options.to === 'string') {\r\n\r\n          next_out_utf8 = utf8border(strm.output, strm.next_out);\r\n\r\n          tail = strm.next_out - next_out_utf8;\r\n          utf8str = buf2string(strm.output, next_out_utf8);\r\n\r\n          // move tail\r\n          strm.next_out = tail;\r\n          strm.avail_out = chunkSize - tail;\r\n          if (tail) { arraySet(strm.output, strm.output, next_out_utf8, tail, 0); }\r\n\r\n          this.onData(utf8str);\r\n\r\n        } else {\r\n          this.onData(shrinkBuf(strm.output, strm.next_out));\r\n        }\r\n      }\r\n    }\r\n\r\n    // When no more input data, we should check that internal inflate buffers\r\n    // are flushed. The only way to do it when avail_out = 0 - run one more\r\n    // inflate pass. But if output data not exists, inflate return Z_BUF_ERROR.\r\n    // Here we set flag to process this error properly.\r\n    //\r\n    // NOTE. Deflate does not return error in this case and does not needs such\r\n    // logic.\r\n    if (strm.avail_in === 0 && strm.avail_out === 0) {\r\n      allowBufError = true;\r\n    }\r\n\r\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== Z_STREAM_END$1);\r\n\r\n  if (status === Z_STREAM_END$1) {\r\n    _mode = Z_FINISH$1;\r\n  }\r\n\r\n  // Finalize on the last chunk.\r\n  if (_mode === Z_FINISH$1) {\r\n    status = inflateEnd(this.strm);\r\n    this.onEnd(status);\r\n    this.ended = true;\r\n    return status === Z_OK$1;\r\n  }\r\n\r\n  // callback interim results if Z_SYNC_FLUSH.\r\n  if (_mode === Z_SYNC_FLUSH) {\r\n    this.onEnd(Z_OK$1);\r\n    strm.avail_out = 0;\r\n    return true;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\n\r\n/**\r\n * Inflate#onData(chunk) -> Void\r\n * - chunk (Uint8Array|Array|String): ouput data. Type of array depends\r\n *   on js engine support. When string output requested, each chunk\r\n *   will be string.\r\n *\r\n * By default, stores data blocks in `chunks[]` property and glue\r\n * those in `onEnd`. Override this handler, if you need another behaviour.\r\n **/\r\nInflate.prototype.onData = function (chunk) {\r\n  this.chunks.push(chunk);\r\n};\r\n\r\n\r\n/**\r\n * Inflate#onEnd(status) -> Void\r\n * - status (Number): inflate status. 0 (Z_OK) on success,\r\n *   other if not.\r\n *\r\n * Called either after you tell inflate that the input stream is\r\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\r\n * or if an error happened. By default - join collected chunks,\r\n * free memory and fill `results` / `err` properties.\r\n **/\r\nInflate.prototype.onEnd = function (status) {\r\n  // On success - join\r\n  if (status === Z_OK$1) {\r\n    if (this.options.to === 'string') {\r\n      // Glue & convert here, until we teach pako to send\r\n      // utf8 alligned strings to onData\r\n      this.result = this.chunks.join('');\r\n    } else {\r\n      this.result = flattenChunks(this.chunks);\r\n    }\r\n  }\r\n  this.chunks = [];\r\n  this.err = status;\r\n  this.msg = this.strm.msg;\r\n};\r\n\r\n\r\n/**\r\n * inflate(data[, options]) -> Uint8Array|Array|String\r\n * - data (Uint8Array|Array|String): input data to decompress.\r\n * - options (Object): zlib inflate options.\r\n *\r\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\r\n * format via wrapper header by default. That's why we don't provide\r\n * separate `ungzip` method.\r\n *\r\n * Supported options are:\r\n *\r\n * - windowBits\r\n *\r\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\r\n * for more information.\r\n *\r\n * Sugar (options):\r\n *\r\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\r\n *   negative windowBits implicitly.\r\n * - `to` (String) - if equal to 'string', then result will be converted\r\n *   from utf8 to utf16 (javascript) string. When string output requested,\r\n *   chunk length can differ from `chunkSize`, depending on content.\r\n *\r\n *\r\n * ##### Example:\r\n *\r\n * ```javascript\r\n * var pako = require('pako')\r\n *   , input = pako.deflate([1,2,3,4,5,6,7,8,9])\r\n *   , output;\r\n *\r\n * try {\r\n *   output = pako.inflate(input);\r\n * } catch (err)\r\n *   console.log(err);\r\n * }\r\n * ```\r\n **/\r\nfunction doInflate(input, options) {\r\n  var inflator = new Inflate(options);\r\n\r\n  inflator.push(input, true);\r\n\r\n  // That will never happens, if you don't cheat with options :)\r\n  if (inflator.err) { throw inflator.msg; }\r\n\r\n  return inflator.result;\r\n}\r\n\r\nexport { doInflate as ungzip };","/**\r\n * @file Gzip Decompressor\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ungzip } from '../../lib/pako_inflate.es6'\r\n\r\nimport { DecompressorRegistry } from '../globals'\r\n\r\nfunction gzipDecompress (data: ArrayBuffer|Uint8Array) {\r\n  let decompressedData\r\n\r\n  if (data instanceof ArrayBuffer) {\r\n    data = new Uint8Array(data)\r\n  }\r\n\r\n  try {\r\n    decompressedData = ungzip(data as Uint8Array)\r\n  } catch (e) {\r\n    decompressedData = data  // assume it is already uncompressed\r\n  }\r\n\r\n  return decompressedData\r\n}\r\n\r\nDecompressorRegistry.add('gz', gzipDecompress)\r\n","/**\r\n * @file Datasource\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\n/**\r\n * Datasource base class\r\n * @interface\r\n */\r\nabstract class Datasource {\r\n  /**\r\n   * Get full url\r\n   * @abstract\r\n   * @param  {String} path - datasource string\r\n   * @return {String} - url\r\n   */\r\n  abstract getUrl (path: string): string\r\n\r\n  /**\r\n   * Get file extension\r\n   * @abstract\r\n   * @param  {String} path - datasource string\r\n   * @return {String} - extension\r\n   */\r\n  abstract getExt (path: string): string\r\n}\r\n\r\nexport default Datasource\r\n","/**\r\n * @file RCSB Datasource\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Log, DatasourceRegistry } from '../globals'\r\nimport { getProtocol } from '../utils'\r\nimport { getFileInfo } from '../loader/loader-utils'\r\nimport Datasource from './datasource'\r\n\r\nconst baseUrl = '//files.rcsb.org/download/'\r\nconst mmtfBaseUrl = '//mmtf.rcsb.org/v1.0/'\r\nconst mmtfFullUrl = mmtfBaseUrl + 'full/'\r\nconst mmtfReducedUrl = mmtfBaseUrl + 'reduced/'\r\n\r\nclass RcsbDatasource extends Datasource {\r\n  getUrl (src: string) {\r\n    // valid path are\r\n    // XXXX.pdb, XXXX.pdb.gz, XXXX.cif, XXXX.cif.gz, XXXX.mmtf, XXXX.bb.mmtf\r\n    // XXXX defaults to XXXX.cif\r\n    const info = getFileInfo(src)\r\n    const pdbid = info.name.substr(0, 4)\r\n    let url\r\n    if ([ 'pdb', 'cif' ].includes(info.ext) &&\r\n        (info.compressed === false || info.compressed === 'gz')\r\n    ) {\r\n      url = baseUrl + info.path\r\n    } else if (info.ext === 'mmtf') {\r\n      if (info.base.endsWith('.bb')) {\r\n        url = mmtfReducedUrl + pdbid\r\n      } else {\r\n        url = mmtfFullUrl + pdbid\r\n      }\r\n    } else if (!info.ext) {\r\n      url = mmtfFullUrl + pdbid\r\n    } else {\r\n      Log.warn('unsupported ext', info.ext)\r\n      url = mmtfFullUrl + pdbid\r\n    }\r\n    return getProtocol() + url\r\n  }\r\n\r\n  getExt (src: string) {\r\n    const ext = getFileInfo(src).ext\r\n    return ext ? ext : 'mmtf'\r\n  }\r\n}\r\n\r\nDatasourceRegistry.add('rcsb', new RcsbDatasource())\r\n\r\nexport default RcsbDatasource\r\n","/**\r\n * @file PubChem Datasource\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Log, DatasourceRegistry } from '../globals'\r\nimport { getProtocol } from '../utils'\r\nimport { getFileInfo } from '../loader/loader-utils'\r\nimport Datasource from './datasource'\r\n\r\nconst baseUrl = '//pubchem.ncbi.nlm.nih.gov/rest/pug/compound/cid/'\r\nconst suffixUrl = '/SDF?record_type=3d'\r\n\r\nclass PubchemDatasource extends Datasource {\r\n  getUrl (src: string) {\r\n    const info = getFileInfo(src)\r\n    const cid = info.name\r\n    let url\r\n    if (!info.ext || info.ext === 'sdf') {\r\n      url = baseUrl + cid + suffixUrl\r\n    } else {\r\n      Log.warn('unsupported ext', info.ext)\r\n      url = baseUrl + cid + suffixUrl\r\n    }\r\n    return getProtocol() + url\r\n  }\r\n\r\n  getExt (src: string) {\r\n    const ext = getFileInfo(src).ext\r\n    return ext ? ext : 'sdf'\r\n  }\r\n}\r\n\r\nDatasourceRegistry.add('pubchem', new PubchemDatasource())\r\n\r\nexport default PubchemDatasource\r\n","/**\r\n * @file Pass Through Datasource\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { DatasourceRegistry } from '../globals'\r\nimport { getFileInfo } from '../loader/loader-utils'\r\nimport Datasource from './datasource'\r\n\r\nclass PassThroughDatasource extends Datasource {\r\n  getUrl (path: string) {\r\n    return path\r\n  }\r\n\r\n  getExt (path: string) {\r\n    return getFileInfo(path).ext\r\n  }\r\n}\r\n\r\nDatasourceRegistry.add('ftp', new PassThroughDatasource())\r\nDatasourceRegistry.add('http', new PassThroughDatasource())\r\nDatasourceRegistry.add('https', new PassThroughDatasource())\r\n\r\nexport default PassThroughDatasource\r\n","/**\r\n * @file Alphafold Datasource\r\n * @author Fredric Johansson <fredric@fredricj.se>\r\n * @private\r\n */\r\n\r\nimport { Log, DatasourceRegistry } from '../globals'\r\nimport { getProtocol } from '../utils'\r\nimport { getFileInfo } from '../loader/loader-utils'\r\nimport Datasource from './datasource'\r\n\r\nconst baseUrl = '//alphafold.ebi.ac.uk/files/AF-'\r\nconst suffixURL = '-F1-model_v2.pdb'\r\n\r\nclass AlphafoldDatasource extends Datasource {\r\n    getUrl (src: string) {\r\n        const info = getFileInfo(src)\r\n        const uniprotid = info.name\r\n        let url\r\n        if (!info.ext || info.ext === 'pdb') {\r\n            url = baseUrl + uniprotid + suffixURL\r\n        } else {\r\n            Log.warn('unsupported AF ext', info.ext)\r\n            url = baseUrl + uniprotid + suffixURL\r\n        }\r\n        return getProtocol() + url\r\n    }\r\n\r\n    getExt (src: string) {\r\n        const ext = getFileInfo(src).ext\r\n        return ext ? ext : 'pdb'\r\n    }\r\n}\r\n\r\nDatasourceRegistry.add('alphafold', new AlphafoldDatasource())\r\n\r\nexport default AlphafoldDatasource\r\n","/**\r\n * @file Static Datasource\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { getAbsolutePath } from '../utils'\r\nimport { getFileInfo } from '../loader/loader-utils'\r\nimport Datasource from './datasource'\r\n\r\nconst reProtocol = /^((http|https|ftp):)*\\/\\//\r\n\r\nclass StaticDatasource extends Datasource {\r\n  baseUrl: string\r\n\r\n  constructor (baseUrl: string = '') {\r\n    super()\r\n    this.baseUrl = baseUrl\r\n  }\r\n\r\n  getUrl (src: string) {\r\n    const info = getFileInfo(src)\r\n    let url = this.baseUrl + info.path\r\n    if (!reProtocol.test(this.baseUrl)) {\r\n      url = getAbsolutePath(url)\r\n    }\r\n    return url\r\n  }\r\n\r\n  getExt (src: string) {\r\n    return getFileInfo(src).ext\r\n  }\r\n}\r\n\r\nexport default StaticDatasource\r\n","/**\r\n * @file MDsrv Datasource\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { autoLoad, getFileInfo } from '../loader/loader-utils'\r\nimport Datasource from './datasource'\r\n\r\nclass MdsrvDatasource extends Datasource {\r\n  baseUrl: string\r\n\r\n  constructor (baseUrl: string = '') {\r\n    super()\r\n    this.baseUrl = baseUrl\r\n  }\r\n\r\n  getListing (path: string = '') {\r\n    let url = `${this.baseUrl}dir/${path}`\r\n    if (url[url.length - 1] !== '/') url += '/'\r\n    return autoLoad(url, {\r\n      ext: 'json'\r\n    }).then((jsonData: any) => ({\r\n      path: path,\r\n      data: jsonData.data\r\n    }))\r\n  }\r\n\r\n  getUrl (src: string) {\r\n    const info = getFileInfo(src)\r\n    return `${this.baseUrl}file/${info.path}${info.query}`\r\n  }\r\n\r\n  getCountUrl (src: string) {\r\n    const info = getFileInfo(src)\r\n    return `${this.baseUrl}traj/numframes/${info.path}${info.query}`\r\n  }\r\n\r\n  getFrameUrl (src: string, frameIndex: number|string) {\r\n    const info = getFileInfo(src)\r\n    return `${this.baseUrl}traj/frame/${frameIndex}/${info.path}${info.query}`\r\n  }\r\n\r\n  getFrameParams (src: string, atomIndices: (number|string)[]) {\r\n    return `atomIndices=${atomIndices.join(';')}`\r\n  }\r\n\r\n  getPathUrl (src: string, atomIndex: number|string) {\r\n    const info = getFileInfo(src)\r\n    return `${this.baseUrl}traj/path/${atomIndex}/${info.path}${info.query}`\r\n  }\r\n\r\n  getExt (src: string) {\r\n    return getFileInfo(src).ext\r\n  }\r\n}\r\n\r\nexport default MdsrvDatasource\r\n","/**\r\n * @file UI Parameters\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\n\r\nimport { StageParameters } from '../stage/stage'\r\nimport { MouseActionPresets } from '../controls/mouse-actions'\r\n\r\nexport type BooleanParam = { type: 'boolean' }\r\nfunction BooleanParam () { return { type: 'boolean' } as BooleanParam }\r\n\r\nexport type ColorParam = { type: 'color' }\r\nfunction ColorParam () { return { type: 'color' } as ColorParam }\r\n\r\nexport type IntegerParam = { type: 'integer', max: number, min: number }\r\nfunction IntegerParam (max: number, min: number) {\r\n  return { type: 'integer', max, min } as IntegerParam\r\n}\r\n\r\nexport type NumberParam = { type: 'number', precision: number, max: number, min: number }\r\nfunction NumberParam (precision: number, max: number, min: number) {\r\n  return { type: 'number', precision, max, min } as NumberParam\r\n}\r\n\r\nexport type RangeParam = { type: 'range', step: number, max: number, min: number }\r\nfunction RangeParam (step: number, max: number, min: number) {\r\n  return { type: 'range', step, max, min } as RangeParam\r\n}\r\n\r\nexport type SelectParam = { type: 'select', options: { [k: string]: string } }\r\nfunction SelectParam (...options: string[]) {\r\n  return { type: 'select', options: options.reduce((o, k) => ({ ...o, [k]: k}), {}) } as SelectParam\r\n}\r\n\r\nexport type ParamType = BooleanParam|ColorParam|IntegerParam|NumberParam|RangeParam|SelectParam\r\n\r\nexport const UIStageParameters: { [k in keyof StageParameters]: ParamType } = {\r\n  backgroundColor: ColorParam(),\r\n  quality: SelectParam('auto', 'low', 'medium', 'high'),\r\n  sampleLevel: RangeParam(1, 5, -1),\r\n  impostor: BooleanParam(),\r\n  workerDefault: BooleanParam(),\r\n  rotateSpeed: NumberParam(1, 10, 0),\r\n  zoomSpeed: NumberParam(1, 10, 0),\r\n  panSpeed: NumberParam(1, 10, 0),\r\n  clipNear: RangeParam(1, 100, 0),\r\n  clipFar: RangeParam(1, 100, 0),\r\n  clipDist: IntegerParam(200, 0),\r\n  clipMode: SelectParam('scene', 'camera'),\r\n  clipScale: SelectParam('relative', 'absolute'),\r\n  fogNear: RangeParam(1, 100, 0),\r\n  fogFar: RangeParam(1, 100, 0),\r\n  cameraType: SelectParam('perspective', 'orthographic', 'stereo'),\r\n  cameraEyeSep: NumberParam(3, 1.0, 0.01),\r\n  cameraFov: RangeParam(1, 120, 15),\r\n  lightColor: ColorParam(),\r\n  lightIntensity: NumberParam(2, 10, 0),\r\n  ambientColor: ColorParam(),\r\n  ambientIntensity: NumberParam(2, 10, 0),\r\n  hoverTimeout: IntegerParam(10000, -1),\r\n  tooltip: BooleanParam(),\r\n  mousePreset: SelectParam(...Object.keys(MouseActionPresets))\r\n}\r\n","/**\r\n * @file Version\r\n * @private\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\n\r\nimport * as data from '../package.json'\r\n\r\n/**\r\n * Version name\r\n * @type {String}\r\n */\r\nconst Version = (data as any).version as string\r\n\r\nexport default Version\r\n"],"names":["ensureArray","Vector2","Vector3","Matrix4","Quaternion","tmpColor","Color","chroma","Signal","ColormakerRegistry","ParserRegistry","WorkerRegistry","Debug","_WorkerRegistry","_ColormakerRegistry","_ParserRegistry","ListingDatasource","TrajectoryDatasource","sprintf","signalsWrapper","ShaderChunk","matrix","Points","tmpMatrix","Box3","LinearEncoding","PerspectiveCamera","OrthographicCamera","StereoCamera","Scene","Group","Fog","SpotLight","AmbientLight","WebGLRenderer","WebGLRenderTarget","NearestFilter","RGBAFormat","FloatType","UnsignedByteType","LinearFilter","Uniform","ShaderMaterial","AdditiveBlending","Mesh","PlaneGeometry","BufferGeometry","BufferAttribute","LineSegments","sRGBEncoding","tmpRotateMatrix","tmpRotateVector","tmpRotateQuaternion","tmpVec","Worker","invalidAtomContact","Geometry","Matrix3","FrontSide","BackSide","DoubleSide","UniformsUtils","UniformsLib","NoBlending","Kdtree","_Kdtree","getHash","getData","scale","IcosahedronBufferGeometry","mapping","mappingIndices","DataTexture","quadIndices","NormalBlending","Euler","CanvasTexture","eye","target","up","getGeo","CylinderBufferGeometry","getSize","ConeBufferGeometry","BoxBufferGeometry","OctahedronBufferGeometry","TetrahedronBufferGeometry","TorusBufferGeometry","reWhitespace","reTrimQuotes","Face3","ungzip","baseUrl","data.version"],"mappings":"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AK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;IACrD,QAAA,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;IACtD,QAAA,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;IACrD,QAAA,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;IACtD,QAAA,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;IACrD,QAAA,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;IACtD,QAAA,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;IACrD,QAAA,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;IACtD,QAAA,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK;IACrD,QAAA,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;IACtD,QAAA,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK;IACrD,QAAA,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;IACtD,QAAA,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI;IACrD,QAAA,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;IACtD,QAAA,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;IACtD,QAAA,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;IACrD,QAAA,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;IACtD,QAAA,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;IACrD,QAAA,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;IACtD,QAAA,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;IACrD,QAAA,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;IACtD,QAAA,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;IACrD,QAAA,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;IACtD,QAAA,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;IACrD,QAAA,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;IACtD,QAAA,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK;IACrD,QAAA,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;IACtD,QAAA,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK;IACrD,QAAA,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;IACtD,QAAA,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG;IACrD,KAAA,CAAC,CAAA;IACJ,CAAC;IAED,SAAS,WAAW,GAAA;QAClB,OAAO,IAAI,UAAU,CAAC;YACpB,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAC9D,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAC3D,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAC3D,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACxD,QAAA,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAC5D,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACzD,QAAA,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACzD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACvD,QAAA,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAC5D,QAAA,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAC1D,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACzD,QAAA,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACxD,QAAA,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAC3D,QAAA,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACzD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACxD,QAAA,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAC3D,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAC3D,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACxD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACxD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACrD,QAAA,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACzD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACtD,QAAA,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACtD,QAAA,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACnD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACzD,QAAA,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACvD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACtD,QAAA,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACrD,QAAA,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACxD,QAAA,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACtD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACtD,QAAA,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACzD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAC3D,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACxD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACxD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACrD,QAAA,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACzD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACtD,QAAA,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACtD,QAAA,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACnD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACzD,QAAA,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACvD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACtD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACnD,QAAA,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACxD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACrD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACtD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACxD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACxD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACrD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACrD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACxD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACtD,QAAA,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACnD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACnD,QAAA,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACtD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACtD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACnD,QAAA,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACnD,QAAA,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACvD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACrD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,QAAA,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,QAAA,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAC3D,QAAA,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAC5D,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACzD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACzD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACtD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACxD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACrD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACrD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAClD,QAAA,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAC1D,QAAA,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACxD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACvD,QAAA,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACrD,QAAA,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACtD,QAAA,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACrD,QAAA,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACnD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACvD,QAAA,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACzD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACtD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACtD,QAAA,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACnD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACrD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAClD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAClD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC/C,QAAA,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACvD,QAAA,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACpD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACpD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACpD,QAAA,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACpD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAChD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACpD,QAAA,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAC1D,QAAA,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACvD,QAAA,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACvD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACnD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACrD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAClD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACxD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACrD,QAAA,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACxD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACrD,QAAA,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACpD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;IAClD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACnD,QAAA,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACjD,QAAA,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACtD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACzD,QAAA,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACxD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACrD,QAAA,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACpD,QAAA,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACvD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAClD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC/C,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACrD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACxD,QAAA,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACrD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;IAClD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAClD,QAAA,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACrD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAChD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACzD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACpD,QAAA,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAC5D,QAAA,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAC5D,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACzD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACzD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACtD,QAAA,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAC1D,QAAA,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACvD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACvD,QAAA,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACtD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACxD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACrD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACrD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAClD,QAAA,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACvD,QAAA,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACpD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACrD,QAAA,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACxD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACzD,QAAA,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACtD,QAAA,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACtD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACnD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACvD,QAAA,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACrD,QAAA,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACrD,QAAA,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAClD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACrD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACxD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAClD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACrD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACnD,QAAA,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACvD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACjD,QAAA,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAC1D,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACzD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACtD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACtD,QAAA,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACnD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACvD,QAAA,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACpD,QAAA,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACrD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACjD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACrD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAClD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAClD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC/C,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACnD,QAAA,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAChD,QAAA,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACpD,QAAA,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACtD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACvD,QAAA,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACnD,QAAA,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACrD,QAAA,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACtD,QAAA,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACtD,QAAA,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAClD,QAAA,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAClD,QAAA,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACrD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAClD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACrD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC/C,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACxD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAChD,QAAA,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACpD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACzD,QAAA,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAC5D,QAAA,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAC3D,QAAA,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACxD,QAAA,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACxD,QAAA,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACrD,QAAA,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACvD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACnD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACnD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAChD,QAAA,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACtD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACnD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACpD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAChD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACxD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACrD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACrD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACxD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACxD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACtD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACtD,QAAA,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACnD,QAAA,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACpD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACjD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACzD,QAAA,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACnD,QAAA,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACtD,QAAA,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACjD,QAAA,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACnD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACrD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACxD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAClD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAC3D,QAAA,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACzD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACrD,QAAA,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACtD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,QAAA,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACrD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAClD,QAAA,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACvD,QAAA,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACpD,QAAA,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACnD,QAAA,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACjD,QAAA,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACpD,QAAA,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACzD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACrD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAClD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACxD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAC3D,QAAA,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAC3D,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACxD,QAAA,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACzD,QAAA,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAC3D,QAAA,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACxD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACpD,QAAA,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAC1D,QAAA,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAC5D,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACvD,QAAA,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACzD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACpD,QAAA,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAC5D,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACxD,QAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CA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IAAA,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;IACjB,IAAA,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;IACjB,IAAA,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;IACjB,IAAA,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;IACjB,IAAA,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;IAEjB,IAAA,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;IACjB,IAAA,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;IACjB,IAAA,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;IACjB,IAAA,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;IACjB,IAAA,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;IACjB,IAAA,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;IACjB,IAAA,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;IACjB,IAAA,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;IACjB,IAAA,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;IAEjB,IAAA,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAA;IACzC,IAAA,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAA;IACzC,IAAA,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAA;IACzC,IAAA,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAA;IACzC,IAAA,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAA;IACzC,IAAA,E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C,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3E,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACxtvvf,IAAA,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACrF,IAAA,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACrF,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAChF,IAAA,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACrjF,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAClF,IAAA,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACxF,IAAA,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACpF,IAAA,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACvF,IAAA,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACvF,IAAA,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACpF,IAAA,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACtF,IAAA,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACthF,IAAA,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACtxF,IAAA,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACtF,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACnF,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAClF,IAAA,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KAC1F,CAA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;IACd,IAAA,IAAI,EAAE,QAAQ;IACd,IAAA,IAAI,EAAE,QAAQ;IACd,IAAA,IAAI,EAAE,QAAQ;IACd,IAAA,IAAI,EAAE,QAAQ;IACd,IAAA,IAAI,EAAE,QAAQ;IACd,IAAA,IAAI,EAAE,QAAQ;IACd,IAAA,IAAI,EAAE,QAAQ;IACd,IAAA,IAAI,EAAE,QAAQ;IACd,IAAA,IAAI,EAAE,QAAQ;IACd,IAAA,IAAI,EAAE,QAAQ;IACd,IAAA,IAAI,EAAE,QAAQ;IACd,IAAA,IAAI,EAAE,QAAQ;IACd,IAAA,IAAI,EAAE,QAAQ;IACd,IAAA,GAAG,EAAE,QAAQ;IACb,IAAA,IAAI,EAAE,QAAQ;IACd,IAAA,IAAI,EAAE,QAAQ;IACd,IAAA,IAAI,EAAE,QAAQ;IACd,IAAA,IAAI,EAAE,QAAQ;IACd,IAAA,IAAI,EAAE,QAAQ;IACd,IAAA,IAAI,EAAE,QAAQ;IACd,IAAA,IAAI,EAAE,QAAQ;IACd,IAAA,IAAI,EAAE,QAAQ;IACd,IAAA,IAAI,EAAE,QAAQ;IACd,IAAA,IAAI,EAAE,QAAQ;IACd,IAAA,IAAI,EAAE,QAAQ;IACd,IAAA,IAAI,EAAE,QAAQ;IACd,IAAA,IAAI,EAAE,QAAQ;IACd,IAAA,GAAG,EAAE,QAAQ;IACb,IAAA,IAAI,EAAE,QAAQ;IACd,IAAA,IAAI,EAAE,QAAQ;IACd,IAAA,IAAI,EAAE,QAAQ;IACd,IAAA,IAAI,EAAE,QAAQ;IACd,IAAA,IAAI,EAAE,QAAQ;IACd,IAAA,IAAI,EAAE,QAAQ;IACd,IAAA,IAAI,EAAE,QAAQ;IACd,IAAA,IAAI,EAAE,QAAQ;IACd,IAAA,IAAI,EAAE,QAAQ;IACd,IAAA,IAAI,EAAE,QAAQ;IACd,IAAA,IAAI,EAAE,QAAQ;IACd,IAAA,IAAI,EAAE,QAAQ;IACd,IAAA,IAAI,EAAE,QAAQ;IACd,IAAA,IAAI,EAAE,QAAQ;IACd,IAAA,IAAI,EAAE,QAAQ;IACd,IAAA,IAAI,EAAE,QAAQ;IACd,IAAA,IAAI,EAAE,QAAQ;IACd,IAAA,IAAI,EAAE,QAAQ;IACd,IAAA,IAAI,EAAE,QAAQ;IACd,IAAA,IAAI,EAAE,QAAQ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CAAC,CAAE,CAAC,EAAE,IAAI,UAAU,CAAC,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAE,CAAC;YACzD,IAAI,UAAU,CAAC,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC,EAAE,IAAI,UAAU,CAAC,CAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAE,CAAC;YACzD,IAAI,UAAU,CAAC,CAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC,EAAE,IAAI,UAAU,CAAC,CAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAE,CAAC;YAC3D,IAAI,UAAU,CAAC,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC,EAAE,IAAI,UAAU,CAAC,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAE,CAAC;YACzD,IAAI,UAAU,CAAC,CAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC,EAAE,IAAI,UAAU,CAAC,CAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAE,CAAC;YAC3D,IAAI,UAAU,CAAC,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC,EAAE,IAAI,UAAU,CAAC,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAE,CAAC;YACzD,IAAI,UAAU,CAAC,CAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAE,CAAC,EAAE,IAAI,UAAU,CAAC,CAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAE,CAAC;YAC3D,IAAI,UAAU,CAAC,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC,EAAE,IAAI,UAAU,CAAC,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAE,CAAC;YACzD,IAAI,UAAU,CAAC,CAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAE,CAAC,EAAE,IAAI,UAAU,CAAC,CAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC;YAC1D,IAAI,UAAU,CAAC,CAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAE,CAAC,EAAE,IAAI,UAAU,CAAC,CAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAE,CAAC;YAC5D,IAAI,UAAU,CAAC,CAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAE,CAAC,EAAE,IAAI,UAAU,CAAC,CAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAE,CAAC;SAC9D,CAAA;;IAID,IAAA,IAAI,CAAC,SAAS,GAAG,UAAU,IAAY,EAAE,WAAmB,EAAE,WAAmB,EAAE,MAAc,EAAE,SAAkB,EAAA;IACnH,QAAA,OAAO,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAA;IAEpC,QAAA,IAAI,KAAK,GAAG,IAAI,KAAK,KAAK,CAAA;YAE1B,IAAI,CAAC,KAAK,EAAE,WAAW,EAAE,WAAW,EAAE,MAAM,EAAE,SAAS,CAAC,CAAA;YAExD,UAAU,CAAC,KAAK,CAAC,CAAA;IACjB,QAAA,aAAa,EAAE,CAAA;IAEf,QAAA,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,EAAE;IACnC,YAAA,eAAe,EAAE,CAAA;IAClB,SAAA;YAED,IAAI,IAAI,KAAK,KAAK,EAAE;gBAClB,YAAY,CAAC,KAAK,CAAC,CAAA;IACnB,YAAA,eAAe,EAAE,CAAA;IAClB,SAAA;YAED,gBAAgB,CAAC,IAAI,CAAC,CAAA;;IAGtB,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;gBACjD,QAAQ,CAAE,CAAC,CAAE,GAAG,SAAS,CAAE,QAAQ,CAAE,CAAC,CAAE,CAAE,CAAA;IAC3C,SAAA;IAED,QAAA,OAAO,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAA;YAEvC,OAAO;IACL,YAAA,IAAI,EAAE,MAAM;IACZ,YAAA,EAAE,EAAE,OAAO;IACX,YAAA,EAAE,EAAE,MAAM;IACV,YAAA,EAAE,EAAE,OAAO;IACX,YAAA,SAAS,EAAE,QAAQ;aACpB,CAAA;IACH,KAAC,CAAA;IAED,IAAA,IAAI,CAAC,UAAU,GAAG,UAAU,IAAY,EAAE,WAAmB,EAAE,WAAmB,EAAE,MAAc,EAAE,SAAkB,EAAE,MAAc,EAAE,OAAgB,EAAA;IACtJ,QAAA,IAAI,EAAE,GAAG,IAAI,CAAC,SAAS,CACrB,IAAI,EAAE,WAAW,EAAE,WAAW,EAAE,MAAM,EAAE,SAAS,CAClD,CAAA;YAED,IAAI,OAAO,GAAG,IAAK,aAAqB,CACtC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,SAAS,CAC1B,CAAA;IAElB,QAAA,OAAQ,OAAQ,CAAC,UAAkB,CAAC,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,OAAO,CAAC,CAAA;IAC5E,KAAC,CAAA;QAED,SAAS,YAAY,CAAE,KAAc,EAAA;IACnC,QAAA,IAAI,CAAC,CAAA;IACL,QAAA,IAAI,CAAC,CAAA;IACL,QAAA,IAAI,CAAC,CAAA;IACL,QAAA,IAAI,GAAG,CAAA;IACP,QAAA,IAAI,KAAK,CAAA;IACT,QAAA,IAAI,OAAO,CAAA;IACX,QAAA,IAAI,OAAO,CAAA;IACX,QAAA,IAAI,MAAM,CAAA;IACV,QAAA,IAAI,SAAS,CAAA;IACb,QAAA,IAAI,IAAI,CAAA;IAER,QAAA,KAAK,IAAI,IAAI,IAAI,UAAU,EAAE;IAC3B,YAAA,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,CAAA;gBAEpB,IAAI,KAAK,CAAE,IAAI,CAAE;oBAAE,SAAQ;gBAE3B,IAAI,CAAC,KAAK,EAAE;IACV,gBAAA,OAAO,GAAG,CAAC,GAAG,WAAW,GAAG,GAAG,CAAA;IAChC,aAAA;IAAM,iBAAA;oBACL,OAAO,GAAG,CAAC,CAAC,GAAG,WAAW,IAAI,WAAW,GAAG,GAAG,CAAA;IAChD,aAAA;IAED,YAAA,OAAO,GAAG,OAAO,GAAG,OAAO,CAAA;gBAC3B,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;gBAChC,SAAS,GAAG,IAAI,UAAU,CAAC,MAAM,GAAG,MAAM,CAAC,CAAA;gBAC3C,IAAI,GAAG,CAAC,CAAA;gBAER,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,EAAE,CAAC,EAAE;oBAC3B,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,EAAE,CAAC,EAAE;wBAC3B,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;wBAEnB,IAAI,GAAG,GAAG,OAAO,EAAE;IACjB,wBAAA,SAAS,CAAE,IAAI,CAAE,GAAG,CAAC,CAAC,CAAA;IACvB,qBAAA;IAAM,yBAAA;4BACL,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,CAAA;4BAChC,SAAS,CAAE,IAAI,CAAE,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;IACtC,qBAAA;IAED,oBAAA,EAAE,IAAI,CAAA;IACP,iBAAA;IACF,aAAA;IAED,YAAA,KAAK,CAAE,IAAI,CAAE,GAAG,MAAM,CAAA;IACtB,YAAA,KAAK,CAAE,IAAI,CAAE,GAAG,SAAS,CAAA;IAC1B,SAAA;SACF;QAED,SAAS,QAAQ,CAAE,GAAW,EAAA;IAC5B,QAAA,IAAI,EAAE,GAAG,GAAG,GAAG,CAAC,CAAA;YAChB,IAAI,EAAE,GAAG,GAAG,CAAA;IAEZ,QAAA,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAA;IAC3D,QAAA,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,CAAA;YAEd,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,WAAW,IAAI,SAAS,CAAE,EAAE,CAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;YACjE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,WAAW,IAAI,SAAS,CAAE,EAAE,GAAG,CAAC,CAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;YACrE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,WAAW,IAAI,SAAS,CAAE,EAAE,GAAG,CAAC,CAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;IAErE,QAAA,IAAI,EAAE,GAAG,UAAU,CAAE,EAAE,CAAE,CAAA;IACzB,QAAA,IAAI,OAAO,GAAG,KAAK,CAAE,EAAE,CAAE,CAAA;YACzB,IAAI,IAAI,GAAG,CAAC,CAAA;IACZ,QAAA,IAAI,GAAG,GAAG,MAAM,GAAG,OAAO,CAAA;IAC1B,QAAA,IAAI,CAAC,GAAG,KAAK,CAAE,EAAE,CAAE,CAAA;IAEnB,QAAA,IAAI,WAAW,CAAA;YAEf,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;gBACtB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;IACtB,gBAAA,WAAW,GAAG,OAAO,CAAE,IAAI,CAAE,CAAA;IAE7B,gBAAA,IAAI,WAAW,KAAK,CAAC,CAAC,EAAE;wBACtB,KAAK,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;4BAC1B,KAAK,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;gCAC1B,KAAK,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;oCAC1B,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE;IACpC,oCAAA,EAAE,GAAG,EAAE,GAAG,CAAC,CAAA;IACX,oCAAA,EAAE,GAAG,EAAE,GAAG,CAAC,CAAA;wCAEX,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,WAAW,EAAE,EAAE,CAAC,EAAE;IACjC,wCAAA,EAAE,GAAG,CAAC,GAAG,EAAE,CAAA;IACX,wCAAA,EAAE,GAAG,EAAE,GAAG,EAAE,CAAA;IACZ,wCAAA,EAAE,GAAG,EAAE,GAAG,EAAE,CAAA;IACZ,wCAAA,EAAE,GAAG,EAAE,GAAG,EAAE,CAAA;4CAEZ,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC;gDAC5B,EAAE,IAAI,OAAO,IAAI,EAAE,IAAI,MAAM,IAAI,EAAE,IAAI,OAAO,EAC9C;gDACA,SAAQ;IACT,yCAAA;4CAED,IAAI,KAAK,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,OAAO,GAAG,EAAE,CAAA;4CAExC,IAAI,CAAC,SAAS,EAAE;IACd,4CAAA,MAAM,CAAE,KAAK,CAAE,IAAI,KAAK,CAAA;IACzB,yCAAA;IAAM,6CAAA;gDACL,IAAI,EAAE,MAAM,CAAE,KAAK,CAAE,GAAG,KAAK,CAAC,EAAE;IAC9B,gDAAA,MAAM,CAAE,KAAK,CAAE,IAAI,KAAK,CAAA;IACxB,gDAAA,QAAQ,CAAE,KAAK,CAAE,GAAG,GAAG,CAAA;IACxB,6CAAA;IAAM,iDAAA,IAAI,MAAM,CAAE,KAAK,CAAE,GAAG,KAAK,EAAE;IAClC,gDAAA,IAAI,GAAG,GAAG,QAAQ,CAAE,KAAK,CAAE,CAAA;oDAE3B,IAAI,GAAG,KAAK,EAAE,EAAE;wDACd,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,WAAW,IAAI,SAAS,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;wDAC1E,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,WAAW,IAAI,SAAS,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;wDAC9E,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,WAAW,IAAI,SAAS,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;wDAE9E,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;IAC7D,wDAAA,QAAQ,CAAE,KAAK,CAAE,GAAG,GAAG,CAAA;IACxB,qDAAA;IACF,iDAAA;IACF,6CAAA;IACF,yCAAA;IACF,qCAAA;IACF,iCAAA;IACF,6BAAA;IACF,yBAAA;IACF,qBAAA;IACF,iBAAA;IAED,gBAAA,IAAI,EAAE,CAAA;IACP,aAAA;IACF,SAAA;SACF;QAED,SAAS,UAAU,CAAE,KAAc,EAAA;IACjC,QAAA,OAAO,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAA;YAErC,IAAI,CAAC,EAAE,EAAE,CAAA;IAET,QAAA,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;IAC3C,YAAA,MAAM,CAAE,CAAC,CAAE,GAAG,CAAC,CAAA;IACf,YAAA,IAAI,KAAK;IAAE,gBAAA,UAAU,CAAE,CAAC,CAAE,GAAG,CAAC,GAAG,CAAA;IACjC,YAAA,IAAI,SAAS;IAAE,gBAAA,QAAQ,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC,CAAA;IAClC,SAAA;IAED,QAAA,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;gBAClD,QAAQ,CAAC,CAAC,CAAC,CAAA;IACZ,SAAA;IAED,QAAA,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;IAC3C,YAAA,IAAI,MAAM,CAAE,CAAC,CAAE,GAAG,KAAK,EAAE;IACvB,gBAAA,MAAM,CAAE,CAAC,CAAE,IAAI,MAAM,CAAA;IACtB,aAAA;IACF,SAAA;IAED,QAAA,OAAO,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAA;SACzC;QAED,SAAS,aAAa,CAAE,GAAW,EAAA;IACjC,QAAA,IAAI,EAAE,GAAG,GAAG,GAAG,CAAC,CAAA;YAChB,IAAI,EAAE,GAAG,GAAG,CAAA;IAEZ,QAAA,IAAI,EAAE,CAAA;IACN,QAAA,IAAI,EAAE,CAAA;IACN,QAAA,IAAI,EAAE,CAAA;IACN,QAAA,IAAI,EAAE,CAAA;IACN,QAAA,IAAI,EAAE,CAAA;IACN,QAAA,IAAI,EAAE,CAAA;YACN,IAAI,IAAI,GAAG,CAAC,CAAA;IAEZ,QAAA,IAAI,EAAE,CAAA;IACN,QAAA,IAAI,EAAE,CAAA;IACN,QAAA,IAAI,EAAE,CAAA;IACN,QAAA,IAAI,EAAE,CAAA;IACN,QAAA,IAAI,EAAE,CAAA;IACN,QAAA,IAAI,EAAE,CAAA;IACN,QAAA,IAAI,CAAC,CAAA;IACL,QAAA,IAAI,CAAC,CAAA;IACL,QAAA,IAAI,CAAC,CAAA;IACL,QAAA,IAAI,EAAE,CAAA;IACN,QAAA,IAAI,EAAE,CAAA;IACN,QAAA,IAAI,EAAE,CAAA;IACN,QAAA,IAAI,CAAC,CAAA;YAEL,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,WAAW,IAAI,SAAS,CAAE,EAAE,CAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;YACjE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,WAAW,IAAI,SAAS,CAAE,EAAE,GAAG,CAAC,CAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;YACrE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,WAAW,IAAI,SAAS,CAAE,EAAE,GAAG,CAAC,CAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;IAErE,QAAA,IAAI,EAAE,GAAG,UAAU,CAAE,EAAE,CAAE,CAAA;IACzB,QAAA,IAAI,GAAG,GAAG,MAAM,GAAG,OAAO,CAAA;IAE1B,QAAA,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;gBACrC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;oBACtB,IAAI,KAAK,CAAE,EAAE,CAAE,CAAE,IAAI,CAAE,KAAK,CAAC,CAAC,EAAE;wBAC9B,KAAK,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;4BAC1B,KAAK,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;gCAC1B,KAAK,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;oCAC1B,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE;IACpC,oCAAA,EAAE,GAAG,EAAE,GAAG,CAAC,CAAA;IACX,oCAAA,EAAE,GAAG,EAAE,GAAG,CAAC,CAAA;IAEX,oCAAA,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,KAAK,CAAE,EAAE,CAAE,CAAE,IAAI,CAAE,EAAE,EAAE,CAAC,EAAE;IACzC,wCAAA,EAAE,GAAG,CAAC,GAAG,EAAE,CAAA;IACX,wCAAA,EAAE,GAAG,EAAE,GAAG,EAAE,CAAA;IACZ,wCAAA,EAAE,GAAG,EAAE,GAAG,EAAE,CAAA;IACZ,wCAAA,EAAE,GAAG,EAAE,GAAG,EAAE,CAAA;4CAEZ,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC;gDAC5B,EAAE,IAAI,OAAO,IAAI,EAAE,IAAI,MAAM,IAAI,EAAE,IAAI,OAAO,EAC9C;gDACA,SAAQ;IACT,yCAAA;4CAED,IAAI,KAAK,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,OAAO,GAAG,EAAE,CAAA;4CAExC,IAAI,EAAE,MAAM,CAAE,KAAK,CAAE,GAAG,MAAM,CAAC,EAAE;IAC/B,4CAAA,MAAM,CAAE,KAAK,CAAE,IAAI,MAAM,CAAA;IACzB,4CAAA,IAAI,SAAS;IAAE,gDAAA,QAAQ,CAAE,KAAK,CAAE,GAAG,GAAG,CAAA;IACvC,yCAAA;IAAM,6CAAA,IAAI,SAAS,EAAE;IACpB,4CAAA,IAAI,GAAG,GAAG,QAAQ,CAAE,KAAK,CAAE,CAAA;gDAE3B,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,WAAW,IAAI,SAAS,CAAE,GAAG,CAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;gDAClE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,WAAW,IAAI,SAAS,CAAE,GAAG,GAAG,CAAC,CAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;gDACtE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,WAAW,IAAI,SAAS,CAAE,GAAG,GAAG,CAAC,CAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;gDAEtE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;IAC7D,gDAAA,QAAQ,CAAE,KAAK,CAAE,GAAG,GAAG,CAAA;IACxB,6CAAA;IACF,yCAAA;IACF,qCAAA;IACF,iCAAA;IACF,6BAAA;IACF,yBAAA;IACF,qBAAA;IACF,iBAAA;IAED,gBAAA,IAAI,EAAE,CAAA;IACP,aAAA;IACF,SAAA;SACF;IAED,IAAA,SAAS,eAAe,GAAA;YACtB,IAAI,CAAC,EAAE,EAAE,CAAA;IAET,QAAA,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;gBAC3C,MAAM,CAAE,CAAC,CAAE,IAAI,CAAC,MAAM,CAAA;IACvB,SAAA;IAED,QAAA,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;gBAClD,aAAa,CAAC,CAAC,CAAC,CAAA;IACjB,SAAA;SACF;IAED,IAAA,SAAS,aAAa,GAAA;IACpB,QAAA,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA;IACX,QAAA,IAAI,GAAG,GAAG,MAAM,GAAG,OAAO,CAAA;YAE1B,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,EAAE,CAAC,EAAE;gBAC5B,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,EAAE,CAAC,EAAE;oBAC5B,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,EAAE,CAAC,EAAE;wBAC3B,IAAI,KAAK,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,OAAO,GAAG,CAAC,CAAA;IAErC,oBAAA,IAAI,MAAM,CAAE,KAAK,CAAE,GAAG,KAAK,EAAE;;4BAE3B,IAAI,EAAE,GAAG,CAAC,CAAA;;4BAGV,OAAO,EAAE,GAAG,EAAE,EAAE;gCACd,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,CAAE,EAAE,CAAE,CAAE,CAAC,CAAE,CAAA;gCAC1B,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,CAAE,EAAE,CAAE,CAAE,CAAC,CAAE,CAAA;gCAC1B,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,CAAE,EAAE,CAAE,CAAE,CAAC,CAAE,CAAA;IAE1B,4BAAA,IAAI,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,OAAO;IACjB,gCAAA,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,MAAM;IACtB,gCAAA,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,OAAO;IACvB,gCAAA,EAAE,MAAM,CAAE,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,OAAO,GAAG,EAAE,CAAE,GAAG,KAAK,CAAC,EACzD;IACA,gCAAA,MAAM,CAAE,KAAK,CAAE,IAAI,OAAO,CAAA;;oCAE1B,MAAK;IACN,6BAAA;IAAM,iCAAA;IACL,gCAAA,EAAE,EAAE,CAAA;IACL,6BAAA;IACF,yBAAA;IACF,qBAAA;IACF,iBAAA;IACF,aAAA;IACF,SAAA;SACF;IAED,IAAA,SAAS,eAAe,GAAA;IACtB,QAAA,OAAO,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAA;IAE1C,QAAA,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA;IAEd,QAAA,IAAI,UAAU,GAAG,QAAQ,CACvB,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,WAAW,EAAE,CAAC,CACzC,CAAA;IACD,QAAA,IAAI,GAAG,GAAG,MAAM,GAAG,OAAO,CAAA;IAC1B,QAAA,IAAI,MAAM,GAAG,SAAS,GAAG,SAAS,CAAA;YAElC,IAAI,eAAe,GAAG,CAAC,CAAA;;IAGvB,QAAA,IAAI,KAAK,CAAA;YAET,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,EAAE,CAAC,EAAE;gBAC5B,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,EAAE,CAAC,EAAE;oBAC3B,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,EAAE,CAAC,EAAE;wBAC5B,KAAK,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,OAAO,GAAG,CAAC,CAAA;IAEjC,oBAAA,MAAM,CAAE,KAAK,CAAE,IAAI,CAAC,MAAM,CAAA;IAE1B,oBAAA,IAAI,MAAM,CAAE,KAAK,CAAE,GAAG,KAAK,EAAE;IAC3B,wBAAA,IAAI,MAAM,CAAE,KAAK,CAAE,GAAG,OAAO,EAAE;IAC7B,4BAAA,UAAU,CAAC,GAAG,CACZ,CAAC,EAAE,CAAC,EAAE,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,CAAC,CACR,CAAA;IAED,4BAAA,UAAU,CAAE,KAAK,CAAE,GAAG,CAAC,CAAA;IACvB,4BAAA,MAAM,CAAE,KAAK,CAAE,IAAI,MAAM,CAAA;gCAEzB,eAAe,IAAI,CAAC,CAAA;6BACrB;;IAEG;IACL,qBAAA;IACF,iBAAA;IACF,aAAA;IACF,SAAA;YAED,IAAI,OAAO,GAAG,IAAI,UAAU,CAAC,CAAC,GAAG,eAAe,CAAC,CAAA;YACjD,IAAI,OAAO,GAAG,CAAC,CAAA;YACf,IAAI,QAAQ,GAAG,IAAI,UAAU,CAAC,CAAC,GAAG,eAAe,CAAC,CAAA;YAClD,IAAI,QAAQ,GAAG,CAAC,CAAA;YAEhB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,EAAE,CAAC,EAAE;gBAC5B,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,EAAE,CAAC,EAAE;oBAC3B,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,EAAE,CAAC,EAAE;wBAC5B,KAAK,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,OAAO,GAAG,CAAC,CAAA;IAEjC,oBAAA,IAAI,MAAM,CAAE,KAAK,CAAE,GAAG,OAAO,EAAE;IAC7B,wBAAA,OAAO,CAAE,OAAO,CAAE,GAAG,CAAC,CAAA;IACtB,wBAAA,OAAO,CAAE,OAAO,GAAG,CAAC,CAAE,GAAG,CAAC,CAAA;IAC1B,wBAAA,OAAO,CAAE,OAAO,GAAG,CAAC,CAAE,GAAG,CAAC,CAAA;4BAC1B,OAAO,IAAI,CAAC,CAAA;IAEZ,wBAAA,MAAM,CAAE,KAAK,CAAE,IAAI,CAAC,OAAO,CAAA;IAC5B,qBAAA;IACF,iBAAA;IACF,aAAA;IACF,SAAA;YAED,GAAG;gBACD,QAAQ,GAAG,YAAY,CAAC,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAA;gBAC/D,OAAO,GAAG,CAAC,CAAA;IAEX,YAAA,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;oBACvC,KAAK,GAAG,GAAG,GAAG,QAAQ,CAAE,CAAC,CAAE,GAAG,OAAO,GAAG,QAAQ,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,QAAQ,CAAE,CAAC,GAAG,CAAC,CAAE,CAAA;IAC7E,gBAAA,MAAM,CAAE,KAAK,CAAE,IAAI,CAAC,OAAO,CAAA;oBAE3B,IAAI,UAAU,CAAE,KAAK,CAAE,IAAI,MAAM,GAAG,MAAM,EAAE;;wBAG1C,OAAO,CAAE,OAAO,CAAE,GAAG,QAAQ,CAAE,CAAC,CAAE,CAAA;IAClC,oBAAA,OAAO,CAAE,OAAO,GAAG,CAAC,CAAE,GAAG,QAAQ,CAAE,CAAC,GAAG,CAAC,CAAE,CAAA;IAC1C,oBAAA,OAAO,CAAE,OAAO,GAAG,CAAC,CAAE,GAAG,QAAQ,CAAE,CAAC,GAAG,CAAC,CAAE,CAAA;wBAC1C,OAAO,IAAI,CAAC,CAAA;IACb,iBAAA;IACF,aAAA;aACF,QAAQ,OAAO,GAAG,CAAC,EAAC;;;IAIrB,QAAA,IAAI,QAAQ,GAAG,MAAM,GAAG,MAAM,CAAA;IAE9B,QAAA,IAAI,MAAM,CAAA;IACV,QAAA,IAAI,EAAE,GAAG,IAAI,WAAW,CAAC,CAAC,CAAC,CAAA;YAE3B,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,EAAE,CAAC,EAAE;gBAC5B,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,EAAE,CAAC,EAAE;oBAC3B,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,EAAE,CAAC,EAAE;wBAC5B,KAAK,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,OAAO,GAAG,CAAC,CAAA;IACjC,oBAAA,MAAM,CAAE,KAAK,CAAE,IAAI,CAAC,OAAO,CAAA;;IAI3B,oBAAA,IAAI,MAAM,CAAE,KAAK,CAAE,GAAG,KAAK,EAAE;4BAC3B,IAAI,EAAE,MAAM,CAAE,KAAK,CAAE,GAAG,MAAM,CAAC;IAC7B,6BAAC,CAAC,MAAM,CAAE,KAAK,CAAE,GAAG,MAAM,KAAK,UAAU,CAAE,KAAK,CAAE,IAAI,QAAQ,CAAC,EAC/D;IACA,4BAAA,MAAM,CAAE,KAAK,CAAE,IAAI,OAAO,CAAA;gCAE1B,IAAI,SAAS,KAAK,MAAM,CAAE,KAAK,CAAE,GAAG,MAAM,CAAC,EAAE;oCAC3C,UAAU,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAA;IAC/B,gCAAA,MAAM,GAAG,EAAE,CAAE,CAAC,CAAE,GAAG,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,GAAG,OAAO,GAAG,EAAE,CAAE,CAAC,CAAE,CAAA;oCAEpD,QAAQ,CAAE,KAAK,CAAE,GAAG,QAAQ,CAAE,MAAM,CAAE,CAAA;IACvC,6BAAA;IACF,yBAAA;IACF,qBAAA;IACF,iBAAA;IACF,aAAA;IACF,SAAA;IAED,QAAA,OAAO,CAAC,OAAO,CAAC,4BAA4B,CAAC,CAAA;SAC9C;QAED,SAAS,YAAY,CAAE,OAAmB,EAAE,UAAiB,EAAE,OAAe,EAAE,QAAoB,EAAA;;;;IAIlG,QAAA,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,CAAA;IACd,QAAA,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,CAAA;IACd,QAAA,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA;IACX,QAAA,IAAI,MAAM,CAAA;IACV,QAAA,IAAI,KAAK,CAAA;IACT,QAAA,IAAI,GAAG,CAAA;IACP,QAAA,IAAI,EAAE,GAAG,IAAI,WAAW,CAAC,CAAC,CAAC,CAAA;YAC3B,IAAI,QAAQ,GAAG,CAAC,CAAA;YAEhB,IAAI,OAAO,KAAK,CAAC,EAAE;IACjB,YAAA,OAAO,QAAQ,CAAA;IAChB,SAAA;IAED,QAAA,IAAI,KAAK,GAAG,CAAC,CAAC,CAAA;IACd,QAAA,IAAI,KAAK,GAAG,CAAC,CAAC,CAAA;IACd,QAAA,IAAI,KAAK,GAAG,CAAC,CAAC,CAAA;IAEd,QAAA,IAAI,GAAG,GAAG,MAAM,GAAG,OAAO,CAAA;IAE1B,QAAA,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;IACtC,YAAA,EAAE,GAAG,OAAO,CAAE,CAAC,CAAE,CAAA;IACjB,YAAA,EAAE,GAAG,OAAO,CAAE,CAAC,GAAG,CAAC,CAAE,CAAA;IACrB,YAAA,EAAE,GAAG,OAAO,CAAE,CAAC,GAAG,CAAC,CAAE,CAAA;gBACrB,UAAU,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAA;gBAElC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;IACtB,gBAAA,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,CAAA;IACb,gBAAA,KAAK,GAAG,EAAE,GAAG,GAAG,CAAE,CAAC,CAAE,CAAA;IACrB,gBAAA,KAAK,GAAG,EAAE,GAAG,GAAG,CAAE,CAAC,CAAE,CAAA;IACrB,gBAAA,KAAK,GAAG,EAAE,GAAG,GAAG,CAAE,CAAC,CAAE,CAAA;IAErB,gBAAA,IAAI,KAAK,GAAG,OAAO,IAAI,KAAK,GAAG,CAAC,CAAC;IAC/B,oBAAA,KAAK,GAAG,MAAM,IAAI,KAAK,GAAG,CAAC,CAAC;IAC5B,oBAAA,KAAK,GAAG,OAAO,IAAI,KAAK,GAAG,CAAC,CAAC,EAC7B;wBACA,KAAK,GAAG,KAAK,GAAG,GAAG,GAAG,OAAO,GAAG,KAAK,GAAG,KAAK,CAAA;IAE7C,oBAAA,IAAI,CAAC,MAAM,CAAE,KAAK,CAAE,GAAG,KAAK,KAAK,EAAE,MAAM,CAAE,KAAK,CAAE,GAAG,MAAM,CAAC,EAAE;4BAC5D,UAAU,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,CAAA;IAC7C,wBAAA,EAAE,GAAG,KAAK,GAAG,EAAE,CAAE,CAAC,CAAE,CAAA;IACpB,wBAAA,EAAE,GAAG,KAAK,GAAG,EAAE,CAAE,CAAC,CAAE,CAAA;IACpB,wBAAA,EAAE,GAAG,KAAK,GAAG,EAAE,CAAE,CAAC,CAAE,CAAA;IACpB,wBAAA,MAAM,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAA;;IAGpC,wBAAA,UAAU,CAAE,KAAK,CAAE,GAAG,MAAM,CAAA;IAC5B,wBAAA,MAAM,CAAE,KAAK,CAAE,IAAI,MAAM,CAAA;IACzB,wBAAA,MAAM,CAAE,KAAK,CAAE,IAAI,OAAO,CAAA;IAE1B,wBAAA,QAAQ,CAAE,QAAQ,CAAE,GAAG,KAAK,CAAA;IAC5B,wBAAA,QAAQ,CAAE,QAAQ,GAAG,CAAC,CAAE,GAAG,KAAK,CAAA;IAChC,wBAAA,QAAQ,CAAE,QAAQ,GAAG,CAAC,CAAE,GAAG,KAAK,CAAA;4BAChC,QAAQ,IAAI,CAAC,CAAA;IACd,qBAAA;IAAM,yBAAA,IAAI,CAAC,MAAM,CAAE,KAAK,CAAE,GAAG,KAAK,MAAM,MAAM,CAAE,KAAK,CAAE,GAAG,MAAM,CAAC,EAAE;IAClE,wBAAA,EAAE,GAAG,KAAK,GAAG,EAAE,CAAE,CAAC,CAAE,CAAA;IACpB,wBAAA,EAAE,GAAG,KAAK,GAAG,EAAE,CAAE,CAAC,CAAE,CAAA;IACpB,wBAAA,EAAE,GAAG,KAAK,GAAG,EAAE,CAAE,CAAC,CAAE,CAAA;IACpB,wBAAA,MAAM,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAA;;IAGpC,wBAAA,IAAI,MAAM,GAAG,UAAU,CAAE,KAAK,CAAE,EAAE;gCAChC,UAAU,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,CAAA;IAC7C,4BAAA,UAAU,CAAE,KAAK,CAAE,GAAG,MAAM,CAAA;gCAE5B,IAAI,EAAE,MAAM,CAAE,KAAK,CAAE,GAAG,OAAO,CAAC,EAAE;IAChC,gCAAA,MAAM,CAAE,KAAK,CAAE,IAAI,OAAO,CAAA;IAE1B,gCAAA,QAAQ,CAAE,QAAQ,CAAE,GAAG,KAAK,CAAA;IAC5B,gCAAA,QAAQ,CAAE,QAAQ,GAAG,CAAC,CAAE,GAAG,KAAK,CAAA;IAChC,gCAAA,QAAQ,CAAE,QAAQ,GAAG,CAAC,CAAE,GAAG,KAAK,CAAA;oCAChC,QAAQ,IAAI,CAAC,CAAA;IACd,6BAAA;IACF,yBAAA;IACF,qBAAA;IACF,iBAAA;IACF,aAAA;IACF,SAAA;IAED,QAAA,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;IACtC,YAAA,EAAE,GAAG,OAAO,CAAE,CAAC,CAAE,CAAA;IACjB,YAAA,EAAE,GAAG,OAAO,CAAE,CAAC,GAAG,CAAC,CAAE,CAAA;IACrB,YAAA,EAAE,GAAG,OAAO,CAAE,CAAC,GAAG,CAAC,CAAE,CAAA;gBACrB,UAAU,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAA;gBAElC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;IACvB,gBAAA,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,CAAA;IACb,gBAAA,KAAK,GAAG,EAAE,GAAG,GAAG,CAAE,CAAC,CAAE,CAAA;IACrB,gBAAA,KAAK,GAAG,EAAE,GAAG,GAAG,CAAE,CAAC,CAAE,CAAA;IACrB,gBAAA,KAAK,GAAG,EAAE,GAAG,GAAG,CAAE,CAAC,CAAE,CAAA;IAErB,gBAAA,IAAI,KAAK,GAAG,OAAO,IAAI,KAAK,GAAG,CAAC,CAAC;IAC/B,oBAAA,KAAK,GAAG,MAAM,IAAI,KAAK,GAAG,CAAC,CAAC;IAC5B,oBAAA,KAAK,GAAG,OAAO,IAAI,KAAK,GAAG,CAAC,CAAC,EAC7B;wBACA,KAAK,GAAG,KAAK,GAAG,GAAG,GAAG,OAAO,GAAG,KAAK,GAAG,KAAK,CAAA;IAE7C,oBAAA,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,EAAE;4BACxD,UAAU,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,CAAA;IAC7C,wBAAA,EAAE,GAAG,KAAK,GAAG,EAAE,CAAE,CAAC,CAAE,CAAA;IACpB,wBAAA,EAAE,GAAG,KAAK,GAAG,EAAE,CAAE,CAAC,CAAE,CAAA;IACpB,wBAAA,EAAE,GAAG,KAAK,GAAG,EAAE,CAAE,CAAC,CAAE,CAAA;IACpB,wBAAA,MAAM,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAA;;IAGpC,wBAAA,UAAU,CAAC,KAAK,CAAC,GAAG,MAAM,CAAA;IAC1B,wBAAA,MAAM,CAAC,KAAK,CAAC,IAAI,MAAM,CAAA;IACvB,wBAAA,MAAM,CAAC,KAAK,CAAC,IAAI,OAAO,CAAA;IAExB,wBAAA,QAAQ,CAAE,QAAQ,CAAE,GAAG,KAAK,CAAA;IAC5B,wBAAA,QAAQ,CAAE,QAAQ,GAAG,CAAC,CAAE,GAAG,KAAK,CAAA;IAChC,wBAAA,QAAQ,CAAE,QAAQ,GAAG,CAAC,CAAE,GAAG,KAAK,CAAA;4BAChC,QAAQ,IAAI,CAAC,CAAA;IACd,qBAAA;IAAM,yBAAA,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,EAAE;IAC9D,wBAAA,EAAE,GAAG,KAAK,GAAG,EAAE,CAAE,CAAC,CAAE,CAAA;IACpB,wBAAA,EAAE,GAAG,KAAK,GAAG,EAAE,CAAE,CAAC,CAAE,CAAA;IACpB,wBAAA,EAAE,GAAG,KAAK,GAAG,EAAE,CAAE,CAAC,CAAE,CAAA;IACpB,wBAAA,MAAM,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAA;;IAGpC,wBAAA,IAAI,MAAM,GAAG,UAAU,CAAC,KAAK,CAAC,EAAE;gCAC9B,UAAU,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,CAAA;IAC7C,4BAAA,UAAU,CAAC,KAAK,CAAC,GAAG,MAAM,CAAA;gCAE1B,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,EAAE;IAC9B,gCAAA,MAAM,CAAC,KAAK,CAAC,IAAI,OAAO,CAAA;IAExB,gCAAA,QAAQ,CAAE,QAAQ,CAAE,GAAG,KAAK,CAAA;IAC5B,gCAAA,QAAQ,CAAE,QAAQ,GAAG,CAAC,CAAE,GAAG,KAAK,CAAA;IAChC,gCAAA,QAAQ,CAAE,QAAQ,GAAG,CAAC,CAAE,GAAG,KAAK,CAAA;oCAChC,QAAQ,IAAI,CAAC,CAAA;IACd,6BAAA;IACF,yBAAA;IACF,qBAAA;IACF,iBAAA;IACF,aAAA;IACF,SAAA;IAED,QAAA,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;IACtC,YAAA,EAAE,GAAG,OAAO,CAAE,CAAC,CAAE,CAAA;IACjB,YAAA,EAAE,GAAG,OAAO,CAAE,CAAC,GAAG,CAAC,CAAE,CAAA;IACrB,YAAA,EAAE,GAAG,OAAO,CAAE,CAAC,GAAG,CAAC,CAAE,CAAA;gBACrB,UAAU,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAA;gBAElC,KAAK,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;IACxB,gBAAA,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,CAAA;IACb,gBAAA,KAAK,GAAG,EAAE,GAAG,GAAG,CAAE,CAAC,CAAE,CAAA;IACrB,gBAAA,KAAK,GAAG,EAAE,GAAG,GAAG,CAAE,CAAC,CAAE,CAAA;IACrB,gBAAA,KAAK,GAAG,EAAE,GAAG,GAAG,CAAE,CAAC,CAAE,CAAA;IAErB,gBAAA,IAAI,KAAK,GAAG,OAAO,IAAI,KAAK,GAAG,CAAC,CAAC;IAC/B,oBAAA,KAAK,GAAG,MAAM,IAAI,KAAK,GAAG,CAAC,CAAC;IAC5B,oBAAA,KAAK,GAAG,OAAO,IAAI,KAAK,GAAG,CAAC,CAAC,EAC7B;wBACA,KAAK,GAAG,KAAK,GAAG,GAAG,GAAG,OAAO,GAAG,KAAK,GAAG,KAAK,CAAA;IAE7C,oBAAA,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,EAAE;4BACxD,UAAU,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,CAAA;IAC7C,wBAAA,EAAE,GAAG,KAAK,GAAG,EAAE,CAAE,CAAC,CAAE,CAAA;IACpB,wBAAA,EAAE,GAAG,KAAK,GAAG,EAAE,CAAE,CAAC,CAAE,CAAA;IACpB,wBAAA,EAAE,GAAG,KAAK,GAAG,EAAE,CAAE,CAAC,CAAE,CAAA;IACpB,wBAAA,MAAM,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAA;;IAGpC,wBAAA,UAAU,CAAC,KAAK,CAAC,GAAG,MAAM,CAAA;IAC1B,wBAAA,MAAM,CAAC,KAAK,CAAC,IAAI,MAAM,CAAA;IACvB,wBAAA,MAAM,CAAC,KAAK,CAAC,IAAI,OAAO,CAAA;IAExB,wBAAA,QAAQ,CAAE,QAAQ,CAAE,GAAG,KAAK,CAAA;IAC5B,wBAAA,QAAQ,CAAE,QAAQ,GAAG,CAAC,CAAE,GAAG,KAAK,CAAA;IAChC,wBAAA,QAAQ,CAAE,QAAQ,GAAG,CAAC,CAAE,GAAG,KAAK,CAAA;4BAChC,QAAQ,IAAI,CAAC,CAAA;IACd,qBAAA;IAAM,yBAAA,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,EAAE;IAC9D,wBAAA,EAAE,GAAG,KAAK,GAAG,EAAE,CAAE,CAAC,CAAE,CAAA;IACpB,wBAAA,EAAE,GAAG,KAAK,GAAG,EAAE,CAAE,CAAC,CAAE,CAAA;IACpB,wBAAA,EAAE,GAAG,KAAK,GAAG,EAAE,CAAE,CAAC,CAAE,CAAA;IACpB,wBAAA,MAAM,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAA;;IAGpC,wBAAA,IAAI,MAAM,GAAG,UAAU,CAAC,KAAK,CAAC,EAAE;gCAC9B,UAAU,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,CAAA;IAC7C,4BAAA,UAAU,CAAC,KAAK,CAAC,GAAG,MAAM,CAAA;gCAE1B,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,EAAE;IAC9B,gCAAA,MAAM,CAAC,KAAK,CAAC,IAAI,OAAO,CAAA;IAExB,gCAAA,QAAQ,CAAE,QAAQ,CAAE,GAAG,KAAK,CAAA;IAC5B,gCAAA,QAAQ,CAAE,QAAQ,GAAG,CAAC,CAAE,GAAG,KAAK,CAAA;IAChC,gCAAA,QAAQ,CAAE,QAAQ,GAAG,CAAC,CAAE,GAAG,KAAK,CAAA;oCAChC,QAAQ,IAAI,CAAC,CAAA;IACd,6BAAA;IACF,yBAAA;IACF,qBAAA;IACF,iBAAA;IACF,aAAA;IACF,SAAA;IAED,QAAA,OAAO,QAAQ,CAAA;SAChB;QAED,SAAS,gBAAgB,CAAE,KAAa,EAAA;IACtC,QAAA,IAAI,CAAC,CAAA;IACL,QAAA,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,CAAA;YAErB,IAAI,KAAK,KAAK,KAAK,EAAE;gBACnB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;IACtB,gBAAA,MAAM,CAAE,CAAC,CAAE,IAAI,CAAC,OAAO,CAAA;oBACvB,MAAM,CAAE,CAAC,CAAE,GAAG,CAAC,MAAM,CAAE,CAAC,CAAE,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,CAAA;IAC7C,aAAA;IACF,SAAA;IAAM,aAAA,IAAI,KAAK,KAAK,IAAI,EAAE;gBACzB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;IACtB,gBAAA,MAAM,CAAE,CAAC,CAAE,IAAI,CAAC,MAAM,CAAA;IACtB,gBAAA,IAAI,MAAM,CAAE,CAAC,CAAE,GAAG,OAAO,EAAE;IACzB,oBAAA,MAAM,CAAE,CAAC,CAAE,IAAI,MAAM,CAAA;IACtB,iBAAA;IACD,gBAAA,MAAM,CAAE,CAAC,CAAE,IAAI,CAAC,OAAO,CAAA;oBACvB,MAAM,CAAE,CAAC,CAAE,GAAG,CAAC,MAAM,CAAE,CAAC,CAAE,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,CAAA;IAC7C,aAAA;IACF,SAAA;iBAAM,IAAI,KAAK,KAAK,KAAK,EAAE;gBAC1B,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;IACtB,gBAAA,IAAI,CAAC,MAAM,CAAE,CAAC,CAAE,GAAG,OAAO,MAAM,MAAM,CAAE,CAAC,CAAE,GAAG,MAAM,CAAC,EAAE;IACrD,oBAAA,MAAM,CAAE,CAAC,CAAE,IAAI,CAAC,OAAO,CAAA;IACxB,iBAAA;IAAM,qBAAA,IAAI,CAAC,MAAM,CAAE,CAAC,CAAE,GAAG,OAAO,KAAK,EAAE,MAAM,CAAE,CAAC,CAAE,GAAG,MAAM,CAAC,EAAE;IAC7D,oBAAA,MAAM,CAAE,CAAC,CAAE,IAAI,MAAM,CAAA;IACtB,iBAAA;oBACD,MAAM,CAAE,CAAC,CAAE,GAAG,CAAC,MAAM,CAAE,CAAC,CAAE,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,CAAA;IAC7C,aAAA;IACF,SAAA;iBAAM,IAAI,KAAK,KAAK,KAAK,EAAE;gBAC1B,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;IACtB,gBAAA,MAAM,CAAE,CAAC,CAAE,IAAI,CAAC,OAAO,CAAA;oBACvB,MAAM,CAAE,CAAC,CAAE,GAAG,CAAC,MAAM,CAAE,CAAC,CAAE,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,CAAA;IAC7C,aAAA;IACF,SAAA;SACF;IACH,CAAC;IACD,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,EAAC,MAAM,EAAE;IACjC,QAAA,cAAc,EAAE,aAAa,EAAE,aAAa,EAAE,kBAAkB,EAAE,QAAQ;IAC3E,KAAA,EAAC,CAAC;;IC7yBH;;;;IAIG;IAoCH,SAAS,UAAU,CAAE,MAAoB,EAAE,MAAoB,EAAE,MAAoB,EAAE,MAAoB,EAAE,GAAiB,EAAE,GAAiB,EAAE,WAAmB,EAAA;QACpK,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,WAAW,CAAC,CAAA;IACxC,IAAA,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAA;IAE1B,IAAA,IAAI,IAAI,GAAG,GAAG,CAAE,CAAC,CAAE,CAAA;IACnB,IAAA,IAAI,IAAI,GAAG,GAAG,CAAE,CAAC,CAAE,CAAA;IACnB,IAAA,IAAI,IAAI,GAAG,GAAG,CAAE,CAAC,CAAE,CAAA;IAEnB,IAAA,IAAI,IAAI,GAAG,GAAG,CAAE,CAAC,CAAE,CAAA;IACnB,IAAA,IAAI,IAAI,GAAG,GAAG,CAAE,CAAC,CAAE,CAAA;IACnB,IAAA,IAAI,IAAI,GAAG,GAAG,CAAE,CAAC,CAAE,CAAA;IAEnB,IAAA,SAAS,QAAQ,CAAE,CAAS,EAAE,IAAY,EAAA;IACxC,QAAA,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,IAAI,WAAW,CAAC,CAAA;SAC5C;QAED,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,CAAA;QACnC,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,CAAA;QACnC,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,CAAA;IAEnC,IAAA,IAAI,MAAM,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,CAAA;IAE/B,IAAA,IAAI,KAAK,GAAG,IAAI,GAAG,IAAI,CAAA;;IAGvB,IAAA,IAAI,MAAM,GAAG,UAAU,CAAS,EAAE,CAAS,EAAE,CAAS,EAAA;IACpD,QAAA,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,IAAI,IAAI,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,IAAI,IAAI,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;IACtF,KAAC,CAAA;;IAGD,IAAA,IAAI,OAAO,GAAG,EAAE,CAAA;QAEhB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;IAC/B,QAAA,IAAI,GAAG,GAAG,MAAM,CAAC,MAAM,CAAE,CAAC,CAAE,EAAE,MAAM,CAAE,CAAC,CAAE,EAAE,MAAM,CAAE,CAAC,CAAE,CAAC,CAAA;IAEvD,QAAA,IAAI,OAAO,CAAE,GAAG,CAAE,KAAK,SAAS,EAAE;IAChC,YAAA,OAAO,CAAE,GAAG,CAAE,GAAG,CAAE,CAAC,CAAE,CAAA;IACvB,SAAA;IAAM,aAAA;gBACL,OAAO,CAAE,GAAG,CAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;IACvB,SAAA;IACF,KAAA;IAED,IAAA,IAAI,WAAW,GAAG,IAAI,WAAW,CAAC,MAAM,CAAC,CAAA;IACzC,IAAA,IAAI,WAAW,GAAG,IAAI,WAAW,CAAC,MAAM,CAAC,CAAA;IACzC,IAAA,IAAI,IAAI,GAAG,IAAI,WAAW,CAAC,MAAM,CAAC,CAAA;QAElC,IAAI,MAAM,GAAG,CAAC,CAAA;QACd,IAAI,aAAa,GAAG,CAAC,CAAA;QAErB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;YAC3B,IAAI,KAAK,GAAG,WAAW,CAAE,CAAC,CAAE,GAAG,MAAM,CAAA;IAErC,QAAA,IAAI,QAAQ,GAAG,OAAO,CAAE,CAAC,CAAE,CAAA;YAE3B,IAAI,QAAQ,KAAK,SAAS,EAAE;IAC1B,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACxC,IAAI,CAAE,MAAM,CAAE,GAAG,QAAQ,CAAE,CAAC,CAAE,CAAA;IAC9B,gBAAA,MAAM,EAAE,CAAA;IACT,aAAA;IACF,SAAA;IAED,QAAA,IAAI,UAAU,GAAG,MAAM,GAAG,KAAK,CAAA;IAC/B,QAAA,WAAW,CAAE,CAAC,CAAE,GAAG,UAAU,CAAA;YAE7B,IAAI,UAAU,GAAG,aAAa,EAAE;gBAAE,aAAa,GAAG,UAAU,CAAA;IAAE,SAAA;IAC/D,KAAA;;QAGD,MAAM,mBAAmB,GAAG,CAAC,EAAE,GAAG,aAAa,IAAI,CAAC,CAAA;IAEpD;;;;;;;;;;;;IAYG;QACH,MAAM,WAAW,GAAG,UAAU,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,MAAc,EAAE,GAAe,EAAA;YAC5F,IAAI,MAAM,GAAG,CAAC,CAAA;YAEd,IAAI,KAAK,GAAG,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;YAC7B,IAAI,KAAK,GAAG,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;YAC7B,IAAI,KAAK,GAAG,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;IAE7B,QAAA,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,CAAA;IAChC,QAAA,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,CAAA;IAChC,QAAA,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,CAAA;IAEhC,QAAA,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,CAAC,CAAA;IACnC,QAAA,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,CAAC,CAAA;IACnC,QAAA,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,CAAC,CAAA;YAEnC,KAAK,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;IAC9B,YAAA,IAAI,OAAO,GAAG,CAAC,GAAG,KAAK,CAAA;gBAEvB,KAAK,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;IAC9B,gBAAA,IAAI,OAAO,GAAG,CAAC,GAAG,IAAI,CAAA;oBAEtB,KAAK,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;IAC9B,oBAAA,IAAI,GAAG,GAAG,OAAO,GAAG,OAAO,GAAG,CAAC,CAAA;IAE/B,oBAAA,IAAI,SAAS,GAAG,WAAW,CAAE,GAAG,CAAE,CAAA;wBAClC,IAAI,OAAO,GAAG,SAAS,GAAG,WAAW,CAAE,GAAG,CAAE,CAAA;wBAE5C,KAAK,IAAI,SAAS,GAAG,SAAS,EAAE,SAAS,GAAG,OAAO,EAAE,SAAS,EAAE,EAAE;IAChE,wBAAA,IAAI,SAAS,GAAG,IAAI,CAAE,SAAS,CAAE,CAAA;4BACjC,IAAI,EAAE,GAAG,MAAM,CAAE,SAAS,CAAE,GAAG,CAAC,CAAA;4BAChC,IAAI,EAAE,GAAG,MAAM,CAAE,SAAS,CAAE,GAAG,CAAC,CAAA;4BAChC,IAAI,EAAE,GAAG,MAAM,CAAE,SAAS,CAAE,GAAG,CAAC,CAAA;4BAChC,IAAI,IAAI,GAAG,MAAM,CAAE,SAAS,CAAE,GAAG,MAAM,CAAA;IAEvC,wBAAA,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,IAAI,GAAG,IAAI,CAAC,EAAE;gCAClD,GAAG,CAAE,MAAM,EAAE,CAAE,GAAG,IAAI,CAAE,SAAS,CAAE,CAAA;IACpC,yBAAA;IACF,qBAAA;IACF,iBAAA;IACF,aAAA;IACF,SAAA;;IAED,QAAA,GAAG,CAAE,MAAM,CAAE,GAAG,CAAC,CAAC,CAAA;IACpB,KAAC,CAAA;QACD,OAAO;IACL,QAAA,mBAAmB,EAAE,mBAAmB;IACxC,QAAA,WAAW,EAAE,WAAW;SACzB,CAAA;IACH,CAAC;IAKD,SAAS,SAAS,CAAmB,SAAuB,EAAE,UAAwB,EAAE,SAAkC,EAAA;;;;;;;IAQxH,IAAA,MAAM,MAAM,GAAG,UAAU,CAAC,MAAM,CAAA;IAEhC,IAAA,MAAM,CAAC,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC,CAAA;IAClC,IAAA,MAAM,CAAC,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC,CAAA;IAClC,IAAA,MAAM,CAAC,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC,CAAA;QAElC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;IAC/B,QAAA,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAA;YAChB,CAAC,CAAE,CAAC,CAAE,GAAG,SAAS,CAAE,EAAE,CAAE,CAAA;YACxB,CAAC,CAAE,CAAC,CAAE,GAAG,SAAS,CAAE,EAAE,GAAG,CAAC,CAAE,CAAA;YAC5B,CAAC,CAAE,CAAC,CAAE,GAAG,SAAS,CAAE,EAAE,GAAG,CAAC,CAAE,CAAA;IAC7B,KAAA;IAED,IAAA,IAAI,IAAI,GAAG,kBAAkB,CAAC,SAAS,CAAC,CAAA;IACxC,IAAA,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;IAC1B,QAAA,IAAI,CAAE,CAAC,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC,CAAA;IAC1B,QAAA,IAAI,CAAE,CAAC,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAC,CAAA;IAC3B,KAAA;IACD,IAAA,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAA;IACnB,IAAA,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAA;IAEnB,IAAA,IAAI,CAAe,EAAE,EAAgB,CAAA;IACrC,IAAA,IAAI,SAAiB,CAAA;;IAGrB,IAAA,IAAI,WAAmB,EAAE,WAAmB,EAAE,SAAkB,EAAE,cAAsB,CAAA;;IAGxF,IAAA,IAAI,QAAQ,GAAG,CAAC,CAAC,CAAA;;IAGjB,IAAA,IAAI,GAAiB,EAAE,MAAoB,EAAE,IAAiB,EAAE,SAAqB,CAAA;;IAGrF,IAAA,IAAI,KAAmB,EAAE,KAAmB,EAAE,KAAmB,CAAA;;QAGjE,IAAI,QAAsB,EAAE,QAAsB,CAAA;;IAGlD,IAAA,IAAI,IAAa,CAAA;;IAGjB,IAAA,IAAI,UAAsB,CAAA;;IAG1B,IAAA,MAAM,IAAI,GAAG,IAAI,YAAY,CAAC,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,CAAC,CAAA;IAChD,IAAA,MAAM,GAAG,GAAG,IAAI,YAAY,CAAC,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,CAAC,CAAA;IAC/C,IAAA,MAAM,EAAE,GAAG,IAAI,YAAY,CAAC,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,CAAC,CAAA;IAC9C,IAAA,MAAM,EAAE,GAAG,IAAI,YAAY,CAAC,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,CAAC,CAAA;IAE9C,IAAA,IAAI,OAAe,CAAA;QAEnB,SAAS,IAAI,CAAE,YAAqB,EAAE,YAAqB,EAAE,UAAoB,EAAE,eAAwB,EAAA;IACzG,QAAA,WAAW,GAAG,QAAQ,CAAC,YAAY,EAAE,GAAG,CAAC,CAAA;IACzC,QAAA,WAAW,GAAG,QAAQ,CAAC,YAAY,EAAE,GAAG,CAAC,CAAA;IACzC,QAAA,SAAS,GAAG,QAAQ,CAAC,UAAU,EAAE,IAAI,CAAC,CAAA;IACtC,QAAA,cAAc,GAAG,QAAQ,CAAC,eAAe,EAAE,EAAE,CAAC,CAAA;IAE9C,QAAA,CAAC,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC,CAAA;IAC5B,QAAA,EAAE,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC,CAAA;IAE7B,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;gBACjC,IAAI,IAAI,GAAG,UAAU,CAAE,CAAC,CAAE,GAAG,WAAW,CAAA;IACxC,YAAA,CAAC,CAAE,CAAC,CAAE,GAAG,IAAI,CAAA;IACb,YAAA,EAAE,CAAE,CAAC,CAAE,GAAG,IAAI,GAAG,IAAI,CAAA;IACtB,SAAA;YAED,SAAS,GAAG,CAAC,CAAA;IACb,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;IACjC,YAAA,IAAI,CAAC,CAAE,CAAC,CAAE,GAAG,SAAS;IAAE,gBAAA,SAAS,GAAG,CAAC,CAAE,CAAC,CAAE,CAAA;IAC3C,SAAA;IAED,QAAA,cAAc,EAAE,CAAA;IAChB,QAAA,qBAAqB,EAAE,CAAA;IACvB,QAAA,cAAc,EAAE,CAAA;YAEhB,QAAQ,GAAG,CAAC,CAAC,CAAA;SACd;IAED,IAAA,SAAS,WAAW,CAAE,CAAe,EAAE,KAAa,EAAE,IAAY,EAAA;IAChE,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACjC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,IAAI,IAAI,GAAG,CAAC,CAAC,CAAA;IAC1B,SAAA;SACF;IAED,IAAA,SAAS,cAAc,GAAA;IACrB,QAAA,MAAM,QAAQ,GAAG,cAAc,CAC7B,GAAG,EAAE,GAAG,EAAE,SAAS,EAAE,WAAW,EAAE,GAAG,CACtC,CAAA;IAED,QAAA,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAA;IAClC,QAAA,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAA;IAClB,QAAA,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAA;IAExB,QAAA,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,WAAW,CAAC,CAAC,CAAA;YAEhE,IAAI,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAA;YAEtD,SAAS,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;YAEvC,KAAK,GAAG,IAAI,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;YAChC,KAAK,GAAG,IAAI,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;YAChC,KAAK,GAAG,IAAI,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;IAEhC,QAAA,WAAW,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,CAAA;IAC3C,QAAA,WAAW,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,CAAA;IAC3C,QAAA,WAAW,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,CAAA;SAC5C;IAED,IAAA,SAAS,qBAAqB,GAAA;YAC5B,IAAI,KAAK,GAAG,GAAG,CAAA;YACf,IAAI,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,cAAc,CAAA;IAEvC,QAAA,QAAQ,GAAG,IAAI,YAAY,CAAC,cAAc,CAAC,CAAA;IAC3C,QAAA,QAAQ,GAAG,IAAI,YAAY,CAAC,cAAc,CAAC,CAAA;YAC3C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,EAAE,CAAC,EAAE,EAAE;gBACvC,QAAQ,CAAE,CAAC,CAAE,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;gBAC/B,QAAQ,CAAE,CAAC,CAAE,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;gBAC/B,KAAK,IAAI,IAAI,CAAA;IACd,SAAA;SACF;IAED,IAAA,SAAS,cAAc,GAAA;IACrB,QAAA,IAAI,GAAG,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,GAAG,SAAS,CAAC,CAAA;YACzD,UAAU,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAA;SACtD;QAED,SAAS,QAAQ,CAAE,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,CAAS,EAAA;;;;;;IAOtE,QAAA,IAAI,EAAU,CAAA;IAEd,QAAA,IAAI,QAAQ,KAAK,CAAC,CAAC,EAAE;gBACnB,EAAE,GAAG,QAAQ,CAAA;IACb,YAAA,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,kBAAkB,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;IAC3D,gBAAA,OAAO,EAAE,CAAA;IACV,aAAA;IAAM,iBAAA;oBACL,QAAQ,GAAG,CAAC,CAAC,CAAA;IACd,aAAA;IACF,SAAA;YAED,IAAI,EAAE,GAAG,CAAC,CAAA;IACV,QAAA,EAAE,GAAG,UAAU,CAAE,EAAE,CAAE,CAAA;YACrB,OAAO,EAAE,IAAI,CAAC,EAAE;IACd,YAAA,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,kBAAkB,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;oBAC3D,QAAQ,GAAG,EAAE,CAAA;IACb,gBAAA,OAAO,EAAE,CAAA;IACV,aAAA;IACD,YAAA,EAAE,GAAG,UAAU,CAAE,EAAE,EAAE,CAAE,CAAA;IACxB,SAAA;YAED,QAAQ,GAAG,CAAC,CAAC,CAAA;YAEb,OAAO,CAAC,CAAC,CAAA;SACV;QAED,SAAS,kBAAkB,CAAE,EAAU,EAAE,CAAS,EAAE,CAAS,EAAE,CAAS,EAAA;IACtE,QAAA,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,CAAA;IACf,QAAA,IAAI,GAAG,GAAG,EAAE,CAAE,EAAE,CAAE,CAAA;YAClB,IAAI,EAAE,GAAG,SAAS,CAAE,EAAE,CAAE,GAAG,CAAC,CAAA;YAC5B,IAAI,EAAE,GAAG,SAAS,CAAE,EAAE,GAAG,CAAC,CAAE,GAAG,CAAC,CAAA;YAChC,IAAI,EAAE,GAAG,SAAS,CAAE,EAAE,GAAG,CAAC,CAAE,GAAG,CAAC,CAAA;IAChC,QAAA,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAA;YAEpC,OAAO,EAAE,GAAG,GAAG,CAAA;SAChB;IAED,IAAA,SAAS,aAAa,GAAA;;;;;;;;;;;;YAcpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;IAC/B,YAAA,IAAI,EAAE,GAAG,CAAC,CAAE,CAAC,CAAE,CAAA;IACf,YAAA,IAAI,EAAE,GAAG,CAAC,CAAE,CAAC,CAAE,CAAA;IACf,YAAA,IAAI,EAAE,GAAG,CAAC,CAAE,CAAC,CAAE,CAAA;IACf,YAAA,IAAI,EAAE,GAAG,CAAC,CAAE,CAAC,CAAE,CAAA;IACf,YAAA,IAAI,GAAG,GAAG,EAAE,CAAE,CAAC,CAAE,CAAA;IAEjB,YAAA,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,UAAU,CAAC,CAAA;;gBAG5C,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,WAAW,CAAC,CAAA;;IAGpC,YAAA,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,EAAE,GAAG,GAAG,CAAE,CAAC,CAAE,CAAC,CAAC,CAAA;IACnD,YAAA,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,EAAE,GAAG,GAAG,CAAE,CAAC,CAAE,CAAC,CAAC,CAAA;IACnD,YAAA,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,EAAE,GAAG,GAAG,CAAE,CAAC,CAAE,CAAC,CAAC,CAAA;;IAGnD,YAAA,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAA;IAChC,YAAA,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAA;IAChC,YAAA,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAA;;;;IAKhC,YAAA,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC,CAAA;IAC3C,YAAA,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC,CAAA;IAC3C,YAAA,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC,CAAA;gBAE3C,KAAK,IAAI,EAAE,GAAG,IAAI,EAAE,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE;oBACnC,IAAI,EAAE,GAAG,KAAK,CAAE,EAAE,CAAE,GAAG,EAAE,CAAA;IACzB,gBAAA,IAAI,OAAO,GAAG,GAAG,CAAE,CAAC,CAAE,GAAG,GAAG,CAAE,CAAC,CAAE,GAAG,EAAE,CAAA;oBAEtC,KAAK,IAAI,EAAE,GAAG,IAAI,EAAE,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE;wBACnC,IAAI,EAAE,GAAG,KAAK,CAAE,EAAE,CAAE,GAAG,EAAE,CAAA;wBACzB,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAA;wBAC5B,IAAI,QAAQ,GAAG,OAAO,GAAG,GAAG,CAAE,CAAC,CAAE,GAAG,EAAE,CAAA;wBAEtC,KAAK,IAAI,EAAE,GAAG,IAAI,EAAE,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE;4BACnC,IAAI,EAAE,GAAG,KAAK,CAAE,EAAE,CAAE,GAAG,EAAE,CAAA;IACzB,wBAAA,IAAI,EAAE,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE,CAAA;4BAEvB,IAAI,EAAE,GAAG,GAAG,EAAE;IACZ,4BAAA,IAAI,GAAG,GAAG,EAAE,GAAG,QAAQ,CAAA;IAEvB,4BAAA,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,EAAE;;oCAEnB,IAAI,CAAE,GAAG,CAAE,GAAG,CAAC,IAAI,CAAE,GAAG,CAAE,CAAA;IAC3B,6BAAA;;;gCAGD,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;IACrB,4BAAA,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,CAAA;IACf,4BAAA,IAAI,GAAG,GAAG,EAAE,GAAG,EAAE,CAAA;IACjB,4BAAA,IAAI,GAAG,GAAG,EAAE,GAAG,EAAE,CAAA;IACjB,4BAAA,IAAI,GAAG,GAAG,EAAE,GAAG,EAAE,CAAA;gCAEjB,GAAG,IAAI,EAAE,CAAA;gCACT,GAAG,IAAI,EAAE,CAAA;gCACT,GAAG,IAAI,EAAE,CAAA;IAET,4BAAA,IAAI,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;IACzC,gCAAA,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,CAAA;IACf,gCAAA,IAAI,EAAE,GAAG,IAAI,CAAE,GAAG,CAAE,EAAE;IACpB,oCAAA,IAAI,CAAE,GAAG,CAAE,GAAG,EAAE,CAAA;IAChB,oCAAA,IAAI,SAAS;IAAE,wCAAA,SAAS,CAAE,GAAG,CAAE,GAAG,CAAC,CAAA;IACpC,iCAAA;IACF,6BAAA;IACF,yBAAA;IACF,qBAAA;IACF,iBAAA;IACF,aAAA;IACF,SAAA;SACF;IAED,IAAA,SAAS,YAAY,GAAA;YACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC/B,IAAI,CAAC,WAAW,CAAC,CAAC,CAAE,CAAC,CAAE,EAAE,CAAC,CAAE,CAAC,CAAE,EAAE,CAAC,CAAE,CAAC,CAAE,EAAE,CAAC,CAAE,CAAC,CAAE,EAAE,UAAU,CAAC,CAAA;gBAC5D,IAAI,EAAE,GAAG,CAAC,CAAA;IACV,YAAA,IAAI,EAAE,GAAG,UAAU,CAAE,EAAE,CAAE,CAAA;gBACzB,OAAO,EAAE,IAAI,CAAC,EAAE;oBACd,IAAI,CAAC,GAAG,EAAE,EAAE;IACV,oBAAA,YAAY,CAAC,CAAC,EAAE,EAAE,CAAC,CAAA;IACpB,iBAAA;IACD,gBAAA,EAAE,GAAG,UAAU,CAAE,EAAE,EAAE,CAAE,CAAA;IACxB,aAAA;IACF,SAAA;SACF;IAED,IAAA,SAAS,YAAY,CAAE,CAAS,EAAE,CAAS,EAAA;IACzC,QAAA,IAAI,EAAE,GAAG,CAAC,CAAE,CAAC,CAAE,CAAA;IACf,QAAA,IAAI,EAAE,GAAG,CAAC,CAAE,CAAC,CAAE,CAAA;IACf,QAAA,IAAI,EAAE,GAAG,IAAI,CAAE,CAAC,CAAE,GAAG,CAAC,CAAE,CAAC,CAAE,GAAG,CAAC,CAAE,CAAC,CAAE,CAAA;IACpC,QAAA,IAAI,EAAE,GAAG,IAAI,CAAE,CAAC,CAAE,GAAG,CAAC,CAAE,CAAC,CAAE,GAAG,CAAC,CAAE,CAAC,CAAE,CAAA;IACpC,QAAA,IAAI,EAAE,GAAG,IAAI,CAAE,CAAC,CAAE,GAAG,CAAC,CAAE,CAAC,CAAE,GAAG,CAAC,CAAE,CAAC,CAAE,CAAA;IACpC,QAAA,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAA;;;YAKpC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;;;YAIrB,IAAI,IAAI,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC,CAAA;;IAGvD,QAAA,IAAI,GAAG,GAAG,EAAE,GAAG,IAAI,CAAA;IAEnB,QAAA,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;;IAGvB,QAAA,YAAY,CAAC,EAAS,EAAE,IAAI,CAAC,CAAA;IAC7B,QAAA,WAAW,CAAC,EAAE,EAAE,EAAE,CAAC,CAAA;;IAGnB,QAAA,OAAO,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,CAAC,CAAA;IACrB,QAAA,WAAW,CAAC,EAAE,EAAE,EAAE,CAAC,CAAA;;IAGnB,QAAA,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,CAAA;IAEzC,QAAA,gBAAgB,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAA;IAC9B,QAAA,gBAAgB,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAA;IAC9B,QAAA,gBAAgB,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,CAAA;IAEjC,QAAA,GAAG,CAAE,CAAC,CAAE,GAAG,IAAI,CAAE,CAAC,CAAE,GAAG,CAAC,CAAE,CAAC,CAAE,CAAA;IAC7B,QAAA,GAAG,CAAE,CAAC,CAAE,GAAG,IAAI,CAAE,CAAC,CAAE,GAAG,CAAC,CAAE,CAAC,CAAE,CAAA;IAC7B,QAAA,GAAG,CAAE,CAAC,CAAE,GAAG,IAAI,CAAE,CAAC,CAAE,GAAG,CAAC,CAAE,CAAC,CAAE,CAAA;YAE7B,QAAQ,GAAG,CAAC,CAAC,CAAA;YAEb,IAAI,EAAE,GAAG,OAAO,CAAA;YAEhB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,EAAE,CAAC,EAAE,EAAE;IACvC,YAAA,IAAI,IAAI,GAAG,QAAQ,CAAE,CAAC,CAAE,CAAA;IACxB,YAAA,IAAI,IAAI,GAAG,QAAQ,CAAE,CAAC,CAAE,CAAA;gBAExB,IAAI,EAAE,GAAG,GAAG,CAAE,CAAC,CAAE,GAAG,IAAI,GAAG,EAAE,CAAE,CAAC,CAAE,GAAG,IAAI,GAAG,EAAE,CAAE,CAAC,CAAE,CAAA;gBACnD,IAAI,EAAE,GAAG,GAAG,CAAE,CAAC,CAAE,GAAG,IAAI,GAAG,EAAE,CAAE,CAAC,CAAE,GAAG,IAAI,GAAG,EAAE,CAAE,CAAC,CAAE,CAAA;gBACnD,IAAI,EAAE,GAAG,GAAG,CAAE,CAAC,CAAE,GAAG,IAAI,GAAG,EAAE,CAAE,CAAC,CAAE,GAAG,IAAI,GAAG,EAAE,CAAE,CAAC,CAAE,CAAA;IAEnD,YAAA,IAAI,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;;;IAGrC,gBAAA,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,EAAE,GAAG,GAAG,CAAE,CAAC,CAAE,CAAC,CAAC,CAAA;IACnD,gBAAA,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,EAAE,GAAG,GAAG,CAAE,CAAC,CAAE,CAAC,CAAC,CAAA;IACnD,gBAAA,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,EAAE,GAAG,GAAG,CAAE,CAAC,CAAE,CAAC,CAAC,CAAA;IAEnD,gBAAA,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAA;IAChC,gBAAA,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAA;IAChC,gBAAA,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAA;IAEhC,gBAAA,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC,CAAA;IAC3C,gBAAA,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC,CAAA;IAC3C,gBAAA,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAE,CAAC,CAAE,EAAE,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC,CAAA;oBAE3C,KAAK,IAAI,EAAE,GAAG,IAAI,EAAE,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE;IACnC,oBAAA,EAAE,GAAG,EAAE,GAAG,KAAK,CAAE,EAAE,CAAE,CAAA;IACrB,oBAAA,IAAI,OAAO,GAAG,GAAG,CAAE,CAAC,CAAE,GAAG,GAAG,CAAE,CAAC,CAAE,GAAG,EAAE,CAAA;wBAEtC,KAAK,IAAI,EAAE,GAAG,IAAI,EAAE,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE;IACnC,wBAAA,EAAE,GAAG,EAAE,GAAG,KAAK,CAAE,EAAE,CAAE,CAAA;4BACrB,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAA;4BAC5B,IAAI,QAAQ,GAAG,OAAO,GAAG,GAAG,CAAE,CAAC,CAAE,GAAG,EAAE,CAAA;4BAEtC,KAAK,IAAI,EAAE,GAAG,IAAI,EAAE,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE;IACnC,4BAAA,EAAE,GAAG,EAAE,GAAG,KAAK,CAAE,EAAE,CAAE,CAAA;IACrB,4BAAA,EAAE,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE,CAAA;IACnB,4BAAA,IAAI,GAAG,GAAG,EAAE,GAAG,QAAQ,CAAA;IACvB,4BAAA,IAAI,OAAO,GAAG,IAAI,CAAE,GAAG,CAAE,CAAA;gCAEzB,IAAI,OAAO,GAAG,GAAG,IAAI,EAAE,IAAI,OAAO,GAAG,OAAO,CAAC,EAAE;oCAC7C,IAAI,CAAE,GAAG,CAAE,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;IAC3B,gCAAA,IAAI,SAAS,EAAE;;;wCAGb,MAAM,EAAE,GAAG,EAAE,GAAG,IAAI,CAAE,CAAC,CAAE,GAAG,EAAE,GAAG,IAAI,CAAG,CAAC,CAAE,GAAG,EAAE,GAAG,IAAI,CAAE,CAAC,CAAE,CAAA;IAC5D,oCAAA,SAAS,CAAE,GAAG,CAAE,GAAG,EAAE,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAA;IACpC,iCAAA;IACF,6BAAA;IACF,yBAAA;IACF,qBAAA;IACF,iBAAA;IACF,aAAA;IACF,SAAA;SACF;IAED,IAAA,SAAS,YAAY,CAAE,GAAe,EAAE,CAAe,EAAA;IACrD,QAAA,GAAG,CAAE,CAAC,CAAE,GAAG,GAAG,CAAE,CAAC,CAAE,GAAG,GAAG,CAAE,CAAC,CAAE,GAAG,GAAG,CAAA;IACpC,QAAA,IAAI,CAAC,CAAE,CAAC,CAAE,KAAK,CAAC,EAAE;gBAChB,GAAG,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,GAAG,CAAC,CAAE,CAAC,CAAE,IAAI,CAAC,CAAC,CAAE,CAAC,CAAE,CAAA;IACvC,SAAA;IAAM,aAAA,IAAI,CAAC,CAAE,CAAC,CAAE,KAAK,CAAC,EAAE;gBACvB,GAAG,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,GAAG,CAAC,CAAE,CAAC,CAAE,IAAI,CAAC,CAAC,CAAE,CAAC,CAAE,CAAA;IACvC,SAAA;IAAM,aAAA,IAAI,CAAC,CAAE,CAAC,CAAE,KAAK,CAAC,EAAE;gBACvB,GAAG,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC,CAAE,CAAC,CAAE,GAAG,CAAC,CAAE,CAAC,CAAE,IAAI,CAAC,CAAC,CAAE,CAAC,CAAE,CAAA;IACvC,SAAA;IACD,QAAA,OAAO,GAAG,CAAA;SACX;IAED,IAAA,SAAS,YAAY,GAAA;IACnB,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACpC,YAAA,IAAI,IAAI,CAAE,CAAC,CAAE,GAAG,CAAC;IAAE,gBAAA,IAAI,CAAE,CAAC,CAAE,GAAG,CAAC,CAAA;IACjC,SAAA;SACF;IAED,IAAA,SAAS,UAAU,GAAA;IACjB,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACzC,SAAS,CAAE,CAAC,CAAE,GAAG,SAAS,CAAE,SAAS,CAAE,CAAC,CAAE,CAAE,CAAA;IAC7C,SAAA;SACF;IAED,IAAA,SAAS,SAAS,CAAE,WAAmB,EAAE,WAAmB,EAAE,SAAkB,EAAA;;;;;IAM9E,QAAA,OAAO,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAA;IAEnC,QAAA,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAA;IAC9B,QAAA,IAAI,CAAC,WAAW,EAAE,WAAW,EAAE,SAAS,CAAC,CAAA;IACzC,QAAA,OAAO,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAA;IAEjC,QAAA,OAAO,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAA;IACvC,QAAA,aAAa,EAAE,CAAA;IACf,QAAA,OAAO,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAA;IAE1C,QAAA,OAAO,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAA;IACtC,QAAA,YAAY,EAAE,CAAA;IACd,QAAA,OAAO,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAA;IACzC,QAAA,YAAY,EAAE,CAAA;IACd,QAAA,UAAU,EAAE,CAAA;IAEZ,QAAA,OAAO,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAA;SACvC;IAED,IAAA,IAAI,CAAC,UAAU,GAAG,UAAU,IAAY,EAAE,WAAmB,EAAE,WAAmB,EAAE,MAAc,EAAE,SAAkB,EAAE,MAAc,EAAE,OAAgB,EAAA;;;IAItJ,QAAA,SAAS,CAAC,WAAW,EAAE,WAAW,EAAE,SAAS,CAAC,CAAA;YAE9C,IAAI,OAAO,GAAG,IAAK,aAAqB,CACtC,IAAI,EAAE,GAAG,CAAE,CAAC,CAAE,EAAE,GAAG,CAAE,CAAC,CAAE,EAAE,GAAG,CAAE,CAAC,CAAE,EAAE,SAAS,CAC7B,CAAA;IAElB,QAAA,OAAO,OAAO,CAAC,UAAW,CAAC,WAAW,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,OAAO,CAAC,CAAA;IAC5E,KAAC,CAAA;IACH,CAAC;IACD,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,EAAC,MAAM,EAAE;IAChC,QAAA,cAAc,EAAE,aAAa,EAAE,YAAY,EAAE,kBAAkB;YAC/D,gBAAgB,EAAE,OAAO,EAAE,WAAW;YACtC,UAAU;YACV,QAAQ;IACT,KAAA,EAAC,CAAC;;ICjnBH;;;;IAIG;IAWH,cAAc,CAAC,GAAG,CAAC,SAAS,EAAE,SAAS,IAAI,CAAE,CAAM,EAAE,QAA4C,EAAA;IAC/F,IAAA,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAA;IACrB,IAAA,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAA;QACvB,IAAI,CAAC,IAAI,CAAC,EAAE;IACV,QAAA,MAAM,SAAS,GAAG,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,IAAI,SAAS,GAAG,UAAU,CAAA;IAC5D,QAAA,MAAM,IAAI,GAAG,IAAK,SAAiB,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,UAAU,EAAE,CAAC,CAAC,SAAS,CAAyB,CAAA;IACnG,QAAA,MAAM,EAAE,GAAG,IAAI,CAAC,UAAU,CACxB,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,OAAO,CAC3D,CAAA;IAChB,QAAA,MAAM,YAAY,GAAG,CAAE,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,CAAC,KAAM,CAAC,MAAM,CAAE,CAAA;YAC7D,IAAI,EAAE,CAAC,MAAM;gBAAE,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;YAClD,IAAI,EAAE,CAAC,SAAS;gBAAE,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,CAAA;IACxD,QAAA,MAAM,IAAI,GAAG;IACX,YAAA,EAAE,EAAE,EAAE;IACN,YAAA,CAAC,EAAE,CAAC;aACL,CAAA;IACD,QAAA,QAAQ,CAAC,IAAI,EAAE,YAAY,CAAC,CAAA;IAC7B,KAAA;IACH,CAAC,EAAE,CAAE,UAAU,EAAE,SAAS,CAAE,CAAC,CAAA;IAqB7B;;IAEG;IACH,MAAM,gBAAgB,CAAA;IAIpB,IAAA,WAAA,CAAa,SAAoB,EAAA;IAC/B,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAA;SAC3B;IAED,IAAA,YAAY,CAAE,MAA2C,EAAA;IACvD,QAAA,OAAO,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;IAChC,YAAA,IAAI,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;IACnD,YAAA,YAAY,EAAE,QAAQ,CAAC,MAAM,CAAC,YAAY,EAAE;IAC1C,gBAAA,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG;iBACxB,CAAC;IACH,SAAA,CAAC,CAAA;SACH;QAED,YAAY,CAAE,EAAe,EAAE,CAAsC,EAAA;IACnE,QAAA,IAAI,OAAO,GAAG,IAAI,OAAO,CAAC,CAAC,CAAC,IAAK,EAAE,EAAE,EAAE,EAAE,CAAC,CAAA;YAE1C,OAAO,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAA;YAC1B,OAAO,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,CAAA;YACxC,OAAO,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,CAAA;YACxC,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAA;YAC9B,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAA;IAE9B,QAAA,OAAO,OAAO,CAAA;SACf;IAED;;;;IAIG;IACH,IAAA,UAAU,CAAE,MAA2C,EAAA;IACrD,QAAA,MAAM,CAAC,GAAG,MAAM,IAAI,EAAE,CAAA;YAEtB,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAA;IAC1C,QAAA,MAAM,SAAS,GAAG,QAAQ,CAAC,QAAQ,CAAA;IACnC,QAAA,MAAM,UAAU,GAAG,QAAQ,CAAC,MAAM,CAAA;IAClC,QAAA,MAAM,SAAS,GAAG,QAAQ,CAAC,KAAK,CAAA;IAEhC,QAAA,MAAM,SAAS,GAAG,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,IAAI,SAAS,GAAG,UAAU,CAAA;YAC5D,MAAM,IAAI,GAAG,IAAK,SAAiB,CAAC,SAAS,EAAE,UAAU,EAAE,SAAS,CAAyB,CAAA;IAC7F,QAAA,MAAM,EAAE,GAAG,IAAI,CAAC,UAAU,CACxB,CAAC,CAAC,IAAK,EAAE,CAAC,CAAC,WAAY,EAAE,CAAC,CAAC,WAAY,EAAE,CAAC,CAAC,MAAO,EAAE,IAAI,EAAE,CAAC,CAAC,MAAO,EAAE,CAAC,CAAC,OAAQ,CAChF,CAAA;YAED,OAAO,IAAI,CAAC,YAAY,CAAC,EAAE,EAAE,CAAC,CAAC,CAAA;SAChC;IAED;;;;;IAKG;QACH,gBAAgB,CAAE,MAAkC,EAAE,QAA8B,EAAA;YAClF,MAAM,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,CAAA;IAEnC,QAAA,IAAI,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE;IACnC,YAAA,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,EAAE;oBAC7B,IAAI,CAAC,MAAM,GAAG,IAAIoC,OAAM,CAAC,SAAS,CAAC,CAAA;IACpC,aAAA;gBAED,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAA;IAC1C,YAAA,MAAM,SAAS,GAAG,QAAQ,CAAC,QAAQ,CAAA;IACnC,YAAA,MAAM,UAAU,GAAG,QAAQ,CAAC,MAAM,CAAA;IAClC,YAAA,MAAM,SAAS,GAAG,QAAQ,CAAC,KAAK,CAAA;IAEhC,YAAA,MAAM,GAAG,GAAG;IACV,gBAAA,IAAI,EAAE;IACJ,oBAAA,SAAS,EAAE,SAAS;IACpB,oBAAA,UAAU,EAAE,UAAU;IACtB,oBAAA,SAAS,EAAE,SAAS;IACrB,iBAAA;IACD,gBAAA,MAAM,EAAE,CAAC;iBACV,CAAA;IAED,YAAA,MAAM,YAAY,GAAG;oBACnB,SAAU,CAAC,MAAM,EAAE,UAAW,CAAC,MAAM,EAAE,SAAU,CAAC,MAAM;iBACzD,CAAA;IAED,YAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,YAAY,EAEhC,CAAC,CAAM,KAAI;IACT,gBAAA,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAA;IAC3C,aAAC,EAED,CAAC,CAAS,KAAI;IACZ,gBAAA,OAAO,CAAC,IAAI,CACV,iEAAiE,EAAE,CAAC,CACrE,CAAA;IACD,gBAAA,IAAI,CAAC,MAAO,CAAC,SAAS,EAAE,CAAA;IACxB,gBAAA,IAAI,CAAC,MAAM,GAAG,SAAS,CAAA;oBACvB,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA;oBAClC,QAAQ,CAAC,OAAO,CAAC,CAAA;IACnB,aAAC,CAEF,CAAA;IACF,SAAA;IAAM,aAAA;gBACL,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA;gBAClC,QAAQ,CAAC,OAAO,CAAC,CAAA;IAClB,SAAA;SACF;IAED;;;IAGG;QACH,OAAO,GAAA;YACL,IAAI,IAAI,CAAC,MAAM;IAAE,YAAA,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAA;SACzC;IACF;;IC1KD;;;;IAIG;IAqCH;;IAEG;IACH,MAAM,8BAA+B,SAAQ,uBAAuB,CAAA;IAkBlE,IAAA,WAAA,CAAa,SAAoB,EAAE,MAAc,EAAE,MAAyD,EAAA;IAC1G,QAAA,KAAK,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,CAAA;IAEhC,QAAA,IAAI,CAAC,IAAI,GAAG,SAAS,CAAA;IAErB,QAAA,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC;IAE9B,YAAA,WAAW,EAAE;IACX,gBAAA,IAAI,EAAE,QAAQ;IACd,gBAAA,OAAO,EAAE,IAAI;IACb,gBAAA,OAAO,EAAE;IACP,oBAAA,KAAK,EAAE,KAAK;IACZ,oBAAA,KAAK,EAAE,KAAK;IACZ,oBAAA,IAAI,EAAE,IAAI;IACV,oBAAA,KAAK,EAAE,KAAK;IACZ,oBAAA,IAAI,EAAE,IAAI;IACX,iBAAA;IACF,aAAA;IACD,YAAA,WAAW,EAAE;IACX,gBAAA,IAAI,EAAE,QAAQ;IACd,gBAAA,SAAS,EAAE,CAAC;IACZ,gBAAA,GAAG,EAAE,EAAE;IACP,gBAAA,GAAG,EAAE,CAAC;IACN,gBAAA,OAAO,EAAE,IAAI;IACd,aAAA;IACD,YAAA,MAAM,EAAE;IACN,gBAAA,IAAI,EAAE,SAAS;IACf,gBAAA,SAAS,EAAE,CAAC;IACZ,gBAAA,GAAG,EAAE,EAAE;IACP,gBAAA,GAAG,EAAE,CAAC;IACN,gBAAA,OAAO,EAAE,IAAI;IACd,aAAA;IACD,YAAA,WAAW,EAAE;IACX,gBAAA,IAAI,EAAE,QAAQ;IACd,gBAAA,SAAS,EAAE,CAAC;IACZ,gBAAA,GAAG,EAAE,CAAC;IACN,gBAAA,GAAG,EAAE,CAAC;IACN,gBAAA,OAAO,EAAE,IAAI;IACd,aAAA;IACD,YAAA,MAAM,EAAE;IACN,gBAAA,IAAI,EAAE,QAAQ;IACd,gBAAA,SAAS,EAAE,CAAC;IACZ,gBAAA,GAAG,EAAE,EAAE;IACP,gBAAA,GAAG,EAAE,CAAC;IACN,gBAAA,OAAO,EAAE,IAAI;IACd,aAAA;IACD,YAAA,OAAO,EAAE;IACP,gBAAA,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI;IAC/B,aAAA;IACD,YAAA,UAAU,EAAE;IACV,gBAAA,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI;IAC/B,aAAA;IACD,YAAA,UAAU,EAAE;IACV,gBAAA,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI;IAC9B,aAAA;IACD,YAAA,UAAU,EAAE;IACV,gBAAA,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI;IAC5B,aAAA;IACD,YAAA,WAAW,EAAE;IACX,gBAAA,IAAI,EAAE,QAAQ;IACf,aAAA;IACD,YAAA,SAAS,EAAE;IACT,gBAAA,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI;IAC/B,aAAA;aAEF,EAAE,IAAI,CAAC,UAAU,EAAE;IAElB,YAAA,MAAM,EAAE,IAAI;IACZ,YAAA,KAAK,EAAE,IAAI;IAEZ,SAAA,CAAC,CAAA;IAEF,QAAA,IAAI,CAAC,UAAU,GAAG,EAAE,CAAA;;YAGpB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,MAAK;IACxC,YAAA,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAA;IAC/B,SAAC,CAAC,CAAA;IAEF,QAAA,IAAI,CAAC,YAAY,GAAG,IAAI,CAAA;IAExB,QAAA,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;SAClB;IAED,IAAA,IAAI,CAAE,MAAyD,EAAA;IAC7D,QAAA,MAAM,CAAC,GAAG,MAAM,IAAI,EAAE,CAAA;YACtB,CAAC,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,SAAS,CAAC,CAAA;YAClD,CAAC,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAA;YAC/C,CAAC,CAAC,cAAc,GAAG,QAAQ,CAAC,CAAC,CAAC,cAAc,EAAE,IAAI,CAAC,CAAA;YAEnD,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,IAAI,CAAC,CAAA;YAChD,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,CAAA;YAC/C,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAA;YACnC,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,CAAA;YAC/C,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,CAAA;YACrC,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,KAAK,CAAC,CAAA;YACzC,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,KAAK,CAAC,CAAA;YAC/C,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,CAAA;YAC9C,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,EAAE,CAAC,CAAA;YAC5C,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,SAAS,CAAC,CAAA;YACrD,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,SAAS,EAAE,IAAI,CAAC,CAAA;IAE5C,QAAA,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;SACnB;IAED,IAAA,WAAW,CAAE,KAAoB,EAAE,CAAS,EAAE,QAA6B,EAAA;YACzE,IAAI,IAAI,GAAyB,IAAI,CAAC,UAAU,CAAE,CAAC,CAAE,CAAA;YACrD,IAAI,CAAC,IAAI,EAAE;gBACT,IAAI,GAAG,EAAE,CAAA;IACT,YAAA,IAAI,CAAC,UAAU,CAAE,CAAC,CAAE,GAAG,IAAI,CAAA;IAC5B,SAAA;IAED,QAAA,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE;gBACzD,IAAI,IAAI,CAAC,UAAU,EAAE;IACnB,gBAAA,MAAM,WAAW,GAAG,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAA;IAC3E,gBAAA,MAAM,MAAM,GAAG,WAAW,CAAC,WAAW,CAAC,OAAO,CAAC,IAAIpD,aAAO,EAAE,CAAC,CAAA;IAC7D,gBAAA,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAA;IACrD,gBAAA,MAAM,QAAQ,GAAG,KAAK,CAAC,qBAAqB,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,CAAC,CAAA;oBACpF,KAAK,GAAG,KAAK,CAAC,OAAO,CACnB,IAAI,SAAS,CAAC,KAAK,CAAC,yBAAyB,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,YAAY,EAAE,CAAC,CAC3E,CAAA;IACD,gBAAA,IAAI,KAAK,CAAC,SAAS,KAAK,CAAC,EAAE;wBACzB,QAAQ,CAAC,CAAC,CAAC,CAAA;wBACX,OAAM;IACP,iBAAA;IACF,aAAA;gBAED,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM,CAAA;gBAClC,IAAI,CAAC,OAAO,GAAG,IAAI,gBAAgB,CAAC,KAAK,CAAC,CAAA;IAE1C,YAAA,MAAM,CAAC,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAA;IACjC,YAAA,MAAM,eAAe,GAAG,CAAC,OAAgB,KAAI;IAC3C,gBAAA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAA;oBACtB,QAAQ,CAAC,CAAC,CAAC,CAAA;IACb,aAAC,CAAA;gBAED,IAAI,IAAI,CAAC,SAAS,EAAE;oBAClB,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAA+B,EAAE,eAAe,CAAC,CAAA;IAChF,aAAA;IAAM,iBAAA;oBACL,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAiF,CAAC,CAAC,CAAA;IAC5H,aAAA;IACF,SAAA;IAAM,aAAA;gBACL,QAAQ,CAAC,CAAC,CAAC,CAAA;IACZ,SAAA;SACF;IAED,IAAA,OAAO,CAAE,QAAoB,EAAA;IAC3B,QAAA,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,SAAS,CAAC,MAAM;IAC7D,YAAA,IAAI,CAAC,eAAe,KAAK,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,EAAE;gBACtE,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,IAA0B,KAAI;IACrD,gBAAA,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE;IACxB,oBAAA,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAA;IACvB,iBAAA;IACH,aAAC,CAAC,CAAA;IACF,YAAA,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAA;IAC3B,SAAA;IAED,QAAA,IAAI,IAAI,CAAC,aAAa,CAAC,SAAS,KAAK,CAAC,EAAE;IACtC,YAAA,QAAQ,EAAE,CAAA;gBACV,OAAM;IACP,SAAA;YAED,MAAM,KAAK,GAAG,MAAK;gBACjB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAA;IACnC,YAAA,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAA;IAC9D,YAAA,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAA;IAC9B,YAAA,QAAQ,EAAE,CAAA;IACZ,SAAC,CAAA;IAED,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,KAAK,SAAS,GAAG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAA;YAC/E,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAE,IAAI,CAAE,CAAA;IAElD,QAAA,IAAI,QAAQ,EAAE;gBACZ,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,KAAI;oBACpC,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;oBAC9C,IAAI,CAAC,WAAW,CAAC,KAAsB,EAAE,CAAC,EAAE,CAAC,EAAE,KAAI;wBACjD,IAAI,EAAE,KAAK,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC;IAAE,wBAAA,KAAK,EAAE,CAAA;IAClD,iBAAC,CAAC,CAAA;IACJ,aAAC,CAAC,CAAA;IACH,SAAA;IAAM,aAAA;gBACL,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,EAAE,KAAK,CAAC,CAAA;IAC/C,SAAA;SACF;QAED,UAAU,CAAE,KAAoB,EAAE,CAAS,EAAA;YACzC,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAE,CAAC,CAAE,CAAA;IACjC,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAA;YAE5B,IAAI,CAAC,OAAO,EAAE;;gBAEZ,OAAM;IACP,SAAA;IAED,QAAA,MAAM,WAAW,GAAG;IAClB,YAAA,QAAQ,EAAE,OAAQ,CAAC,WAAW,EAAE;gBAChC,KAAK,EAAE,OAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;gBAC/C,KAAK,EAAE,OAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC;aACzD,CAAA;YAED,MAAM,UAAU,GAAG,EAAE,CAAA;YAErB,IAAI,OAAO,CAAC,OAAO,EAAE;gBACnB,MAAM,aAAa,GAAG,IAAI,aAAa,CACrC,WAAW,EACX,IAAI,CAAC,eAAe,CAAC;IACnB,gBAAA,SAAS,EAAE,KAAK;IACjB,aAAA,CAAC,CACH,CAAA;IAED,YAAA,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;IAC/B,SAAA;IAAM,aAAA;IACL,YAAA,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE;IACzB,gBAAA,MAAM,EAAE,OAAO,CAAC,SAAS,EAAE;oBAC3B,OAAO,EAAE,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;IAClD,aAAA,CAAC,CAAA;gBAEF,MAAM,aAAa,GAAG,IAAI,aAAa,CACrC,WAAW,EACX,IAAI,CAAC,eAAe,CAAC;oBACnB,UAAU,EAAE,IAAI,CAAC,UAAU;oBAC3B,UAAU,EAAE,IAAI,CAAC,UAAU;IAC3B,gBAAA,YAAY,EAAE,KAAK;IACpB,aAAA,CAAC,CACH,CAAA;gBAED,IAAI,IAAI,CAAC,eAAe,EAAE,CAAC,IAAI,IAAI,QAAQ,EAAE;IAC3C,gBAAA,MAAM,iBAAiB,GAAG,IAAI,iBAAiB,CAAC,aAAa,CAAC,CAAA;IAC9D,gBAAA,UAAU,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAA;IACnC,aAAA;IACI,iBAAA;IACH,gBAAA,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;IAC/B,aAAA;IACF,SAAA;IAED,QAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAiC,CAAA;SAC3D;QAED,UAAU,CAAE,IAAuB,EAAE,IAAiC,EAAA;YACpE,MAAM,WAAW,GAAyB,EAAE,CAAA;IAE5C,QAAA,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM,EAAE;IAChC,YAAA,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAA;gBAC7B,IAAI,CAAC,KAAK,EAAE,CAAA;gBACZ,OAAM;IACP,SAAA;YAED,IAAI,IAAI,CAAC,KAAK,EAAE;IACd,YAAA,WAAW,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAA;IACtE,SAAA;YAED,IAAI,IAAI,CAAC,KAAK,EAAE;IACd,YAAA,WAAW,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,CAAA;IACpF,SAAA;YAED,IAAI,CAAC,UAAU,CAAE,CAAC,CAAE,CAAC,aAAa,CAAC,WAAW,CAAC,CAAA;SAChD;IAED,IAAA,aAAa,CAAE,MAAyD,EAAE,IAAmC,GAAA,EAAE,EAAE,OAAiB,EAAA;IAChI,QAAA,IAAI,MAAM,IAAI,MAAM,CAAC,UAAU,EAAE;IAC/B,YAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAA;IAClB,SAAA;IAED,QAAA,IAAI,MAAM,IAAI,MAAM,CAAC,WAAW,KAAK,SAAS,EAAE;IAC9C,YAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAA;IAClB,SAAA;;YAGD,IAAI,MAAM,IAAI,MAAM,CAAC,SAAS,KAC5B,MAAM,CAAC,OAAO,KAAK,MAAM,CAAC,OAAO,KAAK,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,CACjE,EACC;IACA,YAAA,MAAM,CAAC,SAAS,GAAG,KAAK,CAAA;IACzB,SAAA;YAED,KAAK,CAAC,aAAa,CAAC,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC,CAAA;IAE1C,QAAA,OAAO,IAAI,CAAA;SACZ;QAED,gBAAgB,CAAE,SAA4D,EAAE,EAAA;IAC9E,QAAA,MAAM,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC;gBACtB,IAAI,EAAE,IAAI,CAAC,WAAqB;gBAChC,WAAW,EAAE,IAAI,CAAC,WAAqB;gBACvC,WAAW,EAAE,IAAI,CAAC,WAAqB;gBACvC,MAAM,EAAE,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO;gBACpC,MAAM,EAAE,IAAI,CAAC,MAAgB;gBAC7B,OAAO,EAAE,IAAI,CAAC,OAAkB;gBAChC,SAAS,EAAE,IAAI,CAAC,SAAoB;IACpC,YAAA,YAAY,EAAE,IAAI,CAAC,eAAe,EAAE;aACrC,EAAE,MAAM,CAAC,CAAA;IAEV,QAAA,OAAO,CAAC,CAAA;SACT;QAED,cAAc,GAAA;IACZ,QAAA,MAAM,CAAC,GAAG,KAAK,CAAC,cAAc,EAAE,CAAA;IAEhC,QAAA,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAA;IAE3B,QAAA,OAAO,CAAC,CAAA;SACT;QAED,aAAa,GAAA;IACX,QAAA,OAAO,CAAC,CAAA;SACT;QAED,KAAK,GAAA;YACH,KAAK,CAAC,KAAK,EAAE,CAAA;SACd;QAED,OAAO,GAAA;YACL,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,IAA0B,KAAI;IACrD,YAAA,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE;IACxB,gBAAA,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAA;IACvB,aAAA;IACH,SAAC,CAAC,CAAA;IACF,QAAA,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAA;YAE1B,KAAK,CAAC,OAAO,EAAE,CAAA;SAChB;IACF,CAAA;IAED,sBAAsB,CAAC,GAAG,CAAC,SAAS,EAAE,8BAA8B,CAAC;;IChYrE;;;;IAIG;IAqBH;;IAEG;IACH,MAAM,mBAAoB,SAAQ,uBAAuB,CAAA;IASvD,IAAA,WAAA,CAAa,SAAoB,EAAE,MAAc,EAAE,MAA8C,EAAA;IAC/F,QAAA,KAAK,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,CAAA;IAEhC,QAAA,IAAI,CAAC,IAAI,GAAG,OAAO,CAAA;IAEnB,QAAA,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC;IAE9B,YAAA,SAAS,EAAE;IACT,gBAAA,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI;IAC7D,aAAA;IACD,YAAA,eAAe,EAAE;IACf,gBAAA,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI;IAC9B,aAAA;IACD,YAAA,aAAa,EAAE;IACb,gBAAA,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI;IAC/B,aAAA;IACD,YAAA,UAAU,EAAE;IACV,gBAAA,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI;IAC9B,aAAA;IACD,YAAA,SAAS,EAAE;IACT,gBAAA,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI;IACzD,aAAA;IACD,YAAA,gBAAgB,EAAE;IAChB,gBAAA,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI;IAC9B,aAAA;IACD,YAAA,UAAU,EAAE;IACV,gBAAA,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI;IACzD,aAAA;aAEF,EAAE,IAAI,CAAC,UAAU,EAAE;IAElB,YAAA,UAAU,EAAE,IAAI;IAChB,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,IAAI,EAAE,IAAI;IAEV,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IAEhB,SAAA,CAAC,CAAA;IAEF,QAAA,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;SAClB;IAED,IAAA,IAAI,CAAE,MAA8C,EAAA;IAClD,QAAA,IAAI,CAAC,GAAG,MAAM,IAAI,EAAE,CAAA;YAEpB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAA;YACzC,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC,CAAC,CAAC,eAAe,EAAE,IAAI,CAAC,CAAA;YACxD,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,CAAC,CAAC,aAAa,EAAE,KAAK,CAAC,CAAA;YACrD,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,KAAK,CAAC,CAAA;YAC/C,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,SAAS,EAAE,GAAG,CAAC,CAAA;YAC3C,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,CAAC,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAA;YAC3D,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,GAAG,CAAC,CAAA;IAE7C,QAAA,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;SACd;IAED,IAAA,UAAU,CAAE,KAAoB,EAAA;IAC9B,QAAA,IAAI,IAAI,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,CAAA;IACzD,QAAA,IAAI,QAAQ,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAA;YAE1D,IAAI,WAAW,GAAG,IAAI,WAAW,CAC/B,QAAQ,EACR,IAAI,CAAC,eAAe,CAAC;gBACnB,SAAS,EAAE,IAAI,CAAC,SAAS;gBACzB,eAAe,EAAE,IAAI,CAAC,eAAe;gBACrC,aAAa,EAAE,IAAI,CAAC,aAAa;gBACjC,UAAU,EAAE,IAAI,CAAC,UAAU;gBAC3B,SAAS,EAAE,IAAI,CAAC,SAAS;gBACzB,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;gBACvC,UAAU,EAAE,IAAI,CAAC,UAAU;IAC5B,SAAA,CAAC,CACH,CAAA;YAED,OAAO;gBACL,UAAU,EAAE,CAAE,WAAW,CAAE;aAC5B,CAAA;SACF;QAED,UAAU,CAAE,IAAoB,EAAE,IAAiC,EAAA;IACjE,QAAA,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAM,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAA;YAChE,IAAI,SAAS,GAAG,EAAE,CAAA;IAElB,QAAA,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAE;IAC1B,YAAA,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,EAAC,QAAQ,EAAE,QAAQ,CAAC,QAAQ,EAAC,CAAC,CAAA;IACxD,SAAA;IAED,QAAA,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;IACvB,YAAA,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,EAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,EAAC,CAAC,CAAA;IAClD,SAAA;YAED,IAAI,CAAC,UAAU,CAAE,CAAC,CAAE,CAAC,aAAa,CAAC,SAAS,CAAC,CAAA;SAC9C;QAED,aAAa,GAAA;IACX,QAAA,OAAO,GAAG,CAAA;SACX;IACF,CAAA;IAED,sBAAsB,CAAC,GAAG,CAAC,OAAO,EAAE,mBAAmB,CAAC;;;;ICzIxD;;;;IAIG;IAUH,MAAM,WAAW,GAAG,IAAI,WAAW,CAAC;QAClC,CAAC,EAAE,CAAC,EAAE,CAAC;QACP,CAAC,EAAE,CAAC,EAAE,CAAC;IACR,CAAA,CAAC,CAAA;IAQF,SAASgF,SAAO,CAAC,IAAsB,EAAA;IACrC,IAAA,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,QAAS,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAA;IACzC,IAAA,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAA;IAChB,IAAA,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;IAChB,IAAA,OAAO,CAAC,CAAA;IACV,CAAC;IAED;;IAEG;IACH,MAAM,YAAa,SAAQ,UAAU,CAAA;IAGnC;;;;;;;;;IASG;QACH,WAAa,CAAA,IAAsB,EAAE,MAAA,GAAoC,EAAE,EAAA;IACzE,QAAA,KAAK,CAAC;gBACJ,QAAQ,EAAE,IAAI,YAAY,CAACA,SAAO,CAAC,IAAI,CAAC,CAAC;gBACzC,KAAK,EAAE,IAAI,YAAY,CAACA,SAAO,CAAC,IAAI,CAAC,CAAC;IACtC,YAAA,KAAK,EAAE,YAAY,CAACA,SAAO,CAAC,IAAI,CAAC,EAAEA,SAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACrD,MAAM,EAAE,IAAI,YAAY,CAACA,SAAO,CAAC,IAAI,CAAC,CAAC;gBACvC,OAAO,EAAE,IAAI,CAAC,OAAO;aACtB,EAAE,MAAM,CAAC,CAAA;YAnBZ,IAAY,CAAA,YAAA,GAAG,aAAa,CAAA;IAqB1B,QAAA,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,QAAS,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAA;IACzC,QAAA,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAA;IAChB,QAAA,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;YAEhB,IAAI,CAAC,aAAa,CAAC;IACjB,YAAA,KAAK,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,YAAY,CAAC,CAAC,CAAC,EAAE;IAClD,SAAA,CAAC,CAAA;YACF,IAAI,CAAC,aAAa,CAAC;IACjB,YAAA,MAAM,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,YAAY,CAAC,EAAE,CAAC,EAAE;IACnD,SAAA,CAAC,CAAA;IAEF,QAAA,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC,CAAC,CAAC,CAAA;IACjC,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAA;YAExB,IAAI,CAAC,SAAS,EAAE,CAAA;SACjB;QAED,aAAa,CAAE,OAAkC,EAAE,EAAA;IACjD,QAAA,MAAM,EAAE,GAAG,IAAI,CAAC,IAAI,CAAA;IACpB,QAAA,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;YAEhB,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAiB,CAAA;YAElD,IAAI,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,WAAW,CAAA;YACnD,IAAI,SAAS,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,YAAY,CAAA;YAEzD,IAAI,IAAI,CAAC,QAAQ,EAAE;IACjB,YAAA,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAA;IACxB,YAAA,SAAS,GAAG,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAA;IACrC,YAAA,UAAU,CAAC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAA;IACvC,SAAA;YAED,IAAI,IAAI,CAAC,MAAM,EAAE;IACf,YAAA,MAAM,GAAG,IAAI,CAAC,MAAM,CAAA;IACpB,YAAA,OAAO,GAAG,UAAU,CAAC,MAAM,CAAC,KAAK,CAAA;IACjC,YAAA,UAAU,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAA;IACrC,SAAA;YAED,IAAI,IAAI,CAAC,IAAI,EAAE;IACb,YAAA,IAAI,GAAG,IAAI,CAAC,IAAI,CAAA;IAChB,YAAA,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,KAAK,CAAA;IAC7B,YAAA,UAAU,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAA;IACnC,SAAA;YAED,IAAI,IAAI,CAAC,GAAG,EAAE;IACZ,YAAA,GAAG,GAAG,IAAI,CAAC,GAAG,CAAA;IACd,YAAA,IAAI,GAAG,UAAU,CAAC,GAAG,CAAC,KAAK,CAAA;IAC3B,YAAA,UAAU,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAA;IAClC,SAAA;YAED,IAAI,IAAI,CAAC,KAAK,EAAE;IACd,YAAA,KAAK,GAAG,IAAI,CAAC,KAAK,CAAA;IAClB,YAAA,MAAM,GAAG,UAAU,CAAC,KAAK,CAAC,KAAK,CAAA;IAC/B,YAAA,UAAU,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAA;IACpC,SAAA;YAED,IAAI,IAAI,CAAC,WAAW,EAAE;IACpB,YAAA,WAAW,GAAG,IAAI,CAAC,WAAW,CAAA;IAC9B,YAAA,YAAY,GAAG,UAAU,CAAC,WAAW,CAAC,KAAK,CAAA;IAC3C,YAAA,UAAU,CAAC,WAAW,CAAC,WAAW,GAAG,IAAI,CAAA;IAC1C,SAAA;YAED,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAA;IACrB,QAAA,IAAI,QAAQ,CAAA;IACZ,QAAA,IAAI,QAAQ,GAAG,IAAI,GAAG,IAAI,CAAE,CAAC,CAAE,GAAG,IAAI,CAAA;YAEtC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;IACtB,YAAA,EAAE,GAAG,CAAC,GAAG,CAAC,CAAA;IACV,YAAA,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;IACb,YAAA,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;IAET,YAAA,IAAI,QAAQ,EAAE;IACZ,gBAAA,SAAS,CAAE,CAAC,CAAE,GAAG,SAAS,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,QAAQ,CAAE,EAAE,CAAE,CAAA;IACpD,gBAAA,SAAS,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,SAAS,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,QAAQ,CAAE,EAAE,GAAG,CAAC,CAAE,CAAA;IAC5D,gBAAA,SAAS,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,SAAS,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,QAAQ,CAAE,EAAE,GAAG,CAAC,CAAE,CAAA;IAE5D,gBAAA,SAAS,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,SAAS,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,QAAQ,CAAE,EAAE,GAAG,CAAC,CAAE,CAAA;IAC5D,gBAAA,SAAS,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,SAAS,CAAE,CAAC,GAAG,EAAE,CAAE,GAAG,QAAQ,CAAE,EAAE,GAAG,CAAC,CAAE,CAAA;IAC7D,gBAAA,SAAS,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,SAAS,CAAE,CAAC,GAAG,EAAE,CAAE,GAAG,QAAQ,CAAE,EAAE,GAAG,CAAC,CAAE,CAAA;IAC9D,aAAA;IAED,YAAA,IAAI,MAAM,EAAE;IACV,gBAAA,OAAO,CAAE,CAAC,CAAE,GAAG,OAAO,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,CAAC,MAAM,CAAE,EAAE,CAAE,CAAA;oBAC/C,OAAO,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,OAAO,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,CAAC,MAAM,CAAE,EAAE,GAAG,CAAC,CAAE,CAAA;oBACvD,OAAO,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,OAAO,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,CAAC,MAAM,CAAE,EAAE,GAAG,CAAC,CAAE,CAAA;oBAEvD,OAAO,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,OAAO,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,CAAC,MAAM,CAAE,EAAE,GAAG,CAAC,CAAE,CAAA;oBACvD,OAAO,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,OAAO,CAAE,CAAC,GAAG,EAAE,CAAE,GAAG,CAAC,MAAM,CAAE,EAAE,GAAG,CAAC,CAAE,CAAA;oBACxD,OAAO,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,OAAO,CAAE,CAAC,GAAG,EAAE,CAAE,GAAG,CAAC,MAAM,CAAE,EAAE,GAAG,CAAC,CAAE,CAAA;IACzD,aAAA;gBAED,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;IACtB,gBAAA,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;IAEb,gBAAA,IAAI,KAAK,EAAE;wBACT,MAAM,CAAE,CAAC,CAAE,GAAG,KAAK,CAAE,EAAE,CAAE,CAAA;IACzB,oBAAA,MAAM,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,KAAK,CAAE,EAAE,GAAG,CAAC,CAAE,CAAA;IACjC,oBAAA,MAAM,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,KAAK,CAAE,EAAE,GAAG,CAAC,CAAE,CAAA;IAClC,iBAAA;IAED,gBAAA,IAAI,WAAW,EAAE;wBACf,YAAY,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,WAAW,CAAE,CAAC,CAAE,CAAA;IACzC,iBAAA;IACF,aAAA;IAED,YAAA,IAAI,IAAI,EAAE;IACR,gBAAA,QAAQ,GAAG,IAAI,CAAE,CAAC,CAAE,CAAA;IAEpB,gBAAA,IAAI,QAAQ,KAAK,IAAI,CAAE,CAAC,CAAE,EAAE;IAC1B,oBAAA,KAAK,CAAE,CAAC,CAAE,GAAG,QAAQ,CAAA;IACrB,oBAAA,KAAK,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,QAAQ,CAAA;IACzB,oBAAA,KAAK,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,QAAQ,CAAA;IACzB,oBAAA,KAAK,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,QAAQ,CAAA;IAC1B,iBAAA;IAAM,qBAAA;IACL,oBAAA,KAAK,CAAE,CAAC,CAAE,GAAG,QAAQ,CAAA;IACrB,oBAAA,KAAK,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,QAAQ,CAAA;IACzB,oBAAA,KAAK,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,QAAQ,CAAA;IACzB,oBAAA,KAAK,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,QAAQ,CAAA;IAC1B,iBAAA;oBAED,QAAQ,GAAG,QAAQ,CAAA;IACpB,aAAA;IAED,YAAA,IAAI,GAAG,EAAE;oBACP,IAAI,CAAE,CAAC,CAAE,GAAG,GAAG,CAAE,EAAE,CAAE,CAAA;IACrB,gBAAA,IAAI,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,GAAG,CAAE,EAAE,GAAG,CAAC,CAAE,CAAA;IAC7B,gBAAA,IAAI,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,GAAG,CAAE,EAAE,GAAG,CAAC,CAAE,CAAA;oBAE7B,IAAI,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,CAAC,GAAG,CAAE,EAAE,CAAE,CAAA;IAC1B,gBAAA,IAAI,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,CAAC,GAAG,CAAE,EAAE,GAAG,CAAC,CAAE,CAAA;IAC9B,gBAAA,IAAI,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,CAAC,GAAG,CAAE,EAAE,GAAG,CAAC,CAAE,CAAA;IAE9B,gBAAA,IAAI,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,GAAG,CAAE,EAAE,GAAG,CAAC,CAAE,CAAA;IAC7B,gBAAA,IAAI,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,GAAG,CAAE,EAAE,GAAG,CAAC,CAAE,CAAA;IAC7B,gBAAA,IAAI,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,GAAG,CAAE,EAAE,GAAG,CAAC,CAAE,CAAA;IAE7B,gBAAA,IAAI,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,CAAC,GAAG,CAAE,EAAE,GAAG,CAAC,CAAE,CAAA;IAC9B,gBAAA,IAAI,CAAE,CAAC,GAAG,EAAE,CAAE,GAAG,CAAC,GAAG,CAAE,EAAE,GAAG,CAAC,CAAE,CAAA;IAC/B,gBAAA,IAAI,CAAE,CAAC,GAAG,EAAE,CAAE,GAAG,CAAC,GAAG,CAAE,EAAE,GAAG,CAAC,CAAE,CAAA;IAChC,aAAA;IACF,SAAA;SACF;QAED,SAAS,GAAA;YACP,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAA;YACtC,IAAI,CAAC,KAAK,EAAE;IAAE,YAAA,GAAG,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;gBAAC,OAAO;IAAE,SAAA;IACnD,QAAA,MAAM,SAAS,GAAG,KAAK,CAAC,KAAgC,CAAA;YACxD,MAAM,CAAC,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAA;YAElC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;IAC1B,YAAA,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAA;IAChB,YAAA,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAA;IAEhB,YAAA,SAAS,CAAC,GAAG,CAAC,WAAW,EAAE,EAAE,CAAC,CAAA;gBAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;IAC1B,gBAAA,SAAS,CAAE,EAAE,GAAG,CAAC,CAAE,IAAI,EAAE,CAAA;IAC1B,aAAA;IACF,SAAA;SACF;IACF;;ICxND;;;;IAIG;IAmBH;;IAEG;IACH,MAAM,oBAAqB,SAAQ,uBAAuB,CAAA;IAKxD,IAAA,WAAA,CAAa,SAAoB,EAAE,MAAc,EAAE,MAA+C,EAAA;IAChG,QAAA,KAAK,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,CAAA;IAEhC,QAAA,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAA;IAEpB,QAAA,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC;IAE9B,YAAA,MAAM,EAAE;IACN,gBAAA,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,OAAO,EAAE,IAAI;IAChD,aAAA;IACD,YAAA,OAAO,EAAE;IACP,gBAAA,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;IACjD,aAAA;IACD,YAAA,WAAW,EAAE;IACX,gBAAA,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI;IAC/B,aAAA;aAEF,EAAE,IAAI,CAAC,UAAU,EAAE;IAElB,YAAA,IAAI,EAAE,IAAI;IACV,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,SAAS,EAAE,IAAI;IAEhB,SAAA,CAAC,CAAA;IAEF,QAAA,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;SAClB;IAED,IAAA,IAAI,CAAE,MAA+C,EAAA;IACnD,QAAA,IAAI,CAAC,GAAG,MAAM,IAAI,EAAE,CAAA;YACpB,CAAC,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,WAAW,CAAC,CAAA;YACpD,CAAC,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAA;YAC/C,CAAC,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAA;YAC/C,CAAC,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,CAAA;IAE5C,QAAA,IAAI,CAAC,CAAC,OAAO,KAAK,KAAK,EAAE;IACvB,YAAA,IAAI,CAAC,MAAM,GAAG,CAAC,CAAA;IAChB,SAAA;IAAM,aAAA,IAAI,CAAC,CAAC,OAAO,KAAK,QAAQ,EAAE;IACjC,YAAA,IAAI,CAAC,MAAM,GAAG,CAAC,CAAA;IAChB,SAAA;IAAM,aAAA,IAAI,CAAC,CAAC,OAAO,KAAK,MAAM,EAAE;IAC/B,YAAA,IAAI,CAAC,MAAM,GAAG,EAAE,CAAA;IACjB,SAAA;IAAM,aAAA;gBACL,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAA;IACpC,SAAA;YAED,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,GAAG,CAAC,CAAA;YACvC,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,KAAK,CAAC,CAAA;IAEjD,QAAA,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;SACd;IAED,IAAA,eAAe,CAAE,MAAkC,EAAA;YACjD,OAAO,MAAM,CAAC,MAAM,CAAC;gBACnB,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,OAAO,EAAE,IAAI,CAAC,OAAO;IACrB,YAAA,WAAW,EAAE,IAAI;gBACjB,WAAW,EAAE,IAAI,CAAC,WAAW;aAC9B,EAAE,MAAM,CAAC,CAAA;SACX;IAED,IAAA,aAAa,CAAE,IAAe,EAAA;IAC5B,QAAA,OAAO,IAAI,CAAC,OAAO,EAAE,GAAG,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;SACtD;IAED,IAAA,UAAU,CAAE,KAAoB,EAAA;YAC9B,IAAI,UAAU,GAAmB,EAAE,CAAA;YACnC,IAAI,WAAW,GAAc,EAAE,CAAA;IAE/B,QAAA,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,OAAO,IAAG;IACnC,YAAA,IAAI,OAAO,CAAC,YAAY,GAAG,CAAC;oBAAE,OAAM;IACpC,YAAA,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;IAEzB,YAAA,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,eAAe,EAAE,CAAC,CAAA;IACxD,YAAA,IAAI,MAAM,GAAG,MAAM,CAAC,qBAAqB,EAAE,CAAA;IAC3C,YAAA,IAAI,MAAM,GAAG,MAAM,CAAC,wBAAwB,EAAE,CAAA;gBAC9C,IAAI,MAAM,GAAG,MAAM,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAA;IAC7D,YAAA,IAAI,OAAO,GAAG,MAAM,CAAC,oBAAoB,EAAE,CAAA;gBAC3C,IAAI,OAAO,GAAG,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAA;IAE9D,YAAA,UAAU,CAAC,IAAI,CACb,IAAI,YAAY,EACb;oBACC,QAAQ,EAAE,MAAM,CAAC,QAAQ;oBACzB,MAAM,EAAE,MAAM,CAAC,QAAQ;oBACvB,GAAG,EAAE,MAAM,CAAC,MAAM;oBAClB,KAAK,EAAE,MAAM,CAAC,KAAK;oBACnB,IAAI,EAAE,OAAO,CAAC,IAAI;oBAClB,OAAO,EAAE,OAAO,CAAC,OAAO;IACzB,aAAA,GACD,IAAI,CAAC,eAAe,EAAE,CACvB,CACF,CAAA;IACH,SAAC,EAAE,KAAK,CAAC,YAAY,EAAE,CAAC,CAAA;YAExB,OAAO;IACL,YAAA,UAAU,EAAE,UAAU;IACtB,YAAA,WAAW,EAAE,WAAW;aACzB,CAAA;SACF;QAED,UAAU,CAAE,IAA8E,EAAE,IAA0D,EAAA;IACpJ,QAAA,IAAI,GAAG,IAAI,IAAI,EAAE,CAAA;YAEjB,IAAI,CAAC,GAAG,CAAC,CAAA;IACT,QAAA,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAA;YAE/B,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;gBACtB,IAAI,UAAU,GAAG,EAAE,CAAA;IACnB,YAAA,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,WAAW,CAAE,CAAC,CAAE,EAAE,IAAI,CAAC,eAAe,EAAE,CAAC,CAAA;gBAEtE,IAAI,IAAI,CAAC,QAAQ,EAAE;IACjB,gBAAA,IAAI,MAAM,GAAG,MAAM,CAAC,qBAAqB,EAAE,CAAA;IAC3C,gBAAA,IAAI,MAAM,GAAG,MAAM,CAAC,wBAAwB,EAAE,CAAA;IAC9C,gBAAA,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE;wBACxB,QAAQ,EAAE,MAAM,CAAC,QAAQ;wBACzB,MAAM,EAAE,MAAM,CAAC,QAAQ;wBACvB,GAAG,EAAE,MAAM,CAAC,MAAM;IACnB,iBAAA,CAAC,CAAA;IACH,aAAA;IAED,YAAA,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,EAAE;oBAC7B,IAAI,OAAO,GAAG,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAA;IAC9D,gBAAA,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,EAAC,IAAI,EAAE,OAAO,CAAC,IAAI,EAAC,CAAC,CAAA;IAChD,aAAA;gBAED,IAAI,IAAI,CAAC,KAAK,EAAE;oBACd,IAAI,MAAM,GAAG,MAAM,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAA;IAC7D,gBAAA,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,EAAC,KAAK,EAAE,MAAM,CAAC,KAAK,EAAC,CAAC,CAAA;IACjD,aAAA;gBAED,IAAI,CAAC,UAAU,CAAE,CAAC,CAAE,CAAC,aAAa,CAAC,UAAU,CAAC,CAAA;IAC/C,SAAA;SACF;IAED,IAAA,aAAa,CAAE,MAA+C,EAAA;YAC5D,IAAI,OAAO,GAAG,KAAK,CAAA;YACnB,IAAI,IAAI,GAAG,EAAE,CAAA;IAEb,QAAA,IAAI,MAAM,IAAI,MAAM,CAAC,OAAO,EAAE;gBAC5B,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAA;IACtC,SAAA;YAED,KAAK,CAAC,aAAa,CAAC,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC,CAAA;IAE1C,QAAA,OAAO,IAAI,CAAA;SACZ;IACF,CAAA;IAED,sBAAsB,CAAC,GAAG,CAAC,QAAQ,EAAE,oBAAoB,CAAC;;ICnL1D;;;;IAIG;IA+BH;;IAEG;IACH,MAAM,oBAAqB,SAAQ,uBAAuB,CAAA;;IAUxD,IAAA,WAAA,CAAa,SAAoB,EAAE,MAAc,EAAE,MAA+C,EAAA;IAChG,QAAA,KAAK,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,CAAA;IAEhC,QAAA,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAA;IAEpB,QAAA,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC;IAE9B,YAAA,UAAU,EAAE;IACV,gBAAA,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,OAAO,EAAE,IAAI;IACjD,aAAA;IACD,YAAA,UAAU,EAAE;IACV,gBAAA,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,OAAO,EAAE,IAAI;IAC7D,aAAA;IACD,YAAA,QAAQ,EAAE;IACR,gBAAA,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI;IAC/B,aAAA;IACD,YAAA,cAAc,EAAE,IAAI;IACpB,YAAA,SAAS,EAAE,IAAI;IACf,YAAA,eAAe,EAAE,IAAI;IAEtB,SAAA,EAAE,IAAI,CAAC,UAAU,CAAC,CAAA;;IAInB,QAAA,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;SAClB;IAED,IAAA,IAAI,CAAE,MAA+C,EAAA;IACnD,QAAA,IAAI,CAAC,GAAG,MAAM,IAAI,EAAE,CAAA;YACpB,CAAC,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAA;YACjD,CAAC,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,GAAG,CAAC,CAAA;YAC1C,CAAC,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,CAAA;YAC5C,CAAC,CAAC,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,SAAS,EAAE,KAAK,CAAC,CAAA;YAC1C,CAAC,CAAC,gBAAgB,GAAG,QAAQ,CAAC,CAAC,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAA;YAEvD,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,EAAE,CAAC,CAAA;YAC5C,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,GAAG,CAAC,CAAA;YAC7C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAA;IAE3C,QAAA,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;SACd;IAED,IAAA,UAAU,CAAE,KAAoB,EAAA;YAC9B,IAAI,MAAM,GAAG,CAAC,CAAA;YACd,MAAM,QAAQ,GAAU,EAAE,CAAA;YAC1B,MAAM,eAAe,GAAiB,EAAE,CAAA;IAExC,QAAA,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,OAAO,IAAG;gBACnC,IAAI,OAAO,CAAC,YAAY,GAAG,CAAC,IAAI,OAAO,CAAC,SAAS,EAAE;oBAAE,OAAM;IAE3D,YAAA,MAAM,WAAW,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC,CAAA;IAC5C,YAAA,MAAM,IAAI,GAAG,WAAW,CAAC,OAAO,CAC9B,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,EAC/C,IAAI,CAAC,cAAc,EAAE,EAAE,IAAI,CAAC,eAAe,EAAE,CAC9C,CAAA;IAED,YAAA,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAA;IAC1B,YAAA,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;IACnB,YAAA,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;IACnC,SAAC,EAAE,KAAK,CAAC,YAAY,EAAE,CAAC,CAAA;IAExB,QAAA,MAAM,QAAQ,GAAG;IACf,YAAA,KAAK,EAAE,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;IACnC,YAAA,GAAG,EAAE,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;IACjC,YAAA,IAAI,EAAE,IAAI,YAAY,CAAC,MAAM,CAAC;IAC9B,YAAA,KAAK,EAAE,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;IACnC,YAAA,OAAO,EAAc,EAAE;aACxB,CAAA;IAED,QAAA,IAAI,OAAO,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC,CAAA;YAEtC,IAAI,MAAM,GAAG,CAAC,CAAA;IAEd,QAAA,QAAQ,CAAC,OAAO,CAAC,UAAU,IAAI,EAAA;IAC7B,YAAA,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,GAAG,CAAC,CAAC,CAAA;IAC1C,YAAA,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,GAAG,CAAC,CAAC,CAAA;gBACtC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAA;IACpC,YAAA,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,GAAG,CAAC,CAAC,CAAA;gBAC1C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,KAAM,EAAE,MAAM,CAAC,CAAA;IACxC,YAAA,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAA;IAC5B,SAAC,CAAC,CAAA;IAEF,QAAA,IAAI,MAAM,EAAE;IACV,YAAA,QAAQ,CAAC,OAAO,GAAG,IAAI,UAAU,CAC/B,OAAO,EAAE,KAAK,CAAC,YAAY,EAAE,CAC9B,CAAA;IACF,SAAA;IAED,QAAA,MAAM,cAAc,GAAG,IAAI,cAAc,CACvC;gBACE,SAAS,EAAE,QAAQ,CAAC,KAAK;gBACzB,SAAS,EAAE,QAAQ,CAAC,GAAG;gBACvB,KAAK,EAAE,QAAQ,CAAC,KAAK;gBACrB,MAAM,EAAE,QAAQ,CAAC,KAAK;gBACtB,MAAM,EAAE,QAAQ,CAAC,IAAI;gBACrB,OAAO,EAAE,QAAQ,CAAC,OAAO;aAC1B,EACD,IAAI,CAAC,eAAe,CAAC;gBACnB,SAAS,EAAE,IAAI,CAAC,SAAS;gBACzB,cAAc,EAAE,IAAI,CAAC,cAAc;gBACnC,eAAe,EAAE,IAAI,CAAC,eAAe;IACrC,YAAA,YAAY,EAAE,IAAI;IACnB,SAAA,CAAC,CACH,CAAA;YAED,OAAO;gBACL,UAAU,EAAE,CAAE,cAA+D,CAAE;IAC/E,YAAA,QAAQ,EAAE,QAAQ;IAClB,YAAA,eAAe,EAAE,eAAe;IAChC,YAAA,QAAQ,EAAE,QAAQ;aACnB,CAAA;SACF;QAGD,UAAU,CAAE,IAAS,EAAE,IAA0G,EAAA;IAC/H,QAAA,IAAI,GAAG,IAAI,IAAI,EAAE,CAAA;YAEjB,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,IAAI,CAAC,KAAK,EAAE,CAAA;gBACZ,OAAM;IACP,SAAA;YAED,IAAI,YAAY,GAAG,EAAE,CAAA;IAErB,QAAA,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,EAAE;gBAC7B,IAAI,MAAM,GAAG,CAAC,CAAA;gBAEd,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,WAAW,KAAI;IAC3C,gBAAA,IAAI,IAAI,GAAG,WAAW,CAAC,OAAO,CAC5B,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,EAC/C,IAAI,CAAC,cAAc,EAAE,EAAE,IAAI,CAAC,eAAe,EAAE,CAC9C,CAAA;oBACD,IAAI,IAAI,CAAC,KAAK,EAAE;IACd,oBAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,GAAG,CAAC,CAAC,CAAA;IAChD,iBAAA;IACD,gBAAA,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,EAAE;IAC7B,oBAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAA;IAC1C,iBAAA;IACD,gBAAA,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAA;IAC5B,aAAC,CAAC,CAAA;gBAEF,IAAI,IAAI,CAAC,KAAK,EAAE;IACd,gBAAA,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE;IAC1B,oBAAA,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK;IAC1B,oBAAA,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK;IAC5B,iBAAA,CAAC,CAAA;IACH,aAAA;IAED,YAAA,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,EAAE;IAC7B,gBAAA,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE;IAC1B,oBAAA,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI;IAC3B,iBAAA,CAAC,CAAA;IACH,aAAA;IACF,SAAA;YAEA,IAAI,CAAC,UAAU,CAAE,CAAC,CAA6B,CAAC,aAAa,CAAC,YAAY,CAAC,CAAA;SAC7E;IACF,CAAA;IAED,sBAAsB,CAAC,GAAG,CAAC,QAAQ,EAAE,oBAAoB,CAAC;;IC/M1D;;;;IAIG;IAWH;;IAEG;IACH,MAAM,kBAAmB,SAAQ,qBAAqB,CAAA;IAGpD,IAAA,WAAA,CAAa,SAAoB,EAAE,MAAc,EAAE,MAAiE,EAAA;IAClH,QAAA,KAAK,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,CAAA;IAEhC,QAAA,IAAI,CAAC,IAAI,GAAG,MAAM,CAAA;IAElB,QAAA,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC;IAE9B,YAAA,MAAM,EAAE;IACN,gBAAA,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,OAAO,EAAE,IAAI;IAChD,aAAA;aAEF,EAAE,IAAI,CAAC,UAAU,EAAE;IAClB,YAAA,WAAW,EAAE,IAAI;IACjB,YAAA,WAAW,EAAE,IAAI;IAClB,SAAA,CAAC,CAAA;SACH;IAED,IAAA,IAAI,CAAE,MAAgD,EAAA;IACpD,QAAA,IAAI,CAAC,GAAG,MAAM,IAAI,EAAE,CAAA;IACpB,QAAA,CAAC,CAAC,WAAW,GAAG,GAAG,CAAA;YACnB,CAAC,CAAC,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,GAAG,CAAC,CAAA;YACpC,CAAC,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,CAAA;IAC5C,QAAA,CAAC,CAAC,WAAW,GAAG,KAAK,CAAA;YAErB,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAA;IAEnC,QAAA,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;SACd;IAED,IAAA,SAAS,CAAE,OAAgB,EAAA;IACzB,QAAA,IAAI,WAAW,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC,CAAA;YAE1C,OAAO,IAAI,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,eAAe,CAAC;IAC9C,YAAA,WAAW,EAAE,KAAK;gBAClB,gBAAgB,EAAE,WAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC;IAC7D,SAAA,CAAC,CAAC,CAAA;SACJ;IACF,CAAA;IAED,sBAAsB,CAAC,GAAG,CAAC,MAAM,EAAE,kBAAkB,CAAC;;IC5DtD;;;;IAIG;IAaH;;IAEG;IACH,MAAM,uBAAwB,SAAQ,uBAAuB,CAAA;IAC3D,IAAA,WAAA,CAAa,SAAoB,EAAE,MAAc,EAAE,MAAkD,EAAA;IACnG,QAAA,KAAK,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,CAAA;IAEhC,QAAA,IAAI,CAAC,IAAI,GAAG,WAAW,CAAA;IAEvB,QAAA,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC;IAC9B,YAAA,YAAY,EAAE,IAAI;IAClB,YAAA,eAAe,EAAE,IAAI;IACtB,SAAA,EAAE,IAAI,CAAC,UAAU,CAAC,CAAA;IAEnB,QAAA,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;SAClB;IAED,IAAA,IAAI,CAAE,MAAkD,EAAA;IACtD,QAAA,IAAI,CAAC,GAAG,MAAM,IAAI,EAAE,CAAA;YACpB,CAAC,CAAC,gBAAgB,GAAG,QAAQ,CAAC,CAAC,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAA;IAEvD,QAAA,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;SACd;IAED,IAAA,UAAU,CAAE,KAAoB,EAAA;IAC9B,QAAA,IAAI,YAAY,GAAG,IAAI,YAAY,CAChC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,EAAE,CAAsB,EAC5D,IAAI,CAAC,eAAe,CAAC;gBACpB,YAAY,EAAE,IAAI,CAAC,YAAY;IAC/B,YAAA,YAAY,EAAE,IAAI;gBAClB,eAAe,EAAE,IAAI,CAAC,eAAe;IACtC,SAAA,CAA4B,CAC9B,CAAA;YAED,OAAO;gBACL,UAAU,EAAE,CAAE,YAAyD,CAAE;aAC1E,CAAA;SACF;QAED,UAAU,CAAE,IAAoB,EAAE,IAAiC,EAAA;IACjE,QAAA,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAM,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAA;YAChE,IAAI,UAAU,GAA8B,EAAE,CAAA;IAE9C,QAAA,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAE;IAC1B,YAAA,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,EAAC,QAAQ,EAAE,QAAQ,CAAC,QAAQ,EAAC,CAAC,CAAA;IACzD,SAAA;IAED,QAAA,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;IACvB,YAAA,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,EAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,EAAC,CAAC,CAAA;IACnD,SAAA;IAED,QAAA,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,EAAE;IACxB,YAAA,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,EAAC,MAAM,EAAE,QAAQ,CAAC,MAAM,EAAC,CAAC,CAAA;IACrD,SAAA;YAED,IAAI,CAAC,UAAU,CAAE,CAAC,CAAE,CAAC,aAAa,CAAC,UAAU,CAAC,CAAA;SAC/C;IACF,CAAA;IAED,sBAAsB,CAAC,GAAG,CAAC,WAAW,EAAE,uBAAuB,CAAC;;IC5EhE;;;;IAIG;IAQH,SAAS,OAAO,CAAC,IAAgB,EAAA;QAC/B,MAAM,CAAC,GAAG,IAAI,CAAC,QAAS,CAAC,MAAM,GAAG,CAAC,CAAA;IACnC,IAAA,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAA;IAChB,IAAA,OAAO,EAAE,GAAG,CAAC,GAAG,CAAC,CAAA;IACnB,CAAC;IAED;;IAEG;IACH,MAAM,WAAY,SAAQ,MAAM,CAAA;IAK9B;;;;;IAKG;QACH,WAAa,CAAA,IAAgB,EAAE,MAAA,GAAoC,EAAE,EAAA;IACnE,QAAA,KAAK,CAAC;gBACJ,QAAQ,EAAE,IAAI,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBACzC,KAAK,EAAE,IAAI,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aACvC,EAAE,MAAM,CAAC,CAAA;YAdZ,IAAM,CAAA,MAAA,GAAG,IAAI,CAAA;YACb,IAAY,CAAA,YAAA,GAAG,WAAW,CAAA;YAC1B,IAAc,CAAA,cAAA,GAAG,WAAW,CAAA;IAc1B,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAA;SACzB;IAED,IAAA,aAAa,CAAE,IAAyB,EAAA;YACtC,IAAI,QAAQ,EAAE,KAAK,CAAA;YACnB,IAAI,YAAY,EAAE,SAAS,CAAA;YAE3B,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAiB,CAAA;YAElD,IAAI,IAAI,CAAC,QAAQ,EAAE;IACjB,YAAA,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAA;IACxB,YAAA,YAAY,GAAG,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAA;IACxC,YAAA,UAAU,CAAC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAA;IACvC,SAAA;YAED,IAAI,IAAI,CAAC,KAAK,EAAE;IACd,YAAA,KAAK,GAAG,IAAI,CAAC,KAAK,CAAA;IAClB,YAAA,SAAS,GAAG,UAAU,CAAC,KAAK,CAAC,KAAK,CAAA;IAClC,YAAA,UAAU,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAA;IACpC,SAAA;IAED,QAAA,IAAI,CAAC,QAAQ,IAAI,CAAC,KAAK,EAAE;IACvB,YAAA,GAAG,CAAC,IAAI,CAAC,6CAA6C,CAAC,CAAA;gBACvD,OAAM;IACP,SAAA;YAED,IAAI,CAAC,EAAE,EAAE,CAAA;IACT,QAAA,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI,CAAA;IACnB,QAAA,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAA;YAEhB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;IAC3B,YAAA,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;IACT,YAAA,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;IAEd,YAAA,IAAI,QAAQ,EAAE;oBACZ,YAAY,CAAE,EAAE,CAAE,GAAG,QAAQ,CAAE,CAAC,CAAE,CAAA;IAClC,gBAAA,YAAY,CAAE,EAAE,GAAG,CAAC,CAAE,GAAG,QAAQ,CAAE,CAAC,GAAG,CAAC,CAAE,CAAA;IAC1C,gBAAA,YAAY,CAAE,EAAE,GAAG,CAAC,CAAE,GAAG,QAAQ,CAAE,CAAC,GAAG,CAAC,CAAE,CAAA;IAE1C,gBAAA,YAAY,CAAE,EAAE,GAAG,CAAC,CAAE,GAAG,QAAQ,CAAE,CAAC,GAAG,CAAC,CAAE,CAAA;IAC1C,gBAAA,YAAY,CAAE,EAAE,GAAG,CAAC,CAAE,GAAG,QAAQ,CAAE,CAAC,GAAG,CAAC,CAAE,CAAA;IAC1C,gBAAA,YAAY,CAAE,EAAE,GAAG,CAAC,CAAE,GAAG,QAAQ,CAAE,CAAC,GAAG,CAAC,CAAE,CAAA;IAC3C,aAAA;IAED,YAAA,IAAI,KAAK,EAAE;oBACT,SAAS,CAAE,EAAE,CAAE,GAAG,KAAK,CAAE,CAAC,CAAE,CAAA;IAC5B,gBAAA,SAAS,CAAE,EAAE,GAAG,CAAC,CAAE,GAAG,KAAK,CAAE,CAAC,GAAG,CAAC,CAAE,CAAA;IACpC,gBAAA,SAAS,CAAE,EAAE,GAAG,CAAC,CAAE,GAAG,KAAK,CAAE,CAAC,GAAG,CAAC,CAAE,CAAA;IAEpC,gBAAA,SAAS,CAAE,EAAE,GAAG,CAAC,CAAE,GAAG,KAAK,CAAE,CAAC,GAAG,CAAC,CAAE,CAAA;IACpC,gBAAA,SAAS,CAAE,EAAE,GAAG,CAAC,CAAE,GAAG,KAAK,CAAE,CAAC,GAAG,CAAC,CAAE,CAAA;IACpC,gBAAA,SAAS,CAAE,EAAE,GAAG,CAAC,CAAE,GAAG,KAAK,CAAE,CAAC,GAAG,CAAC,CAAE,CAAA;IACrC,aAAA;IACF,SAAA;SACF;IACF;;IC7FD;;;;IAIG;IAkBH;;IAEG;IACH,MAAM,mBAAoB,SAAQ,uBAAuB,CAAA;IAKvD,IAAA,WAAA,CAAa,SAAoB,EAAE,MAAc,EAAE,MAA8C,EAAA;IAC/F,QAAA,KAAK,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,CAAA;IAEhC,QAAA,IAAI,CAAC,IAAI,GAAG,OAAO,CAAA;IAEnB,QAAA,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC;IAE9B,YAAA,MAAM,EAAE;IACN,gBAAA,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,OAAO,EAAE,IAAI;IAChD,aAAA;IACD,YAAA,OAAO,EAAE;IACP,gBAAA,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;IACjD,aAAA;IACD,YAAA,WAAW,EAAE;IACX,gBAAA,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI;IAC/B,aAAA;aAEF,EAAE,IAAI,CAAC,UAAU,EAAE;IAElB,YAAA,UAAU,EAAE,IAAI;IAChB,YAAA,IAAI,EAAE,IAAI;IACV,YAAA,SAAS,EAAE,IAAI;IAEhB,SAAA,CAAC,CAAA;IAEF,QAAA,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;SAClB;IAED,IAAA,IAAI,CAAE,MAA8C,EAAA;IAClD,QAAA,IAAI,CAAC,GAAG,MAAM,IAAI,EAAE,CAAA;YACpB,CAAC,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,WAAW,CAAC,CAAA;YACpD,CAAC,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAA;IAE/C,QAAA,IAAI,CAAC,CAAC,OAAO,KAAK,KAAK,EAAE;IACvB,YAAA,IAAI,CAAC,MAAM,GAAG,CAAC,CAAA;IAChB,SAAA;IAAM,aAAA,IAAI,CAAC,CAAC,OAAO,KAAK,QAAQ,EAAE;IACjC,YAAA,IAAI,CAAC,MAAM,GAAG,CAAC,CAAA;IAChB,SAAA;IAAM,aAAA,IAAI,CAAC,CAAC,OAAO,KAAK,MAAM,EAAE;IAC/B,YAAA,IAAI,CAAC,MAAM,GAAG,EAAE,CAAA;IACjB,SAAA;IAAM,aAAA;gBACL,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAA;IACpC,SAAA;YAED,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,GAAG,CAAC,CAAA;YACvC,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,KAAK,CAAC,CAAA;IAEjD,QAAA,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;SACd;IAED,IAAA,eAAe,CAAE,MAA0B,EAAA;YACzC,OAAO,MAAM,CAAC,MAAM,CAAC;gBACnB,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,OAAO,EAAE,IAAI,CAAC,OAAO;IACrB,YAAA,WAAW,EAAE,KAAK;gBAClB,WAAW,EAAE,IAAI,CAAC,WAAW;aAC9B,EAAE,MAAM,CAAC,CAAA;SACX;IAED,IAAA,aAAa,CAAE,IAAe,EAAA;IAC5B,QAAA,OAAO,IAAI,CAAC,OAAO,EAAE,GAAG,GAAG,GAAG,CAAC,CAAA;SAChC;IAED,IAAA,UAAU,CAAE,KAAoB,EAAA;YAC9B,IAAI,UAAU,GAAkB,EAAE,CAAA;YAClC,IAAI,WAAW,GAAc,EAAE,CAAA;IAE/B,QAAA,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,OAAO,IAAG;IACnC,YAAA,IAAI,OAAO,CAAC,YAAY,GAAG,CAAC;oBAAE,OAAM;IACpC,YAAA,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;IAEzB,YAAA,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,eAAe,EAAE,CAAC,CAAA;IACxD,YAAA,IAAI,MAAM,GAAG,MAAM,CAAC,qBAAqB,EAAE,CAAA;gBAC3C,IAAI,MAAM,GAAG,MAAM,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAA;gBAE7D,UAAU,CAAC,IAAI,CACb,IAAI,WAAW,CACb,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,EAAE,MAAM,CAAC,EACjC,IAAI,CAAC,eAAe,EAAE,CACvB,CACF,CAAA;IACH,SAAC,EAAE,KAAK,CAAC,YAAY,EAAE,CAAC,CAAA;YAExB,OAAO;IACL,YAAA,UAAU,EAAE,UAAU;IACtB,YAAA,WAAW,EAAE,WAAW;aACzB,CAAA;SACF;QAED,UAAU,CAAE,IAAS,EAAE,IAAiC,EAAA;IACtD,QAAA,IAAI,GAAG,IAAI,IAAI,EAAE,CAAA;YAEjB,IAAI,CAAC,GAAG,CAAC,CAAA;IACT,QAAA,IAAI,CAAC,GAAG,IAAI,CAAC,WAAY,CAAC,MAAM,CAAA;YAEhC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;gBACtB,IAAI,UAAU,GAAG,EAAE,CAAA;IACnB,YAAA,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,WAAY,CAAE,CAAC,CAAE,EAAE,IAAI,CAAC,eAAe,EAAE,CAAC,CAAA;gBAEvE,IAAI,IAAI,CAAC,QAAQ,EAAE;IACjB,gBAAA,IAAI,MAAM,GAAG,MAAM,CAAC,qBAAqB,EAAE,CAAA;IAC3C,gBAAA,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,QAAQ,EAAE,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAA;IACzD,aAAA;gBAED,IAAI,IAAI,CAAC,KAAK,EAAE;oBACd,IAAI,MAAM,GAAG,MAAM,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAA;IAC7D,gBAAA,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,CAAA;IACnD,aAAA;gBAED,IAAI,CAAC,UAAU,CAAE,CAAC,CAAE,CAAC,aAAa,CAAC,UAAU,CAAC,CAAA;IAC/C,SAAA;SACF;IAED,IAAA,aAAa,CAAE,MAA8C,EAAA;YAC3D,IAAI,OAAO,GAAG,KAAK,CAAA;YACnB,IAAI,IAAI,GAAG,EAAE,CAAA;IAEb,QAAA,IAAI,MAAM,IAAI,MAAM,CAAC,OAAO,EAAE;gBAC5B,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAA;IACtC,SAAA;YAED,KAAK,CAAC,aAAa,CAAC,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC,CAAA;IAE1C,QAAA,OAAO,IAAI,CAAA;SACZ;IACF,CAAA;IAED,sBAAsB,CAAC,GAAG,CAAC,OAAO,EAAE,mBAAmB,CAAC;;IC5JxD;;;;IAIG;IAQH;;IAEG;IACH,MAAM,kBAAmB,SAAQ,qBAAqB,CAAA;IACpD,IAAA,WAAA,CAAa,SAAoB,EAAE,MAAc,EAAE,MAAgD,EAAA;IACjG,QAAA,KAAK,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,CAAA;IAEhC,QAAA,IAAI,CAAC,IAAI,GAAG,MAAM,CAAA;IAElB,QAAA,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAC7B,EAAE,EAAE,IAAI,CAAC,UAAU,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE,CAC3C,CAAA;SACF;IAED,IAAA,IAAI,CAAE,MAAgD,EAAA;IACpD,QAAA,IAAI,CAAC,GAAG,MAAM,IAAI,EAAE,CAAA;IACpB,QAAA,CAAC,CAAC,WAAW,GAAG,GAAG,CAAA;YACnB,CAAC,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,CAAA;IAE5C,QAAA,IAAI,CAAC,CAAC,OAAO,KAAK,KAAK,EAAE;IACvB,YAAA,IAAI,CAAC,cAAc,GAAG,CAAC,CAAA;IACxB,SAAA;IAED,QAAA,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;SACd;IAED,IAAA,eAAe,gBAAc;YAC3B,OAAO,KAAK,CAAC,eAAe,CAAC;IAC3B,YAAA,WAAW,EAAE,KAAK;IACnB,SAAA,CAAC,CAAA;SACH;IACF,CAAA;IAED,sBAAsB,CAAC,GAAG,CAAC,MAAM,EAAE,kBAAkB,CAAC;;IC7CtD;;;;IAIG;IAuBH;;IAEG;IACH,MAAM,sBAAuB,SAAQ,uBAAuB,CAAA;IAI1D,IAAA,WAAA,CAAa,SAAoB,EAAE,MAAc,EAAE,MAAiD,EAAA;IAClG,QAAA,KAAK,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,CAAA;IAEhC,QAAA,IAAI,CAAC,IAAI,GAAG,UAAU,CAAA;IAEtB,QAAA,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC;IAE9B,YAAA,UAAU,EAAE;IACV,gBAAA,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK;IACpD,aAAA;IACD,YAAA,YAAY,EAAE,IAAI;IAClB,YAAA,cAAc,EAAE,IAAI;IACpB,YAAA,eAAe,EAAE,IAAI;aAEtB,EAAE,IAAI,CAAC,UAAU,EAAE;IAClB,YAAA,QAAQ,EAAE,IAAI;IACf,SAAA,CAAC,CAAA;IAEF,QAAA,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;SAClB;IAED,IAAA,IAAI,CAAE,MAAiD,EAAA;IACrD,QAAA,MAAM,CAAC,GAAG,MAAM,IAAI,EAAE,CAAA;YAEtB,IAAI,aAAa,GAAG,GAAG,CAAA;IACvB,QAAA,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE;IAC3B,YAAA,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,GAAG,CAAA;IAChE,SAAA;YAED,CAAC,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,aAAa,CAAC,CAAA;YACpD,CAAC,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAA;YAC/C,CAAC,CAAC,gBAAgB,GAAG,QAAQ,CAAC,CAAC,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAA;IAEvD,QAAA,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;SACd;IAED,IAAA,eAAe,CAAE,SAAoB,EAAA;YACnC,OAAO,SAAS,CAAC,QAAS,CAAC,OAAO,CAAC,SAAS,CAAC,CAAA;SAC9C;QAED,MAAM,GAAA;YACJ,MAAM,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAA;YACnD,IAAI,CAAC,SAAS,CAAC,QAAQ;gBAAE,OAAM;YAC/B,MAAM,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAA;IAEpD,QAAA,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,CAClC,YAAY,CAAC,MAA0B,EACvC,IAAI,CAAC,eAAe,CAAC;gBACnB,YAAY,EAAE,IAAI,CAAC,YAAY;gBAC/B,eAAe,EAAE,IAAI,CAAC,eAAe;IACrC,YAAA,YAAY,EAAE,IAAI;IACnB,SAAA,CAA2B,CAC7B,CAAA;IAED,QAAA,IAAI,CAAC,cAAc,GAAG,IAAI,cAAc,CACtC,YAAY,CAAC,IAA0B,EACvC,IAAI,CAAC,eAAe,CAAC;IACnB,YAAA,SAAS,EAAE,IAAI;gBACf,cAAc,EAAE,IAAI,CAAC,cAAc;gBACnC,eAAe,EAAE,IAAI,CAAC,eAAe;IACrC,YAAA,YAAY,EAAE,IAAI;IACnB,SAAA,CAAC,CACH,CAAA;IAED,QAAA,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;gBACjB,KAAK,EAAE,IAAI,CAAC,aAAa;gBACzB,UAAU,EAAE,CAAE,IAAI,CAAC,YAAoC,EAAE,IAAI,CAAC,cAAwC,CAAE;IACzG,SAAA,CAAC,CAAA;SACH;IAED,IAAA,UAAU,CAAE,KAAoB,EAAA;YAC9B,OAAM;SACP;QAED,UAAU,CAAE,IAAoB,EAAE,IAAiC,EAAA;YACjE,MAAM,SAAS,GAAG,IAAI,CAAC,KAAM,CAAC,YAAY,EAAE,CAAA;YAC5C,IAAI,CAAC,SAAS,CAAC,QAAQ;gBAAE,OAAM;YAC/B,MAAM,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAA;YACpD,MAAM,UAAU,GAA8B,EAAE,CAAA;YAChD,MAAM,YAAY,GAAgC,EAAE,CAAA;IAEpD,QAAA,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAE;IAC1B,YAAA,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,EAAC,QAAQ,EAAE,YAAY,CAAC,MAAM,CAAC,QAAQ,EAAC,CAAC,CAAA;IACnE,YAAA,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE;IAC1B,gBAAA,SAAS,EAAE,YAAY,CAAC,IAAI,CAAC,SAAS;IACtC,gBAAA,SAAS,EAAE,YAAY,CAAC,IAAI,CAAC,SAAS;IACvC,aAAA,CAAC,CAAA;IACH,SAAA;IAED,QAAA,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;IACvB,YAAA,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,EAAC,KAAK,EAAE,YAAY,CAAC,MAAM,CAAC,KAAK,EAAC,CAAC,CAAA;IAC7D,YAAA,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE;IAC1B,gBAAA,KAAK,EAAE,YAAY,CAAC,IAAI,CAAC,KAAK;IAC9B,gBAAA,MAAM,EAAE,YAAY,CAAC,IAAI,CAAC,MAAM;IACjC,aAAA,CAAC,CAAA;IACH,SAAA;IAED,QAAA,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,EAAE;IACxB,YAAA,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,EAAC,MAAM,EAAE,YAAY,CAAC,MAAM,CAAC,MAAM,EAAC,CAAC,CAAA;IAC/D,YAAA,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,EAAC,MAAM,EAAE,YAAY,CAAC,IAAI,CAAC,MAAM,EAAC,CAAC,CAAA;IAChE,SAAA;IAEA,QAAA,IAAI,CAAC,YAAqC,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;IACrE,QAAA,IAAI,CAAC,cAAyC,CAAC,aAAa,CAAC,YAAY,CAAC,CAAA;SAC5E;IACF,CAAA;IAED,sBAAsB,CAAC,GAAG,CAAC,UAAU,EAAE,sBAAsB,CAAC;;IC7I9D;;;;IAIG;IAYH;;IAEG;IACH,MAAM,wBAAyB,SAAQ,uBAAuB,CAAA;IAC5D,IAAA,WAAA,CAAa,SAAoB,EAAE,MAAc,EAAE,MAAkD,EAAA;IACnG,QAAA,KAAK,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,CAAA;IAEhC,QAAA,IAAI,CAAC,IAAI,GAAG,YAAY,CAAA;IAExB,QAAA,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,EAE/B,EAAE,IAAI,CAAC,UAAU,EAAE;IAClB,YAAA,UAAU,EAAE,IAAI;IAChB,YAAA,UAAU,EAAE,IAAI;IAChB,YAAA,WAAW,EAAE,IAAI;IAClB,SAAA,CAAC,CAAA;IAEF,QAAA,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;SAClB;IAED,IAAA,IAAI,CAAE,MAAkD,EAAA;IACtD,QAAA,MAAM,CAAC,GAAG,MAAM,IAAI,EAAE,CAAA;YACtB,CAAC,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,SAAS,CAAC,CAAA;YAChD,CAAC,CAAC,gBAAgB,GAAG,QAAQ,CAAC,CAAC,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAA;IAEvD,QAAA,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;SACd;IAED,IAAA,UAAU,CAAE,KAAoB,EAAA;YAC9B,IAAI,CAAC,KAAK,CAAC,UAAU;gBAAE,OAAM;IAE7B,QAAA,MAAM,SAAS,GAAG,KAAK,CAAC,UAAU,CAAC,YAAY,CAAC;IAC9C,YAAA,SAAS,EAAE,KAAK;gBAChB,KAAK,EAAE,IAAI,CAAC,UAAU;IACvB,SAAA,CAAC,CAAA;IAEF,QAAA,MAAM,cAAc,GAAG,IAAI,cAAc,CACvC,SAAS,EAAE,IAAI,CAAC,eAAe,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CACtD,CAAA;YAED,OAAO;gBACL,UAAU,EAAE,CAAE,cAA+D,CAAE;aAChF,CAAA;SACF;IACF,CAAA;IAED,sBAAsB,CAAC,GAAG,CAAC,YAAY,EAAE,wBAAwB,CAAC;;IC9DlE;;;;IAIG;IAUH,MAAMd,OAAK,GAAG,IAAIlE,aAAO,EAAE,CAAA;IAC3B,MAAM2E,KAAG,GAAG,IAAI3E,aAAO,EAAE,CAAA;IACzB,MAAM4E,QAAM,GAAG,IAAI5E,aAAO,EAAE,CAAA;IAC5B,MAAM6E,IAAE,GAAG,IAAI7E,aAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;IAE/B,SAAS,MAAM,CAAE,MAAA,GAAwC,EAAE,EAAA;IACzD,IAAA,MAAM,GAAG,GAAG,IAAIiF,wBAAkB,CAChC,CAAC;IACD,IAAA,CAAC;QACD,QAAQ,CAAC,MAAM,CAAC,cAAc,EAAE,EAAE,CAAC;IACnC,IAAA,CAAC;QACD,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,KAAK,CAAC;SAClC,CAAA;IACD,IAAA,GAAG,CAAC,YAAY,CAAC,IAAIhF,aAAO,EAAE,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAA;IAE3D,IAAA,OAAO,GAAG,CAAA;IACZ,CAAC;IAQM,MAAM,2BAA2B,GAAG,MAAM,CAAC,MAAM,CAAC;IACvD,IAAA,cAAc,EAAE,EAAE;IAClB,IAAA,SAAS,EAAE,KAAK;KACjB,EAAE,uBAAuB,CAAC,CAAA;IAI3B;;;;;;;;;;;IAWG;IACH,MAAM,UAAW,SAAQ,cAAc,CAAA;IAWrC;;;;;;;;IAQG;QACH,WAAa,CAAA,IAAoB,EAAE,MAAA,GAAwC,EAAE,EAAA;IAC3E,QAAA,KAAK,CAAC;gBACJ,QAAQ,EAAE,IAAI,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBACjD,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,OAAO,EAAE,IAAI,CAAC,OAAO;IACtB,SAAA,EAAE,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAA;YAxB5B,IAAa,CAAA,aAAA,GAAG,IAAI,CAAA;IA0BlB,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAA;IAExD,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;SAC/B;IA3BD,IAAA,IAAI,iBAAiB,GAAK,EAAA,OAAO,2BAA2B,CAAA,EAAE;IA6B9D,IAAA,sBAAsB,CAAE,MAAe,EAAE,CAAS,EAAE,EAAU,EAAA;YAC5D0E,KAAG,CAAC,SAAS,CAAC,IAAI,CAAC,UAAiB,EAAE,EAAE,CAAC,CAAA;YACzCC,QAAM,CAAC,SAAS,CAAC,IAAI,CAAC,UAAiB,EAAE,EAAE,CAAC,CAAA;YAC5C,MAAM,CAAC,MAAM,CAACD,KAAG,EAAEC,QAAM,EAAEC,IAAE,CAAC,CAAA;YAE9B,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,CAAE,CAAC,CAAE,CAAA;IAC3B,QAAAX,OAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAES,KAAG,CAAC,UAAU,CAACC,QAAM,CAAC,CAAC,CAAA;IACvC,QAAA,MAAM,CAAC,KAAK,CAACV,OAAK,CAAC,CAAA;SACpB;IAED,IAAA,aAAa,CAAE,IAAA,GAAgC,EAAE,EAAE,WAAqB,EAAA;IACtE,QAAA,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,EAAE;IACpC,YAAA,oBAAoB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,CAAA;IACpE,YAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAA;IAChC,YAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAA;IAChC,YAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAA;IAC/B,SAAA;YACD,IAAI,IAAI,CAAC,MAAM;IAAE,YAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAA;IAE3C,QAAA,KAAK,CAAC,aAAa,CAAC,IAAI,EAAE,WAAW,CAAC,CAAA;SACvC;IACF,CAAA;IAED,cAAc,CAAC,GAAG,CAAC,MAAM,EAAE,UAAU,CAAC;;IChHtC;;;;IAIG;IAIH,MAAM,aAAa,CAAA;IAIjB,IAAA,WAAA,CAAa,eAAiC,EAAE,EAAA;IAC9C,QAAA,IAAI,CAAC,YAAY,GAAG,YAAY,CAAA;SACjC;QAED,kBAAkB,GAAA;IAChB,QAAA,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;IACrB,YAAA,IAAI,CAAC,WAAW,GAAG,IAAI5C,UAAI,EAAE,CAAA;IAC9B,SAAA;IAAM,aAAA;IACL,YAAA,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAA;IACzB,SAAA;IAED,QAAA,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,IAAG;gBAC9B,IAAI,CAAC,GAAG,CAAC,WAAW;oBAAE,GAAG,CAAC,kBAAkB,EAAE,CAAA;gBAC9C,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,WAAmB,CAAC,CAAA;IACjD,SAAC,CAAC,CAAA;SACH;IACF;;IC5BD;;;;IAIG;IAoBI,MAAM,4BAA4B,GAAG,MAAM,CAAC,MAAM,CAAC;IACxD,IAAA,WAAW,EAAE,GAAG;IAChB,IAAA,cAAc,EAAE,EAAE;IAClB,IAAA,SAAS,EAAE,KAAK;IAChB,IAAA,eAAe,EAAE,KAAK;KACvB,EAAE,uBAAuB,CAAC,CAAA;IAG3B;;;;;;;;;;;IAWG;IACH,MAAM,WAAW,CAAA;IAmBf;;;;;;;;IAQG;QACH,WAAa,CAAA,IAAqB,EAAE,MAAA,GAAyC,EAAE,EAAA;IAf/E,QAAA,IAAA,CAAA,KAAK,GAAG,IAAIM,WAAK,EAAE,CAAA;IACnB,QAAA,IAAA,CAAA,cAAc,GAAG,IAAIA,WAAK,EAAE,CAAA;IAC5B,QAAA,IAAA,CAAA,YAAY,GAAG,IAAIA,WAAK,EAAE,CAAA;YAE1B,IAAO,CAAA,OAAA,GAAG,IAAI,CAAA;YAYZ,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAA;IAE9D,QAAA,IAAI,CAAC,aAAa,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAA;IAC5D,QAAA,IAAI,CAAC,cAAc,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;YAE1D,MAAM,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAA;IACtC,QAAA,MAAM,YAAY,GAAG;IACnB,YAAA,cAAc,EAAE,IAAI,CAAC,UAAU,CAAC,cAAc;IAC9C,YAAA,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,SAAS;IACpC,YAAA,eAAe,EAAE,IAAI,CAAC,UAAU,CAAC,eAAe;aACjD,CAAA;IAED,QAAA,IAAI,CAAC,cAAc,GAAG,IAAI,cAAc,CACtC,IAAI,CAAC,QAA8B,EAAE,YAAY,CACxB,CAAA;IAC3B,QAAA,IAAI,CAAC,UAAU,GAAG,IAAI,UAAU,CAC9B,IAAI,CAAC,IAAsB,EAAE,YAAY,CAC1C,CAAA;IAED,QAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,aAAa,CAAC;gBAChC,IAAI,CAAC,cAAc,CAAC,QAAQ;gBAC5B,IAAI,CAAC,UAAU,CAAC,QAAQ;IACzB,SAAA,CAAC,CAAA;;IAGF,QAAA,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI3B,aAAO,EAAE,CAAC,CAAA;IAEpD,QAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAA;SAC5B;IAvDD,IAAA,IAAI,iBAAiB,GAAK,EAAA,OAAO,4BAA4B,CAAA,EAAE;QAyD/D,IAAI,MAAM,CAAE,CAAC,EAAA;YACX,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA;SACzC;IACD,IAAA,IAAI,MAAM,GAAA;YACR,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;SACjC;IAED,IAAA,IAAI,QAAQ,GAAA;IACV,QAAA,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,CAAA;SACtB;QAED,cAAc,CAAE,OAAiC,EAAE,EAAA;IACjD,QAAA,MAAM,aAAa,GAAG,IAAI,CAAC,aAAa,CAAA;IACxC,QAAA,MAAM,cAAc,GAAG,IAAI,CAAC,cAAc,CAAA;IAE1C,QAAA,MAAM,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAA;YAE/C,IAAI,CAAC,EAAE,EAAE,CAAA;YACT,MAAM,QAAQ,GAAgC,EAAE,CAAA;YAChD,MAAM,IAAI,GAA4B,EAAE,CAAA;YAExC,IAAI,IAAI,CAAC,MAAM,EAAE;IACf,YAAA,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;IACnD,gBAAA,cAAc,CAAE,CAAC,CAAE,GAAG,IAAI,CAAC,MAAM,CAAE,CAAC,CAAE,GAAG,WAAW,CAAA;IACrD,aAAA;IACD,YAAA,QAAQ,CAAC,MAAM,GAAG,cAAc,CAAA;IAChC,YAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAA;IAC1B,SAAA;IAED,QAAA,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,EAAE;IACpC,YAAA,MAAM,KAAK,GAAG,IAAID,aAAO,EAAE,CAAA;IAC3B,YAAA,MAAM,GAAG,GAAG,IAAIA,aAAO,EAAE,CAAA;IACzB,YAAA,MAAM,IAAI,GAAG,IAAIA,aAAO,EAAE,CAAA;IAC1B,YAAA,MAAM,MAAM,GAAG,IAAIA,aAAO,EAAE,CAAA;IAC5B,YAAA,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE;oBACrD,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,SAAgB,EAAE,CAAC,CAAC,CAAA;oBACzC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,SAAgB,EAAE,CAAC,CAAC,CAAA;IACvC,gBAAA,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,GAAG,CAAC,CAAA;IAC3B,gBAAA,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,EAAE,CAAA;IAChC,gBAAA,MAAM,UAAU,GAAG,cAAc,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,WAAW,GAAG,CAAC,CAAA;oBAC5D,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,CAAA;IAC/C,gBAAA,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAA;oBACtB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;IAC1B,gBAAA,MAAM,CAAC,OAAO,CAAC,aAAoB,EAAE,CAAC,CAAC,CAAA;IACxC,aAAA;IACD,YAAA,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAA;IACnC,YAAA,QAAQ,CAAC,SAAS,GAAG,aAAa,CAAA;IAClC,YAAA,IAAI,CAAC,SAAS,GAAG,aAAa,CAAA;IAC9B,YAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAA;IAChC,SAAA;YAED,IAAI,IAAI,CAAC,KAAK,EAAE;IACd,YAAA,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAA;IAC3B,YAAA,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAA;IAC5B,YAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAA;IACxB,SAAA;YAED,OAAO;IACL,YAAA,QAAQ,EAAE,QAAQ;IAClB,YAAA,IAAI,EAAE,IAAI;aACX,CAAA;SACF;QAED,OAAO,GAAA;YACL,OAAO,IAAI4B,WAAK,EAAE,CAAC,GAAG,CACpB,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,EAC7B,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAC1B,CAAA;SACF;QAED,gBAAgB,GAAA;YACd,OAAO,IAAIA,WAAK,EAAE,CAAC,GAAG,CACpB,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,EACtC,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE,CACnC,CAAA;SACF;QAED,cAAc,GAAA;YACZ,OAAO,IAAIA,WAAK,EAAE,CAAC,GAAG,CACpB,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,EACpC,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,CACjC,CAAA;SACF;QAED,aAAa,CAAE,OAAiC,EAAE,EAAA;YAChD,MAAM,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAA;YAEtC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;YAChD,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;SACzC;IAED;;;;IAIG;QACH,aAAa,CAAE,SAAyC,EAAE,EAAA;YACxD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,CAAA;IAElC,QAAA,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,SAAS,EAAE;IACzC,YAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAA;IAC5B,SAAA;YACD,OAAO,MAAM,CAAC,MAAM,CAAA;IAEpB,QAAA,IAAI,MAAM,IAAI,MAAM,CAAC,SAAS,KAAK,SAAS,EAAE;gBAC5C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAA;IAC5C,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;IACjC,SAAA;IAED,QAAA,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,MAAM,CAAC,CAAA;IACzC,QAAA,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,MAAM,CAAC,CAAA;SACtC;IAED,IAAA,aAAa,CAAE,KAAc,EAAA;YAC3B,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAA;SACjD;QAED,OAAO,GAAA;IACL,QAAA,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAA;IAC7B,QAAA,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAA;SAC1B;IACF,CAAA;IAED,cAAc,CAAC,GAAG,CAAC,OAAO,EAAE,WAAW,CAAC;;IClOxC;;;;IAIG;IAQH,MAAMsC,OAAK,GAAG,IAAIlE,aAAO,EAAE,CAAA;IAC3B,MAAM4E,QAAM,GAAG,IAAI5E,aAAO,EAAE,CAAA;IAC5B,MAAM6E,IAAE,GAAG,IAAI7E,aAAO,EAAE,CAAA;IACxB,MAAM2E,KAAG,GAAG,IAAI3E,aAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;IAQhC;;;;;;;;;;;IAWG;IACH,MAAM,SAAU,SAAQ,cAAc,CAAA;QAOpC,WAAa,CAAA,IAAmB,EAAE,MAAA,GAAoC,EAAE,EAAA;IACtE,QAAA,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,IAAIkF,uBAAiB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;YAPrD,IAAa,CAAA,aAAA,GAAG,IAAI,CAAA;IASlB,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;SAC/B;IAED,IAAA,sBAAsB,CAAE,MAAe,EAAE,CAAS,EAAE,EAAU,EAAA;YAC5DN,QAAM,CAAC,SAAS,CAAC,IAAI,CAAC,WAAkB,EAAE,EAAE,CAAC,CAAA;YAC7CC,IAAE,CAAC,SAAS,CAAC,IAAI,CAAC,UAAiB,EAAE,EAAE,CAAC,CAAA;YACxC,MAAM,CAAC,MAAM,CAACF,KAAG,EAAEC,QAAM,EAAEC,IAAE,CAAC,CAAA;YAE9BX,OAAK,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAE,CAAC,CAAE,EAAEW,IAAE,CAAC,MAAM,EAAE,EAAED,QAAM,CAAC,MAAM,EAAE,CAAC,CAAA;IACxD,QAAA,MAAM,CAAC,KAAK,CAACV,OAAK,CAAC,CAAA;SACpB;IAED,IAAA,aAAa,CAAE,IAAA,GAA+B,EAAE,EAAE,WAAqB,EAAA;YACrE,IAAI,IAAI,CAAC,IAAI;IAAE,YAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAA;YACrC,IAAI,IAAI,CAAC,UAAU;IAAE,YAAA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAA;YACvD,IAAI,IAAI,CAAC,SAAS;IAAE,YAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAA;IAEpD,QAAA,KAAK,CAAC,aAAa,CAAC,IAAI,EAAE,WAAW,CAAC,CAAA;SACvC;IACF,CAAA;IAED,cAAc,CAAC,GAAG,CAAC,KAAK,EAAE,SAAS,CAAC;;IClEpC;;;;IAIG;IASH,MAAMA,OAAK,GAAG,IAAIlE,aAAO,EAAE,CAAA;IAC3B,MAAM4E,QAAM,GAAG,IAAI5E,aAAO,EAAE,CAAA;IAC5B,MAAM6E,IAAE,GAAG,IAAI7E,aAAO,EAAE,CAAA;IACxB,MAAM2E,KAAG,GAAG,IAAI3E,aAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;IAQzB,MAAM,gCAAgC,GAAG,MAAM,CAAC,MAAM,CAAC;IAC5D,IAAA,YAAY,EAAE,CAAC;KAChB,EAAE,uBAAuB,CAAC,CAAA;IAG3B;;;;;;;;;;;IAWG;IACH,MAAM,eAAgB,SAAQ,cAAc,CAAA;QAU1C,WAAa,CAAA,IAAyB,EAAE,MAAA,GAA6C,EAAE,EAAA;YACrF,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,IAAImE,+BAAyB,CAAC,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA;YAVzF,IAAa,CAAA,aAAA,GAAG,IAAI,CAAA;IAYlB,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;SAC/B;IAXD,IAAA,IAAI,iBAAiB,GAAK,EAAA,OAAO,gCAAgC,CAAA,EAAE;IAanE,IAAA,sBAAsB,CAAE,MAAe,EAAE,CAAS,EAAE,EAAU,EAAA;YAC5DS,QAAM,CAAC,SAAS,CAAC,IAAI,CAAC,UAAiB,EAAE,EAAE,CAAC,CAAA;YAC5CC,IAAE,CAAC,SAAS,CAAC,IAAI,CAAC,UAAiB,EAAE,EAAE,CAAC,CAAA;YACxC,MAAM,CAAC,MAAM,CAACF,KAAG,EAAEC,QAAM,EAAEC,IAAE,CAAC,CAAA;YAE9BX,OAAK,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAE,CAAC,CAAE,EAAEW,IAAE,CAAC,MAAM,EAAE,EAAED,QAAM,CAAC,MAAM,EAAE,CAAC,CAAA;IAC1D,QAAA,MAAM,CAAC,KAAK,CAACV,OAAK,CAAC,CAAA;SACpB;IAED,IAAA,aAAa,CAAE,IAAA,GAAqC,EAAE,EAAE,WAAqB,EAAA;YAC3E,IAAI,IAAI,CAAC,MAAM;IAAE,YAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAA;YAC3C,IAAI,IAAI,CAAC,SAAS;IAAE,YAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAA;YACpD,IAAI,IAAI,CAAC,SAAS;IAAE,YAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAA;IAEpD,QAAA,KAAK,CAAC,aAAa,CAAC,IAAI,EAAE,WAAW,CAAC,CAAA;SACvC;IACF,CAAA;IAED,cAAc,CAAC,GAAG,CAAC,WAAW,EAAE,eAAe,CAAC;;IC3EhD;;;;IAIG;IAOH,MAAMA,OAAK,GAAG,IAAIlE,aAAO,EAAE,CAAA;IAC3B,MAAM4E,QAAM,GAAG,IAAI5E,aAAO,EAAE,CAAA;IAC5B,MAAM6E,IAAE,GAAG,IAAI7E,aAAO,EAAE,CAAA;IACxB,MAAM2E,KAAG,GAAG,IAAI3E,aAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;IAQhC;;;;;;;;;;;IAWG;IACH,MAAM,gBAAiB,SAAQ,cAAc,CAAA;QAO3C,WAAa,CAAA,IAA0B,EAAE,MAAA,GAAoC,EAAE,EAAA;IAC7E,QAAA,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,IAAImF,8BAAwB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;YAPzD,IAAa,CAAA,aAAA,GAAG,IAAI,CAAA;IASlB,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;SAC/B;IAED,IAAA,sBAAsB,CAAE,MAAe,EAAE,CAAS,EAAE,EAAU,EAAA;YAC5DP,QAAM,CAAC,SAAS,CAAC,IAAI,CAAC,WAAkB,EAAE,EAAE,CAAC,CAAA;YAC7CC,IAAE,CAAC,SAAS,CAAC,IAAI,CAAC,UAAiB,EAAE,EAAE,CAAC,CAAA;YACxC,MAAM,CAAC,MAAM,CAACF,KAAG,EAAEC,QAAM,EAAEC,IAAE,CAAC,CAAA;YAE9BX,OAAK,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAE,CAAC,CAAE,EAAEW,IAAE,CAAC,MAAM,EAAE,EAAED,QAAM,CAAC,MAAM,EAAE,CAAC,CAAA;IACxD,QAAA,MAAM,CAAC,KAAK,CAACV,OAAK,CAAC,CAAA;SACpB;IAED,IAAA,aAAa,CAAE,IAAA,GAAsC,EAAE,EAAE,WAAqB,EAAA;YAC5E,IAAI,IAAI,CAAC,IAAI;IAAE,YAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAA;YACrC,IAAI,IAAI,CAAC,UAAU;IAAE,YAAA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAA;YACvD,IAAI,IAAI,CAAC,SAAS;IAAE,YAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAA;IAEpD,QAAA,KAAK,CAAC,aAAa,CAAC,IAAI,EAAE,WAAW,CAAC,CAAA;SACvC;IACF,CAAA;IAED,cAAc,CAAC,GAAG,CAAC,YAAY,EAAE,gBAAgB,CAAC;;ICjElD;;;;IAIG;IAOH,MAAMA,OAAK,GAAG,IAAIlE,aAAO,EAAE,CAAA;IAC3B,MAAM4E,QAAM,GAAG,IAAI5E,aAAO,EAAE,CAAA;IAC5B,MAAM6E,IAAE,GAAG,IAAI7E,aAAO,EAAE,CAAA;IACxB,MAAM2E,KAAG,GAAG,IAAI3E,aAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;IAQhC;;;;;;;;;;;IAWG;IACH,MAAM,iBAAkB,SAAQ,cAAc,CAAA;QAO5C,WAAa,CAAA,IAA2B,EAAE,MAAA,GAAoC,EAAE,EAAA;IAC9E,QAAA,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,IAAIoF,+BAAyB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;YAP1D,IAAa,CAAA,aAAA,GAAG,IAAI,CAAA;IASlB,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;SAC/B;IAED,IAAA,sBAAsB,CAAE,MAAe,EAAE,CAAS,EAAE,EAAU,EAAA;YAC5DR,QAAM,CAAC,SAAS,CAAC,IAAI,CAAC,WAAkB,EAAE,EAAE,CAAC,CAAA;YAC7CC,IAAE,CAAC,SAAS,CAAC,IAAI,CAAC,UAAiB,EAAE,EAAE,CAAC,CAAA;YACxC,MAAM,CAAC,MAAM,CAACF,KAAG,EAAEC,QAAM,EAAEC,IAAE,CAAC,CAAA;YAE9BX,OAAK,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAE,CAAC,CAAE,EAAEW,IAAE,CAAC,MAAM,EAAE,EAAED,QAAM,CAAC,MAAM,EAAE,CAAC,CAAA;IACxD,QAAA,MAAM,CAAC,KAAK,CAACV,OAAK,CAAC,CAAA;SACpB;IAED,IAAA,aAAa,CAAE,IAAA,GAAuC,EAAE,EAAE,WAAqB,EAAA;YAC7E,IAAI,IAAI,CAAC,IAAI;IAAE,YAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAA;YACrC,IAAI,IAAI,CAAC,UAAU;IAAE,YAAA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAA;YACvD,IAAI,IAAI,CAAC,SAAS;IAAE,YAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAA;IAEpD,QAAA,KAAK,CAAC,aAAa,CAAC,IAAI,EAAE,WAAW,CAAC,CAAA;SACvC;IACF,CAAA;IAED,cAAc,CAAC,GAAG,CAAC,aAAa,EAAE,iBAAiB,CAAC;;ICjEpD;;;;IAIG;IASH,MAAM,KAAK,GAAG,IAAIlE,aAAO,EAAE,CAAA;IAC3B,MAAM,MAAM,GAAG,IAAIA,aAAO,EAAE,CAAA;IAC5B,MAAM,EAAE,GAAG,IAAIA,aAAO,EAAE,CAAA;IACxB,MAAM,GAAG,GAAG,IAAIA,aAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;IAQzB,MAAM,4BAA4B,GAAG,MAAM,CAAC,MAAM,CAAC;IACxD,IAAA,WAAW,EAAE,GAAG;IAChB,IAAA,cAAc,EAAE,EAAE;IAClB,IAAA,eAAe,EAAE,EAAE;KACpB,EAAE,uBAAuB,CAAC,CAAA;IAG3B;;;;;;;;;;;IAWG;IACH,MAAM,WAAY,SAAQ,cAAc,CAAA;QAUtC,WAAa,CAAA,IAAqB,EAAE,MAAA,GAAyC,EAAE,EAAA;IAC7E,QAAA,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,IAAIqF,yBAAmB,CACzC,CAAC,EACD,QAAQ,CAAC,MAAM,CAAC,WAAW,EAAE,GAAG,CAAC,EACjC,QAAQ,CAAC,MAAM,CAAC,cAAc,EAAE,EAAE,CAAC,EACnC,QAAQ,CAAC,MAAM,CAAC,eAAe,EAAE,EAAE,CAAC,CACrC,CAAC,CAAA;YAfJ,IAAa,CAAA,aAAA,GAAG,IAAI,CAAA;IAiBlB,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;SAC/B;IAhBD,IAAA,IAAI,iBAAiB,GAAK,EAAA,OAAO,4BAA4B,CAAA,EAAE;IAkB/D,IAAA,sBAAsB,CAAE,MAAe,EAAE,CAAS,EAAE,EAAU,EAAA;YAC5D,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,UAAiB,EAAE,EAAE,CAAC,CAAA;YAC5C,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,UAAiB,EAAE,EAAE,CAAC,CAAA;YACxC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE,CAAC,CAAA;YAE9B,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,CAAE,CAAC,CAAE,CAAA;YAC3B,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;IAClB,QAAA,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;SACpB;IAED,IAAA,aAAa,CAAE,IAAA,GAAiC,EAAE,EAAE,WAAqB,EAAA;YACvE,IAAI,IAAI,CAAC,MAAM;IAAE,YAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAA;YAC3C,IAAI,IAAI,CAAC,SAAS;IAAE,YAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAA;YACpD,IAAI,IAAI,CAAC,SAAS;IAAE,YAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAA;IAEpD,QAAA,KAAK,CAAC,aAAa,CAAC,IAAI,EAAE,WAAW,CAAC,CAAA;SACvC;IACF,CAAA;IAED,cAAc,CAAC,GAAG,CAAC,OAAO,EAAE,WAAW,CAAC;;ICnFxC;;;;IAIG;IAWH,MAAM,MAAM,CAAA;QAMV,WAAa,CAAA,QAAkB,EAAE,MAAkC,EAAA;IACjE,QAAA,IAAI,CAAC,GAAG,MAAM,IAAI,EAAE,CAAA;IAEpB,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAA;YAExB,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAA;YAChC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAA;SACjC;IAED,IAAA,IAAI,IAAI,GAAM,EAAA,OAAO,EAAE,CAAA,EAAE;IACzB,IAAA,IAAI,SAAS,GAAM,EAAA,OAAO,EAAE,CAAA,EAAE;IAC9B,IAAA,IAAI,QAAQ,GAAM,EAAA,OAAO,KAAK,CAAA,EAAE;IAChC,IAAA,IAAI,MAAM,GAAM,EAAA,OAAO,KAAK,CAAA,EAAE;IAC9B,IAAA,IAAI,KAAK,GAAM,EAAA,OAAO,KAAK,CAAA,EAAE;QAE7B,KAAK,GAAA;YACH,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,MAAK;gBACpC,IAAI,CAAC,YAAY,EAAE,CAAA;gBACnB,IAAI,CAAC,MAAM,EAAE,CAAA;gBACb,IAAI,CAAC,WAAW,EAAE,CAAA;IAClB,YAAA,OAAO,IAAI,CAAE,IAAI,CAAC,SAAS,CAAE,CAAA;IAC/B,SAAC,CAAC,CAAA;SACH;IAED,IAAA,MAAM,MAAM;IAEZ,IAAA,YAAY,MAAM;QAElB,WAAW,GAAA;IACT,QAAA,IAAI3E,aAAK;gBAAE,GAAG,CAAC,GAAG,CAAC,IAAI,CAAE,IAAI,CAAC,SAAS,CAAE,CAAC,CAAA;SAC3C;IACF;;ICpDD;;;;IAIG;IAaH,MAAM,eAAgB,SAAQ,MAAM,CAAA;QAIlC,WAAa,CAAA,QAAkB,EAAE,MAA2C,EAAA;IAC1E,QAAA,IAAI,CAAC,GAAG,MAAM,IAAI,EAAE,CAAA;IAEpB,QAAA,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAA;YAElB,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,CAAC,CAAC,cAAc,EAAE,KAAK,CAAC,CAAA;YACvD,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,CAAC,CAAC,YAAY,EAAE,KAAK,CAAC,CAAA;YACnD,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,KAAK,CAAC,CAAA;IAE/C,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAA;YACpD,IAAI,CAAC,gBAAgB,GAAG,IAAI,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;SAC7D;IAED,IAAA,IAAI,IAAI,GAAM,EAAA,OAAO,WAAW,CAAA,EAAE;IAClC,IAAA,IAAI,SAAS,GAAM,EAAA,OAAO,WAAW,CAAA,EAAE;IACxC;;ICpCD;;;;IAIG;IAQH,SAAS,oBAAoB,CAAE,MAAc,EAAA;IAC3C,IAAA,MAAM,GAAG,MAAM,CAAC,WAAW,EAAE,CAAA;IAC7B,IAAA,QAAQ,MAAM;IACZ,QAAA,KAAK,SAAS;IACZ,YAAA,OAAO,aAAa,CAAA;IACtB,QAAA,KAAK,aAAa;IAChB,YAAA,OAAO,gBAAgB,CAAA;IACzB,QAAA,KAAK,WAAW;IACd,YAAA,OAAO,eAAe,CAAA;IACxB,QAAA,KAAK,OAAO;IACV,YAAA,OAAO,WAAW,CAAA;IACpB,QAAA;IACE,YAAA,OAAO,aAAa,CAAA;IACvB,KAAA;IACH,CAAC;IAED,SAAS,cAAc,CAAE,IAAY,EAAA;IACnC,IAAA,QAAQ,IAAI;IACV,QAAA,KAAK,aAAa;IAChB,YAAA,OAAO,SAAS,CAAA;IAClB,QAAA,KAAK,gBAAgB;IACnB,YAAA,OAAO,aAAa,CAAA;IACtB,QAAA,KAAK,eAAe;IAClB,YAAA,OAAO,WAAW,CAAA;IACpB,QAAA,KAAK,WAAW;IACd,YAAA,OAAO,OAAO,CAAA;IAChB,QAAA;IACE,YAAA,OAAO,SAAS,CAAA;IACnB,KAAA;IACH,CAAC;IAUD;;IAEG;IACW,MAAO,MAAM,CAAA;IAOzB;;;;;;IAMG;QACH,WAAa,CAAA,SAAoB,EAAE,KAAa,EAAE,WAAW,GAAG,EAAE,EAAE,IAAuB,EAAE,cAAA,GAA2B,EAAE,EAAA;IACxH,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAA;IAC1B,QAAA,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;IAClB,QAAA,IAAI,CAAC,WAAW,GAAG,WAAW,CAAA;YAC9B,IAAI,CAAC,UAAU,GAAG,oBAAoB,CAAC,IAAI,IAAI,EAAE,CAAC,CAAA;IAClD,QAAA,IAAI,CAAC,cAAc,GAAG,cAAc,CAAA;IAEpC,QAAA,cAAc,CAAC,OAAO,CAAC,UAAU,EAAU,EAAA;gBACzC,SAAS,CAAC,UAAU,CAAC,WAAW,CAAE,EAAE,CAAE,GAAG,KAAK,CAAA;IAChD,SAAC,CAAC,CAAA;SACH;QAED,IAAI,IAAI,GAAM,EAAA,OAAO,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAA,EAAE;QAEtD,aAAa,GAAA;YACX,OAAO,IAAI,CAAC,UAAU,CAAA;SACvB;QAED,SAAS,GAAA;IACP,QAAA,OAAO,IAAI,CAAC,UAAU,KAAK,aAAa,CAAA;SACzC;QAED,YAAY,GAAA;IACV,QAAA,OAAO,IAAI,CAAC,UAAU,KAAK,gBAAgB,CAAA;SAC5C;QAED,WAAW,GAAA;IACT,QAAA,OAAO,IAAI,CAAC,UAAU,KAAK,eAAe,CAAA;SAC3C;QAED,OAAO,GAAA;IACL,QAAA,OAAO,IAAI,CAAC,UAAU,KAAK,WAAW,CAAA;SACvC;IAED,IAAA,SAAS,CAAE,QAAiC,EAAA;YAC1C,MAAM,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,CAAA;IAEzC,QAAA,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,UAAU,KAAK,EAAA;IACzC,YAAA,EAAE,CAAC,KAAK,GAAG,KAAK,CAAA;gBAChB,QAAQ,CAAC,EAAE,CAAC,CAAA;IACd,SAAC,CAAC,CAAA;SACH;IACF;;IC9GD;;;;IAIG;IAuBH,MAAM,gBAAgB,GAAG;IACvB,IAAA,CAAC,EAAE,CAAC;IACJ,IAAA,CAAC,EAAE,CAAC;IACJ,IAAA,CAAC,EAAE,CAAC;IACJ,IAAA,KAAK,EAAE,EAAE;IACT,IAAA,IAAI,EAAE,EAAE;IACR,IAAA,KAAK,EAAE,EAAE;IACT,IAAA,UAAU,EAAE,KAAK;KAClB,CAAA;IAOD;;IAEG;IACH,MAAM,QAAQ,CAAA;IAeZ;;;;;;;;;;;;IAYG;IACH,IAAA,WAAA,CAAa,SAAyB,gBAAgB,EAAA;IAlBtD,QAAA,IAAA,CAAA,UAAU,GAAG,IAAIT,aAAO,EAAE,CAAA;IAC1B,QAAA,IAAA,CAAA,UAAU,GAAG,IAAIA,aAAO,EAAE,CAAA;IAkBxB,QAAA,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAA;IACjB,QAAA,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAA;IACjB,QAAA,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAA;IACjB,QAAA,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAA;IACzB,QAAA,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAA;IACvB,QAAA,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAA;IACzB,QAAA,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAA;YAEnC,MAAM,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;YACrC,MAAM,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;YACnC,MAAM,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;YACrC,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;YACnC,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;YACjC,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;YACnC,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;YACjC,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;IAEnC,QAAA,IAAI,CAAC,MAAM,IACT,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;IACxB,YAAA,IAAI,CAAC,IAAI,CACP,CAAC,GAAG,QAAQ,GAAG,QAAQ,GAAG,OAAO,GAAG,OAAO,GAAG,QAAQ,GAAG,QAAQ;oBACjE,GAAG,GAAG,QAAQ,GAAG,OAAO,GAAG,QAAQ,CACpC,CACF,CAAA;IAED,QAAA,IAAI,MAAM,CAAC,UAAU,KAAK,SAAS,EAAE;;IAGnC,YAAA,MAAM,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAA;IACxD,YAAA,MAAM,YAAY,IAChB,CAAC,OAAO,GAAG,QAAQ,GAAG,QAAQ,KAAK,OAAO,GAAG,QAAQ,CAAC,CACvD,CAAA;IAED,YAAA,IAAI,CAAC,UAAU,CAAC,GAAG,CACjB,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACf,IAAI,CAAC,CAAC,GAAG,QAAQ,EAAE,IAAI,CAAC,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,CAAC,EAC1C,IAAI,CAAC,CAAC,GAAG,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,OAAO,GAAG,YAAY,EAAE,GAAG,GAAG,KAAK,EAAE,CAAC,EAClE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CACX,CAAC,SAAS,EAAE,CAAA;gBACb,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAA;IAC5C,SAAA;IAAM,aAAA;gBACL,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAA;gBACvC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAA;IAC5C,SAAA;SACF;IAED,IAAA,WAAW,CAAE,SAAoB,EAAA;YAC/B,MAAM,cAAc,GAAG,IAAI,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;YAE9C,IAAI,SAAS,CAAC,QAAQ,EAAE;IACtB,YAAA,MAAM,EAAE,GAAG,SAAS,CAAC,QAAQ,CAAA;IAC7B,YAAA,MAAM,UAAU,GAAG,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,KAAK,EAAE,CAAA;IAC/E,YAAA,MAAM,CAAC,GAAG,IAAID,aAAO,EAAE,CAAA;gBAEvB,IAAI,YAAY,GAAG,CAAC,CAAA;IACpB,YAAA,MAAM,SAAS,GAAG,UAAU,CAAS,EAAE,CAAS,EAAE,CAAS,EAAA;oBACzD,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;yBACX,GAAG,CAAC,UAAU,CAAC;IACf,qBAAA,YAAY,CAAC,EAAE,CAAC,UAAU,CAAC;IAC3B,qBAAA,OAAO,CAAC,cAAqB,EAAE,YAAY,CAAC,CAAA;oBAC/C,YAAY,IAAI,CAAC,CAAA;IACnB,aAAC,CAAA;IACD,YAAA,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;IAClB,YAAA,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;IAClB,YAAA,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;IAClB,YAAA,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;IAClB,YAAA,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;IAClB,YAAA,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;IAClB,YAAA,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;IAClB,YAAA,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;IACnB,SAAA;IAED,QAAA,OAAO,cAAc,CAAA;SACtB;IAED,IAAA,SAAS,CAAE,SAAoB,EAAA;YAC7B,OAAO,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAA;SACjD;IAED,IAAA,OAAO,CAAE,SAAoB,EAAE,MAAA,GAA6B,EAAE,EAAA;YAC5D,MAAM,UAAU,GAAG,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAA;IACxD,QAAA,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAA;IAEpE,QAAA,MAAM,CAAC,GAAG,IAAII,WAAK,CAAC,UAAU,CAAC,CAAA;IAC/B,QAAA,MAAM,CAAC,GAAG,IAAIJ,aAAO,EAAE,CAAA;YAEvB,MAAM,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAA;IAClD,QAAA,MAAM,WAAW,GAAG,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA;YACnD,MAAM,YAAY,GAAG,YAAY,CAAC,CAAC,EAAE,MAAM,CAAC,CAAA;YAE5C,MAAM,aAAa,GAAG,IAAI,YAAY,CAAC,CAAC,GAAG,EAAE,CAAC,CAAA;YAC9C,MAAM,aAAa,GAAG,IAAI,YAAY,CAAC,CAAC,GAAG,EAAE,CAAC,CAAA;IAC9C,QAAA,MAAM,SAAS,GAAG,aAAa,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA;YAClD,MAAM,UAAU,GAAG,YAAY,CAAC,EAAE,EAAE,MAAM,CAAC,CAAA;YAE3C,IAAI,UAAU,GAAG,CAAC,CAAA;IAClB,QAAA,SAAS,OAAO,CAAE,CAAS,EAAE,CAAS,EAAA;gBACpC,CAAC,CAAC,SAAS,CAAC,cAAqB,EAAE,CAAC,GAAG,CAAC,CAAC;IACtC,iBAAA,OAAO,CAAC,aAAoB,EAAE,UAAU,CAAC,CAAA;gBAC5C,CAAC,CAAC,SAAS,CAAC,cAAqB,EAAE,CAAC,GAAG,CAAC,CAAC;IACtC,iBAAA,OAAO,CAAC,aAAoB,EAAE,UAAU,CAAC,CAAA;gBAC5C,UAAU,IAAI,CAAC,CAAA;aAChB;IACD,QAAA,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;IACb,QAAA,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;IACb,QAAA,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;IACb,QAAA,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;IACb,QAAA,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;IACb,QAAA,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;IACb,QAAA,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;IACb,QAAA,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;IACb,QAAA,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;IACb,QAAA,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;IACb,QAAA,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;IACb,QAAA,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YAEb,MAAM,MAAM,GAAG,IAAI,cAAc,CAAC,IAAI,EAAE,SAAS,CAAC,CAAA;YAElD,OAAO;IACL,YAAA,MAAM,EAAE;IACN,gBAAA,QAAQ,EAAE,cAAc;IACxB,gBAAA,KAAK,EAAE,WAAW;IAClB,gBAAA,MAAM,EAAE,YAAY;IACpB,gBAAA,OAAO,EAAE,MAAM;IAChB,aAAA;IACD,YAAA,IAAI,EAAE;IACJ,gBAAA,SAAS,EAAE,aAAa;IACxB,gBAAA,SAAS,EAAE,aAAa;IACxB,gBAAA,KAAK,EAAE,SAAS;IAChB,gBAAA,MAAM,EAAE,SAAS;IACjB,gBAAA,MAAM,EAAE,UAAU;IAClB,gBAAA,OAAO,EAAE,MAAM;IAChB,aAAA;aACF,CAAA;SACF;IACF;;ICjND;;;;IAIG;IAoBH;IACA,MAAM,UAAU,GAA0B;IACxC,IAAA,CAAC,EAAE,GAAG;IACN,IAAA,CAAC,EAAE,GAAG;IACN,IAAA,CAAC,EAAE,GAAG;IACN,IAAA,CAAC,EAAE,GAAG;IACN,IAAA,CAAC,EAAE,GAAG;IACN,IAAA,CAAC,EAAE,GAAG;IACN,IAAA,CAAC,EAAE,GAAG;IACN,IAAA,CAAC,EAAE,GAAG;IACN,IAAA,CAAC,EAAE,GAAG;IACN,IAAA,EAAE,EAAE,GAAG;QACP,CAAC,EAAE,GAAG;KACP,CAAA;IAED,MAAM,WAAW,GAAG;QAClB,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;IAEL,IAAA,KAAK;;KAGN,CAAA;IAED,MAAM,aAAa,GAAG;IACpB,IAAA,QAAQ,EAAE,UAAU,EAAE,OAAO,EAAE,UAAU,EAAE,SAAS;IACpD,IAAA,IAAI,EAAE,YAAY,EAAE,UAAU,EAAE,eAAe;KAChD,CAAA;IAED,MAAMsF,cAAY,GAAG,KAAK,CAAA;IAE1B,SAAS,WAAW,CAAE,KAAa,EAAE,SAAkB,EAAE,OAAgB,EAAA;IACvE,IAAA,IAAI,EAAE,GAAG,CAAG,EAAA,KAAK,EAAE,CAAA;IACnB,IAAA,IAAI,SAAS;IAAE,QAAA,EAAE,IAAI,CAAA,CAAA,EAAI,SAAS,CAAA,CAAE,CAAA;IACpC,IAAA,IAAI,OAAO;IAAE,QAAA,EAAE,IAAI,CAAA,CAAA,EAAI,OAAO,CAAA,CAAE,CAAA;IAChC,IAAA,OAAO,EAAE,CAAA;IACX,CAAC;IAOD,MAAM,SAAU,SAAQ,eAAe,CAAA;IAKrC;;;;;;;;;;;IAWG;QACH,WAAa,CAAA,QAAkB,EAAE,MAAqC,EAAA;IACpE,QAAA,MAAM,CAAC,GAAG,MAAM,IAAI,EAAE,CAAA;IAEtB,QAAA,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAA;YAElB,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,CAAA;YACjC,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,KAAK,CAAC,CAAA;SAChD;IAED,IAAA,IAAI,IAAI,GAAM,EAAA,OAAO,KAAK,CAAA,EAAE;QAE5B,MAAM,GAAA;;IAGJ,QAAA,IAAI5E,aAAK;gBAAE,GAAG,CAAC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;YAEpD,IAAI,QAAQ,GAAG,KAAK,CAAA;IACpB,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAE,CAAC,CAAE,CAAA;YAClD,MAAM,QAAQ,GAAG,UAAU,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAA;YACzC,MAAM,QAAQ,GAAG,UAAU,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAA;YACzC,IAAI,QAAQ,KAAK,QAAQ,IAAI,QAAQ,CAAC,IAAI,EAAE,EAAE;gBAC5C,QAAQ,GAAG,IAAI,CAAA;IAChB,SAAA;IAED,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,KAAK,KAAK,CAAA;IACjC,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,KAAK,OAAO,CAAA;IAErC,QAAA,MAAM,CAAC,GAAc,IAAI,CAAC,SAAS,CAAA;IACnC,QAAA,MAAM,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAA;IAEhC,QAAA,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAA;YACpB,IAAI,WAAW,GAAG,EAAE,CAAA;YACpB,IAAI,UAAU,GAAG,EAAE,CAAA;IAEnB,QAAA,MAAM,cAAc,GAAG,IAAI,CAAC,cAAc,CAAA;IAC1C,QAAA,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAA;IACtC,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAA;IAElC,QAAA,MAAM,MAAM,GAAG,CAAC,CAAC,MAAM,CAAA;IACvB,QAAA,MAAM,KAAK,GAAG,CAAC,CAAC,KAAK,CAAA;YACrB,IAAI,QAAQ,GAAG,KAAK,CAAA;YACpB,IAAI,YAAyB,EAAE,YAAoB,CAAA;IAEnD,QAAA,MAAM,UAAU,GAAG,CAAC,CAAC,UAAU,CAAA;IAC/B,QAAA,IAAI,aAAuB,CAAA;IAC3B,QAAA,IAAI,WAAyB,CAAA;IAC7B,QAAA,IAAI,aAAsB,CAAA;YAE1B,IAAI,IAAI,EAAE,UAAU,CAAA;YACpB,IAAI,MAAM,EAAE,SAAiB,EAAE,KAAa,EAAE,OAAe,EAAE,SAAiB,CAAA;YAChF,IAAI,OAAe,EAAE,QAAQ,EAAE,MAAe,EAAE,OAAe,EAAE,MAAM,CAAA;IACvE,QAAA,IAAI,YAAoB,CAAA;IAExB,QAAA,IAAI,UAAU,EAAE,SAAS,EAAE,UAAU,CAAA;IACrC,QAAA,IAAI,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAA;YAE/B,IAAI,UAAU,GAA0B,EAAE,CAAA;YAC1C,MAAM,YAAY,GAUb,EAAE,CAAA;YACP,MAAM,QAAQ,GAA2B,EAAE,CAAA;YAE3C,MAAM,cAAc,GAA0C,EAAE,CAAA;IAChE,QAAA,IAAI,iBAAsD,CAAA;IAC1D,QAAA,IAAI,gBAA+G,CAAA;;;;;;;;;;;;;;YAenH,MAAM,WAAW,GAA0B,EAAE,CAAA;YAC7C,MAAM,UAAU,GAAuB,EAAE,CAAA;YAEzC,MAAM,SAAS,GAA0B,EAAE,CAAA;IAC3C,QAAA,IAAI,QAAgB,EAAE,OAAe,EAAE,QAAiB,CAAA;IACxD,QAAA,IAAI,gBAAwB,EAAE,YAAoB,EAAE,cAAsB,EAAE,cAAsB,CAAA;YAElG,MAAM,UAAU,GAA4B,EAAE,CAAA;IAC9C,QAAA,IAAI,sBAA8B,CAAA;IAElC,QAAA,MAAM,SAAS,GAAG;IAChB,YAAA,OAAO,EAAE,EAAW;IACpB,YAAA,MAAM,EAAE,EAAW;aACpB,CAAA;IACD,QAAA,MAAM,OAAO,GAAG,SAAS,CAAC,OAAO,CAAA;IACjC,QAAA,MAAM,MAAM,GAAG,SAAS,CAAC,MAAM,CAAA;IAE/B,QAAA,MAAM,OAAO,GAAG,CAAC,CAAC,OAAO,CAAA;IACzB,QAAA,MAAM,SAAS,GAAG,CAAC,CAAC,SAAS,CAAA;IAC7B,QAAA,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC,CAAA;YAC5D,IAAI,KAAK,IAAI,OAAO;gBAAE,SAAS,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC,EAAE,SAAS,CAAC,CAAA;IACvE,QAAA,IAAI,KAAK;gBAAE,SAAS,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,EAAE,SAAS,CAAC,CAAA;IAErD,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,YAAY,EAAE,CAAA;IAC5B,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,YAAY,EAAE,CAAA;YAE5B,IAAI,GAAG,GAAG,CAAC,CAAA;YACX,IAAI,QAAQ,GAAG,CAAC,CAAA;YAChB,IAAI,YAAY,GAAG,IAAI,CAAA;IAEvB,QAAA,SAAS,kBAAkB,CAAE,EAAU,EAAE,EAAU,EAAE,KAAe,EAAA;gBAClE,KAAK,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;IAC5B,gBAAA,IAAI,GAAG,KAAK,CAAE,CAAC,CAAE,CAAA;oBACjB,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;IAE9B,gBAAA,IAAI,UAAU,KAAK,QAAQ,IAAI,UAAU,KAAK,QAAQ,EAAE;;;IAItD,oBAAA,IAAI,YAAY,EAAE;IAChB,wBAAA,IAAI,YAAY,EAAE;IAChB,4BAAA,IAAI,QAAQ,EAAE;oCACZ,YAAY,GAAG,IAAI,YAAY,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,CAAA;IACpD,gCAAA,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAA;IAC1B,6BAAA;IAAM,iCAAA;oCACL,YAAY,GAAG,EAAE,CAAA;IAClB,6BAAA;gCACD,YAAY,GAAG,CAAC,CAAA;IACjB,yBAAA;IAAM,6BAAA;IACL,4BAAA,IAAI,CAAC,cAAc;oCAAE,UAAU,GAAG,EAAE,CAAA;IACrC,yBAAA;4BAED,QAAQ,GAAG,CAAC,CAAA;IACZ,wBAAA,OAAO,GAAG,QAAQ,CAAC,QAAQ,EAAE,CAAA;4BAC7B,QAAQ,GAAG,IAAI,CAAA;4BAEf,YAAY,GAAG,KAAK,CAAA;IACrB,qBAAA;IAED,oBAAA,IAAI,cAAc,IAAI,QAAQ,GAAG,CAAC;4BAAE,SAAQ;wBAE5C,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAY,EAAE,EAAE,GAAG,CAAC,CAAA;IAEjC,oBAAA,IAAI,KAAK,EAAE;IACT,wBAAA,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC4E,cAAY,CAAC,CAAA;IAC7B,wBAAA,EAAE,GAAG,EAAE,CAAC,MAAM,KAAK,EAAE,GAAG,CAAC,GAAG,CAAC,CAAA;IAE7B,wBAAA,QAAQ,GAAG,EAAE,CAAE,CAAC,CAAE,CAAA;IAClB,wBAAA,IAAI,UAAU,IAAI,QAAQ,KAAK,IAAI;gCAAE,SAAQ;4BAE7C,CAAC,GAAG,UAAU,CAAC,EAAE,CAAE,CAAC,GAAG,EAAE,CAAE,CAAC,CAAA;4BAC5B,CAAC,GAAG,UAAU,CAAC,EAAE,CAAE,CAAC,GAAG,EAAE,CAAE,CAAC,CAAA;4BAC5B,CAAC,GAAG,UAAU,CAAC,EAAE,CAAE,CAAC,GAAG,EAAE,CAAE,CAAC,CAAA;IAC7B,qBAAA;IAAM,yBAAA;IACL,wBAAA,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAA;IACpC,wBAAA,IAAI,UAAU,IAAI,QAAQ,KAAK,IAAI;gCAAE,SAAQ;IAE7C,wBAAA,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAA;IAClC,wBAAA,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAA;IAClC,wBAAA,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAA;IACnC,qBAAA;IAED,oBAAA,IAAI,YAAY,EAAE;IAChB,wBAAA,MAAM,CAAC,GAAG,YAAY,GAAG,CAAC,CAAA;IAE1B,wBAAA,YAAY,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,CAAC,CAAA;IACzB,wBAAA,YAAY,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,CAAC,CAAA;IACzB,wBAAA,YAAY,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,CAAC,CAAA;4BAEzB,YAAY,IAAI,CAAC,CAAA;IAEjB,wBAAA,IAAI,QAAQ;gCAAE,SAAQ;IACvB,qBAAA;IAED,oBAAA,IAAI,OAAO,CAAA;IAEX,oBAAA,IAAI,KAAK,EAAE;4BACT,MAAM,GAAG,QAAQ,CAAC,EAAG,CAAE,CAAC,CAAE,CAAC,CAAA;4BAC3B,OAAO,GAAG,EAAE,CAAA;4BACZ,MAAM,IAAI,IAAI,CAAE,CAAC,CAAE,KAAK,GAAG,CAAC,CAAA;IAC5B,wBAAA,SAAS,GAAG,EAAE,GAAG,EAAE,GAAG,EAAG,CAAE,CAAC,CAAE,CAAA;4BAC9B,KAAK,GAAG,QAAQ,CAAC,EAAG,CAAE,CAAC,GAAG,EAAG,CAAE,CAAC,CAAA;4BAChC,OAAO,GAAG,EAAE,CAAA;IACZ,wBAAA,OAAO,GAAG,EAAG,CAAE,CAAC,CAAE,CAAA;4BAClB,MAAM,GAAG,EAAE,CAAA;4BACX,SAAS,GAAG,GAAG,CAAA;IAChB,qBAAA;IAAM,yBAAA;IACL,wBAAA,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,WAAW,CAAC,CAAA;IACjD,wBAAA,IAAI,GAAG,IAAI,MAAM,KAAK,KAAK,EAAE;gCAC3B,WAAW,GAAG,EAAE,CAAA;IACjB,yBAAA;4BACD,MAAM,IAAI,IAAI,CAAE,CAAC,CAAE,KAAK,GAAG,CAAC,CAAA;4BAC5B,SAAS,GAAG,IAAI,CAAE,EAAE,CAAE,CAAC,IAAI,EAAE,CAAA;IAC7B,wBAAA,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,UAAU,CAAC,CAAA;IAChD,wBAAA,IAAI,GAAG,IAAI,KAAK,KAAK,IAAI,EAAE;gCACzB,UAAU,GAAG,EAAE,CAAA;IAChB,yBAAA;4BACD,OAAO,GAAG,IAAI,CAAE,EAAE,CAAE,CAAC,IAAI,EAAE,CAAA;IAC3B,wBAAA,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,KAAK,CAAA;IAC5C,wBAAA,OAAO,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAA;4BACxC,MAAM,GAAG,IAAI,CAAE,EAAE,CAAE,CAAC,IAAI,EAAE,CAAA;IAC1B,wBAAA,SAAS,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAA;4BAE1C,IAAI,CAAC,QAAQ,EAAE;IACb,4BAAA,IAAI,OAAO,EAAE;IACX,gCAAA,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAA;;oCAEnC,IAAI,OAAO,IAAI,oBAAoB;IAAE,oCAAA,OAAO,GAAG,oBAAoB,CAAC,OAAO,CAAC,CAAA;IAC7E,6BAAA;IAAM,iCAAA;IACL,gCAAA,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAA;oCACnC,IAAI,CAAC,SAAS,EAAE;IACd,oCAAA,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAA;IACtC,iCAAA;IACF,6BAAA;;gCAED,YAAY,GAAG,QAAQ,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAA;IACzE,yBAAA;IACF,qBAAA;wBAED,SAAS,CAAC,UAAU,EAAE,CAAA;IACtB,oBAAA,SAAS,CAAC,UAAU,CAAE,GAAG,CAAE,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA;IAE5D,oBAAA,SAAS,CAAC,CAAC,CAAE,GAAG,CAAE,GAAG,CAAC,CAAA;IACtB,oBAAA,SAAS,CAAC,CAAC,CAAE,GAAG,CAAE,GAAG,CAAC,CAAA;IACtB,oBAAA,SAAS,CAAC,CAAC,CAAE,GAAG,CAAE,GAAG,CAAC,CAAA;IACtB,oBAAA,SAAS,CAAC,MAAM,CAAE,GAAG,CAAE,GAAG,MAAM,CAAA;IAChC,oBAAA,SAAS,CAAC,MAAM,CAAE,GAAG,CAAE,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA;IAC9C,oBAAA,SAAS,CAAC,SAAS,CAAE,GAAG,CAAE,GAAG,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,SAAS,CAAA;IAE7D,oBAAA,IAAI,KAAK,EAAE;IACT,wBAAA,SAAS,CAAC,aAAc,CAAE,GAAG,CAAE,GAAG,UAAU,CAAC,EAAG,CAAE,CAAC,GAAG,EAAG,CAAE,CAAC,CAAA;IAC5D,wBAAA,SAAS,CAAC,MAAM,CAAE,GAAG,CAAE,GAAG,UAAU,CAAC,EAAG,CAAE,EAAE,GAAG,EAAG,CAAE,CAAC,CAAA;IACtD,qBAAA;IAAM,yBAAA;IACL,wBAAA,SAAS,CAAC,OAAO,CAAE,GAAG,CAAE,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,OAAO,CAAA;IACvD,wBAAA,IAAI,OAAO,EAAE;IACX,4BAAA,SAAS,CAAC,aAAc,CAAE,GAAG,CAAE,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAA;IACjE,yBAAA;;IAED,wBAAA,IAAI,QAAQ,CAAC,YAAY,CAAC,EAAE;IAC1B,4BAAA,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE;oCAC3B,SAAS,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC,EAAE,MAAM,CAAC,CAAA;IAC9C,6BAAA;IACD,4BAAA,SAAS,CAAC,YAAa,CAAE,GAAG,CAAE,GAAG,YAAY,CAAA;IAC9C,yBAAA;IACF,qBAAA;wBAED,MAAM,QAAQ,GAAG,WAAW,CAAC,KAAK,EAAE,SAAS,EAAE,OAAO,CAAC,CAAA;;;IAIvD,oBAAA,IAAI,MAAM,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;IACrE,wBAAA,IAAI,gBAAgB,KAAK,SAAS,IAAI,cAAc,KAAK,OAAO;IAC5D,6BAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC;qCAC3B,YAAY,KAAK,KAAK,IAAI,cAAc,KAAK,OAAO,CAAC,CAAC,EAC3D;gCACA,QAAQ,IAAI,CAAC,CAAA;IACb,4BAAA,OAAO,GAAG,QAAQ,CAAC,QAAQ,EAAE,CAAA;gCAE7B,YAAY,GAAG,KAAK,CAAA;gCACpB,cAAc,GAAG,OAAO,CAAA;gCACxB,cAAc,GAAG,OAAO,CAAA;IACzB,yBAAA;IACF,qBAAA;IAAM,yBAAA,IAAI,CAAC,QAAQ,IAAI,gBAAgB,KAAK,SAAS,EAAE;4BACtD,QAAQ,IAAI,CAAC,CAAA;IACb,wBAAA,OAAO,GAAG,QAAQ,CAAC,QAAQ,EAAE,CAAA;IAC9B,qBAAA;IAED,oBAAA,EAAE,CAAC,OAAO,CAAC,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,CAAC,CAAA;IAEpF,oBAAA,UAAU,CAAE,MAAM,CAAE,GAAG,GAAG,CAAA;wBAC1B,GAAG,IAAI,CAAC,CAAA;wBACR,QAAQ,GAAG,KAAK,CAAA;wBAChB,gBAAgB,GAAG,SAAS,CAAA;IAC7B,iBAAA;yBAAM,IAAI,UAAU,KAAK,QAAQ,EAAE;IAClC,oBAAA,MAAM,OAAO,GAAG,UAAU,CAAE,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAE,CAAA;wBACzD,MAAM,GAAG,GAAG,CAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE,CAAA;wBAC9B,MAAM,SAAS,GAA0B,EAAE,CAAA;wBAE3C,IAAI,OAAO,KAAK,SAAS,EAAE;;4BAEzB,SAAQ;IACT,qBAAA;wBAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;IAC1B,wBAAA,IAAI,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAE,CAAC,CAAE,EAAE,CAAC,CAAC,CAAC,CAAA;IAC9C,wBAAA,IAAI,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC;gCAAE,SAAQ;IACjC,wBAAA,KAAK,GAAG,UAAU,CAAE,KAAK,CAAE,CAAA;4BAC3B,IAAI,KAAK,KAAK,SAAS,EAAE;;gCAEvB,SAAQ;6BACT;;;;;IAKG;4BAEJ,IAAI,OAAO,GAAG,KAAK,EAAE;IACnB,4BAAA,GAAG,CAAC,KAAK,GAAG,OAAO,CAAA;IACnB,4BAAA,GAAG,CAAC,KAAK,GAAG,KAAK,CAAA;IAClB,yBAAA;IAAM,6BAAA;IACL,4BAAA,GAAG,CAAC,KAAK,GAAG,KAAK,CAAA;IACjB,4BAAA,GAAG,CAAC,KAAK,GAAG,OAAO,CAAA;IACpB,yBAAA;;;IAID,wBAAA,IAAI,SAAS,CAAE,KAAK,CAAE,KAAK,SAAS,EAAE;IACpC,4BAAA,CAAC,CAAC,SAAS,CAAC,SAAS,CAAE,SAAS,CAAE,KAAK,CAAE,CAAE,IAAI,CAAC,CAAA;IACjD,yBAAA;IAAM,6BAAA;gCACL,MAAM,IAAI,GAAG,GAAG,CAAC,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC,KAAK,CAAA;IACxC,4BAAA,IAAI,QAAQ,CAAE,IAAI,CAAE,KAAK,SAAS,EAAE;IAClC,gCAAA,QAAQ,CAAE,IAAI,CAAE,GAAG,IAAI,CAAA;oCACvB,SAAS,CAAE,KAAK,CAAE,GAAG,CAAC,CAAC,SAAS,CAAC,KAAK,CAAA;IACtC,gCAAA,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAA;IACjC,6BAAA;IACF,yBAAA;IACF,qBAAA;IACF,iBAAA;yBAAM,IAAI,UAAU,KAAK,QAAQ,EAAE;wBAClC,UAAU,GAAG,IAAI,CAAE,EAAE,CAAE,CAAC,IAAI,EAAE,CAAA;IAC9B,oBAAA,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAA;wBACxC,UAAU,GAAG,IAAI,CAAE,EAAE,CAAE,CAAC,IAAI,EAAE,CAAA;wBAC9B,QAAQ,GAAG,IAAI,CAAE,EAAE,CAAE,CAAC,IAAI,EAAE,CAAA;IAC5B,oBAAA,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAA;wBACtC,QAAQ,GAAG,IAAI,CAAE,EAAE,CAAE,CAAC,IAAI,EAAE,CAAA;IAC5B,oBAAA,IAAI,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAA;IAC5C,oBAAA,SAAS,GAAG,CAAC,UAAU,CAAE,SAAS,CAAE,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,CAAA;wBACpE,OAAO,CAAC,IAAI,CAAC;4BACX,UAAU,EAAE,SAAS,EAAE,UAAU;4BACjC,QAAQ,EAAE,OAAO,EAAE,QAAQ;4BAC3B,SAAS;IACV,qBAAA,CAAC,CAAA;IACH,iBAAA;yBAAM,IAAI,UAAU,KAAK,QAAQ,EAAE;wBAClC,UAAU,GAAG,IAAI,CAAE,EAAE,CAAE,CAAC,IAAI,EAAE,CAAA;IAC9B,oBAAA,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAA;wBACxC,UAAU,GAAG,IAAI,CAAE,EAAE,CAAE,CAAC,IAAI,EAAE,CAAA;wBAC9B,QAAQ,GAAG,IAAI,CAAE,EAAE,CAAE,CAAC,IAAI,EAAE,CAAA;IAC5B,oBAAA,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAA;wBACtC,QAAQ,GAAG,IAAI,CAAE,EAAE,CAAE,CAAC,IAAI,EAAE,CAAA;wBAC5B,MAAM,CAAC,IAAI,CAAC;4BACV,UAAU,EAAE,SAAS,EAAE,UAAU;4BACjC,QAAQ,EAAE,OAAO,EAAE,QAAQ;IAC5B,qBAAA,CAAC,CAAA;IACH,iBAAA;yBAAM,IAAI,UAAU,KAAK,QAAQ,EAAE;wBAClC,WAAW,CAAE,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAA;IAC3D,iBAAA;yBAAM,IAAI,UAAU,KAAK,QAAQ,EAAE;wBAClC,MAAM,eAAe,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAA;wBACvC,IAAI,eAAe,KAAK,sBAAsB,EAAE;IAC9C,wBAAA,UAAU,CAAE,eAAe,CAAE,GAAG,EAAE,CAAA;4BAClC,sBAAsB,GAAG,eAAe,CAAA;IACzC,qBAAA;wBACD,UAAU,CAAE,eAAe,CAAE,CAAC,IAAI,CAChC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,KAAK,CAACA,cAAY,CAAC,CAC9C,CAAA;IACF,iBAAA;yBAAM,IAAI,UAAU,KAAK,QAAQ,EAAE;;IAElC,oBAAA,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAA;wBACzC,MAAM,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAA;wBACjC,MAAM,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAA;IAC/B,oBAAA,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAA;wBACjD,MAAM,EAAE,GAAG,WAAW,CAAC,KAAK,EAAE,SAAS,EAAE,OAAO,CAAC,CAAA;IACjD,oBAAA,UAAU,CAAE,EAAE,CAAE,GAAG,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,KAAK,EAAE,CAAA;IAC1D,iBAAA;yBAAM,IAAI,UAAU,KAAK,QAAQ,EAAE;IAClC,oBAAA,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,CAAA;wBACvC,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;wBAChC,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,MAAM,CAAC,CAAA;IACrC,oBAAA,IAAI,KAAK,CAAA;IAET,oBAAA,IAAI,aAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;4BAC/B,gBAAgB,GAAG,GAAoG,CAAA;4BACvH,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;IACnC,qBAAA;IAAM,yBAAA;4BACL,KAAK,GAAG,IAAI,CAAA;IACb,qBAAA;wBACD,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAA;wBAE/B,IAAI,gBAAgB,KAAK,QAAQ,EAAE;IACjC,wBAAA,iBAAiB,GAAG;IAClB,4BAAA,SAAS,EAAE,EAAE;IACb,4BAAA,IAAI,EAAE,EAAE;6BACT,CAAA;IACD,wBAAA,cAAc,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAA;IACvC,qBAAA;6BAAM,IAAI,gBAAgB,KAAK,UAAU,EAAE;4BAC1C,IAAI,iBAAiB,CAAC,IAAI;IAAE,4BAAA,iBAAiB,CAAC,IAAI,IAAI,GAAG,CAAA;IACzD,wBAAA,iBAAiB,CAAC,IAAI,IAAI,KAAK,CAAA;IAChC,qBAAA;6BAAM,IAAI,gBAAgB,KAAK,OAAO,EAAE;IACvC,wBAAA,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CACxB,iBAAiB,CAAC,SAAS,EAC3B,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CACvB,CAAA;IACF,qBAAA;IACF,iBAAA;IAAM,qBAAA,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;IACjC,oBAAA,MAAM,EAAE,GAAG,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC,CAAA;wBAClD,SAAS,CAAE,EAAE,CAAC,SAAS,CAAE,GAAG,EAAE,CAAC,KAAK,CAAA;wBACpC,QAAQ,IAAI,CAAC,CAAA;IACb,oBAAA,OAAO,GAAG,QAAQ,CAAC,QAAQ,EAAE,CAAA;wBAC7B,QAAQ,GAAG,IAAI,CAAA;IAChB,iBAAA;IAAM,qBAAA,IAAI,UAAU,KAAK,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,KAAK,EAAE;wBACjE,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,KAAK,cAAc,EAAE;4BAC1C,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAA;IACjC,wBAAA,IAAI,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC;IAAE,4BAAA,IAAI,GAAG,IAAI,GAAG,IAAI,CAAA;IAEtD,wBAAA,aAAa,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAA;IAClC,wBAAA,UAAU,CAAE,IAAI,CAAE,GAAG,aAAa,CAAA;IACnC,qBAAA;6BAAM,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,OAAO,EAAE;4BACzC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;4BAC/B,MAAM,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAE,EAAE,CAAE,CAAC,GAAG,CAAC,CAAA;4BAEpC,IAAI,GAAG,KAAK,CAAC,EAAE;IACb,4BAAA,aAAa,GAAG,IAAIrF,aAAO,EAAE,CAAA;IAC7B,4BAAA,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;IAC3C,yBAAA;IAED,wBAAA,MAAM,SAAS,GAAG,aAAa,CAAC,QAAQ,CAAA;IAExC,wBAAA,SAAS,CAAE,CAAC,GAAG,CAAC,GAAG,GAAG,CAAE,GAAG,UAAU,CAAC,KAAK,CAAE,CAAC,CAAE,CAAC,CAAA;IACjD,wBAAA,SAAS,CAAE,CAAC,GAAG,CAAC,GAAG,GAAG,CAAE,GAAG,UAAU,CAAC,KAAK,CAAE,CAAC,CAAE,CAAC,CAAA;IACjD,wBAAA,SAAS,CAAE,CAAC,GAAG,CAAC,GAAG,GAAG,CAAE,GAAG,UAAU,CAAC,KAAK,CAAE,CAAC,CAAE,CAAC,CAAA;IACjD,wBAAA,SAAS,CAAE,CAAC,GAAG,CAAC,GAAG,GAAG,CAAE,GAAG,UAAU,CAAC,KAAK,CAAE,CAAC,CAAE,CAAC,CAAA;IAClD,qBAAA;6BAAM,IACL,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,KAAK,gCAAgC;4BACxD,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,KAAK,gCAAgC,EACxD;4BACA,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,OAAO,EAAE;IAClC,4BAAA,WAAW,GAAG,aAAa,CAAC,OAAO,EAAE,CAAA;IACtC,yBAAA;IAED,wBAAA,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;IAChD,wBAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;gCAClD,MAAM,CAAC,GAAG,SAAS,CAAE,CAAC,CAAE,CAAC,IAAI,EAAE,CAAA;IAC/B,4BAAA,IAAI,CAAC;IAAE,gCAAA,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;IACrC,yBAAA;IACF,qBAAA;IACF,iBAAA;yBAAM,IAAI,UAAU,KAAK,QAAQ,EAAE;wBAClC,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAA;IAC1B,iBAAA;yBAAM,IAAI,UAAU,KAAK,QAAQ,EAAE;IAClC,oBAAA,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,GAAG,EAAE,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,CAAA;IAC7D,iBAAA;yBAAM,IAAI,UAAU,KAAK,QAAQ,EAAE;wBAClC,YAAY,GAAG,IAAI,CAAA;IACpB,iBAAA;yBAAM,IAAI,UAAU,KAAK,QAAQ,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,KAAK,EAAE;IAC3D,oBAAA,IAAI,YAAY;4BAAE,SAAQ;IAE1B,oBAAA,IAAI,YAAY,IAAI,CAAC,QAAQ,EAAE;4BAC7B,MAAM,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC,YAAY,CAAC,CAAC,CAAA;4BAC3C,QAAQ,GAAG,IAAI,CAAA;IAChB,qBAAA;wBAED,QAAQ,IAAI,CAAC,CAAA;wBACb,YAAY,GAAG,IAAI,CAAA;IACpB,iBAAA;yBAAM,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,OAAO,EAAE;;IAExC,oBAAA,IAAI,IAAI,CAAE,EAAE,CAAE,KAAK,GAAG;4BAAE,SAAQ;wBAEhC,IAAI,CAAC,aAAa,IAAI,aAAa,CAAC,IAAI,KAAK,KAAK,EAAE;4BAClD,MAAM,OAAO,GAAG,KAAK,CAAA;IACrB,wBAAA,aAAa,GAAG,IAAI,QAAQ,CAAC,OAAO,CAAC,CAAA;IACrC,wBAAA,UAAU,CAAE,OAAO,CAAE,GAAG,aAAa,CAAA;IACrC,wBAAA,WAAW,GAAG,aAAa,CAAC,OAAO,EAAE,CAAA;IACtC,qBAAA;wBAED,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;wBAC7B,MAAM,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAE,CAAC,CAAE,CAAC,GAAG,CAAC,CAAA;wBAEtC,IAAI,MAAM,KAAK,CAAC,EAAE;IAChB,wBAAA,aAAa,GAAG,IAAIA,aAAO,EAAE,CAAA;IAC7B,wBAAA,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;IAC3C,qBAAA;IAED,oBAAA,MAAM,OAAO,GAAG,aAAa,CAAC,QAAQ,CAAA;IAEtC,oBAAA,OAAO,CAAE,CAAC,GAAG,CAAC,GAAG,MAAM,CAAE,GAAG,UAAU,CAAC,GAAG,CAAE,CAAC,CAAE,CAAC,CAAA;IAChD,oBAAA,OAAO,CAAE,CAAC,GAAG,CAAC,GAAG,MAAM,CAAE,GAAG,UAAU,CAAC,GAAG,CAAE,CAAC,CAAE,CAAC,CAAA;IAChD,oBAAA,OAAO,CAAE,CAAC,GAAG,CAAC,GAAG,MAAM,CAAE,GAAG,UAAU,CAAC,GAAG,CAAE,CAAC,CAAE,CAAC,CAAA;IAChD,oBAAA,OAAO,CAAE,CAAC,GAAG,CAAC,GAAG,MAAM,CAAE,GAAG,UAAU,CAAC,GAAG,CAAE,CAAC,CAAE,CAAC,CAAA;IACjD,iBAAA;yBAAM,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,OAAO,EAAE;IACxC,oBAAA,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE;IACvB,wBAAA,YAAY,CAAC,KAAK,GAAG,IAAIA,aAAO,EAAE,CAAA;IACnC,qBAAA;wBAED,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;wBAC/B,MAAM,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAE,CAAC,CAAE,CAAC,GAAG,CAAC,CAAA;IACxC,oBAAA,MAAM,SAAS,GAAG,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAA;IAE7C,oBAAA,SAAS,CAAE,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAE,GAAG,UAAU,CAAC,KAAK,CAAE,CAAC,CAAE,CAAC,CAAA;IACtD,oBAAA,SAAS,CAAE,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAE,GAAG,UAAU,CAAC,KAAK,CAAE,CAAC,CAAE,CAAC,CAAA;IACtD,oBAAA,SAAS,CAAE,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAE,GAAG,UAAU,CAAC,KAAK,CAAE,CAAC,CAAE,CAAC,CAAA;IACtD,oBAAA,SAAS,CAAE,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAE,GAAG,UAAU,CAAC,KAAK,CAAE,CAAC,CAAE,CAAC,CAAA;IACvD,iBAAA;yBAAM,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,OAAO,EAAE;IACxC,oBAAA,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE;IACvB,wBAAA,YAAY,CAAC,KAAK,GAAG,IAAIA,aAAO,EAAE,CAAA;IACnC,qBAAA;wBAED,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;wBAC/B,MAAM,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAE,CAAC,CAAE,CAAC,GAAG,CAAC,CAAA;IACxC,oBAAA,MAAM,SAAS,GAAG,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAA;IAE7C,oBAAA,SAAS,CAAE,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAE,GAAG,UAAU,CAAC,KAAK,CAAE,CAAC,CAAE,CAAC,CAAA;IACtD,oBAAA,SAAS,CAAE,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAE,GAAG,UAAU,CAAC,KAAK,CAAE,CAAC,CAAE,CAAC,CAAA;IACtD,oBAAA,SAAS,CAAE,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAE,GAAG,UAAU,CAAC,KAAK,CAAE,CAAC,CAAE,CAAC,CAAA;IACtD,oBAAA,SAAS,CAAE,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAE,GAAG,UAAU,CAAC,KAAK,CAAE,CAAC,CAAE,CAAC,CAAA;IACvD,iBAAA;yBAAM,IAAI,UAAU,KAAK,QAAQ,EAAE;;;;;;;;;;IAWlC,oBAAA,MAAM,OAAO,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;IAC7C,oBAAA,MAAM,OAAO,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAA;IAC9C,oBAAA,MAAM,OAAO,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAA;IAE9C,oBAAA,MAAM,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAA;IAC5C,oBAAA,MAAM,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAA;IAC3C,oBAAA,MAAM,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAA;IAE5C,oBAAA,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,CAAA;;IAGzC,oBAAA,MAAM,GAAG,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,CAAA;IAC/B,oBAAA,GAAG,CAAE,CAAC,CAAE,GAAG,OAAO,CAAA;IAClB,oBAAA,GAAG,CAAE,CAAC,CAAE,GAAG,OAAO,CAAA;IAClB,oBAAA,GAAG,CAAE,CAAC,CAAE,GAAG,OAAO,CAAA;IAClB,oBAAA,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;wBAEf,IAAI,QAAQ,KAAK,CAAC,EAAE;IAClB,wBAAA,YAAY,CAAC,CAAC,GAAG,OAAO,CAAA;IACxB,wBAAA,YAAY,CAAC,CAAC,GAAG,OAAO,CAAA;IACxB,wBAAA,YAAY,CAAC,CAAC,GAAG,OAAO,CAAA;IACxB,wBAAA,YAAY,CAAC,KAAK,GAAG,KAAK,CAAA;IAC1B,wBAAA,YAAY,CAAC,IAAI,GAAG,IAAI,CAAA;IACxB,wBAAA,YAAY,CAAC,KAAK,GAAG,KAAK,CAAA;IAC1B,wBAAA,YAAY,CAAC,UAAU,GAAG,MAAM,CAAA;IACjC,qBAAA;IACF,iBAAA;IACF,aAAA;aACF;YAED,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,UAAU,KAAK,6BAA0B;gBACtE,kBAAkB,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;IAC5C,SAAC,CAAC,CAAA;;;YAKF,EAAE,CAAC,QAAQ,EAAE,CAAA;;IAIb,QAAA,MAAM,EAAE,GAAG,cAAc,CAAC,MAAM,CAAA;IAEhC,QAAA,IAAI,EAAE,EAAE;IACN,YAAA,CAAC,CAAC,SAAS,CAAC,UAAU,EAAE,EAAA;IACtB,gBAAA,EAAE,CAAC,WAAW,GAAG,EAAE,CAAA;IACrB,aAAC,CAAC,CAAA;IAEF,YAAA,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,EAAA;oBACnC,MAAM,cAAc,GAAG,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,SAAS,EAAA;IACxD,oBAAA,OAAO,SAAS,CAAE,SAAS,CAAE,CAAA;IAC/B,iBAAC,CAAC,CAAA;oBACF,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,MAAM,CAC1B,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,SAAS,EAAE,cAAc,CACxC,CAAC,CAAA;IACJ,aAAC,CAAC,CAAA;IAEF,YAAA,IAAI,EAAE,GAAG,cAAc,CAAC,MAAM,CAAA;IAC9B,YAAA,MAAM,EAAE,GAAG,CAAC,CAAC,eAAe,EAAE,CAAA;gBAC9B,MAAM,WAAW,GAA4B,EAAE,CAAA;IAE/C,YAAA,CAAC,CAAC,SAAS,CAAC,UAAU,EAAE,EAAA;IACtB,gBAAA,IAAI,EAAE,CAAC,WAAW,KAAK,EAAE,EAAE;IACzB,oBAAA,EAAE,CAAC,KAAK,GAAG,EAAE,CAAC,aAAa,CAAA;IAC3B,oBAAA,IAAI,CAAC,WAAW,CAAE,EAAE,CAAC,OAAO,CAAE,EAAE;IAC9B,wBAAA,WAAW,CAAE,EAAE,CAAC,OAAO,CAAE,GAAG,EAAE,CAAA;IAC/B,qBAAA;IACD,oBAAA,WAAW,CAAE,EAAE,CAAC,OAAO,CAAE,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAA;IACzC,iBAAA;IACH,aAAC,CAAC,CAAA;gBAEF,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,UAAU,OAAO,EAAA;IAChD,gBAAA,MAAM,SAAS,GAAG,WAAW,CAAE,OAAO,CAAE,CAAA;oBACxC,IAAI,IAAI,GAAqB,aAAa,CAAA;oBAC1C,IAAI,IAAI,GAAG,WAAW,CAAE,OAAO,CAAE,IAAI,OAAO,CAAA;IAC5C,gBAAA,IAAI,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;wBAChC,IAAI,GAAG,OAAO,CAAA;wBACd,IAAI,GAAG,OAAO,CAAA;IACf,iBAAA;IACD,gBAAA,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,MAAM,CAC1B,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,CAC7B,CAAC,CAAA;oBACF,EAAE,IAAI,CAAC,CAAA;IACT,aAAC,CAAC,CAAA;IACH,SAAA;;IAID,QAAA,IAAI,YAAY,CAAC,CAAC,KAAK,SAAS,EAAE;gBAChC,CAAC,CAAC,QAAQ,GAAG,IAAI,QAAQ,CAAC,YAA8B,CAAC,CAAA;IAC1D,SAAA;IAAM,aAAA;IACL,YAAA,CAAC,CAAC,QAAQ,GAAG,SAAS,CAAA;IACvB,SAAA;IAED,QAAA,IAAI,OAAO,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,EAAE;IACnC,YAAA,wBAAwB,CAAC,CAAC,EAAE,SAAS,CAAC,CAAA;IACvC,SAAA;YAED,CAAC,CAAC,aAAa,EAAE,CAAA;IACjB,QAAA,IAAI,CAAC,QAAQ;gBAAE,mBAAmB,CAAC,CAAC,CAAC,CAAA;IACrC,QAAA,cAAc,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,CAAA;YAClC,CAAC,CAAC,aAAa,EAAE,CAAA;YAEjB,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;gBACrC,2BAA2B,CAAC,CAAC,CAAC,CAAA;IAC/B,SAAA;YACD,qBAAqB,CAAC,CAAC,CAAC,CAAA;IAExB,QAAA,IAAIS,aAAK;gBAAE,GAAG,CAAC,OAAO,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;SACxD;IACF,CAAA;IAED,cAAc,CAAC,GAAG,CAAC,KAAK,EAAE,SAAS,CAAC,CAAA;IACpC,cAAc,CAAC,GAAG,CAAC,MAAM,EAAE,SAAS,CAAC,CAAA;IACrC,cAAc,CAAC,GAAG,CAAC,KAAK,EAAE,SAAS,CAAC;;IC7tBpC;;;;IAIG;IAmBH,MAAM4E,cAAY,GAAG,KAAK,CAAA;IAC1B,MAAM,kBAAkB,GAAG,4CAA4C,CAAA;IACvE,MAAM,aAAa,GAAG,IAAI,CAAA;IAC1B,MAAMC,cAAY,GAAG,gBAAgB,CAAA;IACrC,MAAM,YAAY,GAAG,UAAU,CAAA;IAI/B,SAAS,UAAU,CAAE,GAAW,EAAA;IAC9B,IAAA,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,CAAE,GAAG,CAAC,MAAM,GAAG,CAAC,CAAE,KAAK,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,EAAE;IACjF,QAAA,OAAO,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;IACxC,KAAA;IAAM,SAAA;IACL,QAAA,OAAO,GAAG,CAAA;IACX,KAAA;IACH,CAAC;IAED,SAAS,WAAW,CAAE,IAA0B,EAAE,KAAa,EAAA;QAC7D,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAE,KAAK,CAAE,CAAC,EAAE;YACjC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,UAAU,GAAG,EAAA;gBACrC,IAAI,CAAE,GAAG,CAAE,GAAG,CAAE,IAAI,CAAE,GAAG,CAAE,CAAE,CAAA;IAC/B,SAAC,CAAC,CAAA;IACH,KAAA;IACH,CAAC;IAED,SAAS,QAAQ,CAAE,CAAS,EAAA;QAC1B,OAAO,CAAC,KAAK,GAAG,CAAA;IAClB,CAAC;IAED,SAAS,WAAW,CAAE,KAAa,EAAE,YAAoB,EAAA;IACvD,IAAA,OAAO,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,YAAY,CAAA;IAC/C,CAAC;IAED,SAAS,YAAY,CAAE,UAAkB,EAAA;IACvC,IAAA,QAAQ,UAAU,CAAC,WAAW,EAAE;YAC9B,KAAK,GAAG,CAAC;IACT,QAAA,KAAK,MAAM;IACT,YAAA,OAAO,CAAC,CAAA;IACV,QAAA,KAAK,MAAM;IACT,YAAA,OAAO,CAAC,CAAA;IACV,QAAA,KAAK,MAAM;IACT,YAAA,OAAO,CAAC,CAAA;IACV,QAAA,KAAK,MAAM;IACT,YAAA,OAAO,CAAC,CAAA;IACX,KAAA;IACD,IAAA,OAAO,CAAC,CAAA;IACV,CAAC;IAED,SAAS,aAAa,CAAE,GAAQ,EAAE,SAAoB,EAAE,gBAAkC,EAAA;IACxF,IAAA,MAAM,SAAS,GAAG,SAAS,CAAC,SAAS,CAAA;IACrC,IAAA,MAAM,OAAO,GAAG,SAAS,CAAC,OAAO,CAAA;QAEjC,IAAI,CAAC,EAAE,CAAC,CAAA;IACR,IAAA,MAAM,EAAE,GAAG,GAAG,CAAC,SAAS,CAAA;IACxB,IAAA,MAAM,GAAG,GAAG,GAAG,CAAC,cAAc,CAAA;IAC9B,IAAA,MAAM,GAAG,GAAG,GAAG,CAAC,cAAc,CAAA;IAE9B,IAAA,IAAI,EAAE,EAAE;YACN,IAAI,EAAE,CAAC,IAAI,EAAE;IACX,YAAA,SAAS,CAAC,KAAK,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,OAAO,CAACA,cAAY,EAAE,EAAE,CAAC,CAAA;IAC3D,SAAA;YACD,IAAI,EAAE,CAAC,EAAE,EAAE;IACT,YAAA,SAAS,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,OAAO,CAACA,cAAY,EAAE,EAAE,CAAC,CAAA;IACtD,SAAA;IACF,KAAA;QAED,IAAI,YAAY,GAA0B,EAAE,CAAA;IAE5C,IAAA,IAAI,GAAG,EAAE;IACP,QAAA,WAAW,CAAC,GAAG,EAAE,SAAS,CAAC,CAAA;IAE3B,QAAA,IAAI,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,CAAA;IACrC,QAAA,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,MAAM,CAAA;YAEtB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;gBACtB,SAAS,CAAC,UAAU,EAAE,CAAA;IAEtB,YAAA,QAAQ,GAAG,GAAG,CAAC,OAAO,CAAE,CAAC,CAAE,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC,CAAA;IACtD,YAAA,OAAO,GAAG,GAAG,CAAC,WAAW,CAAE,CAAC,CAAE,CAAA;IAE9B,YAAA,YAAY,CAAE,QAAQ,CAAE,GAAG,CAAC,CAAA;IAC5B,YAAA,SAAS,CAAC,UAAU,CAAE,CAAC,CAAE,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA;IAE1D,YAAA,SAAS,CAAC,CAAC,CAAE,CAAC,CAAE,GAAG,GAAG,CAAC,aAAa,CAAE,CAAC,CAAE,CAAA;IACzC,YAAA,SAAS,CAAC,CAAC,CAAE,CAAC,CAAE,GAAG,GAAG,CAAC,aAAa,CAAE,CAAC,CAAE,CAAA;IACzC,YAAA,SAAS,CAAC,CAAC,CAAE,CAAC,CAAE,GAAG,GAAG,CAAC,aAAa,CAAE,CAAC,CAAE,CAAA;IACzC,YAAA,SAAS,CAAC,MAAM,CAAE,CAAC,CAAE,GAAG,CAAC,CAAA;IAEzB,YAAA,OAAO,GAAG,GAAG,CAAC,sBAAsB,CAAE,CAAC,CAAE,CAAA;IACzC,YAAA,KAAK,GAAG,GAAG,CAAC,sBAAsB,GAAG,GAAG,CAAC,sBAAsB,CAAE,CAAC,CAAE,GAAG,CAAC,CAAA;IAExE,YAAA,gBAAgB,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,CAAA;IAC1D,SAAA;YAED,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;IACtB,YAAA,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;gBAEb,SAAS,CAAC,UAAU,EAAE,CAAA;IAEtB,YAAA,QAAQ,GAAG,GAAG,CAAC,OAAO,CAAE,CAAC,CAAE,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC,CAAA;IACtD,YAAA,OAAO,GAAG,GAAG,CAAC,WAAW,CAAE,CAAC,CAAE,CAAA;IAE9B,YAAA,SAAS,CAAC,UAAU,CAAE,CAAC,CAAE,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA;IAE1D,YAAA,SAAS,CAAC,CAAC,CAAE,CAAC,CAAE,GAAG,GAAG,CAAC,wBAAwB,CAAE,CAAC,CAAE,CAAA;IACpD,YAAA,SAAS,CAAC,CAAC,CAAE,CAAC,CAAE,GAAG,GAAG,CAAC,wBAAwB,CAAE,CAAC,CAAE,CAAA;IACpD,YAAA,SAAS,CAAC,CAAC,CAAE,CAAC,CAAE,GAAG,GAAG,CAAC,wBAAwB,CAAE,CAAC,CAAE,CAAA;IACpD,YAAA,SAAS,CAAC,MAAM,CAAE,CAAC,CAAE,GAAG,CAAC,CAAA;IAEzB,YAAA,OAAO,GAAG,GAAG,CAAC,sBAAsB,CAAE,CAAC,CAAE,CAAA;IACzC,YAAA,KAAK,GAAG,GAAG,CAAC,sBAAsB,GAAG,GAAG,CAAC,sBAAsB,CAAE,CAAC,CAAE,GAAG,CAAC,CAAA;IAExE,YAAA,gBAAgB,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,CAAA;IAC1D,SAAA;IACF,KAAA;QAED,IAAI,GAAG,IAAI,GAAG,EAAE;IACd,QAAA,WAAW,CAAC,GAAG,EAAE,SAAS,CAAC,CAAA;IAE3B,QAAA,IAAI,SAAS,EAAE,SAAS,EAAE,SAAS,CAAA;IACnC,QAAA,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,MAAM,CAAA;IACtB,QAAA,IAAI,EAAE,GAAG,GAAG,CAAC,OAAO,CAAC,MAAM,CAAA;IAE3B,QAAA,IAAI,GAAG,GAAG,SAAS,CAAC,YAAY,EAAE,CAAA;IAClC,QAAA,IAAI,GAAG,GAAG,SAAS,CAAC,YAAY,EAAE,CAAA;YAElC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;IACtB,YAAA,SAAS,GAAG,GAAG,CAAC,SAAS,CAAE,CAAC,CAAE,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC,CAAA;IACzD,YAAA,SAAS,GAAG,GAAG,CAAC,SAAS,CAAE,CAAC,CAAE,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC,CAAA;gBACzD,SAAS,GAAG,YAAY,CAAC,GAAG,CAAC,WAAW,CAAE,CAAC,CAAE,CAAC,CAAA;IAE9C,YAAA,GAAG,CAAC,KAAK,GAAG,YAAY,CAAE,SAAS,CAAE,CAAA;IACrC,YAAA,GAAG,CAAC,KAAK,GAAG,YAAY,CAAE,SAAS,CAAE,CAAA;IACrC,YAAA,SAAS,CAAC,SAAS,CAAC,UAAU,EAAE,CAAA;gBAChC,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,SAAS,CAAC,CAAA;IAEhD,YAAA,GAAG,CAAC,KAAK,IAAI,EAAE,CAAA;IACf,YAAA,GAAG,CAAC,KAAK,IAAI,EAAE,CAAA;IACf,YAAA,SAAS,CAAC,SAAS,CAAC,UAAU,EAAE,CAAA;gBAChC,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,SAAS,CAAC,CAAA;IACjD,SAAA;IACF,KAAA;IACH,CAAC;IAED,SAAS,SAAS,CAAE,GAAQ,EAAE,SAAoB,EAAE,gBAAkC,EAAA;;IACpF,IAAA,IAAI,SAAS,GAAG,SAAS,CAAC,SAAS,CAAA;IACnC,IAAA,IAAI,OAAO,GAAG,SAAS,CAAC,OAAO,CAAA;QAE/B,IAAI,GAAG,CAAC,IAAI,EAAE;IACZ,QAAA,SAAS,CAAC,EAAE,GAAG,GAAG,CAAC,IAAI,CAAA;IACvB,QAAA,SAAS,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAA;IAC1B,KAAA;IAED,IAAA,SAAS,CAAC,QAAQ,GAAG,IAAI,QAAQ,CAAC;IAChC,QAAA,CAAC,EAAE,UAAU,CAAC,GAAG,CAAC,aAAa,CAAC;IAChC,QAAA,CAAC,EAAE,UAAU,CAAC,GAAG,CAAC,aAAa,CAAC;IAChC,QAAA,CAAC,EAAE,UAAU,CAAC,GAAG,CAAC,aAAa,CAAC;IAChC,QAAA,KAAK,EAAE,UAAU,CAAC,GAAG,CAAC,gBAAgB,CAAC;IACvC,QAAA,IAAI,EAAE,UAAU,CAAC,GAAG,CAAC,eAAe,CAAC;IACrC,QAAA,KAAK,EAAE,UAAU,CAAC,GAAG,CAAC,gBAAgB,CAAC;IACvC,QAAA,UAAU,EAAE,UAAU,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;IAC7D,KAAA,CAAC,CAAA;IAEF,IAAA,MAAM,CAAC,GAAG,IAAIvF,aAAO,EAAE,CAAA;IACvB,IAAA,MAAM,CAAC,GAAG,IAAIA,aAAO,EAAE,CAAA;IACvB,IAAA,MAAM,CAAC,GAAG,GAAG,CAAC,qBAAqB,CAAC,MAAM,CAAA;QAE1C,MAAM,aAAa,GAA2B,EAAE,CAAA;QAEhD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;YAC1B,SAAS,CAAC,UAAU,EAAE,CAAA;YAEtB,MAAM,QAAQ,GAAG,GAAG,CAAC,eAAe,CAAE,CAAC,CAAE,CAAA;YACzC,MAAM,UAAU,GAAG,GAAG,CAAC,qBAAqB,CAAE,CAAC,CAAE,CAAA;;IAGjD,QAAA,IAAI,OAAO,GAAG,aAAa,CAAC,UAAU,CAAC,CAAA;YACvC,IAAI,CAAC,OAAO,EAAE;gBACZ,MAAM,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,YAAY,CAAC,CAAA;IAC5C,YAAA,aAAa,CAAC,UAAU,CAAC,GAAG,OAAO,GAAG,CAAA,EAAA,GAAA,KAAK,KAAL,IAAA,IAAA,KAAK,uBAAL,KAAK,CAAG,CAAC,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,UAAU,CAAA;IAC/D,SAAA;IAED,QAAA,SAAS,CAAC,UAAU,CAAE,CAAC,CAAE,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA;YAE1D,CAAC,CAAC,GAAG,CACH,GAAG,CAAC,iBAAiB,CAAE,CAAC,CAAE,EAC1B,GAAG,CAAC,iBAAiB,CAAE,CAAC,CAAE,EAC1B,GAAG,CAAC,iBAAiB,CAAE,CAAC,CAAE,CAC3B,CAAA;YACD,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAA;IAC7C,QAAA,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;YAER,SAAS,CAAC,CAAC,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC,CAAC,CAAA;YACtB,SAAS,CAAC,CAAC,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC,CAAC,CAAA;YACtB,SAAS,CAAC,CAAC,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC,CAAC,CAAA;YACtB,IAAI,GAAG,CAAC,mBAAmB,EAAE;IAC3B,YAAA,SAAS,CAAC,SAAS,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,GAAG,CAAC,mBAAmB,CAAE,CAAC,CAAE,CAAC,CAAA;IACpE,SAAA;IACD,QAAA,SAAS,CAAC,MAAM,CAAE,CAAC,CAAE,GAAG,CAAC,CAAA;IAEzB,QAAA,gBAAgB,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,CAAA;IACpD,KAAA;IAED,IAAA,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAA;IACjB,IAAA,SAAS,CAAC,MAAM,GAAG,CAAC,CAAA;QACpB,qBAAqB,CAAC,SAAS,CAAC,CAAA;IAEhC,IAAA,MAAM,EAAE,GAAG,IAAIA,aAAO,EAAE,CAAA;IACxB,IAAA,MAAM,EAAE,GAAG,IAAIA,aAAO,EAAE,CAAA;IACxB,IAAA,MAAM,EAAE,GAAG,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAE,CAAC,CAAE,CAAC,UAAU,CAAA;QAElE,IAAI,CAAC,GAAG,CAAC,CAAA;QAET,SAAS,QAAQ,CAAE,GAAW,EAAA;IAC5B,QAAA,OAAO,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,UAAU,CAAE,GAAG,CAAE,CAAC,CAAC,QAAQ,CAAA;SACzD;IACD,IAAA,MAAM,cAAc,GAAG,IAAIC,aAAO,EAAE,CAAA;QAEpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;IAC1B,QAAA,MAAM,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAA;YAE7B,CAAC,CAAC,GAAG,CACH,SAAS,CAAC,CAAC,CAAE,CAAC,CAAE,EAChB,SAAS,CAAC,CAAC,CAAE,CAAC,CAAE,EAChB,SAAS,CAAC,CAAC,CAAE,CAAC,CAAE,CACjB,CAAA;IAED,QAAA,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,EAAA;IACpB,YAAA,IAAI,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;oBAAE,OAAM;IAEpC,YAAA,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;IACV,YAAA,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,CAAA;gBAElB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;oBAC1B,EAAE,CAAC,GAAG,CACJ,SAAS,CAAC,CAAC,CAAE,CAAC,CAAE,EAChB,SAAS,CAAC,CAAC,CAAE,CAAC,CAAE,EAChB,SAAS,CAAC,CAAC,CAAE,CAAC,CAAE,CACjB,CAAA;oBAED,MAAM,WAAW,GAAG,EAAE,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAA;oBAC5C,MAAM,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,SAAS,CAAA;IACjC,gBAAA,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,CAAA;IAClB,gBAAA,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,CAAA;IAElB,gBAAA,IAAI,WAAW,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI,WAAW,IAAI,EAAE,GAAG,EAAE,CAAC,EAAE;wBACtD,SAAS,CAAC,UAAU,EAAE,CAAA;IAEtB,oBAAA,SAAS,CAAC,UAAU,CAAE,CAAC,CAAE,GAAG,SAAS,CAAC,UAAU,CAAE,CAAC,CAAE,CAAA;wBACrD,SAAS,CAAC,CAAC,CAAE,CAAC,CAAE,GAAG,EAAE,CAAC,CAAC,CAAA;wBACvB,SAAS,CAAC,CAAC,CAAE,CAAC,CAAE,GAAG,EAAE,CAAC,CAAC,CAAA;wBACvB,SAAS,CAAC,CAAC,CAAE,CAAC,CAAE,GAAG,EAAE,CAAC,CAAC,CAAA;IACvB,oBAAA,SAAS,CAAC,SAAS,CAAE,CAAC,CAAE,GAAG,SAAS,CAAC,SAAS,CAAE,CAAC,CAAE,CAAA;IACnD,oBAAA,SAAS,CAAC,MAAM,CAAE,CAAC,CAAE,GAAG,CAAC,CAAA;IACzB,oBAAA,SAAS,CAAC,MAAM,CAAE,CAAC,CAAE,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA;IAEzC,oBAAA,gBAAgB,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,CAAA;wBAEnD,CAAC,IAAI,CAAC,CAAA;wBACN,OAAM;IACP,iBAAA;IACF,aAAA;IACH,SAAC,CAAC,CAAA;IACH,KAAA;IACH,CAAC;IAED,SAAS,yBAAyB,CAAE,GAAQ,EAAE,SAAoB,EAAE,UAAiC,EAAA;QACnG,IAAI,OAAO,GAA+D,EAAE,CAAA;QAC5E,IAAI,MAAM,GAAuD,EAAE,CAAA;IAEnE,IAAA,IAAI,CAAC,EAAE,EAAE,EAAE,QAAQ,EAAE,QAAQ,CAAA;;IAG7B,IAAA,IAAI,EAAE,GAAG,GAAG,CAAC,WAAW,CAAA;IAExB,IAAA,IAAI,EAAE,KAAF,IAAA,IAAA,EAAE,uBAAF,EAAE,CAAE,oBAAoB,EAAE;IAC5B,QAAA,WAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAA;IAErB,QAAA,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;gBACvD,IAAI,SAAS,GAAG,QAAQ,CAAC,EAAE,CAAC,oBAAoB,CAAE,CAAC,CAAE,CAAC,CAAA;IACtD,YAAA,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE;IAC5B,gBAAA,QAAQ,GAAG,EAAE,CAAC,qBAAqB,CAAE,CAAC,CAAE,CAAA;IACxC,gBAAA,QAAQ,GAAG,EAAE,CAAC,qBAAqB,CAAE,CAAC,CAAE,CAAA;oBACxC,OAAO,CAAC,IAAI,CAAC;IACX,oBAAA,UAAU,CAAE,EAAE,CAAC,iBAAiB,CAAE,CAAC,CAAE,CAAE;IACvC,oBAAA,QAAQ,CAAC,EAAE,CAAC,eAAe,CAAE,CAAC,CAAE,CAAC;IACjC,oBAAA,WAAW,CAAC,QAAQ,EAAE,EAAE,CAAC;IACzB,oBAAA,UAAU,CAAE,EAAE,CAAC,iBAAiB,CAAE,CAAC,CAAE,CAAE;IACvC,oBAAA,QAAQ,CAAC,EAAE,CAAC,eAAe,CAAE,CAAC,CAAE,CAAC;IACjC,oBAAA,WAAW,CAAC,QAAQ,EAAE,EAAE,CAAC;IACzB,oBAAA,CAAC,UAAU,CAAE,SAAS,CAAE,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC;IACzD,iBAAA,CAAC,CAAA;IACH,aAAA;IACF,SAAA;IACF,KAAA;;IAGD,IAAA,IAAI,GAAG,GAAG,GAAG,CAAC,kBAAkB,CAAA;IAEhC,IAAA,IAAI,GAAG,EAAE;IACP,QAAA,WAAW,CAAC,GAAG,EAAE,IAAI,CAAC,CAAA;IAEtB,QAAA,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,GAAG,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;IACxD,YAAA,QAAQ,GAAG,GAAG,CAAC,qBAAqB,CAAE,CAAC,CAAE,CAAA;IACzC,YAAA,QAAQ,GAAG,GAAG,CAAC,qBAAqB,CAAE,CAAC,CAAE,CAAA;gBACzC,MAAM,CAAC,IAAI,CAAC;IACV,gBAAA,UAAU,CAAE,GAAG,CAAC,iBAAiB,CAAE,CAAC,CAAE,CAAE;IACxC,gBAAA,QAAQ,CAAC,GAAG,CAAC,eAAe,CAAE,CAAC,CAAE,CAAC;IAClC,gBAAA,WAAW,CAAC,QAAQ,EAAE,EAAE,CAAC;IACzB,gBAAA,UAAU,CAAE,GAAG,CAAC,iBAAiB,CAAE,CAAC,CAAE,CAAE;IACxC,gBAAA,QAAQ,CAAC,GAAG,CAAC,eAAe,CAAE,CAAC,CAAE,CAAC;IAClC,gBAAA,WAAW,CAAC,QAAQ,EAAE,EAAE,CAAC;IAC1B,aAAA,CAAC,CAAA;IACH,SAAA;IACF,KAAA;QAED,IAAI,EAAE,IAAI,GAAG,EAAE;YACb,OAAO;IACL,YAAA,OAAO,EAAE,OAAO;IAChB,YAAA,MAAM,EAAE,MAAM;aACf,CAAA;IACF,KAAA;IAAM,SAAA;IACL,QAAA,OAAO,KAAK,CAAA;IACb,KAAA;IACH,CAAC;IAED,SAAS,eAAe,CAAE,GAAQ,EAAE,SAAoB,EAAE,UAAiC,EAAA;;QAEzF,IAAI,QAAQ,GAA2B,EAAE,CAAA;IACzC,IAAA,IAAI,UAAU,GAAG,SAAS,CAAC,UAAU,CAAA;QAErC,IAAI,GAAG,CAAC,qBAAqB,EAAE;IAC7B,QAAA,IAAI,QAAQ,GAAG,GAAG,CAAC,qBAAqB,CAAA;IACxC,QAAA,WAAW,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAA;YAE3B,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC,UAAU,EAAU,EAAE,CAAS,EAAA;IACjD,YAAA,IAAI,CAAC,GAAG,IAAIA,aAAO,EAAE,CAAA;IACrB,YAAA,IAAI,IAAI,GAAG,CAAC,CAAC,QAAQ,CAAA;IAErB,YAAA,IAAI,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,QAAQ,CAAE,cAAc,CAAE,CAAE,CAAC,CAAE,CAAC,CAAA;IACvD,YAAA,IAAI,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,QAAQ,CAAE,cAAc,CAAE,CAAE,CAAC,CAAE,CAAC,CAAA;IACvD,YAAA,IAAI,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,QAAQ,CAAE,cAAc,CAAE,CAAE,CAAC,CAAE,CAAC,CAAA;IAEvD,YAAA,IAAI,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,QAAQ,CAAE,cAAc,CAAE,CAAE,CAAC,CAAE,CAAC,CAAA;IACvD,YAAA,IAAI,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,QAAQ,CAAE,cAAc,CAAE,CAAE,CAAC,CAAE,CAAC,CAAA;IACvD,YAAA,IAAI,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,QAAQ,CAAE,cAAc,CAAE,CAAE,CAAC,CAAE,CAAC,CAAA;IAEvD,YAAA,IAAI,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,QAAQ,CAAE,cAAc,CAAE,CAAE,CAAC,CAAE,CAAC,CAAA;IACvD,YAAA,IAAI,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,QAAQ,CAAE,cAAc,CAAE,CAAE,CAAC,CAAE,CAAC,CAAA;IACvD,YAAA,IAAI,CAAE,EAAE,CAAE,GAAG,UAAU,CAAC,QAAQ,CAAE,cAAc,CAAE,CAAE,CAAC,CAAE,CAAC,CAAA;IAExD,YAAA,IAAI,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,QAAQ,CAAE,WAAW,CAAE,CAAE,CAAC,CAAE,CAAC,CAAA;IACpD,YAAA,IAAI,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,QAAQ,CAAE,WAAW,CAAE,CAAE,CAAC,CAAE,CAAC,CAAA;IACpD,YAAA,IAAI,CAAE,EAAE,CAAE,GAAG,UAAU,CAAC,QAAQ,CAAE,WAAW,CAAE,CAAE,CAAC,CAAE,CAAC,CAAA;gBAErD,CAAC,CAAC,SAAS,EAAE,CAAA;IAEb,YAAA,QAAQ,CAAE,EAAE,CAAE,GAAG,CAAC,CAAA;IACpB,SAAC,CAAC,CAAA;IACH,KAAA;QAED,IAAI,GAAG,CAAC,wBAAwB,EAAE;IAChC,QAAA,IAAI,GAAG,GAAG,GAAG,CAAC,wBAAwB,CAAA;IACtC,QAAA,WAAW,CAAC,GAAG,EAAE,aAAa,CAAC,CAAA;YAE/B,IAAI,aAAa,GAAG,UAAU,IAAY,EAAA;gBACxC,IAAI,OAAO,GAA2B,EAAE,CAAA;IAExC,YAAA,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;IAE7C,YAAA,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,EAAA;IACnB,gBAAA,IAAI,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;wBACnB,IAAI,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;wBAErB,IAAI,CAAC,GAAG,QAAQ,CAAC,EAAE,CAAE,CAAC,CAAE,CAAC,CAAA;wBACzB,IAAI,CAAC,GAAG,QAAQ,CAAC,EAAE,CAAE,CAAC,CAAE,CAAC,CAAA;IAEzB,oBAAA,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;4BAClB,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ,CAAE,CAAC,CAAE,CAAA;IAC7B,qBAAA;IACF,iBAAA;IAAM,qBAAA;wBACL,OAAO,CAAE,CAAC,CAAE,GAAG,QAAQ,CAAE,CAAC,CAAE,CAAA;IAC7B,iBAAA;IACH,aAAC,CAAC,CAAA;IAEF,YAAA,OAAO,OAAO,CAAA;IAChB,SAAC,CAAA;YAED,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU,EAAU,EAAE,CAAS,EAAA;gBACrD,IAAI,EAAE,GAA0B,EAAE,CAAA;IAClC,YAAA,IAAI,EAAE,GAAG,GAAG,CAAC,eAAe,CAAE,CAAC,CAAE,CAAC,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,CAAA;IAE7D,YAAA,IAAI,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;IAC5C,gBAAA,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;oBAElB,IAAI,GAAG,GAAG,aAAa,CAAC,EAAE,CAAE,CAAC,CAAE,CAAC,CAAA;oBAChC,IAAI,GAAG,GAAG,aAAa,CAAC,EAAE,CAAE,CAAC,CAAE,CAAC,CAAA;oBAEhC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,UAAU,EAAE,EAAA;wBACnC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,UAAU,EAAE,EAAA;IACnC,wBAAA,IAAI,GAAG,GAAG,IAAIA,aAAO,EAAE,CAAA;IAEvB,wBAAA,GAAG,CAAC,gBAAgB,CAAC,GAAG,CAAE,EAAE,CAAE,EAAE,GAAG,CAAE,EAAE,CAAE,CAAC,CAAA;4BAC1C,EAAE,CAAE,EAAE,GAAG,GAAG,GAAG,EAAE,CAAE,GAAG,GAAG,CAAA;IAC3B,qBAAC,CAAC,CAAA;IACJ,iBAAC,CAAC,CAAA;IACH,aAAA;IAAM,iBAAA;IACL,gBAAA,EAAE,GAAG,aAAa,CAAC,EAAE,CAAC,CAAA;IACvB,aAAA;gBAED,IAAI,UAAU,GAAG,EAAE,CAAA;IACnB,YAAA,KAAK,IAAI,CAAC,IAAI,EAAE,EAAE;oBAChB,UAAU,CAAC,IAAI,CAAC,EAAE,CAAE,CAAC,CAAE,CAAC,CAAA;IACzB,aAAA;gBAED,IAAI,IAAI,GAAG,EAAE,CAAA;IACb,YAAA,IAAI,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC;IAAE,gBAAA,IAAI,GAAG,IAAI,GAAG,IAAI,CAAA;IAEtD,YAAA,IAAI,SAAS,GAAG,GAAG,CAAC,YAAY,CAAE,CAAC,CAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;IAChD,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;oBAClD,SAAS,CAAE,CAAC,CAAE,GAAG,UAAU,CAAE,SAAS,CAAE,CAAC,CAAE,CAAE,CAAA;IAC9C,aAAA;IAED,YAAA,IAAI,UAAU,CAAE,IAAI,CAAE,KAAK,SAAS,EAAE;oBACpC,UAAU,CAAE,IAAI,CAAE,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAA;IACxC,aAAA;gBACD,UAAU,CAAE,IAAI,CAAE,CAAC,OAAO,CAAC,UAAU,EAAE,SAAS,CAAC,CAAA;IACnD,SAAC,CAAC,CAAA;IACH,KAAA;;QAGD,IAAI,GAAG,CAAC,eAAe,EAAE;IACvB,QAAA,IAAI,KAAK,GAAG,GAAG,CAAC,eAAe,CAAA;IAC/B,QAAA,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,CAAA;YAExB,IAAI,OAAO,GAAG,KAAK,CAAA;YACnB,UAAU,CAAE,OAAO,CAAE,GAAG,IAAI,QAAQ,CAAC,OAAO,CAAC,CAAA;YAC7C,IAAI,OAAO,GAAG,UAAU,CAAE,OAAO,CAAE,CAAC,OAAO,EAAE,CAAA;YAE7C,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,UAAU,EAAU,EAAE,CAAS,EAAA;;IAE9C,YAAA,IAAI,KAAK,CAAC,IAAI,CAAE,CAAC,CAAE,KAAK,OAAO;oBAAE,OAAM;IAEvC,YAAA,IAAI,CAAC,GAAG,IAAIA,aAAO,EAAE,CAAA;IACrB,YAAA,IAAI,IAAI,GAAG,CAAC,CAAC,QAAQ,CAAA;IAErB,YAAA,IAAI,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,KAAK,CAAE,cAAc,CAAE,CAAE,CAAC,CAAE,CAAC,CAAA;IACpD,YAAA,IAAI,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,KAAK,CAAE,cAAc,CAAE,CAAE,CAAC,CAAE,CAAC,CAAA;IACpD,YAAA,IAAI,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,KAAK,CAAE,cAAc,CAAE,CAAE,CAAC,CAAE,CAAC,CAAA;IAEpD,YAAA,IAAI,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,KAAK,CAAE,cAAc,CAAE,CAAE,CAAC,CAAE,CAAC,CAAA;IACpD,YAAA,IAAI,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,KAAK,CAAE,cAAc,CAAE,CAAE,CAAC,CAAE,CAAC,CAAA;IACpD,YAAA,IAAI,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,KAAK,CAAE,cAAc,CAAE,CAAE,CAAC,CAAE,CAAC,CAAA;IAEpD,YAAA,IAAI,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,KAAK,CAAE,cAAc,CAAE,CAAE,CAAC,CAAE,CAAC,CAAA;IACpD,YAAA,IAAI,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,KAAK,CAAE,cAAc,CAAE,CAAE,CAAC,CAAE,CAAC,CAAA;IACpD,YAAA,IAAI,CAAE,EAAE,CAAE,GAAG,UAAU,CAAC,KAAK,CAAE,cAAc,CAAE,CAAE,CAAC,CAAE,CAAC,CAAA;IAErD,YAAA,IAAI,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,KAAK,CAAE,WAAW,CAAE,CAAE,CAAC,CAAE,CAAC,CAAA;IACjD,YAAA,IAAI,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,KAAK,CAAE,WAAW,CAAE,CAAE,CAAC,CAAE,CAAC,CAAA;IACjD,YAAA,IAAI,CAAE,EAAE,CAAE,GAAG,UAAU,CAAC,KAAK,CAAE,WAAW,CAAE,CAAE,CAAC,CAAE,CAAC,CAAA;gBAElD,CAAC,CAAC,SAAS,EAAE,CAAA;IAEb,YAAA,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;IAC5B,SAAC,CAAC,CAAA;IAEF,QAAA,IAAI,OAAO,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;IACnC,YAAA,OAAO,UAAU,CAAE,OAAO,CAAE,CAAA;IAC7B,SAAA;IACF,KAAA;;QAGD,MAAM,YAAY,GAUd,EAAE,CAAA;QAEN,IAAI,GAAG,CAAC,IAAI,EAAE;IACZ,QAAA,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,CAAA;YAErB,MAAM,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;YACnC,MAAM,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;YACnC,MAAM,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;IAEnC,QAAA,MAAM,GAAG,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,CAAA;IAC/B,QAAA,GAAG,CAAE,CAAC,CAAE,GAAG,CAAC,CAAA;IACZ,QAAA,GAAG,CAAE,CAAC,CAAE,GAAG,CAAC,CAAA;IACZ,QAAA,GAAG,CAAE,CAAC,CAAE,GAAG,CAAC,CAAA;IACZ,QAAA,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;IAEzB,QAAA,YAAY,CAAC,CAAC,GAAG,CAAC,CAAA;IAClB,QAAA,YAAY,CAAC,CAAC,GAAG,CAAC,CAAA;IAClB,QAAA,YAAY,CAAC,CAAC,GAAG,CAAC,CAAA;YAClB,YAAY,CAAC,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;YACjD,YAAY,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAA;YAC/C,YAAY,CAAC,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;IAClD,KAAA;QAED,IAAI,GAAG,CAAC,QAAQ,EAAE;IAChB,QAAA,YAAY,CAAC,UAAU,GAAG,UAAU,CAClC,GAAG,CAAC,QAAQ,CAAE,sBAAsB,CAAE,CACvC,CAAA;IACF,KAAA;;IAGD,IAAA,IAAI,KAAK,GAAG,IAAIA,aAAO,EAAE,CAAA;QAEzB,IAAI,GAAG,CAAC,mBAAmB,EAAE;IAC3B,QAAA,IAAI,QAAQ,GAAG,GAAG,CAAC,mBAAmB,CAAA;IACtC,QAAA,IAAI,SAAS,GAAG,KAAK,CAAC,QAAQ,CAAA;YAE9B,SAAS,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,QAAQ,CAAE,aAAa,CAAE,CAAC,CAAA;YACtD,SAAS,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,QAAQ,CAAE,aAAa,CAAE,CAAC,CAAA;YACtD,SAAS,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,QAAQ,CAAE,aAAa,CAAE,CAAC,CAAA;YAEtD,SAAS,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,QAAQ,CAAE,aAAa,CAAE,CAAC,CAAA;YACtD,SAAS,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,QAAQ,CAAE,aAAa,CAAE,CAAC,CAAA;YACtD,SAAS,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,QAAQ,CAAE,aAAa,CAAE,CAAC,CAAA;YAEtD,SAAS,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,QAAQ,CAAE,aAAa,CAAE,CAAC,CAAA;YACtD,SAAS,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,QAAQ,CAAE,aAAa,CAAE,CAAC,CAAA;YACtD,SAAS,CAAE,EAAE,CAAE,GAAG,UAAU,CAAC,QAAQ,CAAE,aAAa,CAAE,CAAC,CAAA;YAEvD,SAAS,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,QAAQ,CAAE,iBAAiB,CAAE,CAAC,CAAA;YAC1D,SAAS,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,QAAQ,CAAE,iBAAiB,CAAE,CAAC,CAAA;YAC1D,SAAS,CAAE,EAAE,CAAE,GAAG,UAAU,CAAC,QAAQ,CAAE,iBAAiB,CAAE,CAAC,CAAA;YAE3D,KAAK,CAAC,SAAS,EAAE,CAAA;IAEjB,QAAA,YAAY,CAAC,KAAK,GAAG,KAAK,CAAA;IAC3B,KAAA;;IAGD,IAAA,IAAI,KAAK,GAAG,IAAIA,aAAO,EAAE,CAAA;QAEzB,IAAI,GAAG,CAAC,UAAU,EAAE;IAClB,QAAA,IAAI,QAAQ,GAAG,GAAG,CAAC,UAAU,CAAA;IAC7B,QAAA,IAAI,SAAS,GAAG,KAAK,CAAC,QAAQ,CAAA;YAE9B,SAAS,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,QAAQ,CAAE,2BAA2B,CAAE,CAAC,CAAA;YACpE,SAAS,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,QAAQ,CAAE,2BAA2B,CAAE,CAAC,CAAA;YACpE,SAAS,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,QAAQ,CAAE,2BAA2B,CAAE,CAAC,CAAA;YAEpE,SAAS,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,QAAQ,CAAE,2BAA2B,CAAE,CAAC,CAAA;YACpE,SAAS,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,QAAQ,CAAE,2BAA2B,CAAE,CAAC,CAAA;YACpE,SAAS,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,QAAQ,CAAE,2BAA2B,CAAE,CAAC,CAAA;YAEpE,SAAS,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,QAAQ,CAAE,2BAA2B,CAAE,CAAC,CAAA;YACpE,SAAS,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,QAAQ,CAAE,2BAA2B,CAAE,CAAC,CAAA;YACpE,SAAS,CAAE,EAAE,CAAE,GAAG,UAAU,CAAC,QAAQ,CAAE,2BAA2B,CAAE,CAAC,CAAA;YAErE,SAAS,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,QAAQ,CAAE,wBAAwB,CAAE,CAAC,CAAA;YACjE,SAAS,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,QAAQ,CAAE,wBAAwB,CAAE,CAAC,CAAA;YACjE,SAAS,CAAE,EAAE,CAAE,GAAG,UAAU,CAAC,QAAQ,CAAE,wBAAwB,CAAE,CAAC,CAAA;YAElE,KAAK,CAAC,SAAS,EAAE,CAAA;IAEjB,QAAA,YAAY,CAAC,KAAK,GAAG,KAAK,CAAA;IAC3B,KAAA;IAED,IAAA,IAAI,YAAY,CAAC,CAAC,KAAK,SAAS,EAAE;YAChC,SAAS,CAAC,QAAQ,GAAG,IAAI,QAAQ,CAAC,YAA8B,CAAC,CAAA;IAClE,KAAA;IAAM,SAAA;IACL,QAAA,SAAS,CAAC,QAAQ,GAAG,SAAS,CAAA;IAC/B,KAAA;IACH,CAAC;IAED,SAAS,kBAAkB,CAAE,GAAQ,EAAE,SAAoB,EAAE,UAAiC,EAAA;;IAE5F,IAAA,IAAI,EAAE,GAAG,GAAG,CAAC,WAAW,CAAA;IAExB,IAAA,IAAI,EAAE,EAAE;IACN,QAAA,WAAW,CAAC,EAAE,EAAE,IAAI,CAAC,CAAA;YAErB,IAAI,aAAa,GAAG,IAAI,CAAA;IACxB,QAAA,IAAI,GAAG,GAAG,SAAS,CAAC,YAAY,EAAE,CAAA;IAClC,QAAA,IAAI,GAAG,GAAG,SAAS,CAAC,YAAY,EAAE,CAAA;YAClC,IAAI,gBAAgB,GAAyC,EAAE,CAAA;IAE/D,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;;;;;gBAM9C,IAAI,UAAU,GAAG,EAAE,CAAC,YAAY,CAAE,CAAC,CAAE,CAAA;gBACrC,IAAI,UAAU,KAAK,QAAQ;IACvB,gBAAA,UAAU,KAAK,QAAQ;IACvB,gBAAA,UAAU,KAAK,QAAQ;oBAAE,SAAQ;;IAGrC,YAAA,IAAI,EAAE,CAAC,cAAc,CAAE,CAAC,CAAE,KAAK,OAAO;IAClC,gBAAA,EAAE,CAAC,cAAc,CAAE,CAAC,CAAE,KAAK,OAAO;oBAAE,SAAQ;;;;;;;;;;;;gBAchD,IAAI,QAAQ,GAAG,EAAE,CAAC,uBAAuB,CAAE,CAAC,CAAE,CAAA;gBAC9C,IAAI,OAAO,GAAG,EAAE,CAAC,uBAAuB,CAAE,CAAC,CAAE,CAAA;gBAC7C,IAAI,KAAK,IACP,EAAE,CAAC,iBAAiB,CAAE,CAAC,CAAE;IACzB,iBAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,GAAG,GAAG,QAAQ,IAAI,EAAE,CAAC;oBAC5C,GAAG,GAAG,UAAU,CAAE,EAAE,CAAC,mBAAmB,CAAE,CAAC,CAAE,CAAE;IAC/C,gBAAA,GAAG,GAAG,EAAE,CAAC,mBAAmB,CAAE,CAAC,CAAE,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC;IAC5D,iBAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,GAAG,GAAG,OAAO,IAAI,EAAE,CAAC,CAC3C,CAAA;IACD,YAAA,IAAI,YAAY,GAAG,gBAAgB,CAAE,KAAK,CAAE,CAAA;gBAC5C,IAAI,CAAC,YAAY,EAAE;IACjB,gBAAA,IAAI,UAAU,GAAG,IAAI,SAAS,CAAC,KAAK,CAAC,CAAA;IACrC,gBAAA,IAAI,UAAU,CAAC,SAAS,CAAC,KAAK,EAAE;IAC9B,oBAAA,IAAIS,aAAK;IAAE,wBAAA,GAAG,CAAC,IAAI,CAAC,kCAAkC,EAAE,KAAK,CAAC,CAAA;wBAC9D,SAAQ;IACT,iBAAA;IACD,gBAAA,YAAY,GAAG,SAAS,CAAC,cAAc,CAAC,UAAU,CAAC,CAAA;IACnD,gBAAA,gBAAgB,CAAE,KAAK,CAAE,GAAG,YAAY,CAAA;IACzC,aAAA;gBAED,IAAI,QAAQ,GAAG,EAAE,CAAC,uBAAuB,CAAE,CAAC,CAAE,CAAA;gBAC9C,IAAI,OAAO,GAAG,EAAE,CAAC,uBAAuB,CAAE,CAAC,CAAE,CAAA;gBAC7C,IAAI,KAAK,IACP,EAAE,CAAC,iBAAiB,CAAE,CAAC,CAAE;IACzB,iBAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,GAAG,GAAG,QAAQ,IAAI,EAAE,CAAC;oBAC5C,GAAG,GAAG,UAAU,CAAE,EAAE,CAAC,mBAAmB,CAAE,CAAC,CAAE,CAAE;IAC/C,gBAAA,GAAG,GAAG,EAAE,CAAC,mBAAmB,CAAE,CAAC,CAAE,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC;IAC5D,iBAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,GAAG,GAAG,OAAO,IAAI,EAAE,CAAC,CAC3C,CAAA;IACD,YAAA,IAAI,YAAY,GAAG,gBAAgB,CAAE,KAAK,CAAE,CAAA;gBAC5C,IAAI,CAAC,YAAY,EAAE;IACjB,gBAAA,IAAI,UAAU,GAAG,IAAI,SAAS,CAAC,KAAK,CAAC,CAAA;IACrC,gBAAA,IAAI,UAAU,CAAC,SAAS,CAAC,KAAK,EAAE;IAC9B,oBAAA,IAAIA,aAAK;IAAE,wBAAA,GAAG,CAAC,IAAI,CAAC,kCAAkC,EAAE,KAAK,CAAC,CAAA;wBAC9D,SAAQ;IACT,iBAAA;IACD,gBAAA,YAAY,GAAG,SAAS,CAAC,cAAc,CAAC,UAAU,CAAC,CAAA;IACnD,gBAAA,gBAAgB,CAAE,KAAK,CAAE,GAAG,YAAY,CAAA;IACzC,aAAA;;;;;IAOD,YAAA,IAAI,CAAC,GAAG,YAAa,CAAC,MAAM,CAAA;IAC5B,YAAA,IAAI,CAAC,GAAG,YAAa,CAAC,MAAM,CAAA;gBAE5B,IAAI,CAAC,GAAG,CAAC,EAAE;oBACT,IAAI,IAAI,GAAG,CAAC,CAAA;oBACZ,CAAC,GAAG,CAAC,CAAA;oBACL,CAAC,GAAG,IAAI,CAAA;oBACR,IAAI,IAAI,GAAG,YAAY,CAAA;oBACvB,YAAY,GAAG,YAAY,CAAA;oBAC3B,YAAY,GAAG,IAAI,CAAA;IACpB,aAAA;;IAID,YAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;IACtB,gBAAA,IAAIA,aAAK;wBAAE,GAAG,CAAC,IAAI,CAAC,oBAAoB,EAAE,KAAK,EAAE,KAAK,CAAC,CAAA;oBACvD,SAAQ;IACT,aAAA;gBAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;oBAC1B,GAAG,CAAC,KAAK,GAAG,YAAa,CAAE,CAAC,GAAG,CAAC,CAAE,CAAA;IAClC,gBAAA,GAAG,CAAC,KAAK,GAAG,YAAa,CAAE,CAAC,CAAE,CAAA;oBAE9B,IAAI,GAAG,IAAI,GAAG,EAAE;IACd,oBAAA,SAAS,CAAC,SAAS,CAAC,OAAO,CACzB,GAAG,EAAE,GAAG,EAAE,YAAY,CAAC,EAAE,CAAC,gBAAgB,CAAE,CAAC,CAAE,CAAC,CACjD,CAAA;IACF,iBAAA;IAAM,qBAAA;IACL,oBAAA,GAAG,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAA;IAC1C,iBAAA;IACF,aAAA;IACF,SAAA;IACF,KAAA;IACH,CAAC;IAED,SAAS,eAAe,CAAE,GAAQ,EAAE,SAAoB,EAAE,cAA0C,EAAA;QAClG,IAAI,GAAG,CAAC,MAAM,EAAE;IACd,QAAA,WAAW,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;IAC7B,QAAA,IAAI,CAAC,GAAG,GAAG,CAAC,MAAM,CAAA;IAClB,QAAA,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,MAAM,CAAA;YACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;gBAC1B,IAAI,WAAW,GAAG,CAAC,CAAC,gBAAgB,CAAE,CAAC,CAAE,CAAA;gBACzC,IAAI,IAAI,GAAG,CAAC,CAAC,IAAI,CAAE,CAAC,CAAE,CAAA;IACtB,YAAA,IAAI,cAAc,GAAa,KAAK,CAAC,IAAI,CAAC,cAAc,CAAE,CAAC,CAAC,EAAE,CAAE,CAAC,CAAE,CAAE,CAAC,CAAA;IACtE,YAAA,SAAS,CAAC,UAAU,CAAE,CAAC,CAAE,GAAG,IAAI,MAAM,CACpC,SAAS,EAAE,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE,cAAc,CAChD,CAAA;IACF,SAAA;IACF,KAAA;IACH,CAAC;IAED;IAEA,MAAM,SAAU,SAAQ,eAAe,CAAA;IACrC,IAAA,IAAI,IAAI,GAAM,EAAA,OAAO,KAAK,CAAA,EAAE;QAE5B,MAAM,GAAA;;YAGJ,GAAG,CAAC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;IAEzC,QAAA,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAA;IACtB,QAAA,IAAI,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAA;IAE9B,QAAA,IAAI,cAAc,GAAG,IAAI,CAAC,cAAc,CAAA;IACxC,QAAA,IAAI,YAAY,GAAG,IAAI,CAAC,YAAY,CAAA;IACpC,QAAA,IAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAA;IAEhC,QAAA,IAAI,MAAM,GAAG,CAAC,CAAC,MAAM,CAAA;YACrB,IAAI,YAAyB,EAAE,YAAoB,CAAA;YAEnD,IAAI,OAAO,EAAE,IAAI,CAAA;;YAIjB,IAAI,GAAG,GAAQ,EAAE,CAAA;YACjB,IAAI,UAAU,GAA0B,EAAE,CAAA;YAC1C,IAAI,cAAc,GAA8B,EAAE,CAAA;YAElD,IAAI,aAAa,GAAG,KAAK,CAAA;YACzB,IAAI,aAAa,GAAgB,IAAI,CAAA;YACrC,IAAI,YAAY,GAAG,KAAK,CAAA;YACxB,IAAI,WAAW,GAAG,KAAK,CAAA;YACvB,IAAI,WAAW,GAAG,KAAK,CAAA;YACvB,IAAI,YAAY,GAAe,EAAE,CAAA;YACjC,IAAI,gBAAgB,GAAgB,IAAI,CAAA;YACxC,IAAI,eAAe,GAAgB,IAAI,CAAA;YACvC,IAAI,WAAW,GAAwB,IAAI,CAAA;YAC3C,IAAI,KAAK,GAAiB,IAAI,CAAA;YAC9B,IAAI,YAAY,GAAa,EAAE,CAAA;IAE/B,QAAA,IAAI,UAAkB,EAAE,SAAiB,EAAE,UAAkB,EAC3D,WAAmB,EAAE,WAAmB,EAAE,WAAmB,EAAE,aAAqB,EAAE,UAAkB,EACxG,QAAgB,EAAE,EAAU,EAAE,UAAkB,EAAE,eAAuB,EAAE,cAAsB,EACjG,MAAc,EAAE,MAAc,EAAE,MAAc,EAAE,WAAmB,EAAE,SAAiB,CAAA;;IAIxF,QAAA,IAAI,OAAO,GAAG,CAAC,CAAC,OAAO,CAAA;IACvB,QAAA,IAAI,SAAS,GAAG,CAAC,CAAC,SAAS,CAAA;IAC3B,QAAA,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,CAAA;YAEjD,IAAI,GAAG,GAAG,CAAC,CAAA;YACX,IAAI,QAAQ,GAAG,CAAC,CAAA;IAChB,QAAA,IAAI,QAAgB,CAAA;IAEpB,QAAA,SAAS,kBAAkB,CAAE,EAAU,EAAE,EAAU,EAAE,KAAe,EAAA;gBAClE,KAAK,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;IAC5B,gBAAA,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,CAAA;IAClB,gBAAA,IAAI,GAAG,OAAO,CAAC,IAAI,EAAE,CAAA;IAErB,gBAAA,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,aAAa,IAAI,CAAC,WAAW,KAAK,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;;wBAGhE,aAAa,GAAG,KAAK,CAAA;wBACrB,WAAW,GAAG,KAAK,CAAA;wBACnB,YAAY,GAAG,KAAK,CAAA;IACpB,oBAAA,YAAY,CAAC,MAAM,GAAG,CAAC,CAAA;wBACvB,gBAAgB,GAAG,IAAI,CAAA;wBACvB,eAAe,GAAG,IAAI,CAAA;wBACtB,WAAW,GAAG,IAAI,CAAA;wBAClB,KAAK,GAAG,IAAI,CAAA;IACZ,oBAAA,YAAY,CAAC,MAAM,GAAG,CAAC,CAAA;IACxB,iBAAA;yBAAM,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,OAAO,EAAE;IAC3C,oBAAA,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAA;;IAGpC,iBAAA;IAAM,qBAAA,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IAC1B,oBAAA,IAAI,aAAa,EAAE;;IAGjB,wBAAA,IAAI,WAAW,EAAE;IACf,4BAAA,IAAI,gBAAgB,KAAK,YAAY,CAAC,MAAM,EAAE;oCAC5C,gBAAgB,GAAG,CAAC,CAAA;IACrB,6BAAA;gCACD,YAAY,CAAE,gBAA0B,CAAE,CAAC,IAAI,CAAC,aAAuB,CAAC,CAAC;gCACxE,gBAA2B,IAAI,CAAC,CAAA;IAClC,yBAAA;IAAM,6BAAA;gCACL,IAAI,WAAW,KAAK,KAAK,EAAE;IACzB,gCAAA,GAAG,CAAE,eAAyB,CAAE,GAAG,aAAa,CAAA;IACjD,6BAAA;IAAM,iCAAA;oCACL,GAAG,CAAE,eAAyB,CAAE,CAAE,WAAqB,CAAE,GAAG,aAAa,CAAA;IAC1E,6BAAA;IACF,yBAAA;4BAED,aAAa,GAAG,KAAK,CAAA;4BACrB,aAAa,GAAG,IAAI,CAAA;IACrB,qBAAA;IAAM,yBAAA;;4BAGL,aAAa,GAAG,IAAI,CAAA;IACpB,wBAAA,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;IAClC,qBAAA;IACF,iBAAA;yBAAM,IAAI,IAAI,KAAK,OAAO,EAAE;;wBAG3B,WAAW,GAAG,IAAI,CAAA;wBAClB,WAAW,GAAG,IAAI,CAAA;IAClB,oBAAA,YAAY,CAAC,MAAM,GAAG,CAAC,CAAA;IACvB,oBAAA,YAAY,CAAC,MAAM,GAAG,CAAC,CAAA;wBACvB,gBAAgB,GAAG,CAAC,CAAA;IACrB,iBAAA;IAAM,qBAAA,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IAC1B,oBAAA,IAAI,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAA;IAE5B,oBAAA,IAAI,WAAW,IAAI,CAAC,WAAW,EAAE;4BAC/B,WAAW,GAAG,KAAK,CAAA;IACpB,qBAAA;IAED,oBAAA,IAAI,WAAW,EAAE;;IAGf,wBAAA,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;4BAC1B,QAAQ,GAAG,QAAQ,CAAE,CAAC,CAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;IACrC,wBAAA,IAAI,GAAG,QAAQ,CAAE,CAAC,CAAE,CAAA;IAEpB,wBAAA,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;gCACzB,IAAI,GAAG,KAAK,CAAA;IACZ,4BAAA,IAAI,CAAC,GAAG,CAAE,QAAQ,CAAE;IAAE,gCAAA,GAAG,CAAE,QAAQ,CAAE,GAAG,EAAE,CAAA;gCAC1C,YAAY,CAAC,IAAI,CAAC,GAAG,CAAE,QAAQ,CAAE,CAAC,CAAA;IACnC,yBAAA;IAAM,6BAAA;IACL,4BAAA,IAAI,CAAC,GAAG,CAAE,QAAQ,CAAE;IAAE,gCAAA,GAAG,CAAE,QAAQ,CAAE,GAAG,EAAE,CAAA;IAC1C,4BAAA,IAAI,GAAG,CAAE,QAAQ,CAAE,CAAE,IAAI,CAAE,EAAE;IAC3B,gCAAA,IAAIA,aAAK;wCAAE,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,gBAAgB,CAAC,CAAA;IACtD,6BAAA;IAAM,iCAAA;oCACL,GAAG,CAAE,QAAQ,CAAE,CAAE,IAAI,CAAE,GAAG,EAAE,CAAA;oCAC5B,YAAY,CAAC,IAAI,CAAC,GAAG,CAAE,QAAQ,CAAE,CAAE,IAAI,CAAE,CAAC,CAAA;IAC1C,gCAAA,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;IACxB,6BAAA;IACF,yBAAA;4BAED,eAAe,GAAG,QAAQ,CAAA;4BAC1B,WAAW,GAAG,IAAI,CAAA;4BAClB,KAAK,GAAG,IAAI,CAAA;IACb,qBAAA;IAAM,yBAAA;4BACL,IAAI,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAA;IACjD,wBAAA,IAAI,GAAG,GAAG,YAAa,CAAE,CAAC,CAAE,CAAA;IAC5B,wBAAA,IAAI,KAAK,GAAG,YAAa,CAAE,CAAC,CAAE,CAAA;IAC9B,wBAAA,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;4BACzB,QAAQ,GAAG,QAAQ,CAAE,CAAC,CAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;IACrC,wBAAA,IAAI,GAAG,QAAQ,CAAE,CAAC,CAAE,CAAA;IAEpB,wBAAA,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;gCACzB,IAAI,GAAG,KAAK,CAAA;IACZ,4BAAA,GAAG,CAAE,QAAQ,CAAE,GAAG,KAAK,CAAA;IACxB,yBAAA;IAAM,6BAAA;IACL,4BAAA,IAAI,CAAC,GAAG,CAAE,QAAQ,CAAE;IAAE,gCAAA,GAAG,CAAE,QAAQ,CAAE,GAAG,EAAE,CAAA;IAE1C,4BAAA,IAAI,GAAG,CAAE,QAAQ,CAAE,CAAE,IAAI,CAAE,EAAE;IAC3B,gCAAA,IAAIA,aAAK;wCAAE,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,gBAAgB,CAAC,CAAA;IACtD,6BAAA;IAAM,iCAAA;oCACL,GAAG,CAAE,QAAQ,CAAE,CAAE,IAAI,CAAE,GAAG,KAAK,CAAA;IAChC,6BAAA;IACF,yBAAA;IAED,wBAAA,IAAI,CAAC,KAAK;gCAAE,YAAY,GAAG,IAAI,CAAA;4BAE/B,eAAe,GAAG,QAAQ,CAAA;4BAC1B,WAAW,GAAG,IAAI,CAAA;IACnB,qBAAA;IACF,iBAAA;IAAM,qBAAA;IACL,oBAAA,IAAI,aAAa,EAAE;;4BAGjB,aAAa,IAAI,OAAO,CAAA;IACzB,qBAAA;IAAM,yBAAA,IAAI,WAAW,EAAE;;4BAGtB,IAAI,CAAC,IAAI,EAAE;gCACT,SAAQ;IACT,yBAAA;iCAAM,IAAI,eAAe,KAAK,WAAW,EAAE;gCAC1C,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC4E,cAAY,CAAC,CAAA;IAEnC,4BAAA,IAAI,KAAK,EAAE;IACT,gCAAA,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,CAAA;IACjD,gCAAA,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAA;IAC/C,gCAAA,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,CAAA;IACjD,gCAAA,WAAW,GAAG,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC,CAAA;IACnD,gCAAA,WAAW,GAAG,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC,CAAA;IACnD,gCAAA,WAAW,GAAG,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC,CAAA;IACnD,gCAAA,aAAa,GAAG,YAAY,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAA;IACvD,gCAAA,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,CAAA;IACjD,gCAAA,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAA;IACxC,gCAAA,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAA;IACxC,gCAAA,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAA;IACxC,gCAAA,EAAE,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;IAC/B,gCAAA,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAA;IAChD,gCAAA,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAA;IAC5C,gCAAA,WAAW,GAAG,YAAY,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAA;IACpD,gCAAA,eAAe,GAAG,YAAY,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAA;IAE5D,gCAAA,cAAc,GAAG,YAAY,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAA;IAC1D,gCAAA,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAA;oCAE7C,KAAK,GAAG,KAAK,CAAA;oCAEb,QAAQ,GAAG,QAAQ,CAAC,EAAE,CAAE,eAAe,CAAE,CAAC,CAAA;IAE1C,gCAAA,IAAI,YAAY,EAAE;wCAChB,YAAY,GAAG,EAAE,CAAA;wCACjB,YAAY,GAAG,CAAC,CAAA;IACjB,iCAAA;IACF,6BAAA;;gCAID,MAAM,SAAS,GAAG,QAAQ,CAAC,EAAE,CAAE,eAAe,CAAE,CAAC,CAAA;gCAEjD,IAAI,QAAQ,KAAK,SAAS,EAAE;IAC1B,gCAAA,IAAI,YAAY,EAAE;wCAChB,IAAI,QAAQ,KAAK,CAAC,EAAE;4CAClB,MAAM,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC,YAAY,CAAC,CAAC,CAAA;IAC5C,qCAAA;wCAED,YAAY,GAAG,IAAI,YAAY,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,CAAA;IACpD,oCAAA,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAA;wCACzB,YAAY,GAAG,CAAC,CAAA;IACjB,iCAAA;oCAED,QAAQ,IAAI,CAAC,CAAA;IACd,6BAAA;gCAED,QAAQ,GAAG,SAAS,CAAA;IAEpB,4BAAA,IAAI,cAAc,IAAI,QAAQ,GAAG,CAAC;oCAAE,SAAQ;;IAI5C,4BAAA,MAAM,QAAQ,GAAG,EAAE,CAAE,WAAW,CAAE,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC,CAAA;IAC7D,4BAAA,IAAI,UAAU,IAAI,QAAQ,KAAK,IAAI;oCAAE,SAAQ;gCAE7C,MAAM,CAAC,GAAG,UAAU,CAAC,EAAE,CAAE,MAAM,CAAE,CAAC,CAAA;gCAClC,MAAM,CAAC,GAAG,UAAU,CAAC,EAAE,CAAE,MAAM,CAAE,CAAC,CAAA;gCAClC,MAAM,CAAC,GAAG,UAAU,CAAC,EAAE,CAAE,MAAM,CAAE,CAAC,CAAA;IAElC,4BAAA,IAAI,YAAY,EAAE;IAChB,gCAAA,MAAM,WAAW,GAAG,YAAY,GAAG,CAAC,CAAA;IAEpC,gCAAA,YAAY,CAAE,WAAW,GAAG,CAAC,CAAE,GAAG,CAAC,CAAA;IACnC,gCAAA,YAAY,CAAE,WAAW,GAAG,CAAC,CAAE,GAAG,CAAC,CAAA;IACnC,gCAAA,YAAY,CAAE,WAAW,GAAG,CAAC,CAAE,GAAG,CAAC,CAAA;oCAEnC,YAAY,IAAI,CAAC,CAAA;oCAEjB,IAAI,QAAQ,GAAG,CAAC;wCAAE,SAAQ;IAC3B,6BAAA;;IAID,4BAAA,MAAM,OAAO,GAAG,EAAE,CAAE,WAAW,CAAE,CAAA;gCACjC,MAAM,KAAK,GAAG,QAAQ,CAAC,EAAE,CAAE,SAAS,KAAK,CAAC,CAAC,GAAG,SAAS,GAAG,UAAU,CAAE,CAAC,CAAA;IACvE,4BAAA,IAAI,OAAO,GAAG,EAAE,CAAE,cAAc,CAAE,CAAA;IAClC,4BAAA,OAAO,GAAG,CAAC,OAAO,KAAK,GAAG,IAAI,EAAE,GAAG,OAAO,CAAA;IAC1C,4BAAA,MAAM,SAAS,GAAG,EAAE,CAAE,UAAU,CAAE,CAAA;IAClC,4BAAA,MAAM,OAAO,GAAG,EAAE,CAAE,WAAW,CAAE,CAAA;IACjC,4BAAA,MAAM,MAAM,IAAI,EAAE,CAAE,QAAQ,CAAE,CAAE,CAAC,CAAE,KAAK,GAAG,CAAC,CAAA;;IAI5C,4BAAA,MAAM,OAAO,GAAG,EAAE,CAAE,UAAU,CAAE,CAAA;gCAChC,MAAM,OAAO,GAAG,UAAU,CAAC,EAAE,CAAE,WAAW,CAAE,CAAC,CAAA;gCAC7C,MAAM,GAAG,GAAG,UAAU,CAAC,EAAE,CAAE,SAAS,CAAE,CAAC,CAAA;IACvC,4BAAA,IAAI,MAAM,GAAG,EAAE,CAAE,UAAU,CAAE,CAAA;IAC7B,4BAAA,MAAM,GAAG,CAAC,MAAM,KAAK,GAAG,IAAI,EAAE,GAAG,MAAM,CAAA;gCAEvC,SAAS,CAAC,UAAU,EAAE,CAAA;IACtB,4BAAA,SAAS,CAAC,UAAU,CAAE,GAAG,CAAE,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA;IAE5D,4BAAA,SAAS,CAAC,CAAC,CAAE,GAAG,CAAE,GAAG,CAAC,CAAA;IACtB,4BAAA,SAAS,CAAC,CAAC,CAAE,GAAG,CAAE,GAAG,CAAC,CAAA;IACtB,4BAAA,SAAS,CAAC,CAAC,CAAE,GAAG,CAAE,GAAG,CAAC,CAAA;IACtB,4BAAA,SAAS,CAAC,MAAM,CAAE,GAAG,CAAE,GAAG,QAAQ,CAAC,EAAE,CAAE,EAAE,CAAE,CAAC,CAAA;IAC5C,4BAAA,SAAS,CAAC,OAAO,CAAE,GAAG,CAAE,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,OAAO,CAAA;IACvD,4BAAA,SAAS,CAAC,SAAS,CAAE,GAAG,CAAE,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAA;IACjD,4BAAA,SAAS,CAAC,MAAM,CAAE,GAAG,CAAE,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA;IAE9C,4BAAA,EAAE,CAAC,OAAO,CAAC,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,CAAC,CAAA;IAEpF,4BAAA,IAAI5E,aAAK,EAAE;;;IAGT,gCAAA,MAAM,iBAAiB,GAAG,UAAU,CAAE,OAAO,CAAE,CAAA;IAC/C,gCAAA,IAAI,iBAAiB,KAAK,SAAS,IAAI,iBAAiB,KAAK,SAAS,EAAE;IACtE,oCAAA,IAAIA,aAAK;IAAE,wCAAA,GAAG,CAAC,IAAI,CAAC,iBAAiB,EAAE,SAAS,CAAC,CAAA;IAClD,iCAAA;IACF,6BAAA;;IAED,4BAAA,UAAU,CAAE,OAAO,CAAE,GAAG,SAAS,CAAA;;IAGjC,4BAAA,MAAM,QAAQ,GAAG,EAAE,CAAE,aAAa,CAAE,CAAA;IACpC,4BAAA,IAAI,CAAC,cAAc,CAAE,QAAQ,CAAE,EAAE;IAC/B,gCAAA,cAAc,CAAE,QAAQ,CAAE,GAAG,IAAI,GAAG,EAAE,CAAA;IACvC,6BAAA;IACD,4BAAA,cAAc,CAAE,QAAQ,CAAE,CAAC,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC,CAAA;gCAEtD,GAAG,IAAI,CAAC,CAAA;IACT,yBAAA;IAAM,6BAAA;gCACL,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAA;IACzC,4BAAA,MAAM,EAAE,GAAG,EAAG,CAAC,MAAM,CAAA;IAErB,4BAAA,IAAI,gBAAgB,KAAK,YAAY,CAAC,MAAM,EAAE;oCAC5C,gBAAgB,GAAG,CAAC,CAAA;iCACrB;;IAEG;gCAEJ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;IAC3B,gCAAA,YAAY,CAAU,gBAAgB,GAAG,CAAC,CAAE,CAAC,IAAI,CAAC,EAAG,CAAE,CAAC,CAAE,CAAC,CAAA;IAC5D,6BAAA;gCAEQ,gBAAiB,IAAI,EAAE,CAAA;IACjC,yBAAA;4BAED,WAAW,GAAG,KAAK,CAAA;IACpB,qBAAA;IAAM,yBAAA,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;;IAG3D,wBAAA,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;4BAE9C,IAAI,WAAW,KAAK,KAAK,EAAE;IACzB,4BAAA,GAAG,CAAE,eAAyB,CAAE,GAAG,GAAG,CAAA;IACvC,yBAAA;IAAM,6BAAA;gCACL,GAAG,CAAE,eAAyB,CAAE,CAAE,WAAqB,CAAE,GAAG,GAAG,CAAA;IAChE,yBAAA;IACF,qBAAA;IAAM,yBAAA,IAAI,YAAY,EAAE;;4BAGvB,IAAI,WAAW,KAAK,KAAK,EAAE;IACzB,4BAAA,GAAG,CAAE,eAAyB,CAAE,GAAG,IAAI,CAAA;IACxC,yBAAA;IAAM,6BAAA;gCACL,GAAG,CAAE,eAAyB,CAAE,CAAE,WAAqB,CAAE,GAAG,IAAI,CAAA;IACjE,yBAAA;IACF,qBAAA;IAAM,yBAAA;IACL,wBAAA,IAAIA,aAAK;IAAE,4BAAA,GAAG,CAAC,GAAG,CAAC,iCAAiC,EAAE,IAAI,CAAC,CAAA;IAC5D,qBAAA;IACF,iBAAA;IACF,aAAA;aACF;YAED,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,UAAU,KAAK,6BAA0B;gBACtE,kBAAkB,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;IAC5C,SAAC,CAAC,CAAA;IAEF,QAAA,IAAI,GAAG,CAAC,SAAS,IAAI,GAAG,CAAC,cAAc,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE;IACtD,YAAA,aAAa,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAA;gBACzB,EAAE,CAAC,QAAQ,EAAE,CAAA;gBACb,CAAC,CAAC,aAAa,EAAE,CAAA;gBACjB,CAAC,CAAC,aAAa,EAAE,CAAA;gBACjB,sBAAsB,CAAC,CAAC,CAAC,CAAA;IAC1B,SAAA;iBAAM,IAAI,GAAG,CAAC,qBAAqB,IAAI,GAAG,CAAC,eAAe,IAAI,GAAG,CAAC,iBAAiB,EAAE;IACpF,YAAA,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAA;gBACrB,EAAE,CAAC,QAAQ,EAAE,CAAA;gBACb,CAAC,CAAC,aAAa,EAAE,CAAA;gBACjB,cAAc,CAAC,CAAC,CAAC,CAAA;gBACjB,CAAC,CAAC,aAAa,EAAE,CAAA;;IAElB,SAAA;IAAM,aAAA;gBACL,IAAI,SAAS,GAAG,yBAAyB,CAAC,GAAG,EAAE,CAAC,EAAE,UAAU,CAAC,CAAA;IAC7D,YAAA,eAAe,CAAC,GAAG,EAAE,CAAC,EAAE,UAAU,CAAC,CAAA;IACnC,YAAA,kBAAkB,CAAC,GAAG,EAAE,CAAC,EAAE,UAAU,CAAC,CAAA;IACtC,YAAA,eAAe,CAAC,GAAG,EAAE,CAAC,EAAE,cAAc,CAAC,CAAA;gBAEvC,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE;IAClC,gBAAA,CAAC,CAAC,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC6E,cAAY,EAAE,EAAE,CAAC,CAAA;IAC5D,aAAA;gBACD,IAAI,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,EAAE,EAAE;IAC7B,gBAAA,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,OAAO,CAACA,cAAY,EAAE,EAAE,CAAC,CAAA;IACrD,aAAA;;gBAGD,IAAI,GAAG,CAAC,2BAA2B,EAAE;IACnC,gBAAA,IAAI,GAAG,CAAC,2BAA2B,CAAC,aAAa,EAAE;IACjD,oBAAA,WAAW,CAAC,GAAG,CAAC,2BAA2B,EAAE,eAAe,CAAC,CAAA;IAC7D,oBAAA,MAAM,KAAK,GAAG,GAAG,CAAC,2BAA2B,CAAC,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA;wBAC5E,IAAI,KAAK,CAAC,MAAM,EAAE;4BAChB,CAAC,CAAC,MAAM,CAAC,WAAW,GAAG,KAAK,CAAE,CAAC,CAAE,CAAA;IAClC,qBAAA;IACF,iBAAA;IACD,gBAAA,IAAI,GAAG,CAAC,oBAAoB,CAAC,6BAA6B,EAAE;IAC1D,oBAAA,WAAW,CAAC,GAAG,CAAC,oBAAoB,EAAE,+BAA+B,CAAC,CAAA;IACtE,oBAAA,MAAM,QAAQ,GAAG,GAAG,CAAC,oBAAoB,CAAC,6BAA6B,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA;wBACxF,IAAI,QAAQ,CAAC,MAAM,EAAE;4BACnB,CAAC,CAAC,MAAM,CAAC,cAAc,GAAG,QAAQ,CAAE,CAAC,CAAE,CAAA;IACxC,qBAAA;IACF,iBAAA;IACF,aAAA;qBAAM,IAAI,GAAG,CAAC,gBAAgB,EAAE;IAC/B,gBAAA,IAAI,GAAG,CAAC,gBAAgB,CAAC,IAAI,EAAE;IAC7B,oBAAA,WAAW,CAAC,GAAG,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAA;IACzC,oBAAA,MAAM,KAAK,GAAG,GAAG,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA;wBACxD,IAAI,KAAK,CAAC,MAAM,EAAE;4BAChB,CAAC,CAAC,MAAM,CAAC,WAAW,GAAG,KAAK,CAAE,CAAC,CAAE,CAAA;IAClC,qBAAA;IACF,iBAAA;IACD,gBAAA,IAAI,GAAG,CAAC,gBAAgB,CAAC,aAAa,EAAE;IACtC,oBAAA,WAAW,CAAC,GAAG,CAAC,gBAAgB,EAAE,eAAe,CAAC,CAAA;IAClD,oBAAA,MAAM,QAAQ,GAAG,GAAG,CAAC,gBAAgB,CAAC,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA;wBACpE,IAAI,QAAQ,CAAC,MAAM,EAAE;4BACnB,CAAC,CAAC,MAAM,CAAC,cAAc,GAAG,QAAQ,CAAE,CAAC,CAAE,CAAA;IACxC,qBAAA;IACF,iBAAA;IACF,aAAA;gBACD,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,MAAM,CAAC,iBAAiB,EAAE;oBAC9C,IAAI,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,EAAE;IAC1C,oBAAA,CAAC,CAAC,MAAM,CAAC,UAAU,GAAG,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAA;IAC/D,iBAAA;IACF,aAAA;qBAAM,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,MAAM,CAAC,aAAa,EAAE;oBACjD,IAAI,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE;IACtC,oBAAA,CAAC,CAAC,MAAM,CAAC,UAAU,GAAG,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,aAAa,CAAC,CAAA;IAC3D,iBAAA;IACF,aAAA;gBACD,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,MAAM,CAAC,kBAAkB,EAAE;oBAC/C,IAAI,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,kBAAkB,CAAC,EAAE;IAC3C,oBAAA,CAAC,CAAC,MAAM,CAAC,KAAK,GAAG,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAA;IAC3D,iBAAA;IACF,aAAA;gBACD,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,MAAM,CAAC,kBAAkB,EAAE;oBAC/C,IAAI,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,kBAAkB,CAAC,EAAE;IAC3C,oBAAA,CAAC,CAAC,MAAM,CAAC,KAAK,GAAG,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAA;IAC3D,iBAAA;IACF,aAAA;gBACD,IAAI,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC,MAAM,EAAE;IACjC,gBAAA,WAAW,CAAC,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAA;IAChC,gBAAA,CAAC,CAAC,MAAM,CAAC,mBAAmB,GAAG,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAS,EAAA;wBACrE,OAAO,CAAC,CAAC,OAAO,CAACA,cAAY,EAAE,EAAE,CAAC,CAAA;IACpC,iBAAC,CAAC,CAAA;IACH,aAAA;gBAED,EAAE,CAAC,QAAQ,EAAE,CAAA;gBACb,CAAC,CAAC,aAAa,EAAE,CAAA;gBACjB,cAAc,CAAC,CAAC,CAAC,CAAA;gBACjB,CAAC,CAAC,aAAa,EAAE,CAAA;gBAEjB,IAAI,CAAC,SAAS,EAAE;oBACd,2BAA2B,CAAC,CAAC,CAAC,CAAA;IAC/B,aAAA;IAAM,iBAAA;IACL,gBAAA,wBAAwB,CAAC,CAAC,EAAE,SAAS,CAAC,CAAA;IACvC,aAAA;gBACD,qBAAqB,CAAC,CAAC,CAAC,CAAA;IAExB,YAAA,CAAC,CAAC,SAAS,CAAC,GAAG,GAAG,GAAG,CAAA;IACtB,SAAA;IAED,QAAA,IAAI7E,aAAK;gBAAE,GAAG,CAAC,OAAO,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;SACxD;IACF,CAAA;IAED,cAAc,CAAC,GAAG,CAAC,KAAK,EAAE,SAAS,CAAC,CAAA;IACpC,cAAc,CAAC,GAAG,CAAC,MAAM,EAAE,SAAS,CAAC,CAAA;IACrC,cAAc,CAAC,GAAG,CAAC,OAAO,EAAE,SAAS,CAAC;;ICrqCtC;;;;IAIG;IAQH,MAAM,SAAU,SAAQ,eAAe,CAAA;IACrC,IAAA,IAAI,IAAI,GAAM,EAAA,OAAO,KAAK,CAAA,EAAE;QAE5B,MAAM,GAAA;;IAGJ,QAAA,IAAIA,aAAK;gBAAE,GAAG,CAAC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;IAEpD,QAAA,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAA;IACtB,QAAA,IAAI,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAA;IAE9B,QAAA,IAAI,cAAc,GAAG,IAAI,CAAC,cAAc,CAAA;IACxC,QAAA,IAAI,YAAY,GAAG,IAAI,CAAC,YAAY,CAAA;IACpC,QAAA,IAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAA;IAEhC,QAAA,IAAI,MAAM,GAAG,CAAC,CAAC,MAAM,CAAA;IACrB,QAAA,IAAI,KAAK,GAAG,CAAC,CAAC,KAAK,CAAA;YACnB,IAAI,YAA0B,EAAE,YAAoB,CAAA;YAEpD,IAAI,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;YAE3C,CAAC,CAAC,KAAK,GAAG,UAAU,CAAE,CAAC,CAAE,CAAC,IAAI,EAAE,CAAA;;YAGhC,IAAI,IAAI,GAAG,UAAU,CAAE,CAAC,CAAE,CAAC,MAAM,GAAG,UAAU,CAAE,CAAC,CAAE,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;IACxE,QAAA,IAAI,IAAI,GAAG,CAAC,GAAG,IAAI,CAAA;YACnB,IAAI,IAAI,GAAG,EAAE,CAAA;IACb,QAAA,IAAI,IAAI,GAAG,EAAE,GAAG,IAAI,CAAA;IACpB,QAAA,IAAI,IAAI,GAAG,EAAE,GAAG,CAAC,GAAG,IAAI,CAAA;;IAIxB,QAAA,IAAI,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,CAAA;YAEpC,IAAI,SAAS,GAAG,QAAQ,CAAC,UAAU,CAAE,CAAC,CAAE,CAAC,CAAA;IACzC,QAAA,IAAI,cAAc,GAAG,SAAS,GAAG,CAAC,CAAA;IAElC,QAAA,IAAI,OAAO,GAAG,CAAC,CAAC,OAAO,CAAA;IACvB,QAAA,IAAI,SAAS,GAAG,CAAC,CAAC,SAAS,CAAA;IAC3B,QAAA,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAA;YAE3B,IAAI,GAAG,GAAG,CAAC,CAAA;YACX,IAAI,QAAQ,GAAG,CAAC,CAAA;YAChB,IAAI,MAAM,GAAG,CAAC,CAAA;IAEd,QAAA,SAAS,kBAAkB,CAAE,EAAU,EAAE,EAAU,EAAE,KAAe,EAAA;gBAClE,KAAK,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;IAC5B,gBAAA,EAAE,MAAM,CAAA;IACR,gBAAA,IAAI,CAAC,GAAG,MAAM,GAAG,CAAC,CAAA;IAElB,gBAAA,IAAI,IAAI,GAAG,KAAK,CAAE,CAAC,CAAE,CAAA;IAErB,gBAAA,IAAI,CAAC,IAAI;wBAAE,SAAQ;IAEnB,gBAAA,IAAI,CAAC,GAAG,cAAc,KAAK,CAAC,EAAE;;IAG5B,oBAAA,IAAI,YAAY,EAAE;4BAChB,YAAY,GAAG,IAAI,YAAY,CAAC,SAAS,GAAG,CAAC,CAAC,CAAA;IAC9C,wBAAA,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAA;4BACzB,YAAY,GAAG,CAAC,CAAA;IACjB,qBAAA;IACF,iBAAA;IAAM,qBAAA,IAAI,CAAC,GAAG,cAAc,KAAK,CAAC,EAAE,CAIpC;IAAM,qBAAA,IAAI,CAAC,GAAG,cAAc,KAAK,cAAc,GAAG,CAAC,EAAE;wBACpD,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;IAClC,oBAAA,IAAI,GAAG,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,CAAA;IAC7B,oBAAA,GAAG,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,GAAG,CAAE,CAAC,CAAE,CAAC,GAAG,EAAE,CAAA;IACpC,oBAAA,GAAG,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,GAAG,CAAE,CAAC,CAAE,CAAC,GAAG,EAAE,CAAA;IACpC,oBAAA,GAAG,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,GAAG,CAAE,CAAC,CAAE,CAAC,GAAG,EAAE,CAAA;IACpC,oBAAA,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;IAEf,oBAAA,IAAI,cAAc,EAAE;IAClB,wBAAA,OAAO,IAAI,CAAA;IACZ,qBAAA;wBAED,QAAQ,IAAI,CAAC,CAAA;IACd,iBAAA;IAAM,qBAAA;IACL,oBAAA,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAA;IACpC,oBAAA,IAAI,UAAU,IAAI,QAAQ,KAAK,IAAI;4BAAE,SAAQ;IAE7C,oBAAA,IAAI,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,CAAA;IAChD,oBAAA,IAAI,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,CAAA;IAChD,oBAAA,IAAI,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,CAAA;IAEhD,oBAAA,IAAI,YAAY,EAAE;IAChB,wBAAA,IAAI,CAAC,GAAG,YAAY,GAAG,CAAC,CAAA;IAExB,wBAAA,YAAY,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,CAAC,CAAA;IACzB,wBAAA,YAAY,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,CAAC,CAAA;IACzB,wBAAA,YAAY,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,CAAC,CAAA;4BAEzB,YAAY,IAAI,CAAC,CAAA;4BAEjB,IAAI,CAAC,GAAG,cAAc;gCAAE,SAAQ;IACjC,qBAAA;IAED,oBAAA,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAA;IAClC,oBAAA,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;IACnC,oBAAA,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAA;wBAErC,SAAS,CAAC,UAAU,EAAE,CAAA;IACtB,oBAAA,SAAS,CAAC,UAAU,CAAE,GAAG,CAAE,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;IAEnD,oBAAA,SAAS,CAAC,CAAC,CAAE,GAAG,CAAE,GAAG,CAAC,CAAA;IACtB,oBAAA,SAAS,CAAC,CAAC,CAAE,GAAG,CAAE,GAAG,CAAC,CAAA;IACtB,oBAAA,SAAS,CAAC,CAAC,CAAE,GAAG,CAAE,GAAG,CAAC,CAAA;IACtB,oBAAA,SAAS,CAAC,MAAM,CAAE,GAAG,CAAE,GAAG,MAAM,CAAA;IAEhC,oBAAA,EAAE,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,CAAC,CAAA;wBAExD,GAAG,IAAI,CAAC,CAAA;IACT,iBAAA;IACF,aAAA;aACF;YAED,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,UAAU,KAAK,6BAA0B;gBACtE,kBAAkB,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;IAC5C,SAAC,CAAC,CAAA;YAEF,EAAE,CAAC,QAAQ,EAAE,CAAA;YACb,CAAC,CAAC,aAAa,EAAE,CAAA;YACjB,mBAAmB,CAAC,CAAC,CAAC,CAAA;YACtB,cAAc,CAAC,CAAC,CAAC,CAAA;YACjB,CAAC,CAAC,aAAa,EAAE,CAAA;YAEjB,2BAA2B,CAAC,CAAC,CAAC,CAAA;IAE9B,QAAA,IAAIA,aAAK;gBAAE,GAAG,CAAC,OAAO,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;SACxD;IACF,CAAA;IAED,cAAc,CAAC,GAAG,CAAC,KAAK,EAAE,SAAS,CAAC;;IClJpC;IACA;IACA;IACA;IACA;IACA;IACA;AAwWA;IACA;IACA;IACA;IACA;IACA;AACA;AACA;IACA,IAAI,iBAAiB,GAAG;IACxB,IAAI,aAAa,EAAE,cAAc;IACjC,IAAI,UAAU,EAAE,YAAY,EAAE,aAAa,EAAE,OAAO;IACpD,IAAI,gBAAgB,EAAE,aAAa;IACnC,IAAI,qBAAqB,EAAE,YAAY,EAAE,OAAO,EAAE,OAAO;IACzD,IAAI,iBAAiB,EAAE,iBAAiB,EAAE,YAAY,EAAE,WAAW;IACnE,IAAI,UAAU,EAAE,UAAU,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW;IACjE,IAAI,gBAAgB,EAAE,gBAAgB;IACtC,CAAC,CAAC;AACF;IACA,IAAI,aAAa,GAAG;IACpB;IACA,IAAI,YAAY,EAAE,YAAY,EAAE,YAAY;IAC5C,IAAI,aAAa,EAAE,eAAe;IAClC,IAAI,aAAa;IACjB;IACA,IAAI,aAAa,EAAE,YAAY,EAAE,YAAY,EAAE,eAAe;IAC9D,IAAI,eAAe,EAAE,aAAa,EAAE,mBAAmB;IACvD,IAAI,eAAe;IACnB,IAAI,cAAc,EAAE,eAAe;IACnC,CAAC,CAAC;AACF;IACA,IAAI,SAAS,GAAG,iBAAiB,CAAC,MAAM,EAAE,aAAa,EAAE,CAAC;AAC1D;IACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA;AACA;AACA;IACA,SAAS,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE;IAC9C,IAAI,OAAO,UAAU,GAAG,IAAI,IAAI;IAChC,QAAQ,UAAU,CAAC,MAAM;IACzB,QAAQ,UAAU,CAAC,UAAU;IAC7B,QAAQ,UAAU,CAAC,UAAU,KAAK,QAAQ,IAAI,CAAC,EAAE;IACjD,KAAK,GAAG,SAAS,CAAC;IAClB,CAAC;AACD;IACA,SAAS,WAAW,EAAE,UAAU,EAAE;IAClC,IAAI,OAAO,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,CAAC;IAC3C,CAAC;AACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,YAAY,EAAE,UAAU,EAAE;IACnC,IAAI,OAAO,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC;IAC7C,CAAC;AACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,WAAW,EAAE,UAAU,EAAE;IAClC,IAAI,OAAO,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC;IAC5C,CAAC;AACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,YAAY,EAAE,UAAU,EAAE;IACnC,IAAI,OAAO,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,EAAE,CAAC;IAChD,CAAC;AACD;IACA,SAAS,cAAc,EAAE,UAAU,EAAE;IACrC,IAAI,OAAO,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,CAAC,EAAE,CAAC;IAClD,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,WAAW,EAAE,KAAK,EAAE,MAAM,EAAE;IACrC,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;IAC7B,IAAI,IAAI,CAAC,MAAM,GAAG,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC,EAAE,CAAC;IAC/C,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE;IACjD,QAAQ,MAAM,EAAE,CAAC,EAAE,GAAG,KAAK,EAAE,EAAE,EAAE,IAAI,CAAC,GAAG,KAAK,EAAE,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;IAC9D,KAAK;IACL,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC;AAiBD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,WAAW,EAAE,KAAK,EAAE,MAAM,EAAE;IACrC,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;IAC7B,IAAI,IAAI,CAAC,MAAM,GAAG,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC,EAAE,CAAC;IAC/C,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE;IACjD,QAAQ,MAAM,EAAE,CAAC,EAAE;IACnB,YAAY,KAAK,EAAE,EAAE,MAAM,IAAI,EAAE,GAAG,KAAK,EAAE,EAAE,GAAG,CAAC,EAAE,IAAI,EAAE;IACzD,YAAY,KAAK,EAAE,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC,GAAG,KAAK,EAAE,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC;IACzD,SAAS,CAAC;IACV,KAAK;IACL,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC;AAiBD;IACA,SAAS,aAAa,EAAE,KAAK,EAAE,MAAM,EAAE;IACvC,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC;IACzB,IAAI,IAAI,CAAC,MAAM,GAAG,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC;IACrD,IAAI,IAAI,KAAK,GAAG,WAAW,EAAE,MAAM,EAAE,CAAC;IACtC,IAAI,IAAI,IAAI,GAAG,WAAW,EAAE,KAAK,EAAE,CAAC;IACpC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE;IAC9D,QAAQ,KAAK,CAAC,UAAU,EAAE,EAAE,EAAE,IAAI,CAAC,UAAU,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC;IAC5D,KAAK;IACL,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC;AACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,aAAa,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE;IACnD,IAAI,IAAI,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC;IAC5B,IAAI,IAAI,MAAM,GAAG,CAAC,CAAC,OAAO,CAAC;IAC3B,IAAI,IAAI,CAAC,MAAM,GAAG,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC,EAAE,CAAC;IACjD,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;IAChC;IACA,QAAQ,MAAM,EAAE,CAAC,EAAE,GAAG,QAAQ,EAAE,CAAC,EAAE,GAAG,MAAM,CAAC;IAC7C,KAAK;IACL,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC;AAUD;AACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE;IACnC,IAAI,IAAI,CAAC,EAAE,EAAE,CAAC;IACd,IAAI,IAAI,CAAC,MAAM,EAAE;IACjB;IACA,QAAQ,IAAI,UAAU,GAAG,CAAC,CAAC;IAC3B,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE;IACrD,YAAY,UAAU,IAAI,KAAK,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC;IACzC,SAAS;IACT;IACA,QAAQ,MAAM,GAAG,IAAI,KAAK,CAAC,WAAW,EAAE,UAAU,EAAE,CAAC;IACrD,KAAK;IACL,IAAI,IAAI,UAAU,GAAG,CAAC,CAAC;IACvB,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE;IACjD,QAAQ,IAAI,KAAK,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC;IAC/B,QAAQ,IAAI,MAAM,GAAG,KAAK,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC;IACpC,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,EAAE,CAAC,EAAE;IACzC,YAAY,MAAM,EAAE,UAAU,EAAE,GAAG,KAAK,CAAC;IACzC,YAAY,EAAE,UAAU,CAAC;IACzB,SAAS;IACT,KAAK;IACL,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC;AA6BD;AACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,WAAW,EAAE,KAAK,EAAE,MAAM,EAAE;IACrC,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC;IACzB,IAAI,IAAI,CAAC,MAAM,GAAG,MAAM,GAAG,IAAI,KAAK,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC;IACtD,IAAI,IAAI,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC;IACrC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;IAChC,QAAQ,MAAM,EAAE,CAAC,EAAE,GAAG,KAAK,EAAE,CAAC,EAAE,GAAG,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC;IACnD,KAAK;IACL,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC;AAWD;AACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,aAAa,EAAE,QAAQ,EAAE,MAAM,EAAE;IAC1C,IAAI,IAAI,UAAU,GAAG,QAAQ,YAAY,SAAS,GAAG,IAAI,GAAG,MAAM,CAAC;IACnE,IAAI,IAAI,UAAU,GAAG,CAAC,UAAU,GAAG,CAAC,CAAC;IACrC,IAAI,IAAI,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC;IAC5B,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC;IACb,IAAI,IAAI,CAAC,MAAM,EAAE;IACjB,QAAQ,IAAI,UAAU,GAAG,CAAC,CAAC;IAC3B,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;IAChC,YAAY,IAAI,QAAQ,EAAE,CAAC,EAAE,GAAG,UAAU,IAAI,QAAQ,EAAE,CAAC,EAAE,GAAG,UAAU,EAAE;IAC1E,gBAAgB,EAAE,UAAU,CAAC;IAC7B,aAAa;IACb,SAAS;IACT,QAAQ,MAAM,GAAG,IAAI,UAAU,EAAE,UAAU,EAAE,CAAC;IAC9C,KAAK;IACL,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,IAAI,OAAO,CAAC,GAAG,CAAC,EAAE;IAClB,QAAQ,IAAI,KAAK,GAAG,CAAC,CAAC;IACtB,QAAQ,OAAO,QAAQ,EAAE,CAAC,EAAE,KAAK,UAAU,IAAI,QAAQ,EAAE,CAAC,EAAE,KAAK,UAAU,EAAE;IAC7E,YAAY,KAAK,IAAI,QAAQ,EAAE,CAAC,EAAE,CAAC;IACnC,YAAY,EAAE,CAAC,CAAC;IAChB,SAAS;IACT,QAAQ,KAAK,IAAI,QAAQ,EAAE,CAAC,EAAE,CAAC;IAC/B,QAAQ,EAAE,CAAC,CAAC;IACZ,QAAQ,MAAM,EAAE,CAAC,EAAE,GAAG,KAAK,CAAC;IAC5B,QAAQ,EAAE,CAAC,CAAC;IACZ,KAAK;IACL,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC;AAgDD;AACA;AACA;IACA,SAAS,cAAc,EAAE,KAAK,EAAE,MAAM,EAAE;IACxC,IAAI,OAAO,WAAW,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,MAAM,EAAE,CAAC;IACrD,CAAC;AAKD;AACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,gBAAgB,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE;IACtD,IAAI,OAAO,aAAa;IACxB,QAAQ,SAAS,EAAE,QAAQ,EAAE,YAAY,EAAE,MAAM,EAAE,EAAE,EAAE,OAAO,EAAE,MAAM;IACtE,KAAK,CAAC;IACN,CAAC;AAKD;AACA;AACA;IACA,SAAS,kBAAkB,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE;IACxD,IAAI,OAAO,aAAa;IACxB,QAAQ,WAAW,EAAE,QAAQ,EAAE,YAAY,EAAE,MAAM,EAAE,EAAE,EAAE,OAAO,EAAE,MAAM;IACxE,KAAK,CAAC;IACN,CAAC;AAKD;AACA;AACA;IACA,SAAS,oBAAoB,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE;IAC1D,IAAI,OAAO,aAAa;IACxB,QAAQ,aAAa,EAAE,QAAQ,EAAE,YAAY,EAAE,MAAM,EAAE,EAAE,EAAE,OAAO,EAAE,MAAM;IAC1E,KAAK,CAAC;IACN,CAAC;AACD;IACA,SAAS,yBAAyB,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE;IAC/D,IAAI,IAAI,QAAQ,GAAG,aAAa,EAAE,QAAQ,EAAE,YAAY,EAAE,MAAM,EAAE,EAAE,CAAC;IACrE,IAAI,OAAO,kBAAkB,EAAE,QAAQ,EAAE,OAAO,EAAE,cAAc,EAAE,QAAQ,EAAE,EAAE,CAAC;IAC/E,CAAC;AAKD;AACA;AACA;IACA,SAAS,WAAW,EAAE,KAAK,EAAE;IAC7B,IAAI,IAAI,EAAE,GAAG,WAAW,EAAE,KAAK,EAAE,CAAC;IAClC,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC;IAChC,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC;IAChC,IAAI,IAAI,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;IACxC,IAAI,IAAI,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC;IACrC,IAAI,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;IACxC,CAAC;AAoJD;IACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,aAAa,CAAC,MAAM,EAAE;IAC/B;IACA;IACA;IACA;IACA,EAAE,IAAI,MAAM,GAAG,CAAC,CAAC;IACjB,EAAE,IAAI,QAAQ,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC7C;IACA;IACA;IACA;IACA;IACA;IACA,EAAE,SAAS,GAAG,CAAC,MAAM,EAAE;IACvB,IAAI,IAAI,KAAK,GAAG,EAAE,CAAC;IACnB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;IACrC,MAAM,IAAI,GAAG,GAAG,KAAK,EAAE,CAAC;IACxB,MAAM,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,EAAE,CAAC;IAC3B,KAAK;IACL,IAAI,OAAO,KAAK,CAAC;IACjB,GAAG;AACH;IACA;IACA;IACA;IACA;IACA;IACA,EAAE,SAAS,GAAG,CAAC,MAAM,EAAE;IACvB,IAAI,IAAI,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,GAAG,MAAM,CAAC,CAAC;IACzD,IAAI,MAAM,IAAI,MAAM,CAAC;IACrB,IAAI,OAAO,KAAK,CAAC;IACjB,GAAG;AACH;IACA;IACA;IACA;IACA;IACA;IACA,EAAE,SAAS,GAAG,CAAC,MAAM,EAAE;IACvB,IAAI,IAAI,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,GAAG,MAAM,CAAC,CAAC;IACzD,IAAI,MAAM,IAAI,MAAM,CAAC;IACrB;IACA;IACA,IAAI,IAAI,SAAS,GAAG,MAAM,CAAC;IAC3B,IAAI,GAAG,MAAM,GAAG,SAAS,CAAC;IAC1B,MAAM,IAAI,CAAC,GAAG,EAAE,CAAC;IACjB,MAAM,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,IAAI,SAAS,EAAE;IACvD,QAAQ,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK;IACxC,UAAU,IAAI,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC;IAChD,SAAS,CAAC,CAAC;IACX,OAAO;IACP,MAAM,OAAO,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxB,KAAK,KAAI;IACT,MAAM,OAAO,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACpD,KAAK;IACL,GAAG;AACH;IACA;IACA;IACA;IACA;IACA;IACA,EAAE,SAAS,KAAK,CAAC,MAAM,EAAE;IACzB,IAAI,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC;IAClC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;IACrC,MAAM,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,EAAE,CAAC;IACzB,KAAK;IACL,IAAI,OAAO,KAAK,CAAC;IACjB,GAAG;AACH;IACA;IACA;IACA;IACA;IACA,EAAE,SAAS,KAAK,GAAG;IACnB,IAAI,IAAI,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;IAC9B,IAAO,IAAC,KAAK,CAAC,CAAC,MAAM,CAAU;IAC/B;IACA,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,MAAM,IAAI,EAAE;IAChC,MAAM,MAAM,EAAE,CAAC;IACf,MAAM,OAAO,IAAI,CAAC;IAClB,KAAK;IACL;IACA,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,MAAM,IAAI,EAAE;IAChC,MAAM,MAAM,GAAG,IAAI,GAAG,IAAI,CAAC;IAC3B,MAAM,MAAM,EAAE,CAAC;IACf,MAAM,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC;IACzB,KAAK;IACL;IACA,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,MAAM,IAAI,EAAE;IAChC,MAAM,MAAM,GAAG,IAAI,GAAG,IAAI,CAAC;IAC3B,MAAM,MAAM,EAAE,CAAC;IACf,MAAM,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC;IAC3B,KAAK;IACL;IACA,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,MAAM,IAAI,EAAE;IAChC,MAAM,MAAM,GAAG,IAAI,GAAG,IAAI,CAAC;IAC3B,MAAM,MAAM,EAAE,CAAC;IACf,MAAM,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC;IACzB,KAAK;IACL;IACA,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,MAAM,IAAI,EAAE;IAChC,MAAM,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IACvC,MAAM,MAAM,EAAE,CAAC;IACf,MAAM,OAAO,KAAK,CAAC;IACnB,KAAK;IACL,IAAI,QAAQ,IAAI;IAChB;IACA,IAAI,KAAK,IAAI;IACb,MAAM,MAAM,EAAE,CAAC;IACf,MAAM,OAAO,IAAI,CAAC;IAClB;IACA;IACA,IAAI,KAAK,IAAI;IACb,MAAM,MAAM,EAAE,CAAC;IACf,MAAM,OAAO,KAAK,CAAC;IACnB;IACA,IAAI,KAAK,IAAI;IACb,MAAM,MAAM,EAAE,CAAC;IACf,MAAM,OAAO,IAAI,CAAC;IAClB;IACA,IAAI,KAAK,IAAI;IACb,MAAM,MAAM,GAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC7C,MAAM,MAAM,IAAI,CAAC,CAAC;IAClB,MAAM,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC;IACzB;IACA,IAAI,KAAK,IAAI;IACb,MAAM,MAAM,GAAG,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC9C,MAAM,MAAM,IAAI,CAAC,CAAC;IAClB,MAAM,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC;IACzB;IACA,IAAI,KAAK,IAAI;IACb,MAAM,MAAM,GAAG,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC9C,MAAM,MAAM,IAAI,CAAC,CAAC;IAClB,MAAM,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC;IACzB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,IAAI;IACb,MAAM,KAAK,GAAG,QAAQ,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC9C,MAAM,MAAM,IAAI,CAAC,CAAC;IAClB,MAAM,OAAO,KAAK,CAAC;IACnB;IACA,IAAI,KAAK,IAAI;IACb,MAAM,KAAK,GAAG,QAAQ,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC9C,MAAM,MAAM,IAAI,CAAC,CAAC;IAClB,MAAM,OAAO,KAAK,CAAC;IACnB;IACA,IAAI,KAAK,IAAI;IACb,MAAM,KAAK,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IACjC,MAAM,MAAM,IAAI,CAAC,CAAC;IAClB,MAAM,OAAO,KAAK,CAAC;IACnB;IACA,IAAI,KAAK,IAAI;IACb,MAAM,KAAK,GAAG,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC7C,MAAM,MAAM,IAAI,CAAC,CAAC;IAClB,MAAM,OAAO,KAAK,CAAC;IACnB;IACA,IAAI,KAAK,IAAI;IACb,MAAM,KAAK,GAAG,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC7C,MAAM,MAAM,IAAI,CAAC,CAAC;IAClB,MAAM,OAAO,KAAK,CAAC;IACnB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,IAAI;IACb,MAAM,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC3C,MAAM,MAAM,IAAI,CAAC,CAAC;IAClB,MAAM,OAAO,KAAK,CAAC;IACnB;IACA,IAAI,KAAK,IAAI;IACb,MAAM,KAAK,GAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC5C,MAAM,MAAM,IAAI,CAAC,CAAC;IAClB,MAAM,OAAO,KAAK,CAAC;IACnB;IACA,IAAI,KAAK,IAAI;IACb,MAAM,KAAK,GAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC5C,MAAM,MAAM,IAAI,CAAC,CAAC;IAClB,MAAM,OAAO,KAAK,CAAC;IACnB;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,IAAI;IACb,MAAM,MAAM,GAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC7C,MAAM,MAAM,IAAI,CAAC,CAAC;IAClB,MAAM,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC;IACzB;IACA,IAAI,KAAK,IAAI;IACb,MAAM,MAAM,GAAG,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC9C,MAAM,MAAM,IAAI,CAAC,CAAC;IAClB,MAAM,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC;IACzB;IACA,IAAI,KAAK,IAAI;IACb,MAAM,MAAM,GAAG,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC9C,MAAM,MAAM,IAAI,CAAC,CAAC;IAClB,MAAM,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC;IACzB;IACA,IAAI,KAAK,IAAI;IACb,MAAM,MAAM,GAAG,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC9C,MAAM,MAAM,IAAI,CAAC,CAAC;IAClB,MAAM,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC;IAC3B;IACA,IAAI,KAAK,IAAI;IACb,MAAM,MAAM,GAAG,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC9C,MAAM,MAAM,IAAI,CAAC,CAAC;IAClB,MAAM,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC;IAC3B;IACA,IAAI,KAAK,IAAI;IACb,MAAM,MAAM,GAAG,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC9C,MAAM,MAAM,IAAI,CAAC,CAAC;IAClB,MAAM,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC;IACzB;IACA,IAAI,KAAK,IAAI;IACb,MAAM,MAAM,GAAG,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC9C,MAAM,MAAM,IAAI,CAAC,CAAC;IAClB,MAAM,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC;IACzB,KAAK;AACL;IACA,IAAI,MAAM,IAAI,KAAK,CAAC,iBAAiB,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3D,GAAG;AACH;IACA;IACA,EAAE,OAAO,KAAK,EAAE,CAAC;IACjeAAe,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;AACpD;IACA,IAAI,QAAQ,IAAI;IAChB,QAAQ,KAAK,CAAC;IACd,YAAY,OAAO,aAAa,EAAE,KAAK,EAAE,CAAC;IAC1C,QAAQ,KAAK,CAAC;IACd,YAAY,OAAO,WAAW,EAAE,KAAK,EAAE,CAAC;IACxC,QAAQ,KAAK,CAAC;IACd,YAAY,OAAO,WAAW,EAAE,KAAK,EAAE,CAAC;IACxC,QAAQ,KAAK,CAAC;IACd,YAAY,OAAO,WAAW,EAAE,KAAK,EAAE,CAAC;IACxC,QAAQ,KAAK,CAAC;IACd;IACA,YAAY,OAAO,YAAY,EAAE,KAAK,EAAE,CAAC;IACzC,QAAQ,KAAK,CAAC;IACd;IACA,YAAY,OAAO,SAAS,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE,IAAI,UAAU,EAAE,IAAI,EAAE,EAAE,CAAC;IAC7E,QAAQ,KAAK,CAAC;IACd,YAAY,OAAO,SAAS,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE;IACpD,QAAQ,KAAK,CAAC;IACd,YAAY,OAAO,cAAc,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE,CAAC;IAC1D,QAAQ,KAAK,CAAC;IACd,YAAY,OAAO,gBAAgB,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;IACvF,QAAQ,KAAK,EAAE;IACf,YAAY,OAAO,yBAAyB,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;IAChG,QAAQ,KAAK,EAAE;IACf,YAAY,OAAO,aAAa,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;IACpF,QAAQ,KAAK,EAAE;IACf,YAAY,OAAO,oBAAoB,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;IAC3F,QAAQ,KAAK,EAAE;IACf,YAAY,OAAO,oBAAoB,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;IAC3F,QAAQ,KAAK,EAAE;IACf,YAAY,OAAO,aAAa,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE,CAAC;IACzD,QAAQ,KAAK,EAAE;IACf,YAAY,OAAO,aAAa,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE,CAAC;IACzD,KAAK;AACL;IACA,CACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,UAAU,EAAE,SAAS,EAAE,MAAM,EAAE;AACxC;IACA,IAAI,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;IAC1B,IAAI,IAAI,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;IAC3C,IAAI,IAAI,UAAU,GAAG,EAAE,CAAC;AACxB;IACA,IAAI,SAAS,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE;IACvC,QAAQ,IAAI,MAAM,GAAG,YAAY,GAAG,YAAY,CAAC,OAAO,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC;IAChF,QAAQ,IAAI,IAAI,GAAG,SAAS,EAAE,IAAI,EAAE,CAAC;IACrC,QAAQ,IAAI,CAAC,MAAM,IAAI,IAAI,KAAK,SAAS,EAAE;IAC3C,YAAY,IAAI,IAAI,YAAY,UAAU,EAAE;IAC5C,gBAAgB,UAAU,EAAE,IAAI,EAAE,GAAG,eAAe,CAAC,KAAK,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,EAAE,CAAC;IACxF,aAAa,KAAI;IACjB,gBAAgB,UAAU,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;IAC1C,aAAa;IACb,SAAS;IACT,KAAK,EAAE,CAAC;AACR;IACA,IAAI,OAAO,UAAU,CAAC;AACtB;IACA;;IC/5CA;;;;IAIG;IAgBH,MAAM,SAAS,GAA0B;IACvC,IAAA,GAAG,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;IACtB,IAAA,GAAG,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;IACtB,IAAA,GAAG,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;IACtB,IAAA,GAAG,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;IACtB,IAAA,GAAG,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;IACtB,IAAA,GAAG,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;IACtB,IAAA,GAAG,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;IACtB,IAAA,GAAG,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;QACtB,IAAI,EAAE,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC;KACvB,CAAA;IAED,MAAM,UAAW,SAAQ,eAAe,CAAA;IACtC,IAAA,IAAI,IAAI,GAAM,EAAA,OAAO,MAAM,CAAA,EAAE;IAC7B,IAAA,IAAI,QAAQ,GAAM,EAAA,OAAO,IAAI,CAAA,EAAE;QAE/B,MAAM,GAAA;;IAGJ,QAAA,IAAIA,aAAK;gBAAE,GAAG,CAAC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;YAErD,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,SAAS,CAAA;IAE3B,QAAA,MAAM,CAAC,GAAG,IAAI,CAAC,SAAS,CAAA;IACxB,QAAA,MAAM,EAAE,GAAuB,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAA;;IAG5E,QAAA,MAAM,YAAY,GAAG;gBACnB,gBAAgB,EAAE,aAAa,EAAE,YAAY;gBAC7C,OAAO,EAAE,OAAO,EAAE,qBAAqB;aACxC,CAAA;IACD,QAAA,YAAY,CAAC,OAAO,CAAC,UAAU,IAAI,EAAA;IACjC,YAAA,IAAI,EAAE,CAAE,IAAI,CAAE,KAAK,SAAS,EAAE;oBAC5B,CAAC,CAAC,MAAM,CAAE,IAAI,CAAE,GAAG,EAAE,CAAE,IAAI,CAAE,CAAA;IAC9B,aAAA;IACH,SAAC,CAAC,CAAA;YAEF,IAAI,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAA;IACvD,QAAA,IAAI,cAAc,CAAA;IAElB,QAAA,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,WAAW,CAAA;IACrB,QAAA,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC,KAAK,CAAA;YAElB,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC,EAAE,MAAM,CAAC,CAAA;IAE/C,QAAA,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,YAAY,EAAE;gBAC5C,SAAS,GAAG,CAAC,CAAA;IACb,YAAA,SAAS,GAAG,EAAE,CAAC,cAAc,CAAE,CAAC,CAAE,CAAA;gBAElC,SAAS,GAAG,CAAC,CAAA;IACb,YAAA,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;IACvC,gBAAA,SAAS,IAAI,EAAE,CAAC,cAAc,CAAE,CAAC,CAAE,CAAA;IACpC,aAAA;gBAED,QAAQ,GAAG,CAAC,CAAA;IACZ,YAAA,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;IACvC,gBAAA,SAAS,GAAG,EAAE,CAAC,SAAS,CAAE,EAAE,CAAC,aAAa,CAAE,CAAC,CAAE,CAAE,CAAA;IACjD,gBAAA,QAAQ,IAAI,SAAS,CAAC,YAAY,CAAC,MAAM,CAAA;IAC1C,aAAA;IAED,YAAA,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAA;IAEtB,YAAA,cAAc,GAAG,CAAE,SAAS,CAAE,CAAA;IAC/B,SAAA;IAAM,aAAA;IACL,YAAA,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAA;IACtB,YAAA,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAA;IACtB,YAAA,SAAS,GAAG,EAAE,CAAC,SAAS,CAAA;IACxB,YAAA,SAAS,GAAG,EAAE,CAAC,SAAS,CAAA;IACxB,YAAA,SAAS,GAAG,EAAE,CAAC,SAAS,CAAA;IAExB,YAAA,cAAc,GAAG,EAAE,CAAC,cAAc,CAAA;IACnC,SAAA;IAED,QAAA,QAAQ,IAAI,SAAS,CAAA;;YAIrB,IAAI,IAAI,CAAC,YAAY,EAAE;IACrB,YAAA,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,SAAS,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;oBAC1C,MAAM,KAAK,GAAG,IAAI,YAAY,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAA;IAC5C,gBAAA,MAAM,eAAe,GAAG,QAAQ,GAAG,CAAC,CAAA;oBAEpC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,EAAE,CAAC,EAAE;IAC7B,oBAAA,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAA;IAChB,oBAAA,MAAM,MAAM,GAAG,CAAC,GAAG,eAAe,CAAA;wBAClC,KAAK,CAAE,EAAE,CAAE,GAAG,EAAE,CAAC,UAAU,CAAE,MAAM,CAAE,CAAA;IACrC,oBAAA,KAAK,CAAE,EAAE,GAAG,CAAC,CAAE,GAAG,EAAE,CAAC,UAAU,CAAE,MAAM,CAAE,CAAA;IACzC,oBAAA,KAAK,CAAE,EAAE,GAAG,CAAC,CAAE,GAAG,EAAE,CAAC,UAAU,CAAE,MAAM,CAAE,CAAA;IAC1C,iBAAA;IAED,gBAAA,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;IACrB,aAAA;IACF,SAAA;;IAGD,QAAA,MAAM,WAAW,GAAG,IAAI,WAAW,CAAC,QAAQ,CAAC,CAAA;IAC7C,QAAA,MAAM,WAAW,GAAG,IAAI,WAAW,CAAC,QAAQ,CAAC,CAAA;IAC7C,QAAA,MAAM,UAAU,GAAG,IAAI,UAAU,CAAC,QAAQ,CAAC,CAAA;IAE3C,QAAA,MAAM,WAAW,GAAG,IAAI,WAAW,CAAC,QAAQ,CAAC,CAAA;IAC7C,QAAA,MAAM,aAAa,GAAG,IAAI,SAAS,CAAC,QAAQ,CAAC,CAAA;IAE7C,QAAA,MAAM,WAAW,GAAG,IAAI,WAAW,CAAC,SAAS,CAAC,CAAA;IAC9C,QAAA,MAAM,WAAW,GAAG,IAAI,WAAW,CAAC,SAAS,CAAC,CAAA;IAC9C,QAAA,MAAM,UAAU,GAAG,IAAI,WAAW,CAAC,SAAS,CAAC,CAAA;IAE7C,QAAA,MAAM,WAAW,GAAG,IAAI,WAAW,CAAC,SAAS,CAAC,CAAA;IAC9C,QAAA,MAAM,YAAY,GAAG,IAAI,WAAW,CAAC,SAAS,CAAC,CAAA;IAC/C,QAAA,MAAM,WAAW,GAAG,IAAI,WAAW,CAAC,SAAS,CAAC,CAAA;IAE9C,QAAA,MAAM,YAAY,GAAG,IAAI,WAAW,CAAC,SAAS,CAAC,CAAA;IAC/C,QAAA,MAAM,WAAW,GAAG,IAAI,WAAW,CAAC,SAAS,CAAC,CAAA;;YAG9C,IAAI,WAAW,GAAG,CAAC,CAAA;IACnB,QAAA,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;IACvC,YAAA,MAAM,eAAe,GAAG,cAAc,CAAE,CAAC,CAAE,CAAA;IAC3C,YAAA,YAAY,CAAE,CAAC,CAAE,GAAG,WAAW,CAAA;IAC/B,YAAA,WAAW,CAAE,CAAC,CAAE,GAAG,eAAe,CAAA;gBAClC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,EAAE,EAAE,CAAC,EAAE;IACpC,gBAAA,WAAW,CAAE,CAAC,GAAG,WAAW,CAAE,GAAG,CAAC,CAAA;IACnC,aAAA;gBACD,WAAW,IAAI,eAAe,CAAA;IAC/B,SAAA;;IAGD,QAAA,MAAM,cAAc,GAAG,EAAE,CAAC,cAAc,CAAA;YACxC,IAAI,WAAW,GAAG,CAAC,CAAA;IACnB,QAAA,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;IACvC,YAAA,MAAM,eAAe,GAAG,cAAc,CAAE,CAAC,CAAE,CAAA;IAC3C,YAAA,YAAY,CAAE,CAAC,CAAE,GAAG,WAAW,CAAA;IAC/B,YAAA,WAAW,CAAE,CAAC,CAAE,GAAG,eAAe,CAAA;gBAClC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,EAAE,EAAE,CAAC,EAAE;IACpC,gBAAA,WAAW,CAAE,CAAC,GAAG,WAAW,CAAE,GAAG,CAAC,CAAA;IACnC,aAAA;gBACD,WAAW,IAAI,eAAe,CAAA;IAC/B,SAAA;;;YAKD,IAAI,UAAU,GAAG,CAAC,CAAA;YAClB,IAAI,UAAU,GAAG,CAAC,CAAA;IAElB,QAAA,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;IACvC,YAAA,SAAS,GAAG,EAAE,CAAC,SAAS,CAAE,EAAE,CAAC,aAAa,CAAE,CAAC,CAAE,CAAE,CAAA;IACjD,YAAA,MAAM,cAAc,GAAG,SAAS,CAAC,YAAY,CAAC,MAAM,CAAA;IACpD,YAAA,MAAM,qBAAqB,GAAG,SAAS,CAAC,gBAAgB,CAAA;IAExD,YAAA,MAAM,iBAAiB,GAAG,SAAS,CAAC,YAAY,CAAA;IAChD,YAAA,MAAM,kBAAkB,GAAG,SAAS,CAAC,aAAa,CAAA;IAElD,YAAA,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,kBAAkB,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;IACvD,gBAAA,WAAW,CAAE,UAAU,CAAE,GAAG,UAAU,GAAG,iBAAiB,CAAE,CAAC,GAAG,CAAC,CAAE,CAAA;IACnE,gBAAA,WAAW,CAAE,UAAU,CAAE,GAAG,UAAU,GAAG,iBAAiB,CAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE,CAAA;oBACvE,UAAU,CAAE,UAAU,CAAE,GAAG,kBAAkB,CAAE,CAAC,CAAE,CAAA;oBAClD,UAAU,IAAI,CAAC,CAAA;IAChB,aAAA;;IAID,YAAA,WAAW,CAAE,CAAC,CAAE,GAAG,UAAU,CAAA;IAC7B,YAAA,UAAU,CAAE,CAAC,CAAE,GAAG,cAAc,CAAA;gBAEhC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,EAAE,EAAE,CAAC,EAAE;IACnC,gBAAA,WAAW,CAAE,UAAU,CAAE,GAAG,CAAC,CAAA;oBAC7B,aAAa,CAAE,UAAU,CAAE,GAAG,qBAAqB,CAAE,CAAC,CAAE,CAAA;oBACxD,UAAU,IAAI,CAAC,CAAA;IAChB,aAAA;IACF,SAAA;;IAID,QAAA,MAAM,YAAY,GAAG,EAAE,CAAC,YAAY,CAAA;IACpC,QAAA,IAAI,YAAY,EAAE;gBAChB,IAAI,EAAE,CAAC,aAAa,EAAE;oBACpB,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC,aAAa,EAAE,UAAU,CAAC,CAAA;IAC7C,aAAA;IAED,YAAA,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE;IACpD,gBAAA,MAAM,UAAU,GAAG,YAAY,CAAE,CAAC,CAAE,CAAA;oBACpC,MAAM,UAAU,GAAG,YAAY,CAAE,CAAC,GAAG,CAAC,CAAE,CAAA;IACxC,gBAAA,IAAI,UAAU,GAAG,QAAQ,IAAI,UAAU,GAAG,QAAQ,EAAE;IAClD,oBAAA,WAAW,CAAE,UAAU,CAAE,GAAG,UAAU,CAAA;IACtC,oBAAA,WAAW,CAAE,UAAU,CAAE,GAAG,UAAU,CAAA;wBACtC,UAAU,IAAI,CAAC,CAAA;IAChB,iBAAA;IACF,aAAA;IACF,SAAA;;YAID,CAAC,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAA;IACtC,QAAA,CAAC,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,CAAA;IAC9B,QAAA,CAAC,CAAC,SAAS,CAAC,UAAU,GAAG,WAAW,CAAA;IACpC,QAAA,CAAC,CAAC,SAAS,CAAC,UAAU,GAAG,WAAW,CAAA;IACpC,QAAA,CAAC,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,CAAA;IAElC,QAAA,CAAC,CAAC,SAAS,CAAC,MAAM,GAAG,QAAQ,CAAA;IAC7B,QAAA,CAAC,CAAC,SAAS,CAAC,KAAK,GAAG,QAAQ,CAAA;IAC5B,QAAA,CAAC,CAAC,SAAS,CAAC,YAAY,GAAG,WAAW,CAAA;YACtC,CAAC,CAAC,SAAS,CAAC,UAAU,GAAG,IAAI,WAAW,CAAC,QAAQ,CAAC,CAAA;IAClD,QAAA,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAA;IACnD,QAAA,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAA;IACnD,QAAA,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAA;IACnD,QAAA,CAAC,CAAC,SAAS,CAAC,MAAM,GAAG,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAA;IACxD,QAAA,CAAC,CAAC,SAAS,CAAC,OAAO,GAAG,EAAE,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAA;IAC1D,QAAA,CAAC,CAAC,SAAS,CAAC,MAAM,GAAG,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAA;IACxD,QAAA,CAAC,CAAC,SAAS,CAAC,SAAS,GAAG,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAA;IAC9D,QAAA,CAAC,CAAC,SAAS,CAAC,YAAY,GAAG,aAAa,CAAA;IAExC,QAAA,CAAC,CAAC,YAAY,CAAC,MAAM,GAAG,SAAS,CAAA;IACjC,QAAA,CAAC,CAAC,YAAY,CAAC,KAAK,GAAG,SAAS,CAAA;IAChC,QAAA,CAAC,CAAC,YAAY,CAAC,UAAU,GAAG,WAAW,CAAA;YACvC,CAAC,CAAC,YAAY,CAAC,aAAa,GAAG,EAAE,CAAC,aAAa,CAAA;IAC/C,QAAA,CAAC,CAAC,YAAY,CAAC,UAAU,GAAG,WAAW,CAAA;IACvC,QAAA,CAAC,CAAC,YAAY,CAAC,SAAS,GAAG,UAAU,CAAA;IACrC,QAAA,CAAC,CAAC,YAAY,CAAC,KAAK,GAAG,EAAE,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,EAAE,SAAS,CAAC,CAAA;IAC5D,QAAA,CAAC,CAAC,YAAY,CAAC,MAAM,GAAG,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,EAAE,SAAS,CAAC,CAAA;IAC/D,QAAA,CAAC,CAAC,YAAY,CAAC,OAAO,GAAG,EAAE,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,EAAE,SAAS,CAAC,CAAA;IAE9D,QAAA,CAAC,CAAC,UAAU,CAAC,MAAM,GAAG,SAAS,CAAA;IAC/B,QAAA,CAAC,CAAC,UAAU,CAAC,KAAK,GAAG,SAAS,CAAA;YAC9B,CAAC,CAAC,UAAU,CAAC,WAAW,GAAG,IAAI,WAAW,CAAC,SAAS,CAAC,CAAA;IACrD,QAAA,CAAC,CAAC,UAAU,CAAC,UAAU,GAAG,WAAW,CAAA;IACrC,QAAA,CAAC,CAAC,UAAU,CAAC,aAAa,GAAG,YAAY,CAAA;IACzC,QAAA,CAAC,CAAC,UAAU,CAAC,YAAY,GAAG,WAAW,CAAA;IACvC,QAAA,CAAC,CAAC,UAAU,CAAC,SAAS,GAAG,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,EAAE,SAAS,GAAG,CAAC,CAAC,CAAA;IACpE,QAAA,CAAC,CAAC,UAAU,CAAC,OAAO,GAAG,EAAE,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,EAAE,SAAS,GAAG,CAAC,CAAC,CAAA;IAEhE,QAAA,CAAC,CAAC,UAAU,CAAC,MAAM,GAAG,SAAS,CAAA;IAC/B,QAAA,CAAC,CAAC,UAAU,CAAC,KAAK,GAAG,SAAS,CAAA;IAC9B,QAAA,CAAC,CAAC,UAAU,CAAC,WAAW,GAAG,YAAY,CAAA;IACvC,QAAA,CAAC,CAAC,UAAU,CAAC,UAAU,GAAG,WAAW,CAAA;;YAIrC,IAAI,aAAa,GAAuB,EAAE,CAAA;IAC1C,QAAA,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;gBACjD,MAAM,SAAS,GAAG,EAAE,CAAC,SAAS,CAAE,CAAC,CAAE,CAAA;gBACnC,MAAM,cAAc,GAAa,EAAE,CAAA;IACnC,YAAA,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;oBAC3D,MAAM,OAAO,GAAG,SAAS,CAAC,WAAW,CAAE,CAAC,CAAE,CAAC,WAAW,EAAE,CAAA;oBACxD,MAAM,QAAQ,GAAG,SAAS,CAAC,YAAY,CAAE,CAAC,CAAE,CAAA;IAC5C,gBAAA,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAA;IACtD,aAAA;gBACD,MAAM,YAAY,GAAG,SAAS,CAAC,YAAY,CAAC,WAAW,EAAE,CAAA;gBACzD,MAAM,OAAO,GAAG,cAAc,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAA;IAErD,YAAA,MAAM,aAAa,GAAG,SAAS,CAAC,aAAa,CAAC,MAAM,CAAA;IACpD,YAAA,MAAM,YAAY,GAAG,IAAI,KAAK,CAAC,aAAa,CAAC,CAAA;IAC7C,YAAA,MAAM,YAAY,GAAG,IAAI,KAAK,CAAC,aAAa,CAAC,CAAA;gBAC7C,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,EAAE,EAAE,CAAC,EAAE;IAClC,gBAAA,YAAY,CAAE,CAAC,CAAE,GAAG,SAAS,CAAC,YAAY,CAAE,CAAC,GAAG,CAAC,CAAE,CAAA;IACnD,gBAAA,YAAY,CAAE,CAAC,CAAE,GAAG,SAAS,CAAC,YAAY,CAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE,CAAA;IACxD,aAAA;IACD,YAAA,MAAM,KAAK,GAAG;IACZ,gBAAA,YAAY,EAAE,YAAY;IAC1B,gBAAA,YAAY,EAAE,YAAY;oBAC1B,UAAU,EAAE,SAAS,CAAC,aAAa;iBACpC,CAAA;gBAED,aAAa,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC,UAAU,CAAC,GAAG,CACnC,SAAS,CAAC,SAAS,EAAE,cAAc,EAAE,OAAO,EAAE,YAAY,EAAE,KAAK,CAClE,CAAA;IACF,SAAA;IAED,QAAA,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;IACvC,YAAA,CAAC,CAAC,YAAY,CAAC,aAAa,CAAE,CAAC,CAAE,GAAG,aAAa,CAAE,CAAC,CAAC,YAAY,CAAC,aAAa,CAAE,CAAC,CAAE,CAAE,CAAA;IACvF,SAAA;IAED,QAAA,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;gBAC/C,MAAM,YAAY,GAAG,CAAC,CAAC,SAAS,CAAC,YAAY,CAAE,CAAC,CAAE,CAAA;IAClD,YAAA,MAAM,WAAW,GAAG,CAAC,CAAC,UAAU,CAAC,IAAI,CAAE,CAAC,CAAC,YAAY,CAAC,aAAa,CAAE,YAAY,CAAE,CAAE,CAAA;gBACrF,MAAM,aAAa,GAAG,CAAC,CAAC,YAAY,CAAC,UAAU,CAAE,YAAY,CAAE,CAAA;IAC/D,YAAA,CAAC,CAAC,SAAS,CAAC,UAAU,CAAE,CAAC,CAAE,GAAG,WAAW,CAAC,cAAc,CAAE,CAAC,GAAG,aAAa,CAAE,CAAA;IAC9E,SAAA;YAED,IAAI,EAAE,CAAC,aAAa,EAAE;IACpB,YAAA,MAAM,eAAe,GAAW,EAAE,CAAC,aAAa,CAAC,MAAM,CAAA;IACvD,YAAA,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;;IAElD,gBAAA,MAAM,MAAM,GAAG,SAAS,CAAE,CAAC,CAAC,YAAY,CAAC,MAAM,CAAE,CAAC,GAAG,eAAe,CAAE,CAAE,CAAA;oBACxE,IAAI,MAAM,KAAK,SAAS;wBAAE,CAAC,CAAC,YAAY,CAAC,MAAM,CAAE,CAAC,CAAE,GAAG,MAAM,CAAA;IAC9D,aAAA;IACF,SAAA;;YAID,IAAI,EAAE,CAAC,UAAU,EAAE;gBACjB,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,UAAU,CAAS,EAAE,CAAS,EAAA;oBAClD,CAAC,CAAC,UAAU,CAAE,CAAC,CAAE,GAAG,IAAI,MAAM,CAC5B,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,cAAc,CAC9C,CAAA;IACH,aAAC,CAAC,CAAA;IACH,SAAA;YAED,IAAI,EAAE,CAAC,eAAe,EAAE;gBACtB,EAAE,CAAC,eAAe,CAAC,OAAO,CAAC,UAAU,SAAc,EAAE,CAAS,EAAA;IAC5D,gBAAA,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAA;oBAChB,MAAM,QAAQ,GAAG,IAAI,QAAQ,CAAC,EAAE,GAAG,EAAE,CAAC,CAAA;oBACtC,CAAC,CAAC,UAAU,CAAE,IAAI,GAAG,EAAE,CAAE,GAAG,QAAQ,CAAA;oBACpC,IAAI,WAAW,GAAgC,EAAE,CAAA;IACjD,gBAAA,SAAS,CAAC,aAAa,CAAC,OAAO,CAAC,UAAU,UAAe,EAAA;IACvD,oBAAA,MAAM,MAAM,GAAG,IAAIT,aAAO,EAAE,CAAC,SAAS,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,SAAS,EAAE,CAAA;wBACrE,MAAM,SAAS,GAAa,UAAU,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,UAAkB,EAAA;4BACpF,IAAI,SAAS,GAAG,EAAE,CAAA;4BAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;IAC1B,4BAAA,MAAM,IAAI,GAAG,EAAE,CAAC,aAAa,CAAE,UAAU,GAAG,CAAC,GAAG,CAAC,CAAE,CAAA;IACnD,4BAAA,IAAI,IAAI,EAAE;IACR,gCAAA,SAAS,IAAI,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAA;IACvC,6BAAA;IAAM,iCAAA;oCACL,MAAK;IACN,6BAAA;IACF,yBAAA;IACD,wBAAA,OAAO,SAAS,CAAA;IAClB,qBAAC,CAAC,CAAA;wBACF,MAAM,IAAI,GAAG,WAAW,CAAE,SAAS,CAAC,QAAQ,EAAE,CAAE,CAAA;IAChD,oBAAA,IAAI,IAAI,EAAE;IACR,wBAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;IAC7B,qBAAA;IAAM,yBAAA;IACL,wBAAA,WAAW,CAAE,SAAS,CAAC,QAAQ,EAAE,CAAE,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAE,MAAM,CAAE,EAAE,SAAS,CAAC,CAAA;IAC9E,qBAAA;IACH,iBAAC,CAAC,CAAA;IACJ,aAAC,CAAC,CAAA;IACH,SAAA;YAED,IAAI,EAAE,CAAC,eAAe,EAAE;gBACtB,MAAM,OAAO,GAAG,KAAK,CAAA;IACrB,YAAA,MAAM,WAAW,GAAG,IAAI,QAAQ,CAAC,OAAO,CAAC,CAAA;IACzC,YAAA,MAAM,OAAO,GAAG,WAAW,CAAC,OAAO,EAAE,CAAA;IACrC,YAAA,EAAE,CAAC,eAAe,CAAC,OAAO,CAAC,UAAU,SAAmB,EAAA;IACtD,gBAAA,MAAM,MAAM,GAAG,IAAIA,aAAO,EAAE,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,SAAS,EAAE,CAAA;IAC7D,gBAAA,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;IACjC,aAAC,CAAC,CAAA;IACF,YAAA,IAAI,OAAO,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;IACjC,gBAAA,CAAC,CAAC,UAAU,CAAE,OAAO,CAAE,GAAG,WAAW,CAAA;IACtC,aAAA;IACF,SAAA;IAED,QAAA,MAAM,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAA;IACtB,QAAA,IAAI,EAAE,IAAI,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,EAAE,CAAE,CAAC,CAAE,EAAE;IACtC,YAAA,CAAC,CAAC,QAAQ,GAAG,IAAI,QAAQ,CAAC;IACxB,gBAAA,CAAC,EAAE,EAAE,CAAE,CAAC,CAAE;IACV,gBAAA,CAAC,EAAE,EAAE,CAAE,CAAC,CAAE;IACV,gBAAA,CAAC,EAAE,EAAE,CAAE,CAAC,CAAE;IACV,gBAAA,KAAK,EAAE,EAAE,CAAE,CAAC,CAAE;IACd,gBAAA,IAAI,EAAE,EAAE,CAAE,CAAC,CAAE;IACb,gBAAA,KAAK,EAAE,EAAE,CAAE,CAAC,CAAE;oBACd,UAAU,EAAE,EAAE,CAAC,UAAU;IAC1B,aAAA,CAAC,CAAA;IACH,SAAA;IAAM,aAAA;IACL,YAAA,CAAC,CAAC,QAAQ,GAAG,SAAS,CAAA;IACvB,SAAA;;IAGD,QAAA,qBAAqB,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;;IAG9B,QAAA,oBAAoB,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;YAE7B,CAAC,CAAC,aAAa,EAAE,CAAA;YACjB,CAAC,CAAC,aAAa,EAAE,CAAA;YAEjB,qBAAqB,CAAC,CAAC,CAAC,CAAA;IAExB,QAAA,IAAIS,aAAK;gBAAE,GAAG,CAAC,OAAO,CAAC,oBAAoB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;SACzD;IACF,CAAA;IAED,cAAc,CAAC,GAAG,CAAC,MAAM,EAAE,UAAU,CAAC;;ICtYtC;;;;IAIG;IAUH,MAAM4E,cAAY,GAAG,KAAK,CAAA;IAC1B,MAAM,SAAS,GAA0B;IACvC,IAAA,GAAG,EAAE,CAAC;IACN,IAAA,GAAG,EAAE,CAAC;IACN,IAAA,GAAG,EAAE,CAAC;IACN,IAAA,IAAI,EAAE,CAAC;IACP,IAAA,IAAI,EAAE,CAAC;IACP,IAAA,IAAI,EAAE,CAAC;IACP,IAAA,IAAI,EAAE,CAAC;QACP,IAAI,EAAE,CAAC;KACR,CAAA;IAED,MAAM,UAAW,SAAQ,eAAe,CAAA;IACtC,IAAA,IAAI,IAAI,GAAM,EAAA,OAAO,MAAM,CAAA,EAAE;QAE7B,MAAM,GAAA;;IAGJ,QAAA,IAAI5E,aAAK;gBAAE,GAAG,CAAC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;IAErD,QAAA,MAAM,CAAC,GAAG,IAAI,CAAC,SAAS,CAAA;IACxB,QAAA,MAAM,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAA;IAEhC,QAAA,MAAM,cAAc,GAAG,IAAI,CAAC,cAAc,CAAA;IAC1C,QAAA,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAA;IAEtC,QAAA,MAAM,MAAM,GAAG,CAAC,CAAC,MAAM,CAAA;YACvB,IAAI,QAAQ,GAAG,KAAK,CAAA;YACpB,IAAI,YAA0B,EAAE,YAAoB,CAAA;IAEpD,QAAA,MAAM,OAAO,GAAG,CAAC,CAAC,OAAO,CAAA;IACzB,QAAA,MAAM,SAAS,GAAG,CAAC,CAAC,SAAS,CAAA;IAC7B,QAAA,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC,CAAA;YAC5D,SAAS,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC,EAAE,SAAS,CAAC,CAAA;YAEjD,IAAI,GAAG,GAAG,CAAC,CAAA;YACX,IAAI,cAAc,GAAG,CAAC,CAAA;YACtB,IAAI,iBAAiB,GAAG,CAAC,CAAA;IACzB,QAAA,IAAI,QAAQ,GAAG,CAAC,CAAC,CAAA;YACjB,IAAI,QAAQ,GAAG,CAAC,CAAA;YAEhB,IAAI,iBAAiB,GAAG,CAAC,CAAA;YACzB,IAAI,kBAAkB,GAAG,CAAC,CAAA;YAC1B,IAAI,cAAc,GAAG,CAAC,CAAA;YACtB,IAAI,cAAc,GAAG,CAAC,CAAA;IAEtB,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,YAAY,EAAE,CAAA;IAC5B,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,YAAY,EAAE,CAAA;IAE5B,QAAA,SAAS,kBAAkB,CAAE,EAAU,EAAE,EAAU,EAAE,KAAe,EAAA;gBAClE,KAAK,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;oBAC5B,MAAM,IAAI,GAAG,KAAK,CAAE,CAAC,CAAE,CAAC,IAAI,EAAE,CAAA;oBAE9B,IAAI,IAAI,KAAK,EAAE,IAAI,IAAI,CAAE,CAAC,CAAE,KAAK,GAAG;wBAAE,SAAQ;IAE9C,gBAAA,IAAI,IAAI,CAAE,CAAC,CAAE,KAAK,GAAG,EAAE;wBACrB,IAAI,IAAI,KAAK,mBAAmB,EAAE;4BAChC,iBAAiB,GAAG,kBAAkB,CAAA;4BACtC,cAAc,GAAG,CAAC,CAAA;IAElB,wBAAA,EAAE,QAAQ,CAAA;IACX,qBAAA;6BAAM,IAAI,IAAI,KAAK,eAAe,EAAE;4BACnC,iBAAiB,GAAG,cAAc,CAAA;IAClC,wBAAA,iBAAiB,GAAG,SAAS,CAAC,KAAK,CAAA;IAEnC,wBAAA,IAAI,YAAY,EAAE;gCAChB,YAAY,GAAG,CAAC,CAAA;gCAChB,YAAY,GAAG,IAAI,YAAY,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAA;IAC7C,4BAAA,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAA;gCAEzB,IAAI,QAAQ,GAAG,CAAC;oCAAE,QAAQ,GAAG,IAAI,CAAA;IAClC,yBAAA;IACF,qBAAA;6BAAM,IAAI,IAAI,KAAK,eAAe,EAAE;4BACnC,iBAAiB,GAAG,cAAc,CAAA;IACnC,qBAAA;IAAM,yBAAA;4BACL,iBAAiB,GAAG,CAAC,CAAA;IACtB,qBAAA;IACF,iBAAA;yBAAM,IAAI,iBAAiB,KAAK,kBAAkB,EAAE;wBACnD,IAAI,cAAc,KAAK,CAAC,EAAE;IACxB,wBAAA,CAAC,CAAC,KAAK,GAAG,IAAI,CAAA;IACd,wBAAA,CAAC,CAAC,EAAE,GAAG,IAAI,CAAA;IACZ,qBAAA;6BAAM,IAAI,cAAc,KAAK,CAAC,EAAE;4BAC/B,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC4E,cAAY,CAAC,CAAA;4BACnC,QAAQ,GAAG,QAAQ,CAAC,EAAE,CAAE,CAAC,CAAE,CAAC,CAAA;;IAE7B,qBAAA;6BAAM,CAqBN;IAED,oBAAA,EAAE,cAAc,CAAA;IACjB,iBAAA;yBAAM,IAAI,iBAAiB,KAAK,cAAc,EAAE;wBAC/C,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAACA,cAAY,CAAC,CAAA;IAEnC,oBAAA,IAAI,cAAc,IAAI,QAAQ,GAAG,CAAC;4BAAE,SAAQ;wBAE5C,MAAM,CAAC,GAAG,UAAU,CAAC,EAAE,CAAE,CAAC,CAAE,CAAC,CAAA;wBAC7B,MAAM,CAAC,GAAG,UAAU,CAAC,EAAE,CAAE,CAAC,CAAE,CAAC,CAAA;wBAC7B,MAAM,CAAC,GAAG,UAAU,CAAC,EAAE,CAAE,CAAC,CAAE,CAAC,CAAA;IAE7B,oBAAA,IAAI,YAAY,EAAE;IAChB,wBAAA,MAAM,CAAC,GAAG,YAAY,GAAG,CAAC,CAAA;IAE1B,wBAAA,YAAY,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,CAAC,CAAA;IACzB,wBAAA,YAAY,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,CAAC,CAAA;IACzB,wBAAA,YAAY,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,CAAC,CAAA;4BAEzB,YAAY,IAAI,CAAC,CAAA;IAEjB,wBAAA,IAAI,QAAQ;gCAAE,SAAQ;IACvB,qBAAA;IAED,oBAAA,MAAM,MAAM,GAAG,EAAE,CAAE,CAAC,CAAE,CAAA;IACtB,oBAAA,MAAM,QAAQ,GAAG,EAAE,CAAE,CAAC,CAAE,CAAA;IACxB,oBAAA,MAAM,OAAO,GAAG,EAAE,CAAE,CAAC,CAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAE,CAAC,CAAE,CAAA;wBACvC,MAAM,KAAK,GAAG,EAAE,CAAE,CAAC,CAAE,GAAG,QAAQ,CAAC,EAAE,CAAE,CAAC,CAAE,CAAC,GAAG,CAAC,CAAA;IAC7C,oBAAA,MAAM,OAAO,GAAG,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,GAAG,EAAE,CAAA;wBACtC,MAAM,aAAa,GAAG,EAAE,CAAE,CAAC,CAAE,GAAG,UAAU,CAAC,EAAE,CAAE,CAAC,CAAE,CAAC,GAAG,GAAG,CAAA;wBAEzD,SAAS,CAAC,UAAU,EAAE,CAAA;IACtB,oBAAA,SAAS,CAAC,UAAU,CAAE,GAAG,CAAE,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA;IAE5D,oBAAA,SAAS,CAAC,CAAC,CAAE,GAAG,CAAE,GAAG,CAAC,CAAA;IACtB,oBAAA,SAAS,CAAC,CAAC,CAAE,GAAG,CAAE,GAAG,CAAC,CAAA;IACtB,oBAAA,SAAS,CAAC,CAAC,CAAE,GAAG,CAAE,GAAG,CAAC,CAAA;IACtB,oBAAA,SAAS,CAAC,MAAM,CAAE,GAAG,CAAE,GAAG,MAAM,CAAA;IAChC,oBAAA,SAAS,CAAC,aAAa,CAAE,GAAG,CAAE,GAAG,aAAa,CAAA;IAE9C,oBAAA,EAAE,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,CAAA;wBAElD,GAAG,IAAI,CAAC,CAAA;IACT,iBAAA;yBAAM,IAAI,iBAAiB,KAAK,cAAc,EAAE;IAC/C,oBAAA,IAAI,cAAc,IAAI,QAAQ,GAAG,CAAC;4BAAE,SAAQ;IAC5C,oBAAA,IAAI,YAAY,IAAI,QAAQ,GAAG,CAAC;4BAAE,SAAQ;wBAE1C,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAACA,cAAY,CAAC,CAAA;;IAGnC,oBAAA,GAAG,CAAC,KAAK,GAAG,QAAQ,CAAC,EAAE,CAAE,CAAC,CAAE,CAAC,GAAG,CAAC,GAAG,iBAAiB,CAAA;IACrD,oBAAA,GAAG,CAAC,KAAK,GAAG,QAAQ,CAAC,EAAE,CAAE,CAAC,CAAE,CAAC,GAAG,CAAC,GAAG,iBAAiB,CAAA;wBACrD,MAAM,KAAK,GAAG,SAAS,CAAE,EAAE,CAAE,CAAC,CAAE,CAAE,CAAA;wBAElC,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,CAAA;IACrC,iBAAA;IACF,aAAA;aACF;YAED,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,UAAU,KAAK,6BAA0B;gBACtE,kBAAkB,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;IAC5C,SAAC,CAAC,CAAA;YAEF,EAAE,CAAC,QAAQ,EAAE,CAAA;YACb,CAAC,CAAC,aAAa,EAAE,CAAA;YACjB,mBAAmB,CAAC,CAAC,CAAC,CAAA;IACtB,QAAA,oBAAoB,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;IAC7B,QAAA,qBAAqB,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;YAC9B,CAAC,CAAC,aAAa,EAAE,CAAA;YACjB,sBAAsB,CAAC,CAAC,CAAC,CAAA;YACzB,2BAA2B,CAAC,CAAC,CAAC,CAAA;IAE9B,QAAA,IAAI5E,aAAK;gBAAE,GAAG,CAAC,OAAO,CAAC,oBAAoB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;SACzD;IACF,CAAA;IAED,cAAc,CAAC,GAAG,CAAC,MAAM,EAAE,UAAU,CAAC;;ICpMtC;;;;IAIG;IAKH;IACA;IACA;IACA;IAEA,MAAM,WAAY,SAAQ,SAAS,CAAA;IACjC,IAAA,IAAI,IAAI,GAAM,EAAA,OAAO,OAAO,CAAA,EAAE;IAC/B,CAAA;IAED,cAAc,CAAC,GAAG,CAAC,OAAO,EAAE,WAAW,CAAC;;IClBxC;;;;IAIG;IAKH;IAEA,MAAM,SAAU,SAAQ,SAAS,CAAA;IAC/B,IAAA,IAAI,IAAI,GAAM,EAAA,OAAO,KAAK,CAAA,EAAE;IAC7B,CAAA;IAED,cAAc,CAAC,GAAG,CAAC,KAAK,EAAE,SAAS,CAAC;;ICfpC;;;;IAIG;IAMH,MAAM,MAAM,GAAG,WAAW,CAAA;IAE1B,MAAM,SAAU,SAAQ,eAAe,CAAA;IACrC,IAAA,IAAI,IAAI,GAAM,EAAA,OAAO,KAAK,CAAA,EAAE;QAE5B,MAAM,GAAA;;;IAIJ,QAAA,IAAIA,aAAK;gBAAE,GAAG,CAAC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;IAEpD,QAAA,MAAM,CAAC,GAAG,IAAI,CAAC,SAAS,CAAA;IACxB,QAAA,MAAM,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAA;IAEhC,QAAA,MAAM,cAAc,GAAG,IAAI,CAAC,cAAc,CAAA;IAC1C,QAAA,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAA;YAEtC,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;YAE9C,CAAC,CAAC,EAAE,GAAG,WAAW,CAAE,CAAC,CAAE,CAAC,IAAI,EAAE,CAAA;YAC9B,CAAC,CAAC,KAAK,GAAG,WAAW,CAAE,CAAC,CAAE,CAAC,IAAI,EAAE,CAAA;IAEjC,QAAA,MAAM,MAAM,GAAG,CAAC,CAAC,MAAM,CAAA;YACvB,IAAI,QAAQ,GAAG,KAAK,CAAA;YACpB,IAAI,YAA0B,EAAE,YAAoB,CAAA;IAEpD,QAAA,MAAM,OAAO,GAAG,CAAC,CAAC,OAAO,CAAA;IACzB,QAAA,MAAM,SAAS,GAAG,CAAC,CAAC,SAAS,CAAA;IAC7B,QAAA,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC,CAAA;YAC5D,SAAS,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC,EAAE,MAAM,CAAC,CAAA;IAE7C,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,YAAY,EAAE,CAAA;IAC5B,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,YAAY,EAAE,CAAA;YAE5B,IAAI,GAAG,GAAG,CAAC,CAAA;IACX,QAAA,IAAI,MAAM,GAAG,CAAC,CAAA;YACd,IAAI,QAAQ,GAAG,CAAC,CAAA;YAChB,IAAI,iBAAiB,GAAG,CAAC,CAAA;YAEzB,MAAM,OAAO,GAA8B,EAAE,CAAA;YAC7C,IAAI,WAAW,GAAmB,KAAK,CAAA;YACvC,IAAI,WAAW,GAA4B,EAAE,CAAA;IAC7C,QAAA,IAAI,KAA8B,CAAA;IAClC,QAAA,CAAC,CAAC,SAAS,CAAC,GAAG,GAAG,OAAO,CAAA;YAEzB,IAAI,SAAS,EAAE,SAAS,EAAE,SAAiB,EAAE,OAAe,EAAE,SAAiB,EAAE,OAAe,EAAE,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,QAAgB,EAAE,OAAe,EAAE,SAAiB,EAAE,KAAa,CAAA;YACtM,IAAI,OAAO,GAAG,KAAK,EAAE,WAAW,GAAG,KAAK,EAAE,WAAW,GAAG,KAAK,CAAA;IAC7D,QAAA,IAAI,MAAM,GAAa,EAAE,EAAE,GAAG,GAAa,EAAE,CAAA;IAC7C,QAAA,MAAM,qBAAqB,GAAG,IAAI,GAAG,EAAkB,CAAA;IAEvD,QAAA,SAAS,kBAAkB,CAAE,EAAU,EAAE,EAAU,EAAE,KAAe,EAAA;gBAClE,KAAK,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;IAC5B,gBAAA,MAAM,IAAI,GAAG,KAAK,CAAE,CAAC,CAAE,CAAA;oBAEvB,IAAI,OAAO,IAAI,IAAI,EAAE;IACnB,oBAAA,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;;;wBAIrC,IAAI,GAAG,CAAC,MAAM,EAAE;4BACd,MAAM,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC,CAAA;4BAC5B,GAAG,GAAG,EAAE,CAAA;IACT,qBAAA;wBACD,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;4BACrC,MAAM,CAAC,GAAG,EAAE,CAAC;4BACb,GAAG,GAAG,MAAM,CAAC;4BACb,SAAS;IACV,qBAAA;IACF,iBAAA;oBAED,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,MAAM,EAAE;wBAChC,MAAM,GAAG,CAAC,CAAC,CAAA;IACX,oBAAA,EAAE,QAAQ,CAAA;IACV,oBAAA,iBAAiB,GAAG,SAAS,CAAC,KAAK,CAAA;IACnC,oBAAA,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;wBACzB,WAAW,GAAG,EAAE,CAAA;wBAChB,WAAW,GAAG,KAAK,CAAA;wBACnB,OAAO,GAAG,KAAK,CAAA;IAChB,iBAAA;yBAAM,IAAI,MAAM,KAAK,CAAC,EAAE;wBACvB,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAA;IAErC,oBAAA,IAAI,OAAO,EAAE;4BACX,qBAAqB,CAAC,KAAK,EAAE,CAAA;IAC9B,qBAAA;IAAM,yBAAA;IAEL,wBAAA,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;IACvC,wBAAA,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;4BAEvC,SAAS,GAAG,CAAC,CAAA;IACb,wBAAA,OAAO,GAAG,SAAS,GAAG,SAAS,CAAA;4BAC/B,SAAS,GAAG,OAAO,CAAA;IACnB,wBAAA,OAAO,GAAG,SAAS,GAAG,SAAS,CAAA;IAE/B,wBAAA,IAAI,YAAY,EAAE;gCAChB,YAAY,GAAG,CAAC,CAAA;gCAChB,YAAY,GAAG,IAAI,YAAY,CAAC,SAAS,GAAG,CAAC,CAAC,CAAA;IAC9C,4BAAA,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAA;gCAEzB,IAAI,QAAQ,GAAG,CAAC;oCAAE,QAAQ,GAAG,IAAI,CAAA;IAClC,yBAAA;IACF,qBAAA;IACF,iBAAA;yBAAM,IAAI,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;wBAC5C,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAEhC,oBAAA,IAAI,YAAY,EAAE;4BAChB,YAAY,GAAG,CAAC,CAAA;4BAChB,YAAY,GAAG,IAAI,YAAY,CAAC,SAAS,GAAG,CAAC,CAAC,CAAA;IAC9C,wBAAA,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAA;4BAEzB,IAAI,QAAQ,GAAG,CAAC;gCAAE,QAAQ,GAAG,IAAI,CAAA;IAClC,qBAAA;IACF,iBAAA;IAAM,qBAAA,IAAI,OAAO,IAAI,MAAM,CAAC,MAAM,IAAI,CAAC,EAAE;IACxC,oBAAA,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,MAAM,EAAE;IACxB,wBAAA,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,OAAO;gCAAE,WAAW,GAAG,IAAI,CAAA;IACxC,6BAAA,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,KAAK;gCAAE,WAAW,GAAG,KAAK,CAAA;IAClD,qBAAA;IAAM,yBAAA,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,MAAM,EAAE;IAC/B,wBAAA,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,OAAO;gCAAE,WAAW,GAAG,IAAI,CAAA;IACxC,6BAAA,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,KAAK;gCAAE,WAAW,GAAG,KAAK,CAAA;IAClD,qBAAA;IACF,iBAAA;IAAM,qBAAA,IACL,WAAW;4BACP,CAAC,OAAO,IAAI,MAAM,IAAI,SAAS,IAAI,MAAM,GAAG,OAAO,CAAC,EACxD;IACA,oBAAA,IAAI,cAAc,IAAI,QAAQ,GAAG,CAAC;4BAAE,SAAQ;wBAE5C,IAAI,MAAM,GAAG,CAAC,CAAA;IACd,oBAAA,IAAI,OAAO,EAAE;4BACX,CAAC,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;4BACzB,CAAC,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;4BACzB,CAAC,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;IAEzB,wBAAA,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,CAAA;4BACnB,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;IAC/B,wBAAA,qBAAqB,CAAC,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC,CAAA;IACzC,wBAAA,QAAQ,GAAG,OAAO,GAAG,SAAS,CAAA;IAE9B,wBAAA,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;gCACrB,IAAI,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;IAChE,4BAAA,IAAI,MAAM,EAAE;oCACV,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAA;IACvC,6BAAA;IACF,yBAAA;IACF,qBAAA;IAAM,yBAAA;IACL,wBAAA,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAA;IAClC,wBAAA,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAA;IACnC,wBAAA,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAA;IAEnC,wBAAA,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAA;4BACnC,QAAQ,GAAG,OAAO,IAAI,GAAG,GAAG,iBAAiB,GAAG,CAAC,CAAC,CAAA;IACnD,qBAAA;IAED,oBAAA,IAAI,YAAY,EAAE;IAChB,wBAAA,MAAM,CAAC,GAAG,YAAY,GAAG,CAAC,CAAA;IAE1B,wBAAA,YAAY,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,CAAC,CAAA;IACzB,wBAAA,YAAY,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,CAAC,CAAA;IACzB,wBAAA,YAAY,CAAE,CAAC,GAAG,CAAC,CAAE,GAAG,CAAC,CAAA;4BAEzB,YAAY,IAAI,CAAC,CAAA;IAEjB,wBAAA,IAAI,QAAQ;gCAAE,SAAQ;IACvB,qBAAA;wBAED,SAAS,CAAC,UAAU,EAAE,CAAA;IACtB,oBAAA,SAAS,CAAC,UAAU,CAAE,GAAG,CAAE,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA;IAE5D,oBAAA,SAAS,CAAC,CAAC,CAAE,GAAG,CAAE,GAAG,CAAC,CAAA;IACtB,oBAAA,SAAS,CAAC,CAAC,CAAE,GAAG,CAAE,GAAG,CAAC,CAAA;IACtB,oBAAA,SAAS,CAAC,CAAC,CAAE,GAAG,CAAE,GAAG,CAAC,CAAA;IACtB,oBAAA,SAAS,CAAC,MAAM,CAAE,GAAG,CAAE,GAAG,OAAO,GAAG,SAAS,GAAG,GAAG,CAAA;IACnD,oBAAA,SAAS,CAAC,YAAY,CAAE,GAAG,CAAE,GAAG,MAAM,CAAA;IAEtC,oBAAA,EAAE,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,CAAA;wBAE5C,GAAG,IAAI,CAAC,CAAA;IACT,iBAAA;IAAM,qBAAA,IACL,WAAW;4BACP,CAAC,OAAO,IAAI,MAAM,IAAI,SAAS,IAAI,MAAM,GAAG,OAAO,CAAC,EACxD;IACA,oBAAA,IAAI,cAAc,IAAI,QAAQ,GAAG,CAAC;4BAAE,SAAQ;IAC5C,oBAAA,IAAI,YAAY,IAAI,QAAQ,GAAG,CAAC;4BAAE,SAAQ;IAE1C,oBAAA,IAAI,OAAO,EAAE;IACX,wBAAA,GAAG,CAAC,KAAK,GAAG,qBAAqB,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;IAC1D,wBAAA,GAAG,CAAC,KAAK,GAAG,qBAAqB,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;4BAC1D,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;IAC5B,qBAAA;IAAM,yBAAA;IACL,wBAAA,GAAG,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,iBAAiB,CAAA;IAC/D,wBAAA,GAAG,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,iBAAiB,CAAA;IAC/D,wBAAA,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;IACpC,qBAAA;wBAED,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,CAAA;IACrC,iBAAA;yBAAM,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,QAAQ,EAAE;IACzC,oBAAA,MAAM,WAAW,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;IAC/C,oBAAA,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,OAAO,GAAG,EAAE,EAAE,EAAE,GAAG,WAAW,EAAE,EAAE,EAAE,EAAE,OAAO,IAAI,CAAC,EAAE;IACnE,wBAAA,MAAM,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAA;IAChD,wBAAA,MAAM,OAAO,GAAG,MAAM,GAAG,CAAC,GAAG,iBAAiB,CAAA;IAC9C,wBAAA,MAAM,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;IACpD,wBAAA,SAAS,CAAC,YAAY,CAAE,OAAO,CAAE,GAAG,MAAM,CAAA;IAC3C,qBAAA;;IAEF,iBAAA;IAAM,qBAAA,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,KAAK,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE;IACjE,oBAAA,WAAW,GAAG,KAAK,CAAE,CAAC,CAAE,CAAA;IACxB,oBAAA,WAAW,CAAE,WAAW,CAAE,GAAG,EAAE,CAAA;IAChC,iBAAA;IAAM,qBAAA,IAAI,WAAW,KAAK,KAAK,IAAI,IAAI,EAAE;wBACxC,WAAW,CAAU,WAAW,CAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;IAC9C,iBAAA;IAED,gBAAA,EAAE,MAAM,CAAA;IACT,aAAA;aACF;YAED,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,UAAU,KAAK,6BAA0B;gBACtE,kBAAkB,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;IAC5C,SAAC,CAAC,CAAA;YAEF,EAAE,CAAC,QAAQ,EAAE,CAAA;YACb,CAAC,CAAC,aAAa,EAAE,CAAA;YACjB,CAAC,CAAC,aAAa,EAAE,CAAA;YACjB,sBAAsB,CAAC,CAAC,CAAC,CAAA;IAEzB,QAAA,IAAIA,aAAK;gBAAE,GAAG,CAAC,OAAO,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;SACxD;QAED,YAAY,GAAA;IACV,QAAA,sBAAsB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;SACvC;IACF,CAAA;IAED,cAAc,CAAC,GAAG,CAAC,KAAK,EAAE,SAAS,CAAC,CAAA;IACpC,cAAc,CAAC,GAAG,CAAC,IAAI,EAAE,SAAS,CAAC,CAAA;IACnC,cAAc,CAAC,GAAG,CAAC,KAAK,EAAE,SAAS,CAAC;;IClPpC;;;;IAIG;IASH,MAAM,qBAAqB,GAAG,OAAO,CAAA;IAerC,SAAS,cAAc,CAAE,IAAY,EAAE,KAAa,EAAE,MAAc,EAAA;IAClE,IAAA,OAAO,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,CAAA;IACpD,CAAC;IAED,MAAM,YAAa,SAAQ,eAAe,CAAA;IACxC,IAAA,IAAI,IAAI,GAAM,EAAA,OAAO,QAAQ,CAAA,EAAE;QAE/B,MAAM,GAAA;;;IAIJ,QAAA,IAAIA,aAAK;gBAAE,GAAG,CAAC,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;IAEvD,QAAA,MAAM,CAAC,GAAG,IAAI,CAAC,SAAS,CAAA;IACxB,QAAA,MAAM,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAA;;IAIhC,QAAA,MAAM,OAAO,GAAG,CAAC,CAAC,OAAO,CAAA;IACzB,QAAA,MAAM,SAAS,GAAG,CAAC,CAAC,SAAS,CAAA;YAC7B,SAAS,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC,EAAE,SAAS,CAAC,CAAA;YACjD,SAAS,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,EAAE,SAAS,CAAC,CAAA;YAE1C,MAAM,KAAK,GAAa,EAAE,CAAA;YAC1B,MAAM,YAAY,GAA0B,EAAE,CAAA;IAC9C,QAAA,MAAM,QAAQ,GAAG;gBACf,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ;gBACvD,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM;gBAClD,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO;gBACvD,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;gBACpD,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IACpD,YAAA,UAAU,EAAE,OAAO;aACpB,CAAA;IACD,QAAA,QAAQ,CAAC,OAAO,CAAC,IAAI,IAAM,EAAA,YAAY,CAAE,IAAI,CAAE,GAAG,CAAC,CAAA,EAAE,CAAC,CAAA;IAEtD,QAAA,IAAI,SAAmB,CAAA;IACvB,QAAA,IAAI,OAAqB,CAAA;IACzB,QAAA,IAAI,KAAmB,CAAA;IACvB,QAAA,IAAI,WAAwB,CAAA;IAC5B,QAAA,IAAI,WAAwB,CAAA;IAC5B,QAAA,IAAI,UAAU,GAAe,IAAI,UAAU,CAAC,CAAC,CAAC,CAAA;IAC9C,QAAA,IAAI,aAAuB,CAAA;IAC3B,QAAA,IAAI,eAA4B,CAAA;IAEhC,QAAA,IAAI,IAAsB,CAAA;;IAE1B,QAAA,IAAI,MAAc,CAAA;IAClB,QAAA,IAAI,OAAe,CAAA;IAEnB,QAAA,SAAS,kBAAkB,CAAE,EAAU,EAAE,EAAU,EAAE,KAAe,EAAA;gBAClE,KAAK,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;IAC5B,gBAAA,MAAM,IAAI,GAAG,KAAK,CAAE,CAAC,CAAE,CAAA;IACvB,gBAAA,MAAM,EAAE,GAAG,IAAI,CAAC,IAAI,EAAE,CAAA;oBAEtB,IAAI,CAAC,EAAE,EAAE;wBACP,SAAQ;IACT,iBAAA;IAAM,qBAAA,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,CAEtC;IAAM,qBAAA,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;wBACnC,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAA;wBAClC,MAAM,GAAG,CAAC,CAAA;wBAEV,IAAI,IAAI,KAAK,OAAO,EAAE;IACpB,wBAAA,IAAI,iBAAa;IAClB,qBAAA;6BAAM,IAAI,IAAI,KAAK,UAAU,EAAE;IAC9B,wBAAA,IAAI,oBAAgB;IACrB,qBAAA;6BAAM,IAAI,IAAI,KAAK,WAAW,EAAE;IAC/B,wBAAA,IAAI,oBAAgB;IACrB,qBAAA;6BAAM,IAAI,IAAI,KAAK,QAAQ,EAAE;IAC5B,wBAAA,IAAI,kBAAc;IACnB,qBAAA;6BAAM,IAAI,IAAI,KAAK,MAAM,EAAE;IAC1B,wBAAA,IAAI,gBAAY;IACjB,qBAAA;6BAAM,IAAI,IAAI,KAAK,eAAe,EAAE;IACnC,wBAAA,IAAI,wBAAoB;IACzB,qBAAA;6BAAM,IAAI,IAAI,KAAK,iBAAiB,EAAE;IACrC,wBAAA,IAAI,0BAAsB;IAC3B,qBAAA;6BAAM,IAAI,IAAI,KAAK,oBAAoB,EAAE;4BACxC,OAAO,GAAG,CAAC,CAAA;IACX,wBAAA,IAAI,4BAAwB;IAC7B,qBAAA;6BAAM,IAAI,IAAI,KAAK,wBAAwB,EAAE;IAC5C,wBAAA,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC,CAAA;IAC/B,wBAAA,IAAI,gCAA4B;IACjC,qBAAA;6BAAM,IAAI,IAAI,KAAK,OAAO,EAAE;IAC3B,wBAAA,IAAI,iBAAa;IAClB,qBAAA;IAAM,yBAAA;4BACL,IAAI,GAAG,SAAS,CAAA;IACjB,qBAAA;IACF,iBAAA;yBAAM,IAAI,IAAI,oBAAiB;IAC9B,oBAAA,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;IACf,iBAAA;yBAAM,IAAI,IAAI,uBAAoB;IACjC,oBAAA,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,EAAE,EAAE,EAAE,CAAC,CAAA;IACnC,oBAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,MAAM,EAAE;4BACzC,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,QAAQ,CACvC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAC7B,CAAA;IACF,qBAAA;wBACD,SAAS,GAAG,IAAI,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,CAAA;wBACzC,OAAO,GAAG,IAAI,YAAY,CAAC,YAAY,CAAC,KAAK,CAAC,CAAA;wBAC9C,KAAK,GAAG,IAAI,YAAY,CAAC,YAAY,CAAC,KAAK,CAAC,CAAA;IAC5C,oBAAA,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,CAAA;wBACpC,MAAM,SAAS,GAAG,YAAY,CAAC,KAAK,GAAG,YAAY,CAAC,KAAK,CAAA;IACzD,oBAAA,WAAW,GAAG,IAAI,WAAW,CAAC,SAAS,CAAC,CAAA;IACxC,oBAAA,WAAW,GAAG,IAAI,WAAW,CAAC,SAAS,CAAC,CAAA;IACxC,oBAAA,UAAU,GAAG,IAAI,UAAU,CAAC,SAAS,CAAC,CAAA;wBACtC,aAAa,GAAG,IAAI,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,CAAA;wBAC5C,eAAe,GAAG,IAAI,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,CAAA;IACrD,iBAAA;yBAAM,IAAI,IAAI,uBAAoB;IACjC,oBAAA,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,EAAE,EAAE,YAAY,CAAC,KAAK,CAAC,CAAA;IACnD,oBAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,MAAM,EAAE;IACzC,wBAAA,SAAS,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAA;IACjD,qBAAA;IACF,iBAAA;yBAAM,IAAI,IAAI,qBAAkB;IAC/B,oBAAA,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,YAAY,CAAC,KAAK,CAAC,CAAA;IAClD,oBAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,MAAM,EAAE;IACzC,wBAAA,OAAO,CAAC,MAAM,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,qBAAqB,CAAA;IAC9E,qBAAA;IACF,iBAAA;yBAAM,IAAI,IAAI,mBAAgB,CAI9B;yBAAM,IAAI,IAAI,2BAAwB;IACrC,oBAAA,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,EAAE,EAAE,YAAY,CAAC,IAAI,CAAC,CAAA;IAClD,oBAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,MAAM,EAAE;IACzC,wBAAA,aAAa,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAA;IACrD,qBAAA;IACF,iBAAA;yBAAM,IAAI,IAAI,6BAA0B;IACvC,oBAAA,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,EAAE,EAAE,YAAY,CAAC,IAAI,CAAC,CAAA;IAClD,oBAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,MAAM,EAAE;IACzC,wBAAA,eAAe,CAAC,MAAM,CAAC,GAAG,cAAc,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAA;IACzD,qBAAA;IACF,iBAAA;yBAAM,IAAI,IAAI,+BAA4B;IACzC,oBAAA,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,EAAE,EAAE,YAAY,CAAC,KAAK,GAAG,CAAC,CAAC,CAAA;IACvD,oBAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,MAAM,EAAE;IACzC,wBAAA,MAAM,CAAC,GAAG,MAAM,GAAG,CAAC,CAAA;4BACpB,IAAI,CAAC,KAAK,CAAC,EAAE;IACX,4BAAA,WAAW,CAAC,OAAO,CAAC,GAAG,cAAc,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAA;IAC1D,yBAAA;4BAAC,IAAI,CAAC,KAAK,CAAC,EAAE;IACb,4BAAA,WAAW,CAAC,OAAO,CAAC,GAAG,cAAc,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAA;IACzD,4BAAA,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;IACvB,4BAAA,EAAE,OAAO,CAAA;IACV,yBAAA;IACF,qBAAA;IACF,iBAAA;yBAAM,IAAI,IAAI,mCAAgC;IAC7C,oBAAA,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,EAAE,EAAE,YAAY,CAAC,KAAK,GAAG,CAAC,CAAC,CAAA;IACvD,oBAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,MAAM,EAAE;IACzC,wBAAA,MAAM,CAAC,GAAG,MAAM,GAAG,CAAC,CAAA;4BACpB,IAAI,CAAC,KAAK,CAAC,EAAE;IACX,4BAAA,WAAW,CAAC,OAAO,CAAC,GAAG,cAAc,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAA;IAC1D,yBAAA;4BAAC,IAAI,CAAC,KAAK,CAAC,EAAE;IACb,4BAAA,WAAW,CAAC,OAAO,CAAC,GAAG,cAAc,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAA;IACzD,4BAAA,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;IACvB,4BAAA,EAAE,OAAO,CAAA;IACV,yBAAA;IACF,qBAAA;IACF,iBAAA;yBAAM,IAAI,IAAI,oBAAiB;IAC9B,oBAAA,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,YAAY,CAAC,KAAK,CAAC,CAAA;IAClD,oBAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,MAAM,EAAE;IACzC,wBAAA,KAAK,CAAC,MAAM,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,CAAA;IACpD,qBAAA;IACF,iBAAA;IACF,aAAA;aACF;YAED,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,UAAU,KAAK,6BAA0B;gBACtE,kBAAkB,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;IAC5C,SAAC,CAAC,CAAA;YAEF,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;IAEzB,QAAA,MAAM,SAAS,GAAG,YAAY,CAAC,KAAK,CAAA;YACpC,IAAI,SAAS,GAAG,CAAC,CAAA;IACjB,QAAA,IAAI,UAAU,GAAG,aAAc,CAAC,CAAC,CAAC,CAAA;YAClC,IAAI,QAAQ,GAAG,CAAC,CAAA;YAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,EAAE,CAAC,EAAE;gBAClC,IAAI,CAAC,GAAG,CAAC,KAAK,eAAgB,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE;IAC7C,gBAAA,EAAE,SAAS,CAAA;IACX,gBAAA,UAAU,GAAG,aAAc,CAAC,SAAS,CAAC,CAAA;IACtC,gBAAA,QAAQ,GAAG,SAAS,GAAG,CAAC,CAAA;IACzB,aAAA;IACD,YAAA,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,SAAU,CAAC,CAAC,CAAC,CAAC,CAAA;gBACpD,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;IAC3B,YAAA,EAAE,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAA;IACnD,SAAA;IAED,QAAA,SAAS,CAAC,aAAa,CAAC,GAAG,CAAC,OAAQ,CAAC,CAAA;IACrC,QAAA,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,KAAM,CAAC,CAAA;YAE5B,CAAC,CAAC,SAAS,CAAC,MAAM,GAAG,UAAW,CAAC,MAAM,CAAA;YACvC,CAAC,CAAC,SAAS,CAAC,KAAK,GAAG,UAAW,CAAC,MAAM,CAAA;IACtC,QAAA,CAAC,CAAC,SAAS,CAAC,UAAU,GAAG,WAAY,CAAA;IACrC,QAAA,CAAC,CAAC,SAAS,CAAC,UAAU,GAAG,WAAY,CAAA;IACrC,QAAA,CAAC,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,CAAA;YAElC,EAAE,CAAC,QAAQ,EAAE,CAAA;YACb,CAAC,CAAC,aAAa,EAAE,CAAA;YACjB,CAAC,CAAC,aAAa,EAAE,CAAA;IACjB,QAAA,oBAAoB,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;IAC7B,QAAA,qBAAqB,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAA;IACpC,QAAA,mBAAmB,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;YAC5B,sBAAsB,CAAC,CAAC,CAAC,CAAA;IAEzB,QAAA,IAAIA,aAAK;gBAAE,GAAG,CAAC,OAAO,CAAC,sBAAsB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;SAC3D;IACF,CAAA;IAED,cAAc,CAAC,GAAG,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAA;IAC1C,cAAc,CAAC,GAAG,CAAC,OAAO,EAAE,YAAY,CAAC;;IC1OzC;;;;IAIG;IASH,MAAM,SAAS,GAAG,CAAC,CAAA;IACnB,MAAM,QAAQ,GAAG,CAAC,CAAA;IAClB,MAAM,QAAQ,GAAG,CAAC,CAAA;IAClB,MAAM,SAAS,GAAG,CAAC,CAAA;IACnB,MAAM,YAAY,GAAG,CAAC,CAAA;IACtB,MAAM,YAAY,GAAG,CAAC,CAAA;IAEtB,MAAM4E,cAAY,GAAG,KAAK,CAAA;IAC1B,MAAM,OAAO,GAAG,eAAe,CAAA;IAE/B,MAAM,SAAU,SAAQ,eAAe,CAAA;IACrC,IAAA,IAAI,IAAI,GAAM,EAAA,OAAO,KAAK,CAAA,EAAE;QAE5B,MAAM,GAAA;;IAGJ,QAAA,IAAI5E,aAAK;gBAAE,GAAG,CAAC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;IAEpD,QAAA,MAAM,CAAC,GAAG,IAAI,CAAC,SAAS,CAAA;IACxB,QAAA,MAAM,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAA;;IAIhC,QAAA,MAAM,OAAO,GAAG,CAAC,CAAC,OAAO,CAAA;IACzB,QAAA,MAAM,SAAS,GAAG,CAAC,CAAC,SAAS,CAAA;YAC7B,SAAS,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC,EAAE,SAAS,CAAC,CAAA;YAEjD,MAAM,KAAK,GAAa,EAAE,CAAA;IAE1B,QAAA,IAAI,IAAsB,CAAA;IAC1B,QAAA,IAAI,OAAe,CAAA;IACnB,QAAA,IAAI,SAAiB,CAAA;YACrB,IAAI,GAAG,GAAG,CAAC,CAAA;YACX,IAAI,QAAQ,GAAG,CAAC,CAAA;YAChB,IAAI,OAAO,GAAG,CAAC,CAAA;IACf,QAAA,IAAI,WAAwB,EAAE,WAAwB,EAAE,UAAsB,CAAA;IAE9E,QAAA,SAAS,kBAAkB,CAAE,EAAU,EAAE,EAAU,EAAE,KAAe,EAAA;gBAClE,KAAK,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;oBAC5B,MAAM,IAAI,GAAG,KAAK,CAAE,CAAC,CAAE,CAAC,IAAI,EAAE,CAAA;oBAE9B,IAAI,CAAC,IAAI,EAAE;wBACT,IAAI,GAAG,SAAS,CAAA;wBAChB,SAAQ;IACT,iBAAA;oBAED,IAAI,IAAI,KAAK,QAAQ,EAAE;wBACrB,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC4E,cAAY,CAAC,CAAA;wBAEnC,MAAM,MAAM,GAAG,QAAQ,CAAC,EAAE,CAAE,CAAC,CAAE,CAAC,CAAA;IAChC,oBAAA,MAAM,KAAK,GAAG,EAAE,CAAE,CAAC,CAAE,CAAA;wBACrB,MAAM,KAAK,GAAG,QAAQ,CAAC,EAAE,CAAE,CAAC,CAAE,CAAC,CAAA;IAC/B,oBAAA,MAAM,OAAO,GAAG,EAAE,CAAE,CAAC,CAAE,CAAA;IACvB,oBAAA,MAAM,QAAQ,GAAG,EAAE,CAAE,CAAC,CAAE,CAAA;wBACxB,MAAM,MAAM,GAAG,UAAU,CAAC,EAAE,CAAE,CAAC,CAAE,CAAC,CAAA;wBAElC,IAAI,KAAK,KAAK,SAAS,EAAE;IACvB,wBAAA,OAAO,GAAG,YAAY,CAAC,QAAQ,CAAC,CAAA;IAChC,wBAAA,EAAE,QAAQ,CAAA;IACX,qBAAA;wBAED,SAAS,CAAC,UAAU,EAAE,CAAA;IACtB,oBAAA,SAAS,CAAC,UAAU,CAAE,GAAG,CAAE,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;IAEnD,oBAAA,SAAS,CAAC,MAAM,CAAE,GAAG,CAAE,GAAG,MAAM,CAAA;IAChC,oBAAA,SAAS,CAAC,aAAa,CAAE,GAAG,CAAE,GAAG,MAAM,CAAA;IAEvC,oBAAA,EAAE,CAAC,OAAO,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC,CAAA;wBAEtD,GAAG,IAAI,CAAC,CAAA;wBACR,SAAS,GAAG,KAAK,CAAA;IAClB,iBAAA;yBAAM,IAAI,IAAI,KAAK,QAAQ,EAAE;wBAC5B,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAACA,cAAY,CAAC,CAAA;IAEnC,oBAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;IAC5C,wBAAA,WAAW,CAAE,OAAO,CAAE,GAAG,QAAQ,CAAC,EAAE,CAAE,CAAC,CAAE,CAAC,GAAG,CAAC,CAAA;IAC9C,wBAAA,WAAW,CAAE,OAAO,CAAE,GAAG,QAAQ,CAAC,EAAE,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC,GAAG,CAAC,CAAA;IAClD,wBAAA,UAAU,CAAE,OAAO,CAAE,GAAG,CAAC,CAAA;4BACzB,OAAO,IAAI,CAAC,CAAA;IACb,qBAAA;IACF,iBAAA;yBAAM,IAAI,IAAI,KAAK,SAAS,EAAE;IAC7B,oBAAA,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAA;IAC7C,iBAAA;yBAAM,IAAI,IAAI,KAAK,SAAS,EAAE,CAI9B;yBAAM,IAAI,IAAI,KAAK,YAAY,EAAE,CAIjC;yBAAM,IAAI,IAAI,KAAK,YAAY,EAAE,CAIjC;IAAM,qBAAA,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;wBAClC,IAAI,GAAG,QAAQ,CAAA;IAEf,oBAAA,MAAM,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAACA,cAAY,CAAC,CAAE,CAAC,CAAE,CAAC,CAAA;IACxD,oBAAA,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA;IAC3B,iBAAA;IAAM,qBAAA,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;wBAClC,IAAI,GAAG,QAAQ,CAAA;IAEf,oBAAA,MAAM,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAACA,cAAY,CAAC,CAAE,CAAC,CAAE,CAAC,CAAA;IACxD,oBAAA,WAAW,GAAG,IAAI,WAAW,CAAC,QAAQ,CAAC,CAAA;IACvC,oBAAA,WAAW,GAAG,IAAI,WAAW,CAAC,QAAQ,CAAC,CAAA;IACvC,oBAAA,UAAU,GAAG,IAAI,UAAU,CAAC,QAAQ,CAAC,CAAA;IACtC,iBAAA;IAAM,qBAAA,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;wBACnC,IAAI,GAAG,SAAS,CAAA;IACjB,iBAAA;IAAM,qBAAA,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;wBACnC,IAAI,GAAG,SAAS,CAAA;IACjB,iBAAA;IAAM,qBAAA,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;wBACjC,IAAI,GAAG,YAAY,CAAA;IACpB,iBAAA;IAAM,qBAAA,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;wBACnC,IAAI,GAAG,YAAY,CAAA;IACpB,iBAAA;IACF,aAAA;aACF;YAED,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,UAAU,KAAK,6BAA0B;gBACtE,kBAAkB,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;IAC5C,SAAC,CAAC,CAAA;YAEF,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;YAEzB,CAAC,CAAC,SAAS,CAAC,MAAM,GAAG,UAAW,CAAC,MAAM,CAAA;IACvC,QAAA,CAAC,CAAC,SAAS,CAAC,KAAK,GAAG,OAAO,CAAA;IAC3B,QAAA,CAAC,CAAC,SAAS,CAAC,UAAU,GAAG,WAAY,CAAA;IACrC,QAAA,CAAC,CAAC,SAAS,CAAC,UAAU,GAAG,WAAY,CAAA;IACrC,QAAA,CAAC,CAAC,SAAS,CAAC,SAAS,GAAG,UAAW,CAAA;YAEnC,EAAE,CAAC,QAAQ,EAAE,CAAA;YACb,CAAC,CAAC,aAAa,EAAE,CAAA;YACjB,CAAC,CAAC,aAAa,EAAE,CAAA;IACjB,QAAA,oBAAoB,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;IAC7B,QAAA,qBAAqB,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAA;YACpC,sBAAsB,CAAC,CAAC,CAAC,CAAA;IAEzB,QAAA,IAAI5E,aAAK;gBAAE,GAAG,CAAC,OAAO,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;SACxD;IACF,CAAA;IAED,cAAc,CAAC,GAAG,CAAC,KAAK,EAAE,SAAS,CAAC;;IC1JpC;;;;IAIG;IAkBH,MAAM,OAAO,GAAG,YAAY,CAAA;IAC5B,MAAM4E,cAAY,GAAG,KAAK,CAAA;IAE1B,MAAM,SAAU,SAAQ,eAAe,CAAA;IACrC,IAAA,IAAI,IAAI,GAAM,EAAA,OAAO,KAAK,CAAA,EAAE;QAE5B,MAAM,GAAA;;IAGJ,QAAA,IAAI5E,aAAK;gBAAE,GAAG,CAAC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;IAEpD,QAAA,MAAM,CAAC,GAAG,IAAI,CAAC,SAAS,CAAA;IACxB,QAAA,MAAM,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAA;;IAIhC,QAAA,MAAM,OAAO,GAAG,CAAC,CAAC,OAAO,CAAA;IACzB,QAAA,MAAM,SAAS,GAAG,CAAC,CAAC,SAAS,CAAA;IAE7B,QAAA,MAAM,SAAS,GAAG,CAAC,CAAC,SAAS,CAAA;YAC7B,SAAS,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC,EAAE,SAAS,CAAC,CAAA;YAEjD,MAAM,SAAS,GAAuB,EAAE,CAAA;YACxC,MAAM,gBAAgB,GAAiD,EAAE,CAAA;IAEzE,QAAA,IAAI,mBAGH,CAAA;IACD,QAAA,IAAI,IAAsB,CAAA;IAE1B,QAAA,SAAS,kBAAkB,CAAE,EAAU,EAAE,EAAU,EAAE,KAAe,EAAA;gBAClE,KAAK,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;IAC5B,gBAAA,MAAM,IAAI,GAAG,KAAK,CAAE,CAAC,CAAE,CAAA;IACvB,gBAAA,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,EAAE,CAAA;IAEpB,gBAAA,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;wBACzC,SAAQ;IACT,iBAAA;IAED,gBAAA,IAAI,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE;IAC7B,oBAAA,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC,CAAA;IAC9D,iBAAA;oBAED,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA;oBACtC,IAAI,UAAU,KAAK,IAAI,EAAE;IACvB,oBAAA,MAAM,IAAI,GAAG,UAAU,CAAC,CAAC,CAAC,CAAA;wBAC1B,IAAI,IAAI,KAAK,cAAc,EAAE;IAC3B,wBAAA,IAAI,wBAAoB;IACxB,wBAAA,mBAAmB,GAAG;IACpB,4BAAA,KAAK,EAAE,EAAE;IACT,4BAAA,KAAK,EAAE,EAAE;6BACV,CAAA;IACF,qBAAA;6BAAM,IAAI,IAAI,KAAK,OAAO,EAAE;IAC3B,wBAAA,IAAI,iBAAa;IAClB,qBAAA;6BAAM,IAAI,IAAI,KAAK,OAAO,EAAE;IAC3B,wBAAA,IAAI,iBAAa;IAClB,qBAAA;6BAAM,IAAI,IAAI,KAAK,QAAQ,EAAE;IAC5B,wBAAA,IAAI,kBAAc;IACnB,qBAAA;6BAAM,IAAI,IAAI,KAAK,WAAW,EAAE;IAC/B,wBAAA,IAAI,qBAAiB;IACtB,qBAAA;IAAM,yBAAA;4BACL,IAAI,GAAG,SAAS,CAAA;IACjB,qBAAA;wBACD,SAAQ;IACT,iBAAA;oBAED,MAAM,IAAI,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;IAC5B,gBAAA,IAAI,IAAI,KAAK,CAAC,CAAC,EAAE;IACf,oBAAA,EAAE,GAAG,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,IAAI,EAAE,CAAA;IAClC,iBAAA;oBACD,IAAI,IAAI,2BAAwB;wBAC9B,MAAM,OAAO,GAAG,EAAE,CAAC,KAAK,CAAC4E,cAAY,CAAC,CAAC,CAAC,CAAC,CAAA;IACzC,oBAAA,gBAAgB,CAAC,OAAO,CAAC,GAAG,mBAAmB,CAAA;IAChD,iBAAA;yBAAM,IAAI,IAAI,oBAAiB;wBAC9B,MAAM,EAAE,GAAG,EAAE,CAAC,KAAK,CAACA,cAAY,CAAC,CAAA;IACjC,oBAAA,mBAAmB,CAAC,KAAK,CAAC,IAAI,CAAC;IAC7B,wBAAA,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;4BACf,EAAE,CAAC,CAAC,CAAC;4BACL,EAAE,CAAC,CAAC,CAAC;IACL,wBAAA,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAClB,qBAAA,CAAC,CAAA;IACH,iBAAA;yBAAM,IAAI,IAAI,oBAAiB;wBAC9B,MAAM,EAAE,GAAG,EAAE,CAAC,KAAK,CAACA,cAAY,CAAC,CAAA;IACjC,oBAAA,mBAAmB,CAAC,KAAK,CAAC,IAAI,CAAC;IAC7B,wBAAA,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACf,wBAAA,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAChB,qBAAA,CAAC,CAAA;IACH,iBAAA;yBAAM,IAAI,IAAI,qBAAkB;IAC/B,oBAAA,CAAC,CAAC,KAAK,GAAG,EAAE,CAAA;IACb,iBAAA;yBAAM,IAAI,IAAI,wBAAqB;wBAClC,MAAM,EAAE,GAAG,EAAE,CAAC,KAAK,CAACA,cAAY,CAAC,CAAA;wBACjC,SAAS,CAAC,IAAI,CAAC;4BACb,EAAE,CAAC,CAAC,CAAC;IACL,wBAAA,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAChB,qBAAA,CAAC,CAAA;IACH,iBAAA;IACF,aAAA;aACF;YAED,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,UAAU,KAAK,6BAA0B;gBACtE,kBAAkB,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;IAC5C,SAAC,CAAC,CAAA;YAEF,IAAI,SAAS,GAAG,CAAC,CAAA;YACjB,IAAI,SAAS,GAAG,CAAC,CAAA;IACjB,QAAA,SAAS,CAAC,OAAO,CAAC,UAAU,GAAG,EAAA;IAC7B,YAAA,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,GAAG,GAAG,CAAA;IAC5B,YAAA,MAAM,OAAO,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAA;gBACtC,SAAS,IAAI,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC,MAAM,CAAA;gBAC5C,SAAS,IAAI,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC,MAAM,CAAA;IAC9C,SAAC,CAAC,CAAA;IAEF,QAAA,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAA;IAC3B,QAAA,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAA;YAE3B,IAAI,OAAO,GAAG,CAAC,CAAA;YACf,IAAI,MAAM,GAAG,CAAC,CAAA;YACd,IAAI,UAAU,GAAG,CAAC,CAAA;YAClB,IAAI,YAAY,GAAG,CAAC,CAAA;YACpB,IAAI,OAAO,GAAG,CAAC,CAAA;YACf,IAAI,UAAU,GAAG,CAAC,CAAA;IAClB,QAAA,IAAI,SAAiB,CAAA;IAErB,QAAA,SAAS,CAAC,OAAO,CAAC,UAAU,GAAG,EAAA;IAC7B,YAAA,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,GAAG,GAAG,CAAA;IAC5B,YAAA,MAAM,OAAO,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAA;IACtC,YAAA,MAAM,SAAS,GAAG,YAAY,CAAC,YAAY,CAAC,CAAA;gBAC5C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,EAAE,CAAC,EAAE;oBACjC,SAAS,GAAG,CAAC,CAAC,CAAA;IACd,gBAAA,MAAM,OAAO,GAAG,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,SAAS,GAAG,YAAY,CAAC,UAAU,CAAC,CAAA;IAChF,gBAAA,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,QAAQ,EAAA;wBACtC,MAAM,CAAC,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,CAAC,GAAG,QAAQ,CAAA;wBACnD,IAAI,KAAK,KAAK,SAAS,EAAE;IACvB,wBAAA,EAAE,MAAM,CAAA;IACT,qBAAA;IACD,oBAAA,SAAS,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;wBACrD,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,OAAO,GAAG,CAAC,CAAA;IACvC,oBAAA,SAAS,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,MAAM,CAAA;IACzC,oBAAA,EAAE,CAAC,OAAO,CAAC,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,GAAG,CAAC,EAAE,KAAK,CAAC,CAAA;IAC7D,oBAAA,EAAE,OAAO,CAAA;wBACT,SAAS,GAAG,KAAK,CAAA;IACnB,iBAAC,CAAC,CAAA;IACF,gBAAA,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,QAAQ,EAAA;IACtC,oBAAA,SAAS,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;IAC5D,oBAAA,SAAS,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;IAC5D,oBAAA,EAAE,OAAO,CAAA;IACX,iBAAC,CAAC,CAAA;IACF,gBAAA,EAAE,UAAU,CAAA;IACZ,gBAAA,UAAU,IAAI,OAAO,CAAC,KAAK,CAAC,MAAM,CAAA;IACnC,aAAA;IACD,YAAA,EAAE,YAAY,CAAA;IAChB,SAAC,CAAC,CAAA;IAEF,QAAA,SAAS,CAAC,KAAK,GAAG,SAAS,CAAA;YAE3B,EAAE,CAAC,QAAQ,EAAE,CAAA;YACb,CAAC,CAAC,aAAa,EAAE,CAAA;YACjB,CAAC,CAAC,aAAa,EAAE,CAAA;IACjB,QAAA,oBAAoB,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;IAC7B,QAAA,qBAAqB,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAA;YACpC,sBAAsB,CAAC,CAAC,CAAC,CAAA;IAEzB,QAAA,IAAI5E,aAAK;gBAAE,GAAG,CAAC,OAAO,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;SACxD;IACF,CAAA;IAED,cAAc,CAAC,GAAG,CAAC,KAAK,EAAE,SAAS,CAAC;;IC7LpC;;;;IAIG;IAMH,MAAM,gBAAiB,SAAQ,MAAM,CAAA;QACnC,WAAa,CAAA,QAAkB,EAAE,MAAkC,EAAA;IACjE,QAAA,KAAK,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAA;IAEvB,QAAA,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAA;SAC/C;IAED,IAAA,IAAI,IAAI,GAAM,EAAA,OAAO,YAAY,CAAA,EAAE;IACnC,IAAA,IAAI,SAAS,GAAM,EAAA,OAAO,QAAQ,CAAA,EAAE;IACrC;;ICnBD;;;;IAIG;IAMH,MAAM,oBAAoB,GAAG,iBAAiB,CAAA;IAY9C,MAAM,SAAU,SAAQ,gBAAgB,CAAA;IACtC,IAAA,IAAI,IAAI,GAAM,EAAA,OAAO,KAAK,CAAA,EAAE;IAC5B,IAAA,IAAI,QAAQ,GAAM,EAAA,OAAO,IAAI,CAAA,EAAE;QAE/B,MAAM,GAAA;;;;;;;;;;;;;;;;;;;;;IAuBJ,QAAA,IAAIA,aAAK;gBAAE,GAAG,CAAC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;YAEpD,MAAM,GAAG,GAAG,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;IAC5C,QAAA,MAAM,EAAE,GAAG,IAAI,QAAQ,CAAC,GAAG,CAAC,CAAA;IAE5B,QAAA,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAA;IACrB,QAAA,MAAM,WAAW,GAAG,CAAC,CAAC,WAAW,CAAA;IACjC,QAAA,MAAM,KAAK,GAAG,CAAC,CAAC,KAAK,CAAA;YACrB,MAAM,MAAM,GAAuB,EAAE,CAAA;YAErC,IAAI,OAAO,GAAG,CAAC,CAAA;;YAIf,MAAM,OAAO,GAAG,IAAI,UAAU,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAA;IAC1C,QAAA,MAAM,EAAE,GAAG,OAAO,CAAE,CAAC,CAAE,KAAK,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;;IAE1C,QAAA,IAAI,OAAO,CAAE,CAAC,CAAE,KAAK,EAAE,EAAE;IACvB,YAAA,MAAM,CAAC,GAAG,GAAG,CAAC,UAAU,CAAA;IACxB,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;IAC7B,gBAAA,EAAE,CAAC,UAAU,CAAC,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;IACzC,aAAA;IACF,SAAA;IACD,QAAA,IAAI,OAAO,CAAE,CAAC,CAAE,KAAK,EAAE,EAAE;IACvB,YAAA,GAAG,CAAC,KAAK,CAAC,oCAAoC,CAAC,CAAA;IAChD,SAAA;;IAED,QAAA,MAAM,YAAY,GAAG,MAAM,CAAC,YAAY,CACtC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAC9B,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAC/B,CAAA;YACD,IAAI,YAAY,KAAK,MAAM,EAAE;IAC3B,YAAA,GAAG,CAAC,KAAK,CAAC,+BAA+B,CAAC,CAAA;IAC3C,SAAA;YACD,IAAI,QAAQ,GAAG,KAAK,CAAA;YACpB,IAAI,UAAU,GAAG,KAAK,CAAA;YACtB,IAAI,QAAQ,GAAG,KAAK,CAAA;;IAEpB,QAAA,IAAI,OAAO,CAAE,EAAE,CAAE,KAAK,CAAC,EAAE;gBACvB,QAAQ,GAAG,IAAI,CAAA;IACf,YAAA,IAAI,OAAO,CAAE,EAAE,CAAE,KAAK,CAAC;oBAAE,UAAU,GAAG,IAAI,CAAA;IAC1C,YAAA,IAAI,OAAO,CAAE,EAAE,CAAE,KAAK,CAAC;oBAAE,QAAQ,GAAG,IAAI,CAAA;IACzC,SAAA;IACD,QAAA,MAAM,CAAC,IAAI,GAAG,OAAO,CAAE,CAAC,CAAE,CAAA;IAC1B,QAAA,MAAM,CAAC,MAAM,GAAG,OAAO,CAAE,CAAC,CAAE,CAAA;IAC5B,QAAA,MAAM,CAAC,KAAK,GAAG,OAAO,CAAE,CAAC,CAAE,CAAA;IAC3B,QAAA,MAAM,CAAC,KAAK,GAAG,OAAO,CAAE,EAAE,CAAE,CAAA;IAC5B,QAAA,IAAI,QAAQ,EAAE;gBACZ,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,CAAA;IACrC,SAAA;IAAM,aAAA;gBACL,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,CAAA;IACrC,SAAA;IACD,QAAA,IAAI,OAAO,CAAE,EAAE,CAAE,KAAK,EAAE,EAAE;IACxB,YAAA,GAAG,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAA;IAC9C,SAAA;YACD,OAAO,GAAG,OAAO,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAA;;YAI9B,MAAM,WAAW,GAAG,EAAE,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAE,CAAC,CAAA;IAC5C,QAAA,MAAM,QAAQ,GAAG,OAAO,GAAG,CAAC,CAAA;YAC5B,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE;IAChC,YAAA,GAAG,CAAC,KAAK,CAAC,mCAAmC,CAAC,CAAA;IAC/C,SAAA;IACD,QAAA,MAAM,CAAC,KAAK,GAAG,aAAa,CAC1B,IAAI,UAAU,CAAC,GAAG,EAAE,QAAQ,EAAE,WAAW,CAAC,CAC3C,CAAA;IACD,QAAA,IAAI,EAAE,CAAC,QAAQ,CAAC,QAAQ,GAAG,WAAW,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,KAAK,WAAW,EAAE;IACnE,YAAA,GAAG,CAAC,KAAK,CAAC,iCAAiC,CAAC,CAAA;IAC7C,SAAA;IACD,QAAA,OAAO,GAAG,OAAO,GAAG,WAAW,GAAG,CAAC,CAAA;;YAInC,IAAI,EAAE,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAE,CAAC,KAAK,CAAC,EAAE;IAClC,YAAA,GAAG,CAAC,KAAK,CAAC,mCAAmC,CAAC,CAAA;IAC/C,SAAA;IACD,QAAA,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC,QAAQ,CAAC,OAAO,GAAG,CAAC,EAAE,EAAE,CAAC,CAAA;IAC3C,QAAA,IAAI,EAAE,CAAC,QAAQ,CAAC,OAAO,GAAG,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,EAAE;IACtC,YAAA,GAAG,CAAC,KAAK,CAAC,iCAAiC,CAAC,CAAA;IAC7C,SAAA;IACD,QAAA,OAAO,GAAG,OAAO,GAAG,CAAC,GAAG,CAAC,CAAA;;IAIzB,QAAA,IAAI,MAAM,CAAC,KAAK,GAAG,CAAC,EAAE;;IAEpB,YAAA,GAAG,CAAC,KAAK,CAAC,mDAAmD,CAAC,CAAA;gBAC9D,OAAM;IACP,SAAA;;IAID,QAAA,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAA;IAC1B,QAAA,MAAM,MAAM,GAAG,KAAK,GAAG,CAAC,CAAA;IAExB,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;IAC3C,YAAA,IAAI,UAAU,EAAE;IACd,gBAAA,OAAO,IAAI,CAAC,CAAA;;IAEZ,gBAAA,MAAM,GAAG,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,CAAA;IAC/B,gBAAA,GAAG,CAAE,CAAC,CAAE,GAAG,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,CAAA;IACrC,gBAAA,GAAG,CAAE,CAAC,CAAE,GAAG,EAAE,CAAC,UAAU,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAA;IAC7C,gBAAA,GAAG,CAAE,CAAC,CAAE,GAAG,EAAE,CAAC,UAAU,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAA;IAC7C,gBAAA,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;oBACf,OAAO,IAAI,EAAE,CAAA;IACb,gBAAA,OAAO,IAAI,CAAC,CAAA;IACb,aAAA;;gBAGD,MAAM,KAAK,GAAG,IAAI,YAAY,CAAC,KAAK,GAAG,CAAC,CAAC,CAAA;gBACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;oBAC1B,IAAI,EAAE,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAE,CAAC,KAAK,MAAM,EAAE;wBACvC,GAAG,CAAC,KAAK,CAAC,mCAAmC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;IACrD,iBAAA;IACD,gBAAA,OAAO,IAAI,CAAC,CAAA;oBACZ,MAAM,CAAC,GAAG,IAAI,YAAY,CAAC,GAAG,EAAE,OAAO,EAAE,KAAK,CAAC,CAAA;oBAC/C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,EAAE,CAAC,EAAE;IAC9B,oBAAA,KAAK,CAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE,GAAG,CAAC,CAAE,CAAC,CAAE,CAAA;IAC5B,iBAAA;oBACD,OAAO,IAAI,MAAM,CAAA;oBACjB,IAAI,EAAE,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAE,CAAC,KAAK,MAAM,EAAE;wBACvC,GAAG,CAAC,KAAK,CAAC,iCAAiC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;IACnD,iBAAA;IACD,gBAAA,OAAO,IAAI,CAAC,CAAA;IACb,aAAA;IACD,YAAA,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;IAEvB,YAAA,IAAI,QAAQ,EAAE;oBACZ,MAAM,KAAK,GAAG,EAAE,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAE,CAAC,CAAA;oBACtC,OAAO,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,CAAA;IACzB,aAAA;IACF,SAAA;YAED,IAAI,MAAM,CAAC,KAAK,EAAE;gBAChB,CAAC,CAAC,SAAS,GAAG,MAAM,CAAC,KAAK,GAAG,oBAAoB,CAAA;IAClD,SAAA;IACD,QAAA,IAAI,MAAM,CAAC,MAAM,IAAI,CAAC,EAAE;IACtB,YAAA,CAAC,CAAC,UAAU,GAAG,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,SAAS,CAAA;IACjD,SAAA;;;;IAMD,QAAA,IAAIA,aAAK;gBAAE,GAAG,CAAC,OAAO,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;SACxD;IACF,CAAA;IAED,cAAc,CAAC,GAAG,CAAC,KAAK,EAAE,SAAS,CAAC;;ICtMpC;;;;;;;IAOG;IAwBH;;;;;IAKG;IACH,SAAS,SAAS,CAAE,SAAkB,EAAE,MAAc,EAAA;IACpD,IAAA,IAAI,SAAS,EAAE;IACb,QAAA,MAAM,IAAI,SAAS,CAAC,gCAAgC,GAAG,MAAM,CAAC,CAAA;IAC/D,KAAA;IACH,CAAC;IAED;;;;IAIG;IACH,SAAS,OAAO,CAAE,MAAgB,EAAA;QAChC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,MAAM,CAAC,EAAE;IAC7B,QAAA,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAA;IACrC,KAAA;IACH,CAAC;IAED;;;;;IAKG;IACH,SAAS,QAAQ,CAAE,MAAgB,EAAA;;IAEjC,IAAA,MAAM,UAAU,GAAG,MAAM,CAAC,UAAU,EAAE,CAAA;QACtC,MAAM,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAA;;;;QAMzC,OAAO,CAAC,MAAM,CAAC,CAAA;IACf,IAAA,OAAO,IAAI,CAAA;IACb,CAAC;IAED,MAAM,KAAK,GAAG;IACZ,IAAA,IAAI,EAAE,CAAC;IACP,IAAA,IAAI,EAAE,CAAC;IACP,IAAA,KAAK,EAAE,CAAC;IACR,IAAA,GAAG,EAAE,CAAC;IACN,IAAA,KAAK,EAAE,CAAC;IACR,IAAA,MAAM,EAAE,CAAC;KACV,CAAA;IAED;;;;;IAKG;IACH,SAAS,OAAO,CAAE,IAAY,EAAA;IAC5B,IAAA,QAAQ,MAAM,CAAC,IAAI,CAAC;YAClB,KAAK,KAAK,CAAC,IAAI;IACb,YAAA,OAAO,MAAM,CAAA;YACf,KAAK,KAAK,CAAC,IAAI;IACb,YAAA,OAAO,MAAM,CAAA;YACf,KAAK,KAAK,CAAC,KAAK;IACd,YAAA,OAAO,OAAO,CAAA;YAChB,KAAK,KAAK,CAAC,GAAG;IACZ,YAAA,OAAO,KAAK,CAAA;YACd,KAAK,KAAK,CAAC,KAAK;IACd,YAAA,OAAO,OAAO,CAAA;YAChB,KAAK,KAAK,CAAC,MAAM;IACf,YAAA,OAAO,QAAQ,CAAA;IACjB,QAAA;IACE,YAAA,OAAO,WAAW,CAAA;IACrB,KAAA;IACH,CAAC;IAED;;;;;IAKG;IACH,SAAS,SAAS,CAAE,IAAY,EAAA;IAC9B,IAAA,QAAQ,MAAM,CAAC,IAAI,CAAC;YAClB,KAAK,KAAK,CAAC,IAAI;IACb,YAAA,OAAO,CAAC,CAAA;YACV,KAAK,KAAK,CAAC,IAAI;IACb,YAAA,OAAO,CAAC,CAAA;YACV,KAAK,KAAK,CAAC,KAAK;IACd,YAAA,OAAO,CAAC,CAAA;YACV,KAAK,KAAK,CAAC,GAAG;IACZ,YAAA,OAAO,CAAC,CAAA;YACV,KAAK,KAAK,CAAC,KAAK;IACd,YAAA,OAAO,CAAC,CAAA;YACV,KAAK,KAAK,CAAC,MAAM;IACf,YAAA,OAAO,CAAC,CAAA;IACV,QAAA;gBACE,OAAO,CAAC,CAAC,CAAA;IACZ,KAAA;IACH,CAAC;IAED;;;;;IAKG;IACH,SAAS,OAAO,CAAE,IAAY,EAAA;IAC5B,IAAA,QAAQ,MAAM,CAAC,IAAI,CAAC;IAClB,QAAA,KAAK,MAAM;gBACT,OAAO,KAAK,CAAC,IAAI,CAAA;IACnB,QAAA,KAAK,MAAM;gBACT,OAAO,KAAK,CAAC,IAAI,CAAA;IACnB,QAAA,KAAK,OAAO;gBACV,OAAO,KAAK,CAAC,KAAK,CAAA;IACpB,QAAA,KAAK,KAAK;gBACR,OAAO,KAAK,CAAC,GAAG,CAAA;IAClB,QAAA,KAAK,OAAO;gBACV,OAAO,KAAK,CAAC,KAAK,CAAA;IACpB,QAAA,KAAK,QAAQ;gBACX,OAAO,KAAK,CAAC,MAAM,CAAA;IACrB,QAAA;gBACE,OAAO,CAAC,CAAC,CAAA;IACZ,KAAA;IACH,CAAC;IAED;;;;;;IAMG;IACH,SAAS,UAAU,CAAE,IAAY,EAAE,YAAsB,EAAA;QACvD,IAAI,IAAI,KAAK,CAAC,EAAE;IACd,QAAA,MAAM,OAAO,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,CAAA;YAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;IAC7B,YAAA,OAAO,CAAC,CAAC,CAAC,GAAG,YAAY,EAAE,CAAA;IAC5B,SAAA;IACD,QAAA,OAAO,OAAO,CAAA;IACf,KAAA;IAAM,SAAA;YACL,OAAO,YAAY,EAAE,CAAA;IACtB,KAAA;IACH,CAAC;IAED;;;;;;;IAOG;IACH,SAAS,QAAQ,CAAE,MAAgB,EAAE,IAAY,EAAE,IAAY,EAAA;IAC7D,IAAA,QAAQ,IAAI;YACV,KAAK,KAAK,CAAC,IAAI;IACb,YAAA,OAAO,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAA;YAC/B,KAAK,KAAK,CAAC,IAAI;gBACb,OAAO,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAA;YACzC,KAAK,KAAK,CAAC,KAAK;IACd,YAAA,OAAO,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAA;YACxD,KAAK,KAAK,CAAC,GAAG;IACZ,YAAA,OAAO,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAA;YACxD,KAAK,KAAK,CAAC,KAAK;IACd,YAAA,OAAO,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAA;YAC1D,KAAK,KAAK,CAAC,MAAM;IACf,YAAA,OAAO,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAA;IAC1D,QAAA;IACE,YAAA,SAAS,CAAC,IAAI,EAAE,iBAAiB,GAAG,IAAI,CAAC,CAAA;IACzC,YAAA,OAAO,SAAS,CAAA;IACnB,KAAA;IACH,CAAC;IAED;;;;;IAKG;IACH,SAAS,QAAQ,CAAE,KAAa,EAAA;IAC9B,IAAA,IAAI,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE;IAC5C,QAAA,OAAO,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;IAC5C,KAAA;IACD,IAAA,OAAO,KAAK,CAAA;IACd,CAAC;IAED;IAEA;;;;;;IAMG;IACH,SAAS,SAAS,CAAE,MAAgB,EAAE,QAAsC,EAAA;;QAE1E,MAAM,IAAI,GAAG,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;;QAGnC,MAAM,IAAI,GAAG,QAAQ,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC,CAAA;;IAG5C,IAAA,MAAM,IAAI,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,CAAA;QAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;IAC7B,QAAA,IAAI,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAAA;IACpC,KAAA;IAED,IAAA,OAAO,IAAI,CAAA;IACb,CAAC;IAED;;;;;;;IAOG;IACH,SAAS,MAAM,CAAE,MAAe,EAAE,QAAsC,EAAE,eAAsC,EAAA;;QAE9G,MAAM,IAAI,GAAG,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;QACnC,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;;;IAIjE,IAAA,MAAM,IAAI,GAAG,eAAe,CAAC,MAAM,CAAA;;IAGnC,IAAA,MAAM,IAAI,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,CAAA;IAC5B,IAAA,MAAM,IAAI,GAAG,eAAe,CAAC,UAAU,CAAA;QAEvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;IAC7B,QAAA,MAAM,aAAa,GAAG,MAAM,CAAC,MAAM,CAAA;IACnC,QAAA,IAAI,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,CAAA;IACvC,QAAA,MAAM,CAAC,IAAI,CAAC,aAAa,GAAG,IAAK,CAAC,CAAA;IACnC,KAAA;IAED,IAAA,OAAO,IAAI,CAAA;IACb,CAAC;IAED;IACA,MAAM,IAAI,GAAG,CAAC,CAAA;IACd,MAAM,YAAY,GAAG,EAAE,CAAA;IACvB,MAAM,WAAW,GAAG,EAAE,CAAA;IACtB,MAAM,YAAY,GAAG,EAAE,CAAA;IAEvB;;;;;;;;;;IAUG;IACH,SAAS,MAAM,CAAE,MAAgB,EAAE,OAAe,EAAA;;;IAGhD,IAAA,MAAM,MAAM,GAA0B,EAAC,eAAe,EAAE,EAAC,MAAM,EAAE,MAAM,CAAC,UAAU,EAAE,EAAC,EAAC,CAAA;;IAGtF,IAAA,MAAM,CAAC,OAAO,GAAG,OAAO,CAAA;;IAGxB,IAAA,MAAM,OAAO,GAAG,cAAc,CAAC,MAAM,CAA0E,CAAA;QAC/G,MAAM,CAAC,eAAgB,CAAC,EAAE,GAAG,OAAO,CAAC,QAAQ,CAAA;QAC7C,MAAM,CAAC,eAAgB,CAAC,IAAI,GAAG,OAAO,CAAC,UAAU,CAAA;IACjD,IAAA,MAAM,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAA;;IAGtC,IAAA,MAAM,CAAC,gBAAgB,GAAG,cAAc,CAAC,MAAM,CAAC,CAAA;;IAGhD,IAAA,MAAM,SAAS,GAAG,aAAa,CAAC,MAAM,EAAE,OAAO,CAAC,QAAQ,EAAE,OAAO,CAA2C,CAAA;IAC5G,IAAA,MAAM,CAAC,SAAS,GAAG,SAAS,CAAC,SAAS,CAAA;QACtC,MAAM,CAAC,eAAgB,CAAC,UAAU,GAAG,SAAS,CAAC,UAAU,CAAA;IAEzD,IAAA,OAAO,MAAM,CAAA;IACf,CAAC;IAED;;;;;;;IAOG;IACH,SAAS,cAAc,CAAE,MAAgB,EAAA;IACvC,IAAA,IAAI,UAA6B,EAAE,QAAQ,EAAE,UAAU,CAAA;IACvD,IAAA,MAAM,OAAO,GAAG,MAAM,CAAC,UAAU,EAAE,CAAA;QACnC,IAAI,OAAO,KAAK,IAAI,EAAE;IACpB,QAAA,SAAS,EAAE,MAAM,CAAC,UAAU,EAAE,KAAK,IAAI,GAAG,wCAAwC,CAAC,CAAA;IACnF,QAAA,OAAO,EAAE,CAAA;IACV,KAAA;IAAM,SAAA;YACL,SAAS,EAAE,OAAO,KAAK,YAAY,GAAG,kCAAkC,CAAC,CAAA;;IAGzE,QAAA,MAAM,aAAa,GAAG,MAAM,CAAC,UAAU,EAAE,CAAA;IACzC,QAAA,UAAU,GAAG,IAAI,KAAK,CAAC,aAAa,CAAC,CAAA;YACrC,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,aAAa,EAAE,GAAG,EAAE,EAAE;;IAE5C,YAAA,MAAM,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAA;;IAG7B,YAAA,MAAM,IAAI,GAAG,MAAM,CAAC,UAAU,EAAE,CAAA;gBAChC,IAAI,IAAI,KAAK,CAAC,EAAE;oBACd,QAAQ,GAAG,GAAG,CAAA;oBACd,UAAU,GAAG,IAAI,CAAA;IAClB,aAAA;gBAED,UAAU,CAAC,GAAG,CAAC,GAAG;IAChB,gBAAA,IAAI,EAAE,IAAI;IACV,gBAAA,IAAI,EAAE,IAAI;iBACX,CAAA;IACF,SAAA;YACD,OAAO;IACL,YAAA,UAAU,EAAE,UAAU;IACtB,YAAA,QAAQ,EAAE,QAAQ;IAClB,YAAA,UAAU,EAAE,UAAU;aACvB,CAAA;IACF,KAAA;IACH,CAAC;IAED;;;;;;;;IAQG;IACH,SAAS,cAAc,CAAE,MAAgB,EAAA;IACvC,IAAA,IAAI,UAAU,CAAA;IACd,IAAA,MAAM,QAAQ,GAAG,MAAM,CAAC,UAAU,EAAE,CAAA;QACpC,IAAI,QAAQ,KAAK,IAAI,EAAE;IACrB,QAAA,SAAS,EAAE,MAAM,CAAC,UAAU,EAAE,KAAK,IAAI,GAAG,wCAAwC,CAAC,CAAA;IACnF,QAAA,OAAO,EAAE,CAAA;IACV,KAAA;IAAM,SAAA;YACL,SAAS,EAAE,QAAQ,KAAK,YAAY,GAAG,kCAAkC,CAAC,CAAA;;IAG1E,QAAA,MAAM,aAAa,GAAG,MAAM,CAAC,UAAU,EAAE,CAAA;IACzC,QAAA,UAAU,GAAG,IAAI,KAAK,CAAC,aAAa,CAAC,CAAA;YACrC,KAAK,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,aAAa,EAAE,IAAI,EAAE,EAAE;;IAE/C,YAAA,MAAM,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAA;;IAG7B,YAAA,MAAM,IAAI,GAAG,MAAM,CAAC,UAAU,EAAE,CAAA;IAChC,YAAA,SAAS,EAAE,CAAC,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,GAAG,iBAAiB,GAAG,IAAI,CAAC,CAAA;;IAG/D,YAAA,MAAM,IAAI,GAAG,MAAM,CAAC,UAAU,EAAE,CAAA;gBAChC,MAAM,KAAK,GAAG,QAAQ,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAA;;gBAG1C,OAAO,CAAC,MAAM,CAAC,CAAA;gBAEf,UAAU,CAAC,IAAI,CAAC,GAAG;IACjB,gBAAA,IAAI,EAAE,IAAI;IACV,gBAAA,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC;IACnB,gBAAA,KAAK,EAAE,KAAK;iBACb,CAAA;IACF,SAAA;IACF,KAAA;IACD,IAAA,OAAO,UAAU,CAAA;IACnB,CAAC;IAED;;;;;;;;;;;;;;IAcG;IACH,SAAS,aAAa,CAAE,MAAgB,EAAE,QAAgB,EAAE,OAAe,EAAA;IACzE,IAAA,MAAM,OAAO,GAAG,MAAM,CAAC,UAAU,EAAE,CAAA;QACnC,IAAI,UAAU,GAAG,CAAC,CAAA;IAClB,IAAA,IAAI,SAAS,CAAA;QACb,IAAI,OAAO,KAAK,IAAI,EAAE;IACpB,QAAA,SAAS,EACN,MAAM,CAAC,UAAU,EAAE,KAAK,IAAI,GAC7B,uCAAuC,CACxC,CAAA;IACD,QAAA,OAAO,EAAE,CAAA;IACV,KAAA;IAAM,SAAA;YACL,SAAS,EAAE,OAAO,KAAK,WAAW,GAAG,iCAAiC,CAAC,CAAA;;IAGvE,QAAA,MAAM,YAAY,GAAG,MAAM,CAAC,UAAU,EAAE,CAAA;IACxC,QAAA,SAAS,GAAG,IAAI,KAAK,CAAC,YAAY,CAAC,CAAA;YACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,EAAE,CAAC,EAAE,EAAE;;IAErC,YAAA,MAAM,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAA;;IAG7B,YAAA,MAAM,cAAc,GAAG,MAAM,CAAC,UAAU,EAAE,CAAA;;IAG1C,YAAA,MAAM,aAAa,GAAG,IAAI,KAAK,CAAC,cAAc,CAAC,CAAA;gBAC/C,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,cAAc,EAAE,GAAG,EAAE,EAAE;oBAC7C,aAAa,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,UAAU,EAAE,CAAA;IACzC,aAAA;;IAGD,YAAA,MAAM,UAAU,GAAG,cAAc,CAAC,MAAM,CAAC,CAAA;;IAGzC,YAAA,MAAM,IAAI,GAAG,MAAM,CAAC,UAAU,EAAE,CAAA;IAChC,YAAA,SAAS,EAAE,CAAC,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,GAAG,iBAAiB,GAAG,IAAI,CAAC,CAAA;;;;;IAM/D,YAAA,MAAM,OAAO,GAAG,MAAM,CAAC,UAAU,EAAE,CAAA;;IAGnC,YAAA,IAAI,MAAM,GAAG,MAAM,CAAC,UAAU,EAAE,CAAA;gBAChC,IAAI,OAAO,KAAK,CAAC,EAAE;oBACjB,SAAS,EAAE,MAAM,GAAG,CAAC,GAAG,uCAAuC,CAAC,CAAA;IAChE,gBAAA,MAAM,GAAG,MAAM,CAAC,UAAU,EAAE,CAAA;IAC7B,aAAA;;IAGD,YAAA,IAAI,aAAa,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;oBACjC,UAAU,IAAI,OAAO,CAAA;IACtB,aAAA;gBAED,SAAS,CAAC,CAAC,CAAC,GAAG;IACb,gBAAA,IAAI,EAAE,IAAI;IACV,gBAAA,UAAU,EAAE,aAAa;IACzB,gBAAA,UAAU,EAAE,UAAU;IACtB,gBAAA,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC;IACnB,gBAAA,IAAI,EAAE,OAAO;IACb,gBAAA,MAAM,EAAE,MAAM;oBACd,MAAM,GAAG,aAAa,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC;iBACxC,CAAA;IACF,SAAA;IACF,KAAA;QAED,OAAO;IACL,QAAA,SAAS,EAAE,SAAS;IACpB,QAAA,UAAU,EAAE,UAAU;SACvB,CAAA;IACH,CAAC;IAED;;;IAGG;IACH,MAAM,YAAY,CAAA;IAGhB;;IAEG;IACH,IAAA,WAAA,CAAa,IAAiB,EAAA;IAC5B,QAAA,MAAM,MAAM,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAA;YACjC,MAAM,CAAC,YAAY,EAAE,CAAA;;IAGrB,QAAA,SAAS,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,KAAK,GAAG,uBAAuB,CAAC,CAAA;;IAGnE,QAAA,MAAM,OAAO,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAA;YACjC,SAAS,EAAE,OAAO,GAAG,CAAC,GAAG,iBAAiB,CAAC,CAAA;;YAG3C,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAAA;IACrC,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;SACrB;IAED;;IAEG;IACH,IAAA,IAAI,OAAO,GAAA;IACT,QAAA,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,KAAK,CAAC,EAAE;IAC7B,YAAA,OAAO,gBAAgB,CAAA;IACxB,SAAA;IAAM,aAAA;IACL,YAAA,OAAO,sBAAsB,CAAA;IAC9B,SAAA;SACF;IAED;;;;;;IAMG;IACH,IAAA,IAAI,eAAe,GAAA;IACjB,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,eAAe,CAAA;SACnC;IAED;;;;IAIG;IACH,IAAA,IAAI,UAAU,GAAA;IACZ,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,CAAA;SAC9B;IAED;;;;;IAKG;IACH,IAAA,IAAI,gBAAgB,GAAA;IAClB,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAA;SACpC;IAED;;;;;;;;;IASG;IACH,IAAA,IAAI,SAAS,GAAA;IACX,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAA;SAC7B;IAED;;;;IAIG;IACH,IAAA,eAAe,CAAE,YAAoB,EAAA;YACnC,OAAO,IAAI,CAAC,MAAM,CAAC,SAAU,CAAC,SAAS,CAAC,UAAU,GAAG,EAAA;IACnD,YAAA,OAAO,GAAG,CAAC,IAAI,KAAK,YAAY,CAAA;IAClC,SAAC,CAAC,KAAK,CAAC,CAAC,CAAA;SACV;IAED;;;;IAIG;IACH,IAAA,eAAe,CAAE,YAAuB,EAAA;IACtC,QAAA,IAAI,QAAQ,CAAA;IACZ,QAAA,IAAI,OAAO,YAAY,KAAK,QAAQ,EAAE;;gBAEpC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,SAAU,CAAC,IAAI,CAAC,UAAU,GAAG,EAAA;IAClD,gBAAA,OAAO,GAAG,CAAC,IAAI,KAAK,YAAY,CAAA;IAClC,aAAC,CAAC,CAAA;IACH,SAAA;IAAM,aAAA;gBACL,QAAQ,GAAG,YAAY,CAAA;IACxB,SAAA;;YAGD,SAAS,EAAE,QAAQ,KAAK,SAAS,GAAG,oBAAoB,CAAC,CAAA;;YAGzD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAA;YAEjC,IAAI,QAAQ,CAAC,MAAM,EAAE;;IAEnB,YAAA,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,eAAgB,CAAC,CAAA;IACnE,SAAA;IAAM,aAAA;;gBAEL,OAAO,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;IACxC,SAAA;SACF;IACF;;ICrmBD;;;;IAIG;IAMH,MAAM,YAAa,SAAQ,gBAAgB,CAAA;IACzC,IAAA,IAAI,IAAI,GAAM,EAAA,OAAO,QAAQ,CAAA,EAAE;IAC/B,IAAA,IAAI,QAAQ,GAAM,EAAA,OAAO,IAAI,CAAA,EAAE;QAE/B,MAAM,GAAA;;IAGJ,QAAA,IAAIA,aAAK;gBAAE,GAAG,CAAC,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;YAEvD,MAAM,YAAY,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;IAEzD,QAAA,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAA;IACrB,QAAA,MAAM,WAAW,GAAG,CAAC,CAAC,WAAW,CAAA;IACjC,QAAA,MAAM,KAAK,GAAG,CAAC,CAAC,KAAK,CAAA;IACrB,QAAA,MAAM,KAAK,GAAG,CAAC,CAAC,KAAK,CAAA;YAErB,YAAY,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,EAAA;gBAC7D,WAAW,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC,CAAA;IACvC,SAAC,CAAC,CAAA;IAEF,QAAA,IAAI,YAAY,CAAC,eAAe,CAAC,cAAc,CAAC,EAAE;gBAChD,YAAY,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,EAAA;oBAC9D,KAAK,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC,CAAA;IACjC,aAAC,CAAC,CAAA;IACH,SAAA;IAED,QAAA,IAAI,YAAY,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE;gBACxC,YAAY,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,EAAA;IACtD,gBAAA,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;IACf,aAAC,CAAC,CAAA;IACH,SAAA;IAED,QAAA,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;IACrB,YAAA,CAAC,CAAC,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC,CAAA;IACxB,SAAA;IACD,QAAA,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;IACrB,YAAA,CAAC,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAA;IAClC,SAAA;IAED,QAAA,IAAIA,aAAK;gBAAE,GAAG,CAAC,OAAO,CAAC,sBAAsB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;SAC3D;IACF,CAAA;IAED,cAAc,CAAC,GAAG,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAA;IAC1C,cAAc,CAAC,GAAG,CAAC,MAAM,EAAE,YAAY,CAAC,CAAA;IACxC,cAAc,CAAC,GAAG,CAAC,IAAI,EAAE,YAAY,CAAC;;ICvDtC;;;;IAIG;IAMH,MAAM,SAAU,SAAQ,gBAAgB,CAAA;IACtC,IAAA,IAAI,IAAI,GAAM,EAAA,OAAO,KAAK,CAAA,EAAE;IAC5B,IAAA,IAAI,QAAQ,GAAM,EAAA,OAAO,IAAI,CAAA,EAAE;QAE/B,MAAM,GAAA;;IAGJ,QAAA,IAAIA,aAAK;gBAAE,GAAG,CAAC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;YAEpD,MAAM,GAAG,GAAG,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;IAC5C,QAAA,MAAM,EAAE,GAAG,IAAI,QAAQ,CAAC,GAAG,CAAC,CAAA;IAE5B,QAAA,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAA;IACrB,QAAA,MAAM,WAAW,GAAG,CAAC,CAAC,WAAW,CAAA;IACjC,QAAA,MAAM,KAAK,GAAG,CAAC,CAAC,KAAK,CAAA;IACrB,QAAA,MAAM,KAAK,GAAG,CAAC,CAAC,KAAK,CAAA;YAErB,IAAI,MAAM,GAAG,CAAC,CAAA;IAEd,QAAA,OAAO,IAAI,EAAE;;;gBAGX,MAAM,IAAI,CAAC,CAAA;gBAEX,MAAM,WAAW,GAAG,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAA;gBACvC,MAAM,IAAI,CAAC,CAAA;gBACX,MAAM,IAAI,WAAW,CAAA;;;gBAIrB,MAAM,OAAO,GAAG,EAAE,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;gBACvC,MAAM,OAAO,GAAG,EAAE,CAAC,QAAQ,CAAC,MAAM,GAAG,EAAE,CAAC,CAAA;gBACxC,MAAM,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAC,MAAM,GAAG,EAAE,CAAC,CAAA;;;gBAGzC,MAAM,SAAS,GAAG,EAAE,CAAC,QAAQ,CAAC,MAAM,GAAG,EAAE,CAAC,CAAA;gBAC1C,MAAM,YAAY,GAAG,EAAE,CAAC,QAAQ,CAAC,MAAM,GAAG,EAAE,CAAC,CAAA;gBAC7C,MAAM,SAAS,GAAG,EAAE,CAAC,QAAQ,CAAC,MAAM,GAAG,EAAE,CAAC,CAAA;gBAC1C,MAAM,MAAM,GAAG,EAAE,CAAC,QAAQ,CAAC,MAAM,GAAG,EAAE,CAAC,CAAA;;;gBAGvC,MAAM,IAAI,EAAE,CAAA;IAEZ,YAAA,MAAM,SAAS,GAAG,OAAO,GAAG,CAAC,CAAA;IAC7B,YAAA,MAAM,OAAO,GAAG,MAAM,GAAG,CAAC,CAAA;;gBAG1B,IAAI,SAAS,KAAK,CAAC,EAAE;oBACnB,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAA;;IAElC,aAAA;IAAM,iBAAA;oBACL,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAA;;IAElC,aAAA;IACD,YAAA,MAAM,IAAI,CAAC,GAAG,SAAS,CAAA;IAEvB,YAAA,IAAI,OAAO,EAAE;IACX,gBAAA,MAAM,GAAG,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,CAAA;oBAC/B,IAAI,SAAS,KAAK,CAAC,EAAE;wBACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;IAC1B,wBAAA,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,CAAA;4BACnC,MAAM,IAAI,CAAC,CAAA;IACZ,qBAAA;IACF,iBAAA;IAAM,qBAAA;wBACL,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;IAC1B,wBAAA,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,CAAA;4BACnC,MAAM,IAAI,CAAC,CAAA;IACZ,qBAAA;IACF,iBAAA;IACD,gBAAA,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;IAChB,aAAA;;gBAGD,MAAM,IAAI,OAAO,CAAA;;gBAGjB,MAAM,IAAI,QAAQ,CAAA;IAElB,YAAA,IAAI,SAAS,EAAE;IACb,gBAAA,IAAI,WAAW,CAAA;oBACf,IAAI,SAAS,KAAK,CAAC,EAAE;IACnB,oBAAA,WAAW,GAAG,IAAI,YAAY,CAAC,OAAO,CAAC,CAAA;wBACvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,EAAE,CAAC,EAAE;IAChC,wBAAA,WAAW,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,CAAA;4BAC3C,MAAM,IAAI,CAAC,CAAA;IACZ,qBAAA;IACF,iBAAA;IAAM,qBAAA;wBACL,MAAM,GAAG,GAAG,IAAI,WAAW,CAAC,GAAG,EAAE,MAAM,EAAE,OAAO,CAAC,CAAA;wBACjD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,EAAE,CAAC,EAAE;IAChC,wBAAA,MAAM,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC,CAAA;4BACpB,GAAG,CAAC,CAAC,CAAC,IACJ,CAAC,CAAC,KAAK,GAAG,IAAI,KAAK,EAAE,KAAK,CAAC,KAAK,GAAG,MAAM,KAAK,CAAC,CAAC;IAChD,6BAAC,CAAC,KAAK,IAAI,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,IAAI,IAAI,CAAC,CACjD,CAAA;IACF,qBAAA;wBACD,WAAW,GAAG,IAAI,YAAY,CAAC,GAAG,EAAE,MAAM,EAAE,OAAO,CAAC,CAAA;wBACpD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,EAAE,CAAC,EAAE;IAChC,wBAAA,WAAW,CAAC,CAAC,CAAC,IAAI,EAAE,CAAA;4BACpB,MAAM,IAAI,CAAC,CAAA;IACZ,qBAAA;IACF,iBAAA;IACD,gBAAA,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;IAC9B,aAAA;;gBAGD,MAAM,IAAI,YAAY,CAAA;;gBAGtB,MAAM,IAAI,SAAS,CAAA;IAEnB,YAAA,IAAI,MAAM,IAAI,GAAG,CAAC,UAAU;oBAAE,MAAK;IACpC,SAAA;IAED,QAAA,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;IACrB,YAAA,CAAC,CAAC,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC,CAAA;IACxB,SAAA;IACD,QAAA,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;IACrB,YAAA,CAAC,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAA;IAClC,SAAA;IAED,QAAA,IAAIA,aAAK;gBAAE,GAAG,CAAC,OAAO,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;SACxD;IACF,CAAA;IAED,cAAc,CAAC,GAAG,CAAC,KAAK,EAAE,SAAS,CAAC;;ICtIpC;;;;IAIG;IAOH,MAAM,SAAS,GAAG,IAAI,WAAW,CAAC;IAChC,IAAA,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;QAChE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI;IAChE,IAAA,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK;IAC5D,IAAA,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM;IAC9D,IAAA,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM;QAC9D,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;QAC5D,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ;IACjE,CAAA,CAAC,CAAA;IACF,MAAM,QAAQ,GAAG,CAAC,CAAA;IAClB;IAEA,SAAS,SAAS,CAAE,IAAY,EAAA;QAC9B,IAAI,GAAG,GAAG,CAAC,CAAA;QACX,IAAI,SAAS,GAAG,CAAC,CAAA;IACjB,IAAA,OAAO,IAAI,IAAI,GAAG,IAAI,SAAS,GAAG,EAAE,EAAE;IACpC,QAAA,SAAS,EAAE,CAAA;YACX,GAAG,KAAK,CAAC,CAAA;IACV,KAAA;IACD,IAAA,OAAO,SAAS,CAAA;IAClB,CAAC;IAED,MAAM,SAAS,GAAG,IAAI,UAAU,CAAC,EAAE,CAAC,CAAA;IAEpC,SAAS,UAAU,CAAE,SAAiB,EAAE,KAAiB,EAAA;QACvD,IAAI,UAAU,GAAG,CAAC,CAAA;QAClB,IAAI,SAAS,GAAG,CAAC,CAAA;IACjB,IAAA,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;QAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;IAClC,QAAA,IAAI,OAAO,CAAA;YACX,IAAI,GAAG,GAAG,CAAC,CAAA;YACX,KAAK,OAAO,GAAG,CAAC,EAAE,OAAO,GAAG,UAAU,EAAE,OAAO,EAAE,EAAE;gBACjD,GAAG,IAAI,SAAS,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAA;IACpC,YAAA,SAAS,CAAC,OAAO,CAAC,GAAG,GAAG,GAAG,IAAI,CAAA;gBAC/B,GAAG,KAAK,CAAC,CAAA;IACV,SAAA;YACD,OAAO,GAAG,KAAK,CAAC,EAAE;gBAChB,SAAS,CAAC,OAAO,EAAE,CAAC,GAAG,GAAG,GAAG,IAAI,CAAA;gBACjC,GAAG,KAAK,CAAC,CAAA;IACV,SAAA;YACD,UAAU,GAAG,OAAO,CAAA;IACrB,KAAA;QACD,IAAI,GAAG,GAAG,CAAC,CAAA;IACX,IAAA,UAAU,EAAE,CAAA;IACZ,IAAA,OAAO,SAAS,CAAC,UAAU,CAAC,IAAI,GAAG,EAAE;IACnC,QAAA,SAAS,EAAE,CAAA;YACX,GAAG,IAAI,CAAC,CAAA;IACT,KAAA;IACD,IAAA,OAAO,SAAS,GAAG,UAAU,GAAG,CAAC,CAAA;IACnC,CAAC;IAED,SAAS,UAAU,CAAE,GAAe,EAAE,IAAgB,EAAE,SAAiB,EAAE,IAAiB,EAAA;QAC1F,MAAM,IAAI,GAAG,CAAC,CAAC,IAAI,SAAS,IAAI,CAAC,CAAA;IACjC,IAAA,IAAI,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAA;IACrB,IAAA,IAAI,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAA;IACrB,IAAA,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAA;QAChB,IAAI,GAAG,GAAG,CAAC,CAAA;QAEX,OAAO,SAAS,IAAI,CAAC,EAAE;IACrB,QAAA,OAAO,GAAG,CAAC,OAAO,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;IACtC,QAAA,GAAG,IAAI,CAAC,OAAO,IAAI,OAAO,MAAM,SAAS,GAAG,CAAC,CAAC,CAAA;YAC9C,SAAS,IAAI,CAAC,CAAA;IACf,KAAA;QAED,IAAI,SAAS,GAAG,CAAC,EAAE;YACjB,IAAI,OAAO,GAAG,SAAS,EAAE;gBACvB,OAAO,IAAI,CAAC,CAAA;IACZ,YAAA,OAAO,GAAG,CAAC,OAAO,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;IACvC,SAAA;YACD,OAAO,IAAI,SAAS,CAAA;IACpB,QAAA,GAAG,IAAI,CAAC,OAAO,IAAI,OAAO,KAAK,CAAC,CAAC,IAAI,SAAS,IAAI,CAAC,CAAC,CAAA;IACrD,KAAA;QAED,GAAG,IAAI,IAAI,CAAA;IACX,IAAA,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAA;IACZ,IAAA,GAAG,CAAC,CAAC,CAAC,GAAG,OAAO,CAAA;IAChB,IAAA,GAAG,CAAC,CAAC,CAAC,GAAG,OAAO,CAAA;IAEhB,IAAA,OAAO,GAAG,CAAA;IACZ,CAAC;IAED,MAAM,YAAY,GAAG,IAAI,UAAU,CAAC,EAAE,CAAC,CAAA;IAEvC,SAAS,UAAU,CAAE,GAAe,EAAE,IAAgB,EAAE,SAAiB,EAAE,SAAiB,EAAE,KAAkB,EAAE,IAAkB,EAAE,IAAiB,EAAA;QACrJ,IAAI,UAAU,GAAG,CAAC,CAAA;IAClB,IAAA,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;IACnB,IAAA,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;IACnB,IAAA,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;QAEnB,OAAO,SAAS,GAAG,CAAC,EAAE;;IAEpB,QAAA,YAAY,CAAC,UAAU,EAAE,CAAC,GAAG,UAAU,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,CAAA;YAC3D,SAAS,IAAI,CAAC,CAAA;IACf,KAAA;QAED,IAAI,SAAS,GAAG,CAAC,EAAE;IACjB,QAAA,YAAY,CAAC,UAAU,EAAE,CAAC,GAAG,UAAU,CAAC,GAAG,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,CAAC,CAAA;IACpE,KAAA;IAED,IAAA,KAAK,IAAI,CAAC,GAAG,SAAS,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YACtC,IAAI,GAAG,GAAG,CAAC,CAAA;IACX,QAAA,KAAK,IAAI,CAAC,GAAG,UAAU,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;gBACxC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,YAAY,CAAC,CAAC,CAAC,CAAA;IAClC,YAAA,MAAM,CAAC,GAAG,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAA;IAC9B,YAAA,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;gBACnB,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAA;IACzB,SAAA;IACD,QAAA,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAA;IACd,KAAA;QACD,IAAI,CAAC,CAAC,CAAC,IACL,YAAY,CAAC,CAAC,CAAC;IACf,SAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IACtB,SAAC,YAAY,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;aACtB,YAAY,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CACxB,CAAA;IACH,CAAC;IAED,MAAM,SAAU,SAAQ,gBAAgB,CAAA;IACtC,IAAA,IAAI,IAAI,GAAM,EAAA,OAAO,KAAK,CAAA,EAAE;IAC5B,IAAA,IAAI,QAAQ,GAAM,EAAA,OAAO,IAAI,CAAA,EAAE;QAE/B,MAAM,GAAA;;;IAIJ,QAAA,IAAIA,aAAK;gBAAE,GAAG,CAAC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;YAEpD,MAAM,GAAG,GAAG,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;IAC5C,QAAA,MAAM,EAAE,GAAG,IAAI,QAAQ,CAAC,GAAG,CAAC,CAAA;IAE5B,QAAA,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAA;IACrB,QAAA,MAAM,WAAW,GAAG,CAAC,CAAC,WAAW,CAAA;IACjC,QAAA,MAAM,KAAK,GAAG,CAAC,CAAC,KAAK,CAAA;IACrB,QAAA,MAAM,KAAK,GAAG,CAAC,CAAC,KAAK,CAAA;IAErB,QAAA,MAAM,SAAS,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC,CAAA;IACnC,QAAA,MAAM,OAAO,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC,CAAA;IACjC,QAAA,MAAM,UAAU,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC,CAAA;IACpC,QAAA,MAAM,SAAS,GAAG,IAAI,WAAW,CAAC,CAAC,CAAC,CAAA;IACpC,QAAA,MAAM,SAAS,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,CAAA;IACrC,QAAA,MAAM,SAAS,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,CAAA;YAErC,IAAI,MAAM,GAAG,CAAC,CAAA;IACd,QAAA,MAAM,GAAG,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC,CAAA;YAC7B,MAAM,IAAI,GAAG,IAAI,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;IAExC,QAAA,OAAO,IAAI,EAAE;IACX,YAAA,IAAI,WAAwB,CAAA;;gBAG5B,MAAM,MAAM,GAAG,EAAE,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;;gBAEtC,MAAM,IAAI,EAAE,CAAA;IAEZ,YAAA,MAAM,OAAO,GAAG,MAAM,GAAG,CAAC,CAAA;gBAE1B,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAA;gBACjC,MAAM,IAAI,CAAC,CAAA;IAEX,YAAA,MAAM,GAAG,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,CAAA;gBAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;IAC1B,gBAAA,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,CAAA;oBACnC,MAAM,IAAI,CAAC,CAAA;IACZ,aAAA;IACD,YAAA,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;IAEf,YAAA,IAAI,MAAM,IAAI,CAAC,EAAE;IACf,gBAAA,WAAW,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC,CAAA;oBACtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,EAAE,CAAC,EAAE;wBAC/B,WAAW,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,CAAA;wBACtC,MAAM,IAAI,CAAC,CAAA;IACZ,iBAAA;IACF,aAAA;IAAM,iBAAA;IACL,gBAAA,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAA;IAC9B,gBAAA,OAAO,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;IACxC,gBAAA,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;IAC9C,gBAAA,UAAU,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;IACjD,gBAAA,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;IAC9C,gBAAA,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;IAE9C,gBAAA,WAAW,GAAG,IAAI,YAAY,CAAC,OAAO,CAAC,CAAA;oBACvC,IAAI,GAAG,GAAG,CAAC,CAAA;oBAEX,MAAM,KAAK,GAAG,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAA;oBACjC,MAAM,IAAI,CAAC,CAAA;oBACX,MAAM,SAAS,GAAG,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,CAAA;oBACvC,MAAM,IAAI,CAAC,CAAA;oBAEX,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAA;IAClC,gBAAA,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;IACtC,gBAAA,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;IACtC,gBAAA,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,MAAM,GAAG,EAAE,CAAC,CAAA;IACvC,gBAAA,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,MAAM,GAAG,EAAE,CAAC,CAAA;IACvC,gBAAA,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,MAAM,GAAG,EAAE,CAAC,CAAA;IACvC,gBAAA,OAAO,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;IAC5C,gBAAA,OAAO,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;IAC5C,gBAAA,OAAO,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;oBAC5C,MAAM,IAAI,EAAE,CAAA;IAEZ,gBAAA,IAAI,OAAO,CAAA;IACX,gBAAA,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,IAAI,QAAQ,EAAE;wBACrD,UAAU,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA;wBACrC,UAAU,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA;wBACrC,UAAU,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA;IACrC,oBAAA,OAAO,GAAG,CAAC,CAAA;IACZ,iBAAA;IAAM,qBAAA;IACL,oBAAA,OAAO,GAAG,UAAU,CAAC,CAAC,EAAE,OAAO,CAAC,CAAA;IACjC,iBAAA;oBAED,IAAI,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAA;oBAClC,MAAM,IAAI,CAAC,CAAA;;;;;IAMX,gBAAA,IAAI,MAAM,GAAG,QAAQ,GAAG,CAAC,CAAA;IACzB,gBAAA,MAAM,GAAG,CAAC,QAAQ,GAAG,MAAM,IAAI,QAAQ,GAAG,MAAM,CAAA;IAChD,gBAAA,IAAI,OAAO,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;IACzC,gBAAA,IAAI,QAAQ,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;IAE5C,gBAAA,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,QAAQ,CAAC,CAAA;;IAGhE,gBAAA,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAA;oBAChD,MAAM,IAAI,CAAC,CAAA;;;;;;;IAWX,gBAAA,MAAM,YAAY,GAAG,GAAG,GAAG,SAAS,CAAA;oBACpC,IAAI,GAAG,GAAG,CAAC,CAAA;oBACX,IAAI,CAAC,GAAG,CAAC,CAAA;oBAET,MAAM,IAAI,GAAG,IAAI,UAAU,CAAC,GAAG,EAAE,MAAM,CAAC,CAAA;IAExC,gBAAA,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;oBAE9C,OAAO,CAAC,GAAG,KAAK,EAAE;wBAChB,IAAI,OAAO,KAAK,CAAC,EAAE;IACjB,wBAAA,SAAS,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,GAAG,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;IACzD,wBAAA,SAAS,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,GAAG,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;IACzD,wBAAA,SAAS,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,GAAG,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;IAC1D,qBAAA;IAAM,yBAAA;IACL,wBAAA,UAAU,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,IAAI,CAAC,CAAA;IAC5D,qBAAA;IAED,oBAAA,CAAC,EAAE,CAAA;wBAEH,SAAS,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,CAAA;wBAC5B,SAAS,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,CAAA;wBAC5B,SAAS,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,CAAA;wBAE5B,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAA;wBAC3B,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAA;wBAC3B,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAA;IAE3B,oBAAA,MAAM,IAAI,GAAG,UAAU,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,CAAA;wBAC3C,IAAI,SAAS,GAAG,CAAC,CAAA;wBAEjB,IAAI,IAAI,KAAK,CAAC,EAAE;4BACd,GAAG,GAAG,UAAU,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,CAAA;IACpC,wBAAA,SAAS,GAAG,GAAG,GAAG,CAAC,CAAA;4BACnB,GAAG,IAAI,SAAS,CAAA;IAChB,wBAAA,SAAS,EAAE,CAAA;IACZ,qBAAA;;;;;wBAOD,IAAI,GAAG,GAAG,CAAC,EAAE;IACX,wBAAA,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;IAE9C,wBAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE;IAC/B,4BAAA,UAAU,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,CAAC,CAAA;IAC9D,4BAAA,CAAC,EAAE,CAAA;gCAEH,SAAS,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAA;gCACvC,SAAS,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAA;gCACvC,SAAS,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAA;gCAEvC,IAAI,CAAC,KAAK,CAAC,EAAE;;;IAGX,gCAAA,IAAI,OAAO,GAAG,SAAS,CAAC,CAAC,CAAC,CAAA;oCAC1B,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAA;IAC3B,gCAAA,SAAS,CAAC,CAAC,CAAC,GAAG,OAAO,CAAA;IAEtB,gCAAA,OAAO,GAAG,SAAS,CAAC,CAAC,CAAC,CAAA;oCACtB,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAA;IAC3B,gCAAA,SAAS,CAAC,CAAC,CAAC,GAAG,OAAO,CAAA;IAEtB,gCAAA,OAAO,GAAG,SAAS,CAAC,CAAC,CAAC,CAAA;oCACtB,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAA;IAC3B,gCAAA,SAAS,CAAC,CAAC,CAAC,GAAG,OAAO,CAAA;oCAEtB,WAAW,CAAC,GAAG,EAAE,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,YAAY,CAAA;oCAChD,WAAW,CAAC,GAAG,EAAE,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,YAAY,CAAA;oCAChD,WAAW,CAAC,GAAG,EAAE,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,YAAY,CAAA;IACjD,6BAAA;IAAM,iCAAA;oCACL,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAA;oCAC3B,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAA;oCAC3B,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAA;IAC5B,6BAAA;gCACD,WAAW,CAAC,GAAG,EAAE,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,YAAY,CAAA;gCAChD,WAAW,CAAC,GAAG,EAAE,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,YAAY,CAAA;gCAChD,WAAW,CAAC,GAAG,EAAE,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,YAAY,CAAA;IACjD,yBAAA;IACF,qBAAA;IAAM,yBAAA;4BACL,WAAW,CAAC,GAAG,EAAE,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,YAAY,CAAA;4BAChD,WAAW,CAAC,GAAG,EAAE,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,YAAY,CAAA;4BAChD,WAAW,CAAC,GAAG,EAAE,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,YAAY,CAAA;IACjD,qBAAA;wBAED,QAAQ,IAAI,SAAS,CAAA;wBAErB,IAAI,SAAS,GAAG,CAAC,EAAE;4BACjB,QAAQ,GAAG,OAAO,CAAA;4BAClB,IAAI,QAAQ,GAAG,QAAQ,EAAE;IACvB,4BAAA,OAAO,GAAG,CAAC,SAAS,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;IAC5C,yBAAA;IAAM,6BAAA;gCACL,OAAO,GAAG,CAAC,CAAA;IACZ,yBAAA;IACF,qBAAA;6BAAM,IAAI,SAAS,GAAG,CAAC,EAAE;4BACxB,OAAO,GAAG,QAAQ,CAAA;4BAClB,QAAQ,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;IACzC,qBAAA;IACD,oBAAA,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,QAAQ,CAAC,CAAA;wBAEhE,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;IAClE,wBAAA,OAAO,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAA;4BACjD,OAAM;IACP,qBAAA;IACF,iBAAA;oBACD,MAAM,IAAI,GAAG,CAAA;IACd,aAAA;gBAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,EAAE;IAChC,gBAAA,WAAW,CAAC,CAAC,CAAC,IAAI,EAAE,CAAA;IACrB,aAAA;IAED,YAAA,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;IAE7B,YAAA,IAAI,MAAM,IAAI,GAAG,CAAC,UAAU;oBAAE,MAAK;IACpC,SAAA;IAED,QAAA,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;IACrB,YAAA,CAAC,CAAC,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC,CAAA;IACxB,SAAA;IACD,QAAA,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;IACrB,YAAA,CAAC,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAA;IAClC,SAAA;IAED,QAAA,IAAIA,aAAK;gBAAE,GAAG,CAAC,OAAO,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;SACxD;IACF,CAAA;IAED,cAAc,CAAC,GAAG,CAAC,KAAK,EAAE,SAAS,CAAC;;ICxXpC;;;;IAIG;IAaH,MAAM,YAAa,SAAQ,MAAM,CAAA;QAC/B,WAAa,CAAA,QAAkB,EAAE,MAAwC,EAAA;IACvE,QAAA,MAAM,CAAC,GAAG,MAAM,IAAI,EAAE,CAAA;IAEtB,QAAA,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAA;IAElB,QAAA,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAA;YAC9C,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAA;SAC1C;IAED,IAAA,IAAI,IAAI,GAAM,EAAA,OAAO,QAAQ,CAAA,EAAE;IAC/B,IAAA,IAAI,SAAS,GAAM,EAAA,OAAO,QAAQ,CAAA,EAAE;QAEpC,WAAW,GAAA;YACT,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAA;YACvC,KAAK,CAAC,WAAW,EAAE,CAAA;SACpB;QAED,SAAS,GAAA;YACP,OAAO,IAAIT,aAAO,EAAE,CAAA;SACrB;IACF;;ICtCD;;;;IAIG;IAOH;IACA;IAEA,MAAMqF,cAAY,GAAG,KAAK,CAAA;IAC1B,MAAM,oBAAoB,GAAG,mCAAmC,CAAA;IAChE,MAAM,oBAAoB,GAAG,cAAc,CAAA;IAc3C,MAAM,UAAW,SAAQ,YAAY,CAAA;IACnC,IAAA,IAAI,IAAI,GAAM,EAAA,OAAO,MAAM,CAAA,EAAE;QAE7B,MAAM,GAAA;;IAGJ,QAAA,IAAI5E,aAAK;gBAAE,GAAG,CAAC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;IAErD,QAAA,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAA;YACrB,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;YAC9C,MAAM,MAAM,GAAoB,EAAE,CAAA;IAElC,QAAA,MAAM,WAAW,GAAG,oBAAoB,GAAG,IAAI,CAAC,SAAS,CAAA;IAEzD,QAAA,SAAS,CAAC,CAAE,CAAS,EAAE,CAAS,EAAA;IAC9B,YAAA,IAAI,KAAK,GAAG,WAAW,CAAE,CAAC,CAAE,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC4E,cAAY,CAAC,CAAE,CAAC,CAAE,CAAA;IAC5D,YAAA,OAAO,UAAU,CAAC,KAAK,CAAC,CAAA;aACzB;IAED,QAAA,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;IACpC,QAAA,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,oBAAoB,CAAA;YAC/C,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,oBAAoB,CAAA;YAC/C,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,oBAAoB,CAAA;YAC/C,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YACpB,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YACpB,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YAEpB,MAAM,CAAC,MAAM,GAAG,IAAItF,aAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBACnD,cAAc,CAAC,WAAW,CAAC,CAAA;YAC9B,MAAM,CAAC,MAAM,GAAG,IAAIA,aAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBACnD,cAAc,CAAC,WAAW,CAAC,CAAA;YAC9B,MAAM,CAAC,MAAM,GAAG,IAAIA,aAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBACnD,cAAc,CAAC,WAAW,CAAC,CAAA;IAE9B,QAAA,MAAM,IAAI,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,CAAA;YACnE,IAAI,KAAK,GAAG,CAAC,CAAA;YACb,IAAI,MAAM,GAAG,CAAC,CAAA;IACd,QAAA,MAAM,YAAY,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;IAExC,QAAA,SAAS,kBAAkB,CAAE,EAAU,EAAE,EAAU,EAAE,KAAe,EAAA;gBAClE,KAAK,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;oBAC5B,MAAM,IAAI,GAAG,KAAK,CAAE,CAAC,CAAE,CAAC,IAAI,EAAE,CAAA;IAE9B,gBAAA,IAAI,IAAI,KAAK,EAAE,IAAI,MAAM,IAAI,MAAM,CAAC,SAAU,GAAG,CAAC,GAAG,YAAY,EAAE;wBACjE,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAqB,CAAA;IAC9D,oBAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;4BAC1C,IAAI,CAAE,KAAK,CAAE,GAAG,UAAU,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAA;IAClC,wBAAA,EAAE,KAAK,CAAA;IACR,qBAAA;IACF,iBAAA;IAED,gBAAA,EAAE,MAAM,CAAA;IACT,aAAA;aACF;YAED,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,UAAU,KAAK,6BAA0B;gBACtE,kBAAkB,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;IAC5C,SAAC,CAAC,CAAA;IAEF,QAAA,CAAC,CAAC,MAAM,GAAG,MAAM,CAAA;IACjB,QAAA,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,CAAA;IAEnD,QAAA,IAAIU,aAAK;gBAAE,GAAG,CAAC,OAAO,CAAC,oBAAoB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;SACzD;QAED,SAAS,GAAA;IACP,QAAA,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAA;IAC5B,QAAA,MAAM,MAAM,GAAG,IAAIT,aAAO,EAAE,CAAA;YAE5B,MAAM,CAAC,QAAQ,CACb,IAAIA,aAAO,EAAE,CAAC,eAAe,CAC3B,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,CAChC,CACF,CAAA;YAED,MAAM,CAAC,QAAQ,CACb,IAAIA,aAAO,EAAE,CAAC,SAAS,CACrB,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAC7B,CACF,CAAA;IAED,QAAA,OAAO,MAAM,CAAA;SACd;IACF,CAAA;IAED,cAAc,CAAC,GAAG,CAAC,KAAK,EAAE,UAAU,CAAC,CAAA;IACrC,cAAc,CAAC,GAAG,CAAC,MAAM,EAAE,UAAU,CAAC;;ICpHtC;;;;IAIG;IA4BH,MAAM,UAAW,SAAQ,YAAY,CAAA;IACnC,IAAA,IAAI,IAAI,GAAM,EAAA,OAAO,MAAM,CAAA,EAAE;IAC7B,IAAA,IAAI,QAAQ,GAAM,EAAA,OAAO,IAAI,CAAA,EAAE;QAE/B,MAAM,GAAA;;;IAIJ,QAAA,IAAIS,aAAK;gBAAE,GAAG,CAAC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;IAErD,QAAA,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAA;YACrB,MAAM,MAAM,GAAwB,EAAE,CAAA;YACtC,IAAI,OAAO,EAAE,OAAO,CAAA;YAEpB,MAAM,GAAG,GAAG,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;IAC5C,QAAA,MAAM,OAAO,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC,CAAA;IACnC,QAAA,MAAM,QAAQ,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC,CAAA;IACpC,QAAA,MAAM,OAAO,GAAG,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAA;IAE1E,QAAA,IAAI,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;IAC7B,YAAA,MAAM,CAAC,MAAM,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAA;IAC/C,YAAA,MAAM,CAAC,MAAM,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAA;IAC/C,YAAA,MAAM,CAAC,MAAM,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAA;IAE/C,YAAA,MAAM,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAA;IAChD,YAAA,MAAM,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAA;IAChD,YAAA,MAAM,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAA;IAEhD,YAAA,MAAM,CAAC,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAA;IAC9C,YAAA,MAAM,CAAC,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAA;IAC9C,YAAA,MAAM,CAAC,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAA;IAE9C,YAAA,MAAM,CAAC,IAAI,GAAG,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAA;IACjE,YAAA,MAAM,CAAC,IAAI,GAAG,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAA;IACjE,YAAA,MAAM,CAAC,IAAI,GAAG,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAA;IAEjE,YAAA,MAAM,CAAC,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAA;IAClD,YAAA,MAAM,CAAC,IAAI,GAAG,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAA;IACjD,YAAA,MAAM,CAAC,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAA;IAElD,YAAA,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,GAAG,GAAG,CAAA;IACnD,YAAA,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;IAE1C,YAAA,MAAM,CAAC,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,GAAG,GAAG,CAAA;IACzD,SAAA;IAAM,aAAA;;IAEL,YAAA,IAAI,OAAO,CAAE,EAAE,CAAE,KAAK,GAAG,EAAE;IACzB,gBAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;IAC9C,oBAAA,MAAM,GAAG,GAAG,OAAO,CAAE,CAAC,CAAE,CAAA;wBACxB,OAAO,CAAE,CAAC,CAAE,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,CAAA;IACzD,iBAAA;IACF,aAAA;gBAED,MAAM,CAAC,MAAM,GAAG,OAAO,CAAE,CAAC,CAAE,CAAA;IAC5B,YAAA,MAAM,CAAC,MAAM,GAAG,OAAO,CAAE,CAAC,CAAE,CAAA;IAC5B,YAAA,MAAM,CAAC,MAAM,GAAG,OAAO,CAAE,CAAC,CAAE,CAAA;gBAE5B,MAAM,CAAC,OAAO,GAAG,OAAO,CAAE,CAAC,CAAE,CAAA;IAC7B,YAAA,MAAM,CAAC,OAAO,GAAG,OAAO,CAAE,CAAC,CAAE,CAAA;IAC7B,YAAA,MAAM,CAAC,OAAO,GAAG,OAAO,CAAE,CAAC,CAAE,CAAA;gBAE7B,MAAM,CAAC,KAAK,GAAG,OAAO,CAAE,CAAC,CAAE,CAAA;IAC3B,YAAA,MAAM,CAAC,KAAK,GAAG,OAAO,CAAE,CAAC,CAAE,CAAA;IAC3B,YAAA,MAAM,CAAC,KAAK,GAAG,OAAO,CAAE,CAAC,CAAE,CAAA;gBAE3B,MAAM,MAAM,GAAG,CAAC,GAAG,OAAO,CAAE,EAAE,CAAE,CAAA;IAChC,YAAA,MAAM,aAAa,GAAG,MAAM,GAAG,IAAI,CAAC,SAAS,CAAA;gBAE7C,MAAM,CAAC,IAAI,GAAG,OAAO,CAAE,CAAC,CAAE,GAAG,aAAa,CAAA;gBAC1C,MAAM,CAAC,IAAI,GAAG,OAAO,CAAE,EAAE,CAAE,GAAG,aAAa,CAAA;gBAC3C,MAAM,CAAC,IAAI,GAAG,OAAO,CAAE,EAAE,CAAE,GAAG,aAAa,CAAA;gBAE3C,MAAM,CAAC,KAAK,GAAG,OAAO,CAAE,EAAE,CAAE,GAAG,MAAM,CAAA;gBACrC,MAAM,CAAC,IAAI,GAAG,OAAO,CAAE,EAAE,CAAE,GAAG,MAAM,CAAA;gBACpC,MAAM,CAAC,KAAK,GAAG,OAAO,CAAE,EAAE,CAAE,GAAG,MAAM,CAAA;IAErC,YAAA,OAAO,GAAG,OAAO,CAAE,EAAE,CAAE,GAAG,GAAG,CAAA;IAC7B,YAAA,OAAO,GAAG,OAAO,CAAE,EAAE,CAAE,CAAA;gBACvB,MAAM,CAAC,KAAK,GAAG,OAAO,CAAE,EAAE,CAAE,GAAG,MAAM,CAAA;IACtC,SAAA;IAED,QAAA,CAAC,CAAC,MAAM,GAAG,MAAM,CAAA;IAEjB,QAAA,IAAIA,aAAK;gBAAE,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,CAAC,CAAA;IAE5C,QAAA,MAAM,IAAI,GAAG,IAAI,YAAY,CAC3B,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CACjD,CAAA;YAED,IAAI,MAAM,GAAG,GAAG,CAAA;IAChB,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC,CAAA;IAC7C,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC,CAAA;IAC7C,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC,CAAA;;YAG7C,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,OAAO,EAAE,EAAE,EAAE,EAAE;gBACnC,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,OAAO,EAAE,EAAE,EAAE,EAAE;oBACnC,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,OAAO,EAAE,EAAE,EAAE,EAAE;;wBAEnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;IAC1B,wBAAA,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;4BAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;IAC1B,4BAAA,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;gCAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;IAC1B,gCAAA,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;;IAGlB,gCAAA,IAAI,CAAC,GAAG,MAAM,CAAC,OAAO,IAAI,CAAC,GAAG,MAAM,CAAC,OAAO,IAAI,CAAC,GAAG,MAAM,CAAC,OAAO,EAAE;wCAClE,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,OAAO,IAAI,CAAC,IAAI,MAAM,CAAC,OAAO,IAAI,CAAC,CAAC,CAAA;IAC7D,oCAAA,IAAI,CAAE,GAAG,CAAE,GAAG,CAAC,QAAQ,CAAE,MAAM,CAAE,GAAG,OAAO,IAAI,OAAO,CAAA;IACtD,oCAAA,EAAE,MAAM,CAAA;IACT,iCAAA;IAAM,qCAAA;IACL,oCAAA,MAAM,IAAI,CAAC,GAAG,CAAC,CAAA;wCACf,MAAK;IACN,iCAAA;IACF,6BAAA;IACF,yBAAA;IACF,qBAAA;IACF,iBAAA;IACF,aAAA;IACF,SAAA;IAED,QAAA,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC,CAAA;YAC/D,IAAI,MAAM,CAAC,KAAK,EAAE;IAChB,YAAA,CAAC,CAAC,QAAQ,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,CAAC,KAAK,CAAC,CAAA;IAC1D,SAAA;IAED,QAAA,IAAIA,aAAK;gBAAE,GAAG,CAAC,OAAO,CAAC,oBAAoB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;SACzD;QAED,SAAS,GAAA;IACP,QAAA,MAAM,CAAC,GAAe,IAAI,CAAC,MAAM,CAAC,MAAM,CAAA;IAExC,QAAA,MAAM,MAAM,GAAG;IACb,YAAA,CAAC,CAAC,IAAc;gBAChB,CAAC;gBACD,CAAC;aACF,CAAA;IAED,QAAA,MAAM,MAAM,GAAG;IACb,YAAA,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;IAC5C,YAAA,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;gBAC5C,CAAC;aACF,CAAA;IAED,QAAA,MAAM,MAAM,GAAG;IACb,YAAA,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC;IAC3C,YAAA,CAAC,CAAC,IAAI,IACJ,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;IACnC,gBAAA,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;IACnC,oBAAA,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CACnC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;gBACvC,CAAC;aACF,CAAA;IACD,QAAA,MAAM,CAAE,CAAC,CAAE,GAAG,IAAI,CAAC,IAAI,CACrB,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC;gBACpD,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,MAAM,CAAE,CAAC,CAAE,GAAG,MAAM,CAAE,CAAC,CAAE,CAC/D,CAAA;YAED,MAAM,KAAK,GAAG,CAAE,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAE,CAAA;IAC5C,QAAA,MAAM,IAAI,GAAG,CAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,CAAE,CAAA;YAC7C,MAAM,MAAM,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAA;IAE7B,QAAA,MAAM,MAAM,GAAG,IAAIT,aAAO,EAAE,CAAA;YAE5B,MAAM,CAAC,GAAG,CACR,KAAK,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,EACzC,KAAK,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,EACzC,KAAK,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,EACzC,CAAC,EACD,KAAK,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,EACzC,KAAK,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,EACzC,KAAK,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,EACzC,CAAC,EACD,KAAK,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,EACzC,KAAK,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,EACzC,KAAK,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,EACzC,CAAC,EACD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CACX,CAAA;IAED,QAAA,MAAM,CAAC,QAAQ,CACb,IAAIA,aAAO,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAC1C,CAAA;YAED,MAAM,CAAC,QAAQ,CAAC,IAAIA,aAAO,EAAE,CAAC,eAAe,CAC3C,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAC9B,CAAC,CAAA;IAEF,QAAA,MAAM,CAAC,QAAQ,CAAC,IAAIA,aAAO,EAAE,CAAC,SAAS,CACrC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CACT,CAAC,CAAA;IAEF,QAAA,OAAO,MAAM,CAAA;SACd;IACF,CAAA;IAED,cAAc,CAAC,GAAG,CAAC,MAAM,EAAE,UAAU,CAAC,CAAA;IACtC,cAAc,CAAC,GAAG,CAAC,MAAM,EAAE,UAAU,CAAC;;ICtOtC;;;;IAIG;IAQH,MAAMqF,cAAY,GAAG,KAAK,CAAA;IAc1B,MAAM,QAAS,SAAQ,YAAY,CAAA;IACjC,IAAA,IAAI,IAAI,GAAM,EAAA,OAAO,IAAI,CAAA,EAAE;QAE3B,MAAM,GAAA;;IAGJ,QAAA,IAAI5E,aAAK;gBAAE,GAAG,CAAC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;IAEnD,QAAA,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAA;YACrB,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,CAAC,CAAA;YAC/C,MAAM,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAA;IACrD,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAA;IACjC,QAAA,MAAM,aAAa,GAAG,UAAU,CAAC,aAAa,CAAA;IAE9C,QAAA,MAAM,IAAI,GAAG,MAAM,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAA;IAC9C,QAAA,MAAM,IAAI,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,CAAA;YACnC,IAAI,KAAK,GAAG,CAAC,CAAA;YACb,IAAI,MAAM,GAAG,CAAC,CAAA;IAEd,QAAA,SAAS,kBAAkB,CAAE,EAAU,EAAE,EAAU,EAAE,KAAgB,EAAA;gBACnE,KAAK,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;IAC5B,gBAAA,IAAI,KAAK,GAAG,IAAI,IAAI,MAAM,GAAG,aAAa,EAAE;wBAC1C,MAAM,IAAI,GAAG,KAAK,CAAE,CAAC,CAAE,CAAC,IAAI,EAAE,CAAA;wBAE9B,IAAI,IAAI,KAAK,EAAE,EAAE;4BACf,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC4E,cAAY,CAAC,CAAA;IAEnC,wBAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;gCAC3C,IAAI,CAAE,KAAK,CAAE,GAAG,UAAU,CAAC,EAAE,CAAE,CAAC,CAAE,CAAC,CAAA;IACnC,4BAAA,EAAE,KAAK,CAAA;IACR,yBAAA;IACF,qBAAA;IACF,iBAAA;IAED,gBAAA,EAAE,MAAM,CAAA;IACT,aAAA;aACF;YAED,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,UAAU,KAAK,6BAA0B;gBACtE,kBAAkB,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;IAC5C,SAAC,CAAC,CAAA;IAEF,QAAA,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,CAAC,CAAA;IAEhD,QAAA,IAAI5E,aAAK;gBAAE,GAAG,CAAC,OAAO,CAAC,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;SACvD;IAED,IAAA,gBAAgB,CAAE,WAAsB,EAAA;YACtC,MAAM,MAAM,GAAsB,EAAE,CAAA;IACpC,QAAA,MAAM,CAAC,GAAG,WAAW,CAAC,MAAM,CAAA;YAE5B,IAAI,aAAa,GAAG,CAAC,CAAA;YACrB,IAAI,eAAe,GAAG,CAAC,CAAA;YACvB,IAAI,cAAc,GAAG,CAAC,CAAA;YAEtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;IAC1B,YAAA,IAAI,EAAE,CAAA;IACN,YAAA,MAAM,IAAI,GAAG,WAAW,CAAE,CAAC,CAAE,CAAA;IAE7B,YAAA,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE;IAC/B,gBAAA,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC4E,cAAY,CAAC,CAAA;oBAE7B,MAAM,CAAC,EAAE,GAAG,QAAQ,CAAC,EAAE,CAAE,CAAC,CAAE,CAAC,CAAA;oBAC7B,MAAM,CAAC,EAAE,GAAG,QAAQ,CAAC,EAAE,CAAE,CAAC,CAAE,CAAC,CAAA;oBAC7B,MAAM,CAAC,EAAE,GAAG,QAAQ,CAAC,EAAE,CAAE,CAAC,CAAE,CAAC,CAAA;IAC9B,aAAA;IAAM,iBAAA,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;IACpC,gBAAA,EAAE,GAAG,IAAI,CAAC,KAAK,CAACA,cAAY,CAAC,CAAA;oBAE7B,MAAM,CAAC,IAAI,GAAG,UAAU,CAAC,EAAE,CAAE,CAAC,CAAE,CAAC,CAAA;oBACjC,MAAM,CAAC,IAAI,GAAG,UAAU,CAAC,EAAE,CAAE,CAAC,CAAE,CAAC,CAAA;oBACjC,MAAM,CAAC,IAAI,GAAG,UAAU,CAAC,EAAE,CAAE,CAAC,CAAE,CAAC,CAAA;IAClC,aAAA;IAAM,iBAAA,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;IACnC,gBAAA,EAAE,GAAG,IAAI,CAAC,KAAK,CAACA,cAAY,CAAC,CAAA;oBAE7B,IAAI,cAAc,KAAK,CAAC,EAAE;IACxB,oBAAA,MAAM,CAAC,EAAE,GAAG,UAAU,CAAC,EAAE,CAAE,CAAC,CAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAA;IACjD,iBAAA;yBAAM,IAAI,cAAc,KAAK,CAAC,EAAE;IAC/B,oBAAA,MAAM,CAAC,EAAE,GAAG,UAAU,CAAC,EAAE,CAAE,CAAC,CAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAA;IACjD,iBAAA;yBAAM,IAAI,cAAc,KAAK,CAAC,EAAE;IAC/B,oBAAA,MAAM,CAAC,EAAE,GAAG,UAAU,CAAC,EAAE,CAAE,CAAC,CAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAA;IACjD,iBAAA;oBAED,cAAc,IAAI,CAAC,CAAA;IACpB,aAAA;IAAM,iBAAA,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE;oBACtC,aAAa,GAAG,CAAC,CAAA;IACjB,gBAAA,eAAe,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAA;oBAClC,MAAK;IACN,aAAA;IAED,YAAA,eAAe,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAA;IACnC,SAAA;IAED,QAAA,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAA;YAE3B,OAAO;IACL,YAAA,aAAa,EAAE,aAAa;IAC5B,YAAA,eAAe,EAAE,eAAe;aACjC,CAAA;SACF;QAED,SAAS,GAAA;IACP,QAAA,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAA;IAC5B,QAAA,MAAM,MAAM,GAAG,IAAIrF,aAAO,EAAE,CAAA;IAE5B,QAAA,MAAM,CAAC,QAAQ,CACb,IAAIA,aAAO,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAC1C,CAAA;YAED,MAAM,CAAC,QAAQ,CACb,IAAIA,aAAO,EAAE,CAAC,eAAe,CAC3B,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CACxB,CACF,CAAA;YAED,MAAM,CAAC,QAAQ,CACb,IAAIA,aAAO,EAAE,CAAC,SAAS,CACrB,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAClB,CACF,CAAA;IAED,QAAA,OAAO,MAAM,CAAA;SACd;IACF,CAAA;IAED,cAAc,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC;;ICtJlC;;;;IAIG;IAMH,MAAM,WAAY,SAAQ,QAAQ,CAAA;IAChC,IAAA,IAAI,IAAI,GAAM,EAAA,OAAO,OAAO,CAAA,EAAE;IAC9B,IAAA,IAAI,QAAQ,GAAM,EAAA,OAAO,IAAI,CAAA,EAAE;QAE/B,MAAM,GAAA;;IAGJ,QAAA,IAAIS,aAAK;gBAAE,GAAG,CAAC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;YAEtD,MAAM,GAAG,GAAG,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;IAC5C,QAAA,MAAM,WAAW,GAAG,YAAY,CAAC,IAAI,UAAU,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAA;YAC9D,MAAM,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAA;IACrD,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAA;IACjC,QAAA,MAAM,eAAe,GAAG,UAAU,CAAC,eAAe,CAAA;IAElD,QAAA,MAAM,IAAI,GAAG,MAAM,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAA;IAC9C,QAAA,MAAM,EAAE,GAAG,IAAI,QAAQ,CAAC,GAAG,CAAC,CAAA;IAC5B,QAAA,MAAM,IAAI,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,CAAA;YAEnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,EAAE;IAC7B,YAAA,IAAI,CAAE,CAAC,CAAE,GAAG,EAAE,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,GAAG,eAAe,EAAE,IAAI,CAAC,CAAA;IACzD,SAAA;IAED,QAAA,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,CAAC,CAAA;IAE1D,QAAA,IAAIA,aAAK;gBAAE,GAAG,CAAC,OAAO,CAAC,qBAAqB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;SAC1D;IACF,CAAA;IAED,cAAc,CAAC,GAAG,CAAC,OAAO,EAAE,WAAW,CAAC;;ICvCxC;;;;IAIG;IA0CH,MAAM,SAAU,SAAQ,YAAY,CAAA;IAClC,IAAA,IAAI,IAAI,GAAM,EAAA,OAAO,KAAK,CAAA,EAAE;IAC5B,IAAA,IAAI,QAAQ,GAAM,EAAA,OAAO,IAAI,CAAA,EAAE;QAE/B,MAAM,GAAA;;;;;;;;;IAYJ,QAAA,IAAIA,aAAK;gBAAE,GAAG,CAAC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;IAEpD,QAAA,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAA;YACrB,MAAM,MAAM,GAAuB,EAAE,CAAA;YAErC,MAAM,GAAG,GAAG,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;YAC5C,MAAM,OAAO,GAAG,IAAI,UAAU,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAA;YAC1C,MAAM,SAAS,GAAG,IAAI,YAAY,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAA;IAC9C,QAAA,MAAM,EAAE,GAAG,IAAI,QAAQ,CAAC,GAAG,CAAC,CAAA;;YAG5B,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,YAAY,CAC9B,EAAE,CAAC,QAAQ,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,QAAQ,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,EAC5C,EAAE,CAAC,QAAQ,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,QAAQ,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CACjD,CAAA;;;YAID,MAAM,CAAC,MAAM,GAAG,CAAE,EAAE,CAAC,QAAQ,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,QAAQ,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAE,CAAA;;IAGhE,QAAA,IAAI,MAAM,CAAC,MAAM,CAAE,CAAC,CAAE,KAAK,EAAE,IAAI,MAAM,CAAC,MAAM,CAAE,CAAC,CAAE,KAAK,EAAE,EAAE;IAC1D,YAAA,MAAM,CAAC,GAAG,GAAG,CAAC,UAAU,CAAA;IACxB,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;IAC7B,gBAAA,EAAE,CAAC,UAAU,CAAC,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;IACzC,aAAA;IACF,SAAA;YAED,MAAM,CAAC,EAAE,GAAG,OAAO,CAAE,CAAC,CAAE,CAAA;YACxB,MAAM,CAAC,EAAE,GAAG,OAAO,CAAE,CAAC,CAAE,CAAA;YACxB,MAAM,CAAC,EAAE,GAAG,OAAO,CAAE,CAAC,CAAE,CAAA;;;;;;;;;;;;IAaxB,QAAA,MAAM,CAAC,IAAI,GAAG,OAAO,CAAE,CAAC,CAAE,CAAA;;YAG1B,MAAM,CAAC,OAAO,GAAG,OAAO,CAAE,CAAC,CAAE,CAAA;YAC7B,MAAM,CAAC,OAAO,GAAG,OAAO,CAAE,CAAC,CAAE,CAAA;YAC7B,MAAM,CAAC,OAAO,GAAG,OAAO,CAAE,CAAC,CAAE,CAAA;;YAG7B,MAAM,CAAC,EAAE,GAAG,OAAO,CAAE,CAAC,CAAE,CAAA;YACxB,MAAM,CAAC,EAAE,GAAG,OAAO,CAAE,CAAC,CAAE,CAAA;YACxB,MAAM,CAAC,EAAE,GAAG,OAAO,CAAE,CAAC,CAAE,CAAA;;YAGxB,MAAM,CAAC,IAAI,GAAG,SAAS,CAAE,EAAE,CAAE,GAAG,IAAI,CAAC,SAAS,CAAA;YAC9C,MAAM,CAAC,IAAI,GAAG,SAAS,CAAE,EAAE,CAAE,GAAG,IAAI,CAAC,SAAS,CAAA;YAC9C,MAAM,CAAC,IAAI,GAAG,SAAS,CAAE,EAAE,CAAE,GAAG,IAAI,CAAC,SAAS,CAAA;;IAG9C,QAAA,MAAM,CAAC,KAAK,GAAG,SAAS,CAAE,EAAE,CAAE,CAAA;IAC9B,QAAA,MAAM,CAAC,IAAI,GAAG,SAAS,CAAE,EAAE,CAAE,CAAA;IAC7B,QAAA,MAAM,CAAC,KAAK,GAAG,SAAS,CAAE,EAAE,CAAE,CAAA;;YAG9B,MAAM,CAAC,IAAI,GAAG,OAAO,CAAE,EAAE,CAAE,CAAA;YAC3B,MAAM,CAAC,IAAI,GAAG,OAAO,CAAE,EAAE,CAAE,CAAA;YAC3B,MAAM,CAAC,IAAI,GAAG,OAAO,CAAE,EAAE,CAAE,CAAA;;IAG3B,QAAA,MAAM,CAAC,IAAI,GAAG,SAAS,CAAE,EAAE,CAAE,CAAA;IAC7B,QAAA,MAAM,CAAC,IAAI,GAAG,SAAS,CAAE,EAAE,CAAE,CAAA;IAC7B,QAAA,MAAM,CAAC,KAAK,GAAG,SAAS,CAAE,EAAE,CAAE,CAAA;;IAG9B,QAAA,MAAM,CAAC,IAAI,GAAG,OAAO,CAAE,EAAE,CAAE,CAAA;;IAG3B,QAAA,MAAM,CAAC,MAAM,GAAG,OAAO,CAAE,EAAE,CAAE,CAAA;;IAG7B,QAAA,MAAM,CAAC,MAAM,GAAG,OAAO,CAAE,EAAE,CAAE,CAAA;;;;;;;;;;;;;IAgB7B,QAAA,MAAM,CAAC,OAAO,GAAG,SAAS,CAAE,EAAE,CAAE,CAAA;IAChC,QAAA,MAAM,CAAC,OAAO,GAAG,SAAS,CAAE,EAAE,CAAE,CAAA;IAChC,QAAA,MAAM,CAAC,OAAO,GAAG,SAAS,CAAE,EAAE,CAAE,CAAA;;;;;;IAShC,QAAA,MAAM,CAAC,IAAI,GAAG,SAAS,CAAE,EAAE,CAAE,CAAA;;;IAK7B,QAAA,CAAC,CAAC,MAAM,GAAG,MAAM,CAAA;;IAIjB,QAAA,IAAI,IAAI,CAAA;IACR,QAAA,IAAI,MAAM,CAAC,IAAI,KAAK,CAAC,EAAE;gBACrB,IAAI,GAAG,IAAI,YAAY,CACrB,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM,EAC5B,MAAM,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAClC,CAAA;IACF,SAAA;IAAM,aAAA,IAAI,MAAM,CAAC,IAAI,KAAK,CAAC,EAAE;IAC5B,YAAA,IAAI,GAAG,IAAI,YAAY,CAAC,IAAI,SAAS,CACnC,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM,EAC5B,MAAM,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAClC,CAAC,CAAA;;;IAIF,YAAA,IAAI,OAAO,CAAE,EAAE,CAAE,KAAK,CAAC,GAAG,IAAI,OAAO,CAAE,EAAE,CAAE,KAAK,GAAG,EAAE;;IAEnD,gBAAA,MAAM,EAAE,GAAG,CAAC,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,IAAI,KAAK,CAAA;IAC9C,gBAAA,MAAM,EAAE,GAAG,GAAG,IAAI,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,GAAG,EAAE,CAAC,CAAA;IACjD,gBAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;IAC7C,oBAAA,IAAI,CAAE,CAAC,CAAE,GAAG,EAAE,GAAG,IAAI,CAAE,CAAC,CAAE,GAAG,EAAE,CAAA;IAChC,iBAAA;IACF,aAAA;IACF,SAAA;IAAM,aAAA;gBACL,GAAG,CAAC,KAAK,CAAC,wBAAwB,EAAE,MAAM,CAAC,IAAI,CAAC,CAAA;IACjD,SAAA;IAED,QAAA,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,CAAC,CAAA;IAChD,QAAA,IAAI,MAAM,CAAC,IAAI,KAAK,CAAC,EAAE;IACrB,YAAA,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,CAAA;IAChE,SAAA;IAED,QAAA,IAAIA,aAAK;gBAAE,GAAG,CAAC,OAAO,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;SACxD;QAED,SAAS,GAAA;IACP,QAAA,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAA;IAE5B,QAAA,MAAM,MAAM,GAAG;IACb,YAAA,CAAC,CAAC,IAAI;gBACN,CAAC;gBACD,CAAC;aACF,CAAA;IAED,QAAA,MAAM,MAAM,GAAG;IACb,YAAA,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;IAC5C,YAAA,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;gBAC5C,CAAC;aACF,CAAA;IAED,QAAA,MAAM,MAAM,GAAG;IACb,YAAA,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC;IAC3C,YAAA,CAAC,CAAC,IAAI,IACJ,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;IACnC,gBAAA,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;IACnC,oBAAA,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CACnC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;gBACvC,CAAC;aACF,CAAA;IACD,QAAA,MAAM,CAAE,CAAC,CAAE,GAAG,IAAI,CAAC,IAAI,CACrB,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC;gBACpD,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,MAAM,CAAE,CAAC,CAAE,GAAG,MAAM,CAAE,CAAC,CAAE,CAC/D,CAAA;YAED,MAAM,KAAK,GAAG,CAAE,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAE,CAAA;IAC5C,QAAA,MAAM,IAAI,GAAG,CAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAE,CAAA;IACpC,QAAA,MAAM,MAAM,GAAG,CAAE,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAE,CAAA;IAE5C,QAAA,MAAM,MAAM,GAAG,IAAIT,aAAO,EAAE,CAAA;YAE5B,MAAM,CAAC,GAAG,CACR,KAAK,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,EACzC,KAAK,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,EACzC,KAAK,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,EACzC,CAAC,EACD,KAAK,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,EACzC,KAAK,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,EACzC,KAAK,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,EACzC,CAAC,EACD,KAAK,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,EACzC,KAAK,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,EACzC,KAAK,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,EACzC,CAAC,EACD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CACX,CAAA;IAED,QAAA,MAAM,CAAC,WAAW,CAAC,IAAID,aAAO,CAC5B,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,CAChC,CAAC,CAAA;YAEF,MAAM,CAAC,QAAQ,CAAC,IAAIC,aAAO,EAAE,CAAC,eAAe,CAC3C,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,CAChC,CAAC,CAAA;IAEF,QAAA,OAAO,MAAM,CAAA;SACd;IACF,CAAA;IAED,cAAc,CAAC,GAAG,CAAC,KAAK,EAAE,SAAS,CAAC,CAAA;IACpC,cAAc,CAAC,GAAG,CAAC,MAAM,EAAE,SAAS,CAAC,CAAA;IACrC,cAAc,CAAC,GAAG,CAAC,KAAK,EAAE,SAAS,CAAC;;ICvRpC;;;;IAIG;IAOH,MAAM,YAAY,GAAG,KAAK,CAAA;IAE1B,SAAS,eAAe,CAAE,IAAY,EAAA;IACpC,IAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAA;IACxD,CAAC;IAsBD,MAAM,WAAY,SAAQ,YAAY,CAAA;IACpC,IAAA,IAAI,IAAI,GAAM,EAAA,OAAO,OAAO,CAAA,EAAE;QAE9B,MAAM,GAAA;;;IAIJ,QAAA,IAAIS,aAAK;gBAAE,GAAG,CAAC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;IAEtD,QAAA,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAA;YACrB,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;YAC9C,MAAM,MAAM,GAAyB,EAAE,CAAA;IAEvC,QAAA,IAAI,SAAS,CAAA;YACb,IAAI,WAAW,CAAE,CAAC,CAAE,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE;IAC1C,YAAA,SAAS,GAAG,QAAQ,CAAC,WAAW,CAAE,CAAC,CAAE,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;IAC3D,SAAA;IAAM,aAAA;gBACL,SAAS,GAAG,CAAC,CAAA;IACd,SAAA;IACD,QAAA,MAAM,SAAS,GAAG,SAAS,GAAG,CAAC,CAAA;YAE/B,MAAM,QAAQ,GAAG,eAAe,CAAC,WAAW,CAAE,SAAS,CAAE,CAAC,CAAA;IAC1D,QAAA,MAAM,CAAC,EAAE,GAAG,QAAQ,CAAE,CAAC,CAAE,CAAA;IACzB,QAAA,MAAM,CAAC,IAAI,GAAG,QAAQ,CAAE,CAAC,CAAE,CAAA;IAC3B,QAAA,MAAM,CAAC,IAAI,GAAG,QAAQ,CAAE,CAAC,CAAE,CAAA;IAC3B,QAAA,MAAM,CAAC,EAAE,GAAG,QAAQ,CAAE,CAAC,CAAE,CAAA;IACzB,QAAA,MAAM,CAAC,IAAI,GAAG,QAAQ,CAAE,CAAC,CAAE,CAAA;IAC3B,QAAA,MAAM,CAAC,IAAI,GAAG,QAAQ,CAAE,CAAC,CAAE,CAAA;IAC3B,QAAA,MAAM,CAAC,EAAE,GAAG,QAAQ,CAAE,CAAC,CAAE,CAAA;IACzB,QAAA,MAAM,CAAC,IAAI,GAAG,QAAQ,CAAE,CAAC,CAAE,CAAA;IAC3B,QAAA,MAAM,CAAC,IAAI,GAAG,QAAQ,CAAE,CAAC,CAAE,CAAA;YAE3B,MAAM,QAAQ,GAAG,eAAe,CAAC,WAAW,CAAE,SAAS,GAAG,CAAC,CAAE,CAAC,CAAA;YAC9D,MAAM,CAAC,CAAC,GAAG,QAAQ,CAAE,CAAC,CAAE,GAAG,IAAI,CAAC,SAAS,CAAA;YACzC,MAAM,CAAC,CAAC,GAAG,QAAQ,CAAE,CAAC,CAAE,GAAG,IAAI,CAAC,SAAS,CAAA;YACzC,MAAM,CAAC,CAAC,GAAG,QAAQ,CAAE,CAAC,CAAE,GAAG,IAAI,CAAC,SAAS,CAAA;IACzC,QAAA,MAAM,CAAC,KAAK,GAAG,QAAQ,CAAE,CAAC,CAAE,CAAA;IAC5B,QAAA,MAAM,CAAC,IAAI,GAAG,QAAQ,CAAE,CAAC,CAAE,CAAA;IAC3B,QAAA,MAAM,CAAC,KAAK,GAAG,QAAQ,CAAE,CAAC,CAAE,CAAA;YAE5B,MAAM,EAAE,GAAG,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,GAAG,CAAC,CAAA;YACxC,MAAM,EAAE,GAAG,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,GAAG,CAAC,CAAA;YACxC,MAAM,EAAE,GAAG,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,GAAG,CAAC,CAAA;IACxC,QAAA,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAA;IAEtB,QAAA,MAAM,IAAI,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,CAAA;IAChC,QAAA,MAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC,CAAA;YAChD,IAAI,KAAK,GAAG,CAAC,CAAA;YACb,IAAI,MAAM,GAAG,CAAC,CAAA;IAEd,QAAA,SAAS,kBAAkB,CAAE,EAAU,EAAE,EAAU,EAAE,KAAe,EAAA;gBAClE,KAAK,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;IAC5B,gBAAA,MAAM,IAAI,GAAG,KAAK,CAAE,CAAC,CAAE,CAAA;IAEvB,gBAAA,IAAI,MAAM,IAAI,SAAS,IAAI,CAAC,MAAM,GAAG,SAAS,IAAI,WAAW,KAAK,CAAC,IAAI,KAAK,GAAG,CAAC,EAAE;IAChF,oBAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;IACnC,wBAAA,MAAM,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,CAAA;IACjD,wBAAA,IAAI,KAAK,CAAC,KAAK,CAAC,EAAE;gCAAE,MAAK;IAAE,yBAAA;IAC3B,wBAAA,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,KAAK,CAAA;IACtB,qBAAA;IACF,iBAAA;yBAAM,IAAI,KAAK,KAAK,CAAC,EAAE;IACtB,oBAAA,MAAM,EAAE,GAAG,IAAI,CAAC,IAAI,EAAE,CAAA;IACtB,oBAAA,IAAI,EAAE,IAAI,EAAE,KAAK,OAAO,EAAE;IACxB,wBAAA,MAAM,EAAE,GAAG,eAAe,CAAC,IAAI,CAAC,CAAA;IAChC,wBAAA,MAAM,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;IACnB,wBAAA,MAAM,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;IACtB,qBAAA;IACF,iBAAA;IAED,gBAAA,EAAE,MAAM,CAAA;IACT,aAAA;aACF;YAED,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,UAAU,KAAK,6BAA0B;gBACtE,kBAAkB,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;IAC5C,SAAC,CAAC,CAAA;IAEF,QAAA,CAAC,CAAC,MAAM,GAAG,MAAM,CAAA;YACjB,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAA;YAC3B,IAAI,MAAM,CAAC,IAAI,KAAK,CAAC,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;IAC5C,YAAA,CAAC,CAAC,QAAQ,CAAC,SAAS,EAAE,SAAS,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,CAAA;IAC7D,SAAA;IAED,QAAA,IAAIA,aAAK;gBAAE,GAAG,CAAC,OAAO,CAAC,qBAAqB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;SAC1D;QAED,SAAS,GAAA;IACP,QAAA,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAA;IAE5B,QAAA,MAAM,MAAM,GAAG;IACb,YAAA,CAAC,CAAC,CAAC;gBACH,CAAC;gBACD,CAAC;aACF,CAAA;IAED,QAAA,MAAM,MAAM,GAAG;IACb,YAAA,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;IACzC,YAAA,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;gBACzC,CAAC;aACF,CAAA;IAED,QAAA,MAAM,MAAM,GAAG;IACb,YAAA,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC;IACxC,YAAA,CAAC,CAAC,CAAC,IACD,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;IACnC,gBAAA,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;IACnC,oBAAA,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CACnC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;gBACvC,CAAC;aACF,CAAA;IACD,QAAA,MAAM,CAAE,CAAC,CAAE,GAAG,IAAI,CAAC,IAAI,CACrB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC;gBAC9C,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,MAAM,CAAE,CAAC,CAAE,GAAG,MAAM,CAAE,CAAC,CAAE,CAC/D,CAAA;YAED,MAAM,KAAK,GAAG,CAAE,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAE,CAAA;IAC5C,QAAA,MAAM,IAAI,GAAG,CAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAE,CAAA;YACpC,MAAM,MAAM,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAA;IAE7B,QAAA,MAAM,MAAM,GAAG,IAAIT,aAAO,EAAE,CAAA;YAE5B,MAAM,CAAC,GAAG,CACR,KAAK,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,EACzC,KAAK,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,EACzC,KAAK,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,EACzC,CAAC,EACD,KAAK,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,EACzC,KAAK,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,EACzC,KAAK,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,EACzC,CAAC,EACD,KAAK,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,EACzC,KAAK,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,EACzC,KAAK,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAE,MAAM,CAAC,CAAC,CAAC,CAAE,EACzC,CAAC,EACD,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CACX,CAAA;YAED,MAAM,CAAC,QAAQ,CAAC,IAAIA,aAAO,EAAE,CAAC,eAAe,CAC3C,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CACvB,CAAC,CAAA;IAEF,QAAA,OAAO,MAAM,CAAA;SACd;IACF,CAAA;IAED,cAAc,CAAC,GAAG,CAAC,OAAO,EAAE,WAAW,CAAC,CAAA;IACxC,cAAc,CAAC,GAAG,CAAC,KAAK,EAAE,WAAW,CAAC;;ICvLtC;;;;IAIG;IAMH,SAAS,QAAQ,CAAE,CAAS,EAAE,CAAS,EAAE,CAAS,EAAA;QAChD,CAAC,IAAI,GAAG,CAAA;QACR,CAAC,IAAI,GAAG,CAAA;QACR,CAAC,IAAI,GAAG,CAAA;IACR,IAAA,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA;QACX,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;IAC3B,IAAA,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;QACnB,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA;QACrB,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAA;IACzB,IAAA,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAA;QAC/B,QAAQ,CAAC,GAAG,CAAC;IACX,QAAA,KAAK,CAAC;gBAAE,CAAC,GAAG,CAAC,CAAC;gBAAC,CAAC,GAAG,CAAC,CAAC;gBAAC,CAAC,GAAG,CAAC,CAAC;gBAAC,MAAK;IAClC,QAAA,KAAK,CAAC;gBAAE,CAAC,GAAG,CAAC,CAAC;gBAAC,CAAC,GAAG,CAAC,CAAC;gBAAC,CAAC,GAAG,CAAC,CAAC;gBAAC,MAAK;IAClC,QAAA,KAAK,CAAC;gBAAE,CAAC,GAAG,CAAC,CAAC;gBAAC,CAAC,GAAG,CAAC,CAAC;gBAAC,CAAC,GAAG,CAAC,CAAC;gBAAC,MAAK;IAClC,QAAA,KAAK,CAAC;gBAAE,CAAC,GAAG,CAAC,CAAC;gBAAC,CAAC,GAAG,CAAC,CAAC;gBAAC,CAAC,GAAG,CAAC,CAAC;gBAAC,MAAK;IAClC,QAAA,KAAK,CAAC;gBAAE,CAAC,GAAG,CAAC,CAAC;gBAAC,CAAC,GAAG,CAAC,CAAC;gBAAC,CAAC,GAAG,CAAC,CAAC;gBAAC,MAAK;IAClC,QAAA,KAAK,CAAC;gBAAE,CAAC,GAAG,CAAC,CAAC;gBAAC,CAAC,GAAG,CAAC,CAAC;gBAAC,CAAC,GAAG,CAAC,CAAC;gBAAC,MAAK;IACnC,KAAA;IACD,IAAA,OAAO,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAe,CAAA;IACjC,CAAC;IAED,MAAM,SAAS,GAA4B;QACzC,GAAG,EAAE,QAAQ,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;QAC1B,MAAM,EAAE,QAAQ,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;QAC9B,IAAI,EAAE,QAAQ,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;QAC5B,MAAM,EAAE,QAAQ,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;QAC9B,IAAI,EAAE,QAAQ,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;QAC5B,KAAK,EAAE,QAAQ,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;QAC7B,GAAG,EAAE,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QAC5B,IAAI,EAAE,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;QAC5B,GAAG,EAAE,QAAQ,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC;QAC1B,IAAI,EAAE,QAAQ,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;QAC5B,MAAM,EAAE,QAAQ,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;QAC9B,OAAO,EAAE,QAAQ,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;QAC/B,OAAO,EAAE,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QAChC,IAAI,EAAE,QAAQ,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;QAC5B,KAAK,EAAE,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;QAC5B,KAAK,EAAE,QAAQ,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;QAC7B,QAAQ,EAAE,QAAQ,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;QAChC,SAAS,EAAE,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;QAChC,UAAU,EAAE,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;QACjC,SAAS,EAAE,QAAQ,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;QACjC,QAAQ,EAAE,QAAQ,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;QAChC,SAAS,EAAE,QAAQ,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;QACjC,KAAK,EAAE,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;QAC1B,IAAI,EAAE,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;QACxB,KAAK,EAAE,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAC3B,IAAA,SAAS,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;IACtB,IAAA,SAAS,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;IACtB,IAAA,SAAS,EAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;KACvB,CAAA;IAED,MAAM,iBAAiB,GAAG,QAAQ,CAAA;IAClC,MAAM,iBAAiB,GAAG,4BAA4B,CAAA;IACtD,MAAM,WAAW,GAAG,UAAU,CAAA;IAC9B,MAAM,YAAY,GAAG,gBAAgB,CAAA;IACrC,MAAM,eAAe,GAAG,UAAU,CAAA;IAElC,SAAS,YAAY,CAAE,IAAY,EAAA;IACjC,IAAA,IAAI,IAAI,CAAA;IACR,IAAA,IAAI,YAAY,CAAA;QAChB,IAAI,MAAM,GAAG,EAAE,CAAA;IACf,IAAA,IAAI,KAAK,CAAA;QAET,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,GAAG,CAAC,CAAA;QAEzC,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAqB,CAAA;IAC5D,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;IAClC,QAAA,MAAM,CAAC,GAAG,EAAE,CAAE,CAAC,CAAE,CAAA;IACjB,QAAA,IAAI,CAAC,CAAE,CAAC,CAAE,KAAK,GAAG,EAAE;IAClB,YAAA,IAAI,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;IACpC,SAAA;IAAM,aAAA;gBACL,MAAM,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;IACvB,YAAA,IAAI,EAAE,CAAC,MAAM,KAAK,CAAC,EAAE;IACnB,gBAAA,IAAI,EAAE,CAAE,CAAC,CAAE,KAAK,OAAO,EAAE;wBACvB,YAAY,GAAG,SAAS,CAAE,EAAE,CAAE,CAAC,CAAE,CAAE,CAAA;IACpC,iBAAA;IAAM,qBAAA,IAAI,EAAE,CAAE,CAAC,CAAE,KAAK,OAAO,EAAE;wBAC9B,KAAK,GAAG,QAAQ,CAAC,EAAE,CAAE,CAAC,CAAE,CAAC,CAAA;IAC1B,iBAAA;IAAM,qBAAA,IAAI,EAAE,CAAE,CAAC,CAAE,KAAK,QAAQ,EAAE;IAC/B,oBAAA,MAAM,CAAC,IAAI,CAAC,EAAE,CAAE,CAAC,CAAE,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC,CAAA;IAC9C,iBAAA;IACF,aAAA;IACF,SAAA;IACF,KAAA;QAED,OAAO;IACL,QAAA,QAAQ,EAAE,IAAI;IACd,QAAA,SAAS,EAAE,YAAY;IACvB,QAAA,WAAW,EAAE,MAAM;IACnB,QAAA,SAAS,EAAE,KAAK;SACjB,CAAA;IACH,CAAC;IAED,SAAS,YAAY,CAAE,IAAY,EAAA;IACjC,IAAA,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,CAAA;QAElB,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;QAC9B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;IAC9B,IAAA,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAA;IAEzD,IAAA,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC,CAAA;IAC7C,IAAA,MAAM,QAAQ,GAAG;YACf,UAAU,CAAC,EAAE,CAAE,EAAE,CAAC,MAAM,GAAG,CAAC,CAAE,CAAC;YAC/B,UAAU,CAAC,EAAE,CAAE,EAAE,CAAC,MAAM,GAAG,CAAC,CAAE,CAAC;YAC/B,UAAU,CAAC,EAAE,CAAE,EAAE,CAAC,MAAM,GAAG,CAAC,CAAE,CAAC;SAChC,CAAA;IACD,IAAA,IAAI,KAAK,EAAE,KAAK,EAAE,MAAM,CAAA;QACxB,IAAI,SAAS,GAAG,KAAK,CAAA;QACrB,IAAI,aAAa,GAAG,KAAK,CAAA;IACzB,IAAA,KAAK,IAAI,OAAO,GAAG,CAAC,EAAE,OAAO,IAAI,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,EAAE;YACrD,MAAM,OAAO,GAAG,EAAE,CAAE,EAAE,CAAC,MAAM,GAAG,OAAO,CAAE,CAAA;YACzC,IAAI,OAAO,IAAI,SAAS,EAAE;IACxB,YAAA,KAAK,GAAG,SAAS,CAAE,EAAE,CAAE,EAAE,CAAC,MAAM,GAAG,OAAO,CAAE,CAAE,CAAA;IAC/C,SAAA;IACD,QAAA,IAAI,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;gBAC/B,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAA;IACvC,SAAA;IACD,QAAA,IAAI,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;IAC5B,YAAA,MAAM,GAAG,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;IAC3C,SAAA;IACD,QAAA,IAAI,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;gBAC3B,SAAS,GAAG,IAAI,CAAA;IACjB,SAAA;IACD,QAAA,IAAI,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;gBAC3B,aAAa,GAAG,IAAI,CAAA;IACrB,SAAA;IACF,KAAA;;QAGD,OAAO;IACL,QAAA,KAAK,EAAE,KAAK;IACZ,QAAA,QAAQ,EAAE,QAAQ;IAClB,QAAA,KAAK,EAAE,KAAK;IACZ,QAAA,MAAM,EAAE,MAAM;IACd,QAAA,KAAK,EAAE,KAAK;IACZ,QAAA,WAAW,EAAE,SAAS;IACtB,QAAA,eAAe,EAAE,aAAa;SAC/B,CAAA;IACH,CAAC;IAED,SAAS,QAAQ,CAAE,IAAY,EAAA;QAC7B,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;QAC/B,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;IAC7B,IAAA,OAAO,IAAI,CAAC,SAAS,CACnB,KAAK,KAAK,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,EAC5B,GAAG,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,SAAS,CAC7B,CAAC,IAAI,EAAE,CAAA;IACV,CAAC;IAED,SAAS,SAAS,CAAE,IAAY,EAAA;QAC9B,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;QAC7B,OAAO,GAAG,KAAK,CAAC,CAAC,GAAG,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAA;IAC7D,CAAC;IAED,SAAS,UAAU,CAAE,IAAY,EAAA;QAC/B,IAAI,IAAI,GAAU,EAAE,CAAA;QACpB,IAAI,MAAM,GAAY,EAAE,CAAA;QACxB,IAAI,KAAK,GAAkC,EAAE,CAAA;QAE7C,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,GAAG,CAAC,CAAA;QAEzC,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAsB,CAAA;IAC7D,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;IAClC,QAAA,MAAM,CAAC,GAAG,EAAE,CAAE,CAAC,CAAE,CAAA;IACjB,QAAA,IAAI,CAAC,CAAE,CAAC,CAAE,KAAK,GAAG,EAAE;IAClB,YAAA,IAAI,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;IACpC,SAAA;IAAM,aAAA;gBACL,MAAM,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;IACvB,YAAA,IAAI,EAAE,CAAC,MAAM,KAAK,CAAC,EAAE;IACnB,gBAAA,IAAI,EAAE,CAAE,CAAC,CAAE,KAAK,QAAQ,EAAE;IACxB,oBAAA,MAAM,CAAC,IAAI,CAAC,EAAE,CAAE,CAAC,CAAE,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC,CAAA;IAC9C,iBAAA;IAAM,qBAAA;IACL,oBAAA,KAAK,CAAE,EAAE,CAAE,CAAC,CAAE,CAAE,GAAG,EAAE,CAAE,CAAC,CAAE,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAAA;IACpD,iBAAA;IACF,aAAA;IAAM,iBAAA;oBACL,KAAK,CAAE,EAAE,CAAE,CAAC,CAAE,CAAE,GAAG,IAAI,CAAA;IACxB,aAAA;IACF,SAAA;IACF,KAAA;QAED,OAAO,EAAE,SAAS,EAAE,IAAI;IACf,QAAA,UAAU,EAAE,KAAK;IACjB,QAAA,YAAY,EAAE,MAAM;SAC5B,CAAA;IACH,CAAC;IASD,SAAS,wBAAwB,CAAE,YAA0B,EAAA;;;;;;;QAO3D,IAAI,EAAE,UAAU,EAAE,aAAa,EAAE,UAAU,EAAE,UAAU,EAAE,GAAG,YAAY,CAAA;QACxE,IAAI,eAAe,GAAG,EAAE,CAAA;IACxB,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;IACpD,QAAA,eAAe,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;IAC3D,KAAA;QACD,IAAI,eAAe,GAAG,EAAE,CAAA;IACxB,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;IACpD,QAAA,eAAe,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;IAC3D,KAAA;QACD,IAAI,kBAAkB,GAAG,EAAE,CAAA;QAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;IAC3D,QAAA,kBAAkB,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;IACjE,KAAA;QACD,IAAI,eAAe,GAAG,EAAE,CAAA;QACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;IACxD,QAAA,eAAe,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;IAC3D,KAAA;QACD,IAAI,gBAAgB,GAAG,EAAE,CAAA;IACzB,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,kBAAkB,CAAC,MAAM,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;IACxD,QAAA,gBAAgB,CAAC,IAAI,CAAC,IAAID,aAAO,CAAC,kBAAkB,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,kBAAkB,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,kBAAkB,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;IAC5H,KAAA;;;;;;;;QAQD,OAAO;YACL,IAAI,EAAE,YAAY,CAAC,IAAI;YACvB,WAAW,EAAE,YAAY,CAAC,WAAW;IACrC,QAAA,UAAU,EAAE,eAAe;IAC3B,QAAA,aAAa,EAAE,kBAAkB;IACjC,QAAA,UAAU,EAAE,eAAe;IAC3B,QAAA,UAAU,EAAE,eAAe;SAC5B,CAAA;IACH,CAAC;IAED,SAAS,+BAA+B,CAAE,qBAAmC,EAAA;;;;QAI3E,IAAI,EAAE,UAAU,EAAE,aAAa,EAAE,UAAU,EAAE,UAAU,EAAE,GAAG,qBAAqB,CAAA;QACjF,IAAI,YAAY,GAAG,EAAE,CAAA;QACrB,IAAI,eAAe,GAAG,EAAE,CAAA;QACxB,IAAI,YAAY,GAAG,EAAE,CAAA;QACrB,IAAI,YAAY,GAAG,EAAE,CAAA;IACrB,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAC9C,QAAA,IAAI,YAAY,GAAG,CAAC,GAAG,CAAC,CAAA;IACxB,QAAA,IAAI,eAAe,GAAG,CAAC,GAAG,CAAC,CAAA;IAC3B,QAAA,IAAI,CAAC,UAAU,CAAC,YAAY,GAAC,CAAC,CAAC,IAAE,CAAC,UAAU,CAAC,YAAY,GAAC,CAAC,CAAC,EAAE;gBAC5D,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAA;gBAC3C,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,GAAC,CAAC,CAAC,CAAC,CAAA;gBAC7C,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,GAAC,CAAC,CAAC,CAAC,CAAA;gBAC7C,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAA;gBAC3C,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,GAAC,CAAC,CAAC,CAAC,CAAA;gBAC7C,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,GAAC,CAAC,CAAC,CAAC,CAAA;gBAC7C,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC,CAAA;gBACpD,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,eAAe,GAAC,CAAC,CAAC,CAAC,CAAA;gBACtD,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,eAAe,GAAC,CAAC,CAAC,CAAC,CAAA;gBACtD,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,eAAe,GAAC,CAAC,CAAC,CAAC,CAAA;gBACtD,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,eAAe,GAAC,CAAC,CAAC,CAAC,CAAA;gBACtD,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,eAAe,GAAC,CAAC,CAAC,CAAC,CAAA;gBACtD,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,eAAe,GAAC,CAAC,CAAC,CAAC,CAAA;gBACtD,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,eAAe,GAAC,CAAC,CAAC,CAAC,CAAA;gBACtD,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,eAAe,GAAC,CAAC,CAAC,CAAC,CAAA;gBACtD,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,CAAA;gBAC9C,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,eAAe,GAAC,CAAC,CAAC,CAAC,CAAA;gBAChD,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,eAAe,GAAC,CAAC,CAAC,CAAC,CAAA;gBAChD,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,eAAe,GAAC,CAAC,CAAC,CAAC,CAAA;gBAChD,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,eAAe,GAAC,CAAC,CAAC,CAAC,CAAA;gBAChD,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,eAAe,GAAC,CAAC,CAAC,CAAC,CAAA;gBAChD,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,eAAe,GAAC,CAAC,CAAC,CAAC,CAAA;gBAChD,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,eAAe,GAAC,CAAC,CAAC,CAAC,CAAA;gBAChD,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,eAAe,GAAC,CAAC,CAAC,CAAC,CAAA;IACjD,SAKA;IACF,KAAA;QACD,OAAO;YACL,IAAI,EAAE,qBAAqB,CAAC,IAAI;YAChC,WAAW,EAAE,qBAAqB,CAAC,WAAW;IAC9C,QAAA,UAAU,EAAE,YAAY;IACxB,QAAA,aAAa,EAAE,eAAe;IAC9B,QAAA,UAAU,EAAE,YAAY;IACxB,QAAA,UAAU,EAAE,YAAY;SACzB,CAAA;IACH,CAAC;IAyCD,MAAM,SAAU,SAAQ,MAAM,CAAA;IAE5B,IAAA,IAAI,IAAI,GAAM,EAAA,OAAO,KAAK,CAAA,EAAE;IAC5B,IAAA,IAAI,SAAS,GAAM,EAAA,OAAO,UAAU,CAAA,EAAE;QAEtC,MAAM,GAAA;;IAGJ,QAAA,IAAIU,aAAK;gBAAE,GAAG,CAAC,IAAI,CAAC,CAAA,iBAAA,EAAoB,IAAI,CAAC,IAAI,CAAE,CAAA,CAAC,CAAA;IAEpD,QAAA,MAAM,QAAQ,GAAa;IACzB,YAAA,QAAQ,EAAE,SAAS;IACnB,YAAA,QAAQ,EAAE,SAAS;IACnB,YAAA,SAAS,EAAE,SAAS;IACpB,YAAA,OAAO,EAAE,SAAS;IAClB,YAAA,KAAK,EAAE,EAAE;IACT,YAAA,IAAI,EAAE,EAAE;IACR,YAAA,QAAQ,EAAE,EAAE;IACZ,YAAA,OAAO,EAAE,EAAE;IACX,YAAA,SAAS,EAAE,EAAE;IACb,YAAA,YAAY,EAAE,EAAE;IAChB,YAAA,UAAU,EAAE,EAAE;IACd,YAAA,eAAe,EAAE,EAAE;IACnB,YAAA,QAAQ,EAAE,EAAE;IACZ,YAAA,WAAW,EAAE,EAAE;IACf,YAAA,SAAS,EAAE,EAAE;IACb,YAAA,WAAW,EAAE,EAAE;aAChB,CAAA;IACD,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAA;IAExB,QAAA,IAAI,mBAA6B,CAAA;IACjC,QAAA,IAAI,sBAAgC,CAAA;YAEpC,IAAI,SAAS,GAAG,KAAK,CAAA;YACrB,IAAI,YAAY,GAAG,EAAE,CAAA;IACrB,QAAA,IAAI,eAAyB,CAAA;IAC7B,QAAA,IAAI,QAAkB,EAAE,WAAqB,EAAE,QAAkB,CAAA;YAEjE,IAAI,YAAY,GAAG,KAAK,CAAA;YACxB,IAAI,YAAY,GAAG,EAAE,CAAA;YACrB,IAAI,eAAe,GAAkB,IAAI,CAAA;YACzC,IAAI,YAAY,GAAkB,IAAI,CAAA;YACtC,IAAI,eAAyB,EAAE,eAAyB,CAAA;YACxD,IAAI,SAAmB,EAAE,SAAmB,EAAE,YAAsB,EAAE,YAAsB,EAAE,SAAmB,EAAE,SAAmB,CAAA;YAEtI,IAAI,UAAU,GAAG,KAAK,CAAA;YACtB,IAAI,aAAa,GAAG,EAAE,CAAA;YACtB,IAAI,UAAoB,EAAE,gBAA0B,CAAA;IACpD,QAAA,IAAI,SAAmB,EAAE,YAAsB,EAAE,SAAmB,CAAA;YAEpE,IAAI,YAAY,GAAG,KAAK,CAAA;YACxB,IAAI,oBAAoB,GAAG,EAAE,CAAA;IAE7B,QAAA,IAAI,sBAAgC,CAAA;IACpC,QAAA,IAAI,qBAA+B,EAAE,wBAAkC,EAAE,qBAAgC,EAAE,qBAA+B,CAAA;YAE1I,IAAI,MAAM,GAAG,KAAK,CAAA;YAClB,IAAI,SAAS,GAAG,KAAK,CAAA;;;;;IAQrB,QAAA,SAAS,kBAAkB,CAAE,EAAU,EAAE,EAAU,EAAE,KAAe,EAAA;gBAClE,KAAK,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;IAC5B,gBAAA,MAAM,IAAI,GAAG,KAAK,CAAE,CAAC,CAAE,CAAA;IAEvB,gBAAA,IAAI,IAAI,CAAE,CAAC,CAAE,KAAK,GAAG,EAAE;wBACrB,SAAS,GAAG,KAAK,CAAA;wBACjB,YAAY,GAAG,KAAK,CAAA;wBACpB,UAAU,GAAG,KAAK,CAAA;wBAClB,YAAY,GAAG,KAAK,CAAA;wBACpB,MAAM,GAAG,KAAK,CAAA;wBACd,SAAS,GAAG,KAAK,CAAA;IAClB,iBAAA;oBAED,IAAI,CAAC,IAAI,EAAE;wBACT,SAAS,GAAG,KAAK,CAAA;wBACjB,YAAY,GAAG,KAAK,CAAA;wBACpB,UAAU,GAAG,KAAK,CAAA;wBAClB,YAAY,GAAG,KAAK,CAAA;IACrB,iBAAA;IAAM,qBAAA,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE;;IAGtC,oBAAA,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,EAAE,GAAG,YAAY,CAAC,IAAI,CAAC,CAAA;wBAE7D,SAAS,GAAG,IAAI,CAAA;wBAChB,YAAY,GAAG,EAAE,CAAA;wBACjB,QAAQ,GAAG,EAAE,CAAA;wBACb,WAAW,GAAG,EAAE,CAAA;wBAChB,QAAQ,GAAG,EAAE,CAAA;wBACb,eAAe,GAAG,SAAqB,CAAA;IAEvC,oBAAA,IAAI,mBAAmB,EAAE;IACvB,wBAAA,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAA;IACtD,qBAAA;IACD,oBAAA,IAAI,sBAAsB,EAAE;IAC1B,wBAAA,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAA;IACzD,qBAAA;IAED,oBAAA,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC;IACrB,wBAAA,IAAI,EAAE,QAAQ;IACd,wBAAA,WAAW,EAAE,WAAW;IACxB,wBAAA,UAAU,EAAE,QAAQ;IACpB,wBAAA,aAAa,EAAE,WAAW;IAC1B,wBAAA,UAAU,EAAE,QAAQ;IACrB,qBAAA,CAAC,CAAA;IACH,iBAAA;IAAM,qBAAA,IAAI,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,EAAE;;IAGzC,oBAAA,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,GAAG,YAAY,CAAC,IAAI,CAAC,CAAA;IAExE,oBAAA,IAAI,WAAW,EAAE;IACf,wBAAA,WAAW,CAAC,OAAO,CAAC,UAAU,IAAY,EAAA;IACxC,4BAAA,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAE,IAAI,CAAE,EAAE;IAChC,gCAAA,QAAQ,CAAC,UAAU,CAAE,IAAI,CAAE,GAAG;IAC5B,oCAAA,MAAM,EAAE,KAAK;IACb,oCAAA,OAAO,EAAE,KAAK;qCACf,CAAA;IACF,6BAAA;IACH,yBAAC,CAAC,CAAA;IACH,qBAAA;wBAED,YAAY,GAAG,IAAI,CAAA;wBACnB,YAAY,GAAG,EAAE,CAAA;wBACjB,eAAe,GAAG,IAAI,CAAA;wBACtB,YAAY,GAAG,IAAI,CAAA;wBACnB,SAAS,GAAG,EAAE,CAAA;wBACd,SAAS,GAAG,EAAE,CAAA;wBACd,YAAY,GAAG,EAAE,CAAA;wBACjB,YAAY,GAAG,EAAE,CAAA;wBACjB,SAAS,GAAG,EAAE,CAAA;wBACd,SAAS,GAAG,EAAE,CAAA;wBACd,eAAe,GAAG,SAAqB,CAAA;wBACvC,eAAe,GAAG,EAAE,CAAA;IACpB,oBAAA,IAAI,SAAS,EAAE;IACb,wBAAA,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;IAChC,qBAAA;IAED,oBAAA,IAAI,mBAAmB,EAAE;IACvB,wBAAA,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAA;IACtD,qBAAA;IACD,oBAAA,IAAI,sBAAsB,EAAE;IAC1B,wBAAA,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAA;IACzD,qBAAA;IAED,oBAAA,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC;IACxB,wBAAA,IAAI,EAAE,QAAQ;IACd,wBAAA,WAAW,EAAE,WAAW;IACxB,wBAAA,WAAW,EAAE,SAAS;IACtB,wBAAA,WAAW,EAAE,SAAS;IACtB,wBAAA,cAAc,EAAE,YAAY;IAC5B,wBAAA,cAAc,EAAE,YAAY;IAC5B,wBAAA,WAAW,EAAE,SAAS;IACtB,wBAAA,WAAW,EAAE,SAAS;IACtB,wBAAA,KAAK,EAAE,eAAe;IACvB,qBAAA,CAAC,CAAA;IACH,iBAAA;IAAM,qBAAA,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,EAAE;IACvC,oBAAA,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,GAAG,YAAY,CAAC,IAAI,CAAC,CAAA;IAE7D,oBAAA,IAAI,WAAW,EAAE;IACf,wBAAA,WAAW,CAAC,OAAO,CAAC,UAAU,IAAY,EAAA;IACxC,4BAAA,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAE,IAAI,CAAE,EAAE;IAChC,gCAAA,QAAQ,CAAC,UAAU,CAAE,IAAI,CAAE,GAAG;IAC5B,oCAAA,MAAM,EAAE,KAAK;IACb,oCAAA,OAAO,EAAE,KAAK;qCACf,CAAA;IACF,6BAAA;IACH,yBAAC,CAAC,CAAA;IACH,qBAAA;wBAED,UAAU,GAAG,IAAI,CAAA;wBAEjB,aAAa,GAAG,EAAE,CAAA;wBAClB,SAAS,GAAG,EAAE,CAAA;wBACd,UAAU,GAAG,EAAE,CAAA;wBACf,YAAY,GAAG,EAAE,CAAA;wBACjB,SAAS,GAAG,EAAE,CAAA;wBACd,gBAAgB,GAAG,SAAqB,CAAA;IAExC,oBAAA,IAAI,mBAAmB,EAAE;IACvB,wBAAA,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAA;IACtD,qBAAA;IACD,oBAAA,IAAI,sBAAsB,EAAE;IAC1B,wBAAA,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAA;IACzD,qBAAA;IAED,oBAAA,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC;IACtB,wBAAA,IAAI,EAAE,QAAQ;IACd,wBAAA,WAAW,EAAE,WAAW;IACxB,wBAAA,UAAU,EAAE,SAAS;IACrB,wBAAA,WAAW,EAAE,UAAU;IACvB,wBAAA,aAAa,EAAE,YAAY;IAC3B,wBAAA,UAAU,EAAE,SAAS;IACtB,qBAAA,CAAC,CAAA;IACH,iBAAA;IAAM,qBAAA,IAAI,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAE,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,EAAE;IAC3E,oBAAA,IAAI,EAAE,WAAW,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,YAAY,CAAC,IAAI,CAAC,CAAA;IAE7D,oBAAA,IAAI,WAAW,EAAE;IACf,wBAAA,WAAW,CAAC,OAAO,CAAC,UAAU,IAAY,EAAA;IACxC,4BAAA,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAE,IAAI,CAAE,EAAE;IAChC,gCAAA,QAAQ,CAAC,UAAU,CAAE,IAAI,CAAE,GAAG;IAC5B,oCAAA,MAAM,EAAE,KAAK;IACb,oCAAA,OAAO,EAAE,KAAK;qCACf,CAAA;IACF,6BAAA;IACH,yBAAC,CAAC,CAAA;IACH,qBAAA;wBACD,YAAY,GAAG,IAAI,CAAA;wBACnB,oBAAoB,GAAG,EAAE,CAAA;wBACzB,qBAAqB,GAAG,EAAE,CAAA;wBAC1B,wBAAwB,GAAG,EAAE,CAAA;wBAC7B,qBAAqB,GAAG,EAAE,CAAA;wBAC1B,qBAAqB,GAAG,EAAE,CAAA;wBAC1B,sBAAsB,GAAG,SAAqB,CAAA;IAE9C,oBAAA,IAAI,mBAAmB,EAAE;IACvB,wBAAA,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAA;IACtD,qBAAA;IACD,oBAAA,IAAI,sBAAsB,EAAE;IAC1B,wBAAA,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAA;IACzD,qBAAA;IAED,oBAAA,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC;IACxB,wBAAA,IAAI,EAAE,QAAQ;IACd,wBAAA,WAAW,EAAE,WAAW;IACxB,wBAAA,UAAU,EAAE,qBAAqB;IACjC,wBAAA,aAAa,EAAE,wBAAwB;IACvC,wBAAA,UAAU,EAAE,qBAAqB;IACjC,wBAAA,UAAU,EAAE,qBAAqB;IAClC,qBAAA,CAAC,CAAA;IACH,iBAAA;IAAM,qBAAA,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;wBACnC,MAAM,GAAG,IAAI,CAAA;IACb,oBAAA,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;IACpC,iBAAA;IAAM,qBAAA,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE;wBACtC,SAAS,GAAG,IAAI,CAAA;IAChB,oBAAA,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;IACvC,iBAAA;IAAM,qBAAA,IAAI,SAAS,EAAE;;IAGpB,oBAAA,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,YAAY,CAAC,IAAI,CAAC,CAAA;wBAEnD,IAAI,KAAK,KAAK,GAAG,EAAE;4BACjB,KAAK,GAAG,YAAY,CAAA;IACrB,qBAAA;IAAM,yBAAA;4BACL,YAAY,GAAG,KAAK,CAAA;IACrB,qBAAA;wBAED,IAAI,KAAK,KAAK,SAAS,EAAE;4BACvB,KAAK,GAAG,eAAe,CAAA;IACxB,qBAAA;IAED,oBAAA,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;IACpB,oBAAA,WAAW,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAA;IAC7B,oBAAA,QAAQ,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,CAAA;IACxB,iBAAA;IAAM,qBAAA,IAAI,YAAY,EAAE;;wBAGvB,IAAI,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,KAAK,CAAC,CAAA;wBAC/C,IAAI,SAAS,GAAG,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;IAEtC,oBAAA,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE;IAC5C,wBAAA,IAAI,eAAe,GAAG,SAAS,CAAC,EAAE,CAAC,CAAA;IACnC,wBAAA,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,WAAW,EAAE,GAAG,YAAY,CAAC,eAAe,CAAC,CAAA;4BAElF,IAAI,KAAK,KAAK,GAAG,EAAE;gCACjB,KAAK,GAAG,YAAY,CAAA;IACrB,yBAAA;IAAM,6BAAA;gCACL,YAAY,GAAG,KAAK,CAAA;IACrB,yBAAA;4BAED,IAAI,KAAK,KAAK,SAAS,EAAE;gCACvB,KAAK,GAAG,eAAe,CAAA;IACxB,yBAAA;4BAED,IAAI,CAAC,WAAW,EAAE;gCAChB,IAAI,eAAe,KAAK,IAAI,EAAE;IAC5B,gCAAA,IAAI,KAAK,EAAE;IACT,oCAAA,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;IAC5B,iCAAA;IAED,gCAAA,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAA;IAC5B,gCAAA,YAAY,CAAC,IAAI,CAAC,GAAG,eAAe,CAAC,CAAA;IACrC,gCAAA,SAAS,CAAC,IAAI,CAAC,GAAG,YAAwB,CAAC,CAAA;IAE3C,gCAAA,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;IACrB,gCAAA,YAAY,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAA;IAC9B,gCAAA,SAAS,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,CAAA;IAEzB,6BAAA;IACF,yBAAA;4BAED,YAAY,GAAG,KAAK,CAAA;4BACpB,eAAe,GAAG,QAAQ,CAAA;4BAC1B,YAAY,GAAG,KAAK,CAAA;IACrB,qBAAA;IACF,iBAAA;IAAM,qBAAA,IAAI,UAAU,EAAE;;IAGrB,oBAAA,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,YAAY,CAAC,IAAI,CAAC,CAAA;wBAE3D,IAAI,KAAK,KAAK,GAAG,EAAE;4BACjB,KAAK,GAAG,aAAa,CAAA;IACtB,qBAAA;IAAM,yBAAA;4BACL,aAAa,GAAG,KAAK,CAAA;IACtB,qBAAA;wBAED,IAAI,MAAM,KAAK,SAAS,EAAE;IACxB,wBAAA,MAAM,GAAG,CAAC,CAAA;IACX,qBAAA;wBAED,IAAI,KAAK,KAAK,SAAS,EAAE;4BACvB,KAAK,GAAG,gBAAgB,CAAA;IACzB,qBAAA;IAED,oBAAA,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;IACrB,oBAAA,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;IACvB,oBAAA,YAAY,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAA;IAC9B,oBAAA,SAAS,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,CAAA;IACzB,iBAAA;IAAM,qBAAA,IAAI,YAAY,EAAE;IACvB,oBAAA,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,eAAe,EAAE,GAAG,YAAY,CAAC,IAAI,CAAC,CAAA;wBAEpE,IAAI,KAAK,KAAK,GAAG,EAAE;4BACjB,KAAK,GAAG,oBAAoB,CAAA;IAC7B,qBAAA;IAAM,yBAAA;4BACL,oBAAoB,GAAG,KAAK,CAAA;IAC7B,qBAAA;wBAED,IAAI,KAAK,KAAK,SAAS,EAAE;4BACvB,KAAK,GAAG,sBAAsB,CAAA;IAC/B,qBAAA;IAED,oBAAA,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;IACjC,oBAAA,wBAAwB,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAA;IAC1C,oBAAA,qBAAqB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAA;IAC3C,oBAAA,qBAAqB,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,CAAA;IACrC,iBAAA;IAAM,qBAAA,IAAI,MAAM,EAAE;IACjB,oBAAA,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;IAC1B,iBAAA;IAAM,qBAAA,IAAI,SAAS,EAAE;IACpB,oBAAA,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;IAC7B,iBAAA;IAAM,qBAAA,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,EAAE;IACvC,oBAAA,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAA;IACpD,iBAAA;IAAM,qBAAA,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,EAAE;IACvC,oBAAA,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAA;IACzB,iBAAA;IAAM,qBAAA,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE;wBACtC,QAAQ,CAAE,SAAS,CAAE,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAA;IACvC,iBAAA;IAAM,qBAAA,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE;IACtC,oBAAA,QAAQ,CAAC,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAA;IAClC,iBAAA;IAAM,qBAAA,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;IACpC,oBAAA,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,YAAY,EAAE,GAAG,UAAU,CAAC,IAAI,CAAC,CAAA;IAC9D,oBAAA,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAE,SAAmB,CAAE,EAAE;IAC9C,wBAAA,QAAQ,CAAC,SAAS,CAAE,SAAmB,CAAE,GAAG;IAC1C,4BAAA,QAAQ,EAAE,KAAK;IACf,4BAAA,OAAO,EAAE,KAAK;6BACf,CAAA;4BACD,mBAAmB,GAAG,YAAY,CAAA;IACnC,qBAAA;IAED,oBAAA,IAAI,mBAAmB,EAAE;IACvB,wBAAA,mBAAmB,CAAC,OAAO,CAAC,UAAU,MAAM,EAAA;IAC1C,4BAAA,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAE,MAAM,CAAE,EAAE;IAClC,gCAAA,QAAQ,CAAC,UAAU,CAAE,MAAM,CAAE,GAAG;IAC9B,oCAAA,MAAM,EAAE,KAAK;IACb,oCAAA,OAAO,EAAE,KAAK;qCACf,CAAA;IACF,6BAAA;IACH,yBAAC,CAAC,CAAA;IACH,qBAAA;IAED,oBAAA,KAAK,IAAI,GAAG,IAAI,UAAoC,EAAE;IACpD,wBAAA,QAAQ,CAAC,SAAS,CAAE,SAAmB,CAAE,CAAE,GAAG,CAAE,GAAI,UAAqC,CAAE,GAAG,CAAE,CAAA;IACjG,qBAAA;IACF,iBAAA;IAAM,qBAAA,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,EAAE;IACvC,oBAAA,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,YAAY,EAAE,GAAG,UAAU,CAAC,IAAI,CAAC,CAAA;IAEhE,oBAAA,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAE,SAAmB,CAAE,EAAE;IACjD,wBAAA,QAAQ,CAAC,YAAY,CAAE,SAAmB,CAAE,GAAG;IAC7C,4BAAA,QAAQ,EAAE,KAAK;IACf,4BAAA,OAAO,EAAE,KAAK;6BACf,CAAA;4BACD,sBAAsB,GAAG,YAAY,CAAA;IACtC,qBAAA;IAED,oBAAA,IAAI,sBAAsB,EAAE;IAC1B,wBAAA,sBAAsB,CAAC,OAAO,CAAC,UAAU,MAAM,EAAA;IAC7C,4BAAA,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAE,MAAM,CAAE,EAAE;IAClC,gCAAA,QAAQ,CAAC,UAAU,CAAE,MAAM,CAAE,GAAG;IAC9B,oCAAA,MAAM,EAAE,KAAK;IACb,oCAAA,OAAO,EAAE,KAAK;qCACf,CAAA;IACF,6BAAA;IACH,yBAAC,CAAC,CAAA;IACH,qBAAA;IAED,oBAAA,KAAK,IAAI,GAAG,IAAI,UAAoC,EAAE;IACpD,wBAAA,QAAQ,CAAC,YAAY,CAAE,SAAmB,CAAE,CAAE,GAAG,CAAE,GAAI,UAAqC,CAAE,GAAG,CAAE,CAAA;IACpG,qBAAA;IACF,iBAAA;IAAM,qBAAA,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE;IACrC,oBAAA,MAAM,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAA;IAC3B,oBAAA,MAAM,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC,CAAA;IAE5B,oBAAA,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAE,IAAI,CAAE,EAAE;IAChC,wBAAA,QAAQ,CAAC,UAAU,CAAE,IAAI,CAAE,GAAG;IAC5B,4BAAA,MAAM,EAAE,KAAK;IACb,4BAAA,OAAO,EAAE,KAAK;6BACf,CAAA;IACF,qBAAA;wBAED,IAAI,IAAI,KAAK,IAAI,EAAE;4BACjB,QAAQ,CAAC,UAAU,CAAE,IAAI,CAAE,CAAC,OAAO,GAAG,IAAI,CAAA;IAC3C,qBAAA;6BAAM,IAAI,IAAI,KAAK,KAAK,EAAE;4BACzB,QAAQ,CAAC,UAAU,CAAE,IAAI,CAAE,CAAC,OAAO,GAAG,KAAK,CAAA;IAC5C,qBAAA;6BAAM,IAAI,IAAI,KAAK,QAAQ,EAAE;4BAC5B,QAAQ,CAAC,UAAU,CAAE,IAAI,CAAE,CAAC,MAAM,GAAG,IAAI,CAAA;IAC1C,qBAAA;6BAAM,CAEN;IACF,iBAAA;IAAM,qBAAA,IAAI,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,EAAE;wBAC1C,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,GAAG,UAAU,CAAC,IAAI,CAAC,CAAA;IAElD,oBAAA,QAAQ,CAAC,eAAe,CAAE,SAAmB,CAAC,GAAG;IAC/C,wBAAA,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,UAAoC,CAAC,CAAE,CAAC,CAAE,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC;yBACrF,CAAA;IACF,iBAAA;IAAM,qBAAA;IACL,oBAAA,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;IAClB,iBAAA;IACF,aAAA;aACF;YAED,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,UAAU,KAAK,6BAA0B;gBACtE,kBAAkB,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;IAC5C,SAAC,CAAC,CAAA;IAEF,QAAA,QAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAA;IAChD,QAAA,QAAQ,CAAC,OAAO,GAAG,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAA;YACtD,IAAI,QAAQ,CAAC,WAAW,EAAE;gBACxB,IAAI,cAAc,GAAmB,EAAE,CAAA;IACvC,YAAA,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU,UAAU,EAAA;oBAC/C,cAAc,CAAC,IAAI,CAAC,+BAA+B,CAAC,wBAAwB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA;IAC5F,aAAC,CAAC,CAAA;IACF,YAAA,QAAQ,CAAC,WAAW,GAAG,cAAc,CAAA;IACtC,SAAA;IAED,QAAA,IAAIA,aAAK;gBAAE,GAAG,CAAC,OAAO,CAAC,CAAA,iBAAA,EAAoB,IAAI,CAAC,IAAI,CAAE,CAAA,CAAC,CAAA;SACxD;IACF,CAAA;IAED,cAAc,CAAC,GAAG,CAAC,KAAK,EAAE,SAAS,CAAC;;ICtxBpC;;;;IAIG;IAMH,MAAM,aAAc,SAAQ,MAAM,CAAA;QAChC,WAAa,CAAA,QAAkB,EAAE,MAAiC,EAAA;IAChE,QAAA,KAAK,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAA;IAEvB,QAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAA;IAC9B,QAAA,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAA;SACjD;IAED,IAAA,IAAI,IAAI,GAAM,EAAA,OAAO,SAAS,CAAA,EAAE;IAChC,IAAA,IAAI,SAAS,GAAM,EAAA,OAAO,SAAS,CAAA,EAAE;QAErC,MAAM,GAAA;IACJ,QAAA,IAAI,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAA;IAExD,QAAA,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAA;SACpC;IACF;;IC1BD;;;;IAIG;IAyBH;;;;;IAKG;IACH,MAAM,SAAS,IAAI,SAAS,SAAS,GAAA;QACnC,IAAI,CAAC,MAAM,GAAG;;IAEZ,QAAA,cAAc,EAAE,oDAAoD;;IAEpE,QAAA,cAAc,EAAE,qDAAqD;;IAErE,QAAA,UAAU,EAAE,qCAAqC;;IAEjD,QAAA,WAAW,EAAE,iDAAiD;;IAE9D,QAAA,cAAc,EAAE,qFAAqF;;IAErG,QAAA,qBAAqB,EAAE,yHAAyH;;IAEhJ,QAAA,kBAAkB,EAAE,6FAA6F;;IAEjH,QAAA,cAAc,EAAE,eAAe;;IAE/B,QAAA,iBAAiB,EAAE,mBAAmB;;IAEtC,QAAA,wBAAwB,EAAE,UAAU;;IAEpC,QAAA,oBAAoB,EAAE,UAAU;SACjC,CAAA;IACH,CAAC,CAA0B,CAAA;IAE3B,SAAS,CAAC,SAAS,GAAG;IAEpB,IAAA,WAAW,EAAE,SAAS;QAEtB,OAAO,EAAE,UAAU,KAAa,EAAA;IAC9B,QAAA,IAAI,CAAC,IAAI,GAAG,KAAK,CAAA;SAClB;IAED,IAAA,kBAAkB,EAAE,YAAA;IAClB,QAAA,IAAI,KAAK,GAAG;IACV,YAAA,OAAO,EAAE,EAAkB;IAC3B,YAAA,MAAM,EAAE,EAAgB;IAExB,YAAA,QAAQ,EAAE,EAAE;IACZ,YAAA,OAAO,EAAE,EAAE;IAEX,YAAA,WAAW,EAAE,UAAU,IAAY,EAAE,eAAwB,EAAA;;;oBAG3D,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,eAAe,KAAK,KAAK,EAAE;IACxD,oBAAA,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAA;wBACvB,IAAI,CAAC,MAAM,CAAC,eAAe,IAAI,eAAe,KAAK,KAAK,CAAC,CAAA;wBACzD,OAAM;IACP,iBAAA;oBAED,IAAI,CAAC,MAAM,GAAG;wBACZ,IAAI,EAAE,IAAI,IAAI,EAAE;IAChB,oBAAA,QAAQ,EAAE;IACR,wBAAA,QAAQ,EAAE,EAAE;IACZ,wBAAA,OAAO,EAAE,EAAE;IACZ,qBAAA;IACD,oBAAA,eAAe,GAAG,eAAe,KAAK,KAAK,CAAC;qBAC7C,CAAA;oBAED,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;iBAC/B;IAED,YAAA,gBAAgB,EAAE,UAAU,KAAa,EAAE,GAAW,EAAA;oBACpD,IAAI,KAAK,GAAG,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,CAAA;oBAC/B,OAAO,CAAC,KAAK,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAA;iBACtD;IAED,YAAA,gBAAgB,EAAE,UAAU,KAAa,EAAE,GAAW,EAAA;oBACpD,IAAI,KAAK,GAAG,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,CAAA;oBAC/B,OAAO,CAAC,KAAK,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAA;iBACtD;IAED,YAAA,SAAS,EAAE,UAAU,CAAS,EAAE,CAAS,EAAE,CAAS,EAAA;IAClD,gBAAA,IAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAA;oBACvB,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAA;oBAEvC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC,CAAA;oBACtB,GAAG,CAAC,IAAI,CAAC,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC,CAAA;oBACtB,GAAG,CAAC,IAAI,CAAC,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC,CAAA;oBACtB,GAAG,CAAC,IAAI,CAAC,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC,CAAA;oBACtB,GAAG,CAAC,IAAI,CAAC,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC,CAAA;oBACtB,GAAG,CAAC,IAAI,CAAC,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC,CAAA;oBACtB,GAAG,CAAC,IAAI,CAAC,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC,CAAA;oBACtB,GAAG,CAAC,IAAI,CAAC,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC,CAAA;oBACtB,GAAG,CAAC,IAAI,CAAC,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC,CAAA;iBACvB;gBAED,aAAa,EAAE,UAAU,CAAS,EAAA;IAChC,gBAAA,IAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAA;oBACvB,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAA;oBAEvC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC,CAAA;oBACtB,GAAG,CAAC,IAAI,CAAC,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC,CAAA;oBACtB,GAAG,CAAC,IAAI,CAAC,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC,CAAA;iBACvB;IAED,YAAA,SAAS,EAAE,UAAU,CAAS,EAAE,CAAS,EAAE,CAAS,EAAA;IAClD,gBAAA,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAA;oBACtB,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAA;oBAEtC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC,CAAA;oBACtB,GAAG,CAAC,IAAI,CAAC,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC,CAAA;oBACtB,GAAG,CAAC,IAAI,CAAC,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC,CAAA;oBACtB,GAAG,CAAC,IAAI,CAAC,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC,CAAA;oBACtB,GAAG,CAAC,IAAI,CAAC,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC,CAAA;oBACtB,GAAG,CAAC,IAAI,CAAC,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC,CAAA;oBACtB,GAAG,CAAC,IAAI,CAAC,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC,CAAA;oBACtB,GAAG,CAAC,IAAI,CAAC,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC,CAAA;oBACtB,GAAG,CAAC,IAAI,CAAC,GAAG,CAAE,CAAC,GAAG,CAAC,CAAE,CAAC,CAAA;iBACvB;IAED,YAAA,OAAO,EAAE,UAAU,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,CAAU,EAAE,EAAW,EAAE,EAAW,EAAE,EAAW,EAAE,EAAW,EAAA;IAChH,gBAAA,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAA;oBAE/B,IAAI,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;oBACvC,IAAI,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;oBACvC,IAAI,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;IACvC,gBAAA,IAAI,EAAE,CAAA;oBAEN,IAAI,CAAC,KAAK,SAAS,EAAE;wBACnB,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAA;IAC3B,iBAAA;IAAM,qBAAA;wBACL,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;wBAEnC,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAA;wBAC1B,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAA;IAC3B,iBAAA;oBAED,IAAI,EAAE,KAAK,SAAS,EAAE;;IAEpB,oBAAA,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAA;wBAC9B,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,EAAE,EAAE,IAAI,CAAC,CAAA;IAEpC,oBAAA,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,EAAG,EAAE,IAAI,CAAC,CAAA;IACtD,oBAAA,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,EAAG,EAAE,IAAI,CAAC,CAAA;wBAEtD,IAAI,CAAC,KAAK,SAAS,EAAE;4BACnB,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAA;IAC3B,qBAAA;IAAM,yBAAA;4BACL,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,EAAG,EAAE,IAAI,CAAC,CAAA;4BAErC,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAA;4BAC1B,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAA;IAC3B,qBAAA;IACF,iBAAA;iBACF;gBAED,eAAe,EAAE,UAAU,QAAkB,EAAA;oBAC3C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,MAAM,CAAA;IAElC,gBAAA,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAA;IAE/B,gBAAA,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE;IAClD,oBAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAE,EAAE,CAAE,EAAE,IAAI,CAAC,CAAC,CAAA;IAChE,iBAAA;iBACF;aAEF,CAAA;IAED,QAAA,KAAK,CAAC,WAAW,CAAC,EAAE,EAAE,KAAK,CAAC,CAAA;IAE5B,QAAA,OAAO,KAAK,CAAA;SACb;QAED,KAAK,EAAE,UAAU,IAAY,EAAA;IAC3B,QAAA,IAAI,KAAK,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAA;YAErC,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;;gBAE/B,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CAAA;IACnC,SAAA;YAED,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;;gBAE/B,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAA;IACjC,SAAA;YAED,IAAI,CAAC,EAAE,CAAC,CAAA;YACR,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;YAC5B,IAAI,IAAI,GAAG,EAAE,CAAA;YACb,IAAI,aAAa,GAAG,EAAE,CAAA;YACtB,IAAI,cAAc,GAAG,EAAE,CAAA;YACvB,IAAI,UAAU,GAAG,CAAC,CAAA;YAClB,IAAI,MAAM,GAAG,EAAE,CAAA;;YAGf,IAAI,QAAQ,IAAI,OAAO,EAAE,CAAC,QAAQ,KAAK,UAAU,CAAC,CAAA;IAElD,QAAA,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACxC,YAAA,IAAI,GAAG,KAAK,CAAE,CAAC,CAAE,CAAA;IAEjB,YAAA,IAAI,GAAG,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,IAAI,EAAE,CAAA;IAE/C,YAAA,UAAU,GAAG,IAAI,CAAC,MAAM,CAAA;gBAExB,IAAI,UAAU,KAAK,CAAC;oBAAE,SAAQ;IAE9B,YAAA,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;;gBAG9B,IAAI,aAAa,KAAK,GAAG;oBAAE,SAAQ;gBAEnC,IAAI,aAAa,KAAK,GAAG,EAAE;IACzB,gBAAA,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;oBAE/B,IAAI,cAAc,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE;;;IAIvF,oBAAA,KAAK,CAAC,QAAQ,CAAC,IAAI,CACjB,UAAU,CAAC,MAAM,CAAE,CAAC,CAAE,CAAC,EACvB,UAAU,CAAC,MAAM,CAAE,CAAC,CAAE,CAAC,EACvB,UAAU,CAAC,MAAM,CAAE,CAAC,CAAE,CAAC,CACxB,CAAA;IACF,iBAAA;yBAAM,IAAI,cAAc,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE;;;IAI9F,oBAAA,KAAK,CAAC,OAAO,CAAC,IAAI,CAChB,UAAU,CAAC,MAAM,CAAE,CAAC,CAAE,CAAC,EACvB,UAAU,CAAC,MAAM,CAAE,CAAC,CAAE,CAAC,EACvB,UAAU,CAAC,MAAM,CAAE,CAAC,CAAE,CAAC,CACxB,CAAA;IACF,iBAAA;IAAM,qBAAA,IAAI,cAAc,KAAK,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,CAIhF;IAAM,qBAAA;wBACL,MAAM,IAAI,KAAK,CAAC,qCAAqC,GAAG,IAAI,GAAG,GAAG,CAAC,CAAA;IACpE,iBAAA;IACF,aAAA;qBAAM,IAAI,aAAa,KAAK,GAAG,EAAE;IAChC,gBAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE;;;;wBAKpE,KAAK,CAAC,OAAO,CACX,MAAM,CAAE,CAAC,CAAE,EAAE,MAAM,CAAE,CAAC,CAAE,EAAE,MAAM,CAAE,CAAC,CAAE,EAAE,MAAM,CAAE,EAAE,CAAE;;IAEnD,oBAAA,MAAM,CAAE,CAAC,CAAE,EAAE,MAAM,CAAE,CAAC,CAAE,EAAE,MAAM,CAAE,CAAC,CAAE,EAAE,MAAM,CAAE,EAAE,CAAE,CACpD,CAAA;IACF,iBAAA;IAAM,qBAAA,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,CAI1D;IAAM,qBAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE;;;;IAKxE,oBAAA,KAAK,CAAC,OAAO,CACX,MAAM,CAAE,CAAC,CAAE,EAAE,MAAM,CAAE,CAAC,CAAE,EAAE,MAAM,CAAE,CAAC,CAAE,EAAE,MAAM,CAAE,CAAC,CAAE,EAClD,MAAM,CAAE,CAAC,CAAE,EAAE,MAAM,CAAE,CAAC,CAAE,EAAE,MAAM,CAAE,CAAC,CAAE,EAAE,MAAM,CAAE,CAAC,CAAE,CACnD,CAAA;IACF,iBAAA;IAAM,qBAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE;;;;wBAKjE,KAAK,CAAC,OAAO,CACX,MAAM,CAAE,CAAC,CAAE,EAAE,MAAM,CAAE,CAAC,CAAE,EAAE,MAAM,CAAE,CAAC,CAAE,EAAE,MAAM,CAAE,CAAC,CAAE,CACnD,CAAA;IACF,iBAAA;IAAM,qBAAA;wBACL,MAAM,IAAI,KAAK,CAAC,yBAAyB,GAAG,IAAI,GAAG,GAAG,CAAC,CAAA;IACxD,iBAAA;IACF,aAAA;qBAAM,IAAI,aAAa,KAAK,GAAG,EAAE;IAChC,gBAAA,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;oBACnD,IAAI,YAAY,GAAG,EAAE,CAAA;oBACrB,IAAI,OAAO,GAAG,EAAE,CAAA;oBAEhB,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;wBAC5B,YAAY,GAAG,SAAS,CAAA;IACzB,iBAAA;IAAM,qBAAA;IACL,oBAAA,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,IAAI,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE;4BACzD,IAAI,KAAK,GAAG,SAAS,CAAE,EAAE,CAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;IAEtC,wBAAA,IAAI,KAAK,CAAE,CAAC,CAAE,KAAK,EAAE;gCAAE,YAAY,CAAC,IAAI,CAAC,KAAK,CAAE,CAAC,CAAE,CAAC,CAAA;IACpD,wBAAA,IAAI,KAAK,CAAE,CAAC,CAAE,KAAK,EAAE;gCAAE,OAAO,CAAC,IAAI,CAAC,KAAK,CAAE,CAAC,CAAE,CAAC,CAAA;IAChD,qBAAA;IACF,iBAAA;IACD,gBAAA,KAAK,CAAC,eAAe,CAAC,YAAY,EAAE,OAAO,CAAC,CAAA;IAC7C,aAAA;IAAM,iBAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE;;;;IAKpE,gBAAA,IAAI,IAAI,GAAG,MAAM,CAAE,CAAC,CAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAA;IACvC,gBAAA,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAA;;;IAIxB,aAAA;qBAAM,IAAI,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAEvD;qBAAM,IAAI,IAAI,CAAC,MAAM,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAE3D;IAAM,iBAAA,IAAI,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,CAC7D;IAAM,iBAAA;;oBAEL,IAAI,IAAI,KAAK,IAAI;wBAAE,SAAQ;oBAE3B,MAAM,IAAI,KAAK,CAAC,oBAAoB,GAAG,IAAI,GAAG,GAAG,CAAC,CAAA;IACnD,aAAA;IACF,SAAA;YAED,IAAI,SAAS,GAAG,EAAE,CAAA;IAElB,QAAA,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBAChD,IAAI,MAAM,GAAG,KAAK,CAAC,OAAO,CAAE,CAAC,CAAE,CAAA;IAC/B,YAAA,IAAI,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAA;;IAG9B,YAAA,IAAI,QAAQ,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC;oBAAE,SAAQ;IAE5C,YAAA,IAAI,cAAc,GAAG,IAAIkC,oBAAc,EAAE,CAAA;IAEzC,YAAA,cAAc,CAAC,YAAY,CAAC,UAAU,EAAE,IAAIC,qBAAe,CAAC,IAAI,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;IAEpG,YAAA,IAAI,QAAQ,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;IAC/B,gBAAA,cAAc,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAIA,qBAAe,CAAC,IAAI,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;IAClG,aAAA;IAAM,iBAAA;oBACL,cAAc,CAAC,oBAAoB,EAAE,CAAA;IACtC,aAAA;IAED,YAAA,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAAA;IAC/B,SAAA;IAED,QAAA,OAAO,SAAS,CAAA;SACjB;KAEF,CAAA;IAED,MAAM,SAAU,SAAQ,aAAa,CAAA;IACnC,IAAA,IAAI,IAAI,GAAM,EAAA,OAAO,KAAK,CAAA,EAAE;QAE5B,SAAS,GAAA;YACP,OAAO,IAAI,SAAS,EAAE,CAAA;SACvB;IACF,CAAA;IAED,cAAc,CAAC,GAAG,CAAC,KAAK,EAAE,SAAS,CAAC;;ICxXpC;;;;IAIG;IA6EH,MAAM,SAAS,IAAI,SAAS,SAAS,GAAA;IACnC,IAAA,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAA;IAC/B,CAAC,CAA0B,CAAA;IAE3B,SAAS,CAAC,SAAS,GAAG;IAEpB,IAAA,WAAW,EAAE,SAAS;QAEtB,sBAAsB,EAAE,UAAU,OAA8B,EAAA;IAC9D,QAAA,IAAI,CAAC,mBAAmB,GAAG,OAAO,CAAA;SACnC;QAED,OAAO,EAAE,UAAU,GAAgB,EAAA;IACjC,QAAA,IAAI,WAAW,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC,CAAA;YACrC,IAAI,GAAG,GAAG,EAAE,CAAA;IACZ,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE;IACvC,YAAA,GAAG,IAAI,MAAM,CAAC,YAAY,CAAC,WAAW,CAAE,CAAC,CAAE,CAAC,CAAA;IAC7C,SAAA;IAED,QAAA,OAAO,GAAG,CAAA;SACX;QAED,OAAO,EAAE,UAAU,IAAiB,EAAA;IAClC,QAAA,IAAI,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAA;IAEjD,QAAA,OAAO,MAAM,CAAC,MAAM,KAAK,OAAO,CAAA;SACjC;QAED,KAAK,EAAE,UAAU,IAAwB,EAAA;YACvC,IAAI,IAAI,YAAY,WAAW,EAAE;IAC/B,YAAA,QACE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;sBACd,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;sBACnC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAC3B;IACF,SAAA;IAAM,aAAA;IACL,YAAA,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAA;IAC7B,SAAA;SACF;QAED,WAAW,EAAE,UAAU,IAAY,EAAA;YACjC,IAAI,aAAa,GAAG,0BAA0B,CAAA;YAC9C,IAAI,UAAU,GAAG,EAAE,CAAA;YACnB,IAAI,YAAY,GAAG,CAAC,CAAA;YACpB,IAAI,MAAM,GAAG,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;YACrC,IAAI,MAAM,KAAK,IAAI,EAAE;IACnB,YAAA,UAAU,GAAG,MAAM,CAAE,CAAC,CAAE,CAAA;IACxB,YAAA,YAAY,GAAG,MAAM,CAAE,CAAC,CAAE,CAAC,MAAM,CAAA;IAClC,SAAA;IAED,QAAA,IAAI,MAAM,GAAuB;IAC/B,YAAA,QAAQ,EAAE,EAAE;IACZ,YAAA,QAAQ,EAAE,EAAE;IACZ,YAAA,YAAY,EAAE,YAAY;aAC3B,CAAA;YAED,IAAI,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;IAClC,QAAA,IAAI,cAAoC,EAAE,QAAQ,EAAE,UAAU,CAAA;IAE9D,QAAA,SAAS,sBAAsB,CAAE,aAAuB,EAAE,mBAA0C,EAAA;IAClG,YAAA,IAAI,QAAQ,GAAG;IACb,gBAAA,IAAI,EAAE,aAAa,CAAE,CAAC,CAAE;iBACV,CAAA;IAEhB,YAAA,IAAI,QAAQ,CAAC,IAAI,KAAK,MAAM,EAAE;IAC5B,gBAAA,QAAQ,CAAC,IAAI,GAAG,aAAa,CAAE,CAAC,CAAE,CAAA;IAClC,gBAAA,QAAQ,CAAC,SAAS,GAAG,aAAa,CAAE,CAAC,CAAE,CAAA;IACvC,gBAAA,QAAQ,CAAC,QAAQ,GAAG,aAAa,CAAE,CAAC,CAAE,CAAA;IACvC,aAAA;IAAM,iBAAA;IACL,gBAAA,QAAQ,CAAC,IAAI,GAAG,aAAa,CAAE,CAAC,CAAE,CAAA;IACnC,aAAA;IAED,YAAA,IAAI,QAAQ,CAAC,IAAI,IAAI,mBAAmB,EAAE;oBACxC,QAAQ,CAAC,IAAI,GAAG,mBAAmB,CAAE,QAAQ,CAAC,IAAI,CAAE,CAAA;IACrD,aAAA;IAED,YAAA,OAAO,QAAQ,CAAA;aAChB;IAED,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACrC,YAAA,IAAI,IAAI,GAAG,KAAK,CAAE,CAAC,CAAE,CAAA;IACrB,YAAA,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,CAAA;gBAClB,IAAI,IAAI,KAAK,EAAE,EAAE;oBACf,SAAQ;IACT,aAAA;IACD,YAAA,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;IAC9B,YAAA,QAAQ,GAAG,UAAU,CAAC,KAAK,EAAE,CAAA;IAC7B,YAAA,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;IAE3B,YAAA,QAAQ,QAAQ;IACd,gBAAA,KAAK,QAAQ;IAEX,oBAAA,MAAM,CAAC,MAAM,GAAG,UAAU,CAAE,CAAC,CAAE,CAAA;IAC/B,oBAAA,MAAM,CAAC,OAAO,GAAG,UAAU,CAAE,CAAC,CAAE,CAAA;wBAEhC,MAAK;IAEP,gBAAA,KAAK,SAAS;IAEZ,oBAAA,MAAM,CAAC,QAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;wBAE3B,MAAK;IAEP,gBAAA,KAAK,SAAS;wBAEZ,IAAI,cAAc,KAAK,SAAS,EAAE;IAChC,wBAAA,MAAM,CAAC,QAAS,CAAC,IAAI,CAAC,cAA4B,CAAC,CAAA;IACpD,qBAAA;wBAED,cAAc,GAAG,EAAgB,CAAA;IACjC,oBAAA,cAAc,CAAC,IAAI,GAAG,UAAU,CAAE,CAAC,CAAE,CAAA;wBACrC,cAAc,CAAC,KAAK,GAAG,QAAQ,CAAC,UAAU,CAAE,CAAC,CAAE,CAAC,CAAA;IAChD,oBAAA,cAAc,CAAC,UAAU,GAAG,EAAE,CAAA;wBAE9B,MAAK;IAEP,gBAAA,KAAK,UAAU;IAEb,oBAAA,cAAe,CAAC,UAAU,CAAC,IAAI,CAAC,sBAAsB,CAAC,UAAU,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAA;wBAE7F,MAAK;IAEP,gBAAA;wBAEE,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAA;IACjD,aAAA;IACF,SAAA;YAED,IAAI,cAAc,KAAK,SAAS,EAAE;IAChC,YAAA,MAAM,CAAC,QAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAAA;IACtC,SAAA;IAED,QAAA,OAAO,MAAM,CAAA;SACd;IAED,IAAA,gBAAgB,EAAE,UAAU,CAAS,EAAE,IAAY,EAAA;IACjD,QAAA,QAAQ,IAAI;IACV,YAAA,KAAK,MAAM,CAAC;IAAC,YAAA,KAAK,OAAO,CAAC;IAAC,YAAA,KAAK,OAAO,CAAC;IAAC,YAAA,KAAK,QAAQ,CAAC;IAAC,YAAA,KAAK,KAAK,CAAC;IAAC,YAAA,KAAK,MAAM,CAAC;IAChF,YAAA,KAAK,MAAM,CAAC;IAAC,YAAA,KAAK,OAAO,CAAC;IAAC,YAAA,KAAK,OAAO,CAAC;IAAC,YAAA,KAAK,QAAQ,CAAC;IAAC,YAAA,KAAK,OAAO,CAAC;IAAC,YAAA,KAAK,QAAQ;IAEjF,gBAAA,OAAO,QAAQ,CAAC,CAAC,CAAC,CAAA;IAEpB,YAAA,KAAK,OAAO,CAAC;IAAC,YAAA,KAAK,QAAQ,CAAC;IAAC,YAAA,KAAK,SAAS,CAAC;IAAC,YAAA,KAAK,SAAS;IAEzD,gBAAA,OAAO,UAAU,CAAC,CAAC,CAAC,CAAA;IACvB,SAAA;SACF;IAED,IAAA,iBAAiB,EAAE,UAAU,UAAyB,EAAE,IAAY,EAAA;YAClE,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;YAE9B,IAAI,OAAO,GAAG,EAAgB,CAAA;IAE9B,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC1C,IAAI,UAAU,CAAE,CAAC,CAAE,CAAC,IAAI,KAAK,MAAM,EAAE;oBACnC,IAAI,IAAI,GAAG,EAAE,CAAA;IACb,gBAAA,IAAI,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,UAAU,CAAE,CAAC,CAAE,CAAC,SAAS,CAAC,CAAA;oBAExE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;wBAC1B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,UAAU,CAAE,CAAC,CAAE,CAAC,QAAQ,CAAC,CAAC,CAAA;IAC3E,iBAAA;oBAED,OAAO,CAAE,UAAU,CAAE,CAAC,CAAE,CAAC,IAAI,CAAE,GAAG,IAAI,CAAA;IACvC,aAAA;IAAM,iBAAA;oBACL,OAAO,CAAE,UAAU,CAAE,CAAC,CAAE,CAAC,IAAI,CAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,UAAU,CAAE,CAAC,CAAE,CAAC,IAAI,CAAC,CAAA;IAC9F,aAAA;IACF,SAAA;IAED,QAAA,OAAO,OAAO,CAAA;SACf;QAED,UAAU,EAAE,UAAU,IAAY,EAAA;;IAGhC,QAAA,IAAI,QAAQ,GAAG,IAAIS,cAAQ,EAAiB,CAAA;IAE5C,QAAA,IAAI,MAAM,CAAA;YAEV,IAAI,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAA;YAEnC,IAAI,WAAW,GAAG,wBAAwB,CAAA;YAC1C,IAAI,IAAI,GAAG,EAAE,CAAA;IACb,QAAA,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE;IAC9C,YAAA,IAAI,GAAG,MAAM,CAAE,CAAC,CAAE,CAAA;IACnB,SAAA;YAED,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;YAC5B,IAAI,cAAc,GAAG,CAAC,CAAA;YACtB,IAAI,mBAAmB,GAAG,CAAC,CAAA;IAC3B,QAAA,QAAQ,CAAC,QAAQ,GAAG,KAAK,CAAA;IAEzB,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACrC,YAAA,IAAI,IAAI,GAAG,KAAK,CAAE,CAAC,CAAE,CAAA;IACrB,YAAA,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,CAAA;gBAClB,IAAI,IAAI,KAAK,EAAE,EAAE;oBACf,SAAQ;IACT,aAAA;gBAED,IAAI,mBAAmB,IAAI,MAAM,CAAC,QAAQ,CAAE,cAAc,CAAE,CAAC,KAAK,EAAE;IAClE,gBAAA,cAAc,EAAE,CAAA;oBAChB,mBAAmB,GAAG,CAAC,CAAA;IACxB,aAAA;IAED,YAAA,IAAI,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,QAAQ,CAAE,cAAc,CAAE,CAAC,UAAU,EAAE,IAAI,CAAC,CAAA;IAExF,YAAA,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAE,cAAc,CAAE,CAAC,IAAI,EAAE,OAAO,CAAC,CAAA;IAE7E,YAAA,mBAAmB,EAAE,CAAA;IACtB,SAAA;IAED,QAAA,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAA;SAClC;QAED,WAAW,EAAE,UAAU,QAAqB,EAAA;YAC1C,IAAI,QAAQ,CAAC,QAAQ,EAAE;IACrB,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC9C,gBAAA,QAAQ,CAAC,KAAK,CAAE,CAAC,CAAE,CAAC,YAAY,GAAG;wBACjC,QAAQ,CAAC,MAAM,CAAE,QAAQ,CAAC,KAAK,CAAE,CAAC,CAAE,CAAC,CAAC,CAAE;wBACxC,QAAQ,CAAC,MAAM,CAAE,QAAQ,CAAC,KAAK,CAAE,CAAC,CAAE,CAAC,CAAC,CAAE;wBACxC,QAAQ,CAAC,MAAM,CAAE,QAAQ,CAAC,KAAK,CAAE,CAAC,CAAE,CAAC,CAAC,CAAE;qBACzC,CAAA;IACF,aAAA;IAED,YAAA,QAAQ,CAAC,kBAAkB,GAAG,IAAI,CAAA;IACnC,SAAA;YAED,QAAQ,CAAC,qBAAqB,EAAE,CAAA;IAEhC,QAAA,OAAO,QAAQ,CAAA;SAChB;IAED,IAAA,aAAa,EAAE,UAAU,QAAqB,EAAE,WAAmB,EAAE,OAAmB,EAAA;YACtF,IAAI,WAAW,KAAK,QAAQ,EAAE;gBAC5B,QAAQ,CAAC,QAAQ,CAAC,IAAI,CACpB,IAAItD,aAAO,CAAC,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAC7C,CAAA;gBAED,IAAI,KAAK,IAAI,OAAO,IAAI,OAAO,IAAI,OAAO,IAAI,MAAM,IAAI,OAAO,EAAE;IAC/D,gBAAA,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAA;IAExB,gBAAA,IAAI,KAAK,GAAG,IAAII,WAAK,EAAE,CAAA;oBACvB,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,GAAG,KAAK,EAAE,OAAO,CAAC,KAAK,GAAG,KAAK,EAAE,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC,CAAA;IAC9E,gBAAA,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;IAC5B,aAAA;IACF,SAAA;iBAAM,IAAI,WAAW,KAAK,MAAM,EAAE;IACjC,YAAA,IAAI,aAAa,GAAG,OAAO,CAAC,cAAc,CAAA;IAE1C,YAAA,IAAI,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;oBAC9B,QAAQ,CAAC,KAAK,CAAC,IAAI,CACjB,IAAIoF,WAAK,CAAC,aAAa,CAAE,CAAC,CAAE,EAAE,aAAa,CAAE,CAAC,CAAE,EAAE,aAAa,CAAE,CAAC,CAAE,CAAC,CACtE,CAAA;IACF,aAAA;IAAM,iBAAA,IAAI,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;IACrC,gBAAA,QAAQ,CAAC,KAAK,CAAC,IAAI,CACjB,IAAIA,WAAK,CAAC,aAAa,CAAE,CAAC,CAAE,EAAE,aAAa,CAAE,CAAC,CAAE,EAAE,aAAa,CAAE,CAAC,CAAE,CAAC,EACrE,IAAIA,WAAK,CAAC,aAAa,CAAE,CAAC,CAAE,EAAE,aAAa,CAAE,CAAC,CAAE,EAAE,aAAa,CAAE,CAAC,CAAE,CAAC,CACtE,CAAA;IACF,aAAA;IACF,SAAA;SACF;QAED,UAAU,EAAE,UAAU,QAAkB,EAAE,EAAU,EAAE,IAAY,EAAE,YAAqB,EAAA;IACvF,QAAA,QAAQ,IAAI;;IAEV,YAAA,KAAK,MAAM,CAAC;IAAC,YAAA,KAAK,MAAM,EAAE,OAAO,CAAE,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAA;IAE5D,YAAA,KAAK,OAAO,CAAC;IAAC,YAAA,KAAK,OAAO,EAAE,OAAO,CAAE,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,CAAA;IAE/D,YAAA,KAAK,OAAO,CAAC;IAAC,YAAA,KAAK,OAAO,EAAE,OAAO,CAAE,QAAQ,CAAC,QAAQ,CAAC,EAAE,EAAE,YAAY,CAAC,EAAE,CAAC,CAAE,CAAA;IAE7E,YAAA,KAAK,QAAQ,CAAC;IAAC,YAAA,KAAK,QAAQ,EAAE,OAAO,CAAE,QAAQ,CAAC,SAAS,CAAC,EAAE,EAAE,YAAY,CAAC,EAAE,CAAC,CAAE,CAAA;IAEhF,YAAA,KAAK,OAAO,CAAC;IAAC,YAAA,KAAK,KAAK,EAAE,OAAO,CAAE,QAAQ,CAAC,QAAQ,CAAC,EAAE,EAAE,YAAY,CAAC,EAAE,CAAC,CAAE,CAAA;IAE3E,YAAA,KAAK,QAAQ,CAAC;IAAC,YAAA,KAAK,MAAM,EAAE,OAAO,CAAE,QAAQ,CAAC,SAAS,CAAC,EAAE,EAAE,YAAY,CAAC,EAAE,CAAC,CAAE,CAAA;IAE9E,YAAA,KAAK,SAAS,CAAC;IAAC,YAAA,KAAK,OAAO,EAAE,OAAO,CAAE,QAAQ,CAAC,UAAU,CAAC,EAAE,EAAE,YAAY,CAAC,EAAE,CAAC,CAAE,CAAA;IAEjF,YAAA,KAAK,SAAS,CAAC;IAAC,YAAA,KAAK,QAAQ,EAAE,OAAO,CAAE,QAAQ,CAAC,UAAU,CAAC,EAAE,EAAE,YAAY,CAAC,EAAE,CAAC,CAAE,CAAA;IACnF,SAAA;SACF;QAED,iBAAiB,EAAE,UAAU,QAAkB,EAAE,EAAU,EAAE,UAAyB,EAAE,YAAqB,EAAA;YAC3G,IAAI,OAAO,GAAG,EAAgB,CAAA;IAC9B,QAAA,IAAI,MAAM,CAAA;YACV,IAAI,IAAI,GAAG,CAAC,CAAA;IAEZ,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC1C,IAAI,UAAU,CAAE,CAAC,CAAE,CAAC,IAAI,KAAK,MAAM,EAAE;oBACnC,IAAI,IAAI,GAAG,EAAE,CAAA;oBAEb,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,EAAE,GAAG,IAAI,EAAE,UAAU,CAAE,CAAC,CAAE,CAAC,SAAS,EAAE,YAAY,CAAC,CAAA;IACtF,gBAAA,IAAI,CAAC,GAAG,MAAM,CAAE,CAAC,CAAE,CAAA;IACnB,gBAAA,IAAI,IAAI,MAAM,CAAE,CAAC,CAAE,CAAA;oBAEnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;wBAC1B,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,EAAE,GAAG,IAAI,EAAE,UAAU,CAAE,CAAC,CAAE,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAA;wBACrF,IAAI,CAAC,IAAI,CAAC,MAAM,CAAE,CAAC,CAAE,CAAC,CAAA;IACtB,oBAAA,IAAI,IAAI,MAAM,CAAE,CAAC,CAAE,CAAA;IACpB,iBAAA;oBAED,OAAO,CAAE,UAAU,CAAE,CAAC,CAAE,CAAC,IAAI,CAAE,GAAG,IAAI,CAAA;IACvC,aAAA;IAAM,iBAAA;oBACL,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,EAAE,GAAG,IAAI,EAAE,UAAU,CAAE,CAAC,CAAE,CAAC,IAAI,EAAE,YAAY,CAAC,CAAA;IACjF,gBAAA,OAAO,CAAE,UAAU,CAAE,CAAC,CAAE,CAAC,IAAI,CAAE,GAAG,MAAM,CAAE,CAAC,CAAE,CAAA;IAC7C,gBAAA,IAAI,IAAI,MAAM,CAAE,CAAC,CAAE,CAAA;IACpB,aAAA;IACF,SAAA;IAED,QAAA,OAAO,CAAE,OAAO,EAAE,IAAI,CAAE,CAAA;SACzB;QAED,WAAW,EAAE,UAAU,IAAiB,EAAA;IACtC,QAAA,IAAI,QAAQ,GAAG,IAAIlC,cAAQ,EAAE,CAAA;IAE7B,QAAA,IAAI,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAA;YACjD,IAAI,YAAY,IAAI,MAAM,CAAC,MAAM,KAAK,sBAAsB,CAAC,CAAA;YAC7D,IAAI,IAAI,GAAG,IAAI,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,YAAY,CAAC,CAAA;IAClD,QAAA,IAAI,MAAM,CAAA;YACV,IAAI,GAAG,GAAG,CAAC,CAAA;IAEX,QAAA,KAAK,IAAI,cAAc,GAAG,CAAC,EAAE,cAAc,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,cAAc,EAAE,EAAE;IACtF,YAAA,KAAK,IAAI,mBAAmB,GAAG,CAAC,EAAE,mBAAmB,GAAG,MAAM,CAAC,QAAQ,CAAE,cAAc,CAAE,CAAC,KAAK,EAAE,mBAAmB,EAAE,EAAE;oBACtH,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,GAAG,EAAE,MAAM,CAAC,QAAQ,CAAE,cAAc,CAAE,CAAC,UAAU,EAAE,YAAY,CAAC,CAAA;IACtG,gBAAA,GAAG,IAAI,MAAM,CAAE,CAAC,CAAE,CAAA;IAClB,gBAAA,IAAI,OAAO,GAAG,MAAM,CAAE,CAAC,CAAE,CAAA;IAEzB,gBAAA,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAE,cAAc,CAAE,CAAC,IAAI,EAAE,OAAO,CAAC,CAAA;IAC9E,aAAA;IACF,SAAA;IAED,QAAA,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAA;SAClC;KAEF,CAAA;IAED,MAAM,SAAU,SAAQ,aAAa,CAAA;IACnC,IAAA,IAAI,IAAI,GAAM,EAAA,OAAO,KAAK,CAAA,EAAE;QAE5B,SAAS,GAAA;YACP,OAAO,IAAI,SAAS,EAAE,CAAA;SACvB;IACF,CAAA;IAED,cAAc,CAAC,GAAG,CAAC,KAAK,EAAE,SAAS,CAAC;;ICxapC;;;;IAIG;IAYH;;IAEG;IACH,MAAM,SAAU,SAAQ,MAAM,CAAA;IAC5B;;;;;;;IAOK;QACL,WAAa,CAAA,QAAkB,EAAE,MAAqC,EAAA;IACpE,QAAA,MAAM,CAAC,GAAG,MAAM,IAAI,EAAE,CAAA;IAEtB,QAAA,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAA;YAElB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,SAAS,EAAE,GAAG,CAAC,CAAA;YAC3C,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,GAAG,CAAC,CAAA;YACvC,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,WAAW,EAAE,KAAK,CAAC,CAAA;YAEjD,IAAI,CAAC,KAAK,GAAG;gBACX,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,IAAI,EAAE,IAAI,CAAC,IAAI;IACf,YAAA,WAAW,EAAE,EAAE;IACf,YAAA,IAAI,EAAE,EAAE;aACT,CAAA;SACF;IAED,IAAA,IAAI,IAAI,GAAM,EAAA,OAAO,KAAK,CAAA,EAAE;IAC5B,IAAA,IAAI,SAAS,GAAM,EAAA,OAAO,OAAO,CAAA,EAAE;QAEnC,MAAM,GAAA;IACJ,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAA;IAC5B,QAAA,MAAM,WAAW,GAAG,IAAI,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,CAAA;YAEhE,IAAI,CAAC,GAAG,CAAC,CAAA;IAET,QAAA,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,KAAK,IAAG;IACrC,YAAA,MAAM,CAAC,GAAG,KAAK,CAAC,MAAM,CAAA;gBAEtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;oBAC1B,MAAM,IAAI,GAAG,KAAK,CAAE,CAAC,CAAE,CAAC,IAAI,EAAE,CAAA;IAC9B,gBAAA,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC;wBAAE,SAAQ;oBAC3C,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAA;oBAEtC,IAAI,CAAC,KAAK,CAAC,EAAE;IACX,oBAAA,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,MAAM,CAAA;IAChC,iBAAA;IAAM,qBAAA,IAAI,IAAI,EAAE;IACf,oBAAA,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;IAClB,iBAAA;IACD,gBAAA,EAAE,CAAC,CAAA;IACJ,aAAA;IACH,SAAC,CAAC,CAAA;SACH;IACF,CAAA;IAED,cAAc,CAAC,GAAG,CAAC,KAAK,EAAE,SAAS,CAAC;;ICzEpC;;;;IAIG;IAWH,MAAM,UAAW,SAAQ,MAAM,CAAA;QAC7B,WAAa,CAAA,QAAkB,EAAE,MAAsC,EAAA;IACrE,QAAA,MAAM,CAAC,GAAG,MAAM,IAAI,EAAE,CAAA;IAEtB,QAAA,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAA;YAElB,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;YAEvC,IAAI,CAAC,IAAI,GAAG;gBACV,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,IAAI,EAAE,IAAI,CAAC,IAAI;IACf,YAAA,IAAI,EAAE,EAAE;aACT,CAAA;SACF;IAED,IAAA,IAAI,IAAI,GAAM,EAAA,OAAO,MAAM,CAAA,EAAE;IAC7B,IAAA,IAAI,SAAS,GAAM,EAAA,OAAO,MAAM,CAAA,EAAE;IAClC,IAAA,IAAI,MAAM,GAAM,EAAA,OAAO,IAAI,CAAA,EAAE;QAE7B,MAAM,GAAA;YACJ,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,IAAI,CAAC,MAAM,EAAE;IAC3C,YAAA,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAA;IACpD,SAAA;IAAM,aAAA;gBACL,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAA;IACpC,SAAA;SACF;IACF,CAAA;IAED,cAAc,CAAC,GAAG,CAAC,MAAM,EAAE,UAAU,CAAC;;IC3CtC;;;;IAIG;IAQH,MAAM,aAAc,SAAQ,MAAM,CAAA;QAChC,WAAa,CAAA,QAAkB,EAAE,MAAkC,EAAA;IACjE,QAAA,MAAM,CAAC,GAAG,MAAM,IAAI,EAAE,CAAA;IAEtB,QAAA,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAA;YAElB,IAAI,CAAC,OAAO,GAAG;gBACb,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,IAAI,EAAE,IAAI,CAAC,IAAI;IACf,YAAA,IAAI,EAAE,SAAS;aAChB,CAAA;SACF;IAED,IAAA,IAAI,IAAI,GAAM,EAAA,OAAO,SAAS,CAAA,EAAE;IAChC,IAAA,IAAI,SAAS,GAAM,EAAA,OAAO,SAAS,CAAA,EAAE;IACrC,IAAA,IAAI,QAAQ,GAAM,EAAA,OAAO,IAAI,CAAA,EAAE;QAE/B,MAAM,GAAA;IACJ,QAAA,IAAI5C,aAAK;gBAAE,GAAG,CAAC,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;IAExD,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;IAErD,QAAA,IAAIA,aAAK;gBAAE,GAAG,CAAC,OAAO,CAAC,uBAAuB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;SAC5D;IACF,CAAA;IAED,cAAc,CAAC,GAAG,CAAC,SAAS,EAAE,aAAa,CAAC;;ICtC5C;;;;IAIG;IAOH,MAAM,YAAa,SAAQ,MAAM,CAAA;QAC/B,WAAa,CAAA,QAAkB,EAAE,MAAkC,EAAA;IACjE,QAAA,MAAM,CAAC,GAAG,MAAM,IAAI,EAAE,CAAA;IAEtB,QAAA,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAA;YAElB,IAAI,CAAC,MAAM,GAAG;gBACZ,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,IAAI,EAAE,IAAI,CAAC,IAAI;IACf,YAAA,IAAI,EAAE,SAAS;aAChB,CAAA;SACF;IAED,IAAA,IAAI,IAAI,GAAM,EAAA,OAAO,QAAQ,CAAA,EAAE;IAC/B,IAAA,IAAI,SAAS,GAAM,EAAA,OAAO,QAAQ,CAAA,EAAE;IACpC,IAAA,IAAI,QAAQ,GAAM,EAAA,OAAO,IAAI,CAAA,EAAE;QAE/B,MAAM,GAAA;IACJ,QAAA,IAAIA,aAAK;gBAAE,GAAG,CAAC,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;IAEvD,QAAA,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;IAEvD,QAAA,IAAIA,aAAK;gBAAE,GAAG,CAAC,OAAO,CAAC,sBAAsB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;SAC3D;IACF,CAAA;IAED,cAAc,CAAC,GAAG,CAAC,QAAQ,EAAE,YAAY,CAAC;;ICrC1C;;;;IAIG;IAMH,MAAM,UAAW,SAAQ,MAAM,CAAA;QAC7B,WAAa,CAAA,QAAkB,EAAE,MAAkC,EAAA;IACjE,QAAA,KAAK,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAA;YAEvB,IAAI,CAAC,IAAI,GAAG;gBAEV,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,IAAI,EAAE,IAAI,CAAC,IAAI;IACf,YAAA,IAAI,EAAE,EAAE;aAET,CAAA;SACF;IAED,IAAA,IAAI,IAAI,GAAM,EAAA,OAAO,MAAM,CAAA,EAAE;IAC7B,IAAA,IAAI,SAAS,GAAM,EAAA,OAAO,MAAM,CAAA,EAAE;QAElC,MAAM,GAAA;YACJ,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAA;SACxC;IACF,CAAA;IAED,cAAc,CAAC,GAAG,CAAC,KAAK,EAAE,UAAU,CAAC,CAAA;IACrC,cAAc,CAAC,GAAG,CAAC,MAAM,EAAE,UAAU,CAAC;;IChCtC;;;;IAIG;IAaH,MAAM,OAAO,GAAG,cAAc,CAAA;IAC9B,MAAM,KAAK,GAAG,iBAAiB,CAAA;IAC/B,MAAM,SAAS,GAAG,UAAU,CAAA;IAC5B,MAAM,MAAM,GAAG,0CAA0C,CAAA;IAEzD,SAAS,KAAK,CAAE,GAAW,EAAA;QACzB,OAAO,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAA;IACjC,CAAC;IAEK,SAAU,QAAQ,CAAE,GAAW,EAAA;;IAEnC,IAAA,GAAG,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAAA;QAEhD,OAAO,QAAQ,EAAE,CAAA;IAEjB,IAAA,SAAS,QAAQ,GAAA;YACf,OAAO;gBACL,WAAW,EAAE,WAAW,EAAE;gBAC1B,IAAI,EAAE,GAAG,EAAE;aACZ,CAAA;SACF;IAED,IAAA,SAAS,WAAW,GAAA;IAClB,QAAA,MAAM,CAAC,GAAG,KAAK,CAAC,YAAY,CAAC,CAAA;IAC7B,QAAA,IAAI,CAAC,CAAC;gBAAE,OAAM;;IAGd,QAAA,MAAM,IAAI,GAAY;IACpB,YAAA,UAAU,EAAE,EAAE;aACf,CAAA;;YAGD,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE;IAC3B,YAAA,MAAM,IAAI,GAAG,SAAS,EAAE,CAAA;IACxB,YAAA,IAAI,CAAC,IAAI;IAAE,gBAAA,OAAO,IAAI,CAAA;gBACtB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAA;IACxC,SAAA;YACD,KAAK,CAAC,QAAQ,CAAC,CAAA;IACf,QAAA,OAAO,IAAI,CAAA;SACZ;IAED,IAAA,SAAS,GAAG,GAAA;IACV,QAAA,MAAM,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAA;IACtB,QAAA,IAAI,CAAC,CAAC;gBAAE,OAAM;;IAGd,QAAA,MAAM,IAAI,GAAY;IACpB,YAAA,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;IACV,YAAA,UAAU,EAAE,EAAE;IACd,YAAA,QAAQ,EAAE,EAAE;aACb,CAAA;;YAGD,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE;IAClD,YAAA,MAAM,IAAI,GAAG,SAAS,EAAE,CAAA;IACxB,YAAA,IAAI,CAAC,IAAI;IAAE,gBAAA,OAAO,IAAI,CAAA;gBACtB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAA;IACxC,SAAA;;IAGD,QAAA,IAAI,KAAK,CAAC,YAAY,CAAC,EAAE;IACvB,YAAA,OAAO,IAAI,CAAA;IACZ,SAAA;YACD,KAAK,CAAC,SAAS,CAAC,CAAA;;IAGhB,QAAA,IAAI,CAAC,OAAO,GAAG,OAAO,EAAE,CAAA;;IAGxB,QAAA,IAAI,KAAK,CAAA;IACT,QAAA,QAAQ,KAAK,GAAG,GAAG,EAAE,GAAG;IACtB,YAAA,IAAI,CAAC,QAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;IAC3B,SAAA;;YAGD,KAAK,CAAC,kBAAkB,CAAC,CAAA;IACzB,QAAA,OAAO,IAAI,CAAA;SACZ;IAED,IAAA,SAAS,OAAO,GAAA;IACd,QAAA,MAAM,CAAC,GAAG,KAAK,CAAC,SAAS,CAAC,CAAA;IAC1B,QAAA,IAAI,CAAC;IAAE,YAAA,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA;IAClB,QAAA,OAAO,EAAE,CAAA;SACV;IAED,IAAA,SAAS,SAAS,GAAA;IAChB,QAAA,MAAM,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAA;IACvB,QAAA,IAAI,CAAC,CAAC;gBAAE,OAAM;IACd,QAAA,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAA;SAC1C;QAED,SAAS,KAAK,CAAE,EAAU,EAAA;YACxB,MAAM,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAA;IACvB,QAAA,IAAI,CAAC,CAAC;gBAAE,OAAM;IACd,QAAA,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAA;IAC5B,QAAA,OAAO,CAAC,CAAA;SACT;IAED,IAAA,SAAS,GAAG,GAAA;IACV,QAAA,OAAO,GAAG,CAAC,MAAM,KAAK,CAAC,CAAA;SACxB;QAED,SAAS,EAAE,CAAE,MAAc,EAAA;YACzB,OAAO,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;SACjC;IACH;;IC1HA;;;;IAIG;IAaH,MAAM,SAAU,SAAQ,MAAM,CAAA;QAM5B,WAAa,CAAA,QAAkB,EAAE,MAAqC,EAAA;IACpE,QAAA,MAAM,CAAC,GAAG,MAAM,IAAI,EAAE,CAAA;IAEtB,QAAA,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAA;YAElB,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,CAAC,CAAC,YAAY,EAAE,KAAK,CAAC,CAAA;YAEnD,IAAI,CAAC,GAAG,GAAG;gBACT,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,IAAI,EAAE,IAAI,CAAC,IAAI;IACf,YAAA,IAAI,EAAE,EAAE;aACT,CAAA;SACF;IAED,IAAA,IAAI,IAAI,GAAM,EAAA,OAAO,KAAK,CAAA,EAAE;IAC5B,IAAA,IAAI,SAAS,GAAM,EAAA,OAAO,KAAK,CAAA,EAAE;IACjC,IAAA,IAAI,KAAK,GAAM,EAAA,OAAO,IAAI,CAAA,EAAE;IAE5B,IAAA,WAAW,CAAE,GAAW,EAAA;IACtB,QAAA,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAA;SACrB;IAED,IAAA,WAAW,CAAE,GAAW,EAAA;IACtB,QAAA,MAAM,SAAS,GAAG,IAAK,MAAc,CAAC,SAAS,EAAe,CAAA;YAC9D,OAAO,SAAS,CAAC,eAAe,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;SAClD;QAED,MAAM,GAAA;IACJ,QAAA,IAAIA,aAAK;gBAAE,GAAG,CAAC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;YAEpD,IAAI,IAAI,CAAC,YAAY,EAAE;gBACrB,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,YAAY,QAAQ,EAAE;oBAC1C,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAA;IACnC,aAAA;IAAM,iBAAA;IACL,gBAAA,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAA;IACzD,aAAA;IACF,SAAA;IAAM,aAAA;IACL,YAAA,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAA;IACzD,SAAA;IAED,QAAA,IAAIA,aAAK;gBAAE,GAAG,CAAC,OAAO,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;SACxD;IACF,CAAA;IAED,cAAc,CAAC,GAAG,CAAC,KAAK,EAAE,SAAS,CAAC;;ICnEpC;;;;IAIG;IAYH,SAAS,YAAY,CAAC,CAAe,EAAE,IAAY,EAAA;QACjD,MAAM,IAAI,GAAG,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,CAAA;IACjC,IAAA,OAAO,IAAI,KAAK,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,EAAE,CAAA;IACxC,CAAC;IAED,SAAS,OAAO,CAAE,CAAe,EAAE,QAAiB,EAAE,UAAU,GAAG,KAAK,EAAA;QACtE,MAAM,KAAK,GAAG,YAAY,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,IAAI,EAAE,CAAA;QAC7C,MAAM,KAAK,GAAG,YAAY,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,IAAI,EAAE,CAAA;QAC7C,MAAM,OAAO,GAAG,YAAY,CAAC,CAAC,EAAE,SAAS,CAAC,CAAA;QAC1C,IAAI,IAAI,GAAG,YAAY,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAA;IACpC,IAAA,IAAI,KAAK;IAAE,QAAA,IAAI,IAAI,GAAG,GAAG,KAAK,CAAA;IAC9B,IAAA,IAAI,KAAK;IAAE,QAAA,IAAI,IAAI,GAAG,GAAG,KAAK,CAAA;IAC9B,IAAA,IAAI,QAAQ;IAAE,QAAA,IAAI,IAAI,GAAG,GAAG,QAAQ,CAAA;IACpC,IAAA,IAAI,UAAU,IAAI,OAAO,CAAC,IAAI,EAAE;IAAE,QAAA,IAAI,IAAI,GAAG,GAAG,OAAO,CAAA;IACvD,IAAA,IAAI,IAAI,GAAG,IAAI,QAAQ,CAAC,YAAY,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;IACtD,IAAA,OAAO,IAAI,CAAA;IACb,CAAC;IAED,SAAS,UAAU,CAAE,CAAe,EAAA;QAClC,MAAM,KAAK,GAAG,YAAY,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,IAAI,EAAE,CAAA;QAC7C,MAAM,OAAO,GAAG,YAAY,CAAC,CAAC,EAAE,SAAS,CAAC,CAAA;QAC1C,MAAM,MAAM,GAAG,YAAY,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAA;IACxC,IAAA,IAAI,IAAI,GAAG,CAAA,CAAA,EAAI,OAAO,CAAI,CAAA,EAAA,MAAM,EAAE,CAAA;IAClC,IAAA,IAAI,KAAK;IAAE,QAAA,IAAI,IAAI,CAAA,CAAA,EAAI,KAAK,CAAA,CAAE,CAAA;IAC9B,IAAA,OAAO,IAAI,CAAA;IACb,CAAC;IAED,SAAS,UAAU,CAAE,IAA6B,EAAE,GAAW,EAAE,GAAW,EAAA;IAC1E,IAAA,IAAI,IAAI,CAAE,GAAG,CAAE,KAAK,SAAS,EAAE;IAC7B,QAAA,IAAI,CAAE,GAAG,CAAE,GAAG,GAAG,CAAA;IAClB,KAAA;IAAM,SAAA;IACL,QAAA,IAAI,CAAE,GAAG,CAAE,IAAI,GAAG,CAAA;IACnB,KAAA;IACH,CAAC;IAED,SAAS,YAAY,CAAE,IAAe,EAAE,KAAa,EAAA;QACnD,OAAO,IAAI,KAAK,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK,CAAA;IAC9C,CAAC;IAED,SAAS,WAAW,CAAE,EAAa,EAAA;IACjC,IAAA,MAAM,KAAK,GAAG,EAAE,CAAC,OAAO,CAAA;IACxB,IAAA,MAAM,KAAK,GAAG,EAAE,CAAC,SAAS,CAAA;IAC1B,IAAA,MAAM,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAA;IAC5B,IAAA,MAAM,OAAO,GAAG,EAAE,CAAC,MAAM,CAAA;IACzB,IAAA,IAAI,IAAI,GAAG,EAAE,CAAC,KAAK,GAAG,EAAE,CAAA;IACxB,IAAA,IAAI,KAAK;IAAE,QAAA,IAAI,IAAI,GAAG,GAAG,KAAK,CAAA;IAC9B,IAAA,IAAI,KAAK;IAAE,QAAA,IAAI,IAAI,GAAG,GAAG,KAAK,CAAA;IAC9B,IAAA,IAAI,QAAQ;IAAE,QAAA,IAAI,IAAI,GAAG,GAAG,QAAQ,CAAA;IACpC,IAAA,IAAI,OAAO;IAAE,QAAA,IAAI,IAAI,GAAG,GAAG,OAAO,CAAA;IAClC,IAAA,IAAI,IAAI,GAAG,GAAG,EAAE,CAAC,UAAU,CAAA;IAC3B,IAAA,OAAO,IAAI,CAAA;IACb,CAAC;IAED,SAAS,eAAe,CAAE,SAAmD,EAAE,CAAU,EAAE,EAAgB,EAAA;QACzG,IAAI,eAAe,GAAG,CAAC,CAAA;QAEvB,MAAM,OAAO,GAAG,CAAC,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAA;IAC/C,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;IAChD,QAAA,IAAI,SAAS,CAAE,YAAY,CAAC,OAAO,CAAE,CAAC,CAAE,CAAC,UAAU,EAAE,KAAK,CAAC,CAAE,EAAE;gBAC7D,eAAe,IAAI,CAAC,CAAA;gBACpB,MAAK;IACN,SAAA;IACF,KAAA;QAED,MAAM,aAAa,GAAG,CAAC,CAAC,oBAAoB,CAAC,eAAe,CAAC,CAAA;IAC7D,IAAA,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;YAC5B,eAAe,IAAI,CAAC,CAAA;IACrB,KAAA;QAED,MAAM,YAAY,GAAG,CAAC,CAAC,oBAAoB,CAAC,cAAc,CAAC,CAAA;IAC3D,IAAA,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;YAC3B,eAAe,IAAI,CAAC,CAAA;IACrB,KAAA;QAED,MAAM,aAAa,GAAG,CAAC,CAAC,oBAAoB,CAAC,eAAe,CAAC,CAAA;IAC7D,IAAA,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;YAC5B,eAAe,IAAI,CAAC,CAAA;IACrB,KAAA;QAED,IAAI,YAAY,CAAC,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,SAAS,CAAC,EAAE;YACpD,eAAe,IAAI,CAAC,CAAA;IACrB,KAAA;QAED,IAAI,YAAY,CAAC,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,SAAS,CAAC,EAAE;YACpD,eAAe,IAAI,CAAC,CAAA;IACrB,KAAA;QAED,IAAI,YAAY,CAAC,EAAE,CAAC,YAAY,CAAC,WAAW,CAAC,EAAE,SAAS,CAAC,EAAE;YACzD,eAAe,IAAI,CAAC,CAAA;IACrB,KAAA;IAED,IAAA,OAAO,eAAe,CAAA;IACxB,CAAC;IAED,MAAM,UAAU,CAAA;QA0Bd,WAAsB,CAAA,IAAY,EAAW,IAAY,EAAA;YAAnC,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAQ;YAAW,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAQ;YAzBzD,IAAQ,CAAA,QAAA,GAA4B,EAAE,CAAA;YACtC,IAAQ,CAAA,QAAA,GAA4B,EAAE,CAAA;IACtC;;;;;;;;;;;;;;IAcG;YACH,IAAO,CAAA,OAAA,GAA4B,EAAE,CAAA;YACrC,IAAS,CAAA,SAAA,GAA6C,EAAE,CAAA;YACxD,IAAU,CAAA,UAAA,GAA8B,EAAE,CAAA;YAC1C,IAAO,CAAA,OAAA,GAA4B,EAAE,CAAA;YACrC,IAAW,CAAA,WAAA,GAA6C,EAAE,CAAA;YAC1D,IAAQ,CAAA,QAAA,GAAoC,EAAE,CAAA;YAC9C,IAAS,CAAA,SAAA,GAAG,MAAM,CAAA;SAE2C;IAE7D,IAAA,IAAI,IAAI,GAAM,EAAA,OAAO,YAAY,CAAA,EAAE;IAEnC,IAAA,OAAO,CAAE,GAAgB,EAAA;IACvB,QAAA,IAAIA,aAAK;IAAE,YAAA,GAAG,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAA;IAEzC,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAA;IAC9B,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAA;IAC9B,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAA;IAC5B,QAAA,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAA;IAChC,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAA;IAClC,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAA;IAC5B,QAAA,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAA;IACpC,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAA;YAE9B,MAAM,OAAO,GAAG,GAAG,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAA;IACjD,QAAA,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;gBACxB,MAAM,kBAAkB,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,CAAA;IACjF,YAAA,IAAI,kBAAkB,CAAC,MAAM,KAAK,CAAC,EAAE;oBACnC,MAAM,iBAAiB,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,CAAA;IACzF,gBAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,iBAAiB,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;wBAC1D,MAAM,IAAI,GAAG,iBAAiB,CAAE,CAAC,CAAE,CAAC,UAAU,CAAA;IAC9C,oBAAA,MAAM,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,CAAA;IAC7B,oBAAA,OAAO,CAAE,IAAI,CAAE,GAAG,UAAU,CAAC,YAAY,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAA;IAC1D,iBAAA;IACF,aAAA;IACF,SAAA;YAED,MAAM,MAAM,GAAG,GAAG,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,CAAA;YAE3D,MAAM,UAAU,GAA6C,EAAE,CAAA;YAC/D,MAAM,SAAS,GAAa,EAAE,CAAA;IAE9B,QAAA,IAAIA,aAAK;IAAE,YAAA,GAAG,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAA;IAEnD,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;IAC/C,YAAA,MAAM,CAAC,GAAG,MAAM,CAAE,CAAC,CAAE,CAAA;IACrB,YAAA,MAAM,EAAE,GAAG,CAAC,CAAC,UAAU,CAAA;IAEvB,YAAA,MAAM,IAAI,GAAG,OAAO,CAAC,EAAE,CAAC,CAAA;gBACxB,IAAI,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,IAAI,EAAE;IACpC,gBAAA,QAAQ,CAAE,IAAI,CAAE,GAAG,UAAU,CAAC,YAAY,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAA;IACxD,aAAA;gBACD,IAAI,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,IAAI,EAAE;IACpC,gBAAA,QAAQ,CAAE,IAAI,CAAE,GAAG,UAAU,CAAC,YAAY,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAA;IACxD,aAAA;gBACD,MAAM,QAAQ,GAAG,GAAG,CAAC,eAAe,CAAC,MAAM,CAAC,CAAA;IAC5C,YAAA,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAA;IACrB,YAAA,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAA;gBAEzB,MAAM,OAAO,GAAG,CAAC,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAA;IAE/C,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;oBAChD,MAAM,EAAE,GAAG,OAAO,CAAE,CAAC,CAAE,CAAC,UAAU,CAAA;oBAClC,MAAM,IAAI,GAAG,YAAY,CAAC,EAAE,EAAE,MAAM,CAAC,CAAA;IAErC,gBAAA,IAAI,YAAY,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE;wBAC9B,MAAM,GAAG,GAAG,YAAY,CAAC,EAAE,EAAE,KAAK,CAAC,CAAA;wBACnC,MAAM,QAAQ,GAAG,OAAO,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAA;IACxC,oBAAA,QAAQ,CAAE,QAAQ,CAAE,GAAG,IAAI,CAAA;IAE3B,oBAAA,IAAI,UAAU,CAAE,GAAG,CAAE,KAAK,SAAS,EAAE;4BACnC,UAAU,CAAE,GAAG,CAAE,GAAG;IAClB,4BAAA,KAAK,EAAE,QAAQ;IACf,4BAAA,IAAI,EAAE,IAAI;6BACX,CAAA;IACF,qBAAA;IAAM,yBAAA;IACL,wBAAA,MAAM,CAAC,GAAG,UAAU,CAAE,GAAG,CAAE,CAAA;IAC3B,wBAAA,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,EAAE;IACnB,4BAAA,CAAC,CAAC,KAAK,GAAG,QAAQ,CAAA;IAClB,4BAAA,CAAC,CAAC,IAAI,GAAG,IAAI,CAAA;gCACb,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;IAC5B,4BAAA,SAAS,CAAE,GAAG,CAAE,GAAG,CAAC,CAAA;IACpB,4BAAA,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;IACnB,yBAAA;IACF,qBAAA;IACF,iBAAA;IACF,aAAA;IACF,SAAA;IAED,QAAA,IAAIA,aAAK;IAAE,YAAA,GAAG,CAAC,OAAO,CAAC,8BAA8B,CAAC,CAAA;IAEtD,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;IAC/C,YAAA,MAAM,CAAC,GAAG,MAAM,CAAE,CAAC,CAAE,CAAA;IACrB,YAAA,MAAM,EAAE,GAAG,CAAC,CAAC,UAAU,CAAA;gBAEvB,MAAM,IAAI,GAAG,YAAY,CAAC,EAAE,EAAE,MAAM,CAAC,CAAA;gBACrC,MAAM,SAAS,GAAG,YAAY,CAAC,EAAE,EAAE,KAAK,CAAC,KAAK,GAAG,CAAA;IAEjD,YAAA,IAAI,SAAS,EAAE;oBACb,MAAM,eAAe,GAAG,eAAe,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,CAAA;oBACzD,IAAI,eAAe,GAAG,CAAC,EAAE;IACvB,oBAAA,OAAO,CAAE,IAAI,CAAE,GAAG,eAAe,CAAA;IAClC,iBAAA;IACF,aAAA;IAAM,iBAAA;oBACL,MAAM,OAAO,GAAG,CAAC,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAA;oBAC/C,MAAM,eAAe,GAAG,CAAC,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,CAAA;oBAClE,MAAM,gBAAgB,GAAG,CAAC,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,CAAA;IAEpE,gBAAA,IAAI,eAAe,CAAC,MAAM,GAAG,CAAC,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;wBACnF,MAAM,QAAQ,GAAG,EAAE,CAAA;IACnB,oBAAA,WAAW,CAAE,IAAI,CAAE,GAAG,QAAQ,CAAA;IAE9B,oBAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;4BAChD,MAAM,EAAE,GAAG,OAAO,CAAE,CAAC,CAAE,CAAC,UAAU,CAAA;4BAClC,IAAI,SAAS,CAAE,YAAY,CAAC,EAAE,EAAE,KAAK,CAAC,CAAE,EAAE;IACxC,4BAAA,UAAU,CAAC,QAAQ,EAAE,YAAY,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAA;IAClD,yBAAA;IACF,qBAAA;IAED,oBAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,eAAe,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;4BACxD,MAAM,GAAG,GAAG,eAAe,CAAE,CAAC,CAAE,CAAC,UAAU,CAAA;IAC3C,wBAAA,YAAY,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,UAAU,QAAQ,EAAA;IAC9D,4BAAA,UAAU,CAAC,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAA;IACnC,yBAAC,CAAC,CAAA;IACH,qBAAA;IAED,oBAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;4BACzD,MAAM,GAAG,GAAG,gBAAgB,CAAE,CAAC,CAAE,CAAC,UAAU,CAAA;IAC5C,wBAAA,YAAY,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,UAAU,QAAQ,EAAA;IAC9D,4BAAA,UAAU,CAAC,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAA;IACnC,yBAAC,CAAC,CAAA;IACH,qBAAA;IACF,iBAAA;IACF,aAAA;IACF,SAAA;IAED,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,MAAM,CAAA;IAEnE,QAAA,IAAIA,aAAK;IAAE,YAAA,GAAG,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAA;SAC7C;IAED,IAAA,YAAY,CAAE,MAA4D,EAAA;IACxE,QAAA,IAAIA,aAAK;IAAE,YAAA,GAAG,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAA;IAE9C,QAAA,MAAM,CAAC,GAAG,MAAM,IAAI,EAAE,CAAA;IAEtB,QAAA,MAAM,CAAC,GAAG,CAAC,CAAC,SAAS,CAAA;IACrB,QAAA,MAAM,OAAO,GAAG,CAAC,CAAC,OAAQ,CAAA;IAC1B,QAAA,MAAM,CAAC,GAAG,IAAIN,WAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC,CAAA;IAEjD,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,YAAY,EAAE,CAAA;IAC5B,QAAA,MAAM,GAAG,GAAG,CAAC,CAAC,YAAY,EAAE,CAAA;IAC5B,QAAA,MAAM,IAAI,GAAG,IAAIJ,aAAO,EAAE,CAAA;IAC1B,QAAA,MAAM,KAAK,GAAG,IAAIA,aAAO,EAAE,CAAA;IAC3B,QAAA,MAAM,KAAK,GAAG,IAAIA,aAAO,EAAE,CAAA;IAE3B,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAA;IAClC,QAAA,MAAM,CAAC,GAAG,UAAU,CAAC,MAAM,CAAA;YAE3B,MAAM,SAAS,GAAG,IAAI,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;YACzC,MAAM,SAAS,GAAG,IAAI,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;IACzC,QAAA,MAAM,KAAK,GAAG,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAiB,CAAA;IAC7D,QAAA,MAAM,MAAM,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,CAAA;IAClC,QAAA,MAAM,OAAO,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,CAAA;IAEnC,QAAA,IAAIU,aAAK;IAAE,YAAA,GAAG,CAAC,IAAI,CAAC,kCAAkC,CAAC,CAAA;IAEvD,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAA;IAE9B,QAAA,CAAC,CAAC,QAAQ,CAAC,UAAU,EAAE,EAAA;IACrB,YAAA,MAAM,IAAI,GAAG,WAAW,CAAC,EAAE,CAAC,CAAA;IAC5B,YAAA,IAAI,QAAQ,CAAE,IAAI,CAAE,KAAK,IAAI,EAAE;IAC7B,gBAAA,QAAQ,CAAE,IAAI,CAAE,GAAG,EAAE,CAAC,KAAK,CAAA;IAC5B,aAAA;IACH,SAAC,CAAC,CAAA;IAEF,QAAA,IAAIA,aAAK;IAAE,YAAA,GAAG,CAAC,OAAO,CAAC,kCAAkC,CAAC,CAAA;YAE1D,IAAI,CAAC,GAAG,CAAC,CAAA;IAET,QAAA,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,GAAG,EAAA;gBACjC,GAAG,CAAC,KAAK,GAAG,QAAQ,CAAE,CAAC,CAAC,KAAK,CAAY,CAAA;gBACzC,GAAG,CAAC,KAAK,GAAG,QAAQ,CAAE,CAAC,CAAC,KAAK,CAAY,CAAA;gBAEzC,IAAI,GAAG,CAAC,KAAK,KAAK,SAAS,IAAI,GAAG,CAAC,KAAK,KAAK,SAAS;oBAClD,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,KAAK,CAAC;oBAAE,OAAM;IAEhD,YAAA,IAAI,CAAC,UAAU,CAAC,GAAU,EAAE,GAAU,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;IAC1D,YAAA,KAAK,CAAC,IAAI,CAAC,GAAU,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;IAEhC,YAAA,IAAI,CAAC,UAAU,CAAC,GAAU,EAAE,GAAU,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;IAC1D,YAAA,KAAK,CAAC,IAAI,CAAC,GAAU,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;gBAEhC,MAAM,KAAK,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;IACrC,YAAA,MAAM,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,KAAK,GAAG,KAAK,CAAC,CAAA;IACvD,YAAA,MAAM,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,KAAK,GAAG,KAAK,CAAC,CAAA;gBAEvD,KAAK,CAAC,OAAO,CAAC,SAAgB,EAAE,CAAC,GAAG,CAAC,CAAC,CAAA;gBACtC,KAAK,CAAC,OAAO,CAAC,SAAgB,EAAE,CAAC,GAAG,CAAC,CAAC,CAAA;gBACtC,MAAM,CAAE,CAAC,CAAE,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,CAAA;IAC3B,YAAA,OAAO,CAAE,CAAC,CAAE,GAAG,GAAG,CAAA;IAElB,YAAA,EAAE,CAAC,CAAA;IACL,SAAC,CAAC,CAAA;IAEF,QAAA,IAAIA,aAAK;IAAE,YAAA,GAAG,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAA;YAEjD,OAAO;gBACL,SAAS,EAAE,SAAS,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;gBACvC,SAAS,EAAE,SAAS,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;gBACvC,KAAK,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;gBAC/B,MAAM,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;gBAChC,MAAM,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;IAC7B,YAAA,OAAO,EAAE,IAAI,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;aAC1D,CAAA;SACF;IACF;;ICxVD;;;;IAIG;IAOH,MAAM,gBAAiB,SAAQ,SAAS,CAAA;QACtC,WAAa,CAAA,QAAkB,EAAE,MAAqC,EAAA;IACpE,QAAA,MAAM,CAAC,GAAG,MAAM,IAAI,EAAE,CAAA;IAEtB,QAAA,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAA;IAElB,QAAA,IAAI,CAAC,YAAY,GAAG,IAAI,CAAA;IACxB,QAAA,IAAI,CAAC,UAAU,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAA;SACvD;IAED,IAAA,IAAI,SAAS,GAAM,EAAA,OAAO,YAAY,CAAA,EAAE;IACxC,IAAA,IAAI,KAAK,GAAM,EAAA,OAAO,IAAI,CAAA,EAAE;QAE5B,MAAM,GAAA;YACJ,KAAK,CAAC,MAAM,EAAE,CAAA;IAEd,QAAA,IAAIA,aAAK;gBAAE,GAAG,CAAC,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;YAE3D,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;IAEtC,QAAA,IAAIA,aAAK;gBAAE,GAAG,CAAC,OAAO,CAAC,0BAA0B,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;SAC/D;IACF,CAAA;IAED,cAAc,CAAC,GAAG,CAAC,YAAY,EAAE,gBAAgB,CAAC;;IClClD;IACA;AACA;AACA;IACA;AACA;AACA;IACA;IACA;IACA;AACA;AACA;IACA,SAAS,MAAM,CAAC,GAAG,+BAA+B;IAClD,EAAE,IAAI,OAAO,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IACzD,EAAE,OAAO,OAAO,CAAC,MAAM,EAAE;IACzB,IAAI,IAAI,MAAM,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;IACjC,IAAI,IAAI,CAAC,MAAM,EAAE,EAAE,SAAS,EAAE;AAC9B;IACA,IAAI,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;IACpC,MAAM,MAAM,IAAI,SAAS,CAAC,MAAM,GAAG,oBAAoB,CAAC,CAAC;IACzD,KAAK;AACL;IACA,IAAI,KAAK,IAAI,CAAC,IAAI,MAAM,EAAE;IAC1B,MAAM,IAAI,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE;IACpC,QAAQ,GAAG,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAC3B,OAAO;IACP,KAAK;IACL,GAAG;AACH;IACA,EAAE,OAAO,GAAG,CAAC;IACb,CAAC;AACD;AACA;IACA;IACA,SAAS,SAAS,CAAC,GAAG,EAAE,IAAI,EAAE;IAC9B,EAAE,IAAI,GAAG,CAAC,MAAM,KAAK,IAAI,EAAE,EAAE,OAAO,GAAG,CAAC,EAAE;IAC1C,EAAE,IAAI,GAAG,CAAC,QAAQ,EAAE,EAAE,OAAO,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE;IACrD,EAAE,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC;IACpB,EAAE,OAAO,GAAG,CAAC;IACb,CAAC;AACD;AACA;IACA,SAAS,QAAQ,CAAC,IAAI,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,SAAS,EAAE;IACvD,EAAE,IAAI,GAAG,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE;IACrC,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,EAAE,QAAQ,GAAG,GAAG,CAAC,EAAE,SAAS,CAAC,CAAC;IAChE,IAAI,OAAO;IACX,GAAG;IACH;IACA,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;IAChC,IAAI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;IAC5C,GAAG;IACH,CAAC;AACD;IACA;IACA,SAAS,aAAa,CAAC,MAAM,EAAE;IAC/B,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,CAAC;AACpC;IACA;IACA,EAAE,GAAG,GAAG,CAAC,CAAC;IACV,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAC7C,IAAI,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;IAC5B,GAAG;AACH;IACA;IACA,EAAE,MAAM,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC,CAAC;IAC/B,EAAE,GAAG,GAAG,CAAC,CAAC;IACV,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAC7C,IAAI,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IACtB,IAAI,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IAC3B,IAAI,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC;IACxB,GAAG;AACH;IACA,EAAE,OAAO,MAAM,CAAC;IAChB,CAAC;AACD;IACA;AACA;IACA;IACA;IACA;AACA;IACA,SAAS,OAAO,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;IACvC,EAAE,IAAI,EAAE,GAAG,CAAC,KAAK,GAAG,MAAM,GAAG,CAAC;IAC9B,MAAM,EAAE,GAAG,CAAC,CAAC,KAAK,KAAK,EAAE,IAAI,MAAM,GAAG,CAAC;IACvC,MAAM,CAAC,GAAG,CAAC,CAAC;AACZ;IACA,EAAE,OAAO,GAAG,KAAK,CAAC,EAAE;IACpB;IACA;IACA;IACA,IAAI,CAAC,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,CAAC;IAChC,IAAI,GAAG,IAAI,CAAC,CAAC;AACb;IACA,IAAI,GAAG;IACP,MAAM,EAAE,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;IAChC,MAAM,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IACxB,KAAK,QAAQ,EAAE,CAAC,EAAE;AAClB;IACA,IAAI,EAAE,IAAI,KAAK,CAAC;IAChB,IAAI,EAAE,IAAI,KAAK,CAAC;IAChB,GAAG;AACH;IACA,EAAE,OAAO,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC;IAC9B,CAAC;AACD;IACA;AACA;IACA;IACA;IACA;AACA;AACA;IACA;IACA,SAAS,SAAS,GAAG;IACrB,EAAE,IAAI,CAAC,EAAE,KAAK,GAAG,EAAE,CAAC;AACpB;IACA,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;IAChC,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAChC,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,UAAU,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC3D,KAAK;IACL,IAAI,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACjB,GAAG;AACH;IACA,EAAE,OAAO,KAAK,CAAC;IACf,CAAC;AACD;IACA;IACA,IAAI,QAAQ,GAAG,SAAS,EAAE,CAAC;AAC3B;AACA;IACA,SAAS,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;IACnC,EAAE,IAAI,CAAC,GAAG,QAAQ;IAClB,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACtB;IACA,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;AACZ;IACA,EAAE,KAAK,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;IAClC,IAAI,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC;IACjD,GAAG;AACH;IACA,EAAE,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE;IACtB,CAAC;AACD;IACA;AACA;IACA;IACA,IAAI,KAAK,GAAG,EAAE,CAAC;IACf,IAAI,MAAM,GAAG,EAAE,CAAC;AAChB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA;AACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA;AACA;IACA;IACA;IACA;AACA;IACA;AACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,YAAY,CAAC,IAAI,EAAE,KAAK,EAAE;IACnC,EAAE,IAAI,KAAK,CAAC;IACZ,EAAE,IAAI,GAAG,CAAC;IACV,EAAE,IAAI,IAAI,CAAC;IACX,EAAE,IAAI,IAAI,CAAC;IACX,EAAE,IAAI,GAAG,CAAC;IACV,EAAE,IAAI,GAAG,CAAC;IACV;IACA,EAAE,IAAI,IAAI,CAAC;IACX;IACA,EAAE,IAAI,KAAK,CAAC;IACZ,EAAE,IAAI,KAAK,CAAC;IACZ,EAAE,IAAI,KAAK,CAAC;IACZ;IACA,EAAE,IAAI,QAAQ,CAAC;IACf,EAAE,IAAI,IAAI,CAAC;IACX,EAAE,IAAI,IAAI,CAAC;IACX,EAAE,IAAI,KAAK,CAAC;IACZ,EAAE,IAAI,KAAK,CAAC;IACZ,EAAE,IAAI,KAAK,CAAC;IACZ,EAAE,IAAI,KAAK,CAAC;IACZ,EAAE,IAAI,IAAI,CAAC;IACX,EAAE,IAAI,EAAE,CAAC;IACT;IACA,EAAE,IAAI,GAAG,CAAC;IACV,EAAE,IAAI,IAAI,CAAC;IACX,EAAE,IAAI,IAAI,CAAC;IACX,EAAE,IAAI,WAAW,CAAC;AAClB;AACA;IACA,EAAE,IAAI,KAAK,EAAE,MAAM,CAAC;AACpB;IACA;IACA,EAAE,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IACrB;IACA,EAAE,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC;IACrB,EAAE,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IACrB,EAAE,IAAI,GAAG,GAAG,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;IACnC,EAAE,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC;IACvB,EAAE,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;IACvB,EAAE,GAAG,GAAG,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;IACxC,EAAE,GAAG,GAAG,IAAI,IAAI,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC;IACtC;IACA,EAAE,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;IACpB;IACA,EAAE,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IACtB,EAAE,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IACtB,EAAE,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IACtB,EAAE,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC;IAC1B,EAAE,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;IACpB,EAAE,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;IACpB,EAAE,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC;IACxB,EAAE,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAC;IACzB,EAAE,KAAK,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,OAAO,IAAI,CAAC,CAAC;IACnC,EAAE,KAAK,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,QAAQ,IAAI,CAAC,CAAC;AACpC;AACA;IACA;IACA;AACA;IACA,EAAE,GAAG;IACL,EAAE,GAAG;IACL,IAAI,IAAI,IAAI,GAAG,EAAE,EAAE;IACnB,MAAM,IAAI,IAAI,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,IAAI,CAAC;IACnC,MAAM,IAAI,IAAI,CAAC,CAAC;IAChB,MAAM,IAAI,IAAI,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,IAAI,CAAC;IACnC,MAAM,IAAI,IAAI,CAAC,CAAC;IAChB,KAAK;AACL;IACA,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC;AAC/B;IACA,IAAI,KAAK;IACT,IAAI,SAAS;IACb,MAAM,EAAE,GAAG,IAAI,KAAK,EAAE,cAAc;IACpC,MAAM,IAAI,MAAM,EAAE,CAAC;IACnB,MAAM,IAAI,IAAI,EAAE,CAAC;IACjB,MAAM,EAAE,GAAG,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,YAAY;IAC3C,MAAM,IAAI,EAAE,KAAK,CAAC,EAAE;IACpB;IACA;IACA;IACA,QAAQ,MAAM,CAAC,IAAI,EAAE,CAAC,GAAG,IAAI,GAAG,MAAM,aAAa;IACnD,OAAO;IACP,WAAW,IAAI,EAAE,GAAG,EAAE,EAAE;IACxB,QAAQ,GAAG,GAAG,IAAI,GAAG,MAAM,aAAa;IACxC,QAAQ,EAAE,IAAI,EAAE,CAAC;IACjB,QAAQ,IAAI,EAAE,EAAE;IAChB,UAAU,IAAI,IAAI,GAAG,EAAE,EAAE;IACzB,YAAY,IAAI,IAAI,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,IAAI,CAAC;IACzC,YAAY,IAAI,IAAI,CAAC,CAAC;IACtB,WAAW;IACX,UAAU,GAAG,IAAI,IAAI,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;IACxC,UAAU,IAAI,MAAM,EAAE,CAAC;IACvB,UAAU,IAAI,IAAI,EAAE,CAAC;IACrB,SAAS;IACT;IACA,QAAQ,IAAI,IAAI,GAAG,EAAE,EAAE;IACvB,UAAU,IAAI,IAAI,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,IAAI,CAAC;IACvC,UAAU,IAAI,IAAI,CAAC,CAAC;IACpB,UAAU,IAAI,IAAI,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,IAAI,CAAC;IACvC,UAAU,IAAI,IAAI,CAAC,CAAC;IACpB,SAAS;IACT,QAAQ,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC;AACnC;IACA,QAAQ,MAAM;IACd,QAAQ,SAAS;IACjB,UAAU,EAAE,GAAG,IAAI,KAAK,EAAE,cAAc;IACxC,UAAU,IAAI,MAAM,EAAE,CAAC;IACvB,UAAU,IAAI,IAAI,EAAE,CAAC;IACrB,UAAU,EAAE,GAAG,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,YAAY;AAC/C;IACA,UAAU,IAAI,EAAE,GAAG,EAAE,EAAE;IACvB,YAAY,IAAI,GAAG,IAAI,GAAG,MAAM,aAAa;IAC7C,YAAY,EAAE,IAAI,EAAE,CAAC;IACrB,YAAY,IAAI,IAAI,GAAG,EAAE,EAAE;IAC3B,cAAc,IAAI,IAAI,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,IAAI,CAAC;IAC3C,cAAc,IAAI,IAAI,CAAC,CAAC;IACxB,cAAc,IAAI,IAAI,GAAG,EAAE,EAAE;IAC7B,gBAAgB,IAAI,IAAI,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,IAAI,CAAC;IAC7C,gBAAgB,IAAI,IAAI,CAAC,CAAC;IAC1B,eAAe;IACf,aAAa;IACb,YAAY,IAAI,IAAI,IAAI,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;IAC3C;IACA,YAAY,IAAI,IAAI,GAAG,IAAI,EAAE;IAC7B,cAAc,IAAI,CAAC,GAAG,GAAG,+BAA+B,CAAC;IACzD,cAAc,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC;IACjC,cAAc,MAAM,GAAG,CAAC;IACxB,aAAa;IACb;IACA,YAAY,IAAI,MAAM,EAAE,CAAC;IACzB,YAAY,IAAI,IAAI,EAAE,CAAC;IACvB;IACA,YAAY,EAAE,GAAG,IAAI,GAAG,GAAG,CAAC;IAC5B,YAAY,IAAI,IAAI,GAAG,EAAE,EAAE;IAC3B,cAAc,EAAE,GAAG,IAAI,GAAG,EAAE,CAAC;IAC7B,cAAc,IAAI,EAAE,GAAG,KAAK,EAAE;IAC9B,gBAAgB,IAAI,KAAK,CAAC,IAAI,EAAE;IAChC,kBAAkB,IAAI,CAAC,GAAG,GAAG,+BAA+B,CAAC;IAC7D,kBAAkB,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC;IACrC,kBAAkB,MAAM,GAAG,CAAC;IAC5B,iBAAiB;AACjB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,eAAe;IACf,cAAc,IAAI,GAAG,CAAC,CAAC;IACvB,cAAc,WAAW,GAAG,QAAQ,CAAC;IACrC,cAAc,IAAI,KAAK,KAAK,CAAC,EAAE;IAC/B,gBAAgB,IAAI,IAAI,KAAK,GAAG,EAAE,CAAC;IACnC,gBAAgB,IAAI,EAAE,GAAG,GAAG,EAAE;IAC9B,kBAAkB,GAAG,IAAI,EAAE,CAAC;IAC5B,kBAAkB,GAAG;IACrB,oBAAoB,MAAM,CAAC,IAAI,EAAE,CAAC,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;IACtD,mBAAmB,QAAQ,EAAE,EAAE,EAAE;IACjC,kBAAkB,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC;IACrC,kBAAkB,WAAW,GAAG,MAAM,CAAC;IACvC,iBAAiB;IACjB,eAAe;IACf,mBAAmB,IAAI,KAAK,GAAG,EAAE,EAAE;IACnC,gBAAgB,IAAI,IAAI,KAAK,GAAG,KAAK,GAAG,EAAE,CAAC;IAC3C,gBAAgB,EAAE,IAAI,KAAK,CAAC;IAC5B,gBAAgB,IAAI,EAAE,GAAG,GAAG,EAAE;IAC9B,kBAAkB,GAAG,IAAI,EAAE,CAAC;IAC5B,kBAAkB,GAAG;IACrB,oBAAoB,MAAM,CAAC,IAAI,EAAE,CAAC,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;IACtD,mBAAmB,QAAQ,EAAE,EAAE,EAAE;IACjC,kBAAkB,IAAI,GAAG,CAAC,CAAC;IAC3B,kBAAkB,IAAI,KAAK,GAAG,GAAG,EAAE;IACnC,oBAAoB,EAAE,GAAG,KAAK,CAAC;IAC/B,oBAAoB,GAAG,IAAI,EAAE,CAAC;IAC9B,oBAAoB,GAAG;IACvB,sBAAsB,MAAM,CAAC,IAAI,EAAE,CAAC,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;IACxD,qBAAqB,QAAQ,EAAE,EAAE,EAAE;IACnC,oBAAoB,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC;IACvC,oBAAoB,WAAW,GAAG,MAAM,CAAC;IACzC,mBAAmB;IACnB,iBAAiB;IACjB,eAAe;IACf,mBAAmB;IACnB,gBAAgB,IAAI,IAAI,KAAK,GAAG,EAAE,CAAC;IACnC,gBAAgB,IAAI,EAAE,GAAG,GAAG,EAAE;IAC9B,kBAAkB,GAAG,IAAI,EAAE,CAAC;IAC5B,kBAAkB,GAAG;IACrB,oBAAoB,MAAM,CAAC,IAAI,EAAE,CAAC,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;IACtD,mBAAmB,QAAQ,EAAE,EAAE,EAAE;IACjC,kBAAkB,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC;IACrC,kBAAkB,WAAW,GAAG,MAAM,CAAC;IACvC,iBAAiB;IACjB,eAAe;IACf,cAAc,OAAO,GAAG,GAAG,CAAC,EAAE;IAC9B,gBAAgB,MAAM,CAAC,IAAI,EAAE,CAAC,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC;IACrD,gBAAgB,MAAM,CAAC,IAAI,EAAE,CAAC,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC;IACrD,gBAAgB,MAAM,CAAC,IAAI,EAAE,CAAC,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC;IACrD,gBAAgB,GAAG,IAAI,CAAC,CAAC;IACzB,eAAe;IACf,cAAc,IAAI,GAAG,EAAE;IACvB,gBAAgB,MAAM,CAAC,IAAI,EAAE,CAAC,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC;IACrD,gBAAgB,IAAI,GAAG,GAAG,CAAC,EAAE;IAC7B,kBAAkB,MAAM,CAAC,IAAI,EAAE,CAAC,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC;IACvD,iBAAiB;IACjB,eAAe;IACf,aAAa;IACb,iBAAiB;IACjB,cAAc,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC;IACjC,cAAc,GAAG;IACjB,gBAAgB,MAAM,CAAC,IAAI,EAAE,CAAC,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;IAChD,gBAAgB,MAAM,CAAC,IAAI,EAAE,CAAC,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;IAChD,gBAAgB,MAAM,CAAC,IAAI,EAAE,CAAC,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;IAChD,gBAAgB,GAAG,IAAI,CAAC,CAAC;IACzB,eAAe,QAAQ,GAAG,GAAG,CAAC,EAAE;IAChC,cAAc,IAAI,GAAG,EAAE;IACvB,gBAAgB,MAAM,CAAC,IAAI,EAAE,CAAC,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;IAChD,gBAAgB,IAAI,GAAG,GAAG,CAAC,EAAE;IAC7B,kBAAkB,MAAM,CAAC,IAAI,EAAE,CAAC,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;IAClD,iBAAiB;IACjB,eAAe;IACf,aAAa;IACb,WAAW;IACX,eAAe,IAAI,CAAC,EAAE,GAAG,EAAE,MAAM,CAAC,EAAE;IACpC,YAAY,IAAI,GAAG,KAAK,CAAC,CAAC,IAAI,GAAG,MAAM,iBAAiB,IAAI,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACjF,YAAY,SAAS,MAAM,CAAC;IAC5B,WAAW;IACX,eAAe;IACf,YAAY,IAAI,CAAC,GAAG,GAAG,uBAAuB,CAAC;IAC/C,YAAY,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC;IAC/B,YAAY,MAAM,GAAG,CAAC;IACtB,WAAW;AACX;IACA,UAAU,MAAM;IAChB,SAAS;IACT,OAAO;IACP,WAAW,IAAI,CAAC,EAAE,GAAG,EAAE,MAAM,CAAC,EAAE;IAChC,QAAQ,IAAI,GAAG,KAAK,CAAC,CAAC,IAAI,GAAG,MAAM,iBAAiB,IAAI,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7E,QAAQ,SAAS,KAAK,CAAC;IACvB,OAAO;IACP,WAAW,IAAI,EAAE,GAAG,EAAE,EAAE;IACxB;IACA,QAAQ,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC;IAC5B,QAAQ,MAAM,GAAG,CAAC;IAClB,OAAO;IACP,WAAW;IACX,QAAQ,IAAI,CAAC,GAAG,GAAG,6BAA6B,CAAC;IACjD,QAAQ,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC;IAC3B,QAAQ,MAAM,GAAG,CAAC;IAClB,OAAO;AACP;IACA,MAAM,MAAM;IACZ,KAAK;IACL,GAAG,QAAQ,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,EAAE;AACrC;IACA;IACA,EAAE,GAAG,GAAG,IAAI,IAAI,CAAC,CAAC;IAClB,EAAE,GAAG,IAAI,GAAG,CAAC;IACb,EAAE,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC;IACnB,EAAE,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC;AAC1B;IACA;IACA,EAAE,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;IACrB,EAAE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACvB,EAAE,IAAI,CAAC,QAAQ,IAAI,GAAG,GAAG,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC;IACrE,EAAE,IAAI,CAAC,SAAS,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC;IAC1E,EAAE,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;IACpB,EAAE,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;IACpB,EAAE,OAAO;IACT,CACA;IACA;AACA;AACA;IACA;AACA;IACA,IAAI,OAAO,GAAG,EAAE,CAAC;IACjB,IAAI,aAAa,GAAG,GAAG,CAAC;IACxB,IAAI,cAAc,GAAG,GAAG,CAAC;IACzB;AACA;IACA,IAAI,OAAO,GAAG,CAAC,CAAC;IAChB,IAAI,MAAM,GAAG,CAAC,CAAC;IACf,IAAI,OAAO,GAAG,CAAC,CAAC;AAChB;IACA,IAAI,KAAK,GAAG;IACZ,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;IACzD,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;IAChE,CAAC,CAAC;AACF;IACA,IAAI,IAAI,GAAG;IACX,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;IAChE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;IAC5D,CAAC,CAAC;AACF;IACA,IAAI,KAAK,GAAG;IACZ,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG;IAC3D,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;IACxD,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC;IACjC,CAAC,CAAC;AACF;IACA,IAAI,IAAI,GAAG;IACX,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;IAChE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;IACxC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;IACxB,CAAC,CAAC;AACF;IACA;IACA,SAAS,aAAa,CAAC,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,KAAK,EAAE,WAAW,EAAE,IAAI,EAAE,IAAI;IACpF;IACA,EAAE,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACvB;AACA;IACA,EAAE,IAAI,GAAG,GAAG,CAAC,CAAC;IACd,EAAE,IAAI,GAAG,GAAG,CAAC,CAAC;IACd,EAAE,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC;IACvB,EAAE,IAAI,IAAI,GAAG,CAAC,CAAC;IACf,EAAE,IAAI,IAAI,GAAG,CAAC,CAAC;IACf,EAAE,IAAI,IAAI,GAAG,CAAC,CAAC;IACf,EAAE,IAAI,IAAI,GAAG,CAAC,CAAC;IACf,EAAE,IAAI,IAAI,GAAG,CAAC,CAAC;IACf,EAAE,IAAI,IAAI,GAAG,CAAC,CAAC;IACf,EAAE,IAAI,IAAI,CAAC;IACX,EAAE,IAAI,IAAI,CAAC;IACX,EAAE,IAAI,GAAG,CAAC;IACV,EAAE,IAAI,IAAI,CAAC;IACX,EAAE,IAAI,IAAI,CAAC;IACX,EAAE,IAAI,IAAI,GAAG,IAAI,CAAC;IAClB,EAAE,IAAI,UAAU,GAAG,CAAC,CAAC;IACrB;IACA,EAAE,IAAI,GAAG,CAAC;IACV,EAAE,IAAI,KAAK,GAAG,IAAI,WAAW,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;IAC3C,EAAE,IAAI,IAAI,GAAG,IAAI,WAAW,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;IAC1C,EAAE,IAAI,KAAK,GAAG,IAAI,CAAC;IACnB,EAAE,IAAI,WAAW,GAAG,CAAC,CAAC;AACtB;IACA,EAAE,IAAI,SAAS,EAAE,OAAO,EAAE,QAAQ,CAAC;AACnC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA,EAAE,KAAK,GAAG,GAAG,CAAC,EAAE,GAAG,IAAI,OAAO,EAAE,GAAG,EAAE,EAAE;IACvC,IAAI,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACnB,GAAG;IACH,EAAE,KAAK,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,KAAK,EAAE,GAAG,EAAE,EAAE;IACpC,IAAI,KAAK,CAAC,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC;IACpC,GAAG;AACH;IACA;IACA,EAAE,IAAI,GAAG,IAAI,CAAC;IACd,EAAE,KAAK,GAAG,GAAG,OAAO,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE;IACvC,IAAI,IAAI,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,EAAE,MAAM,EAAE;IACpC,GAAG;IACH,EAAE,IAAI,IAAI,GAAG,GAAG,EAAE;IAClB,IAAI,IAAI,GAAG,GAAG,CAAC;IACf,GAAG;IACH,EAAE,IAAI,GAAG,KAAK,CAAC,EAAE;IACjB;IACA;IACA;IACA,IAAI,KAAK,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC;AACtD;AACA;IACA;IACA;IACA;IACA,IAAI,KAAK,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC;AACtD;IACA,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;IAClB,IAAI,OAAO,CAAC,CAAC;IACb,GAAG;IACH,EAAE,KAAK,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE;IAClC,IAAI,IAAI,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,EAAE,MAAM,EAAE;IACpC,GAAG;IACH,EAAE,IAAI,IAAI,GAAG,GAAG,EAAE;IAClB,IAAI,IAAI,GAAG,GAAG,CAAC;IACf,GAAG;AACH;IACA;IACA,EAAE,IAAI,GAAG,CAAC,CAAC;IACX,EAAE,KAAK,GAAG,GAAG,CAAC,EAAE,GAAG,IAAI,OAAO,EAAE,GAAG,EAAE,EAAE;IACvC,IAAI,IAAI,KAAK,CAAC,CAAC;IACf,IAAI,IAAI,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;IACvB,IAAI,IAAI,IAAI,GAAG,CAAC,EAAE;IAClB,MAAM,OAAO,CAAC,CAAC,CAAC;IAChB,KAAK;IACL,GAAG;IACH,EAAE,IAAI,IAAI,GAAG,CAAC,KAAK,IAAI,KAAK,OAAO,IAAI,GAAG,KAAK,CAAC,CAAC,EAAE;IACnD,IAAI,OAAO,CAAC,CAAC,CAAC;IACd,GAAG;AACH;IACA;IACA,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACd,EAAE,KAAK,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,OAAO,EAAE,GAAG,EAAE,EAAE;IACtC,IAAI,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;IAC3C,GAAG;AACH;IACA;IACA,EAAE,KAAK,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,KAAK,EAAE,GAAG,EAAE,EAAE;IACpC,IAAI,IAAI,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,KAAK,CAAC,EAAE;IACtC,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IACjD,KAAK;IACL,GAAG;AACH;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA,EAAE,IAAI,IAAI,KAAK,OAAO,EAAE;IACxB,IAAI,IAAI,GAAG,KAAK,GAAG,IAAI,CAAC;IACxB,IAAI,GAAG,GAAG,EAAE,CAAC;AACb;IACA,GAAG,MAAM,IAAI,IAAI,KAAK,MAAM,EAAE;IAC9B,IAAI,IAAI,GAAG,KAAK,CAAC;IACjB,IAAI,UAAU,IAAI,GAAG,CAAC;IACtB,IAAI,KAAK,GAAG,IAAI,CAAC;IACjB,IAAI,WAAW,IAAI,GAAG,CAAC;IACvB,IAAI,GAAG,GAAG,GAAG,CAAC;AACd;IACA,GAAG,MAAM;IACT,IAAI,IAAI,GAAG,KAAK,CAAC;IACjB,IAAI,KAAK,GAAG,IAAI,CAAC;IACjB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC;IACb,GAAG;AACH;IACA;IACA,EAAE,IAAI,GAAG,CAAC,CAAC;IACX,EAAE,GAAG,GAAG,CAAC,CAAC;IACV,EAAE,GAAG,GAAG,GAAG,CAAC;IACZ,EAAE,IAAI,GAAG,WAAW,CAAC;IACrB,EAAE,IAAI,GAAG,IAAI,CAAC;IACd,EAAE,IAAI,GAAG,CAAC,CAAC;IACX,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC;IACX,EAAE,IAAI,GAAG,CAAC,IAAI,IAAI,CAAC;IACnB,EAAE,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC;AAClB;IACA;IACA,EAAE,IAAI,CAAC,IAAI,KAAK,MAAM,IAAI,IAAI,GAAG,aAAa;IAC9C,KAAK,IAAI,KAAK,OAAO,IAAI,IAAI,GAAG,cAAc,CAAC,EAAE;IACjD,IAAI,OAAO,CAAC,CAAC;IACb,GAAG;IAGH;IACA,EAAE,SAAS;IAEX;IACA,IAAI,SAAS,GAAG,GAAG,GAAG,IAAI,CAAC;IAC3B,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,EAAE;IACzB,MAAM,OAAO,GAAG,CAAC,CAAC;IAClB,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;IAC3B,KAAK;IACL,SAAS,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,EAAE;IAC9B,MAAM,OAAO,GAAG,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IAC/C,MAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IAC9C,KAAK;IACL,SAAS;IACT,MAAM,OAAO,GAAG,EAAE,GAAG,EAAE,CAAC;IACxB,MAAM,QAAQ,GAAG,CAAC,CAAC;IACnB,KAAK;AACL;IACA;IACA,IAAI,IAAI,GAAG,CAAC,KAAK,GAAG,GAAG,IAAI,CAAC,CAAC;IAC7B,IAAI,IAAI,GAAG,CAAC,IAAI,IAAI,CAAC;IACrB,IAAI,GAAG,GAAG,IAAI,CAAC;IACf,IAAI,GAAG;IACP,MAAM,IAAI,IAAI,IAAI,CAAC;IACnB,MAAM,KAAK,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,IAAI,EAAE,KAAK,OAAO,IAAI,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,CAAC;IAC9F,KAAK,QAAQ,IAAI,KAAK,CAAC,EAAE;AACzB;IACA;IACA,IAAI,IAAI,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC;IAC1B,IAAI,OAAO,IAAI,GAAG,IAAI,EAAE;IACxB,MAAM,IAAI,KAAK,CAAC,CAAC;IACjB,KAAK;IACL,IAAI,IAAI,IAAI,KAAK,CAAC,EAAE;IACpB,MAAM,IAAI,IAAI,IAAI,GAAG,CAAC,CAAC;IACvB,MAAM,IAAI,IAAI,IAAI,CAAC;IACnB,KAAK,MAAM;IACX,MAAM,IAAI,GAAG,CAAC,CAAC;IACf,KAAK;AACL;IACA;IACA,IAAI,GAAG,EAAE,CAAC;IACV,IAAI,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;IAC5B,MAAM,IAAI,GAAG,KAAK,GAAG,EAAE,EAAE,MAAM,EAAE;IACjC,MAAM,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IACzC,KAAK;AACL;IACA;IACA,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,MAAM,GAAG,EAAE;IAC7C;IACA,MAAM,IAAI,IAAI,KAAK,CAAC,EAAE;IACtB,QAAQ,IAAI,GAAG,IAAI,CAAC;IACpB,OAAO;AACP;IACA;IACA,MAAM,IAAI,IAAI,GAAG,CAAC;AAClB;IACA;IACA,MAAM,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC;IACxB,MAAM,IAAI,GAAG,CAAC,IAAI,IAAI,CAAC;IACvB,MAAM,OAAO,IAAI,GAAG,IAAI,GAAG,GAAG,EAAE;IAChC,QAAQ,IAAI,IAAI,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;IACnC,QAAQ,IAAI,IAAI,IAAI,CAAC,EAAE,EAAE,MAAM,EAAE;IACjC,QAAQ,IAAI,EAAE,CAAC;IACf,QAAQ,IAAI,KAAK,CAAC,CAAC;IACnB,OAAO;AACP;IACA;IACA,MAAM,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC;IACxB,MAAM,IAAI,CAAC,IAAI,KAAK,MAAM,IAAI,IAAI,GAAG,aAAa;IAClD,SAAS,IAAI,KAAK,OAAO,IAAI,IAAI,GAAG,cAAc,CAAC,EAAE;IACrD,QAAQ,OAAO,CAAC,CAAC;IACjB,OAAO;AACP;IACA;IACA,MAAM,GAAG,GAAG,IAAI,GAAG,IAAI,CAAC;IACxB;IACA;IACA;IACA,MAAM,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,IAAI,EAAE,KAAK,IAAI,IAAI,EAAE,CAAC,IAAI,IAAI,GAAG,WAAW,CAAC,EAAE,CAAC,CAAC;IACzE,KAAK;IACL,GAAG;AACH;IACA;IACA;IACA;IACA,EAAE,IAAI,IAAI,KAAK,CAAC,EAAE;IAClB;IACA;IACA;IACA,IAAI,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;IAC9D,GAAG;AACH;IACA;IACA;IACA,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,EAAE,OAAO,CAAC,CAAC;IACX,CACA;IACA;AACA;AACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA,IAAI,KAAK,GAAG,CAAC,CAAC;IACd,IAAI,IAAI,GAAG,CAAC,CAAC;IACb,IAAI,KAAK,GAAG,CAAC,CAAC;AACd;IACA;IACA;AACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,QAAQ,UAAU,CAAC,CAAC;IACxB,IAAI,OAAO,WAAW,CAAC,CAAC;IACxB,IAAI,OAAO,WAAW,CAAC,CAAC;AACxB;AACA;IACA;IACA;IACA;IACA,IAAI,IAAI,cAAc,CAAC,CAAC;IACxB,IAAI,YAAY,MAAM,CAAC,CAAC;IACxB,IAAI,WAAW,OAAO,CAAC,CAAC;IACxB;IACA,IAAI,cAAc,IAAI,CAAC,CAAC,CAAC;IACzB,IAAI,YAAY,MAAM,CAAC,CAAC,CAAC;IACzB,IAAI,WAAW,OAAO,CAAC,CAAC,CAAC;IACzB,IAAI,WAAW,OAAO,CAAC,CAAC,CAAC;IACzB;AACA;IACA;IACA,IAAI,UAAU,IAAI,CAAC,CAAC;AACpB;AACA;IACA;IACA;AACA;AACA;IACA,OAAO,IAAI,GAAG,CAAC,CAAC;IAChB,OAAO,KAAK,GAAG,CAAC,CAAC;IACjB,OAAO,IAAI,GAAG,CAAC,CAAC;IAChB,OAAO,EAAE,GAAG,CAAC,CAAC;IACd,OAAO,KAAK,GAAG,CAAC,CAAC;IACjB,OAAO,KAAK,GAAG,CAAC,CAAC;IACjB,OAAO,IAAI,GAAG,CAAC,CAAC;IAChB,OAAO,OAAO,GAAG,CAAC,CAAC;IACnB,OAAO,IAAI,GAAG,CAAC,CAAC;IAChB,OAAO,MAAM,GAAG,EAAE,CAAC;IACnB,OAAO,IAAI,GAAG,EAAE,CAAC;IACjB,WAAW,IAAI,GAAG,EAAE,CAAC;IACrB,WAAW,MAAM,GAAG,EAAE,CAAC;IACvB,WAAW,MAAM,GAAG,EAAE,CAAC;IACvB,WAAW,KAAK,GAAG,EAAE,CAAC;IACtB,WAAW,IAAI,GAAG,EAAE,CAAC;IACrB,WAAW,KAAK,GAAG,EAAE,CAAC;IACtB,WAAW,OAAO,GAAG,EAAE,CAAC;IACxB,WAAW,QAAQ,GAAG,EAAE,CAAC;IACzB,eAAe,IAAI,GAAG,EAAE,CAAC;IACzB,eAAe,GAAG,GAAG,EAAE,CAAC;IACxB,eAAe,MAAM,GAAG,EAAE,CAAC;IAC3B,eAAe,IAAI,GAAG,EAAE,CAAC;IACzB,eAAe,OAAO,GAAG,EAAE,CAAC;IAC5B,eAAe,KAAK,GAAG,EAAE,CAAC;IAC1B,eAAe,GAAG,GAAG,EAAE,CAAC;IACxB,OAAO,KAAK,GAAG,EAAE,CAAC;IAClB,OAAO,MAAM,GAAG,EAAE,CAAC;IACnB,OAAO,IAAI,GAAG,EAAE,CAAC;IACjB,OAAO,GAAG,GAAG,EAAE,CAAC;IAChB,OAAO,GAAG,GAAG,EAAE,CAAC;IAChB,OAAO,IAAI,GAAG,EAAE,CAAC;AACjB;IACA;AACA;AACA;AACA;IACA,IAAI,WAAW,GAAG,GAAG,CAAC;IACtB,IAAI,YAAY,GAAG,GAAG,CAAC;IACvB,SAAS,OAAO,CAAC,CAAC,EAAE;IACpB,EAAE,SAAS,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,IAAI;IAC7B,WAAW,CAAC,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC;IAC9B,WAAW,CAAC,CAAC,GAAG,MAAM,KAAK,CAAC,CAAC;IAC7B,WAAW,CAAC,CAAC,GAAG,IAAI,KAAK,EAAE,CAAC,EAAE;IAC9B,CAAC;AACD;AACA;IACA,SAAS,YAAY,GAAG;IACxB,EAAE,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;IAChB,EAAE,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;IACpB,EAAE,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;IAChB,EAAE,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACxB,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,EAAE,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;IAChB,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB;IACA,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACnB;IACA;IACA,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AACrB;IACA;IACA,EAAE,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;IAChB,EAAE,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;AAChB;IACA;IACA,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IAClB,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AAClB;IACA;IACA,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;AACjB;IACA;IACA,EAAE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACtB,EAAE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACvB,EAAE,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;IACnB,EAAE,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;AACpB;IACA;IACA,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,EAAE,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;IAChB,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,EAAE,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;IAChB,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACnB;IACA,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,WAAW,CAAC,GAAG,CAAC,CAAC;IACnC,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,WAAW,CAAC,GAAG,CAAC,CAAC;AACnC;IACA;IACA;IACA;IACA;IACA;IACA,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,EAAE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACtB,EAAE,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;IAChB,EAAE,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;IAChB,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;IACf,CAAC;AACD;IACA,SAAS,gBAAgB,CAAC,IAAI,EAAE;IAChC,EAAE,IAAI,KAAK,CAAC;AACZ;IACA,EAAE,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,OAAO,cAAc,CAAC,EAAE;IACtD,EAAE,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IACrB,EAAE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;IACnD,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;IAChB,EAAE,IAAI,KAAK,CAAC,IAAI,EAAE;IAClB,IAAI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC;IAChC,GAAG;IACH,EAAE,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;IACpB,EAAE,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC;IACjB,EAAE,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC;IACrB,EAAE,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC;IACrB,EAAE,KAAK,CAAC,IAAI,GAAG,IAAI,WAAW;IAC9B,EAAE,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC;IACjB,EAAE,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC;IACjB;IACA,EAAE,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,MAAM,GAAG,IAAI,UAAU,CAAC,WAAW,CAAC,CAAC;IAC7D,EAAE,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,OAAO,GAAG,IAAI,UAAU,CAAC,YAAY,CAAC,CAAC;AAChE;IACA,EAAE,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC;IACjB,EAAE,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;IAClB;IACA,EAAE,OAAO,IAAI,CAAC;IACd,CAAC;AACD;IACA,SAAS,YAAY,CAAC,IAAI,EAAE;IAC5B,EAAE,IAAI,KAAK,CAAC;AACZ;IACA,EAAE,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,OAAO,cAAc,CAAC,EAAE;IACtD,EAAE,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IACrB,EAAE,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;IAClB,EAAE,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;IAClB,EAAE,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;IAClB,EAAE,OAAO,gBAAgB,CAAC,IAAI,CAAC,CAAC;AAChC;IACA,CAAC;AACD;IACA,SAAS,aAAa,CAAC,IAAI,EAAE,UAAU,EAAE;IACzC,EAAE,IAAI,IAAI,CAAC;IACX,EAAE,IAAI,KAAK,CAAC;AACZ;IACA;IACA,EAAE,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,OAAO,cAAc,CAAC,EAAE;IACtD,EAAE,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AACrB;IACA;IACA,EAAE,IAAI,UAAU,GAAG,CAAC,EAAE;IACtB,IAAI,IAAI,GAAG,CAAC,CAAC;IACb,IAAI,UAAU,GAAG,CAAC,UAAU,CAAC;IAC7B,GAAG;IACH,OAAO;IACP,IAAI,IAAI,GAAG,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,CAAC;IACjC,IAAI,IAAI,UAAU,GAAG,EAAE,EAAE;IACzB,MAAM,UAAU,IAAI,EAAE,CAAC;IACvB,KAAK;IACL,GAAG;AACH;IACA;IACA,EAAE,IAAI,UAAU,KAAK,UAAU,GAAG,CAAC,IAAI,UAAU,GAAG,EAAE,CAAC,EAAE;IACzD,IAAI,OAAO,cAAc,CAAC;IAC1B,GAAG;IACH,EAAE,IAAI,KAAK,CAAC,MAAM,KAAK,IAAI,IAAI,KAAK,CAAC,KAAK,KAAK,UAAU,EAAE;IAC3D,IAAI,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;IACxB,GAAG;AACH;IACA;IACA,EAAE,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;IACpB,EAAE,KAAK,CAAC,KAAK,GAAG,UAAU,CAAC;IAC3B,EAAE,OAAO,YAAY,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;AACD;IACA,SAAS,YAAY,CAAC,IAAI,EAAE,UAAU,EAAE;IACxC,EAAE,IAAI,GAAG,CAAC;IACV,EAAE,IAAI,KAAK,CAAC;AACZ;IACA,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,OAAO,cAAc,CAAC,EAAE;IACvC;AACA;IACA,EAAE,KAAK,GAAG,IAAI,YAAY,EAAE,CAAC;AAC7B;IACA;IACA;IACA,EAAE,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,EAAE,KAAK,CAAC,MAAM,GAAG,IAAI,WAAW;IAChC,EAAE,GAAG,GAAG,aAAa,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;IACxC,EAAE,IAAI,GAAG,KAAK,IAAI,EAAE;IACpB,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,WAAW;IAChC,GAAG;IACH,EAAE,OAAO,GAAG,CAAC;IACb,CAAC;AACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,MAAM,GAAG,IAAI,CAAC;AAClB;IACA,IAAI,MAAM,CAAC;IACX,IAAI,OAAO,CAAC;IACZ;AACA;IACA,SAAS,WAAW,CAAC,KAAK,EAAE;IAC5B;IACA,EAAE,IAAI,MAAM,EAAE;IACd,IAAI,IAAI,GAAG,CAAC;AACZ;IACA,IAAI,MAAM,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC,CAAC;IACjC,IAAI,OAAO,GAAG,IAAI,UAAU,CAAC,EAAE,CAAC,CAAC;AACjC;IACA;IACA,IAAI,GAAG,GAAG,CAAC,CAAC;IACZ,IAAI,OAAO,GAAG,GAAG,GAAG,EAAE,EAAE,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE;IAChD,IAAI,OAAO,GAAG,GAAG,GAAG,EAAE,EAAE,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE;IAChD,IAAI,OAAO,GAAG,GAAG,GAAG,EAAE,EAAE,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE;IAChD,IAAI,OAAO,GAAG,GAAG,GAAG,EAAE,EAAE,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE;AAChD;IACA,IAAI,aAAa,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,GAAG,EAAE,MAAM,IAAI,CAAC,EAAE,KAAK,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;AACnF;IACA;IACA,IAAI,GAAG,GAAG,CAAC,CAAC;IACZ,IAAI,OAAO,GAAG,GAAG,EAAE,EAAE,EAAE,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE;AAC/C;IACA,IAAI,aAAa,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,OAAO,EAAE,CAAC,EAAE,KAAK,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;AACnF;IACA;IACA,IAAI,MAAM,GAAG,KAAK,CAAC;IACnB,GAAG;AACH;IACA,EAAE,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;IACzB,EAAE,KAAK,CAAC,OAAO,GAAG,CAAC,CAAC;IACpB,EAAE,KAAK,CAAC,QAAQ,GAAG,OAAO,CAAC;IAC3B,EAAE,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC;IACrB,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,YAAY,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE;IAC5C,EAAE,IAAI,IAAI,CAAC;IACX,EAAE,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AACzB;IACA;IACA,EAAE,IAAI,KAAK,CAAC,MAAM,KAAK,IAAI,EAAE;IAC7B,IAAI,KAAK,CAAC,KAAK,GAAG,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC;IACnC,IAAI,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;IACpB,IAAI,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;AACpB;IACA,IAAI,KAAK,CAAC,MAAM,GAAG,IAAI,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAC/C,GAAG;AACH;IACA;IACA,EAAE,IAAI,IAAI,IAAI,KAAK,CAAC,KAAK,EAAE;IAC3B,IAAI,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,GAAG,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IACnE,IAAI,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;IACpB,IAAI,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC9B,GAAG;IACH,OAAO;IACP,IAAI,IAAI,GAAG,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IACrC,IAAI,IAAI,IAAI,GAAG,IAAI,EAAE;IACrB,MAAM,IAAI,GAAG,IAAI,CAAC;IAClB,KAAK;IACL;IACA,IAAI,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;IAC/D,IAAI,IAAI,IAAI,IAAI,CAAC;IACjB,IAAI,IAAI,IAAI,EAAE;IACd;IACA,MAAM,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IACvD,MAAM,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC;IACzB,MAAM,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAChC,KAAK;IACL,SAAS;IACT,MAAM,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC;IAC1B,MAAM,IAAI,KAAK,CAAC,KAAK,KAAK,KAAK,CAAC,KAAK,EAAE,EAAE,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE;IAC3D,MAAM,IAAI,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,EAAE,EAAE,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC,EAAE;IAC7D,KAAK;IACL,GAAG;IACH,EAAE,OAAO,CAAC,CAAC;IACX,CAAC;AACD;IACA,SAAS,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE;IAC9B,EAAE,IAAI,KAAK,CAAC;IACZ,EAAE,IAAI,KAAK,EAAE,MAAM,CAAC;IACpB,EAAE,IAAI,IAAI,CAAC;IACX,EAAE,IAAI,GAAG,CAAC;IACV,EAAE,IAAI,IAAI,EAAE,IAAI,CAAC;IACjB,EAAE,IAAI,IAAI,CAAC;IACX,EAAE,IAAI,IAAI,CAAC;IACX,EAAE,IAAI,GAAG,EAAE,IAAI,CAAC;IAChB,EAAE,IAAI,IAAI,CAAC;IACX,EAAE,IAAI,IAAI,CAAC;IACX,EAAE,IAAI,WAAW,CAAC;IAClB,EAAE,IAAI,IAAI,GAAG,CAAC,CAAC;IACf,EAAE,IAAI,SAAS,EAAE,OAAO,EAAE,QAAQ,CAAC;IACnC;IACA,EAAE,IAAI,SAAS,EAAE,OAAO,EAAE,QAAQ,CAAC;IACnC,EAAE,IAAI,GAAG,CAAC;IACV,EAAE,IAAI,GAAG,CAAC;IACV,EAAE,IAAI,IAAI,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;IAC/B,EAAE,IAAI,IAAI,CAAC;AACX;IACA,EAAE,IAAI,CAAC,CAAC;AACR;IACA,EAAE,IAAI,KAAK;IACX,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;AACzE;AACA;IACA,EAAE,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,MAAM;IAC1C,OAAO,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,CAAC,EAAE;IAC5C,IAAI,OAAO,cAAc,CAAC;IAC1B,GAAG;AACH;IACA,EAAE,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IACrB,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,IAAI,EAAE,EAAE,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC,EAAE;AACnD;AACA;IACA;IACA,EAAE,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC;IACtB,EAAE,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;IACvB,EAAE,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;IACxB,EAAE,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC;IACtB,EAAE,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IACrB,EAAE,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC;IACvB,EAAE,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;IACpB,EAAE,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;IACpB;AACA;IACA,EAAE,GAAG,GAAG,IAAI,CAAC;IACb,EAAE,IAAI,GAAG,IAAI,CAAC;IACd,EAAE,GAAG,GAAG,IAAI,CAAC;AACb;IACA,EAAE,SAAS;IACX,EAAE,SAAS;IACX,IAAI,QAAQ,KAAK,CAAC,IAAI;IACtB,IAAI,KAAK,IAAI;IACb,MAAM,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,EAAE;IAC5B,QAAQ,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC;IAC5B,QAAQ,MAAM;IACd,OAAO;IACP;IACA,MAAM,OAAO,IAAI,GAAG,EAAE,EAAE;IACxB,QAAQ,IAAI,IAAI,KAAK,CAAC,EAAE,EAAE,MAAM,SAAS,CAAC,EAAE;IAC5C,QAAQ,IAAI,EAAE,CAAC;IACf,QAAQ,IAAI,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC;IACtC,QAAQ,IAAI,IAAI,CAAC,CAAC;IAClB,OAAO;IACP;IACA,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,KAAK,IAAI,KAAK,MAAM,EAAE;IAC/C,QAAQ,KAAK,CAAC,KAAK,GAAG,CAAC,yBAAyB;IAChD;IACA,QAAQ,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;IAC9B,QAAQ,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC;IACtC,QAAQ,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACrD;AACA;IACA;IACA,QAAQ,IAAI,GAAG,CAAC,CAAC;IACjB,QAAQ,IAAI,GAAG,CAAC,CAAC;IACjB;IACA,QAAQ,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC;IAC3B,QAAQ,MAAM;IACd,OAAO;IACP,MAAM,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;IACtB,MAAM,IAAI,KAAK,CAAC,IAAI,EAAE;IACtB,QAAQ,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;IAChC,OAAO;IACP,MAAM,IAAI,EAAE,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC;IAC3B,QAAQ,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,gBAAgB,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE;IAC9D,QAAQ,IAAI,CAAC,GAAG,GAAG,wBAAwB,CAAC;IAC5C,QAAQ,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;IACzB,QAAQ,MAAM;IACd,OAAO;IACP,MAAM,IAAI,CAAC,IAAI,GAAG,IAAI,iBAAiB,UAAU,EAAE;IACnD,QAAQ,IAAI,CAAC,GAAG,GAAG,4BAA4B,CAAC;IAChD,QAAQ,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;IACzB,QAAQ,MAAM;IACd,OAAO;IACP;IACA,MAAM,IAAI,MAAM,CAAC,CAAC;IAClB,MAAM,IAAI,IAAI,CAAC,CAAC;IAChB;IACA,MAAM,GAAG,GAAG,CAAC,IAAI,GAAG,IAAI,eAAe,CAAC,CAAC;IACzC,MAAM,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,EAAE;IAC7B,QAAQ,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC;IAC1B,OAAO;IACP,WAAW,IAAI,GAAG,GAAG,KAAK,CAAC,KAAK,EAAE;IAClC,QAAQ,IAAI,CAAC,GAAG,GAAG,qBAAqB,CAAC;IACzC,QAAQ,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;IACzB,QAAQ,MAAM;IACd,OAAO;IACP,MAAM,KAAK,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC;IAC5B;IACA,MAAM,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,GAAG,CAAC,2BAA2B;IAC7D,MAAM,KAAK,CAAC,IAAI,GAAG,IAAI,GAAG,KAAK,GAAG,MAAM,GAAG,IAAI,CAAC;IAChD;IACA,MAAM,IAAI,GAAG,CAAC,CAAC;IACf,MAAM,IAAI,GAAG,CAAC,CAAC;IACf;IACA,MAAM,MAAM;IACZ,IAAI,KAAK,KAAK;IACd;IACA,MAAM,OAAO,IAAI,GAAG,EAAE,EAAE;IACxB,QAAQ,IAAI,IAAI,KAAK,CAAC,EAAE,EAAE,MAAM,SAAS,CAAC,EAAE;IAC5C,QAAQ,IAAI,EAAE,CAAC;IACf,QAAQ,IAAI,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC;IACtC,QAAQ,IAAI,IAAI,CAAC,CAAC;IAClB,OAAO;IACP;IACA,MAAM,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC;IACzB,MAAM,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,MAAM,UAAU,EAAE;IAC/C,QAAQ,IAAI,CAAC,GAAG,GAAG,4BAA4B,CAAC;IAChD,QAAQ,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;IACzB,QAAQ,MAAM;IACd,OAAO;IACP,MAAM,IAAI,KAAK,CAAC,KAAK,GAAG,MAAM,EAAE;IAChC,QAAQ,IAAI,CAAC,GAAG,GAAG,0BAA0B,CAAC;IAC9C,QAAQ,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;IACzB,QAAQ,MAAM;IACd,OAAO;IACP,MAAM,IAAI,KAAK,CAAC,IAAI,EAAE;IACtB,QAAQ,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC5C,OAAO;IACP,MAAM,IAAI,KAAK,CAAC,KAAK,GAAG,MAAM,EAAE;IAChC;IACA,QAAQ,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;IAC9B,QAAQ,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC;IACtC,QAAQ,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACrD;IACA,OAAO;IACP;IACA,MAAM,IAAI,GAAG,CAAC,CAAC;IACf,MAAM,IAAI,GAAG,CAAC,CAAC;IACf;IACA,MAAM,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;IACxB;IACA,IAAI,KAAK,IAAI;IACb;IACA,MAAM,OAAO,IAAI,GAAG,EAAE,EAAE;IACxB,QAAQ,IAAI,IAAI,KAAK,CAAC,EAAE,EAAE,MAAM,SAAS,CAAC,EAAE;IAC5C,QAAQ,IAAI,EAAE,CAAC;IACf,QAAQ,IAAI,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC;IACtC,QAAQ,IAAI,IAAI,CAAC,CAAC;IAClB,OAAO;IACP;IACA,MAAM,IAAI,KAAK,CAAC,IAAI,EAAE;IACtB,QAAQ,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IAC/B,OAAO;IACP,MAAM,IAAI,KAAK,CAAC,KAAK,GAAG,MAAM,EAAE;IAChC;IACA,QAAQ,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;IAC9B,QAAQ,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC;IACtC,QAAQ,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,CAAC;IACvC,QAAQ,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,CAAC;IACvC,QAAQ,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACrD;IACA,OAAO;IACP;IACA,MAAM,IAAI,GAAG,CAAC,CAAC;IACf,MAAM,IAAI,GAAG,CAAC,CAAC;IACf;IACA,MAAM,KAAK,CAAC,IAAI,GAAG,EAAE,CAAC;IACtB;IACA,IAAI,KAAK,EAAE;IACX;IACA,MAAM,OAAO,IAAI,GAAG,EAAE,EAAE;IACxB,QAAQ,IAAI,IAAI,KAAK,CAAC,EAAE,EAAE,MAAM,SAAS,CAAC,EAAE;IAC5C,QAAQ,IAAI,EAAE,CAAC;IACf,QAAQ,IAAI,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC;IACtC,QAAQ,IAAI,IAAI,CAAC,CAAC;IAClB,OAAO;IACP;IACA,MAAM,IAAI,KAAK,CAAC,IAAI,EAAE;IACtB,QAAQ,KAAK,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC;IAC1C,QAAQ,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;IACpC,OAAO;IACP,MAAM,IAAI,KAAK,CAAC,KAAK,GAAG,MAAM,EAAE;IAChC;IACA,QAAQ,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;IAC9B,QAAQ,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC;IACtC,QAAQ,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACrD;IACA,OAAO;IACP;IACA,MAAM,IAAI,GAAG,CAAC,CAAC;IACf,MAAM,IAAI,GAAG,CAAC,CAAC;IACf;IACA,MAAM,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC;IACzB;IACA,IAAI,KAAK,KAAK;IACd,MAAM,IAAI,KAAK,CAAC,KAAK,GAAG,MAAM,EAAE;IAChC;IACA,QAAQ,OAAO,IAAI,GAAG,EAAE,EAAE;IAC1B,UAAU,IAAI,IAAI,KAAK,CAAC,EAAE,EAAE,MAAM,SAAS,CAAC,EAAE;IAC9C,UAAU,IAAI,EAAE,CAAC;IACjB,UAAU,IAAI,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC;IACxC,UAAU,IAAI,IAAI,CAAC,CAAC;IACpB,SAAS;IACT;IACA,QAAQ,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;IAC5B,QAAQ,IAAI,KAAK,CAAC,IAAI,EAAE;IACxB,UAAU,KAAK,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACtC,SAAS;IACT,QAAQ,IAAI,KAAK,CAAC,KAAK,GAAG,MAAM,EAAE;IAClC;IACA,UAAU,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;IAChC,UAAU,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC;IACxC,UAAU,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACvD;IACA,SAAS;IACT;IACA,QAAQ,IAAI,GAAG,CAAC,CAAC;IACjB,QAAQ,IAAI,GAAG,CAAC,CAAC;IACjB;IACA,OAAO;IACP,WAAW,IAAI,KAAK,CAAC,IAAI,EAAE;IAC3B,QAAQ,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,WAAW;IAC1C,OAAO;IACP,MAAM,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC;IACzB;IACA,IAAI,KAAK,KAAK;IACd,MAAM,IAAI,KAAK,CAAC,KAAK,GAAG,MAAM,EAAE;IAChC,QAAQ,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC;IAC5B,QAAQ,IAAI,IAAI,GAAG,IAAI,EAAE,EAAE,IAAI,GAAG,IAAI,CAAC,EAAE;IACzC,QAAQ,IAAI,IAAI,EAAE;IAClB,UAAU,IAAI,KAAK,CAAC,IAAI,EAAE;IAC1B,YAAY,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC;IACtD,YAAY,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE;IACnC;IACA,cAAc,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACjE,aAAa;IACb,YAAY,QAAQ;IACpB,cAAc,KAAK,CAAC,IAAI,CAAC,KAAK;IAC9B,cAAc,KAAK;IACnB,cAAc,IAAI;IAClB;IACA;IACA,cAAc,IAAI;IAClB;IACA,cAAc,GAAG;IACjB,aAAa,CAAC;IACd;IACA;IACA;IACA,WAAW;IACX,UAAU,IAAI,KAAK,CAAC,KAAK,GAAG,MAAM,EAAE;IACpC,YAAY,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAChE,WAAW;IACX,UAAU,IAAI,IAAI,IAAI,CAAC;IACvB,UAAU,IAAI,IAAI,IAAI,CAAC;IACvB,UAAU,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC;IAC/B,SAAS;IACT,QAAQ,IAAI,KAAK,CAAC,MAAM,EAAE,EAAE,MAAM,SAAS,CAAC,EAAE;IAC9C,OAAO;IACP,MAAM,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;IACvB,MAAM,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;IACxB;IACA,IAAI,KAAK,IAAI;IACb,MAAM,IAAI,KAAK,CAAC,KAAK,GAAG,MAAM,EAAE;IAChC,QAAQ,IAAI,IAAI,KAAK,CAAC,EAAE,EAAE,MAAM,SAAS,CAAC,EAAE;IAC5C,QAAQ,IAAI,GAAG,CAAC,CAAC;IACjB,QAAQ,GAAG;IACX;IACA,UAAU,GAAG,GAAG,KAAK,CAAC,IAAI,GAAG,IAAI,EAAE,CAAC,CAAC;IACrC;IACA,UAAU,IAAI,KAAK,CAAC,IAAI,IAAI,GAAG;IAC/B,eAAe,KAAK,CAAC,MAAM,GAAG,KAAK,yBAAyB,EAAE;IAC9D,YAAY,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;IACxD,WAAW;IACX,SAAS,QAAQ,GAAG,IAAI,IAAI,GAAG,IAAI,EAAE;AACrC;IACA,QAAQ,IAAI,KAAK,CAAC,KAAK,GAAG,MAAM,EAAE;IAClC,UAAU,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAC9D,SAAS;IACT,QAAQ,IAAI,IAAI,IAAI,CAAC;IACrB,QAAQ,IAAI,IAAI,IAAI,CAAC;IACrB,QAAQ,IAAI,GAAG,EAAE,EAAE,MAAM,SAAS,CAAC,EAAE;IACrC,OAAO;IACP,WAAW,IAAI,KAAK,CAAC,IAAI,EAAE;IAC3B,QAAQ,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IAC/B,OAAO;IACP,MAAM,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;IACvB,MAAM,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC;IAC3B;IACA,IAAI,KAAK,OAAO;IAChB,MAAM,IAAI,KAAK,CAAC,KAAK,GAAG,MAAM,EAAE;IAChC,QAAQ,IAAI,IAAI,KAAK,CAAC,EAAE,EAAE,MAAM,SAAS,CAAC,EAAE;IAC5C,QAAQ,IAAI,GAAG,CAAC,CAAC;IACjB,QAAQ,GAAG;IACX,UAAU,GAAG,GAAG,KAAK,CAAC,IAAI,GAAG,IAAI,EAAE,CAAC,CAAC;IACrC;IACA,UAAU,IAAI,KAAK,CAAC,IAAI,IAAI,GAAG;IAC/B,eAAe,KAAK,CAAC,MAAM,GAAG,KAAK,yBAAyB,EAAE;IAC9D,YAAY,KAAK,CAAC,IAAI,CAAC,OAAO,IAAI,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;IAC3D,WAAW;IACX,SAAS,QAAQ,GAAG,IAAI,IAAI,GAAG,IAAI,EAAE;IACrC,QAAQ,IAAI,KAAK,CAAC,KAAK,GAAG,MAAM,EAAE;IAClC,UAAU,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAC9D,SAAS;IACT,QAAQ,IAAI,IAAI,IAAI,CAAC;IACrB,QAAQ,IAAI,IAAI,IAAI,CAAC;IACrB,QAAQ,IAAI,GAAG,EAAE,EAAE,MAAM,SAAS,CAAC,EAAE;IACrC,OAAO;IACP,WAAW,IAAI,KAAK,CAAC,IAAI,EAAE;IAC3B,QAAQ,KAAK,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IAClC,OAAO;IACP,MAAM,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;IACxB;IACA,IAAI,KAAK,IAAI;IACb,MAAM,IAAI,KAAK,CAAC,KAAK,GAAG,MAAM,EAAE;IAChC;IACA,QAAQ,OAAO,IAAI,GAAG,EAAE,EAAE;IAC1B,UAAU,IAAI,IAAI,KAAK,CAAC,EAAE,EAAE,MAAM,SAAS,CAAC,EAAE;IAC9C,UAAU,IAAI,EAAE,CAAC;IACjB,UAAU,IAAI,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC;IACxC,UAAU,IAAI,IAAI,CAAC,CAAC;IACpB,SAAS;IACT;IACA,QAAQ,IAAI,IAAI,MAAM,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,EAAE;IAC7C,UAAU,IAAI,CAAC,GAAG,GAAG,qBAAqB,CAAC;IAC3C,UAAU,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;IAC3B,UAAU,MAAM;IAChB,SAAS;IACT;IACA,QAAQ,IAAI,GAAG,CAAC,CAAC;IACjB,QAAQ,IAAI,GAAG,CAAC,CAAC;IACjB;IACA,OAAO;IACP,MAAM,IAAI,KAAK,CAAC,IAAI,EAAE;IACtB,QAAQ,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACnD,QAAQ,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IAC/B,OAAO;IACP,MAAM,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;IACnC,MAAM,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;IACxB,MAAM,MAAM;IACZ,IAAI,KAAK,MAAM;IACf;IACA,MAAM,OAAO,IAAI,GAAG,EAAE,EAAE;IACxB,QAAQ,IAAI,IAAI,KAAK,CAAC,EAAE,EAAE,MAAM,SAAS,CAAC,EAAE;IAC5C,QAAQ,IAAI,EAAE,CAAC;IACf,QAAQ,IAAI,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC;IACtC,QAAQ,IAAI,IAAI,CAAC,CAAC;IAClB,OAAO;IACP;IACA,MAAM,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;IAC/C;IACA,MAAM,IAAI,GAAG,CAAC,CAAC;IACf,MAAM,IAAI,GAAG,CAAC,CAAC;IACf;IACA,MAAM,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;IACxB;IACA,IAAI,KAAK,IAAI;IACb,MAAM,IAAI,KAAK,CAAC,QAAQ,KAAK,CAAC,EAAE;IAChC;IACA,QAAQ,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;IAC5B,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IAC9B,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IAC5B,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IAC7B,QAAQ,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;IAC1B,QAAQ,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;IAC1B;IACA,QAAQ,OAAO,WAAW,CAAC;IAC3B,OAAO;IACP,MAAM,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,GAAG,CAAC,2BAA2B;IAC7D,MAAM,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;IACxB;IACA,IAAI,KAAK,IAAI;IACb,MAAM,IAAI,KAAK,KAAK,OAAO,IAAI,KAAK,KAAK,OAAO,EAAE,EAAE,MAAM,SAAS,CAAC,EAAE;IACtE;IACA,IAAI,KAAK,MAAM;IACf,MAAM,IAAI,KAAK,CAAC,IAAI,EAAE;IACtB;IACA,QAAQ,IAAI,MAAM,IAAI,GAAG,CAAC,CAAC;IAC3B,QAAQ,IAAI,IAAI,IAAI,GAAG,CAAC,CAAC;IACzB;IACA,QAAQ,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC;IAC3B,QAAQ,MAAM;IACd,OAAO;IACP;IACA,MAAM,OAAO,IAAI,GAAG,CAAC,EAAE;IACvB,QAAQ,IAAI,IAAI,KAAK,CAAC,EAAE,EAAE,MAAM,SAAS,CAAC,EAAE;IAC5C,QAAQ,IAAI,EAAE,CAAC;IACf,QAAQ,IAAI,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC;IACtC,QAAQ,IAAI,IAAI,CAAC,CAAC;IAClB,OAAO;IACP;IACA,MAAM,KAAK,CAAC,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,YAAY;IAC5C;IACA,MAAM,IAAI,MAAM,CAAC,CAAC;IAClB,MAAM,IAAI,IAAI,CAAC,CAAC;IAChB;AACA;IACA,MAAM,SAAS,IAAI,GAAG,IAAI;IAC1B,MAAM,KAAK,CAAC;IACZ;IACA;IACA,QAAQ,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC;IAC5B,QAAQ,MAAM;IACd,MAAM,KAAK,CAAC;IACZ,QAAQ,WAAW,CAAC,KAAK,CAAC,CAAC;IAC3B;IACA;IACA,QAAQ,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;IAC1B,QAAQ,IAAI,KAAK,KAAK,OAAO,EAAE;IAC/B;IACA,UAAU,IAAI,MAAM,CAAC,CAAC;IACtB,UAAU,IAAI,IAAI,CAAC,CAAC;IACpB;IACA,UAAU,MAAM,SAAS,CAAC;IAC1B,SAAS;IACT,QAAQ,MAAM;IACd,MAAM,KAAK,CAAC;IACZ;IACA;IACA,QAAQ,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC;IAC3B,QAAQ,MAAM;IACd,MAAM,KAAK,CAAC;IACZ,QAAQ,IAAI,CAAC,GAAG,GAAG,oBAAoB,CAAC;IACxC,QAAQ,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;IACzB,OAAO;IACP;IACA,MAAM,IAAI,MAAM,CAAC,CAAC;IAClB,MAAM,IAAI,IAAI,CAAC,CAAC;IAChB;IACA,MAAM,MAAM;IACZ,IAAI,KAAK,MAAM;IACf;IACA,MAAM,IAAI,MAAM,IAAI,GAAG,CAAC,CAAC;IACzB,MAAM,IAAI,IAAI,IAAI,GAAG,CAAC,CAAC;IACvB;IACA;IACA,MAAM,OAAO,IAAI,GAAG,EAAE,EAAE;IACxB,QAAQ,IAAI,IAAI,KAAK,CAAC,EAAE,EAAE,MAAM,SAAS,CAAC,EAAE;IAC5C,QAAQ,IAAI,EAAE,CAAC;IACf,QAAQ,IAAI,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC;IACtC,QAAQ,IAAI,IAAI,CAAC,CAAC;IAClB,OAAO;IACP;IACA,MAAM,IAAI,CAAC,IAAI,GAAG,MAAM,OAAO,CAAC,IAAI,KAAK,EAAE,IAAI,MAAM,CAAC,EAAE;IACxD,QAAQ,IAAI,CAAC,GAAG,GAAG,8BAA8B,CAAC;IAClD,QAAQ,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;IACzB,QAAQ,MAAM;IACd,OAAO;IACP,MAAM,KAAK,CAAC,MAAM,GAAG,IAAI,GAAG,MAAM,CAAC;IACnC;IACA;IACA;IACA,MAAM,IAAI,GAAG,CAAC,CAAC;IACf,MAAM,IAAI,GAAG,CAAC,CAAC;IACf;IACA,MAAM,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC;IACzB,MAAM,IAAI,KAAK,KAAK,OAAO,EAAE,EAAE,MAAM,SAAS,CAAC,EAAE;IACjD;IACA,IAAI,KAAK,KAAK;IACd,MAAM,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;IACxB;IACA,IAAI,KAAK,IAAI;IACb,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC;IAC1B,MAAM,IAAI,IAAI,EAAE;IAChB,QAAQ,IAAI,IAAI,GAAG,IAAI,EAAE,EAAE,IAAI,GAAG,IAAI,CAAC,EAAE;IACzC,QAAQ,IAAI,IAAI,GAAG,IAAI,EAAE,EAAE,IAAI,GAAG,IAAI,CAAC,EAAE;IACzC,QAAQ,IAAI,IAAI,KAAK,CAAC,EAAE,EAAE,MAAM,SAAS,CAAC,EAAE;IAC5C;IACA,QAAQ,QAAQ,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;IACjD;IACA,QAAQ,IAAI,IAAI,IAAI,CAAC;IACrB,QAAQ,IAAI,IAAI,IAAI,CAAC;IACrB,QAAQ,IAAI,IAAI,IAAI,CAAC;IACrB,QAAQ,GAAG,IAAI,IAAI,CAAC;IACpB,QAAQ,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC;IAC7B,QAAQ,MAAM;IACd,OAAO;IACP;IACA,MAAM,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;IACxB,MAAM,MAAM;IACZ,IAAI,KAAK,KAAK;IACd;IACA,MAAM,OAAO,IAAI,GAAG,EAAE,EAAE;IACxB,QAAQ,IAAI,IAAI,KAAK,CAAC,EAAE,EAAE,MAAM,SAAS,CAAC,EAAE;IAC5C,QAAQ,IAAI,EAAE,CAAC;IACf,QAAQ,IAAI,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC;IACtC,QAAQ,IAAI,IAAI,CAAC,CAAC;IAClB,OAAO;IACP;IACA,MAAM,KAAK,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,IAAI,eAAe,GAAG,CAAC;IAClD;IACA,MAAM,IAAI,MAAM,CAAC,CAAC;IAClB,MAAM,IAAI,IAAI,CAAC,CAAC;IAChB;IACA,MAAM,KAAK,CAAC,KAAK,GAAG,CAAC,IAAI,GAAG,IAAI,eAAe,CAAC,CAAC;IACjD;IACA,MAAM,IAAI,MAAM,CAAC,CAAC;IAClB,MAAM,IAAI,IAAI,CAAC,CAAC;IAChB;IACA,MAAM,KAAK,CAAC,KAAK,GAAG,CAAC,IAAI,GAAG,IAAI,eAAe,CAAC,CAAC;IACjD;IACA,MAAM,IAAI,MAAM,CAAC,CAAC;IAClB,MAAM,IAAI,IAAI,CAAC,CAAC;IAChB;IACA;IACA,MAAM,IAAI,KAAK,CAAC,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,KAAK,GAAG,EAAE,EAAE;IAChD,QAAQ,IAAI,CAAC,GAAG,GAAG,qCAAqC,CAAC;IACzD,QAAQ,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;IACzB,QAAQ,MAAM;IACd,OAAO;IACP;IACA;IACA,MAAM,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC;IACrB,MAAM,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC;IAC3B;IACA,IAAI,KAAK,OAAO;IAChB,MAAM,OAAO,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,KAAK,EAAE;IACvC;IACA,QAAQ,OAAO,IAAI,GAAG,CAAC,EAAE;IACzB,UAAU,IAAI,IAAI,KAAK,CAAC,EAAE,EAAE,MAAM,SAAS,CAAC,EAAE;IAC9C,UAAU,IAAI,EAAE,CAAC;IACjB,UAAU,IAAI,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC;IACxC,UAAU,IAAI,IAAI,CAAC,CAAC;IACpB,SAAS;IACT;IACA,QAAQ,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC;IACxD;IACA,QAAQ,IAAI,MAAM,CAAC,CAAC;IACpB,QAAQ,IAAI,IAAI,CAAC,CAAC;IAClB;IACA,OAAO;IACP,MAAM,OAAO,KAAK,CAAC,IAAI,GAAG,EAAE,EAAE;IAC9B,QAAQ,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;IAC5C,OAAO;IACP;IACA;IACA;IACA;IACA,MAAM,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC;IACnC,MAAM,KAAK,CAAC,OAAO,GAAG,CAAC,CAAC;AACxB;IACA,MAAM,IAAI,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC;IACrC,MAAM,GAAG,GAAG,aAAa,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACxF,MAAM,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;AAChC;IACA,MAAM,IAAI,GAAG,EAAE;IACf,QAAQ,IAAI,CAAC,GAAG,GAAG,0BAA0B,CAAC;IAC9C,QAAQ,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;IACzB,QAAQ,MAAM;IACd,OAAO;IACP;IACA,MAAM,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC;IACrB,MAAM,KAAK,CAAC,IAAI,GAAG,QAAQ,CAAC;IAC5B;IACA,IAAI,KAAK,QAAQ;IACjB,MAAM,OAAO,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,KAAK,EAAE;IACpD,QAAQ,SAAS;IACjB,UAAU,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;IAClE,UAAU,SAAS,GAAG,IAAI,KAAK,EAAE,CAAC;IAClC,UAAU,OAAO,GAAG,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,CAAC;IACzC,UAAU,QAAQ,GAAG,IAAI,GAAG,MAAM,CAAC;AACnC;IACA,UAAU,IAAI,CAAC,SAAS,KAAK,IAAI,EAAE,EAAE,MAAM,EAAE;IAC7C;IACA,UAAU,IAAI,IAAI,KAAK,CAAC,EAAE,EAAE,MAAM,SAAS,CAAC,EAAE;IAC9C,UAAU,IAAI,EAAE,CAAC;IACjB,UAAU,IAAI,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC;IACxC,UAAU,IAAI,IAAI,CAAC,CAAC;IACpB;IACA,SAAS;IACT,QAAQ,IAAI,QAAQ,GAAG,EAAE,EAAE;IAC3B;IACA,UAAU,IAAI,MAAM,SAAS,CAAC;IAC9B,UAAU,IAAI,IAAI,SAAS,CAAC;IAC5B;IACA,UAAU,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,GAAG,QAAQ,CAAC;IAC9C,SAAS;IACT,aAAa;IACb,UAAU,IAAI,QAAQ,KAAK,EAAE,EAAE;IAC/B;IACA,YAAY,CAAC,GAAG,SAAS,GAAG,CAAC,CAAC;IAC9B,YAAY,OAAO,IAAI,GAAG,CAAC,EAAE;IAC7B,cAAc,IAAI,IAAI,KAAK,CAAC,EAAE,EAAE,MAAM,SAAS,CAAC,EAAE;IAClD,cAAc,IAAI,EAAE,CAAC;IACrB,cAAc,IAAI,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC;IAC5C,cAAc,IAAI,IAAI,CAAC,CAAC;IACxB,aAAa;IACb;IACA;IACA,YAAY,IAAI,MAAM,SAAS,CAAC;IAChC,YAAY,IAAI,IAAI,SAAS,CAAC;IAC9B;IACA,YAAY,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,EAAE;IAClC,cAAc,IAAI,CAAC,GAAG,GAAG,2BAA2B,CAAC;IACrD,cAAc,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;IAC/B,cAAc,MAAM;IACpB,aAAa;IACb,YAAY,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;IAC7C,YAAY,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC;IACrC;IACA,YAAY,IAAI,MAAM,CAAC,CAAC;IACxB,YAAY,IAAI,IAAI,CAAC,CAAC;IACtB;IACA,WAAW;IACX,eAAe,IAAI,QAAQ,KAAK,EAAE,EAAE;IACpC;IACA,YAAY,CAAC,GAAG,SAAS,GAAG,CAAC,CAAC;IAC9B,YAAY,OAAO,IAAI,GAAG,CAAC,EAAE;IAC7B,cAAc,IAAI,IAAI,KAAK,CAAC,EAAE,EAAE,MAAM,SAAS,CAAC,EAAE;IAClD,cAAc,IAAI,EAAE,CAAC;IACrB,cAAc,IAAI,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC;IAC5C,cAAc,IAAI,IAAI,CAAC,CAAC;IACxB,aAAa;IACb;IACA;IACA,YAAY,IAAI,MAAM,SAAS,CAAC;IAChC,YAAY,IAAI,IAAI,SAAS,CAAC;IAC9B;IACA,YAAY,GAAG,GAAG,CAAC,CAAC;IACpB,YAAY,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC;IACrC;IACA,YAAY,IAAI,MAAM,CAAC,CAAC;IACxB,YAAY,IAAI,IAAI,CAAC,CAAC;IACtB;IACA,WAAW;IACX,eAAe;IACf;IACA,YAAY,CAAC,GAAG,SAAS,GAAG,CAAC,CAAC;IAC9B,YAAY,OAAO,IAAI,GAAG,CAAC,EAAE;IAC7B,cAAc,IAAI,IAAI,KAAK,CAAC,EAAE,EAAE,MAAM,SAAS,CAAC,EAAE;IAClD,cAAc,IAAI,EAAE,CAAC;IACrB,cAAc,IAAI,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC;IAC5C,cAAc,IAAI,IAAI,CAAC,CAAC;IACxB,aAAa;IACb;IACA;IACA,YAAY,IAAI,MAAM,SAAS,CAAC;IAChC,YAAY,IAAI,IAAI,SAAS,CAAC;IAC9B;IACA,YAAY,GAAG,GAAG,CAAC,CAAC;IACpB,YAAY,IAAI,GAAG,EAAE,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC;IACtC;IACA,YAAY,IAAI,MAAM,CAAC,CAAC;IACxB,YAAY,IAAI,IAAI,CAAC,CAAC;IACtB;IACA,WAAW;IACX,UAAU,IAAI,KAAK,CAAC,IAAI,GAAG,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,KAAK,EAAE;IAC5D,YAAY,IAAI,CAAC,GAAG,GAAG,2BAA2B,CAAC;IACnD,YAAY,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;IAC7B,YAAY,MAAM;IAClB,WAAW;IACX,UAAU,OAAO,IAAI,EAAE,EAAE;IACzB,YAAY,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,GAAG,GAAG,CAAC;IAC3C,WAAW;IACX,SAAS;IACT,OAAO;AACP;IACA;IACA,MAAM,IAAI,KAAK,CAAC,IAAI,KAAK,GAAG,EAAE,EAAE,MAAM,EAAE;AACxC;IACA;IACA,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;IACjC,QAAQ,IAAI,CAAC,GAAG,GAAG,sCAAsC,CAAC;IAC1D,QAAQ,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;IACzB,QAAQ,MAAM;IACd,OAAO;AACP;IACA;IACA;IACA;IACA,MAAM,KAAK,CAAC,OAAO,GAAG,CAAC,CAAC;AACxB;IACA,MAAM,IAAI,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC;IACrC,MAAM,GAAG,GAAG,aAAa,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC/F;IACA;IACA,MAAM,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;IAChC;AACA;IACA,MAAM,IAAI,GAAG,EAAE;IACf,QAAQ,IAAI,CAAC,GAAG,GAAG,6BAA6B,CAAC;IACjD,QAAQ,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;IACzB,QAAQ,MAAM;IACd,OAAO;AACP;IACA,MAAM,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC;IACzB;IACA;IACA,MAAM,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC;IACrC,MAAM,IAAI,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,QAAQ,EAAE,CAAC;IACtC,MAAM,GAAG,GAAG,aAAa,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,QAAQ,EAAE,CAAC,EAAE,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC3G;IACA;IACA,MAAM,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;IACjC;AACA;IACA,MAAM,IAAI,GAAG,EAAE;IACf,QAAQ,IAAI,CAAC,GAAG,GAAG,uBAAuB,CAAC;IAC3C,QAAQ,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;IACzB,QAAQ,MAAM;IACd,OAAO;IACP;IACA,MAAM,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;IACxB,MAAM,IAAI,KAAK,KAAK,OAAO,EAAE,EAAE,MAAM,SAAS,CAAC,EAAE;IACjD;IACA,IAAI,KAAK,IAAI;IACb,MAAM,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;IACvB;IACA,IAAI,KAAK,GAAG;IACZ,MAAM,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,GAAG,EAAE;IACpC;IACA,QAAQ,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;IAC5B,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IAC9B,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IAC5B,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IAC7B,QAAQ,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;IAC1B,QAAQ,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;IAC1B;IACA,QAAQ,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACjC;IACA,QAAQ,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC;IAC5B,QAAQ,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;IAC7B,QAAQ,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;IAC9B,QAAQ,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC;IAC5B,QAAQ,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IAC3B,QAAQ,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC;IAC7B,QAAQ,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;IAC1B,QAAQ,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;IAC1B;AACA;IACA,QAAQ,IAAI,KAAK,CAAC,IAAI,KAAK,IAAI,EAAE;IACjC,UAAU,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;IAC1B,SAAS;IACT,QAAQ,MAAM;IACd,OAAO;IACP,MAAM,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC;IACrB,MAAM,SAAS;IACf,QAAQ,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;IAChE,QAAQ,SAAS,GAAG,IAAI,KAAK,EAAE,CAAC;IAChC,QAAQ,OAAO,GAAG,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,CAAC;IACvC,QAAQ,QAAQ,GAAG,IAAI,GAAG,MAAM,CAAC;AACjC;IACA,QAAQ,IAAI,SAAS,IAAI,IAAI,EAAE,EAAE,MAAM,EAAE;IACzC;IACA,QAAQ,IAAI,IAAI,KAAK,CAAC,EAAE,EAAE,MAAM,SAAS,CAAC,EAAE;IAC5C,QAAQ,IAAI,EAAE,CAAC;IACf,QAAQ,IAAI,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC;IACtC,QAAQ,IAAI,IAAI,CAAC,CAAC;IAClB;IACA,OAAO;IACP,MAAM,IAAI,OAAO,IAAI,CAAC,OAAO,GAAG,IAAI,MAAM,CAAC,EAAE;IAC7C,QAAQ,SAAS,GAAG,SAAS,CAAC;IAC9B,QAAQ,OAAO,GAAG,OAAO,CAAC;IAC1B,QAAQ,QAAQ,GAAG,QAAQ,CAAC;IAC5B,QAAQ,SAAS;IACjB,UAAU,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ;IACvC,mBAAmB,CAAC,IAAI,IAAI,CAAC,CAAC,KAAK,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,kCAAkC,SAAS,CAAC,CAAC,CAAC;IAC3G,UAAU,SAAS,GAAG,IAAI,KAAK,EAAE,CAAC;IAClC,UAAU,OAAO,GAAG,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,CAAC;IACzC,UAAU,QAAQ,GAAG,IAAI,GAAG,MAAM,CAAC;AACnC;IACA,UAAU,IAAI,CAAC,SAAS,GAAG,SAAS,KAAK,IAAI,EAAE,EAAE,MAAM,EAAE;IACzD;IACA,UAAU,IAAI,IAAI,KAAK,CAAC,EAAE,EAAE,MAAM,SAAS,CAAC,EAAE;IAC9C,UAAU,IAAI,EAAE,CAAC;IACjB,UAAU,IAAI,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC;IACxC,UAAU,IAAI,IAAI,CAAC,CAAC;IACpB;IACA,SAAS;IACT;IACA,QAAQ,IAAI,MAAM,SAAS,CAAC;IAC5B,QAAQ,IAAI,IAAI,SAAS,CAAC;IAC1B;IACA,QAAQ,KAAK,CAAC,IAAI,IAAI,SAAS,CAAC;IAChC,OAAO;IACP;IACA,MAAM,IAAI,MAAM,SAAS,CAAC;IAC1B,MAAM,IAAI,IAAI,SAAS,CAAC;IACxB;IACA,MAAM,KAAK,CAAC,IAAI,IAAI,SAAS,CAAC;IAC9B,MAAM,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC9B,MAAM,IAAI,OAAO,KAAK,CAAC,EAAE;IACzB;IACA;IACA;IACA,QAAQ,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;IACzB,QAAQ,MAAM;IACd,OAAO;IACP,MAAM,IAAI,OAAO,GAAG,EAAE,EAAE;IACxB;IACA,QAAQ,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;IACxB,QAAQ,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;IAC1B,QAAQ,MAAM;IACd,OAAO;IACP,MAAM,IAAI,OAAO,GAAG,EAAE,EAAE;IACxB,QAAQ,IAAI,CAAC,GAAG,GAAG,6BAA6B,CAAC;IACjD,QAAQ,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;IACzB,QAAQ,MAAM;IACd,OAAO;IACP,MAAM,KAAK,CAAC,KAAK,GAAG,OAAO,GAAG,EAAE,CAAC;IACjC,MAAM,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC;IAC1B;IACA,IAAI,KAAK,MAAM;IACf,MAAM,IAAI,KAAK,CAAC,KAAK,EAAE;IACvB;IACA,QAAQ,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC;IACxB,QAAQ,OAAO,IAAI,GAAG,CAAC,EAAE;IACzB,UAAU,IAAI,IAAI,KAAK,CAAC,EAAE,EAAE,MAAM,SAAS,CAAC,EAAE;IAC9C,UAAU,IAAI,EAAE,CAAC;IACjB,UAAU,IAAI,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC;IACxC,UAAU,IAAI,IAAI,CAAC,CAAC;IACpB,SAAS;IACT;IACA,QAAQ,KAAK,CAAC,MAAM,IAAI,IAAI,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,CAAC,sBAAsB;IAC7E;IACA,QAAQ,IAAI,MAAM,KAAK,CAAC,KAAK,CAAC;IAC9B,QAAQ,IAAI,IAAI,KAAK,CAAC,KAAK,CAAC;IAC5B;IACA,QAAQ,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,KAAK,CAAC;IAClC,OAAO;IACP;IACA,MAAM,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC;IAC/B,MAAM,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;IACxB;IACA,IAAI,KAAK,IAAI;IACb,MAAM,SAAS;IACf,QAAQ,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,QAAQ,IAAI,CAAC,CAAC,CAAC,CAAC;IAClE,QAAQ,SAAS,GAAG,IAAI,KAAK,EAAE,CAAC;IAChC,QAAQ,OAAO,GAAG,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,CAAC;IACvC,QAAQ,QAAQ,GAAG,IAAI,GAAG,MAAM,CAAC;AACjC;IACA,QAAQ,IAAI,CAAC,SAAS,KAAK,IAAI,EAAE,EAAE,MAAM,EAAE;IAC3C;IACA,QAAQ,IAAI,IAAI,KAAK,CAAC,EAAE,EAAE,MAAM,SAAS,CAAC,EAAE;IAC5C,QAAQ,IAAI,EAAE,CAAC;IACf,QAAQ,IAAI,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC;IACtC,QAAQ,IAAI,IAAI,CAAC,CAAC;IAClB;IACA,OAAO;IACP,MAAM,IAAI,CAAC,OAAO,GAAG,IAAI,MAAM,CAAC,EAAE;IAClC,QAAQ,SAAS,GAAG,SAAS,CAAC;IAC9B,QAAQ,OAAO,GAAG,OAAO,CAAC;IAC1B,QAAQ,QAAQ,GAAG,QAAQ,CAAC;IAC5B,QAAQ,SAAS;IACjB,UAAU,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC,QAAQ;IACxC,mBAAmB,CAAC,IAAI,IAAI,CAAC,CAAC,KAAK,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,kCAAkC,SAAS,CAAC,CAAC,CAAC;IAC3G,UAAU,SAAS,GAAG,IAAI,KAAK,EAAE,CAAC;IAClC,UAAU,OAAO,GAAG,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,CAAC;IACzC,UAAU,QAAQ,GAAG,IAAI,GAAG,MAAM,CAAC;AACnC;IACA,UAAU,IAAI,CAAC,SAAS,GAAG,SAAS,KAAK,IAAI,EAAE,EAAE,MAAM,EAAE;IACzD;IACA,UAAU,IAAI,IAAI,KAAK,CAAC,EAAE,EAAE,MAAM,SAAS,CAAC,EAAE;IAC9C,UAAU,IAAI,EAAE,CAAC;IACjB,UAAU,IAAI,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC;IACxC,UAAU,IAAI,IAAI,CAAC,CAAC;IACpB;IACA,SAAS;IACT;IACA,QAAQ,IAAI,MAAM,SAAS,CAAC;IAC5B,QAAQ,IAAI,IAAI,SAAS,CAAC;IAC1B;IACA,QAAQ,KAAK,CAAC,IAAI,IAAI,SAAS,CAAC;IAChC,OAAO;IACP;IACA,MAAM,IAAI,MAAM,SAAS,CAAC;IAC1B,MAAM,IAAI,IAAI,SAAS,CAAC;IACxB;IACA,MAAM,KAAK,CAAC,IAAI,IAAI,SAAS,CAAC;IAC9B,MAAM,IAAI,OAAO,GAAG,EAAE,EAAE;IACxB,QAAQ,IAAI,CAAC,GAAG,GAAG,uBAAuB,CAAC;IAC3C,QAAQ,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;IACzB,QAAQ,MAAM;IACd,OAAO;IACP,MAAM,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC9B,MAAM,KAAK,CAAC,KAAK,GAAG,CAAC,OAAO,IAAI,EAAE,CAAC;IACnC,MAAM,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC;IAC3B;IACA,IAAI,KAAK,OAAO;IAChB,MAAM,IAAI,KAAK,CAAC,KAAK,EAAE;IACvB;IACA,QAAQ,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC;IACxB,QAAQ,OAAO,IAAI,GAAG,CAAC,EAAE;IACzB,UAAU,IAAI,IAAI,KAAK,CAAC,EAAE,EAAE,MAAM,SAAS,CAAC,EAAE;IAC9C,UAAU,IAAI,EAAE,CAAC;IACjB,UAAU,IAAI,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC;IACxC,UAAU,IAAI,IAAI,CAAC,CAAC;IACpB,SAAS;IACT;IACA,QAAQ,KAAK,CAAC,MAAM,IAAI,IAAI,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,CAAC,sBAAsB;IAC7E;IACA,QAAQ,IAAI,MAAM,KAAK,CAAC,KAAK,CAAC;IAC9B,QAAQ,IAAI,IAAI,KAAK,CAAC,KAAK,CAAC;IAC5B;IACA,QAAQ,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,KAAK,CAAC;IAClC,OAAO;IACP;IACA,MAAM,IAAI,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,IAAI,EAAE;IACrC,QAAQ,IAAI,CAAC,GAAG,GAAG,+BAA+B,CAAC;IACnD,QAAQ,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;IACzB,QAAQ,MAAM;IACd,OAAO;IACP;IACA;IACA,MAAM,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC;IACzB;IACA,IAAI,KAAK,KAAK;IACd,MAAM,IAAI,IAAI,KAAK,CAAC,EAAE,EAAE,MAAM,SAAS,CAAC,EAAE;IAC1C,MAAM,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC;IACzB,MAAM,IAAI,KAAK,CAAC,MAAM,GAAG,IAAI,EAAE;IAC/B,QAAQ,IAAI,GAAG,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;IACnC,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,KAAK,EAAE;IAChC,UAAU,IAAI,KAAK,CAAC,IAAI,EAAE;IAC1B,YAAY,IAAI,CAAC,GAAG,GAAG,+BAA+B,CAAC;IACvD,YAAY,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;IAC7B,YAAY,MAAM;IAClB,WAAW;IACX;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS;IACT,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,KAAK,EAAE;IAChC,UAAU,IAAI,IAAI,KAAK,CAAC,KAAK,CAAC;IAC9B,UAAU,IAAI,GAAG,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC;IACpC,SAAS;IACT,aAAa;IACb,UAAU,IAAI,GAAG,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC;IACpC,SAAS;IACT,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,EAAE;IACzD,QAAQ,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC;IACnC,OAAO;IACP,WAAW;IACX,QAAQ,WAAW,GAAG,MAAM,CAAC;IAC7B,QAAQ,IAAI,GAAG,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC;IAClC,QAAQ,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC;IAC5B,OAAO;IACP,MAAM,IAAI,IAAI,GAAG,IAAI,EAAE,EAAE,IAAI,GAAG,IAAI,CAAC,EAAE;IACvC,MAAM,IAAI,IAAI,IAAI,CAAC;IACnB,MAAM,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC;IAC3B,MAAM,GAAG;IACT,QAAQ,MAAM,CAAC,GAAG,EAAE,CAAC,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC;IAC5C,OAAO,QAAQ,EAAE,IAAI,EAAE;IACvB,MAAM,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC,EAAE;IACnD,MAAM,MAAM;IACZ,IAAI,KAAK,GAAG;IACZ,MAAM,IAAI,IAAI,KAAK,CAAC,EAAE,EAAE,MAAM,SAAS,CAAC,EAAE;IAC1C,MAAM,MAAM,CAAC,GAAG,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC;IACnC,MAAM,IAAI,EAAE,CAAC;IACb,MAAM,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;IACvB,MAAM,MAAM;IACZ,IAAI,KAAK,KAAK;IACd,MAAM,IAAI,KAAK,CAAC,IAAI,EAAE;IACtB;IACA,QAAQ,OAAO,IAAI,GAAG,EAAE,EAAE;IAC1B,UAAU,IAAI,IAAI,KAAK,CAAC,EAAE,EAAE,MAAM,SAAS,CAAC,EAAE;IAC9C,UAAU,IAAI,EAAE,CAAC;IACjB;IACA,UAAU,IAAI,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC;IACxC,UAAU,IAAI,IAAI,CAAC,CAAC;IACpB,SAAS;IACT;IACA,QAAQ,IAAI,IAAI,IAAI,CAAC;IACrB,QAAQ,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC;IAC/B,QAAQ,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC;IAC5B,QAAQ,IAAI,IAAI,EAAE;IAClB,UAAU,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK;IAClC;IACA,eAAe,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC;AAC5H;IACA,SAAS;IACT,QAAQ,IAAI,GAAG,IAAI,CAAC;IACpB;IACA,QAAQ,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,KAAK,EAAE;IAClE,UAAU,IAAI,CAAC,GAAG,GAAG,sBAAsB,CAAC;IAC5C,UAAU,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;IAC3B,UAAU,MAAM;IAChB,SAAS;IACT;IACA,QAAQ,IAAI,GAAG,CAAC,CAAC;IACjB,QAAQ,IAAI,GAAG,CAAC,CAAC;IACjB;IACA;IACA,OAAO;IACP,MAAM,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC;IAC1B;IACA,IAAI,KAAK,MAAM;IACf,MAAM,IAAI,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,KAAK,EAAE;IACrC;IACA,QAAQ,OAAO,IAAI,GAAG,EAAE,EAAE;IAC1B,UAAU,IAAI,IAAI,KAAK,CAAC,EAAE,EAAE,MAAM,SAAS,CAAC,EAAE;IAC9C,UAAU,IAAI,EAAE,CAAC;IACjB,UAAU,IAAI,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC;IACxC,UAAU,IAAI,IAAI,CAAC,CAAC;IACpB,SAAS;IACT;IACA,QAAQ,IAAI,IAAI,MAAM,KAAK,CAAC,KAAK,GAAG,UAAU,CAAC,EAAE;IACjD,UAAU,IAAI,CAAC,GAAG,GAAG,wBAAwB,CAAC;IAC9C,UAAU,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;IAC3B,UAAU,MAAM;IAChB,SAAS;IACT;IACA,QAAQ,IAAI,GAAG,CAAC,CAAC;IACjB,QAAQ,IAAI,GAAG,CAAC,CAAC;IACjB;IACA;IACA,OAAO;IACP,MAAM,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;IACxB;IACA,IAAI,KAAK,IAAI;IACb,MAAM,GAAG,GAAG,YAAY,CAAC;IACzB,MAAM,MAAM,SAAS,CAAC;IACtB,IAAI,KAAK,GAAG;IACZ,MAAM,GAAG,GAAG,YAAY,CAAC;IACzB,MAAM,MAAM,SAAS,CAAC;IACtB,IAAI,KAAK,GAAG;IACZ,MAAM,OAAO,WAAW,CAAC;IACzB,IAAI,KAAK,IAAI,CAAC;IACd;IACA,IAAI;IACJ,MAAM,OAAO,cAAc,CAAC;IAC5B,KAAK;IACL,GAAG;AACH;IACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA,EAAE,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;IACtB,EAAE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,EAAE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACtB,EAAE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACvB,EAAE,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;IACpB,EAAE,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;IACpB;AACA;IACA,EAAE,IAAI,KAAK,CAAC,KAAK,KAAK,IAAI,KAAK,IAAI,CAAC,SAAS,IAAI,KAAK,CAAC,IAAI,GAAG,GAAG;IACjE,uBAAuB,KAAK,CAAC,IAAI,GAAG,KAAK,IAAI,KAAK,KAAK,QAAQ,CAAC,CAAC,EAAE;IACnE,IAAI,IAAI,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,CAG1E;IACL,GAAG;IACH,EAAE,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC;IACvB,EAAE,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC;IACzB,EAAE,IAAI,CAAC,QAAQ,IAAI,GAAG,CAAC;IACvB,EAAE,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC;IACzB,EAAE,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC;IACtB,EAAE,IAAI,KAAK,CAAC,IAAI,IAAI,IAAI,EAAE;IAC1B,IAAI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK;IAC5B,OAAO,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC;IACxI,GAAG;IACH,EAAE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC;IACrD,qBAAqB,KAAK,CAAC,IAAI,KAAK,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;IACnD,qBAAqB,KAAK,CAAC,IAAI,KAAK,IAAI,IAAI,KAAK,CAAC,IAAI,KAAK,KAAK,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;IAC5E,EAAE,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,KAAK,KAAK,KAAK,QAAQ,KAAK,GAAG,KAAK,IAAI,EAAE;IACzE,IAAI,GAAG,GAAG,WAAW,CAAC;IACtB,GAAG;IACH,EAAE,OAAO,GAAG,CAAC;IACb,CAAC;AACD;IACA,SAAS,UAAU,CAAC,IAAI,EAAE;AAC1B;IACA,EAAE,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,qCAAqC;IAC/D,IAAI,OAAO,cAAc,CAAC;IAC1B,GAAG;AACH;IACA,EAAE,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IACzB,EAAE,IAAI,KAAK,CAAC,MAAM,EAAE;IACpB,IAAI,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;IACxB,GAAG;IACH,EAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACpB,EAAE,OAAO,IAAI,CAAC;IACd,CAAC;AACD;IACA,SAAS,gBAAgB,CAAC,IAAI,EAAE,IAAI,EAAE;IACtC,EAAE,IAAI,KAAK,CAAC;AACZ;IACA;IACA,EAAE,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,OAAO,cAAc,CAAC,EAAE;IACtD,EAAE,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IACrB,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,cAAc,CAAC,EAAE;AACxD;IACA;IACA,EAAE,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;IACpB,EAAE,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;IACpB,EAAE,OAAO,IAAI,CAAC;IACd,CAAC;AACD;IACA,SAAS,oBAAoB,CAAC,IAAI,EAAE,UAAU,EAAE;IAChD,EAAE,IAAI,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC;AACrC;IACA,EAAE,IAAI,KAAK,CAAC;IACZ,EAAE,IAAI,MAAM,CAAC;IACb,EAAE,IAAI,GAAG,CAAC;AACV;IACA;IACA,EAAE,IAAI,CAAC,IAAI,oBAAoB,CAAC,IAAI,CAAC,KAAK,kBAAkB,EAAE,OAAO,cAAc,CAAC,EAAE;IACtF,EAAE,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AACrB;IACA,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,IAAI,EAAE;IAC/C,IAAI,OAAO,cAAc,CAAC;IAC1B,GAAG;AACH;IACA;IACA,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,IAAI,EAAE;IAC3B,IAAI,MAAM,GAAG,CAAC,CAAC;IACf;IACA,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,CAAC,CAAC;IACxD,IAAI,IAAI,MAAM,KAAK,KAAK,CAAC,KAAK,EAAE;IAChC,MAAM,OAAO,YAAY,CAAC;IAC1B,KAAK;IACL,GAAG;IACH;IACA;IACA,EAAE,GAAG,GAAG,YAAY,CAAC,IAAI,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;IAC/D,EAAE,IAAI,GAAG,EAAE;IACX,IAAI,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;IACrB,IAAI,OAAO,WAAW,CAAC;IACvB,GAAG;IACH,EAAE,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC;IACrB;IACA,EAAE,OAAO,IAAI,CAAC;IACd,CAAC;AACD;IACA;IACA;AACA;AACA;IACA;AACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,YAAY,GAAG,IAAI,CAAC;IACxB,IAAI,gBAAgB,GAAG,IAAI,CAAC;AAC5B;IACA,IAAI,EAAE,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,EAAE,EAAE,YAAY,GAAG,KAAK,CAAC,EAAE;IACpF,IAAI,EAAE,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,EAAE,EAAE,gBAAgB,GAAG,KAAK,CAAC,EAAE;AACpG;AACA;IACA;IACA;IACA;IACA,IAAI,QAAQ,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC,CAAC;IACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;IAC9B,EAAE,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAC/F,CAAC;IACD,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAClC;AACA;IACA;IACA,SAAS,UAAU,CAAC,GAAG,EAAE;IACzB,EAAE,IAAI,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,OAAO,GAAG,GAAG,CAAC,MAAM,EAAE,OAAO,GAAG,CAAC,CAAC;AAC9D;IACA;IACA,EAAE,KAAK,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,OAAO,EAAE,KAAK,EAAE,EAAE;IAC5C,IAAI,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC9B,IAAI,IAAI,CAAC,CAAC,GAAG,MAAM,MAAM,MAAM,KAAK,KAAK,GAAG,CAAC,GAAG,OAAO,CAAC,EAAE;IAC1D,MAAM,EAAE,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;IACrC,MAAM,IAAI,CAAC,EAAE,GAAG,MAAM,MAAM,MAAM,EAAE;IACpC,QAAQ,CAAC,GAAG,OAAO,IAAI,CAAC,CAAC,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC;IAC3D,QAAQ,KAAK,EAAE,CAAC;IAChB,OAAO;IACP,KAAK;IACL,IAAI,OAAO,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;IAClE,GAAG;AACH;IACA;IACA,EAAE,GAAG,GAAG,IAAI,UAAU,CAAC,OAAO,CAAC,CAAC;AAChC;IACA;IACA,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,KAAK,EAAE,EAAE;IAC/C,IAAI,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IAC9B,IAAI,IAAI,CAAC,CAAC,GAAG,MAAM,MAAM,MAAM,KAAK,KAAK,GAAG,CAAC,GAAG,OAAO,CAAC,EAAE;IAC1D,MAAM,EAAE,GAAG,GAAG,CAAC,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;IACrC,MAAM,IAAI,CAAC,EAAE,GAAG,MAAM,MAAM,MAAM,EAAE;IACpC,QAAQ,CAAC,GAAG,OAAO,IAAI,CAAC,CAAC,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC;IAC3D,QAAQ,KAAK,EAAE,CAAC;IAChB,OAAO;IACP,KAAK;IACL,IAAI,IAAI,CAAC,GAAG,IAAI,EAAE;IAClB;IACA,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;IACnB,KAAK,MAAM,IAAI,CAAC,GAAG,KAAK,EAAE;IAC1B;IACA,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IAClC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;IACnC,KAAK,MAAM,IAAI,CAAC,GAAG,OAAO,EAAE;IAC5B;IACA,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;IACnC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;IACzC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;IACnC,KAAK,MAAM;IACX;IACA,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;IACnC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC,CAAC;IAC1C,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;IACzC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;IACnC,KAAK;IACL,GAAG;AACH;IACA,EAAE,OAAO,GAAG,CAAC;IACb,CAAC;AACD;IACA;IACA,SAAS,cAAc,CAAC,GAAG,EAAE,GAAG,EAAE;IAClC;IACA,EAAE,IAAI,GAAG,GAAG,KAAK,EAAE;IACnB,IAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,IAAI,gBAAgB,MAAM,CAAC,GAAG,CAAC,QAAQ,IAAI,YAAY,CAAC,EAAE;IAC/E,MAAM,OAAO,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;IAClE,KAAK;IACL,GAAG;AACH;IACA,EAAE,IAAI,MAAM,GAAG,EAAE,CAAC;IAClB,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;IAChC,IAAI,MAAM,IAAI,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1C,GAAG;IACH,EAAE,OAAO,MAAM,CAAC;IAChB,CAAC;AACD;AACA;IACA;IACA,SAAS,aAAa,CAAC,GAAG,EAAE;IAC5B,EAAE,IAAI,GAAG,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACvC,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;IAClD,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IAC/B,GAAG;IACH,EAAE,OAAO,GAAG,CAAC;IACb,CAAC;AACD;AACA;IACA;IACA,SAAS,UAAU,CAAC,GAAG,EAAE,GAAG,EAAE;IAC9B,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,KAAK,CAAC;IACvB,EAAE,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC;AAC9B;IACA;IACA;IACA;IACA,EAAE,IAAI,QAAQ,GAAG,IAAI,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;AACpC;IACA,EAAE,KAAK,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG;IACjC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IACjB;IACA,IAAI,IAAI,CAAC,GAAG,IAAI,EAAE,EAAE,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,EAAE;AACpD;IACA,IAAI,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;IACxB;IACA,IAAI,IAAI,KAAK,GAAG,CAAC,EAAE,EAAE,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC,SAAS,EAAE;AAC1E;IACA;IACA,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC,GAAG,IAAI,GAAG,KAAK,KAAK,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;IACxD;IACA,IAAI,OAAO,KAAK,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,EAAE;IACjC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;IACvC,MAAM,KAAK,EAAE,CAAC;IACd,KAAK;AACL;IACA;IACA,IAAI,IAAI,KAAK,GAAG,CAAC,EAAE,EAAE,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,MAAM,CAAC,CAAC,SAAS,EAAE;AAC1D;IACA,IAAI,IAAI,CAAC,GAAG,OAAO,EAAE;IACrB,MAAM,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;IAC1B,KAAK,MAAM;IACX,MAAM,CAAC,IAAI,OAAO,CAAC;IACnB,MAAM,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,MAAM,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,KAAK,CAAC,CAAC;IACrD,MAAM,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,MAAM,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC;IAC7C,KAAK;IACL,GAAG;AACH;IACA,EAAE,OAAO,cAAc,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;IACvC,CAAC;AACD;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,UAAU,CAAC,GAAG,EAAE,GAAG,EAAE;IAC9B,EAAE,IAAI,GAAG,CAAC;AACV;IACA,EAAE,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC;IAC1B,EAAE,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,EAAE,EAAE,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE;AAC7C;IACA;IACA,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;IAChB,EAAE,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,MAAM,IAAI,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE;AAC3D;IACA;IACA;IACA,EAAE,IAAI,GAAG,GAAG,CAAC,EAAE,EAAE,OAAO,GAAG,CAAC,EAAE;AAC9B;IACA;IACA;IACA,EAAE,IAAI,GAAG,KAAK,CAAC,EAAE,EAAE,OAAO,GAAG,CAAC,EAAE;AAChC;IACA,EAAE,OAAO,CAAC,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,CAAC;IACtD,CAAC;AACD;IACA;IACA,IAAI,UAAU,UAAU,CAAC,CAAC;IAC1B,IAAI,YAAY,QAAQ,CAAC,CAAC;IAC1B,IAAI,UAAU,YAAY,CAAC,CAAC;IAC5B;IACA;IACA;IACA,IAAI,MAAM,iBAAiB,CAAC,CAAC;IAC7B,IAAI,cAAc,SAAS,CAAC,CAAC;IAC7B,IAAI,aAAa,UAAU,CAAC,CAAC;IAC7B;IACA,IAAI,aAAa,SAAS,CAAC,CAAC,CAAC;AAC7B;IACA;AACA;IACA,IAAI,QAAQ,GAAG;IACf,EAAE,CAAC,OAAO,iBAAiB;IAC3B,EAAE,CAAC,OAAO,YAAY;IACtB,EAAE,CAAC,OAAO,EAAE;IACZ,EAAE,IAAI,IAAI,YAAY;IACtB,EAAE,IAAI,IAAI,cAAc;IACxB,EAAE,IAAI,IAAI,YAAY;IACtB,EAAE,IAAI,IAAI,qBAAqB;IAC/B,EAAE,IAAI,IAAI,cAAc;IACxB,EAAE,IAAI,IAAI,sBAAsB;IAChC,CAAC,CAAC;AACF;IACA;AACA;AACA;IACA,SAAS,OAAO,GAAG;IACnB;IACA,EAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACpB,EAAE,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;IACnB;IACA,EAAE,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;IACpB;IACA,EAAE,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;IACpB;IACA,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACrB,EAAE,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;IACpB;IACA,EAAE,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;IACrB;IACA,EAAE,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;IACrB;IACA,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE,WAAW;IAC1B;IACA,EAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACpB;IACA,EAAE,IAAI,CAAC,SAAS,GAAG,CAAC,cAAc;IAClC;IACA,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,CAAC;AACD;IACA;AACA;AACA;IACA,SAAS,QAAQ,GAAG;IACpB;IACA,EAAE,IAAI,CAAC,IAAI,SAAS,CAAC,CAAC;IACtB;IACA,EAAE,IAAI,CAAC,IAAI,SAAS,CAAC,CAAC;IACtB;IACA,EAAE,IAAI,CAAC,MAAM,OAAO,CAAC,CAAC;IACtB;IACA,EAAE,IAAI,CAAC,EAAE,WAAW,CAAC,CAAC;IACtB;IACA,EAAE,IAAI,CAAC,KAAK,QAAQ,IAAI,CAAC;IACzB;IACA,EAAE,IAAI,CAAC,SAAS,IAAI,CAAC,CAAC;IACtB;AACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA,EAAE,IAAI,CAAC,IAAI,SAAS,EAAE,CAAC;IACvB;IACA;IACA;IACA,EAAE,IAAI,CAAC,OAAO,MAAM,EAAE,CAAC;IACvB;IACA;IACA;IACA,EAAE,IAAI,CAAC,IAAI,SAAS,CAAC,CAAC;IACtB;IACA,EAAE,IAAI,CAAC,IAAI,SAAS,KAAK,CAAC;IAC1B,CAAC;AACD;IACA;AACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA,IAAI,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;AACzC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA;IACA;AACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,OAAO,CAAC,OAAO,EAAE;IAC1B,EAAE,IAAI,EAAE,IAAI,YAAY,OAAO,CAAC,EAAE,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;AAC9D;IACA,EAAE,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IACxB,IAAI,SAAS,EAAE,KAAK;IACpB,IAAI,UAAU,EAAE,CAAC;IACjB,IAAI,EAAE,EAAE,EAAE;IACV,GAAG,EAAE,OAAO,IAAI,EAAE,CAAC,CAAC;AACpB;IACA,EAAE,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC;AACzB;IACA;IACA;IACA,EAAE,IAAI,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,UAAU,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,UAAU,GAAG,EAAE,CAAC,EAAE;IACjE,IAAI,GAAG,CAAC,UAAU,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC;IACrC,IAAI,IAAI,GAAG,CAAC,UAAU,KAAK,CAAC,EAAE,EAAE,GAAG,CAAC,UAAU,GAAG,CAAC,EAAE,CAAC,EAAE;IACvD,GAAG;AACH;IACA;IACA,EAAE,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"}